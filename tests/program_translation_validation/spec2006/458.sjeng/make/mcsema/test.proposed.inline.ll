; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x62dab4_type = type <{ [4 x i8] }>
%G_0x62dab8_type = type <{ [4 x i8] }>
%G_0x62e4fc_type = type <{ [4 x i8] }>
%G_0x62e500_type = type <{ [4 x i8] }>
%G_0x633b40_type = type <{ [4 x i8] }>
%G_0x63ae48_type = type <{ [4 x i8] }>
%G_0x85f154_type = type <{ [1 x i8] }>
%G_0x8661bc_type = type <{ [4 x i8] }>
%G_0x8661c0_type = type <{ [4 x i8] }>
%G_0x8661d0_type = type <{ [4 x i8] }>
%G_0x866358_type = type <{ [4 x i8] }>
%G_0x866364_type = type <{ [4 x i8] }>
%G_0x86636c_type = type <{ [4 x i8] }>
%G_0x866374_type = type <{ [4 x i8] }>
%G_0x8664a8_type = type <{ [4 x i8] }>
%G_0x8664b4_type = type <{ [4 x i8] }>
%G_0x8664bc_type = type <{ [4 x i8] }>
%G_0x8664c4_type = type <{ [4 x i8] }>
%G_0x8665a8_type = type <{ [4 x i8] }>
%G_0x8665b4_type = type <{ [4 x i8] }>
%G_0x8665bc_type = type <{ [4 x i8] }>
%G_0x8665c4_type = type <{ [4 x i8] }>
%G_0x8666f8_type = type <{ [4 x i8] }>
%G_0x866704_type = type <{ [4 x i8] }>
%G_0x86670c_type = type <{ [4 x i8] }>
%G_0x866714_type = type <{ [4 x i8] }>
%G_0x866790_type = type <{ [4 x i8] }>
%G_0x86bd7c_type = type <{ [4 x i8] }>
%G_0x881de4_type = type <{ [4 x i8] }>
%G_0x882418_type = type <{ [4 x i8] }>
%G_0x882424_type = type <{ [4 x i8] }>
%G_0x88242c_type = type <{ [4 x i8] }>
%G_0x882434_type = type <{ [4 x i8] }>
%G_0x882568_type = type <{ [4 x i8] }>
%G_0x882574_type = type <{ [4 x i8] }>
%G_0x88257c_type = type <{ [4 x i8] }>
%G_0x882584_type = type <{ [4 x i8] }>
%G_0x886bc0_type = type <{ [4 x i8] }>
%G_0x8a1aa8_type = type <{ [4 x i8] }>
%G_0x8a1ab4_type = type <{ [4 x i8] }>
%G_0x8a1abc_type = type <{ [4 x i8] }>
%G_0x8a1ac4_type = type <{ [4 x i8] }>
%G_0x8a1e38_type = type <{ [4 x i8] }>
%G_0x8a1e44_type = type <{ [4 x i8] }>
%G_0x8a1e4c_type = type <{ [4 x i8] }>
%G_0x8a1e54_type = type <{ [4 x i8] }>
%G__0x880b20_type = type <{ [8 x i8] }>
%G__0x8a0a80_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x62dab4 = global %G_0x62dab4_type zeroinitializer
@G_0x62dab8 = global %G_0x62dab8_type zeroinitializer
@G_0x62e4fc = global %G_0x62e4fc_type zeroinitializer
@G_0x62e500 = global %G_0x62e500_type zeroinitializer
@G_0x633b40 = global %G_0x633b40_type zeroinitializer
@G_0x63ae48 = global %G_0x63ae48_type zeroinitializer
@G_0x85f154 = global %G_0x85f154_type zeroinitializer
@G_0x8661bc = global %G_0x8661bc_type zeroinitializer
@G_0x8661c0 = global %G_0x8661c0_type zeroinitializer
@G_0x8661d0 = global %G_0x8661d0_type zeroinitializer
@G_0x866358 = global %G_0x866358_type zeroinitializer
@G_0x866364 = global %G_0x866364_type zeroinitializer
@G_0x86636c = global %G_0x86636c_type zeroinitializer
@G_0x866374 = global %G_0x866374_type zeroinitializer
@G_0x8664a8 = global %G_0x8664a8_type zeroinitializer
@G_0x8664b4 = global %G_0x8664b4_type zeroinitializer
@G_0x8664bc = global %G_0x8664bc_type zeroinitializer
@G_0x8664c4 = global %G_0x8664c4_type zeroinitializer
@G_0x8665a8 = global %G_0x8665a8_type zeroinitializer
@G_0x8665b4 = global %G_0x8665b4_type zeroinitializer
@G_0x8665bc = global %G_0x8665bc_type zeroinitializer
@G_0x8665c4 = global %G_0x8665c4_type zeroinitializer
@G_0x8666f8 = global %G_0x8666f8_type zeroinitializer
@G_0x866704 = global %G_0x866704_type zeroinitializer
@G_0x86670c = global %G_0x86670c_type zeroinitializer
@G_0x866714 = global %G_0x866714_type zeroinitializer
@G_0x866790 = global %G_0x866790_type zeroinitializer
@G_0x86bd7c = global %G_0x86bd7c_type zeroinitializer
@G_0x881de4 = global %G_0x881de4_type zeroinitializer
@G_0x882418 = global %G_0x882418_type zeroinitializer
@G_0x882424 = global %G_0x882424_type zeroinitializer
@G_0x88242c = global %G_0x88242c_type zeroinitializer
@G_0x882434 = global %G_0x882434_type zeroinitializer
@G_0x882568 = global %G_0x882568_type zeroinitializer
@G_0x882574 = global %G_0x882574_type zeroinitializer
@G_0x88257c = global %G_0x88257c_type zeroinitializer
@G_0x882584 = global %G_0x882584_type zeroinitializer
@G_0x886bc0 = global %G_0x886bc0_type zeroinitializer
@G_0x8a1aa8 = global %G_0x8a1aa8_type zeroinitializer
@G_0x8a1ab4 = global %G_0x8a1ab4_type zeroinitializer
@G_0x8a1abc = global %G_0x8a1abc_type zeroinitializer
@G_0x8a1ac4 = global %G_0x8a1ac4_type zeroinitializer
@G_0x8a1e38 = global %G_0x8a1e38_type zeroinitializer
@G_0x8a1e44 = global %G_0x8a1e44_type zeroinitializer
@G_0x8a1e4c = global %G_0x8a1e4c_type zeroinitializer
@G_0x8a1e54 = global %G_0x8a1e54_type zeroinitializer
@G__0x880b20 = global %G__0x880b20_type zeroinitializer
@G__0x8a0a80 = global %G__0x8a0a80_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4027b0.DropremoveHolding(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4024b0.SwitchPromoted(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4024f0.addHolding(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_402470.SwitchColor(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @make(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40b730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40b730, %struct.Memory** %MEMORY
  %loadMem_40b731 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1693 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1694 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1695 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1694
  %27 = load i64, i64* %PC.i1693
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1693
  store i64 %26, i64* %RBP.i1695, align 8
  store %struct.Memory* %loadMem_40b731, %struct.Memory** %MEMORY
  %loadMem_40b734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1691 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1692 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1692
  %36 = load i64, i64* %PC.i1691
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i1691
  %38 = sub i64 %35, 64
  store i64 %38, i64* %RSP.i1692, align 8
  %39 = icmp ult i64 %35, 64
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 64, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40b734, %struct.Memory** %MEMORY
  %loadMem_40b738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1689 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i1690 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %PC.i1689
  %74 = add i64 %73, 10
  store i64 %74, i64* %PC.i1689
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1690, align 8
  store %struct.Memory* %loadMem_40b738, %struct.Memory** %MEMORY
  %loadMem_40b742 = load %struct.Memory*, %struct.Memory** %MEMORY
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 33
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %PC.i1686 = bitcast %union.anon* %77 to i64*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 11
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %RDI.i1687 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 15
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %RBP.i1688 = bitcast %union.anon* %83 to i64*
  %84 = load i64, i64* %RBP.i1688
  %85 = sub i64 %84, 8
  %86 = load i64, i64* %RDI.i1687
  %87 = load i64, i64* %PC.i1686
  %88 = add i64 %87, 4
  store i64 %88, i64* %PC.i1686
  %89 = inttoptr i64 %85 to i64*
  store i64 %86, i64* %89
  store %struct.Memory* %loadMem_40b742, %struct.Memory** %MEMORY
  %loadMem_40b746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 33
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %PC.i1683 = bitcast %union.anon* %92 to i64*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 9
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %ESI.i1684 = bitcast %union.anon* %95 to i32*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 15
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %RBP.i1685 = bitcast %union.anon* %98 to i64*
  %99 = load i64, i64* %RBP.i1685
  %100 = sub i64 %99, 12
  %101 = load i32, i32* %ESI.i1684
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC.i1683
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC.i1683
  %105 = inttoptr i64 %100 to i32*
  store i32 %101, i32* %105
  store %struct.Memory* %loadMem_40b746, %struct.Memory** %MEMORY
  %loadMem_40b749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i1680 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 11
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %RDI.i1681 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1682 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1682
  %116 = sub i64 %115, 8
  %117 = load i64, i64* %PC.i1680
  %118 = add i64 %117, 4
  store i64 %118, i64* %PC.i1680
  %119 = inttoptr i64 %116 to i64*
  %120 = load i64, i64* %119
  store i64 %120, i64* %RDI.i1681, align 8
  store %struct.Memory* %loadMem_40b749, %struct.Memory** %MEMORY
  %loadMem_40b74d = load %struct.Memory*, %struct.Memory** %MEMORY
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 33
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %PC.i1677 = bitcast %union.anon* %123 to i64*
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 5
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %RCX.i1678 = bitcast %union.anon* %126 to i64*
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.GPR, %struct.GPR* %127, i32 0, i32 15
  %129 = getelementptr inbounds %struct.Reg, %struct.Reg* %128, i32 0, i32 0
  %RBP.i1679 = bitcast %union.anon* %129 to i64*
  %130 = load i64, i64* %RBP.i1679
  %131 = sub i64 %130, 12
  %132 = load i64, i64* %PC.i1677
  %133 = add i64 %132, 4
  store i64 %133, i64* %PC.i1677
  %134 = inttoptr i64 %131 to i32*
  %135 = load i32, i32* %134
  %136 = sext i32 %135 to i64
  store i64 %136, i64* %RCX.i1678, align 8
  store %struct.Memory* %loadMem_40b74d, %struct.Memory** %MEMORY
  %loadMem_40b751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 33
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %PC.i1675 = bitcast %union.anon* %139 to i64*
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 5
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %RCX.i1676 = bitcast %union.anon* %142 to i64*
  %143 = load i64, i64* %RCX.i1676
  %144 = load i64, i64* %PC.i1675
  %145 = add i64 %144, 4
  store i64 %145, i64* %PC.i1675
  %146 = sext i64 %143 to i128
  %147 = and i128 %146, -18446744073709551616
  %148 = zext i64 %143 to i128
  %149 = or i128 %147, %148
  %150 = mul i128 24, %149
  %151 = trunc i128 %150 to i64
  store i64 %151, i64* %RCX.i1676, align 8
  %152 = sext i64 %151 to i128
  %153 = icmp ne i128 %152, %150
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %154, i8* %155, align 1
  %156 = trunc i128 %150 to i32
  %157 = and i32 %156, 255
  %158 = call i32 @llvm.ctpop.i32(i32 %157)
  %159 = trunc i32 %158 to i8
  %160 = and i8 %159, 1
  %161 = xor i8 %160, 1
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %161, i8* %162, align 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %163, align 1
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %164, align 1
  %165 = lshr i64 %151, 63
  %166 = trunc i64 %165 to i8
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %166, i8* %167, align 1
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %168, align 1
  store %struct.Memory* %loadMem_40b751, %struct.Memory** %MEMORY
  %loadMem_40b755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 33
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 5
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RCX.i1673 = bitcast %union.anon* %174 to i64*
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 11
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %RDI.i1674 = bitcast %union.anon* %177 to i64*
  %178 = load i64, i64* %RDI.i1674
  %179 = load i64, i64* %RCX.i1673
  %180 = load i64, i64* %PC.i1672
  %181 = add i64 %180, 3
  store i64 %181, i64* %PC.i1672
  %182 = add i64 %179, %178
  store i64 %182, i64* %RDI.i1674, align 8
  %183 = icmp ult i64 %182, %178
  %184 = icmp ult i64 %182, %179
  %185 = or i1 %183, %184
  %186 = zext i1 %185 to i8
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %186, i8* %187, align 1
  %188 = trunc i64 %182 to i32
  %189 = and i32 %188, 255
  %190 = call i32 @llvm.ctpop.i32(i32 %189)
  %191 = trunc i32 %190 to i8
  %192 = and i8 %191, 1
  %193 = xor i8 %192, 1
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %193, i8* %194, align 1
  %195 = xor i64 %179, %178
  %196 = xor i64 %195, %182
  %197 = lshr i64 %196, 4
  %198 = trunc i64 %197 to i8
  %199 = and i8 %198, 1
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %199, i8* %200, align 1
  %201 = icmp eq i64 %182, 0
  %202 = zext i1 %201 to i8
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %202, i8* %203, align 1
  %204 = lshr i64 %182, 63
  %205 = trunc i64 %204 to i8
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %205, i8* %206, align 1
  %207 = lshr i64 %178, 63
  %208 = lshr i64 %179, 63
  %209 = xor i64 %204, %207
  %210 = xor i64 %204, %208
  %211 = add i64 %209, %210
  %212 = icmp eq i64 %211, 2
  %213 = zext i1 %212 to i8
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %213, i8* %214, align 1
  store %struct.Memory* %loadMem_40b755, %struct.Memory** %MEMORY
  %loadMem_40b758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 33
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %PC.i1669 = bitcast %union.anon* %217 to i64*
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 9
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %RSI.i1670 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 11
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RDI.i1671 = bitcast %union.anon* %223 to i64*
  %224 = load i64, i64* %RDI.i1671
  %225 = add i64 %224, 20
  %226 = load i64, i64* %PC.i1669
  %227 = add i64 %226, 3
  store i64 %227, i64* %PC.i1669
  %228 = inttoptr i64 %225 to i32*
  %229 = load i32, i32* %228
  %230 = zext i32 %229 to i64
  store i64 %230, i64* %RSI.i1670, align 8
  store %struct.Memory* %loadMem_40b758, %struct.Memory** %MEMORY
  %loadMem_40b75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 33
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 9
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %ESI.i1667 = bitcast %union.anon* %236 to i32*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 15
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RBP.i1668 = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %RBP.i1668
  %241 = sub i64 %240, 16
  %242 = load i32, i32* %ESI.i1667
  %243 = zext i32 %242 to i64
  %244 = load i64, i64* %PC.i1666
  %245 = add i64 %244, 3
  store i64 %245, i64* %PC.i1666
  %246 = inttoptr i64 %241 to i32*
  store i32 %242, i32* %246
  store %struct.Memory* %loadMem_40b75b, %struct.Memory** %MEMORY
  %loadMem_40b75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 33
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %PC.i1663 = bitcast %union.anon* %249 to i64*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 5
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %RCX.i1664 = bitcast %union.anon* %252 to i64*
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 15
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %RBP.i1665 = bitcast %union.anon* %255 to i64*
  %256 = load i64, i64* %RBP.i1665
  %257 = sub i64 %256, 8
  %258 = load i64, i64* %PC.i1663
  %259 = add i64 %258, 4
  store i64 %259, i64* %PC.i1663
  %260 = inttoptr i64 %257 to i64*
  %261 = load i64, i64* %260
  store i64 %261, i64* %RCX.i1664, align 8
  store %struct.Memory* %loadMem_40b75e, %struct.Memory** %MEMORY
  %loadMem_40b762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 33
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 11
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %RDI.i1661 = bitcast %union.anon* %267 to i64*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 15
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %RBP.i1662 = bitcast %union.anon* %270 to i64*
  %271 = load i64, i64* %RBP.i1662
  %272 = sub i64 %271, 12
  %273 = load i64, i64* %PC.i1660
  %274 = add i64 %273, 4
  store i64 %274, i64* %PC.i1660
  %275 = inttoptr i64 %272 to i32*
  %276 = load i32, i32* %275
  %277 = sext i32 %276 to i64
  store i64 %277, i64* %RDI.i1661, align 8
  store %struct.Memory* %loadMem_40b762, %struct.Memory** %MEMORY
  %loadMem_40b766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 33
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %PC.i1658 = bitcast %union.anon* %280 to i64*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 11
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %RDI.i1659 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RDI.i1659
  %285 = load i64, i64* %PC.i1658
  %286 = add i64 %285, 4
  store i64 %286, i64* %PC.i1658
  %287 = sext i64 %284 to i128
  %288 = and i128 %287, -18446744073709551616
  %289 = zext i64 %284 to i128
  %290 = or i128 %288, %289
  %291 = mul i128 24, %290
  %292 = trunc i128 %291 to i64
  store i64 %292, i64* %RDI.i1659, align 8
  %293 = sext i64 %292 to i128
  %294 = icmp ne i128 %293, %291
  %295 = zext i1 %294 to i8
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %295, i8* %296, align 1
  %297 = trunc i128 %291 to i32
  %298 = and i32 %297, 255
  %299 = call i32 @llvm.ctpop.i32(i32 %298)
  %300 = trunc i32 %299 to i8
  %301 = and i8 %300, 1
  %302 = xor i8 %301, 1
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %302, i8* %303, align 1
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %304, align 1
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %305, align 1
  %306 = lshr i64 %292, 63
  %307 = trunc i64 %306 to i8
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %307, i8* %308, align 1
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %295, i8* %309, align 1
  store %struct.Memory* %loadMem_40b766, %struct.Memory** %MEMORY
  %loadMem_40b76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 33
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %PC.i1655 = bitcast %union.anon* %312 to i64*
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %314 = getelementptr inbounds %struct.GPR, %struct.GPR* %313, i32 0, i32 5
  %315 = getelementptr inbounds %struct.Reg, %struct.Reg* %314, i32 0, i32 0
  %RCX.i1656 = bitcast %union.anon* %315 to i64*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %317 = getelementptr inbounds %struct.GPR, %struct.GPR* %316, i32 0, i32 11
  %318 = getelementptr inbounds %struct.Reg, %struct.Reg* %317, i32 0, i32 0
  %RDI.i1657 = bitcast %union.anon* %318 to i64*
  %319 = load i64, i64* %RCX.i1656
  %320 = load i64, i64* %RDI.i1657
  %321 = load i64, i64* %PC.i1655
  %322 = add i64 %321, 3
  store i64 %322, i64* %PC.i1655
  %323 = add i64 %320, %319
  store i64 %323, i64* %RCX.i1656, align 8
  %324 = icmp ult i64 %323, %319
  %325 = icmp ult i64 %323, %320
  %326 = or i1 %324, %325
  %327 = zext i1 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %327, i8* %328, align 1
  %329 = trunc i64 %323 to i32
  %330 = and i32 %329, 255
  %331 = call i32 @llvm.ctpop.i32(i32 %330)
  %332 = trunc i32 %331 to i8
  %333 = and i8 %332, 1
  %334 = xor i8 %333, 1
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %334, i8* %335, align 1
  %336 = xor i64 %320, %319
  %337 = xor i64 %336, %323
  %338 = lshr i64 %337, 4
  %339 = trunc i64 %338 to i8
  %340 = and i8 %339, 1
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %340, i8* %341, align 1
  %342 = icmp eq i64 %323, 0
  %343 = zext i1 %342 to i8
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %343, i8* %344, align 1
  %345 = lshr i64 %323, 63
  %346 = trunc i64 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %346, i8* %347, align 1
  %348 = lshr i64 %319, 63
  %349 = lshr i64 %320, 63
  %350 = xor i64 %345, %348
  %351 = xor i64 %345, %349
  %352 = add i64 %350, %351
  %353 = icmp eq i64 %352, 2
  %354 = zext i1 %353 to i8
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %354, i8* %355, align 1
  store %struct.Memory* %loadMem_40b76a, %struct.Memory** %MEMORY
  %loadMem_40b76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %358 to i64*
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 5
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %RCX.i1653 = bitcast %union.anon* %361 to i64*
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 9
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %RSI.i1654 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %RCX.i1653
  %366 = load i64, i64* %PC.i1652
  %367 = add i64 %366, 2
  store i64 %367, i64* %PC.i1652
  %368 = inttoptr i64 %365 to i32*
  %369 = load i32, i32* %368
  %370 = zext i32 %369 to i64
  store i64 %370, i64* %RSI.i1654, align 8
  store %struct.Memory* %loadMem_40b76d, %struct.Memory** %MEMORY
  %loadMem_40b76f = load %struct.Memory*, %struct.Memory** %MEMORY
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 33
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %373 to i64*
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 9
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %ESI.i1650 = bitcast %union.anon* %376 to i32*
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 15
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %RBP.i1651 = bitcast %union.anon* %379 to i64*
  %380 = load i64, i64* %RBP.i1651
  %381 = sub i64 %380, 20
  %382 = load i32, i32* %ESI.i1650
  %383 = zext i32 %382 to i64
  %384 = load i64, i64* %PC.i1649
  %385 = add i64 %384, 3
  store i64 %385, i64* %PC.i1649
  %386 = inttoptr i64 %381 to i32*
  store i32 %382, i32* %386
  store %struct.Memory* %loadMem_40b76f, %struct.Memory** %MEMORY
  %loadMem_40b772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 33
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %PC.i1646 = bitcast %union.anon* %389 to i64*
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %391 = getelementptr inbounds %struct.GPR, %struct.GPR* %390, i32 0, i32 5
  %392 = getelementptr inbounds %struct.Reg, %struct.Reg* %391, i32 0, i32 0
  %RCX.i1647 = bitcast %union.anon* %392 to i64*
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 15
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %RBP.i1648 = bitcast %union.anon* %395 to i64*
  %396 = load i64, i64* %RBP.i1648
  %397 = sub i64 %396, 8
  %398 = load i64, i64* %PC.i1646
  %399 = add i64 %398, 4
  store i64 %399, i64* %PC.i1646
  %400 = inttoptr i64 %397 to i64*
  %401 = load i64, i64* %400
  store i64 %401, i64* %RCX.i1647, align 8
  store %struct.Memory* %loadMem_40b772, %struct.Memory** %MEMORY
  %loadMem_40b776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 33
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %PC.i1643 = bitcast %union.anon* %404 to i64*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 11
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RDI.i1644 = bitcast %union.anon* %407 to i64*
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 15
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %RBP.i1645 = bitcast %union.anon* %410 to i64*
  %411 = load i64, i64* %RBP.i1645
  %412 = sub i64 %411, 12
  %413 = load i64, i64* %PC.i1643
  %414 = add i64 %413, 4
  store i64 %414, i64* %PC.i1643
  %415 = inttoptr i64 %412 to i32*
  %416 = load i32, i32* %415
  %417 = sext i32 %416 to i64
  store i64 %417, i64* %RDI.i1644, align 8
  store %struct.Memory* %loadMem_40b776, %struct.Memory** %MEMORY
  %loadMem_40b77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 33
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %420 to i64*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 11
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %RDI.i1642 = bitcast %union.anon* %423 to i64*
  %424 = load i64, i64* %RDI.i1642
  %425 = load i64, i64* %PC.i1641
  %426 = add i64 %425, 4
  store i64 %426, i64* %PC.i1641
  %427 = sext i64 %424 to i128
  %428 = and i128 %427, -18446744073709551616
  %429 = zext i64 %424 to i128
  %430 = or i128 %428, %429
  %431 = mul i128 24, %430
  %432 = trunc i128 %431 to i64
  store i64 %432, i64* %RDI.i1642, align 8
  %433 = sext i64 %432 to i128
  %434 = icmp ne i128 %433, %431
  %435 = zext i1 %434 to i8
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %435, i8* %436, align 1
  %437 = trunc i128 %431 to i32
  %438 = and i32 %437, 255
  %439 = call i32 @llvm.ctpop.i32(i32 %438)
  %440 = trunc i32 %439 to i8
  %441 = and i8 %440, 1
  %442 = xor i8 %441, 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %442, i8* %443, align 1
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %444, align 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %445, align 1
  %446 = lshr i64 %432, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %435, i8* %449, align 1
  store %struct.Memory* %loadMem_40b77a, %struct.Memory** %MEMORY
  %loadMem_40b77e = load %struct.Memory*, %struct.Memory** %MEMORY
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 33
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %PC.i1638 = bitcast %union.anon* %452 to i64*
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 5
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %RCX.i1639 = bitcast %union.anon* %455 to i64*
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 11
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %RDI.i1640 = bitcast %union.anon* %458 to i64*
  %459 = load i64, i64* %RCX.i1639
  %460 = load i64, i64* %RDI.i1640
  %461 = load i64, i64* %PC.i1638
  %462 = add i64 %461, 3
  store i64 %462, i64* %PC.i1638
  %463 = add i64 %460, %459
  store i64 %463, i64* %RCX.i1639, align 8
  %464 = icmp ult i64 %463, %459
  %465 = icmp ult i64 %463, %460
  %466 = or i1 %464, %465
  %467 = zext i1 %466 to i8
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %467, i8* %468, align 1
  %469 = trunc i64 %463 to i32
  %470 = and i32 %469, 255
  %471 = call i32 @llvm.ctpop.i32(i32 %470)
  %472 = trunc i32 %471 to i8
  %473 = and i8 %472, 1
  %474 = xor i8 %473, 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %474, i8* %475, align 1
  %476 = xor i64 %460, %459
  %477 = xor i64 %476, %463
  %478 = lshr i64 %477, 4
  %479 = trunc i64 %478 to i8
  %480 = and i8 %479, 1
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %480, i8* %481, align 1
  %482 = icmp eq i64 %463, 0
  %483 = zext i1 %482 to i8
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %483, i8* %484, align 1
  %485 = lshr i64 %463, 63
  %486 = trunc i64 %485 to i8
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %486, i8* %487, align 1
  %488 = lshr i64 %459, 63
  %489 = lshr i64 %460, 63
  %490 = xor i64 %485, %488
  %491 = xor i64 %485, %489
  %492 = add i64 %490, %491
  %493 = icmp eq i64 %492, 2
  %494 = zext i1 %493 to i8
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %494, i8* %495, align 1
  store %struct.Memory* %loadMem_40b77e, %struct.Memory** %MEMORY
  %loadMem_40b781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 33
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %PC.i1635 = bitcast %union.anon* %498 to i64*
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 5
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %RCX.i1636 = bitcast %union.anon* %501 to i64*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 9
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %RSI.i1637 = bitcast %union.anon* %504 to i64*
  %505 = load i64, i64* %RCX.i1636
  %506 = add i64 %505, 4
  %507 = load i64, i64* %PC.i1635
  %508 = add i64 %507, 3
  store i64 %508, i64* %PC.i1635
  %509 = inttoptr i64 %506 to i32*
  %510 = load i32, i32* %509
  %511 = zext i32 %510 to i64
  store i64 %511, i64* %RSI.i1637, align 8
  store %struct.Memory* %loadMem_40b781, %struct.Memory** %MEMORY
  %loadMem_40b784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 33
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %PC.i1632 = bitcast %union.anon* %514 to i64*
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %516 = getelementptr inbounds %struct.GPR, %struct.GPR* %515, i32 0, i32 9
  %517 = getelementptr inbounds %struct.Reg, %struct.Reg* %516, i32 0, i32 0
  %ESI.i1633 = bitcast %union.anon* %517 to i32*
  %518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %519 = getelementptr inbounds %struct.GPR, %struct.GPR* %518, i32 0, i32 15
  %520 = getelementptr inbounds %struct.Reg, %struct.Reg* %519, i32 0, i32 0
  %RBP.i1634 = bitcast %union.anon* %520 to i64*
  %521 = load i64, i64* %RBP.i1634
  %522 = sub i64 %521, 24
  %523 = load i32, i32* %ESI.i1633
  %524 = zext i32 %523 to i64
  %525 = load i64, i64* %PC.i1632
  %526 = add i64 %525, 3
  store i64 %526, i64* %PC.i1632
  %527 = inttoptr i64 %522 to i32*
  store i32 %523, i32* %527
  store %struct.Memory* %loadMem_40b784, %struct.Memory** %MEMORY
  %loadMem_40b787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 33
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %530 to i64*
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %532 = getelementptr inbounds %struct.GPR, %struct.GPR* %531, i32 0, i32 5
  %533 = getelementptr inbounds %struct.Reg, %struct.Reg* %532, i32 0, i32 0
  %RCX.i1630 = bitcast %union.anon* %533 to i64*
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %535 = getelementptr inbounds %struct.GPR, %struct.GPR* %534, i32 0, i32 15
  %536 = getelementptr inbounds %struct.Reg, %struct.Reg* %535, i32 0, i32 0
  %RBP.i1631 = bitcast %union.anon* %536 to i64*
  %537 = load i64, i64* %RBP.i1631
  %538 = sub i64 %537, 8
  %539 = load i64, i64* %PC.i1629
  %540 = add i64 %539, 4
  store i64 %540, i64* %PC.i1629
  %541 = inttoptr i64 %538 to i64*
  %542 = load i64, i64* %541
  store i64 %542, i64* %RCX.i1630, align 8
  store %struct.Memory* %loadMem_40b787, %struct.Memory** %MEMORY
  %loadMem_40b78b = load %struct.Memory*, %struct.Memory** %MEMORY
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 33
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %545 to i64*
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 11
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %RDI.i1627 = bitcast %union.anon* %548 to i64*
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 15
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %RBP.i1628 = bitcast %union.anon* %551 to i64*
  %552 = load i64, i64* %RBP.i1628
  %553 = sub i64 %552, 12
  %554 = load i64, i64* %PC.i1626
  %555 = add i64 %554, 4
  store i64 %555, i64* %PC.i1626
  %556 = inttoptr i64 %553 to i32*
  %557 = load i32, i32* %556
  %558 = sext i32 %557 to i64
  store i64 %558, i64* %RDI.i1627, align 8
  store %struct.Memory* %loadMem_40b78b, %struct.Memory** %MEMORY
  %loadMem_40b78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 33
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %561 to i64*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 11
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RDI.i1625 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RDI.i1625
  %566 = load i64, i64* %PC.i1624
  %567 = add i64 %566, 4
  store i64 %567, i64* %PC.i1624
  %568 = sext i64 %565 to i128
  %569 = and i128 %568, -18446744073709551616
  %570 = zext i64 %565 to i128
  %571 = or i128 %569, %570
  %572 = mul i128 24, %571
  %573 = trunc i128 %572 to i64
  store i64 %573, i64* %RDI.i1625, align 8
  %574 = sext i64 %573 to i128
  %575 = icmp ne i128 %574, %572
  %576 = zext i1 %575 to i8
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %576, i8* %577, align 1
  %578 = trunc i128 %572 to i32
  %579 = and i32 %578, 255
  %580 = call i32 @llvm.ctpop.i32(i32 %579)
  %581 = trunc i32 %580 to i8
  %582 = and i8 %581, 1
  %583 = xor i8 %582, 1
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %583, i8* %584, align 1
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %585, align 1
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %586, align 1
  %587 = lshr i64 %573, 63
  %588 = trunc i64 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %588, i8* %589, align 1
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %576, i8* %590, align 1
  store %struct.Memory* %loadMem_40b78f, %struct.Memory** %MEMORY
  %loadMem_40b793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 33
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %593 to i64*
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 5
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %RCX.i1622 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 11
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RDI.i1623 = bitcast %union.anon* %599 to i64*
  %600 = load i64, i64* %RCX.i1622
  %601 = load i64, i64* %RDI.i1623
  %602 = load i64, i64* %PC.i1621
  %603 = add i64 %602, 3
  store i64 %603, i64* %PC.i1621
  %604 = add i64 %601, %600
  store i64 %604, i64* %RCX.i1622, align 8
  %605 = icmp ult i64 %604, %600
  %606 = icmp ult i64 %604, %601
  %607 = or i1 %605, %606
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %608, i8* %609, align 1
  %610 = trunc i64 %604 to i32
  %611 = and i32 %610, 255
  %612 = call i32 @llvm.ctpop.i32(i32 %611)
  %613 = trunc i32 %612 to i8
  %614 = and i8 %613, 1
  %615 = xor i8 %614, 1
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %615, i8* %616, align 1
  %617 = xor i64 %601, %600
  %618 = xor i64 %617, %604
  %619 = lshr i64 %618, 4
  %620 = trunc i64 %619 to i8
  %621 = and i8 %620, 1
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %621, i8* %622, align 1
  %623 = icmp eq i64 %604, 0
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %624, i8* %625, align 1
  %626 = lshr i64 %604, 63
  %627 = trunc i64 %626 to i8
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %627, i8* %628, align 1
  %629 = lshr i64 %600, 63
  %630 = lshr i64 %601, 63
  %631 = xor i64 %626, %629
  %632 = xor i64 %626, %630
  %633 = add i64 %631, %632
  %634 = icmp eq i64 %633, 2
  %635 = zext i1 %634 to i8
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %635, i8* %636, align 1
  store %struct.Memory* %loadMem_40b793, %struct.Memory** %MEMORY
  %loadMem_40b796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %638 = getelementptr inbounds %struct.GPR, %struct.GPR* %637, i32 0, i32 33
  %639 = getelementptr inbounds %struct.Reg, %struct.Reg* %638, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %639 to i64*
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %641 = getelementptr inbounds %struct.GPR, %struct.GPR* %640, i32 0, i32 5
  %642 = getelementptr inbounds %struct.Reg, %struct.Reg* %641, i32 0, i32 0
  %RCX.i1619 = bitcast %union.anon* %642 to i64*
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %644 = getelementptr inbounds %struct.GPR, %struct.GPR* %643, i32 0, i32 9
  %645 = getelementptr inbounds %struct.Reg, %struct.Reg* %644, i32 0, i32 0
  %RSI.i1620 = bitcast %union.anon* %645 to i64*
  %646 = load i64, i64* %RCX.i1619
  %647 = add i64 %646, 8
  %648 = load i64, i64* %PC.i1618
  %649 = add i64 %648, 3
  store i64 %649, i64* %PC.i1618
  %650 = inttoptr i64 %647 to i32*
  %651 = load i32, i32* %650
  %652 = zext i32 %651 to i64
  store i64 %652, i64* %RSI.i1620, align 8
  store %struct.Memory* %loadMem_40b796, %struct.Memory** %MEMORY
  %loadMem_40b799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %654 = getelementptr inbounds %struct.GPR, %struct.GPR* %653, i32 0, i32 33
  %655 = getelementptr inbounds %struct.Reg, %struct.Reg* %654, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %655 to i64*
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 9
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %ESI.i1616 = bitcast %union.anon* %658 to i32*
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %660 = getelementptr inbounds %struct.GPR, %struct.GPR* %659, i32 0, i32 15
  %661 = getelementptr inbounds %struct.Reg, %struct.Reg* %660, i32 0, i32 0
  %RBP.i1617 = bitcast %union.anon* %661 to i64*
  %662 = load i64, i64* %RBP.i1617
  %663 = sub i64 %662, 28
  %664 = load i32, i32* %ESI.i1616
  %665 = zext i32 %664 to i64
  %666 = load i64, i64* %PC.i1615
  %667 = add i64 %666, 3
  store i64 %667, i64* %PC.i1615
  %668 = inttoptr i64 %663 to i32*
  store i32 %664, i32* %668
  store %struct.Memory* %loadMem_40b799, %struct.Memory** %MEMORY
  %loadMem_40b79c = load %struct.Memory*, %struct.Memory** %MEMORY
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 33
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %671 to i64*
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 5
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %RCX.i1613 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 15
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %677 to i64*
  %678 = load i64, i64* %RBP.i1614
  %679 = sub i64 %678, 8
  %680 = load i64, i64* %PC.i1612
  %681 = add i64 %680, 4
  store i64 %681, i64* %PC.i1612
  %682 = inttoptr i64 %679 to i64*
  %683 = load i64, i64* %682
  store i64 %683, i64* %RCX.i1613, align 8
  store %struct.Memory* %loadMem_40b79c, %struct.Memory** %MEMORY
  %loadMem_40b7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i1609 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 11
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RDI.i1610 = bitcast %union.anon* %689 to i64*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 15
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RBP.i1611 = bitcast %union.anon* %692 to i64*
  %693 = load i64, i64* %RBP.i1611
  %694 = sub i64 %693, 12
  %695 = load i64, i64* %PC.i1609
  %696 = add i64 %695, 4
  store i64 %696, i64* %PC.i1609
  %697 = inttoptr i64 %694 to i32*
  %698 = load i32, i32* %697
  %699 = sext i32 %698 to i64
  store i64 %699, i64* %RDI.i1610, align 8
  store %struct.Memory* %loadMem_40b7a0, %struct.Memory** %MEMORY
  %loadMem_40b7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 33
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %PC.i1607 = bitcast %union.anon* %702 to i64*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 11
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %RDI.i1608 = bitcast %union.anon* %705 to i64*
  %706 = load i64, i64* %RDI.i1608
  %707 = load i64, i64* %PC.i1607
  %708 = add i64 %707, 4
  store i64 %708, i64* %PC.i1607
  %709 = sext i64 %706 to i128
  %710 = and i128 %709, -18446744073709551616
  %711 = zext i64 %706 to i128
  %712 = or i128 %710, %711
  %713 = mul i128 24, %712
  %714 = trunc i128 %713 to i64
  store i64 %714, i64* %RDI.i1608, align 8
  %715 = sext i64 %714 to i128
  %716 = icmp ne i128 %715, %713
  %717 = zext i1 %716 to i8
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %717, i8* %718, align 1
  %719 = trunc i128 %713 to i32
  %720 = and i32 %719, 255
  %721 = call i32 @llvm.ctpop.i32(i32 %720)
  %722 = trunc i32 %721 to i8
  %723 = and i8 %722, 1
  %724 = xor i8 %723, 1
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %724, i8* %725, align 1
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %726, align 1
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %727, align 1
  %728 = lshr i64 %714, 63
  %729 = trunc i64 %728 to i8
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %729, i8* %730, align 1
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %717, i8* %731, align 1
  store %struct.Memory* %loadMem_40b7a4, %struct.Memory** %MEMORY
  %loadMem_40b7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 33
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %PC.i1604 = bitcast %union.anon* %734 to i64*
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 5
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %RCX.i1605 = bitcast %union.anon* %737 to i64*
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 11
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %RDI.i1606 = bitcast %union.anon* %740 to i64*
  %741 = load i64, i64* %RCX.i1605
  %742 = load i64, i64* %RDI.i1606
  %743 = load i64, i64* %PC.i1604
  %744 = add i64 %743, 3
  store i64 %744, i64* %PC.i1604
  %745 = add i64 %742, %741
  store i64 %745, i64* %RCX.i1605, align 8
  %746 = icmp ult i64 %745, %741
  %747 = icmp ult i64 %745, %742
  %748 = or i1 %746, %747
  %749 = zext i1 %748 to i8
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %749, i8* %750, align 1
  %751 = trunc i64 %745 to i32
  %752 = and i32 %751, 255
  %753 = call i32 @llvm.ctpop.i32(i32 %752)
  %754 = trunc i32 %753 to i8
  %755 = and i8 %754, 1
  %756 = xor i8 %755, 1
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %756, i8* %757, align 1
  %758 = xor i64 %742, %741
  %759 = xor i64 %758, %745
  %760 = lshr i64 %759, 4
  %761 = trunc i64 %760 to i8
  %762 = and i8 %761, 1
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %762, i8* %763, align 1
  %764 = icmp eq i64 %745, 0
  %765 = zext i1 %764 to i8
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %765, i8* %766, align 1
  %767 = lshr i64 %745, 63
  %768 = trunc i64 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %768, i8* %769, align 1
  %770 = lshr i64 %741, 63
  %771 = lshr i64 %742, 63
  %772 = xor i64 %767, %770
  %773 = xor i64 %767, %771
  %774 = add i64 %772, %773
  %775 = icmp eq i64 %774, 2
  %776 = zext i1 %775 to i8
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %776, i8* %777, align 1
  store %struct.Memory* %loadMem_40b7a8, %struct.Memory** %MEMORY
  %loadMem_40b7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %779 = getelementptr inbounds %struct.GPR, %struct.GPR* %778, i32 0, i32 33
  %780 = getelementptr inbounds %struct.Reg, %struct.Reg* %779, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %780 to i64*
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 5
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %RCX.i1602 = bitcast %union.anon* %783 to i64*
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 9
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %RSI.i1603 = bitcast %union.anon* %786 to i64*
  %787 = load i64, i64* %RCX.i1602
  %788 = add i64 %787, 12
  %789 = load i64, i64* %PC.i1601
  %790 = add i64 %789, 3
  store i64 %790, i64* %PC.i1601
  %791 = inttoptr i64 %788 to i32*
  %792 = load i32, i32* %791
  %793 = zext i32 %792 to i64
  store i64 %793, i64* %RSI.i1603, align 8
  store %struct.Memory* %loadMem_40b7ab, %struct.Memory** %MEMORY
  %loadMem_40b7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i1598 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 9
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %ESI.i1599 = bitcast %union.anon* %799 to i32*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 15
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %RBP.i1600 = bitcast %union.anon* %802 to i64*
  %803 = load i64, i64* %RBP.i1600
  %804 = sub i64 %803, 32
  %805 = load i32, i32* %ESI.i1599
  %806 = zext i32 %805 to i64
  %807 = load i64, i64* %PC.i1598
  %808 = add i64 %807, 3
  store i64 %808, i64* %PC.i1598
  %809 = inttoptr i64 %804 to i32*
  store i32 %805, i32* %809
  store %struct.Memory* %loadMem_40b7ae, %struct.Memory** %MEMORY
  %loadMem_40b7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %811 = getelementptr inbounds %struct.GPR, %struct.GPR* %810, i32 0, i32 33
  %812 = getelementptr inbounds %struct.Reg, %struct.Reg* %811, i32 0, i32 0
  %PC.i1595 = bitcast %union.anon* %812 to i64*
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %814 = getelementptr inbounds %struct.GPR, %struct.GPR* %813, i32 0, i32 5
  %815 = getelementptr inbounds %struct.Reg, %struct.Reg* %814, i32 0, i32 0
  %RCX.i1596 = bitcast %union.anon* %815 to i64*
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %817 = getelementptr inbounds %struct.GPR, %struct.GPR* %816, i32 0, i32 15
  %818 = getelementptr inbounds %struct.Reg, %struct.Reg* %817, i32 0, i32 0
  %RBP.i1597 = bitcast %union.anon* %818 to i64*
  %819 = load i64, i64* %RBP.i1597
  %820 = sub i64 %819, 8
  %821 = load i64, i64* %PC.i1595
  %822 = add i64 %821, 4
  store i64 %822, i64* %PC.i1595
  %823 = inttoptr i64 %820 to i64*
  %824 = load i64, i64* %823
  store i64 %824, i64* %RCX.i1596, align 8
  store %struct.Memory* %loadMem_40b7b1, %struct.Memory** %MEMORY
  %loadMem_40b7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %826 = getelementptr inbounds %struct.GPR, %struct.GPR* %825, i32 0, i32 33
  %827 = getelementptr inbounds %struct.Reg, %struct.Reg* %826, i32 0, i32 0
  %PC.i1592 = bitcast %union.anon* %827 to i64*
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 11
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %RDI.i1593 = bitcast %union.anon* %830 to i64*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 15
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %RBP.i1594 = bitcast %union.anon* %833 to i64*
  %834 = load i64, i64* %RBP.i1594
  %835 = sub i64 %834, 12
  %836 = load i64, i64* %PC.i1592
  %837 = add i64 %836, 4
  store i64 %837, i64* %PC.i1592
  %838 = inttoptr i64 %835 to i32*
  %839 = load i32, i32* %838
  %840 = sext i32 %839 to i64
  store i64 %840, i64* %RDI.i1593, align 8
  store %struct.Memory* %loadMem_40b7b5, %struct.Memory** %MEMORY
  %loadMem_40b7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %842 = getelementptr inbounds %struct.GPR, %struct.GPR* %841, i32 0, i32 33
  %843 = getelementptr inbounds %struct.Reg, %struct.Reg* %842, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %843 to i64*
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %845 = getelementptr inbounds %struct.GPR, %struct.GPR* %844, i32 0, i32 11
  %846 = getelementptr inbounds %struct.Reg, %struct.Reg* %845, i32 0, i32 0
  %RDI.i1591 = bitcast %union.anon* %846 to i64*
  %847 = load i64, i64* %RDI.i1591
  %848 = load i64, i64* %PC.i1590
  %849 = add i64 %848, 4
  store i64 %849, i64* %PC.i1590
  %850 = sext i64 %847 to i128
  %851 = and i128 %850, -18446744073709551616
  %852 = zext i64 %847 to i128
  %853 = or i128 %851, %852
  %854 = mul i128 24, %853
  %855 = trunc i128 %854 to i64
  store i64 %855, i64* %RDI.i1591, align 8
  %856 = sext i64 %855 to i128
  %857 = icmp ne i128 %856, %854
  %858 = zext i1 %857 to i8
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %858, i8* %859, align 1
  %860 = trunc i128 %854 to i32
  %861 = and i32 %860, 255
  %862 = call i32 @llvm.ctpop.i32(i32 %861)
  %863 = trunc i32 %862 to i8
  %864 = and i8 %863, 1
  %865 = xor i8 %864, 1
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %865, i8* %866, align 1
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %867, align 1
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %868, align 1
  %869 = lshr i64 %855, 63
  %870 = trunc i64 %869 to i8
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %870, i8* %871, align 1
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %858, i8* %872, align 1
  store %struct.Memory* %loadMem_40b7b9, %struct.Memory** %MEMORY
  %loadMem_40b7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 33
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %875 to i64*
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %877 = getelementptr inbounds %struct.GPR, %struct.GPR* %876, i32 0, i32 5
  %878 = getelementptr inbounds %struct.Reg, %struct.Reg* %877, i32 0, i32 0
  %RCX.i1588 = bitcast %union.anon* %878 to i64*
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %880 = getelementptr inbounds %struct.GPR, %struct.GPR* %879, i32 0, i32 11
  %881 = getelementptr inbounds %struct.Reg, %struct.Reg* %880, i32 0, i32 0
  %RDI.i1589 = bitcast %union.anon* %881 to i64*
  %882 = load i64, i64* %RCX.i1588
  %883 = load i64, i64* %RDI.i1589
  %884 = load i64, i64* %PC.i1587
  %885 = add i64 %884, 3
  store i64 %885, i64* %PC.i1587
  %886 = add i64 %883, %882
  store i64 %886, i64* %RCX.i1588, align 8
  %887 = icmp ult i64 %886, %882
  %888 = icmp ult i64 %886, %883
  %889 = or i1 %887, %888
  %890 = zext i1 %889 to i8
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %890, i8* %891, align 1
  %892 = trunc i64 %886 to i32
  %893 = and i32 %892, 255
  %894 = call i32 @llvm.ctpop.i32(i32 %893)
  %895 = trunc i32 %894 to i8
  %896 = and i8 %895, 1
  %897 = xor i8 %896, 1
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %897, i8* %898, align 1
  %899 = xor i64 %883, %882
  %900 = xor i64 %899, %886
  %901 = lshr i64 %900, 4
  %902 = trunc i64 %901 to i8
  %903 = and i8 %902, 1
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %903, i8* %904, align 1
  %905 = icmp eq i64 %886, 0
  %906 = zext i1 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %906, i8* %907, align 1
  %908 = lshr i64 %886, 63
  %909 = trunc i64 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %909, i8* %910, align 1
  %911 = lshr i64 %882, 63
  %912 = lshr i64 %883, 63
  %913 = xor i64 %908, %911
  %914 = xor i64 %908, %912
  %915 = add i64 %913, %914
  %916 = icmp eq i64 %915, 2
  %917 = zext i1 %916 to i8
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %917, i8* %918, align 1
  store %struct.Memory* %loadMem_40b7bd, %struct.Memory** %MEMORY
  %loadMem_40b7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 33
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %921 to i64*
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %923 = getelementptr inbounds %struct.GPR, %struct.GPR* %922, i32 0, i32 5
  %924 = getelementptr inbounds %struct.Reg, %struct.Reg* %923, i32 0, i32 0
  %RCX.i1585 = bitcast %union.anon* %924 to i64*
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %926 = getelementptr inbounds %struct.GPR, %struct.GPR* %925, i32 0, i32 9
  %927 = getelementptr inbounds %struct.Reg, %struct.Reg* %926, i32 0, i32 0
  %RSI.i1586 = bitcast %union.anon* %927 to i64*
  %928 = load i64, i64* %RCX.i1585
  %929 = add i64 %928, 16
  %930 = load i64, i64* %PC.i1584
  %931 = add i64 %930, 3
  store i64 %931, i64* %PC.i1584
  %932 = inttoptr i64 %929 to i32*
  %933 = load i32, i32* %932
  %934 = zext i32 %933 to i64
  store i64 %934, i64* %RSI.i1586, align 8
  store %struct.Memory* %loadMem_40b7c0, %struct.Memory** %MEMORY
  %loadMem_40b7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 33
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 9
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %ESI.i1582 = bitcast %union.anon* %940 to i32*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 15
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RBP.i1583 = bitcast %union.anon* %943 to i64*
  %944 = load i64, i64* %RBP.i1583
  %945 = sub i64 %944, 36
  %946 = load i32, i32* %ESI.i1582
  %947 = zext i32 %946 to i64
  %948 = load i64, i64* %PC.i1581
  %949 = add i64 %948, 3
  store i64 %949, i64* %PC.i1581
  %950 = inttoptr i64 %945 to i32*
  store i32 %946, i32* %950
  store %struct.Memory* %loadMem_40b7c3, %struct.Memory** %MEMORY
  %loadMem_40b7c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 33
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %PC.i1579 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 9
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %RSI.i1580 = bitcast %union.anon* %956 to i64*
  %957 = load i64, i64* %PC.i1579
  %958 = add i64 %957, 7
  store i64 %958, i64* %PC.i1579
  %959 = load i32, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  %960 = zext i32 %959 to i64
  store i64 %960, i64* %RSI.i1580, align 8
  store %struct.Memory* %loadMem_40b7c6, %struct.Memory** %MEMORY
  %loadMem_40b7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 33
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %PC.i1577 = bitcast %union.anon* %963 to i64*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 5
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %RCX.i1578 = bitcast %union.anon* %966 to i64*
  %967 = load i64, i64* %PC.i1577
  %968 = add i64 %967, 8
  store i64 %968, i64* %PC.i1577
  %969 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %970 = sext i32 %969 to i64
  store i64 %970, i64* %RCX.i1578, align 8
  store %struct.Memory* %loadMem_40b7cd, %struct.Memory** %MEMORY
  %loadMem_40b7d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 33
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %PC.i1575 = bitcast %union.anon* %973 to i64*
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %975 = getelementptr inbounds %struct.GPR, %struct.GPR* %974, i32 0, i32 5
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %RCX.i1576 = bitcast %union.anon* %976 to i64*
  %977 = load i64, i64* %RCX.i1576
  %978 = load i64, i64* %PC.i1575
  %979 = add i64 %978, 4
  store i64 %979, i64* %PC.i1575
  %980 = shl i64 %977, 3
  %981 = icmp slt i64 %980, 0
  %982 = shl i64 %980, 1
  store i64 %982, i64* %RCX.i1576, align 8
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %984 = zext i1 %981 to i8
  store i8 %984, i8* %983, align 1
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %986 = trunc i64 %982 to i32
  %987 = and i32 %986, 254
  %988 = call i32 @llvm.ctpop.i32(i32 %987)
  %989 = trunc i32 %988 to i8
  %990 = and i8 %989, 1
  %991 = xor i8 %990, 1
  store i8 %991, i8* %985, align 1
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %992, align 1
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %994 = icmp eq i64 %982, 0
  %995 = zext i1 %994 to i8
  store i8 %995, i8* %993, align 1
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %997 = lshr i64 %982, 63
  %998 = trunc i64 %997 to i8
  store i8 %998, i8* %996, align 1
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %999, align 1
  store %struct.Memory* %loadMem_40b7d5, %struct.Memory** %MEMORY
  %loadMem_40b7d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1001 = getelementptr inbounds %struct.GPR, %struct.GPR* %1000, i32 0, i32 33
  %1002 = getelementptr inbounds %struct.Reg, %struct.Reg* %1001, i32 0, i32 0
  %PC.i1572 = bitcast %union.anon* %1002 to i64*
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1004 = getelementptr inbounds %struct.GPR, %struct.GPR* %1003, i32 0, i32 1
  %1005 = getelementptr inbounds %struct.Reg, %struct.Reg* %1004, i32 0, i32 0
  %RAX.i1573 = bitcast %union.anon* %1005 to i64*
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 11
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %RDI.i1574 = bitcast %union.anon* %1008 to i64*
  %1009 = load i64, i64* %RAX.i1573
  %1010 = load i64, i64* %PC.i1572
  %1011 = add i64 %1010, 3
  store i64 %1011, i64* %PC.i1572
  store i64 %1009, i64* %RDI.i1574, align 8
  store %struct.Memory* %loadMem_40b7d9, %struct.Memory** %MEMORY
  %loadMem_40b7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 33
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %PC.i1569 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 5
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %RCX.i1570 = bitcast %union.anon* %1017 to i64*
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1019 = getelementptr inbounds %struct.GPR, %struct.GPR* %1018, i32 0, i32 11
  %1020 = getelementptr inbounds %struct.Reg, %struct.Reg* %1019, i32 0, i32 0
  %RDI.i1571 = bitcast %union.anon* %1020 to i64*
  %1021 = load i64, i64* %RDI.i1571
  %1022 = load i64, i64* %RCX.i1570
  %1023 = load i64, i64* %PC.i1569
  %1024 = add i64 %1023, 3
  store i64 %1024, i64* %PC.i1569
  %1025 = add i64 %1022, %1021
  store i64 %1025, i64* %RDI.i1571, align 8
  %1026 = icmp ult i64 %1025, %1021
  %1027 = icmp ult i64 %1025, %1022
  %1028 = or i1 %1026, %1027
  %1029 = zext i1 %1028 to i8
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1029, i8* %1030, align 1
  %1031 = trunc i64 %1025 to i32
  %1032 = and i32 %1031, 255
  %1033 = call i32 @llvm.ctpop.i32(i32 %1032)
  %1034 = trunc i32 %1033 to i8
  %1035 = and i8 %1034, 1
  %1036 = xor i8 %1035, 1
  %1037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1036, i8* %1037, align 1
  %1038 = xor i64 %1022, %1021
  %1039 = xor i64 %1038, %1025
  %1040 = lshr i64 %1039, 4
  %1041 = trunc i64 %1040 to i8
  %1042 = and i8 %1041, 1
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1042, i8* %1043, align 1
  %1044 = icmp eq i64 %1025, 0
  %1045 = zext i1 %1044 to i8
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1045, i8* %1046, align 1
  %1047 = lshr i64 %1025, 63
  %1048 = trunc i64 %1047 to i8
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1048, i8* %1049, align 1
  %1050 = lshr i64 %1021, 63
  %1051 = lshr i64 %1022, 63
  %1052 = xor i64 %1047, %1050
  %1053 = xor i64 %1047, %1051
  %1054 = add i64 %1052, %1053
  %1055 = icmp eq i64 %1054, 2
  %1056 = zext i1 %1055 to i8
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1056, i8* %1057, align 1
  store %struct.Memory* %loadMem_40b7dc, %struct.Memory** %MEMORY
  %loadMem_40b7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1059 = getelementptr inbounds %struct.GPR, %struct.GPR* %1058, i32 0, i32 33
  %1060 = getelementptr inbounds %struct.Reg, %struct.Reg* %1059, i32 0, i32 0
  %PC.i1566 = bitcast %union.anon* %1060 to i64*
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 9
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %ESI.i1567 = bitcast %union.anon* %1063 to i32*
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1065 = getelementptr inbounds %struct.GPR, %struct.GPR* %1064, i32 0, i32 11
  %1066 = getelementptr inbounds %struct.Reg, %struct.Reg* %1065, i32 0, i32 0
  %RDI.i1568 = bitcast %union.anon* %1066 to i64*
  %1067 = load i64, i64* %RDI.i1568
  %1068 = add i64 %1067, 8
  %1069 = load i32, i32* %ESI.i1567
  %1070 = zext i32 %1069 to i64
  %1071 = load i64, i64* %PC.i1566
  %1072 = add i64 %1071, 3
  store i64 %1072, i64* %PC.i1566
  %1073 = inttoptr i64 %1068 to i32*
  store i32 %1069, i32* %1073
  store %struct.Memory* %loadMem_40b7df, %struct.Memory** %MEMORY
  %loadMem_40b7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1075 = getelementptr inbounds %struct.GPR, %struct.GPR* %1074, i32 0, i32 33
  %1076 = getelementptr inbounds %struct.Reg, %struct.Reg* %1075, i32 0, i32 0
  %PC.i1565 = bitcast %union.anon* %1076 to i64*
  %1077 = load i64, i64* %PC.i1565
  %1078 = add i64 %1077, 11
  store i64 %1078, i64* %PC.i1565
  store i32 0, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  store %struct.Memory* %loadMem_40b7e2, %struct.Memory** %MEMORY
  %loadMem_40b7ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 33
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %PC.i1563 = bitcast %union.anon* %1081 to i64*
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1083 = getelementptr inbounds %struct.GPR, %struct.GPR* %1082, i32 0, i32 9
  %1084 = getelementptr inbounds %struct.Reg, %struct.Reg* %1083, i32 0, i32 0
  %RSI.i1564 = bitcast %union.anon* %1084 to i64*
  %1085 = load i64, i64* %PC.i1563
  %1086 = add i64 %1085, 7
  store i64 %1086, i64* %PC.i1563
  %1087 = load i32, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  %1088 = zext i32 %1087 to i64
  store i64 %1088, i64* %RSI.i1564, align 8
  store %struct.Memory* %loadMem_40b7ed, %struct.Memory** %MEMORY
  %loadMem_40b7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 33
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 5
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %RCX.i1562 = bitcast %union.anon* %1094 to i64*
  %1095 = load i64, i64* %PC.i1561
  %1096 = add i64 %1095, 8
  store i64 %1096, i64* %PC.i1561
  %1097 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %1098 = sext i32 %1097 to i64
  store i64 %1098, i64* %RCX.i1562, align 8
  store %struct.Memory* %loadMem_40b7f4, %struct.Memory** %MEMORY
  %loadMem_40b7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 33
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %PC.i1559 = bitcast %union.anon* %1101 to i64*
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 5
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %RCX.i1560 = bitcast %union.anon* %1104 to i64*
  %1105 = load i64, i64* %RCX.i1560
  %1106 = load i64, i64* %PC.i1559
  %1107 = add i64 %1106, 4
  store i64 %1107, i64* %PC.i1559
  %1108 = shl i64 %1105, 3
  %1109 = icmp slt i64 %1108, 0
  %1110 = shl i64 %1108, 1
  store i64 %1110, i64* %RCX.i1560, align 8
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1112 = zext i1 %1109 to i8
  store i8 %1112, i8* %1111, align 1
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1114 = trunc i64 %1110 to i32
  %1115 = and i32 %1114, 254
  %1116 = call i32 @llvm.ctpop.i32(i32 %1115)
  %1117 = trunc i32 %1116 to i8
  %1118 = and i8 %1117, 1
  %1119 = xor i8 %1118, 1
  store i8 %1119, i8* %1113, align 1
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1120, align 1
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1122 = icmp eq i64 %1110, 0
  %1123 = zext i1 %1122 to i8
  store i8 %1123, i8* %1121, align 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1125 = lshr i64 %1110, 63
  %1126 = trunc i64 %1125 to i8
  store i8 %1126, i8* %1124, align 1
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1127, align 1
  store %struct.Memory* %loadMem_40b7fc, %struct.Memory** %MEMORY
  %loadMem_40b800 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1129 = getelementptr inbounds %struct.GPR, %struct.GPR* %1128, i32 0, i32 33
  %1130 = getelementptr inbounds %struct.Reg, %struct.Reg* %1129, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %1130 to i64*
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 1
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %RAX.i1557 = bitcast %union.anon* %1133 to i64*
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1135 = getelementptr inbounds %struct.GPR, %struct.GPR* %1134, i32 0, i32 5
  %1136 = getelementptr inbounds %struct.Reg, %struct.Reg* %1135, i32 0, i32 0
  %RCX.i1558 = bitcast %union.anon* %1136 to i64*
  %1137 = load i64, i64* %RAX.i1557
  %1138 = load i64, i64* %RCX.i1558
  %1139 = load i64, i64* %PC.i1556
  %1140 = add i64 %1139, 3
  store i64 %1140, i64* %PC.i1556
  %1141 = add i64 %1138, %1137
  store i64 %1141, i64* %RAX.i1557, align 8
  %1142 = icmp ult i64 %1141, %1137
  %1143 = icmp ult i64 %1141, %1138
  %1144 = or i1 %1142, %1143
  %1145 = zext i1 %1144 to i8
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1145, i8* %1146, align 1
  %1147 = trunc i64 %1141 to i32
  %1148 = and i32 %1147, 255
  %1149 = call i32 @llvm.ctpop.i32(i32 %1148)
  %1150 = trunc i32 %1149 to i8
  %1151 = and i8 %1150, 1
  %1152 = xor i8 %1151, 1
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1152, i8* %1153, align 1
  %1154 = xor i64 %1138, %1137
  %1155 = xor i64 %1154, %1141
  %1156 = lshr i64 %1155, 4
  %1157 = trunc i64 %1156 to i8
  %1158 = and i8 %1157, 1
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1158, i8* %1159, align 1
  %1160 = icmp eq i64 %1141, 0
  %1161 = zext i1 %1160 to i8
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1161, i8* %1162, align 1
  %1163 = lshr i64 %1141, 63
  %1164 = trunc i64 %1163 to i8
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1164, i8* %1165, align 1
  %1166 = lshr i64 %1137, 63
  %1167 = lshr i64 %1138, 63
  %1168 = xor i64 %1163, %1166
  %1169 = xor i64 %1163, %1167
  %1170 = add i64 %1168, %1169
  %1171 = icmp eq i64 %1170, 2
  %1172 = zext i1 %1171 to i8
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1172, i8* %1173, align 1
  store %struct.Memory* %loadMem_40b800, %struct.Memory** %MEMORY
  %loadMem_40b803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 33
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %1176 to i64*
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 9
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %ESI.i1554 = bitcast %union.anon* %1179 to i32*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 1
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %RAX.i1555 = bitcast %union.anon* %1182 to i64*
  %1183 = load i64, i64* %RAX.i1555
  %1184 = add i64 %1183, 12
  %1185 = load i32, i32* %ESI.i1554
  %1186 = zext i32 %1185 to i64
  %1187 = load i64, i64* %PC.i1553
  %1188 = add i64 %1187, 3
  store i64 %1188, i64* %PC.i1553
  %1189 = inttoptr i64 %1184 to i32*
  store i32 %1185, i32* %1189
  store %struct.Memory* %loadMem_40b803, %struct.Memory** %MEMORY
  %loadMem_40b806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1191 = getelementptr inbounds %struct.GPR, %struct.GPR* %1190, i32 0, i32 33
  %1192 = getelementptr inbounds %struct.Reg, %struct.Reg* %1191, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %1192 to i64*
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1194 = getelementptr inbounds %struct.GPR, %struct.GPR* %1193, i32 0, i32 1
  %1195 = getelementptr inbounds %struct.Reg, %struct.Reg* %1194, i32 0, i32 0
  %RAX.i1551 = bitcast %union.anon* %1195 to i64*
  %1196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1197 = getelementptr inbounds %struct.GPR, %struct.GPR* %1196, i32 0, i32 15
  %1198 = getelementptr inbounds %struct.Reg, %struct.Reg* %1197, i32 0, i32 0
  %RBP.i1552 = bitcast %union.anon* %1198 to i64*
  %1199 = load i64, i64* %RBP.i1552
  %1200 = sub i64 %1199, 20
  %1201 = load i64, i64* %PC.i1550
  %1202 = add i64 %1201, 4
  store i64 %1202, i64* %PC.i1550
  %1203 = inttoptr i64 %1200 to i32*
  %1204 = load i32, i32* %1203
  %1205 = sext i32 %1204 to i64
  store i64 %1205, i64* %RAX.i1551, align 8
  store %struct.Memory* %loadMem_40b806, %struct.Memory** %MEMORY
  %loadMem_40b80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1207 = getelementptr inbounds %struct.GPR, %struct.GPR* %1206, i32 0, i32 33
  %1208 = getelementptr inbounds %struct.Reg, %struct.Reg* %1207, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %1208 to i64*
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 1
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %RAX.i1549 = bitcast %union.anon* %1211 to i64*
  %1212 = load i64, i64* %RAX.i1549
  %1213 = mul i64 %1212, 4
  %1214 = add i64 %1213, 8807744
  %1215 = load i64, i64* %PC.i1548
  %1216 = add i64 %1215, 8
  store i64 %1216, i64* %PC.i1548
  %1217 = inttoptr i64 %1214 to i32*
  %1218 = load i32, i32* %1217
  %1219 = sub i32 %1218, 1
  %1220 = icmp ult i32 %1218, 1
  %1221 = zext i1 %1220 to i8
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1221, i8* %1222, align 1
  %1223 = and i32 %1219, 255
  %1224 = call i32 @llvm.ctpop.i32(i32 %1223)
  %1225 = trunc i32 %1224 to i8
  %1226 = and i8 %1225, 1
  %1227 = xor i8 %1226, 1
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1227, i8* %1228, align 1
  %1229 = xor i32 %1218, 1
  %1230 = xor i32 %1229, %1219
  %1231 = lshr i32 %1230, 4
  %1232 = trunc i32 %1231 to i8
  %1233 = and i8 %1232, 1
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1233, i8* %1234, align 1
  %1235 = icmp eq i32 %1219, 0
  %1236 = zext i1 %1235 to i8
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1236, i8* %1237, align 1
  %1238 = lshr i32 %1219, 31
  %1239 = trunc i32 %1238 to i8
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1239, i8* %1240, align 1
  %1241 = lshr i32 %1218, 31
  %1242 = xor i32 %1238, %1241
  %1243 = add i32 %1242, %1241
  %1244 = icmp eq i32 %1243, 2
  %1245 = zext i1 %1244 to i8
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1245, i8* %1246, align 1
  store %struct.Memory* %loadMem_40b80a, %struct.Memory** %MEMORY
  %loadMem_40b812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1248 = getelementptr inbounds %struct.GPR, %struct.GPR* %1247, i32 0, i32 33
  %1249 = getelementptr inbounds %struct.Reg, %struct.Reg* %1248, i32 0, i32 0
  %PC.i1547 = bitcast %union.anon* %1249 to i64*
  %1250 = load i64, i64* %PC.i1547
  %1251 = add i64 %1250, 42
  %1252 = load i64, i64* %PC.i1547
  %1253 = add i64 %1252, 6
  %1254 = load i64, i64* %PC.i1547
  %1255 = add i64 %1254, 6
  store i64 %1255, i64* %PC.i1547
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1257 = load i8, i8* %1256, align 1
  store i8 %1257, i8* %BRANCH_TAKEN, align 1
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1259 = icmp ne i8 %1257, 0
  %1260 = select i1 %1259, i64 %1251, i64 %1253
  store i64 %1260, i64* %1258, align 8
  store %struct.Memory* %loadMem_40b812, %struct.Memory** %MEMORY
  %loadBr_40b812 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b812 = icmp eq i8 %loadBr_40b812, 1
  br i1 %cmpBr_40b812, label %block_.L_40b83c, label %block_40b818

block_40b818:                                     ; preds = %entry
  %loadMem_40b818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 33
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 1
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %RAX.i1545 = bitcast %union.anon* %1266 to i64*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 15
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %RBP.i1546 = bitcast %union.anon* %1269 to i64*
  %1270 = load i64, i64* %RBP.i1546
  %1271 = sub i64 %1270, 20
  %1272 = load i64, i64* %PC.i1544
  %1273 = add i64 %1272, 4
  store i64 %1273, i64* %PC.i1544
  %1274 = inttoptr i64 %1271 to i32*
  %1275 = load i32, i32* %1274
  %1276 = sext i32 %1275 to i64
  store i64 %1276, i64* %RAX.i1545, align 8
  store %struct.Memory* %loadMem_40b818, %struct.Memory** %MEMORY
  %loadMem_40b81c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 33
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 1
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %RAX.i1543 = bitcast %union.anon* %1282 to i64*
  %1283 = load i64, i64* %RAX.i1543
  %1284 = mul i64 %1283, 4
  %1285 = add i64 %1284, 8807744
  %1286 = load i64, i64* %PC.i1542
  %1287 = add i64 %1286, 8
  store i64 %1287, i64* %PC.i1542
  %1288 = inttoptr i64 %1285 to i32*
  %1289 = load i32, i32* %1288
  %1290 = sub i32 %1289, 2
  %1291 = icmp ult i32 %1289, 2
  %1292 = zext i1 %1291 to i8
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1292, i8* %1293, align 1
  %1294 = and i32 %1290, 255
  %1295 = call i32 @llvm.ctpop.i32(i32 %1294)
  %1296 = trunc i32 %1295 to i8
  %1297 = and i8 %1296, 1
  %1298 = xor i8 %1297, 1
  %1299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1298, i8* %1299, align 1
  %1300 = xor i32 %1289, 2
  %1301 = xor i32 %1300, %1290
  %1302 = lshr i32 %1301, 4
  %1303 = trunc i32 %1302 to i8
  %1304 = and i8 %1303, 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1304, i8* %1305, align 1
  %1306 = icmp eq i32 %1290, 0
  %1307 = zext i1 %1306 to i8
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1307, i8* %1308, align 1
  %1309 = lshr i32 %1290, 31
  %1310 = trunc i32 %1309 to i8
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1310, i8* %1311, align 1
  %1312 = lshr i32 %1289, 31
  %1313 = xor i32 %1309, %1312
  %1314 = add i32 %1313, %1312
  %1315 = icmp eq i32 %1314, 2
  %1316 = zext i1 %1315 to i8
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1316, i8* %1317, align 1
  store %struct.Memory* %loadMem_40b81c, %struct.Memory** %MEMORY
  %loadMem_40b824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 33
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %1320 to i64*
  %1321 = load i64, i64* %PC.i1541
  %1322 = add i64 %1321, 24
  %1323 = load i64, i64* %PC.i1541
  %1324 = add i64 %1323, 6
  %1325 = load i64, i64* %PC.i1541
  %1326 = add i64 %1325, 6
  store i64 %1326, i64* %PC.i1541
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1328 = load i8, i8* %1327, align 1
  store i8 %1328, i8* %BRANCH_TAKEN, align 1
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1330 = icmp ne i8 %1328, 0
  %1331 = select i1 %1330, i64 %1322, i64 %1324
  store i64 %1331, i64* %1329, align 8
  store %struct.Memory* %loadMem_40b824, %struct.Memory** %MEMORY
  %loadBr_40b824 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b824 = icmp eq i8 %loadBr_40b824, 1
  br i1 %cmpBr_40b824, label %block_.L_40b83c, label %block_40b82a

block_40b82a:                                     ; preds = %block_40b818
  %loadMem_40b82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i1538 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 1
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RAX.i1539 = bitcast %union.anon* %1337 to i64*
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 15
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %RBP.i1540 = bitcast %union.anon* %1340 to i64*
  %1341 = load i64, i64* %RBP.i1540
  %1342 = sub i64 %1341, 24
  %1343 = load i64, i64* %PC.i1538
  %1344 = add i64 %1343, 4
  store i64 %1344, i64* %PC.i1538
  %1345 = inttoptr i64 %1342 to i32*
  %1346 = load i32, i32* %1345
  %1347 = sext i32 %1346 to i64
  store i64 %1347, i64* %RAX.i1539, align 8
  store %struct.Memory* %loadMem_40b82a, %struct.Memory** %MEMORY
  %loadMem_40b82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 33
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %PC.i1536 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 1
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %RAX.i1537 = bitcast %union.anon* %1353 to i64*
  %1354 = load i64, i64* %RAX.i1537
  %1355 = mul i64 %1354, 4
  %1356 = add i64 %1355, 8807744
  %1357 = load i64, i64* %PC.i1536
  %1358 = add i64 %1357, 8
  store i64 %1358, i64* %PC.i1536
  %1359 = inttoptr i64 %1356 to i32*
  %1360 = load i32, i32* %1359
  %1361 = sub i32 %1360, 13
  %1362 = icmp ult i32 %1360, 13
  %1363 = zext i1 %1362 to i8
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1363, i8* %1364, align 1
  %1365 = and i32 %1361, 255
  %1366 = call i32 @llvm.ctpop.i32(i32 %1365)
  %1367 = trunc i32 %1366 to i8
  %1368 = and i8 %1367, 1
  %1369 = xor i8 %1368, 1
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1369, i8* %1370, align 1
  %1371 = xor i32 %1360, 13
  %1372 = xor i32 %1371, %1361
  %1373 = lshr i32 %1372, 4
  %1374 = trunc i32 %1373 to i8
  %1375 = and i8 %1374, 1
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1375, i8* %1376, align 1
  %1377 = icmp eq i32 %1361, 0
  %1378 = zext i1 %1377 to i8
  %1379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1378, i8* %1379, align 1
  %1380 = lshr i32 %1361, 31
  %1381 = trunc i32 %1380 to i8
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1381, i8* %1382, align 1
  %1383 = lshr i32 %1360, 31
  %1384 = xor i32 %1380, %1383
  %1385 = add i32 %1384, %1383
  %1386 = icmp eq i32 %1385, 2
  %1387 = zext i1 %1386 to i8
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1387, i8* %1388, align 1
  store %struct.Memory* %loadMem_40b82e, %struct.Memory** %MEMORY
  %loadMem_40b836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 33
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %1391 to i64*
  %1392 = load i64, i64* %PC.i1535
  %1393 = add i64 %1392, 22
  %1394 = load i64, i64* %PC.i1535
  %1395 = add i64 %1394, 6
  %1396 = load i64, i64* %PC.i1535
  %1397 = add i64 %1396, 6
  store i64 %1397, i64* %PC.i1535
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1399 = load i8, i8* %1398, align 1
  store i8 %1399, i8* %BRANCH_TAKEN, align 1
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1401 = icmp ne i8 %1399, 0
  %1402 = select i1 %1401, i64 %1393, i64 %1395
  store i64 %1402, i64* %1400, align 8
  store %struct.Memory* %loadMem_40b836, %struct.Memory** %MEMORY
  %loadBr_40b836 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b836 = icmp eq i8 %loadBr_40b836, 1
  br i1 %cmpBr_40b836, label %block_.L_40b84c, label %block_.L_40b83c

block_.L_40b83c:                                  ; preds = %block_40b82a, %block_40b818, %entry
  %loadMem_40b83c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1404 = getelementptr inbounds %struct.GPR, %struct.GPR* %1403, i32 0, i32 33
  %1405 = getelementptr inbounds %struct.Reg, %struct.Reg* %1404, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %1405 to i64*
  %1406 = load i64, i64* %PC.i1534
  %1407 = add i64 %1406, 11
  store i64 %1407, i64* %PC.i1534
  store i32 0, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  store %struct.Memory* %loadMem_40b83c, %struct.Memory** %MEMORY
  %loadMem_40b847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 33
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %PC.i1533 = bitcast %union.anon* %1410 to i64*
  %1411 = load i64, i64* %PC.i1533
  %1412 = add i64 %1411, 22
  %1413 = load i64, i64* %PC.i1533
  %1414 = add i64 %1413, 5
  store i64 %1414, i64* %PC.i1533
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1412, i64* %1415, align 8
  store %struct.Memory* %loadMem_40b847, %struct.Memory** %MEMORY
  br label %block_.L_40b85d

block_.L_40b84c:                                  ; preds = %block_40b82a
  %loadMem_40b84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1417 = getelementptr inbounds %struct.GPR, %struct.GPR* %1416, i32 0, i32 33
  %1418 = getelementptr inbounds %struct.Reg, %struct.Reg* %1417, i32 0, i32 0
  %PC.i1531 = bitcast %union.anon* %1418 to i64*
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1420 = getelementptr inbounds %struct.GPR, %struct.GPR* %1419, i32 0, i32 1
  %1421 = getelementptr inbounds %struct.Reg, %struct.Reg* %1420, i32 0, i32 0
  %RAX.i1532 = bitcast %union.anon* %1421 to i64*
  %1422 = load i64, i64* %PC.i1531
  %1423 = add i64 %1422, 7
  store i64 %1423, i64* %PC.i1531
  %1424 = load i32, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  %1425 = zext i32 %1424 to i64
  store i64 %1425, i64* %RAX.i1532, align 8
  store %struct.Memory* %loadMem_40b84c, %struct.Memory** %MEMORY
  %loadMem_40b853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1427 = getelementptr inbounds %struct.GPR, %struct.GPR* %1426, i32 0, i32 33
  %1428 = getelementptr inbounds %struct.Reg, %struct.Reg* %1427, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %1428 to i64*
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1430 = getelementptr inbounds %struct.GPR, %struct.GPR* %1429, i32 0, i32 1
  %1431 = getelementptr inbounds %struct.Reg, %struct.Reg* %1430, i32 0, i32 0
  %RAX.i1530 = bitcast %union.anon* %1431 to i64*
  %1432 = load i64, i64* %RAX.i1530
  %1433 = load i64, i64* %PC.i1529
  %1434 = add i64 %1433, 3
  store i64 %1434, i64* %PC.i1529
  %1435 = trunc i64 %1432 to i32
  %1436 = add i32 1, %1435
  %1437 = zext i32 %1436 to i64
  store i64 %1437, i64* %RAX.i1530, align 8
  %1438 = icmp ult i32 %1436, %1435
  %1439 = icmp ult i32 %1436, 1
  %1440 = or i1 %1438, %1439
  %1441 = zext i1 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1441, i8* %1442, align 1
  %1443 = and i32 %1436, 255
  %1444 = call i32 @llvm.ctpop.i32(i32 %1443)
  %1445 = trunc i32 %1444 to i8
  %1446 = and i8 %1445, 1
  %1447 = xor i8 %1446, 1
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1447, i8* %1448, align 1
  %1449 = xor i64 1, %1432
  %1450 = trunc i64 %1449 to i32
  %1451 = xor i32 %1450, %1436
  %1452 = lshr i32 %1451, 4
  %1453 = trunc i32 %1452 to i8
  %1454 = and i8 %1453, 1
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1454, i8* %1455, align 1
  %1456 = icmp eq i32 %1436, 0
  %1457 = zext i1 %1456 to i8
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1457, i8* %1458, align 1
  %1459 = lshr i32 %1436, 31
  %1460 = trunc i32 %1459 to i8
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1460, i8* %1461, align 1
  %1462 = lshr i32 %1435, 31
  %1463 = xor i32 %1459, %1462
  %1464 = add i32 %1463, %1459
  %1465 = icmp eq i32 %1464, 2
  %1466 = zext i1 %1465 to i8
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1466, i8* %1467, align 1
  store %struct.Memory* %loadMem_40b853, %struct.Memory** %MEMORY
  %loadMem_40b856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1469 = getelementptr inbounds %struct.GPR, %struct.GPR* %1468, i32 0, i32 33
  %1470 = getelementptr inbounds %struct.Reg, %struct.Reg* %1469, i32 0, i32 0
  %PC.i1527 = bitcast %union.anon* %1470 to i64*
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 1
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %EAX.i1528 = bitcast %union.anon* %1473 to i32*
  %1474 = load i32, i32* %EAX.i1528
  %1475 = zext i32 %1474 to i64
  %1476 = load i64, i64* %PC.i1527
  %1477 = add i64 %1476, 7
  store i64 %1477, i64* %PC.i1527
  store i32 %1474, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  store %struct.Memory* %loadMem_40b856, %struct.Memory** %MEMORY
  br label %block_.L_40b85d

block_.L_40b85d:                                  ; preds = %block_.L_40b84c, %block_.L_40b83c
  %loadMem_40b85d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 33
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %1480 to i64*
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 15
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %RBP.i1526 = bitcast %union.anon* %1483 to i64*
  %1484 = load i64, i64* %RBP.i1526
  %1485 = sub i64 %1484, 20
  %1486 = load i64, i64* %PC.i1525
  %1487 = add i64 %1486, 4
  store i64 %1487, i64* %PC.i1525
  %1488 = inttoptr i64 %1485 to i32*
  %1489 = load i32, i32* %1488
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1490, align 1
  %1491 = and i32 %1489, 255
  %1492 = call i32 @llvm.ctpop.i32(i32 %1491)
  %1493 = trunc i32 %1492 to i8
  %1494 = and i8 %1493, 1
  %1495 = xor i8 %1494, 1
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1495, i8* %1496, align 1
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1497, align 1
  %1498 = icmp eq i32 %1489, 0
  %1499 = zext i1 %1498 to i8
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1499, i8* %1500, align 1
  %1501 = lshr i32 %1489, 31
  %1502 = trunc i32 %1501 to i8
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1502, i8* %1503, align 1
  %1504 = lshr i32 %1489, 31
  %1505 = xor i32 %1501, %1504
  %1506 = add i32 %1505, %1504
  %1507 = icmp eq i32 %1506, 2
  %1508 = zext i1 %1507 to i8
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1508, i8* %1509, align 1
  store %struct.Memory* %loadMem_40b85d, %struct.Memory** %MEMORY
  %loadMem_40b861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 33
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %PC.i1524 = bitcast %union.anon* %1512 to i64*
  %1513 = load i64, i64* %PC.i1524
  %1514 = add i64 %1513, 303
  %1515 = load i64, i64* %PC.i1524
  %1516 = add i64 %1515, 6
  %1517 = load i64, i64* %PC.i1524
  %1518 = add i64 %1517, 6
  store i64 %1518, i64* %PC.i1524
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1520 = load i8, i8* %1519, align 1
  %1521 = icmp eq i8 %1520, 0
  %1522 = zext i1 %1521 to i8
  store i8 %1522, i8* %BRANCH_TAKEN, align 1
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1524 = select i1 %1521, i64 %1514, i64 %1516
  store i64 %1524, i64* %1523, align 8
  store %struct.Memory* %loadMem_40b861, %struct.Memory** %MEMORY
  %loadBr_40b861 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b861 = icmp eq i8 %loadBr_40b861, 1
  br i1 %cmpBr_40b861, label %block_.L_40b990, label %block_40b867

block_40b867:                                     ; preds = %block_.L_40b85d
  %loadMem_40b867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 33
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %PC.i1522 = bitcast %union.anon* %1527 to i64*
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 1
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %RAX.i1523 = bitcast %union.anon* %1530 to i64*
  %1531 = load i64, i64* %PC.i1522
  %1532 = add i64 %1531, 7
  store i64 %1532, i64* %PC.i1522
  %1533 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %1534 = zext i32 %1533 to i64
  store i64 %1534, i64* %RAX.i1523, align 8
  store %struct.Memory* %loadMem_40b867, %struct.Memory** %MEMORY
  %loadMem_40b86e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 33
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %PC.i1520 = bitcast %union.anon* %1537 to i64*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 1
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %RAX.i1521 = bitcast %union.anon* %1540 to i64*
  %1541 = load i64, i64* %RAX.i1521
  %1542 = load i64, i64* %PC.i1520
  %1543 = add i64 %1542, 3
  store i64 %1543, i64* %PC.i1520
  %1544 = trunc i64 %1541 to i32
  %1545 = add i32 1, %1544
  %1546 = zext i32 %1545 to i64
  store i64 %1546, i64* %RAX.i1521, align 8
  %1547 = icmp ult i32 %1545, %1544
  %1548 = icmp ult i32 %1545, 1
  %1549 = or i1 %1547, %1548
  %1550 = zext i1 %1549 to i8
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1550, i8* %1551, align 1
  %1552 = and i32 %1545, 255
  %1553 = call i32 @llvm.ctpop.i32(i32 %1552)
  %1554 = trunc i32 %1553 to i8
  %1555 = and i8 %1554, 1
  %1556 = xor i8 %1555, 1
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1556, i8* %1557, align 1
  %1558 = xor i64 1, %1541
  %1559 = trunc i64 %1558 to i32
  %1560 = xor i32 %1559, %1545
  %1561 = lshr i32 %1560, 4
  %1562 = trunc i32 %1561 to i8
  %1563 = and i8 %1562, 1
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1563, i8* %1564, align 1
  %1565 = icmp eq i32 %1545, 0
  %1566 = zext i1 %1565 to i8
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1566, i8* %1567, align 1
  %1568 = lshr i32 %1545, 31
  %1569 = trunc i32 %1568 to i8
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1569, i8* %1570, align 1
  %1571 = lshr i32 %1544, 31
  %1572 = xor i32 %1568, %1571
  %1573 = add i32 %1572, %1568
  %1574 = icmp eq i32 %1573, 2
  %1575 = zext i1 %1574 to i8
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1575, i8* %1576, align 1
  store %struct.Memory* %loadMem_40b86e, %struct.Memory** %MEMORY
  %loadMem_40b871 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 33
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %1579 to i64*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 1
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %EAX.i1519 = bitcast %union.anon* %1582 to i32*
  %1583 = load i32, i32* %EAX.i1519
  %1584 = zext i32 %1583 to i64
  %1585 = load i64, i64* %PC.i1518
  %1586 = add i64 %1585, 7
  store i64 %1586, i64* %PC.i1518
  store i32 %1583, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40b871, %struct.Memory** %MEMORY
  %loadMem_40b878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1588 = getelementptr inbounds %struct.GPR, %struct.GPR* %1587, i32 0, i32 33
  %1589 = getelementptr inbounds %struct.Reg, %struct.Reg* %1588, i32 0, i32 0
  %PC.i1516 = bitcast %union.anon* %1589 to i64*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 15
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %RBP.i1517 = bitcast %union.anon* %1592 to i64*
  %1593 = load i64, i64* %RBP.i1517
  %1594 = sub i64 %1593, 40
  %1595 = load i64, i64* %PC.i1516
  %1596 = add i64 %1595, 7
  store i64 %1596, i64* %PC.i1516
  %1597 = inttoptr i64 %1594 to i32*
  store i32 1, i32* %1597
  store %struct.Memory* %loadMem_40b878, %struct.Memory** %MEMORY
  br label %block_.L_40b87f

block_.L_40b87f:                                  ; preds = %block_.L_40b896, %block_40b867
  %loadMem_40b87f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 33
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %PC.i1513 = bitcast %union.anon* %1600 to i64*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1602 = getelementptr inbounds %struct.GPR, %struct.GPR* %1601, i32 0, i32 1
  %1603 = getelementptr inbounds %struct.Reg, %struct.Reg* %1602, i32 0, i32 0
  %RAX.i1514 = bitcast %union.anon* %1603 to i64*
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1605 = getelementptr inbounds %struct.GPR, %struct.GPR* %1604, i32 0, i32 15
  %1606 = getelementptr inbounds %struct.Reg, %struct.Reg* %1605, i32 0, i32 0
  %RBP.i1515 = bitcast %union.anon* %1606 to i64*
  %1607 = load i64, i64* %RBP.i1515
  %1608 = sub i64 %1607, 40
  %1609 = load i64, i64* %PC.i1513
  %1610 = add i64 %1609, 4
  store i64 %1610, i64* %PC.i1513
  %1611 = inttoptr i64 %1608 to i32*
  %1612 = load i32, i32* %1611
  %1613 = sext i32 %1612 to i64
  store i64 %1613, i64* %RAX.i1514, align 8
  store %struct.Memory* %loadMem_40b87f, %struct.Memory** %MEMORY
  %loadMem_40b883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 33
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %1616 to i64*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 1
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %RAX.i1512 = bitcast %union.anon* %1619 to i64*
  %1620 = load i64, i64* %RAX.i1512
  %1621 = mul i64 %1620, 4
  %1622 = add i64 %1621, 8778480
  %1623 = load i64, i64* %PC.i1511
  %1624 = add i64 %1623, 8
  store i64 %1624, i64* %PC.i1511
  %1625 = inttoptr i64 %1622 to i32*
  %1626 = load i32, i32* %1625
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1627, align 1
  %1628 = and i32 %1626, 255
  %1629 = call i32 @llvm.ctpop.i32(i32 %1628)
  %1630 = trunc i32 %1629 to i8
  %1631 = and i8 %1630, 1
  %1632 = xor i8 %1631, 1
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1632, i8* %1633, align 1
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1634, align 1
  %1635 = icmp eq i32 %1626, 0
  %1636 = zext i1 %1635 to i8
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1636, i8* %1637, align 1
  %1638 = lshr i32 %1626, 31
  %1639 = trunc i32 %1638 to i8
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1639, i8* %1640, align 1
  %1641 = lshr i32 %1626, 31
  %1642 = xor i32 %1638, %1641
  %1643 = add i32 %1642, %1641
  %1644 = icmp eq i32 %1643, 2
  %1645 = zext i1 %1644 to i8
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1645, i8* %1646, align 1
  store %struct.Memory* %loadMem_40b883, %struct.Memory** %MEMORY
  %loadMem_40b88b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 33
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %PC.i1510 = bitcast %union.anon* %1649 to i64*
  %1650 = load i64, i64* %PC.i1510
  %1651 = add i64 %1650, 25
  %1652 = load i64, i64* %PC.i1510
  %1653 = add i64 %1652, 6
  %1654 = load i64, i64* %PC.i1510
  %1655 = add i64 %1654, 6
  store i64 %1655, i64* %PC.i1510
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1657 = load i8, i8* %1656, align 1
  store i8 %1657, i8* %BRANCH_TAKEN, align 1
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1659 = icmp ne i8 %1657, 0
  %1660 = select i1 %1659, i64 %1651, i64 %1653
  store i64 %1660, i64* %1658, align 8
  store %struct.Memory* %loadMem_40b88b, %struct.Memory** %MEMORY
  %loadBr_40b88b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40b88b = icmp eq i8 %loadBr_40b88b, 1
  br i1 %cmpBr_40b88b, label %block_.L_40b8a4, label %block_40b891

block_40b891:                                     ; preds = %block_.L_40b87f
  %loadMem_40b891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 33
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %PC.i1509
  %1665 = add i64 %1664, 5
  %1666 = load i64, i64* %PC.i1509
  %1667 = add i64 %1666, 5
  store i64 %1667, i64* %PC.i1509
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1665, i64* %1668, align 8
  store %struct.Memory* %loadMem_40b891, %struct.Memory** %MEMORY
  br label %block_.L_40b896

block_.L_40b896:                                  ; preds = %block_40b891
  %loadMem_40b896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 33
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %1671 to i64*
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 1
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %RAX.i1507 = bitcast %union.anon* %1674 to i64*
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1676 = getelementptr inbounds %struct.GPR, %struct.GPR* %1675, i32 0, i32 15
  %1677 = getelementptr inbounds %struct.Reg, %struct.Reg* %1676, i32 0, i32 0
  %RBP.i1508 = bitcast %union.anon* %1677 to i64*
  %1678 = load i64, i64* %RBP.i1508
  %1679 = sub i64 %1678, 40
  %1680 = load i64, i64* %PC.i1506
  %1681 = add i64 %1680, 3
  store i64 %1681, i64* %PC.i1506
  %1682 = inttoptr i64 %1679 to i32*
  %1683 = load i32, i32* %1682
  %1684 = zext i32 %1683 to i64
  store i64 %1684, i64* %RAX.i1507, align 8
  store %struct.Memory* %loadMem_40b896, %struct.Memory** %MEMORY
  %loadMem_40b899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1686 = getelementptr inbounds %struct.GPR, %struct.GPR* %1685, i32 0, i32 33
  %1687 = getelementptr inbounds %struct.Reg, %struct.Reg* %1686, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %1687 to i64*
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1689 = getelementptr inbounds %struct.GPR, %struct.GPR* %1688, i32 0, i32 1
  %1690 = getelementptr inbounds %struct.Reg, %struct.Reg* %1689, i32 0, i32 0
  %RAX.i1505 = bitcast %union.anon* %1690 to i64*
  %1691 = load i64, i64* %RAX.i1505
  %1692 = load i64, i64* %PC.i1504
  %1693 = add i64 %1692, 3
  store i64 %1693, i64* %PC.i1504
  %1694 = trunc i64 %1691 to i32
  %1695 = add i32 1, %1694
  %1696 = zext i32 %1695 to i64
  store i64 %1696, i64* %RAX.i1505, align 8
  %1697 = icmp ult i32 %1695, %1694
  %1698 = icmp ult i32 %1695, 1
  %1699 = or i1 %1697, %1698
  %1700 = zext i1 %1699 to i8
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1700, i8* %1701, align 1
  %1702 = and i32 %1695, 255
  %1703 = call i32 @llvm.ctpop.i32(i32 %1702)
  %1704 = trunc i32 %1703 to i8
  %1705 = and i8 %1704, 1
  %1706 = xor i8 %1705, 1
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1706, i8* %1707, align 1
  %1708 = xor i64 1, %1691
  %1709 = trunc i64 %1708 to i32
  %1710 = xor i32 %1709, %1695
  %1711 = lshr i32 %1710, 4
  %1712 = trunc i32 %1711 to i8
  %1713 = and i8 %1712, 1
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1713, i8* %1714, align 1
  %1715 = icmp eq i32 %1695, 0
  %1716 = zext i1 %1715 to i8
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1716, i8* %1717, align 1
  %1718 = lshr i32 %1695, 31
  %1719 = trunc i32 %1718 to i8
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1719, i8* %1720, align 1
  %1721 = lshr i32 %1694, 31
  %1722 = xor i32 %1718, %1721
  %1723 = add i32 %1722, %1718
  %1724 = icmp eq i32 %1723, 2
  %1725 = zext i1 %1724 to i8
  %1726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1725, i8* %1726, align 1
  store %struct.Memory* %loadMem_40b899, %struct.Memory** %MEMORY
  %loadMem_40b89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 33
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %1729 to i64*
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 1
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %EAX.i1502 = bitcast %union.anon* %1732 to i32*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 15
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %RBP.i1503 = bitcast %union.anon* %1735 to i64*
  %1736 = load i64, i64* %RBP.i1503
  %1737 = sub i64 %1736, 40
  %1738 = load i32, i32* %EAX.i1502
  %1739 = zext i32 %1738 to i64
  %1740 = load i64, i64* %PC.i1501
  %1741 = add i64 %1740, 3
  store i64 %1741, i64* %PC.i1501
  %1742 = inttoptr i64 %1737 to i32*
  store i32 %1738, i32* %1742
  store %struct.Memory* %loadMem_40b89c, %struct.Memory** %MEMORY
  %loadMem_40b89f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i1500 = bitcast %union.anon* %1745 to i64*
  %1746 = load i64, i64* %PC.i1500
  %1747 = add i64 %1746, -32
  %1748 = load i64, i64* %PC.i1500
  %1749 = add i64 %1748, 5
  store i64 %1749, i64* %PC.i1500
  %1750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1747, i64* %1750, align 8
  store %struct.Memory* %loadMem_40b89f, %struct.Memory** %MEMORY
  br label %block_.L_40b87f

block_.L_40b8a4:                                  ; preds = %block_.L_40b87f
  %loadMem_40b8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 33
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %1753 to i64*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 1
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %RAX.i1499 = bitcast %union.anon* %1756 to i64*
  %1757 = load i64, i64* %PC.i1498
  %1758 = add i64 %1757, 5
  store i64 %1758, i64* %PC.i1498
  store i64 1, i64* %RAX.i1499, align 8
  store %struct.Memory* %loadMem_40b8a4, %struct.Memory** %MEMORY
  %loadMem_40b8a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 33
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %1761 to i64*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 5
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %ECX.i1496 = bitcast %union.anon* %1764 to i32*
  %1765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1766 = getelementptr inbounds %struct.GPR, %struct.GPR* %1765, i32 0, i32 5
  %1767 = getelementptr inbounds %struct.Reg, %struct.Reg* %1766, i32 0, i32 0
  %RCX.i1497 = bitcast %union.anon* %1767 to i64*
  %1768 = load i64, i64* %RCX.i1497
  %1769 = load i32, i32* %ECX.i1496
  %1770 = zext i32 %1769 to i64
  %1771 = load i64, i64* %PC.i1495
  %1772 = add i64 %1771, 2
  store i64 %1772, i64* %PC.i1495
  %1773 = xor i64 %1770, %1768
  %1774 = trunc i64 %1773 to i32
  %1775 = and i64 %1773, 4294967295
  store i64 %1775, i64* %RCX.i1497, align 8
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1776, align 1
  %1777 = and i32 %1774, 255
  %1778 = call i32 @llvm.ctpop.i32(i32 %1777)
  %1779 = trunc i32 %1778 to i8
  %1780 = and i8 %1779, 1
  %1781 = xor i8 %1780, 1
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1781, i8* %1782, align 1
  %1783 = icmp eq i32 %1774, 0
  %1784 = zext i1 %1783 to i8
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1784, i8* %1785, align 1
  %1786 = lshr i32 %1774, 31
  %1787 = trunc i32 %1786 to i8
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1787, i8* %1788, align 1
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1789, align 1
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1790, align 1
  store %struct.Memory* %loadMem_40b8a9, %struct.Memory** %MEMORY
  %loadMem_40b8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 33
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %1793 to i64*
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1795 = getelementptr inbounds %struct.GPR, %struct.GPR* %1794, i32 0, i32 7
  %1796 = getelementptr inbounds %struct.Reg, %struct.Reg* %1795, i32 0, i32 0
  %RDX.i1494 = bitcast %union.anon* %1796 to i64*
  %1797 = load i64, i64* %PC.i1493
  %1798 = add i64 %1797, 10
  store i64 %1798, i64* %PC.i1493
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RDX.i1494, align 8
  store %struct.Memory* %loadMem_40b8ab, %struct.Memory** %MEMORY
  %loadMem_40b8b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1800 = getelementptr inbounds %struct.GPR, %struct.GPR* %1799, i32 0, i32 33
  %1801 = getelementptr inbounds %struct.Reg, %struct.Reg* %1800, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %1801 to i64*
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 9
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %RSI.i1491 = bitcast %union.anon* %1804 to i64*
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1806 = getelementptr inbounds %struct.GPR, %struct.GPR* %1805, i32 0, i32 15
  %1807 = getelementptr inbounds %struct.Reg, %struct.Reg* %1806, i32 0, i32 0
  %RBP.i1492 = bitcast %union.anon* %1807 to i64*
  %1808 = load i64, i64* %RBP.i1492
  %1809 = sub i64 %1808, 24
  %1810 = load i64, i64* %PC.i1490
  %1811 = add i64 %1810, 3
  store i64 %1811, i64* %PC.i1490
  %1812 = inttoptr i64 %1809 to i32*
  %1813 = load i32, i32* %1812
  %1814 = zext i32 %1813 to i64
  store i64 %1814, i64* %RSI.i1491, align 8
  store %struct.Memory* %loadMem_40b8b5, %struct.Memory** %MEMORY
  %loadMem_40b8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1816 = getelementptr inbounds %struct.GPR, %struct.GPR* %1815, i32 0, i32 33
  %1817 = getelementptr inbounds %struct.Reg, %struct.Reg* %1816, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %1817 to i64*
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1819 = getelementptr inbounds %struct.GPR, %struct.GPR* %1818, i32 0, i32 11
  %1820 = getelementptr inbounds %struct.Reg, %struct.Reg* %1819, i32 0, i32 0
  %RDI.i1488 = bitcast %union.anon* %1820 to i64*
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1822 = getelementptr inbounds %struct.GPR, %struct.GPR* %1821, i32 0, i32 15
  %1823 = getelementptr inbounds %struct.Reg, %struct.Reg* %1822, i32 0, i32 0
  %RBP.i1489 = bitcast %union.anon* %1823 to i64*
  %1824 = load i64, i64* %RBP.i1489
  %1825 = sub i64 %1824, 40
  %1826 = load i64, i64* %PC.i1487
  %1827 = add i64 %1826, 4
  store i64 %1827, i64* %PC.i1487
  %1828 = inttoptr i64 %1825 to i32*
  %1829 = load i32, i32* %1828
  %1830 = sext i32 %1829 to i64
  store i64 %1830, i64* %RDI.i1488, align 8
  store %struct.Memory* %loadMem_40b8b8, %struct.Memory** %MEMORY
  %loadMem_40b8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1832 = getelementptr inbounds %struct.GPR, %struct.GPR* %1831, i32 0, i32 33
  %1833 = getelementptr inbounds %struct.Reg, %struct.Reg* %1832, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %1833 to i64*
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 9
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %ESI.i1485 = bitcast %union.anon* %1836 to i32*
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 11
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %RDI.i1486 = bitcast %union.anon* %1839 to i64*
  %1840 = load i64, i64* %RDI.i1486
  %1841 = mul i64 %1840, 4
  %1842 = add i64 %1841, 8778480
  %1843 = load i32, i32* %ESI.i1485
  %1844 = zext i32 %1843 to i64
  %1845 = load i64, i64* %PC.i1484
  %1846 = add i64 %1845, 7
  store i64 %1846, i64* %PC.i1484
  %1847 = inttoptr i64 %1842 to i32*
  store i32 %1843, i32* %1847
  store %struct.Memory* %loadMem_40b8bc, %struct.Memory** %MEMORY
  %loadMem_40b8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 33
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %1850 to i64*
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1852 = getelementptr inbounds %struct.GPR, %struct.GPR* %1851, i32 0, i32 11
  %1853 = getelementptr inbounds %struct.Reg, %struct.Reg* %1852, i32 0, i32 0
  %RDI.i1482 = bitcast %union.anon* %1853 to i64*
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1855 = getelementptr inbounds %struct.GPR, %struct.GPR* %1854, i32 0, i32 15
  %1856 = getelementptr inbounds %struct.Reg, %struct.Reg* %1855, i32 0, i32 0
  %RBP.i1483 = bitcast %union.anon* %1856 to i64*
  %1857 = load i64, i64* %RBP.i1483
  %1858 = sub i64 %1857, 40
  %1859 = load i64, i64* %PC.i1481
  %1860 = add i64 %1859, 4
  store i64 %1860, i64* %PC.i1481
  %1861 = inttoptr i64 %1858 to i32*
  %1862 = load i32, i32* %1861
  %1863 = sext i32 %1862 to i64
  store i64 %1863, i64* %RDI.i1482, align 8
  store %struct.Memory* %loadMem_40b8c3, %struct.Memory** %MEMORY
  %loadMem_40b8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 33
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %1866 to i64*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 9
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %RSI.i1479 = bitcast %union.anon* %1869 to i64*
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 11
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %RDI.i1480 = bitcast %union.anon* %1872 to i64*
  %1873 = load i64, i64* %RDI.i1480
  %1874 = mul i64 %1873, 4
  %1875 = add i64 %1874, 6525216
  %1876 = load i64, i64* %PC.i1478
  %1877 = add i64 %1876, 7
  store i64 %1877, i64* %PC.i1478
  %1878 = inttoptr i64 %1875 to i32*
  %1879 = load i32, i32* %1878
  %1880 = zext i32 %1879 to i64
  store i64 %1880, i64* %RSI.i1479, align 8
  store %struct.Memory* %loadMem_40b8c7, %struct.Memory** %MEMORY
  %loadMem_40b8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1882 = getelementptr inbounds %struct.GPR, %struct.GPR* %1881, i32 0, i32 33
  %1883 = getelementptr inbounds %struct.Reg, %struct.Reg* %1882, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %1883 to i64*
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 11
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %RDI.i1477 = bitcast %union.anon* %1886 to i64*
  %1887 = load i64, i64* %PC.i1476
  %1888 = add i64 %1887, 8
  store i64 %1888, i64* %PC.i1476
  %1889 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %1890 = sext i32 %1889 to i64
  store i64 %1890, i64* %RDI.i1477, align 8
  store %struct.Memory* %loadMem_40b8ce, %struct.Memory** %MEMORY
  %loadMem_40b8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1892 = getelementptr inbounds %struct.GPR, %struct.GPR* %1891, i32 0, i32 33
  %1893 = getelementptr inbounds %struct.Reg, %struct.Reg* %1892, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %1893 to i64*
  %1894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1895 = getelementptr inbounds %struct.GPR, %struct.GPR* %1894, i32 0, i32 11
  %1896 = getelementptr inbounds %struct.Reg, %struct.Reg* %1895, i32 0, i32 0
  %RDI.i1475 = bitcast %union.anon* %1896 to i64*
  %1897 = load i64, i64* %RDI.i1475
  %1898 = load i64, i64* %PC.i1474
  %1899 = add i64 %1898, 4
  store i64 %1899, i64* %PC.i1474
  %1900 = shl i64 %1897, 3
  %1901 = icmp slt i64 %1900, 0
  %1902 = shl i64 %1900, 1
  store i64 %1902, i64* %RDI.i1475, align 8
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1904 = zext i1 %1901 to i8
  store i8 %1904, i8* %1903, align 1
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1906 = trunc i64 %1902 to i32
  %1907 = and i32 %1906, 254
  %1908 = call i32 @llvm.ctpop.i32(i32 %1907)
  %1909 = trunc i32 %1908 to i8
  %1910 = and i8 %1909, 1
  %1911 = xor i8 %1910, 1
  store i8 %1911, i8* %1905, align 1
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1912, align 1
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1914 = icmp eq i64 %1902, 0
  %1915 = zext i1 %1914 to i8
  store i8 %1915, i8* %1913, align 1
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1917 = lshr i64 %1902, 63
  %1918 = trunc i64 %1917 to i8
  store i8 %1918, i8* %1916, align 1
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1919, align 1
  store %struct.Memory* %loadMem_40b8d6, %struct.Memory** %MEMORY
  %loadMem_40b8da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1921 = getelementptr inbounds %struct.GPR, %struct.GPR* %1920, i32 0, i32 33
  %1922 = getelementptr inbounds %struct.Reg, %struct.Reg* %1921, i32 0, i32 0
  %PC.i1471 = bitcast %union.anon* %1922 to i64*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1924 = getelementptr inbounds %struct.GPR, %struct.GPR* %1923, i32 0, i32 7
  %1925 = getelementptr inbounds %struct.Reg, %struct.Reg* %1924, i32 0, i32 0
  %RDX.i1472 = bitcast %union.anon* %1925 to i64*
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 11
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %RDI.i1473 = bitcast %union.anon* %1928 to i64*
  %1929 = load i64, i64* %RDX.i1472
  %1930 = load i64, i64* %RDI.i1473
  %1931 = load i64, i64* %PC.i1471
  %1932 = add i64 %1931, 3
  store i64 %1932, i64* %PC.i1471
  %1933 = add i64 %1930, %1929
  store i64 %1933, i64* %RDX.i1472, align 8
  %1934 = icmp ult i64 %1933, %1929
  %1935 = icmp ult i64 %1933, %1930
  %1936 = or i1 %1934, %1935
  %1937 = zext i1 %1936 to i8
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1937, i8* %1938, align 1
  %1939 = trunc i64 %1933 to i32
  %1940 = and i32 %1939, 255
  %1941 = call i32 @llvm.ctpop.i32(i32 %1940)
  %1942 = trunc i32 %1941 to i8
  %1943 = and i8 %1942, 1
  %1944 = xor i8 %1943, 1
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1944, i8* %1945, align 1
  %1946 = xor i64 %1930, %1929
  %1947 = xor i64 %1946, %1933
  %1948 = lshr i64 %1947, 4
  %1949 = trunc i64 %1948 to i8
  %1950 = and i8 %1949, 1
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1950, i8* %1951, align 1
  %1952 = icmp eq i64 %1933, 0
  %1953 = zext i1 %1952 to i8
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1953, i8* %1954, align 1
  %1955 = lshr i64 %1933, 63
  %1956 = trunc i64 %1955 to i8
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1956, i8* %1957, align 1
  %1958 = lshr i64 %1929, 63
  %1959 = lshr i64 %1930, 63
  %1960 = xor i64 %1955, %1958
  %1961 = xor i64 %1955, %1959
  %1962 = add i64 %1960, %1961
  %1963 = icmp eq i64 %1962, 2
  %1964 = zext i1 %1963 to i8
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1964, i8* %1965, align 1
  store %struct.Memory* %loadMem_40b8da, %struct.Memory** %MEMORY
  %loadMem_40b8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1967 = getelementptr inbounds %struct.GPR, %struct.GPR* %1966, i32 0, i32 33
  %1968 = getelementptr inbounds %struct.Reg, %struct.Reg* %1967, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %1968 to i64*
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1970 = getelementptr inbounds %struct.GPR, %struct.GPR* %1969, i32 0, i32 9
  %1971 = getelementptr inbounds %struct.Reg, %struct.Reg* %1970, i32 0, i32 0
  %ESI.i1469 = bitcast %union.anon* %1971 to i32*
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 7
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %RDX.i1470 = bitcast %union.anon* %1974 to i64*
  %1975 = load i64, i64* %RDX.i1470
  %1976 = add i64 %1975, 4
  %1977 = load i32, i32* %ESI.i1469
  %1978 = zext i32 %1977 to i64
  %1979 = load i64, i64* %PC.i1468
  %1980 = add i64 %1979, 3
  store i64 %1980, i64* %PC.i1468
  %1981 = inttoptr i64 %1976 to i32*
  store i32 %1977, i32* %1981
  store %struct.Memory* %loadMem_40b8dd, %struct.Memory** %MEMORY
  %loadMem_40b8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 33
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %PC.i1465 = bitcast %union.anon* %1984 to i64*
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 7
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %RDX.i1466 = bitcast %union.anon* %1987 to i64*
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 15
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %RBP.i1467 = bitcast %union.anon* %1990 to i64*
  %1991 = load i64, i64* %RBP.i1467
  %1992 = sub i64 %1991, 40
  %1993 = load i64, i64* %PC.i1465
  %1994 = add i64 %1993, 4
  store i64 %1994, i64* %PC.i1465
  %1995 = inttoptr i64 %1992 to i32*
  %1996 = load i32, i32* %1995
  %1997 = sext i32 %1996 to i64
  store i64 %1997, i64* %RDX.i1466, align 8
  store %struct.Memory* %loadMem_40b8e0, %struct.Memory** %MEMORY
  %loadMem_40b8e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1999 = getelementptr inbounds %struct.GPR, %struct.GPR* %1998, i32 0, i32 33
  %2000 = getelementptr inbounds %struct.Reg, %struct.Reg* %1999, i32 0, i32 0
  %PC.i1463 = bitcast %union.anon* %2000 to i64*
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 7
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %RDX.i1464 = bitcast %union.anon* %2003 to i64*
  %2004 = load i64, i64* %RDX.i1464
  %2005 = mul i64 %2004, 4
  %2006 = add i64 %2005, 6525216
  %2007 = load i64, i64* %PC.i1463
  %2008 = add i64 %2007, 11
  store i64 %2008, i64* %PC.i1463
  %2009 = inttoptr i64 %2006 to i32*
  store i32 0, i32* %2009
  store %struct.Memory* %loadMem_40b8e4, %struct.Memory** %MEMORY
  %loadMem_40b8ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2011 = getelementptr inbounds %struct.GPR, %struct.GPR* %2010, i32 0, i32 33
  %2012 = getelementptr inbounds %struct.Reg, %struct.Reg* %2011, i32 0, i32 0
  %PC.i1460 = bitcast %union.anon* %2012 to i64*
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 9
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %RSI.i1461 = bitcast %union.anon* %2015 to i64*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 15
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %RBP.i1462 = bitcast %union.anon* %2018 to i64*
  %2019 = load i64, i64* %RBP.i1462
  %2020 = sub i64 %2019, 40
  %2021 = load i64, i64* %PC.i1460
  %2022 = add i64 %2021, 3
  store i64 %2022, i64* %PC.i1460
  %2023 = inttoptr i64 %2020 to i32*
  %2024 = load i32, i32* %2023
  %2025 = zext i32 %2024 to i64
  store i64 %2025, i64* %RSI.i1461, align 8
  store %struct.Memory* %loadMem_40b8ef, %struct.Memory** %MEMORY
  %loadMem_40b8f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 33
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %PC.i1457 = bitcast %union.anon* %2028 to i64*
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 7
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %RDX.i1458 = bitcast %union.anon* %2031 to i64*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2033 = getelementptr inbounds %struct.GPR, %struct.GPR* %2032, i32 0, i32 15
  %2034 = getelementptr inbounds %struct.Reg, %struct.Reg* %2033, i32 0, i32 0
  %RBP.i1459 = bitcast %union.anon* %2034 to i64*
  %2035 = load i64, i64* %RBP.i1459
  %2036 = sub i64 %2035, 24
  %2037 = load i64, i64* %PC.i1457
  %2038 = add i64 %2037, 4
  store i64 %2038, i64* %PC.i1457
  %2039 = inttoptr i64 %2036 to i32*
  %2040 = load i32, i32* %2039
  %2041 = sext i32 %2040 to i64
  store i64 %2041, i64* %RDX.i1458, align 8
  store %struct.Memory* %loadMem_40b8f2, %struct.Memory** %MEMORY
  %loadMem_40b8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 33
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %PC.i1454 = bitcast %union.anon* %2044 to i64*
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2046 = getelementptr inbounds %struct.GPR, %struct.GPR* %2045, i32 0, i32 9
  %2047 = getelementptr inbounds %struct.Reg, %struct.Reg* %2046, i32 0, i32 0
  %ESI.i1455 = bitcast %union.anon* %2047 to i32*
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 7
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %RDX.i1456 = bitcast %union.anon* %2050 to i64*
  %2051 = load i64, i64* %RDX.i1456
  %2052 = mul i64 %2051, 4
  %2053 = add i64 %2052, 8807152
  %2054 = load i32, i32* %ESI.i1455
  %2055 = zext i32 %2054 to i64
  %2056 = load i64, i64* %PC.i1454
  %2057 = add i64 %2056, 7
  store i64 %2057, i64* %PC.i1454
  %2058 = inttoptr i64 %2053 to i32*
  store i32 %2054, i32* %2058
  store %struct.Memory* %loadMem_40b8f6, %struct.Memory** %MEMORY
  %loadMem_40b8fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 33
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %PC.i1451 = bitcast %union.anon* %2061 to i64*
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 11
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %RDI.i1452 = bitcast %union.anon* %2064 to i64*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 15
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %RBP.i1453 = bitcast %union.anon* %2067 to i64*
  %2068 = load i64, i64* %RBP.i1453
  %2069 = sub i64 %2068, 32
  %2070 = load i64, i64* %PC.i1451
  %2071 = add i64 %2070, 3
  store i64 %2071, i64* %PC.i1451
  %2072 = inttoptr i64 %2069 to i32*
  %2073 = load i32, i32* %2072
  %2074 = zext i32 %2073 to i64
  store i64 %2074, i64* %RDI.i1452, align 8
  store %struct.Memory* %loadMem_40b8fd, %struct.Memory** %MEMORY
  %loadMem_40b900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2076 = getelementptr inbounds %struct.GPR, %struct.GPR* %2075, i32 0, i32 33
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %2077 to i64*
  %2078 = load i64, i64* %PC.i1450
  %2079 = add i64 %2078, 8
  store i64 %2079, i64* %PC.i1450
  %2080 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2081, align 1
  %2082 = and i32 %2080, 255
  %2083 = call i32 @llvm.ctpop.i32(i32 %2082)
  %2084 = trunc i32 %2083 to i8
  %2085 = and i8 %2084, 1
  %2086 = xor i8 %2085, 1
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2086, i8* %2087, align 1
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2088, align 1
  %2089 = icmp eq i32 %2080, 0
  %2090 = zext i1 %2089 to i8
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2090, i8* %2091, align 1
  %2092 = lshr i32 %2080, 31
  %2093 = trunc i32 %2092 to i8
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2093, i8* %2094, align 1
  %2095 = lshr i32 %2080, 31
  %2096 = xor i32 %2092, %2095
  %2097 = add i32 %2096, %2095
  %2098 = icmp eq i32 %2097, 2
  %2099 = zext i1 %2098 to i8
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2099, i8* %2100, align 1
  store %struct.Memory* %loadMem_40b900, %struct.Memory** %MEMORY
  %loadMem_40b908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2102 = getelementptr inbounds %struct.GPR, %struct.GPR* %2101, i32 0, i32 33
  %2103 = getelementptr inbounds %struct.Reg, %struct.Reg* %2102, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %2103 to i64*
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2105 = getelementptr inbounds %struct.GPR, %struct.GPR* %2104, i32 0, i32 5
  %2106 = getelementptr inbounds %struct.Reg, %struct.Reg* %2105, i32 0, i32 0
  %ECX.i1448 = bitcast %union.anon* %2106 to i32*
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2108 = getelementptr inbounds %struct.GPR, %struct.GPR* %2107, i32 0, i32 1
  %2109 = getelementptr inbounds %struct.Reg, %struct.Reg* %2108, i32 0, i32 0
  %RAX.i1449 = bitcast %union.anon* %2109 to i64*
  %2110 = load i32, i32* %ECX.i1448
  %2111 = zext i32 %2110 to i64
  %2112 = load i64, i64* %PC.i1447
  %2113 = add i64 %2112, 3
  store i64 %2113, i64* %PC.i1447
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2115 = load i8, i8* %2114, align 1
  %2116 = icmp eq i8 %2115, 0
  %2117 = load i64, i64* %RAX.i1449, align 8
  %2118 = select i1 %2116, i64 %2111, i64 %2117
  %2119 = and i64 %2118, 4294967295
  store i64 %2119, i64* %RAX.i1449, align 8
  store %struct.Memory* %loadMem_40b908, %struct.Memory** %MEMORY
  %loadMem_40b90b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2121 = getelementptr inbounds %struct.GPR, %struct.GPR* %2120, i32 0, i32 33
  %2122 = getelementptr inbounds %struct.Reg, %struct.Reg* %2121, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %2122 to i64*
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2124 = getelementptr inbounds %struct.GPR, %struct.GPR* %2123, i32 0, i32 1
  %2125 = getelementptr inbounds %struct.Reg, %struct.Reg* %2124, i32 0, i32 0
  %EAX.i1445 = bitcast %union.anon* %2125 to i32*
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2127 = getelementptr inbounds %struct.GPR, %struct.GPR* %2126, i32 0, i32 9
  %2128 = getelementptr inbounds %struct.Reg, %struct.Reg* %2127, i32 0, i32 0
  %RSI.i1446 = bitcast %union.anon* %2128 to i64*
  %2129 = load i32, i32* %EAX.i1445
  %2130 = zext i32 %2129 to i64
  %2131 = load i64, i64* %PC.i1444
  %2132 = add i64 %2131, 2
  store i64 %2132, i64* %PC.i1444
  %2133 = and i64 %2130, 4294967295
  store i64 %2133, i64* %RSI.i1446, align 8
  store %struct.Memory* %loadMem_40b90b, %struct.Memory** %MEMORY
  %loadMem1_40b90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2135 = getelementptr inbounds %struct.GPR, %struct.GPR* %2134, i32 0, i32 33
  %2136 = getelementptr inbounds %struct.Reg, %struct.Reg* %2135, i32 0, i32 0
  %PC.i1443 = bitcast %union.anon* %2136 to i64*
  %2137 = load i64, i64* %PC.i1443
  %2138 = add i64 %2137, -37213
  %2139 = load i64, i64* %PC.i1443
  %2140 = add i64 %2139, 5
  %2141 = load i64, i64* %PC.i1443
  %2142 = add i64 %2141, 5
  store i64 %2142, i64* %PC.i1443
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2144 = load i64, i64* %2143, align 8
  %2145 = add i64 %2144, -8
  %2146 = inttoptr i64 %2145 to i64*
  store i64 %2140, i64* %2146
  store i64 %2145, i64* %2143, align 8
  %2147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2138, i64* %2147, align 8
  store %struct.Memory* %loadMem1_40b90d, %struct.Memory** %MEMORY
  %loadMem2_40b90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40b90d = load i64, i64* %3
  %call2_40b90d = call %struct.Memory* @sub_4027b0.DropremoveHolding(%struct.State* %0, i64 %loadPC_40b90d, %struct.Memory* %loadMem2_40b90d)
  store %struct.Memory* %call2_40b90d, %struct.Memory** %MEMORY
  %loadMem_40b912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 33
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %2150 to i64*
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 7
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %RDX.i1442 = bitcast %union.anon* %2153 to i64*
  %2154 = load i64, i64* %PC.i1441
  %2155 = add i64 %2154, 10
  store i64 %2155, i64* %PC.i1441
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RDX.i1442, align 8
  store %struct.Memory* %loadMem_40b912, %struct.Memory** %MEMORY
  %loadMem_40b91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 33
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %2158 to i64*
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2160 = getelementptr inbounds %struct.GPR, %struct.GPR* %2159, i32 0, i32 15
  %2161 = getelementptr inbounds %struct.Reg, %struct.Reg* %2160, i32 0, i32 0
  %RBP.i1439 = bitcast %union.anon* %2161 to i64*
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2163 = getelementptr inbounds %struct.GPR, %struct.GPR* %2162, i32 0, i32 17
  %2164 = getelementptr inbounds %struct.Reg, %struct.Reg* %2163, i32 0, i32 0
  %R8.i1440 = bitcast %union.anon* %2164 to i64*
  %2165 = load i64, i64* %RBP.i1439
  %2166 = sub i64 %2165, 32
  %2167 = load i64, i64* %PC.i1438
  %2168 = add i64 %2167, 4
  store i64 %2168, i64* %PC.i1438
  %2169 = inttoptr i64 %2166 to i32*
  %2170 = load i32, i32* %2169
  %2171 = sext i32 %2170 to i64
  store i64 %2171, i64* %R8.i1440, align 8
  store %struct.Memory* %loadMem_40b91c, %struct.Memory** %MEMORY
  %loadMem_40b920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2173 = getelementptr inbounds %struct.GPR, %struct.GPR* %2172, i32 0, i32 33
  %2174 = getelementptr inbounds %struct.Reg, %struct.Reg* %2173, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %2174 to i64*
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 1
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %RAX.i1436 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 17
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %R8.i1437 = bitcast %union.anon* %2180 to i64*
  %2181 = load i64, i64* %R8.i1437
  %2182 = mul i64 %2181, 4
  %2183 = add i64 %2182, 6478512
  %2184 = load i64, i64* %PC.i1435
  %2185 = add i64 %2184, 8
  store i64 %2185, i64* %PC.i1435
  %2186 = inttoptr i64 %2183 to i32*
  %2187 = load i32, i32* %2186
  %2188 = zext i32 %2187 to i64
  store i64 %2188, i64* %RAX.i1436, align 8
  store %struct.Memory* %loadMem_40b920, %struct.Memory** %MEMORY
  %loadMem_40b928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2190 = getelementptr inbounds %struct.GPR, %struct.GPR* %2189, i32 0, i32 33
  %2191 = getelementptr inbounds %struct.Reg, %struct.Reg* %2190, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %2191 to i64*
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2193 = getelementptr inbounds %struct.GPR, %struct.GPR* %2192, i32 0, i32 1
  %2194 = getelementptr inbounds %struct.Reg, %struct.Reg* %2193, i32 0, i32 0
  %RAX.i1434 = bitcast %union.anon* %2194 to i64*
  %2195 = load i64, i64* %RAX.i1434
  %2196 = load i64, i64* %PC.i1433
  %2197 = add i64 %2196, 7
  store i64 %2197, i64* %PC.i1433
  %2198 = trunc i64 %2195 to i32
  %2199 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %2200 = add i32 %2199, %2198
  %2201 = zext i32 %2200 to i64
  store i64 %2201, i64* %RAX.i1434, align 8
  %2202 = icmp ult i32 %2200, %2198
  %2203 = icmp ult i32 %2200, %2199
  %2204 = or i1 %2202, %2203
  %2205 = zext i1 %2204 to i8
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2205, i8* %2206, align 1
  %2207 = and i32 %2200, 255
  %2208 = call i32 @llvm.ctpop.i32(i32 %2207)
  %2209 = trunc i32 %2208 to i8
  %2210 = and i8 %2209, 1
  %2211 = xor i8 %2210, 1
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2211, i8* %2212, align 1
  %2213 = xor i32 %2199, %2198
  %2214 = xor i32 %2213, %2200
  %2215 = lshr i32 %2214, 4
  %2216 = trunc i32 %2215 to i8
  %2217 = and i8 %2216, 1
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2217, i8* %2218, align 1
  %2219 = icmp eq i32 %2200, 0
  %2220 = zext i1 %2219 to i8
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2220, i8* %2221, align 1
  %2222 = lshr i32 %2200, 31
  %2223 = trunc i32 %2222 to i8
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2223, i8* %2224, align 1
  %2225 = lshr i32 %2198, 31
  %2226 = lshr i32 %2199, 31
  %2227 = xor i32 %2222, %2225
  %2228 = xor i32 %2222, %2226
  %2229 = add i32 %2227, %2228
  %2230 = icmp eq i32 %2229, 2
  %2231 = zext i1 %2230 to i8
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2231, i8* %2232, align 1
  store %struct.Memory* %loadMem_40b928, %struct.Memory** %MEMORY
  %loadMem_40b92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 33
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %2235 to i64*
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 1
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %EAX.i1432 = bitcast %union.anon* %2238 to i32*
  %2239 = load i32, i32* %EAX.i1432
  %2240 = zext i32 %2239 to i64
  %2241 = load i64, i64* %PC.i1431
  %2242 = add i64 %2241, 7
  store i64 %2242, i64* %PC.i1431
  store i32 %2239, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40b92f, %struct.Memory** %MEMORY
  %loadMem_40b936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 33
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %PC.i1428 = bitcast %union.anon* %2245 to i64*
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2247 = getelementptr inbounds %struct.GPR, %struct.GPR* %2246, i32 0, i32 1
  %2248 = getelementptr inbounds %struct.Reg, %struct.Reg* %2247, i32 0, i32 0
  %RAX.i1429 = bitcast %union.anon* %2248 to i64*
  %2249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2250 = getelementptr inbounds %struct.GPR, %struct.GPR* %2249, i32 0, i32 15
  %2251 = getelementptr inbounds %struct.Reg, %struct.Reg* %2250, i32 0, i32 0
  %RBP.i1430 = bitcast %union.anon* %2251 to i64*
  %2252 = load i64, i64* %RBP.i1430
  %2253 = sub i64 %2252, 32
  %2254 = load i64, i64* %PC.i1428
  %2255 = add i64 %2254, 3
  store i64 %2255, i64* %PC.i1428
  %2256 = inttoptr i64 %2253 to i32*
  %2257 = load i32, i32* %2256
  %2258 = zext i32 %2257 to i64
  store i64 %2258, i64* %RAX.i1429, align 8
  store %struct.Memory* %loadMem_40b936, %struct.Memory** %MEMORY
  %loadMem_40b939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2260 = getelementptr inbounds %struct.GPR, %struct.GPR* %2259, i32 0, i32 33
  %2261 = getelementptr inbounds %struct.Reg, %struct.Reg* %2260, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %2261 to i64*
  %2262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2263 = getelementptr inbounds %struct.GPR, %struct.GPR* %2262, i32 0, i32 15
  %2264 = getelementptr inbounds %struct.Reg, %struct.Reg* %2263, i32 0, i32 0
  %RBP.i1426 = bitcast %union.anon* %2264 to i64*
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 17
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %R8.i1427 = bitcast %union.anon* %2267 to i64*
  %2268 = load i64, i64* %RBP.i1426
  %2269 = sub i64 %2268, 24
  %2270 = load i64, i64* %PC.i1425
  %2271 = add i64 %2270, 4
  store i64 %2271, i64* %PC.i1425
  %2272 = inttoptr i64 %2269 to i32*
  %2273 = load i32, i32* %2272
  %2274 = sext i32 %2273 to i64
  store i64 %2274, i64* %R8.i1427, align 8
  store %struct.Memory* %loadMem_40b939, %struct.Memory** %MEMORY
  %loadMem_40b93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 33
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %PC.i1422 = bitcast %union.anon* %2277 to i64*
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2279 = getelementptr inbounds %struct.GPR, %struct.GPR* %2278, i32 0, i32 1
  %2280 = getelementptr inbounds %struct.Reg, %struct.Reg* %2279, i32 0, i32 0
  %EAX.i1423 = bitcast %union.anon* %2280 to i32*
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2282 = getelementptr inbounds %struct.GPR, %struct.GPR* %2281, i32 0, i32 17
  %2283 = getelementptr inbounds %struct.Reg, %struct.Reg* %2282, i32 0, i32 0
  %R8.i1424 = bitcast %union.anon* %2283 to i64*
  %2284 = load i64, i64* %R8.i1424
  %2285 = mul i64 %2284, 4
  %2286 = add i64 %2285, 8807744
  %2287 = load i32, i32* %EAX.i1423
  %2288 = zext i32 %2287 to i64
  %2289 = load i64, i64* %PC.i1422
  %2290 = add i64 %2289, 8
  store i64 %2290, i64* %PC.i1422
  %2291 = inttoptr i64 %2286 to i32*
  store i32 %2287, i32* %2291
  store %struct.Memory* %loadMem_40b93d, %struct.Memory** %MEMORY
  %loadMem_40b945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 33
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %2294 to i64*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 15
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %RBP.i1420 = bitcast %union.anon* %2297 to i64*
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 17
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %R8.i1421 = bitcast %union.anon* %2300 to i64*
  %2301 = load i64, i64* %RBP.i1420
  %2302 = sub i64 %2301, 32
  %2303 = load i64, i64* %PC.i1419
  %2304 = add i64 %2303, 4
  store i64 %2304, i64* %PC.i1419
  %2305 = inttoptr i64 %2302 to i32*
  %2306 = load i32, i32* %2305
  %2307 = sext i32 %2306 to i64
  store i64 %2307, i64* %R8.i1421, align 8
  store %struct.Memory* %loadMem_40b945, %struct.Memory** %MEMORY
  %loadMem_40b949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 33
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 17
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %R8.i1418 = bitcast %union.anon* %2313 to i64*
  %2314 = load i64, i64* %R8.i1418
  %2315 = load i64, i64* %PC.i1417
  %2316 = add i64 %2315, 7
  store i64 %2316, i64* %PC.i1417
  %2317 = sext i64 %2314 to i128
  %2318 = and i128 %2317, -18446744073709551616
  %2319 = zext i64 %2314 to i128
  %2320 = or i128 %2318, %2319
  %2321 = mul i128 576, %2320
  %2322 = trunc i128 %2321 to i64
  store i64 %2322, i64* %R8.i1418, align 8
  %2323 = sext i64 %2322 to i128
  %2324 = icmp ne i128 %2323, %2321
  %2325 = zext i1 %2324 to i8
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2325, i8* %2326, align 1
  %2327 = trunc i128 %2321 to i32
  %2328 = and i32 %2327, 255
  %2329 = call i32 @llvm.ctpop.i32(i32 %2328)
  %2330 = trunc i32 %2329 to i8
  %2331 = and i8 %2330, 1
  %2332 = xor i8 %2331, 1
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2332, i8* %2333, align 1
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2334, align 1
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2335, align 1
  %2336 = lshr i64 %2322, 63
  %2337 = trunc i64 %2336 to i8
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2337, i8* %2338, align 1
  %2339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2325, i8* %2339, align 1
  store %struct.Memory* %loadMem_40b949, %struct.Memory** %MEMORY
  %loadMem_40b950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2341 = getelementptr inbounds %struct.GPR, %struct.GPR* %2340, i32 0, i32 33
  %2342 = getelementptr inbounds %struct.Reg, %struct.Reg* %2341, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %2342 to i64*
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 7
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %RDX.i1415 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 17
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %R8.i1416 = bitcast %union.anon* %2348 to i64*
  %2349 = load i64, i64* %RDX.i1415
  %2350 = load i64, i64* %R8.i1416
  %2351 = load i64, i64* %PC.i1414
  %2352 = add i64 %2351, 3
  store i64 %2352, i64* %PC.i1414
  %2353 = add i64 %2350, %2349
  store i64 %2353, i64* %RDX.i1415, align 8
  %2354 = icmp ult i64 %2353, %2349
  %2355 = icmp ult i64 %2353, %2350
  %2356 = or i1 %2354, %2355
  %2357 = zext i1 %2356 to i8
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2357, i8* %2358, align 1
  %2359 = trunc i64 %2353 to i32
  %2360 = and i32 %2359, 255
  %2361 = call i32 @llvm.ctpop.i32(i32 %2360)
  %2362 = trunc i32 %2361 to i8
  %2363 = and i8 %2362, 1
  %2364 = xor i8 %2363, 1
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2364, i8* %2365, align 1
  %2366 = xor i64 %2350, %2349
  %2367 = xor i64 %2366, %2353
  %2368 = lshr i64 %2367, 4
  %2369 = trunc i64 %2368 to i8
  %2370 = and i8 %2369, 1
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2370, i8* %2371, align 1
  %2372 = icmp eq i64 %2353, 0
  %2373 = zext i1 %2372 to i8
  %2374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2373, i8* %2374, align 1
  %2375 = lshr i64 %2353, 63
  %2376 = trunc i64 %2375 to i8
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2376, i8* %2377, align 1
  %2378 = lshr i64 %2349, 63
  %2379 = lshr i64 %2350, 63
  %2380 = xor i64 %2375, %2378
  %2381 = xor i64 %2375, %2379
  %2382 = add i64 %2380, %2381
  %2383 = icmp eq i64 %2382, 2
  %2384 = zext i1 %2383 to i8
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2384, i8* %2385, align 1
  store %struct.Memory* %loadMem_40b950, %struct.Memory** %MEMORY
  %loadMem_40b953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2387 = getelementptr inbounds %struct.GPR, %struct.GPR* %2386, i32 0, i32 33
  %2388 = getelementptr inbounds %struct.Reg, %struct.Reg* %2387, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %2388 to i64*
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 15
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %RBP.i1412 = bitcast %union.anon* %2391 to i64*
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2393 = getelementptr inbounds %struct.GPR, %struct.GPR* %2392, i32 0, i32 17
  %2394 = getelementptr inbounds %struct.Reg, %struct.Reg* %2393, i32 0, i32 0
  %R8.i1413 = bitcast %union.anon* %2394 to i64*
  %2395 = load i64, i64* %RBP.i1412
  %2396 = sub i64 %2395, 24
  %2397 = load i64, i64* %PC.i1411
  %2398 = add i64 %2397, 4
  store i64 %2398, i64* %PC.i1411
  %2399 = inttoptr i64 %2396 to i32*
  %2400 = load i32, i32* %2399
  %2401 = sext i32 %2400 to i64
  store i64 %2401, i64* %R8.i1413, align 8
  store %struct.Memory* %loadMem_40b953, %struct.Memory** %MEMORY
  %loadMem_40b957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 33
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %2404 to i64*
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 1
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %RAX.i1408 = bitcast %union.anon* %2407 to i64*
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 7
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %RDX.i1409 = bitcast %union.anon* %2410 to i64*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 17
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %R8.i1410 = bitcast %union.anon* %2413 to i64*
  %2414 = load i64, i64* %RDX.i1409
  %2415 = load i64, i64* %R8.i1410
  %2416 = mul i64 %2415, 4
  %2417 = add i64 %2416, %2414
  %2418 = load i64, i64* %PC.i1407
  %2419 = add i64 %2418, 4
  store i64 %2419, i64* %PC.i1407
  %2420 = inttoptr i64 %2417 to i32*
  %2421 = load i32, i32* %2420
  %2422 = zext i32 %2421 to i64
  store i64 %2422, i64* %RAX.i1408, align 8
  store %struct.Memory* %loadMem_40b957, %struct.Memory** %MEMORY
  %loadMem_40b95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2424 = getelementptr inbounds %struct.GPR, %struct.GPR* %2423, i32 0, i32 33
  %2425 = getelementptr inbounds %struct.Reg, %struct.Reg* %2424, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %2425 to i64*
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2427 = getelementptr inbounds %struct.GPR, %struct.GPR* %2426, i32 0, i32 1
  %2428 = getelementptr inbounds %struct.Reg, %struct.Reg* %2427, i32 0, i32 0
  %RAX.i1406 = bitcast %union.anon* %2428 to i64*
  %2429 = load i64, i64* %RAX.i1406
  %2430 = load i64, i64* %PC.i1405
  %2431 = add i64 %2430, 7
  store i64 %2431, i64* %PC.i1405
  %2432 = trunc i64 %2429 to i32
  %2433 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %2434 = xor i32 %2433, %2432
  %2435 = zext i32 %2434 to i64
  store i64 %2435, i64* %RAX.i1406, align 8
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2436, align 1
  %2437 = and i32 %2434, 255
  %2438 = call i32 @llvm.ctpop.i32(i32 %2437)
  %2439 = trunc i32 %2438 to i8
  %2440 = and i8 %2439, 1
  %2441 = xor i8 %2440, 1
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2441, i8* %2442, align 1
  %2443 = icmp eq i32 %2434, 0
  %2444 = zext i1 %2443 to i8
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2444, i8* %2445, align 1
  %2446 = lshr i32 %2434, 31
  %2447 = trunc i32 %2446 to i8
  %2448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2447, i8* %2448, align 1
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2449, align 1
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2450, align 1
  store %struct.Memory* %loadMem_40b95b, %struct.Memory** %MEMORY
  %loadMem_40b962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2452 = getelementptr inbounds %struct.GPR, %struct.GPR* %2451, i32 0, i32 33
  %2453 = getelementptr inbounds %struct.Reg, %struct.Reg* %2452, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %2453 to i64*
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2455 = getelementptr inbounds %struct.GPR, %struct.GPR* %2454, i32 0, i32 1
  %2456 = getelementptr inbounds %struct.Reg, %struct.Reg* %2455, i32 0, i32 0
  %EAX.i1404 = bitcast %union.anon* %2456 to i32*
  %2457 = load i32, i32* %EAX.i1404
  %2458 = zext i32 %2457 to i64
  %2459 = load i64, i64* %PC.i1403
  %2460 = add i64 %2459, 7
  store i64 %2460, i64* %PC.i1403
  store i32 %2457, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40b962, %struct.Memory** %MEMORY
  %loadMem_40b969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 33
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %PC.i1401 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 1
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RAX.i1402 = bitcast %union.anon* %2466 to i64*
  %2467 = load i64, i64* %PC.i1401
  %2468 = add i64 %2467, 7
  store i64 %2468, i64* %PC.i1401
  %2469 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %2470 = zext i32 %2469 to i64
  store i64 %2470, i64* %RAX.i1402, align 8
  store %struct.Memory* %loadMem_40b969, %struct.Memory** %MEMORY
  %loadMem_40b970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 33
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %2473 to i64*
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 1
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %RAX.i1400 = bitcast %union.anon* %2476 to i64*
  %2477 = load i64, i64* %RAX.i1400
  %2478 = load i64, i64* %PC.i1399
  %2479 = add i64 %2478, 3
  store i64 %2479, i64* %PC.i1399
  %2480 = xor i64 1, %2477
  %2481 = trunc i64 %2480 to i32
  %2482 = and i64 %2480, 4294967295
  store i64 %2482, i64* %RAX.i1400, align 8
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2483, align 1
  %2484 = and i32 %2481, 255
  %2485 = call i32 @llvm.ctpop.i32(i32 %2484)
  %2486 = trunc i32 %2485 to i8
  %2487 = and i8 %2486, 1
  %2488 = xor i8 %2487, 1
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2488, i8* %2489, align 1
  %2490 = icmp eq i32 %2481, 0
  %2491 = zext i1 %2490 to i8
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2491, i8* %2492, align 1
  %2493 = lshr i32 %2481, 31
  %2494 = trunc i32 %2493 to i8
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2494, i8* %2495, align 1
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2496, align 1
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2497, align 1
  store %struct.Memory* %loadMem_40b970, %struct.Memory** %MEMORY
  %loadMem_40b973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2499 = getelementptr inbounds %struct.GPR, %struct.GPR* %2498, i32 0, i32 33
  %2500 = getelementptr inbounds %struct.Reg, %struct.Reg* %2499, i32 0, i32 0
  %PC.i1397 = bitcast %union.anon* %2500 to i64*
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2502 = getelementptr inbounds %struct.GPR, %struct.GPR* %2501, i32 0, i32 1
  %2503 = getelementptr inbounds %struct.Reg, %struct.Reg* %2502, i32 0, i32 0
  %EAX.i1398 = bitcast %union.anon* %2503 to i32*
  %2504 = load i32, i32* %EAX.i1398
  %2505 = zext i32 %2504 to i64
  %2506 = load i64, i64* %PC.i1397
  %2507 = add i64 %2506, 7
  store i64 %2507, i64* %PC.i1397
  store i32 %2504, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40b973, %struct.Memory** %MEMORY
  %loadMem_40b97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 33
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %2510 to i64*
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2512 = getelementptr inbounds %struct.GPR, %struct.GPR* %2511, i32 0, i32 1
  %2513 = getelementptr inbounds %struct.Reg, %struct.Reg* %2512, i32 0, i32 0
  %RAX.i1396 = bitcast %union.anon* %2513 to i64*
  %2514 = load i64, i64* %PC.i1395
  %2515 = add i64 %2514, 7
  store i64 %2515, i64* %PC.i1395
  %2516 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %2517 = zext i32 %2516 to i64
  store i64 %2517, i64* %RAX.i1396, align 8
  store %struct.Memory* %loadMem_40b97a, %struct.Memory** %MEMORY
  %loadMem_40b981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2519 = getelementptr inbounds %struct.GPR, %struct.GPR* %2518, i32 0, i32 33
  %2520 = getelementptr inbounds %struct.Reg, %struct.Reg* %2519, i32 0, i32 0
  %PC.i1393 = bitcast %union.anon* %2520 to i64*
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 1
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %RAX.i1394 = bitcast %union.anon* %2523 to i64*
  %2524 = load i64, i64* %RAX.i1394
  %2525 = load i64, i64* %PC.i1393
  %2526 = add i64 %2525, 3
  store i64 %2526, i64* %PC.i1393
  %2527 = trunc i64 %2524 to i32
  %2528 = add i32 1, %2527
  %2529 = zext i32 %2528 to i64
  store i64 %2529, i64* %RAX.i1394, align 8
  %2530 = icmp ult i32 %2528, %2527
  %2531 = icmp ult i32 %2528, 1
  %2532 = or i1 %2530, %2531
  %2533 = zext i1 %2532 to i8
  %2534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2533, i8* %2534, align 1
  %2535 = and i32 %2528, 255
  %2536 = call i32 @llvm.ctpop.i32(i32 %2535)
  %2537 = trunc i32 %2536 to i8
  %2538 = and i8 %2537, 1
  %2539 = xor i8 %2538, 1
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2539, i8* %2540, align 1
  %2541 = xor i64 1, %2524
  %2542 = trunc i64 %2541 to i32
  %2543 = xor i32 %2542, %2528
  %2544 = lshr i32 %2543, 4
  %2545 = trunc i32 %2544 to i8
  %2546 = and i8 %2545, 1
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2546, i8* %2547, align 1
  %2548 = icmp eq i32 %2528, 0
  %2549 = zext i1 %2548 to i8
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2549, i8* %2550, align 1
  %2551 = lshr i32 %2528, 31
  %2552 = trunc i32 %2551 to i8
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2552, i8* %2553, align 1
  %2554 = lshr i32 %2527, 31
  %2555 = xor i32 %2551, %2554
  %2556 = add i32 %2555, %2551
  %2557 = icmp eq i32 %2556, 2
  %2558 = zext i1 %2557 to i8
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2558, i8* %2559, align 1
  store %struct.Memory* %loadMem_40b981, %struct.Memory** %MEMORY
  %loadMem_40b984 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 33
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %2562 to i64*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 1
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %EAX.i1392 = bitcast %union.anon* %2565 to i32*
  %2566 = load i32, i32* %EAX.i1392
  %2567 = zext i32 %2566 to i64
  %2568 = load i64, i64* %PC.i1391
  %2569 = add i64 %2568, 7
  store i64 %2569, i64* %PC.i1391
  store i32 %2566, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40b984, %struct.Memory** %MEMORY
  %loadMem_40b98b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 33
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %2572 to i64*
  %2573 = load i64, i64* %PC.i1390
  %2574 = add i64 %2573, 3587
  %2575 = load i64, i64* %PC.i1390
  %2576 = add i64 %2575, 5
  store i64 %2576, i64* %PC.i1390
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2574, i64* %2577, align 8
  store %struct.Memory* %loadMem_40b98b, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40b990:                                  ; preds = %block_.L_40b85d
  %loadMem_40b990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 33
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %2580 to i64*
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 1
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %RAX.i1389 = bitcast %union.anon* %2583 to i64*
  %2584 = load i64, i64* %PC.i1388
  %2585 = add i64 %2584, 10
  store i64 %2585, i64* %PC.i1388
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1389, align 8
  store %struct.Memory* %loadMem_40b990, %struct.Memory** %MEMORY
  %loadMem_40b99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2587 = getelementptr inbounds %struct.GPR, %struct.GPR* %2586, i32 0, i32 33
  %2588 = getelementptr inbounds %struct.Reg, %struct.Reg* %2587, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %2588 to i64*
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2590 = getelementptr inbounds %struct.GPR, %struct.GPR* %2589, i32 0, i32 5
  %2591 = getelementptr inbounds %struct.Reg, %struct.Reg* %2590, i32 0, i32 0
  %RCX.i1386 = bitcast %union.anon* %2591 to i64*
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2593 = getelementptr inbounds %struct.GPR, %struct.GPR* %2592, i32 0, i32 15
  %2594 = getelementptr inbounds %struct.Reg, %struct.Reg* %2593, i32 0, i32 0
  %RBP.i1387 = bitcast %union.anon* %2594 to i64*
  %2595 = load i64, i64* %RBP.i1387
  %2596 = sub i64 %2595, 24
  %2597 = load i64, i64* %PC.i1385
  %2598 = add i64 %2597, 4
  store i64 %2598, i64* %PC.i1385
  %2599 = inttoptr i64 %2596 to i32*
  %2600 = load i32, i32* %2599
  %2601 = sext i32 %2600 to i64
  store i64 %2601, i64* %RCX.i1386, align 8
  store %struct.Memory* %loadMem_40b99a, %struct.Memory** %MEMORY
  %loadMem_40b99e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 33
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %2604 to i64*
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 5
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %RCX.i1384 = bitcast %union.anon* %2607 to i64*
  %2608 = load i64, i64* %RCX.i1384
  %2609 = mul i64 %2608, 4
  %2610 = add i64 %2609, 8807152
  %2611 = load i64, i64* %PC.i1383
  %2612 = add i64 %2611, 8
  store i64 %2612, i64* %PC.i1383
  %2613 = inttoptr i64 %2610 to i32*
  %2614 = load i32, i32* %2613
  %2615 = sext i32 %2614 to i64
  store i64 %2615, i64* %RCX.i1384, align 8
  store %struct.Memory* %loadMem_40b99e, %struct.Memory** %MEMORY
  %loadMem_40b9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2617 = getelementptr inbounds %struct.GPR, %struct.GPR* %2616, i32 0, i32 33
  %2618 = getelementptr inbounds %struct.Reg, %struct.Reg* %2617, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %2618 to i64*
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 5
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %RCX.i1381 = bitcast %union.anon* %2621 to i64*
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 7
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %RDX.i1382 = bitcast %union.anon* %2624 to i64*
  %2625 = load i64, i64* %RCX.i1381
  %2626 = mul i64 %2625, 4
  %2627 = add i64 %2626, 6525216
  %2628 = load i64, i64* %PC.i1380
  %2629 = add i64 %2628, 7
  store i64 %2629, i64* %PC.i1380
  %2630 = inttoptr i64 %2627 to i32*
  %2631 = load i32, i32* %2630
  %2632 = zext i32 %2631 to i64
  store i64 %2632, i64* %RDX.i1382, align 8
  store %struct.Memory* %loadMem_40b9a6, %struct.Memory** %MEMORY
  %loadMem_40b9ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %2633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2634 = getelementptr inbounds %struct.GPR, %struct.GPR* %2633, i32 0, i32 33
  %2635 = getelementptr inbounds %struct.Reg, %struct.Reg* %2634, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %2635 to i64*
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2637 = getelementptr inbounds %struct.GPR, %struct.GPR* %2636, i32 0, i32 5
  %2638 = getelementptr inbounds %struct.Reg, %struct.Reg* %2637, i32 0, i32 0
  %RCX.i1379 = bitcast %union.anon* %2638 to i64*
  %2639 = load i64, i64* %PC.i1378
  %2640 = add i64 %2639, 8
  store i64 %2640, i64* %PC.i1378
  %2641 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %2642 = sext i32 %2641 to i64
  store i64 %2642, i64* %RCX.i1379, align 8
  store %struct.Memory* %loadMem_40b9ad, %struct.Memory** %MEMORY
  %loadMem_40b9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2644 = getelementptr inbounds %struct.GPR, %struct.GPR* %2643, i32 0, i32 33
  %2645 = getelementptr inbounds %struct.Reg, %struct.Reg* %2644, i32 0, i32 0
  %PC.i1376 = bitcast %union.anon* %2645 to i64*
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2647 = getelementptr inbounds %struct.GPR, %struct.GPR* %2646, i32 0, i32 5
  %2648 = getelementptr inbounds %struct.Reg, %struct.Reg* %2647, i32 0, i32 0
  %RCX.i1377 = bitcast %union.anon* %2648 to i64*
  %2649 = load i64, i64* %RCX.i1377
  %2650 = load i64, i64* %PC.i1376
  %2651 = add i64 %2650, 4
  store i64 %2651, i64* %PC.i1376
  %2652 = shl i64 %2649, 3
  %2653 = icmp slt i64 %2652, 0
  %2654 = shl i64 %2652, 1
  store i64 %2654, i64* %RCX.i1377, align 8
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2656 = zext i1 %2653 to i8
  store i8 %2656, i8* %2655, align 1
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2658 = trunc i64 %2654 to i32
  %2659 = and i32 %2658, 254
  %2660 = call i32 @llvm.ctpop.i32(i32 %2659)
  %2661 = trunc i32 %2660 to i8
  %2662 = and i8 %2661, 1
  %2663 = xor i8 %2662, 1
  store i8 %2663, i8* %2657, align 1
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2664, align 1
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2666 = icmp eq i64 %2654, 0
  %2667 = zext i1 %2666 to i8
  store i8 %2667, i8* %2665, align 1
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2669 = lshr i64 %2654, 63
  %2670 = trunc i64 %2669 to i8
  store i8 %2670, i8* %2668, align 1
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2671, align 1
  store %struct.Memory* %loadMem_40b9b5, %struct.Memory** %MEMORY
  %loadMem_40b9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2673 = getelementptr inbounds %struct.GPR, %struct.GPR* %2672, i32 0, i32 33
  %2674 = getelementptr inbounds %struct.Reg, %struct.Reg* %2673, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %2674 to i64*
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 1
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %RAX.i1374 = bitcast %union.anon* %2677 to i64*
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 9
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %RSI.i1375 = bitcast %union.anon* %2680 to i64*
  %2681 = load i64, i64* %RAX.i1374
  %2682 = load i64, i64* %PC.i1373
  %2683 = add i64 %2682, 3
  store i64 %2683, i64* %PC.i1373
  store i64 %2681, i64* %RSI.i1375, align 8
  store %struct.Memory* %loadMem_40b9b9, %struct.Memory** %MEMORY
  %loadMem_40b9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 33
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %2686 to i64*
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 5
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %RCX.i1371 = bitcast %union.anon* %2689 to i64*
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 9
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %RSI.i1372 = bitcast %union.anon* %2692 to i64*
  %2693 = load i64, i64* %RSI.i1372
  %2694 = load i64, i64* %RCX.i1371
  %2695 = load i64, i64* %PC.i1370
  %2696 = add i64 %2695, 3
  store i64 %2696, i64* %PC.i1370
  %2697 = add i64 %2694, %2693
  store i64 %2697, i64* %RSI.i1372, align 8
  %2698 = icmp ult i64 %2697, %2693
  %2699 = icmp ult i64 %2697, %2694
  %2700 = or i1 %2698, %2699
  %2701 = zext i1 %2700 to i8
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2701, i8* %2702, align 1
  %2703 = trunc i64 %2697 to i32
  %2704 = and i32 %2703, 255
  %2705 = call i32 @llvm.ctpop.i32(i32 %2704)
  %2706 = trunc i32 %2705 to i8
  %2707 = and i8 %2706, 1
  %2708 = xor i8 %2707, 1
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2708, i8* %2709, align 1
  %2710 = xor i64 %2694, %2693
  %2711 = xor i64 %2710, %2697
  %2712 = lshr i64 %2711, 4
  %2713 = trunc i64 %2712 to i8
  %2714 = and i8 %2713, 1
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2714, i8* %2715, align 1
  %2716 = icmp eq i64 %2697, 0
  %2717 = zext i1 %2716 to i8
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2717, i8* %2718, align 1
  %2719 = lshr i64 %2697, 63
  %2720 = trunc i64 %2719 to i8
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2720, i8* %2721, align 1
  %2722 = lshr i64 %2693, 63
  %2723 = lshr i64 %2694, 63
  %2724 = xor i64 %2719, %2722
  %2725 = xor i64 %2719, %2723
  %2726 = add i64 %2724, %2725
  %2727 = icmp eq i64 %2726, 2
  %2728 = zext i1 %2727 to i8
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2728, i8* %2729, align 1
  store %struct.Memory* %loadMem_40b9bc, %struct.Memory** %MEMORY
  %loadMem_40b9bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2731 = getelementptr inbounds %struct.GPR, %struct.GPR* %2730, i32 0, i32 33
  %2732 = getelementptr inbounds %struct.Reg, %struct.Reg* %2731, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %2732 to i64*
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 7
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %EDX.i1368 = bitcast %union.anon* %2735 to i32*
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 9
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %RSI.i1369 = bitcast %union.anon* %2738 to i64*
  %2739 = load i64, i64* %RSI.i1369
  %2740 = add i64 %2739, 4
  %2741 = load i32, i32* %EDX.i1368
  %2742 = zext i32 %2741 to i64
  %2743 = load i64, i64* %PC.i1367
  %2744 = add i64 %2743, 3
  store i64 %2744, i64* %PC.i1367
  %2745 = inttoptr i64 %2740 to i32*
  store i32 %2741, i32* %2745
  store %struct.Memory* %loadMem_40b9bf, %struct.Memory** %MEMORY
  %loadMem_40b9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2747 = getelementptr inbounds %struct.GPR, %struct.GPR* %2746, i32 0, i32 33
  %2748 = getelementptr inbounds %struct.Reg, %struct.Reg* %2747, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %2748 to i64*
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 5
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %RCX.i1365 = bitcast %union.anon* %2751 to i64*
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 15
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %2754 to i64*
  %2755 = load i64, i64* %RBP.i1366
  %2756 = sub i64 %2755, 24
  %2757 = load i64, i64* %PC.i1364
  %2758 = add i64 %2757, 4
  store i64 %2758, i64* %PC.i1364
  %2759 = inttoptr i64 %2756 to i32*
  %2760 = load i32, i32* %2759
  %2761 = sext i32 %2760 to i64
  store i64 %2761, i64* %RCX.i1365, align 8
  store %struct.Memory* %loadMem_40b9c2, %struct.Memory** %MEMORY
  %loadMem_40b9c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 33
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %2764 to i64*
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 5
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %RCX.i1362 = bitcast %union.anon* %2767 to i64*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 7
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %RDX.i1363 = bitcast %union.anon* %2770 to i64*
  %2771 = load i64, i64* %RCX.i1362
  %2772 = mul i64 %2771, 4
  %2773 = add i64 %2772, 8807152
  %2774 = load i64, i64* %PC.i1361
  %2775 = add i64 %2774, 7
  store i64 %2775, i64* %PC.i1361
  %2776 = inttoptr i64 %2773 to i32*
  %2777 = load i32, i32* %2776
  %2778 = zext i32 %2777 to i64
  store i64 %2778, i64* %RDX.i1363, align 8
  store %struct.Memory* %loadMem_40b9c6, %struct.Memory** %MEMORY
  %loadMem_40b9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 33
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %2781 to i64*
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2783 = getelementptr inbounds %struct.GPR, %struct.GPR* %2782, i32 0, i32 5
  %2784 = getelementptr inbounds %struct.Reg, %struct.Reg* %2783, i32 0, i32 0
  %RCX.i1360 = bitcast %union.anon* %2784 to i64*
  %2785 = load i64, i64* %PC.i1359
  %2786 = add i64 %2785, 8
  store i64 %2786, i64* %PC.i1359
  %2787 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %2788 = sext i32 %2787 to i64
  store i64 %2788, i64* %RCX.i1360, align 8
  store %struct.Memory* %loadMem_40b9cd, %struct.Memory** %MEMORY
  %loadMem_40b9d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2790 = getelementptr inbounds %struct.GPR, %struct.GPR* %2789, i32 0, i32 33
  %2791 = getelementptr inbounds %struct.Reg, %struct.Reg* %2790, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %2791 to i64*
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 5
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %RCX.i1358 = bitcast %union.anon* %2794 to i64*
  %2795 = load i64, i64* %RCX.i1358
  %2796 = load i64, i64* %PC.i1357
  %2797 = add i64 %2796, 4
  store i64 %2797, i64* %PC.i1357
  %2798 = shl i64 %2795, 3
  %2799 = icmp slt i64 %2798, 0
  %2800 = shl i64 %2798, 1
  store i64 %2800, i64* %RCX.i1358, align 8
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2802 = zext i1 %2799 to i8
  store i8 %2802, i8* %2801, align 1
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2804 = trunc i64 %2800 to i32
  %2805 = and i32 %2804, 254
  %2806 = call i32 @llvm.ctpop.i32(i32 %2805)
  %2807 = trunc i32 %2806 to i8
  %2808 = and i8 %2807, 1
  %2809 = xor i8 %2808, 1
  store i8 %2809, i8* %2803, align 1
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2810, align 1
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2812 = icmp eq i64 %2800, 0
  %2813 = zext i1 %2812 to i8
  store i8 %2813, i8* %2811, align 1
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2815 = lshr i64 %2800, 63
  %2816 = trunc i64 %2815 to i8
  store i8 %2816, i8* %2814, align 1
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2817, align 1
  store %struct.Memory* %loadMem_40b9d5, %struct.Memory** %MEMORY
  %loadMem_40b9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2819 = getelementptr inbounds %struct.GPR, %struct.GPR* %2818, i32 0, i32 33
  %2820 = getelementptr inbounds %struct.Reg, %struct.Reg* %2819, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %2820 to i64*
  %2821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2822 = getelementptr inbounds %struct.GPR, %struct.GPR* %2821, i32 0, i32 1
  %2823 = getelementptr inbounds %struct.Reg, %struct.Reg* %2822, i32 0, i32 0
  %RAX.i1355 = bitcast %union.anon* %2823 to i64*
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2825 = getelementptr inbounds %struct.GPR, %struct.GPR* %2824, i32 0, i32 5
  %2826 = getelementptr inbounds %struct.Reg, %struct.Reg* %2825, i32 0, i32 0
  %RCX.i1356 = bitcast %union.anon* %2826 to i64*
  %2827 = load i64, i64* %RAX.i1355
  %2828 = load i64, i64* %RCX.i1356
  %2829 = load i64, i64* %PC.i1354
  %2830 = add i64 %2829, 3
  store i64 %2830, i64* %PC.i1354
  %2831 = add i64 %2828, %2827
  store i64 %2831, i64* %RAX.i1355, align 8
  %2832 = icmp ult i64 %2831, %2827
  %2833 = icmp ult i64 %2831, %2828
  %2834 = or i1 %2832, %2833
  %2835 = zext i1 %2834 to i8
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2835, i8* %2836, align 1
  %2837 = trunc i64 %2831 to i32
  %2838 = and i32 %2837, 255
  %2839 = call i32 @llvm.ctpop.i32(i32 %2838)
  %2840 = trunc i32 %2839 to i8
  %2841 = and i8 %2840, 1
  %2842 = xor i8 %2841, 1
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2842, i8* %2843, align 1
  %2844 = xor i64 %2828, %2827
  %2845 = xor i64 %2844, %2831
  %2846 = lshr i64 %2845, 4
  %2847 = trunc i64 %2846 to i8
  %2848 = and i8 %2847, 1
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2848, i8* %2849, align 1
  %2850 = icmp eq i64 %2831, 0
  %2851 = zext i1 %2850 to i8
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2851, i8* %2852, align 1
  %2853 = lshr i64 %2831, 63
  %2854 = trunc i64 %2853 to i8
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2854, i8* %2855, align 1
  %2856 = lshr i64 %2827, 63
  %2857 = lshr i64 %2828, 63
  %2858 = xor i64 %2853, %2856
  %2859 = xor i64 %2853, %2857
  %2860 = add i64 %2858, %2859
  %2861 = icmp eq i64 %2860, 2
  %2862 = zext i1 %2861 to i8
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2862, i8* %2863, align 1
  store %struct.Memory* %loadMem_40b9d9, %struct.Memory** %MEMORY
  %loadMem_40b9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2865 = getelementptr inbounds %struct.GPR, %struct.GPR* %2864, i32 0, i32 33
  %2866 = getelementptr inbounds %struct.Reg, %struct.Reg* %2865, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %2866 to i64*
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 7
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %EDX.i1352 = bitcast %union.anon* %2869 to i32*
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 1
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %RAX.i1353 = bitcast %union.anon* %2872 to i64*
  %2873 = load i64, i64* %RAX.i1353
  %2874 = load i32, i32* %EDX.i1352
  %2875 = zext i32 %2874 to i64
  %2876 = load i64, i64* %PC.i1351
  %2877 = add i64 %2876, 2
  store i64 %2877, i64* %PC.i1351
  %2878 = inttoptr i64 %2873 to i32*
  store i32 %2874, i32* %2878
  store %struct.Memory* %loadMem_40b9dc, %struct.Memory** %MEMORY
  %loadMem_40b9de = load %struct.Memory*, %struct.Memory** %MEMORY
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2880 = getelementptr inbounds %struct.GPR, %struct.GPR* %2879, i32 0, i32 33
  %2881 = getelementptr inbounds %struct.Reg, %struct.Reg* %2880, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %2881 to i64*
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2883 = getelementptr inbounds %struct.GPR, %struct.GPR* %2882, i32 0, i32 1
  %2884 = getelementptr inbounds %struct.Reg, %struct.Reg* %2883, i32 0, i32 0
  %RAX.i1349 = bitcast %union.anon* %2884 to i64*
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2886 = getelementptr inbounds %struct.GPR, %struct.GPR* %2885, i32 0, i32 15
  %2887 = getelementptr inbounds %struct.Reg, %struct.Reg* %2886, i32 0, i32 0
  %RBP.i1350 = bitcast %union.anon* %2887 to i64*
  %2888 = load i64, i64* %RBP.i1350
  %2889 = sub i64 %2888, 24
  %2890 = load i64, i64* %PC.i1348
  %2891 = add i64 %2890, 4
  store i64 %2891, i64* %PC.i1348
  %2892 = inttoptr i64 %2889 to i32*
  %2893 = load i32, i32* %2892
  %2894 = sext i32 %2893 to i64
  store i64 %2894, i64* %RAX.i1349, align 8
  store %struct.Memory* %loadMem_40b9de, %struct.Memory** %MEMORY
  %loadMem_40b9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2896 = getelementptr inbounds %struct.GPR, %struct.GPR* %2895, i32 0, i32 33
  %2897 = getelementptr inbounds %struct.Reg, %struct.Reg* %2896, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %2897 to i64*
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2899 = getelementptr inbounds %struct.GPR, %struct.GPR* %2898, i32 0, i32 1
  %2900 = getelementptr inbounds %struct.Reg, %struct.Reg* %2899, i32 0, i32 0
  %RAX.i1347 = bitcast %union.anon* %2900 to i64*
  %2901 = load i64, i64* %RAX.i1347
  %2902 = mul i64 %2901, 4
  %2903 = add i64 %2902, 8807152
  %2904 = load i64, i64* %PC.i1346
  %2905 = add i64 %2904, 8
  store i64 %2905, i64* %PC.i1346
  %2906 = inttoptr i64 %2903 to i32*
  %2907 = load i32, i32* %2906
  %2908 = sext i32 %2907 to i64
  store i64 %2908, i64* %RAX.i1347, align 8
  store %struct.Memory* %loadMem_40b9e2, %struct.Memory** %MEMORY
  %loadMem_40b9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 33
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %2911 to i64*
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2913 = getelementptr inbounds %struct.GPR, %struct.GPR* %2912, i32 0, i32 1
  %2914 = getelementptr inbounds %struct.Reg, %struct.Reg* %2913, i32 0, i32 0
  %RAX.i1345 = bitcast %union.anon* %2914 to i64*
  %2915 = load i64, i64* %RAX.i1345
  %2916 = mul i64 %2915, 4
  %2917 = add i64 %2916, 8778480
  %2918 = load i64, i64* %PC.i1344
  %2919 = add i64 %2918, 11
  store i64 %2919, i64* %PC.i1344
  %2920 = inttoptr i64 %2917 to i32*
  store i32 0, i32* %2920
  store %struct.Memory* %loadMem_40b9ea, %struct.Memory** %MEMORY
  %loadMem_40b9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 33
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %2923 to i64*
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 7
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %RDX.i1342 = bitcast %union.anon* %2926 to i64*
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 15
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %RBP.i1343 = bitcast %union.anon* %2929 to i64*
  %2930 = load i64, i64* %RBP.i1343
  %2931 = sub i64 %2930, 24
  %2932 = load i64, i64* %PC.i1341
  %2933 = add i64 %2932, 3
  store i64 %2933, i64* %PC.i1341
  %2934 = inttoptr i64 %2931 to i32*
  %2935 = load i32, i32* %2934
  %2936 = zext i32 %2935 to i64
  store i64 %2936, i64* %RDX.i1342, align 8
  store %struct.Memory* %loadMem_40b9f5, %struct.Memory** %MEMORY
  %loadMem_40b9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 33
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %2939 to i64*
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2941 = getelementptr inbounds %struct.GPR, %struct.GPR* %2940, i32 0, i32 1
  %2942 = getelementptr inbounds %struct.Reg, %struct.Reg* %2941, i32 0, i32 0
  %RAX.i1339 = bitcast %union.anon* %2942 to i64*
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 15
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %RBP.i1340 = bitcast %union.anon* %2945 to i64*
  %2946 = load i64, i64* %RBP.i1340
  %2947 = sub i64 %2946, 20
  %2948 = load i64, i64* %PC.i1338
  %2949 = add i64 %2948, 4
  store i64 %2949, i64* %PC.i1338
  %2950 = inttoptr i64 %2947 to i32*
  %2951 = load i32, i32* %2950
  %2952 = sext i32 %2951 to i64
  store i64 %2952, i64* %RAX.i1339, align 8
  store %struct.Memory* %loadMem_40b9f8, %struct.Memory** %MEMORY
  %loadMem_40b9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 33
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %PC.i1336 = bitcast %union.anon* %2955 to i64*
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2957 = getelementptr inbounds %struct.GPR, %struct.GPR* %2956, i32 0, i32 1
  %2958 = getelementptr inbounds %struct.Reg, %struct.Reg* %2957, i32 0, i32 0
  %RAX.i1337 = bitcast %union.anon* %2958 to i64*
  %2959 = load i64, i64* %RAX.i1337
  %2960 = mul i64 %2959, 4
  %2961 = add i64 %2960, 8807152
  %2962 = load i64, i64* %PC.i1336
  %2963 = add i64 %2962, 8
  store i64 %2963, i64* %PC.i1336
  %2964 = inttoptr i64 %2961 to i32*
  %2965 = load i32, i32* %2964
  %2966 = sext i32 %2965 to i64
  store i64 %2966, i64* %RAX.i1337, align 8
  store %struct.Memory* %loadMem_40b9fc, %struct.Memory** %MEMORY
  %loadMem_40ba04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2968 = getelementptr inbounds %struct.GPR, %struct.GPR* %2967, i32 0, i32 33
  %2969 = getelementptr inbounds %struct.Reg, %struct.Reg* %2968, i32 0, i32 0
  %PC.i1333 = bitcast %union.anon* %2969 to i64*
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 7
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %EDX.i1334 = bitcast %union.anon* %2972 to i32*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 1
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %RAX.i1335 = bitcast %union.anon* %2975 to i64*
  %2976 = load i64, i64* %RAX.i1335
  %2977 = mul i64 %2976, 4
  %2978 = add i64 %2977, 8778480
  %2979 = load i32, i32* %EDX.i1334
  %2980 = zext i32 %2979 to i64
  %2981 = load i64, i64* %PC.i1333
  %2982 = add i64 %2981, 7
  store i64 %2982, i64* %PC.i1333
  %2983 = inttoptr i64 %2978 to i32*
  store i32 %2979, i32* %2983
  store %struct.Memory* %loadMem_40ba04, %struct.Memory** %MEMORY
  %loadMem_40ba0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 33
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %PC.i1330 = bitcast %union.anon* %2986 to i64*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 1
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %RAX.i1331 = bitcast %union.anon* %2989 to i64*
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 15
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %RBP.i1332 = bitcast %union.anon* %2992 to i64*
  %2993 = load i64, i64* %RBP.i1332
  %2994 = sub i64 %2993, 20
  %2995 = load i64, i64* %PC.i1330
  %2996 = add i64 %2995, 4
  store i64 %2996, i64* %PC.i1330
  %2997 = inttoptr i64 %2994 to i32*
  %2998 = load i32, i32* %2997
  %2999 = sext i32 %2998 to i64
  store i64 %2999, i64* %RAX.i1331, align 8
  store %struct.Memory* %loadMem_40ba0b, %struct.Memory** %MEMORY
  %loadMem_40ba0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3001 = getelementptr inbounds %struct.GPR, %struct.GPR* %3000, i32 0, i32 33
  %3002 = getelementptr inbounds %struct.Reg, %struct.Reg* %3001, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %3002 to i64*
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3004 = getelementptr inbounds %struct.GPR, %struct.GPR* %3003, i32 0, i32 1
  %3005 = getelementptr inbounds %struct.Reg, %struct.Reg* %3004, i32 0, i32 0
  %RAX.i1328 = bitcast %union.anon* %3005 to i64*
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3007 = getelementptr inbounds %struct.GPR, %struct.GPR* %3006, i32 0, i32 7
  %3008 = getelementptr inbounds %struct.Reg, %struct.Reg* %3007, i32 0, i32 0
  %RDX.i1329 = bitcast %union.anon* %3008 to i64*
  %3009 = load i64, i64* %RAX.i1328
  %3010 = mul i64 %3009, 4
  %3011 = add i64 %3010, 8807152
  %3012 = load i64, i64* %PC.i1327
  %3013 = add i64 %3012, 7
  store i64 %3013, i64* %PC.i1327
  %3014 = inttoptr i64 %3011 to i32*
  %3015 = load i32, i32* %3014
  %3016 = zext i32 %3015 to i64
  store i64 %3016, i64* %RDX.i1329, align 8
  store %struct.Memory* %loadMem_40ba0f, %struct.Memory** %MEMORY
  %loadMem_40ba16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 33
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %3019 to i64*
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3021 = getelementptr inbounds %struct.GPR, %struct.GPR* %3020, i32 0, i32 1
  %3022 = getelementptr inbounds %struct.Reg, %struct.Reg* %3021, i32 0, i32 0
  %RAX.i1325 = bitcast %union.anon* %3022 to i64*
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3024 = getelementptr inbounds %struct.GPR, %struct.GPR* %3023, i32 0, i32 15
  %3025 = getelementptr inbounds %struct.Reg, %struct.Reg* %3024, i32 0, i32 0
  %RBP.i1326 = bitcast %union.anon* %3025 to i64*
  %3026 = load i64, i64* %RBP.i1326
  %3027 = sub i64 %3026, 24
  %3028 = load i64, i64* %PC.i1324
  %3029 = add i64 %3028, 4
  store i64 %3029, i64* %PC.i1324
  %3030 = inttoptr i64 %3027 to i32*
  %3031 = load i32, i32* %3030
  %3032 = sext i32 %3031 to i64
  store i64 %3032, i64* %RAX.i1325, align 8
  store %struct.Memory* %loadMem_40ba16, %struct.Memory** %MEMORY
  %loadMem_40ba1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3034 = getelementptr inbounds %struct.GPR, %struct.GPR* %3033, i32 0, i32 33
  %3035 = getelementptr inbounds %struct.Reg, %struct.Reg* %3034, i32 0, i32 0
  %PC.i1321 = bitcast %union.anon* %3035 to i64*
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3037 = getelementptr inbounds %struct.GPR, %struct.GPR* %3036, i32 0, i32 7
  %3038 = getelementptr inbounds %struct.Reg, %struct.Reg* %3037, i32 0, i32 0
  %EDX.i1322 = bitcast %union.anon* %3038 to i32*
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3040 = getelementptr inbounds %struct.GPR, %struct.GPR* %3039, i32 0, i32 1
  %3041 = getelementptr inbounds %struct.Reg, %struct.Reg* %3040, i32 0, i32 0
  %RAX.i1323 = bitcast %union.anon* %3041 to i64*
  %3042 = load i64, i64* %RAX.i1323
  %3043 = mul i64 %3042, 4
  %3044 = add i64 %3043, 8807152
  %3045 = load i32, i32* %EDX.i1322
  %3046 = zext i32 %3045 to i64
  %3047 = load i64, i64* %PC.i1321
  %3048 = add i64 %3047, 7
  store i64 %3048, i64* %PC.i1321
  %3049 = inttoptr i64 %3044 to i32*
  store i32 %3045, i32* %3049
  store %struct.Memory* %loadMem_40ba1a, %struct.Memory** %MEMORY
  %loadMem_40ba21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3051 = getelementptr inbounds %struct.GPR, %struct.GPR* %3050, i32 0, i32 33
  %3052 = getelementptr inbounds %struct.Reg, %struct.Reg* %3051, i32 0, i32 0
  %PC.i1318 = bitcast %union.anon* %3052 to i64*
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3054 = getelementptr inbounds %struct.GPR, %struct.GPR* %3053, i32 0, i32 1
  %3055 = getelementptr inbounds %struct.Reg, %struct.Reg* %3054, i32 0, i32 0
  %RAX.i1319 = bitcast %union.anon* %3055 to i64*
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 15
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %RBP.i1320 = bitcast %union.anon* %3058 to i64*
  %3059 = load i64, i64* %RBP.i1320
  %3060 = sub i64 %3059, 20
  %3061 = load i64, i64* %PC.i1318
  %3062 = add i64 %3061, 4
  store i64 %3062, i64* %PC.i1318
  %3063 = inttoptr i64 %3060 to i32*
  %3064 = load i32, i32* %3063
  %3065 = sext i32 %3064 to i64
  store i64 %3065, i64* %RAX.i1319, align 8
  store %struct.Memory* %loadMem_40ba21, %struct.Memory** %MEMORY
  %loadMem_40ba25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3067 = getelementptr inbounds %struct.GPR, %struct.GPR* %3066, i32 0, i32 33
  %3068 = getelementptr inbounds %struct.Reg, %struct.Reg* %3067, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %3068 to i64*
  %3069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3070 = getelementptr inbounds %struct.GPR, %struct.GPR* %3069, i32 0, i32 1
  %3071 = getelementptr inbounds %struct.Reg, %struct.Reg* %3070, i32 0, i32 0
  %RAX.i1317 = bitcast %union.anon* %3071 to i64*
  %3072 = load i64, i64* %RAX.i1317
  %3073 = mul i64 %3072, 4
  %3074 = add i64 %3073, 8807152
  %3075 = load i64, i64* %PC.i1316
  %3076 = add i64 %3075, 11
  store i64 %3076, i64* %PC.i1316
  %3077 = inttoptr i64 %3074 to i32*
  store i32 0, i32* %3077
  store %struct.Memory* %loadMem_40ba25, %struct.Memory** %MEMORY
  %loadMem_40ba30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3079 = getelementptr inbounds %struct.GPR, %struct.GPR* %3078, i32 0, i32 33
  %3080 = getelementptr inbounds %struct.Reg, %struct.Reg* %3079, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %3080 to i64*
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3082 = getelementptr inbounds %struct.GPR, %struct.GPR* %3081, i32 0, i32 15
  %3083 = getelementptr inbounds %struct.Reg, %struct.Reg* %3082, i32 0, i32 0
  %RBP.i1315 = bitcast %union.anon* %3083 to i64*
  %3084 = load i64, i64* %RBP.i1315
  %3085 = sub i64 %3084, 16
  %3086 = load i64, i64* %PC.i1314
  %3087 = add i64 %3086, 4
  store i64 %3087, i64* %PC.i1314
  %3088 = inttoptr i64 %3085 to i32*
  %3089 = load i32, i32* %3088
  %3090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3090, align 1
  %3091 = and i32 %3089, 255
  %3092 = call i32 @llvm.ctpop.i32(i32 %3091)
  %3093 = trunc i32 %3092 to i8
  %3094 = and i8 %3093, 1
  %3095 = xor i8 %3094, 1
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3095, i8* %3096, align 1
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3097, align 1
  %3098 = icmp eq i32 %3089, 0
  %3099 = zext i1 %3098 to i8
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3099, i8* %3100, align 1
  %3101 = lshr i32 %3089, 31
  %3102 = trunc i32 %3101 to i8
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3102, i8* %3103, align 1
  %3104 = lshr i32 %3089, 31
  %3105 = xor i32 %3101, %3104
  %3106 = add i32 %3105, %3104
  %3107 = icmp eq i32 %3106, 2
  %3108 = zext i1 %3107 to i8
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3108, i8* %3109, align 1
  store %struct.Memory* %loadMem_40ba30, %struct.Memory** %MEMORY
  %loadMem_40ba34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 33
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %3112 to i64*
  %3113 = load i64, i64* %PC.i1313
  %3114 = add i64 %3113, 316
  %3115 = load i64, i64* %PC.i1313
  %3116 = add i64 %3115, 6
  %3117 = load i64, i64* %PC.i1313
  %3118 = add i64 %3117, 6
  store i64 %3118, i64* %PC.i1313
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3120 = load i8, i8* %3119, align 1
  %3121 = icmp eq i8 %3120, 0
  %3122 = zext i1 %3121 to i8
  store i8 %3122, i8* %BRANCH_TAKEN, align 1
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3124 = select i1 %3121, i64 %3114, i64 %3116
  store i64 %3124, i64* %3123, align 8
  store %struct.Memory* %loadMem_40ba34, %struct.Memory** %MEMORY
  %loadBr_40ba34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba34 = icmp eq i8 %loadBr_40ba34, 1
  br i1 %cmpBr_40ba34, label %block_.L_40bb70, label %block_40ba3a

block_40ba3a:                                     ; preds = %block_.L_40b990
  %loadMem_40ba3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 33
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %3127 to i64*
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 1
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %RAX.i1311 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 15
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %RBP.i1312 = bitcast %union.anon* %3133 to i64*
  %3134 = load i64, i64* %RBP.i1312
  %3135 = sub i64 %3134, 24
  %3136 = load i64, i64* %PC.i1310
  %3137 = add i64 %3136, 4
  store i64 %3137, i64* %PC.i1310
  %3138 = inttoptr i64 %3135 to i32*
  %3139 = load i32, i32* %3138
  %3140 = sext i32 %3139 to i64
  store i64 %3140, i64* %RAX.i1311, align 8
  store %struct.Memory* %loadMem_40ba3a, %struct.Memory** %MEMORY
  %loadMem_40ba3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3142 = getelementptr inbounds %struct.GPR, %struct.GPR* %3141, i32 0, i32 33
  %3143 = getelementptr inbounds %struct.Reg, %struct.Reg* %3142, i32 0, i32 0
  %PC.i1307 = bitcast %union.anon* %3143 to i64*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3145 = getelementptr inbounds %struct.GPR, %struct.GPR* %3144, i32 0, i32 1
  %3146 = getelementptr inbounds %struct.Reg, %struct.Reg* %3145, i32 0, i32 0
  %RAX.i1308 = bitcast %union.anon* %3146 to i64*
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3148 = getelementptr inbounds %struct.GPR, %struct.GPR* %3147, i32 0, i32 5
  %3149 = getelementptr inbounds %struct.Reg, %struct.Reg* %3148, i32 0, i32 0
  %RCX.i1309 = bitcast %union.anon* %3149 to i64*
  %3150 = load i64, i64* %RAX.i1308
  %3151 = mul i64 %3150, 4
  %3152 = add i64 %3151, 8807744
  %3153 = load i64, i64* %PC.i1307
  %3154 = add i64 %3153, 7
  store i64 %3154, i64* %PC.i1307
  %3155 = inttoptr i64 %3152 to i32*
  %3156 = load i32, i32* %3155
  %3157 = zext i32 %3156 to i64
  store i64 %3157, i64* %RCX.i1309, align 8
  store %struct.Memory* %loadMem_40ba3e, %struct.Memory** %MEMORY
  %loadMem_40ba45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 33
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %3160 to i64*
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3162 = getelementptr inbounds %struct.GPR, %struct.GPR* %3161, i32 0, i32 5
  %3163 = getelementptr inbounds %struct.Reg, %struct.Reg* %3162, i32 0, i32 0
  %RCX.i1306 = bitcast %union.anon* %3163 to i64*
  %3164 = load i64, i64* %RCX.i1306
  %3165 = load i64, i64* %PC.i1305
  %3166 = add i64 %3165, 3
  store i64 %3166, i64* %PC.i1305
  %3167 = trunc i64 %3164 to i32
  %3168 = sub i32 %3167, 13
  %3169 = zext i32 %3168 to i64
  store i64 %3169, i64* %RCX.i1306, align 8
  %3170 = icmp ult i32 %3167, 13
  %3171 = zext i1 %3170 to i8
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3171, i8* %3172, align 1
  %3173 = and i32 %3168, 255
  %3174 = call i32 @llvm.ctpop.i32(i32 %3173)
  %3175 = trunc i32 %3174 to i8
  %3176 = and i8 %3175, 1
  %3177 = xor i8 %3176, 1
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3177, i8* %3178, align 1
  %3179 = xor i64 13, %3164
  %3180 = trunc i64 %3179 to i32
  %3181 = xor i32 %3180, %3168
  %3182 = lshr i32 %3181, 4
  %3183 = trunc i32 %3182 to i8
  %3184 = and i8 %3183, 1
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3184, i8* %3185, align 1
  %3186 = icmp eq i32 %3168, 0
  %3187 = zext i1 %3186 to i8
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3187, i8* %3188, align 1
  %3189 = lshr i32 %3168, 31
  %3190 = trunc i32 %3189 to i8
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3190, i8* %3191, align 1
  %3192 = lshr i32 %3167, 31
  %3193 = xor i32 %3189, %3192
  %3194 = add i32 %3193, %3192
  %3195 = icmp eq i32 %3194, 2
  %3196 = zext i1 %3195 to i8
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3196, i8* %3197, align 1
  store %struct.Memory* %loadMem_40ba45, %struct.Memory** %MEMORY
  %loadMem_40ba48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3199 = getelementptr inbounds %struct.GPR, %struct.GPR* %3198, i32 0, i32 33
  %3200 = getelementptr inbounds %struct.Reg, %struct.Reg* %3199, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %3200 to i64*
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 5
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %ECX.i1303 = bitcast %union.anon* %3203 to i32*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 15
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %RBP.i1304 = bitcast %union.anon* %3206 to i64*
  %3207 = load i64, i64* %RBP.i1304
  %3208 = sub i64 %3207, 44
  %3209 = load i32, i32* %ECX.i1303
  %3210 = zext i32 %3209 to i64
  %3211 = load i64, i64* %PC.i1302
  %3212 = add i64 %3211, 3
  store i64 %3212, i64* %PC.i1302
  %3213 = inttoptr i64 %3208 to i32*
  store i32 %3209, i32* %3213
  store %struct.Memory* %loadMem_40ba48, %struct.Memory** %MEMORY
  %loadMem_40ba4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3215 = getelementptr inbounds %struct.GPR, %struct.GPR* %3214, i32 0, i32 33
  %3216 = getelementptr inbounds %struct.Reg, %struct.Reg* %3215, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %3216 to i64*
  %3217 = load i64, i64* %PC.i1301
  %3218 = add i64 %3217, 16
  %3219 = load i64, i64* %PC.i1301
  %3220 = add i64 %3219, 6
  %3221 = load i64, i64* %PC.i1301
  %3222 = add i64 %3221, 6
  store i64 %3222, i64* %PC.i1301
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3224 = load i8, i8* %3223, align 1
  %3225 = icmp eq i8 %3224, 0
  %3226 = zext i1 %3225 to i8
  store i8 %3226, i8* %BRANCH_TAKEN, align 1
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3228 = select i1 %3225, i64 %3218, i64 %3220
  store i64 %3228, i64* %3227, align 8
  store %struct.Memory* %loadMem_40ba4b, %struct.Memory** %MEMORY
  %loadBr_40ba4b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba4b = icmp eq i8 %loadBr_40ba4b, 1
  br i1 %cmpBr_40ba4b, label %block_.L_40ba5b, label %block_40ba51

block_40ba51:                                     ; preds = %block_40ba3a
  %loadMem_40ba51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3230 = getelementptr inbounds %struct.GPR, %struct.GPR* %3229, i32 0, i32 33
  %3231 = getelementptr inbounds %struct.Reg, %struct.Reg* %3230, i32 0, i32 0
  %PC.i1300 = bitcast %union.anon* %3231 to i64*
  %3232 = load i64, i64* %PC.i1300
  %3233 = add i64 %3232, 5
  %3234 = load i64, i64* %PC.i1300
  %3235 = add i64 %3234, 5
  store i64 %3235, i64* %PC.i1300
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3233, i64* %3236, align 8
  store %struct.Memory* %loadMem_40ba51, %struct.Memory** %MEMORY
  br label %block_.L_40ba56

block_.L_40ba56:                                  ; preds = %block_40ba51
  %loadMem_40ba56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 33
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %3239 to i64*
  %3240 = load i64, i64* %PC.i1299
  %3241 = add i64 %3240, 277
  %3242 = load i64, i64* %PC.i1299
  %3243 = add i64 %3242, 5
  store i64 %3243, i64* %PC.i1299
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3241, i64* %3244, align 8
  store %struct.Memory* %loadMem_40ba56, %struct.Memory** %MEMORY
  br label %block_.L_40bb6b

block_.L_40ba5b:                                  ; preds = %block_40ba3a
  %loadMem_40ba5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3246 = getelementptr inbounds %struct.GPR, %struct.GPR* %3245, i32 0, i32 33
  %3247 = getelementptr inbounds %struct.Reg, %struct.Reg* %3246, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %3247 to i64*
  %3248 = load i64, i64* %PC.i1298
  %3249 = add i64 %3248, 8
  store i64 %3249, i64* %PC.i1298
  %3250 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %3251 = sub i32 %3250, 1
  %3252 = icmp ult i32 %3250, 1
  %3253 = zext i1 %3252 to i8
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3253, i8* %3254, align 1
  %3255 = and i32 %3251, 255
  %3256 = call i32 @llvm.ctpop.i32(i32 %3255)
  %3257 = trunc i32 %3256 to i8
  %3258 = and i8 %3257, 1
  %3259 = xor i8 %3258, 1
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3259, i8* %3260, align 1
  %3261 = xor i32 %3250, 1
  %3262 = xor i32 %3261, %3251
  %3263 = lshr i32 %3262, 4
  %3264 = trunc i32 %3263 to i8
  %3265 = and i8 %3264, 1
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3265, i8* %3266, align 1
  %3267 = icmp eq i32 %3251, 0
  %3268 = zext i1 %3267 to i8
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3268, i8* %3269, align 1
  %3270 = lshr i32 %3251, 31
  %3271 = trunc i32 %3270 to i8
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3271, i8* %3272, align 1
  %3273 = lshr i32 %3250, 31
  %3274 = xor i32 %3270, %3273
  %3275 = add i32 %3274, %3273
  %3276 = icmp eq i32 %3275, 2
  %3277 = zext i1 %3276 to i8
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3277, i8* %3278, align 1
  store %struct.Memory* %loadMem_40ba5b, %struct.Memory** %MEMORY
  %loadMem_40ba63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 33
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %3281 to i64*
  %3282 = load i64, i64* %PC.i1297
  %3283 = add i64 %3282, 20
  %3284 = load i64, i64* %PC.i1297
  %3285 = add i64 %3284, 6
  %3286 = load i64, i64* %PC.i1297
  %3287 = add i64 %3286, 6
  store i64 %3287, i64* %PC.i1297
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3289 = load i8, i8* %3288, align 1
  store i8 %3289, i8* %BRANCH_TAKEN, align 1
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3291 = icmp ne i8 %3289, 0
  %3292 = select i1 %3291, i64 %3283, i64 %3285
  store i64 %3292, i64* %3290, align 8
  store %struct.Memory* %loadMem_40ba63, %struct.Memory** %MEMORY
  %loadBr_40ba63 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba63 = icmp eq i8 %loadBr_40ba63, 1
  br i1 %cmpBr_40ba63, label %block_.L_40ba77, label %block_40ba69

block_40ba69:                                     ; preds = %block_.L_40ba5b
  %loadMem_40ba69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3294 = getelementptr inbounds %struct.GPR, %struct.GPR* %3293, i32 0, i32 33
  %3295 = getelementptr inbounds %struct.Reg, %struct.Reg* %3294, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %3295 to i64*
  %3296 = load i64, i64* %PC.i1296
  %3297 = add i64 %3296, 8
  store i64 %3297, i64* %PC.i1296
  %3298 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3299, align 1
  %3300 = and i32 %3298, 255
  %3301 = call i32 @llvm.ctpop.i32(i32 %3300)
  %3302 = trunc i32 %3301 to i8
  %3303 = and i8 %3302, 1
  %3304 = xor i8 %3303, 1
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3304, i8* %3305, align 1
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3306, align 1
  %3307 = icmp eq i32 %3298, 0
  %3308 = zext i1 %3307 to i8
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3308, i8* %3309, align 1
  %3310 = lshr i32 %3298, 31
  %3311 = trunc i32 %3310 to i8
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3311, i8* %3312, align 1
  %3313 = lshr i32 %3298, 31
  %3314 = xor i32 %3310, %3313
  %3315 = add i32 %3314, %3313
  %3316 = icmp eq i32 %3315, 2
  %3317 = zext i1 %3316 to i8
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3317, i8* %3318, align 1
  store %struct.Memory* %loadMem_40ba69, %struct.Memory** %MEMORY
  %loadMem_40ba71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3320 = getelementptr inbounds %struct.GPR, %struct.GPR* %3319, i32 0, i32 33
  %3321 = getelementptr inbounds %struct.Reg, %struct.Reg* %3320, i32 0, i32 0
  %PC.i1295 = bitcast %union.anon* %3321 to i64*
  %3322 = load i64, i64* %PC.i1295
  %3323 = add i64 %3322, 145
  %3324 = load i64, i64* %PC.i1295
  %3325 = add i64 %3324, 6
  %3326 = load i64, i64* %PC.i1295
  %3327 = add i64 %3326, 6
  store i64 %3327, i64* %PC.i1295
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3329 = load i8, i8* %3328, align 1
  %3330 = icmp eq i8 %3329, 0
  %3331 = zext i1 %3330 to i8
  store i8 %3331, i8* %BRANCH_TAKEN, align 1
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3333 = select i1 %3330, i64 %3323, i64 %3325
  store i64 %3333, i64* %3332, align 8
  store %struct.Memory* %loadMem_40ba71, %struct.Memory** %MEMORY
  %loadBr_40ba71 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba71 = icmp eq i8 %loadBr_40ba71, 1
  br i1 %cmpBr_40ba71, label %block_.L_40bb02, label %block_.L_40ba77

block_.L_40ba77:                                  ; preds = %block_40ba69, %block_.L_40ba5b
  %loadMem_40ba77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3335 = getelementptr inbounds %struct.GPR, %struct.GPR* %3334, i32 0, i32 33
  %3336 = getelementptr inbounds %struct.Reg, %struct.Reg* %3335, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %3336 to i64*
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3338 = getelementptr inbounds %struct.GPR, %struct.GPR* %3337, i32 0, i32 1
  %3339 = getelementptr inbounds %struct.Reg, %struct.Reg* %3338, i32 0, i32 0
  %RAX.i1294 = bitcast %union.anon* %3339 to i64*
  %3340 = load i64, i64* %PC.i1293
  %3341 = add i64 %3340, 10
  store i64 %3341, i64* %PC.i1293
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1294, align 8
  store %struct.Memory* %loadMem_40ba77, %struct.Memory** %MEMORY
  %loadMem_40ba81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3343 = getelementptr inbounds %struct.GPR, %struct.GPR* %3342, i32 0, i32 33
  %3344 = getelementptr inbounds %struct.Reg, %struct.Reg* %3343, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %3344 to i64*
  %3345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3346 = getelementptr inbounds %struct.GPR, %struct.GPR* %3345, i32 0, i32 5
  %3347 = getelementptr inbounds %struct.Reg, %struct.Reg* %3346, i32 0, i32 0
  %RCX.i1292 = bitcast %union.anon* %3347 to i64*
  %3348 = load i64, i64* %PC.i1291
  %3349 = add i64 %3348, 8
  store i64 %3349, i64* %PC.i1291
  %3350 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %3351 = sext i32 %3350 to i64
  store i64 %3351, i64* %RCX.i1292, align 8
  store %struct.Memory* %loadMem_40ba81, %struct.Memory** %MEMORY
  %loadMem_40ba89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 33
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %3354 to i64*
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3356 = getelementptr inbounds %struct.GPR, %struct.GPR* %3355, i32 0, i32 5
  %3357 = getelementptr inbounds %struct.Reg, %struct.Reg* %3356, i32 0, i32 0
  %RCX.i1290 = bitcast %union.anon* %3357 to i64*
  %3358 = load i64, i64* %RCX.i1290
  %3359 = load i64, i64* %PC.i1289
  %3360 = add i64 %3359, 4
  store i64 %3360, i64* %PC.i1289
  %3361 = shl i64 %3358, 3
  %3362 = icmp slt i64 %3361, 0
  %3363 = shl i64 %3361, 1
  store i64 %3363, i64* %RCX.i1290, align 8
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3365 = zext i1 %3362 to i8
  store i8 %3365, i8* %3364, align 1
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3367 = trunc i64 %3363 to i32
  %3368 = and i32 %3367, 254
  %3369 = call i32 @llvm.ctpop.i32(i32 %3368)
  %3370 = trunc i32 %3369 to i8
  %3371 = and i8 %3370, 1
  %3372 = xor i8 %3371, 1
  store i8 %3372, i8* %3366, align 1
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3373, align 1
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3375 = icmp eq i64 %3363, 0
  %3376 = zext i1 %3375 to i8
  store i8 %3376, i8* %3374, align 1
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3378 = lshr i64 %3363, 63
  %3379 = trunc i64 %3378 to i8
  store i8 %3379, i8* %3377, align 1
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3380, align 1
  store %struct.Memory* %loadMem_40ba89, %struct.Memory** %MEMORY
  %loadMem_40ba8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 33
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 1
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RAX.i1287 = bitcast %union.anon* %3386 to i64*
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 5
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %RCX.i1288 = bitcast %union.anon* %3389 to i64*
  %3390 = load i64, i64* %RAX.i1287
  %3391 = load i64, i64* %RCX.i1288
  %3392 = load i64, i64* %PC.i1286
  %3393 = add i64 %3392, 3
  store i64 %3393, i64* %PC.i1286
  %3394 = add i64 %3391, %3390
  store i64 %3394, i64* %RAX.i1287, align 8
  %3395 = icmp ult i64 %3394, %3390
  %3396 = icmp ult i64 %3394, %3391
  %3397 = or i1 %3395, %3396
  %3398 = zext i1 %3397 to i8
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3398, i8* %3399, align 1
  %3400 = trunc i64 %3394 to i32
  %3401 = and i32 %3400, 255
  %3402 = call i32 @llvm.ctpop.i32(i32 %3401)
  %3403 = trunc i32 %3402 to i8
  %3404 = and i8 %3403, 1
  %3405 = xor i8 %3404, 1
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3405, i8* %3406, align 1
  %3407 = xor i64 %3391, %3390
  %3408 = xor i64 %3407, %3394
  %3409 = lshr i64 %3408, 4
  %3410 = trunc i64 %3409 to i8
  %3411 = and i8 %3410, 1
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3411, i8* %3412, align 1
  %3413 = icmp eq i64 %3394, 0
  %3414 = zext i1 %3413 to i8
  %3415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3414, i8* %3415, align 1
  %3416 = lshr i64 %3394, 63
  %3417 = trunc i64 %3416 to i8
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3417, i8* %3418, align 1
  %3419 = lshr i64 %3390, 63
  %3420 = lshr i64 %3391, 63
  %3421 = xor i64 %3416, %3419
  %3422 = xor i64 %3416, %3420
  %3423 = add i64 %3421, %3422
  %3424 = icmp eq i64 %3423, 2
  %3425 = zext i1 %3424 to i8
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3425, i8* %3426, align 1
  store %struct.Memory* %loadMem_40ba8d, %struct.Memory** %MEMORY
  %loadMem_40ba90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3428 = getelementptr inbounds %struct.GPR, %struct.GPR* %3427, i32 0, i32 33
  %3429 = getelementptr inbounds %struct.Reg, %struct.Reg* %3428, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %3429 to i64*
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3431 = getelementptr inbounds %struct.GPR, %struct.GPR* %3430, i32 0, i32 1
  %3432 = getelementptr inbounds %struct.Reg, %struct.Reg* %3431, i32 0, i32 0
  %RAX.i1285 = bitcast %union.anon* %3432 to i64*
  %3433 = load i64, i64* %RAX.i1285
  %3434 = add i64 %3433, 4
  %3435 = load i64, i64* %PC.i1284
  %3436 = add i64 %3435, 4
  store i64 %3436, i64* %PC.i1284
  %3437 = inttoptr i64 %3434 to i32*
  %3438 = load i32, i32* %3437
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3439, align 1
  %3440 = and i32 %3438, 255
  %3441 = call i32 @llvm.ctpop.i32(i32 %3440)
  %3442 = trunc i32 %3441 to i8
  %3443 = and i8 %3442, 1
  %3444 = xor i8 %3443, 1
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3444, i8* %3445, align 1
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3446, align 1
  %3447 = icmp eq i32 %3438, 0
  %3448 = zext i1 %3447 to i8
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3448, i8* %3449, align 1
  %3450 = lshr i32 %3438, 31
  %3451 = trunc i32 %3450 to i8
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3451, i8* %3452, align 1
  %3453 = lshr i32 %3438, 31
  %3454 = xor i32 %3450, %3453
  %3455 = add i32 %3454, %3453
  %3456 = icmp eq i32 %3455, 2
  %3457 = zext i1 %3456 to i8
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3457, i8* %3458, align 1
  store %struct.Memory* %loadMem_40ba90, %struct.Memory** %MEMORY
  %loadMem_40ba94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3460 = getelementptr inbounds %struct.GPR, %struct.GPR* %3459, i32 0, i32 33
  %3461 = getelementptr inbounds %struct.Reg, %struct.Reg* %3460, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %3461 to i64*
  %3462 = load i64, i64* %PC.i1283
  %3463 = add i64 %3462, 58
  %3464 = load i64, i64* %PC.i1283
  %3465 = add i64 %3464, 6
  %3466 = load i64, i64* %PC.i1283
  %3467 = add i64 %3466, 6
  store i64 %3467, i64* %PC.i1283
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3469 = load i8, i8* %3468, align 1
  store i8 %3469, i8* %BRANCH_TAKEN, align 1
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3471 = icmp ne i8 %3469, 0
  %3472 = select i1 %3471, i64 %3463, i64 %3465
  store i64 %3472, i64* %3470, align 8
  store %struct.Memory* %loadMem_40ba94, %struct.Memory** %MEMORY
  %loadBr_40ba94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ba94 = icmp eq i8 %loadBr_40ba94, 1
  br i1 %cmpBr_40ba94, label %block_.L_40bace, label %block_40ba9a

block_40ba9a:                                     ; preds = %block_.L_40ba77
  %loadMem_40ba9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 33
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %3475 to i64*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 1
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RAX.i1281 = bitcast %union.anon* %3478 to i64*
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 15
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %RBP.i1282 = bitcast %union.anon* %3481 to i64*
  %3482 = load i64, i64* %RBP.i1282
  %3483 = sub i64 %3482, 24
  %3484 = load i64, i64* %PC.i1280
  %3485 = add i64 %3484, 4
  store i64 %3485, i64* %PC.i1280
  %3486 = inttoptr i64 %3483 to i32*
  %3487 = load i32, i32* %3486
  %3488 = sext i32 %3487 to i64
  store i64 %3488, i64* %RAX.i1281, align 8
  store %struct.Memory* %loadMem_40ba9a, %struct.Memory** %MEMORY
  %loadMem_40ba9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 33
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 1
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %RAX.i1278 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 11
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %RDI.i1279 = bitcast %union.anon* %3497 to i64*
  %3498 = load i64, i64* %RAX.i1278
  %3499 = mul i64 %3498, 4
  %3500 = add i64 %3499, 8807744
  %3501 = load i64, i64* %PC.i1277
  %3502 = add i64 %3501, 7
  store i64 %3502, i64* %PC.i1277
  %3503 = inttoptr i64 %3500 to i32*
  %3504 = load i32, i32* %3503
  %3505 = zext i32 %3504 to i64
  store i64 %3505, i64* %RDI.i1279, align 8
  store %struct.Memory* %loadMem_40ba9e, %struct.Memory** %MEMORY
  %loadMem1_40baa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 33
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %3508 to i64*
  %3509 = load i64, i64* %PC.i1276
  %3510 = add i64 %3509, -38389
  %3511 = load i64, i64* %PC.i1276
  %3512 = add i64 %3511, 5
  %3513 = load i64, i64* %PC.i1276
  %3514 = add i64 %3513, 5
  store i64 %3514, i64* %PC.i1276
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3516 = load i64, i64* %3515, align 8
  %3517 = add i64 %3516, -8
  %3518 = inttoptr i64 %3517 to i64*
  store i64 %3512, i64* %3518
  store i64 %3517, i64* %3515, align 8
  %3519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3510, i64* %3519, align 8
  store %struct.Memory* %loadMem1_40baa5, %struct.Memory** %MEMORY
  %loadMem2_40baa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40baa5 = load i64, i64* %3
  %call2_40baa5 = call %struct.Memory* @sub_4024b0.SwitchPromoted(%struct.State* %0, i64 %loadPC_40baa5, %struct.Memory* %loadMem2_40baa5)
  store %struct.Memory* %call2_40baa5, %struct.Memory** %MEMORY
  %loadMem_40baaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 33
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %3522 to i64*
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3524 = getelementptr inbounds %struct.GPR, %struct.GPR* %3523, i32 0, i32 11
  %3525 = getelementptr inbounds %struct.Reg, %struct.Reg* %3524, i32 0, i32 0
  %RDI.i1275 = bitcast %union.anon* %3525 to i64*
  %3526 = load i64, i64* %PC.i1274
  %3527 = add i64 %3526, 5
  store i64 %3527, i64* %PC.i1274
  store i64 1, i64* %RDI.i1275, align 8
  store %struct.Memory* %loadMem_40baaa, %struct.Memory** %MEMORY
  %loadMem_40baaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3529 = getelementptr inbounds %struct.GPR, %struct.GPR* %3528, i32 0, i32 33
  %3530 = getelementptr inbounds %struct.Reg, %struct.Reg* %3529, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %3530 to i64*
  %3531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3532 = getelementptr inbounds %struct.GPR, %struct.GPR* %3531, i32 0, i32 5
  %3533 = getelementptr inbounds %struct.Reg, %struct.Reg* %3532, i32 0, i32 0
  %ECX.i1272 = bitcast %union.anon* %3533 to i32*
  %3534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3535 = getelementptr inbounds %struct.GPR, %struct.GPR* %3534, i32 0, i32 5
  %3536 = getelementptr inbounds %struct.Reg, %struct.Reg* %3535, i32 0, i32 0
  %RCX.i1273 = bitcast %union.anon* %3536 to i64*
  %3537 = load i64, i64* %RCX.i1273
  %3538 = load i32, i32* %ECX.i1272
  %3539 = zext i32 %3538 to i64
  %3540 = load i64, i64* %PC.i1271
  %3541 = add i64 %3540, 2
  store i64 %3541, i64* %PC.i1271
  %3542 = xor i64 %3539, %3537
  %3543 = trunc i64 %3542 to i32
  %3544 = and i64 %3542, 4294967295
  store i64 %3544, i64* %RCX.i1273, align 8
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3545, align 1
  %3546 = and i32 %3543, 255
  %3547 = call i32 @llvm.ctpop.i32(i32 %3546)
  %3548 = trunc i32 %3547 to i8
  %3549 = and i8 %3548, 1
  %3550 = xor i8 %3549, 1
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3550, i8* %3551, align 1
  %3552 = icmp eq i32 %3543, 0
  %3553 = zext i1 %3552 to i8
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3553, i8* %3554, align 1
  %3555 = lshr i32 %3543, 31
  %3556 = trunc i32 %3555 to i8
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3556, i8* %3557, align 1
  %3558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3558, align 1
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3559, align 1
  store %struct.Memory* %loadMem_40baaf, %struct.Memory** %MEMORY
  %loadMem_40bab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 33
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %3562 to i64*
  %3563 = load i64, i64* %PC.i1270
  %3564 = add i64 %3563, 8
  store i64 %3564, i64* %PC.i1270
  %3565 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3566, align 1
  %3567 = and i32 %3565, 255
  %3568 = call i32 @llvm.ctpop.i32(i32 %3567)
  %3569 = trunc i32 %3568 to i8
  %3570 = and i8 %3569, 1
  %3571 = xor i8 %3570, 1
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3571, i8* %3572, align 1
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3573, align 1
  %3574 = icmp eq i32 %3565, 0
  %3575 = zext i1 %3574 to i8
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3575, i8* %3576, align 1
  %3577 = lshr i32 %3565, 31
  %3578 = trunc i32 %3577 to i8
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3578, i8* %3579, align 1
  %3580 = lshr i32 %3565, 31
  %3581 = xor i32 %3577, %3580
  %3582 = add i32 %3581, %3580
  %3583 = icmp eq i32 %3582, 2
  %3584 = zext i1 %3583 to i8
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3584, i8* %3585, align 1
  store %struct.Memory* %loadMem_40bab1, %struct.Memory** %MEMORY
  %loadMem_40bab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 33
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %3588 to i64*
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3590 = getelementptr inbounds %struct.GPR, %struct.GPR* %3589, i32 0, i32 5
  %3591 = getelementptr inbounds %struct.Reg, %struct.Reg* %3590, i32 0, i32 0
  %ECX.i1268 = bitcast %union.anon* %3591 to i32*
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 11
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %RDI.i1269 = bitcast %union.anon* %3594 to i64*
  %3595 = load i32, i32* %ECX.i1268
  %3596 = zext i32 %3595 to i64
  %3597 = load i64, i64* %PC.i1267
  %3598 = add i64 %3597, 3
  store i64 %3598, i64* %PC.i1267
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3600 = load i8, i8* %3599, align 1
  %3601 = icmp eq i8 %3600, 0
  %3602 = load i64, i64* %RDI.i1269, align 8
  %3603 = select i1 %3601, i64 %3596, i64 %3602
  %3604 = and i64 %3603, 4294967295
  store i64 %3604, i64* %RDI.i1269, align 8
  store %struct.Memory* %loadMem_40bab9, %struct.Memory** %MEMORY
  %loadMem_40babc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 33
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %3607 to i64*
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 11
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %EDI.i1265 = bitcast %union.anon* %3610 to i32*
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3612 = getelementptr inbounds %struct.GPR, %struct.GPR* %3611, i32 0, i32 15
  %3613 = getelementptr inbounds %struct.Reg, %struct.Reg* %3612, i32 0, i32 0
  %RBP.i1266 = bitcast %union.anon* %3613 to i64*
  %3614 = load i64, i64* %RBP.i1266
  %3615 = sub i64 %3614, 48
  %3616 = load i32, i32* %EDI.i1265
  %3617 = zext i32 %3616 to i64
  %3618 = load i64, i64* %PC.i1264
  %3619 = add i64 %3618, 3
  store i64 %3619, i64* %PC.i1264
  %3620 = inttoptr i64 %3615 to i32*
  store i32 %3616, i32* %3620
  store %struct.Memory* %loadMem_40babc, %struct.Memory** %MEMORY
  %loadMem_40babf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3622 = getelementptr inbounds %struct.GPR, %struct.GPR* %3621, i32 0, i32 33
  %3623 = getelementptr inbounds %struct.Reg, %struct.Reg* %3622, i32 0, i32 0
  %PC.i1261 = bitcast %union.anon* %3623 to i64*
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 1
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %EAX.i1262 = bitcast %union.anon* %3626 to i32*
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3628 = getelementptr inbounds %struct.GPR, %struct.GPR* %3627, i32 0, i32 11
  %3629 = getelementptr inbounds %struct.Reg, %struct.Reg* %3628, i32 0, i32 0
  %RDI.i1263 = bitcast %union.anon* %3629 to i64*
  %3630 = load i32, i32* %EAX.i1262
  %3631 = zext i32 %3630 to i64
  %3632 = load i64, i64* %PC.i1261
  %3633 = add i64 %3632, 2
  store i64 %3633, i64* %PC.i1261
  %3634 = and i64 %3631, 4294967295
  store i64 %3634, i64* %RDI.i1263, align 8
  store %struct.Memory* %loadMem_40babf, %struct.Memory** %MEMORY
  %loadMem_40bac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 33
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %PC.i1258 = bitcast %union.anon* %3637 to i64*
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3639 = getelementptr inbounds %struct.GPR, %struct.GPR* %3638, i32 0, i32 9
  %3640 = getelementptr inbounds %struct.Reg, %struct.Reg* %3639, i32 0, i32 0
  %RSI.i1259 = bitcast %union.anon* %3640 to i64*
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 15
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %RBP.i1260 = bitcast %union.anon* %3643 to i64*
  %3644 = load i64, i64* %RBP.i1260
  %3645 = sub i64 %3644, 48
  %3646 = load i64, i64* %PC.i1258
  %3647 = add i64 %3646, 3
  store i64 %3647, i64* %PC.i1258
  %3648 = inttoptr i64 %3645 to i32*
  %3649 = load i32, i32* %3648
  %3650 = zext i32 %3649 to i64
  store i64 %3650, i64* %RSI.i1259, align 8
  store %struct.Memory* %loadMem_40bac1, %struct.Memory** %MEMORY
  %loadMem1_40bac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3652 = getelementptr inbounds %struct.GPR, %struct.GPR* %3651, i32 0, i32 33
  %3653 = getelementptr inbounds %struct.Reg, %struct.Reg* %3652, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %3653 to i64*
  %3654 = load i64, i64* %PC.i1257
  %3655 = add i64 %3654, -38356
  %3656 = load i64, i64* %PC.i1257
  %3657 = add i64 %3656, 5
  %3658 = load i64, i64* %PC.i1257
  %3659 = add i64 %3658, 5
  store i64 %3659, i64* %PC.i1257
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3661 = load i64, i64* %3660, align 8
  %3662 = add i64 %3661, -8
  %3663 = inttoptr i64 %3662 to i64*
  store i64 %3657, i64* %3663
  store i64 %3662, i64* %3660, align 8
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3655, i64* %3664, align 8
  store %struct.Memory* %loadMem1_40bac4, %struct.Memory** %MEMORY
  %loadMem2_40bac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40bac4 = load i64, i64* %3
  %call2_40bac4 = call %struct.Memory* @sub_4024f0.addHolding(%struct.State* %0, i64 %loadPC_40bac4, %struct.Memory* %loadMem2_40bac4)
  store %struct.Memory* %call2_40bac4, %struct.Memory** %MEMORY
  %loadMem_40bac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3666 = getelementptr inbounds %struct.GPR, %struct.GPR* %3665, i32 0, i32 33
  %3667 = getelementptr inbounds %struct.Reg, %struct.Reg* %3666, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %3667 to i64*
  %3668 = load i64, i64* %PC.i1256
  %3669 = add i64 %3668, 52
  %3670 = load i64, i64* %PC.i1256
  %3671 = add i64 %3670, 5
  store i64 %3671, i64* %PC.i1256
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3669, i64* %3672, align 8
  store %struct.Memory* %loadMem_40bac9, %struct.Memory** %MEMORY
  br label %block_.L_40bafd

block_.L_40bace:                                  ; preds = %block_.L_40ba77
  %loadMem_40bace = load %struct.Memory*, %struct.Memory** %MEMORY
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 33
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %3675 to i64*
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 1
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %RAX.i1254 = bitcast %union.anon* %3678 to i64*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 15
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %RBP.i1255 = bitcast %union.anon* %3681 to i64*
  %3682 = load i64, i64* %RBP.i1255
  %3683 = sub i64 %3682, 24
  %3684 = load i64, i64* %PC.i1253
  %3685 = add i64 %3684, 4
  store i64 %3685, i64* %PC.i1253
  %3686 = inttoptr i64 %3683 to i32*
  %3687 = load i32, i32* %3686
  %3688 = sext i32 %3687 to i64
  store i64 %3688, i64* %RAX.i1254, align 8
  store %struct.Memory* %loadMem_40bace, %struct.Memory** %MEMORY
  %loadMem_40bad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 33
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %3691 to i64*
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3693 = getelementptr inbounds %struct.GPR, %struct.GPR* %3692, i32 0, i32 1
  %3694 = getelementptr inbounds %struct.Reg, %struct.Reg* %3693, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %3694 to i64*
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3696 = getelementptr inbounds %struct.GPR, %struct.GPR* %3695, i32 0, i32 11
  %3697 = getelementptr inbounds %struct.Reg, %struct.Reg* %3696, i32 0, i32 0
  %RDI.i1252 = bitcast %union.anon* %3697 to i64*
  %3698 = load i64, i64* %RAX.i1251
  %3699 = mul i64 %3698, 4
  %3700 = add i64 %3699, 8807744
  %3701 = load i64, i64* %PC.i1250
  %3702 = add i64 %3701, 7
  store i64 %3702, i64* %PC.i1250
  %3703 = inttoptr i64 %3700 to i32*
  %3704 = load i32, i32* %3703
  %3705 = zext i32 %3704 to i64
  store i64 %3705, i64* %RDI.i1252, align 8
  store %struct.Memory* %loadMem_40bad2, %struct.Memory** %MEMORY
  %loadMem1_40bad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 33
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %3708 to i64*
  %3709 = load i64, i64* %PC.i1249
  %3710 = add i64 %3709, -38505
  %3711 = load i64, i64* %PC.i1249
  %3712 = add i64 %3711, 5
  %3713 = load i64, i64* %PC.i1249
  %3714 = add i64 %3713, 5
  store i64 %3714, i64* %PC.i1249
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3716 = load i64, i64* %3715, align 8
  %3717 = add i64 %3716, -8
  %3718 = inttoptr i64 %3717 to i64*
  store i64 %3712, i64* %3718
  store i64 %3717, i64* %3715, align 8
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3710, i64* %3719, align 8
  store %struct.Memory* %loadMem1_40bad9, %struct.Memory** %MEMORY
  %loadMem2_40bad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40bad9 = load i64, i64* %3
  %call2_40bad9 = call %struct.Memory* @sub_402470.SwitchColor(%struct.State* %0, i64 %loadPC_40bad9, %struct.Memory* %loadMem2_40bad9)
  store %struct.Memory* %call2_40bad9, %struct.Memory** %MEMORY
  %loadMem_40bade = load %struct.Memory*, %struct.Memory** %MEMORY
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 33
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %3722 to i64*
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3724 = getelementptr inbounds %struct.GPR, %struct.GPR* %3723, i32 0, i32 11
  %3725 = getelementptr inbounds %struct.Reg, %struct.Reg* %3724, i32 0, i32 0
  %RDI.i1248 = bitcast %union.anon* %3725 to i64*
  %3726 = load i64, i64* %PC.i1247
  %3727 = add i64 %3726, 5
  store i64 %3727, i64* %PC.i1247
  store i64 1, i64* %RDI.i1248, align 8
  store %struct.Memory* %loadMem_40bade, %struct.Memory** %MEMORY
  %loadMem_40bae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 33
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %3730 to i64*
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 5
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %ECX.i1245 = bitcast %union.anon* %3733 to i32*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 5
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %RCX.i1246 = bitcast %union.anon* %3736 to i64*
  %3737 = load i64, i64* %RCX.i1246
  %3738 = load i32, i32* %ECX.i1245
  %3739 = zext i32 %3738 to i64
  %3740 = load i64, i64* %PC.i1244
  %3741 = add i64 %3740, 2
  store i64 %3741, i64* %PC.i1244
  %3742 = xor i64 %3739, %3737
  %3743 = trunc i64 %3742 to i32
  %3744 = and i64 %3742, 4294967295
  store i64 %3744, i64* %RCX.i1246, align 8
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3745, align 1
  %3746 = and i32 %3743, 255
  %3747 = call i32 @llvm.ctpop.i32(i32 %3746)
  %3748 = trunc i32 %3747 to i8
  %3749 = and i8 %3748, 1
  %3750 = xor i8 %3749, 1
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3750, i8* %3751, align 1
  %3752 = icmp eq i32 %3743, 0
  %3753 = zext i1 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3753, i8* %3754, align 1
  %3755 = lshr i32 %3743, 31
  %3756 = trunc i32 %3755 to i8
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3756, i8* %3757, align 1
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3758, align 1
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3759, align 1
  store %struct.Memory* %loadMem_40bae3, %struct.Memory** %MEMORY
  %loadMem_40bae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 33
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %3762 to i64*
  %3763 = load i64, i64* %PC.i1243
  %3764 = add i64 %3763, 8
  store i64 %3764, i64* %PC.i1243
  %3765 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3766, align 1
  %3767 = and i32 %3765, 255
  %3768 = call i32 @llvm.ctpop.i32(i32 %3767)
  %3769 = trunc i32 %3768 to i8
  %3770 = and i8 %3769, 1
  %3771 = xor i8 %3770, 1
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3771, i8* %3772, align 1
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3773, align 1
  %3774 = icmp eq i32 %3765, 0
  %3775 = zext i1 %3774 to i8
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3775, i8* %3776, align 1
  %3777 = lshr i32 %3765, 31
  %3778 = trunc i32 %3777 to i8
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3778, i8* %3779, align 1
  %3780 = lshr i32 %3765, 31
  %3781 = xor i32 %3777, %3780
  %3782 = add i32 %3781, %3780
  %3783 = icmp eq i32 %3782, 2
  %3784 = zext i1 %3783 to i8
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3784, i8* %3785, align 1
  store %struct.Memory* %loadMem_40bae5, %struct.Memory** %MEMORY
  %loadMem_40baed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 33
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %3788 to i64*
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 5
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %ECX.i1241 = bitcast %union.anon* %3791 to i32*
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 11
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %RDI.i1242 = bitcast %union.anon* %3794 to i64*
  %3795 = load i32, i32* %ECX.i1241
  %3796 = zext i32 %3795 to i64
  %3797 = load i64, i64* %PC.i1240
  %3798 = add i64 %3797, 3
  store i64 %3798, i64* %PC.i1240
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3800 = load i8, i8* %3799, align 1
  %3801 = icmp eq i8 %3800, 0
  %3802 = load i64, i64* %RDI.i1242, align 8
  %3803 = select i1 %3801, i64 %3796, i64 %3802
  %3804 = and i64 %3803, 4294967295
  store i64 %3804, i64* %RDI.i1242, align 8
  store %struct.Memory* %loadMem_40baed, %struct.Memory** %MEMORY
  %loadMem_40baf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 33
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %PC.i1238 = bitcast %union.anon* %3807 to i64*
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3809 = getelementptr inbounds %struct.GPR, %struct.GPR* %3808, i32 0, i32 11
  %3810 = getelementptr inbounds %struct.Reg, %struct.Reg* %3809, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %3810 to i32*
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 15
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %RBP.i1239 = bitcast %union.anon* %3813 to i64*
  %3814 = load i64, i64* %RBP.i1239
  %3815 = sub i64 %3814, 52
  %3816 = load i32, i32* %EDI.i
  %3817 = zext i32 %3816 to i64
  %3818 = load i64, i64* %PC.i1238
  %3819 = add i64 %3818, 3
  store i64 %3819, i64* %PC.i1238
  %3820 = inttoptr i64 %3815 to i32*
  store i32 %3816, i32* %3820
  store %struct.Memory* %loadMem_40baf0, %struct.Memory** %MEMORY
  %loadMem_40baf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3822 = getelementptr inbounds %struct.GPR, %struct.GPR* %3821, i32 0, i32 33
  %3823 = getelementptr inbounds %struct.Reg, %struct.Reg* %3822, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %3823 to i64*
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3825 = getelementptr inbounds %struct.GPR, %struct.GPR* %3824, i32 0, i32 1
  %3826 = getelementptr inbounds %struct.Reg, %struct.Reg* %3825, i32 0, i32 0
  %EAX.i1236 = bitcast %union.anon* %3826 to i32*
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3828 = getelementptr inbounds %struct.GPR, %struct.GPR* %3827, i32 0, i32 11
  %3829 = getelementptr inbounds %struct.Reg, %struct.Reg* %3828, i32 0, i32 0
  %RDI.i1237 = bitcast %union.anon* %3829 to i64*
  %3830 = load i32, i32* %EAX.i1236
  %3831 = zext i32 %3830 to i64
  %3832 = load i64, i64* %PC.i1235
  %3833 = add i64 %3832, 2
  store i64 %3833, i64* %PC.i1235
  %3834 = and i64 %3831, 4294967295
  store i64 %3834, i64* %RDI.i1237, align 8
  store %struct.Memory* %loadMem_40baf3, %struct.Memory** %MEMORY
  %loadMem_40baf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3836 = getelementptr inbounds %struct.GPR, %struct.GPR* %3835, i32 0, i32 33
  %3837 = getelementptr inbounds %struct.Reg, %struct.Reg* %3836, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %3837 to i64*
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3839 = getelementptr inbounds %struct.GPR, %struct.GPR* %3838, i32 0, i32 9
  %3840 = getelementptr inbounds %struct.Reg, %struct.Reg* %3839, i32 0, i32 0
  %RSI.i1233 = bitcast %union.anon* %3840 to i64*
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3842 = getelementptr inbounds %struct.GPR, %struct.GPR* %3841, i32 0, i32 15
  %3843 = getelementptr inbounds %struct.Reg, %struct.Reg* %3842, i32 0, i32 0
  %RBP.i1234 = bitcast %union.anon* %3843 to i64*
  %3844 = load i64, i64* %RBP.i1234
  %3845 = sub i64 %3844, 52
  %3846 = load i64, i64* %PC.i1232
  %3847 = add i64 %3846, 3
  store i64 %3847, i64* %PC.i1232
  %3848 = inttoptr i64 %3845 to i32*
  %3849 = load i32, i32* %3848
  %3850 = zext i32 %3849 to i64
  store i64 %3850, i64* %RSI.i1233, align 8
  store %struct.Memory* %loadMem_40baf5, %struct.Memory** %MEMORY
  %loadMem1_40baf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3852 = getelementptr inbounds %struct.GPR, %struct.GPR* %3851, i32 0, i32 33
  %3853 = getelementptr inbounds %struct.Reg, %struct.Reg* %3852, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %3853 to i64*
  %3854 = load i64, i64* %PC.i1231
  %3855 = add i64 %3854, -38408
  %3856 = load i64, i64* %PC.i1231
  %3857 = add i64 %3856, 5
  %3858 = load i64, i64* %PC.i1231
  %3859 = add i64 %3858, 5
  store i64 %3859, i64* %PC.i1231
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3861 = load i64, i64* %3860, align 8
  %3862 = add i64 %3861, -8
  %3863 = inttoptr i64 %3862 to i64*
  store i64 %3857, i64* %3863
  store i64 %3862, i64* %3860, align 8
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3855, i64* %3864, align 8
  store %struct.Memory* %loadMem1_40baf8, %struct.Memory** %MEMORY
  %loadMem2_40baf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40baf8 = load i64, i64* %3
  %call2_40baf8 = call %struct.Memory* @sub_4024f0.addHolding(%struct.State* %0, i64 %loadPC_40baf8, %struct.Memory* %loadMem2_40baf8)
  store %struct.Memory* %call2_40baf8, %struct.Memory** %MEMORY
  br label %block_.L_40bafd

block_.L_40bafd:                                  ; preds = %block_.L_40bace, %block_40ba9a
  %loadMem_40bafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 33
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %3867 to i64*
  %3868 = load i64, i64* %PC.i1230
  %3869 = add i64 %3868, 5
  %3870 = load i64, i64* %PC.i1230
  %3871 = add i64 %3870, 5
  store i64 %3871, i64* %PC.i1230
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3869, i64* %3872, align 8
  store %struct.Memory* %loadMem_40bafd, %struct.Memory** %MEMORY
  br label %block_.L_40bb02

block_.L_40bb02:                                  ; preds = %block_.L_40bafd, %block_40ba69
  %loadMem_40bb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 33
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %3875 to i64*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3877 = getelementptr inbounds %struct.GPR, %struct.GPR* %3876, i32 0, i32 1
  %3878 = getelementptr inbounds %struct.Reg, %struct.Reg* %3877, i32 0, i32 0
  %RAX.i1229 = bitcast %union.anon* %3878 to i64*
  %3879 = load i64, i64* %PC.i1228
  %3880 = add i64 %3879, 10
  store i64 %3880, i64* %PC.i1228
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i1229, align 8
  store %struct.Memory* %loadMem_40bb02, %struct.Memory** %MEMORY
  %loadMem_40bb0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3882 = getelementptr inbounds %struct.GPR, %struct.GPR* %3881, i32 0, i32 33
  %3883 = getelementptr inbounds %struct.Reg, %struct.Reg* %3882, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %3883 to i64*
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3885 = getelementptr inbounds %struct.GPR, %struct.GPR* %3884, i32 0, i32 5
  %3886 = getelementptr inbounds %struct.Reg, %struct.Reg* %3885, i32 0, i32 0
  %RCX.i1226 = bitcast %union.anon* %3886 to i64*
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3888 = getelementptr inbounds %struct.GPR, %struct.GPR* %3887, i32 0, i32 15
  %3889 = getelementptr inbounds %struct.Reg, %struct.Reg* %3888, i32 0, i32 0
  %RBP.i1227 = bitcast %union.anon* %3889 to i64*
  %3890 = load i64, i64* %RBP.i1227
  %3891 = sub i64 %3890, 24
  %3892 = load i64, i64* %PC.i1225
  %3893 = add i64 %3892, 4
  store i64 %3893, i64* %PC.i1225
  %3894 = inttoptr i64 %3891 to i32*
  %3895 = load i32, i32* %3894
  %3896 = sext i32 %3895 to i64
  store i64 %3896, i64* %RCX.i1226, align 8
  store %struct.Memory* %loadMem_40bb0c, %struct.Memory** %MEMORY
  %loadMem_40bb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3898 = getelementptr inbounds %struct.GPR, %struct.GPR* %3897, i32 0, i32 33
  %3899 = getelementptr inbounds %struct.Reg, %struct.Reg* %3898, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %3899 to i64*
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3901 = getelementptr inbounds %struct.GPR, %struct.GPR* %3900, i32 0, i32 5
  %3902 = getelementptr inbounds %struct.Reg, %struct.Reg* %3901, i32 0, i32 0
  %RCX.i1224 = bitcast %union.anon* %3902 to i64*
  %3903 = load i64, i64* %RCX.i1224
  %3904 = mul i64 %3903, 4
  %3905 = add i64 %3904, 8807744
  %3906 = load i64, i64* %PC.i1223
  %3907 = add i64 %3906, 8
  store i64 %3907, i64* %PC.i1223
  %3908 = inttoptr i64 %3905 to i32*
  %3909 = load i32, i32* %3908
  %3910 = sext i32 %3909 to i64
  store i64 %3910, i64* %RCX.i1224, align 8
  store %struct.Memory* %loadMem_40bb10, %struct.Memory** %MEMORY
  %loadMem_40bb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3912 = getelementptr inbounds %struct.GPR, %struct.GPR* %3911, i32 0, i32 33
  %3913 = getelementptr inbounds %struct.Reg, %struct.Reg* %3912, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %3913 to i64*
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 5
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %RCX.i1221 = bitcast %union.anon* %3916 to i64*
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3918 = getelementptr inbounds %struct.GPR, %struct.GPR* %3917, i32 0, i32 7
  %3919 = getelementptr inbounds %struct.Reg, %struct.Reg* %3918, i32 0, i32 0
  %RDX.i1222 = bitcast %union.anon* %3919 to i64*
  %3920 = load i64, i64* %RCX.i1221
  %3921 = mul i64 %3920, 4
  %3922 = add i64 %3921, 6478512
  %3923 = load i64, i64* %PC.i1220
  %3924 = add i64 %3923, 7
  store i64 %3924, i64* %PC.i1220
  %3925 = inttoptr i64 %3922 to i32*
  %3926 = load i32, i32* %3925
  %3927 = zext i32 %3926 to i64
  store i64 %3927, i64* %RDX.i1222, align 8
  store %struct.Memory* %loadMem_40bb18, %struct.Memory** %MEMORY
  %loadMem_40bb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3929 = getelementptr inbounds %struct.GPR, %struct.GPR* %3928, i32 0, i32 33
  %3930 = getelementptr inbounds %struct.Reg, %struct.Reg* %3929, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %3930 to i64*
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 9
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %RSI.i1219 = bitcast %union.anon* %3933 to i64*
  %3934 = load i64, i64* %PC.i1218
  %3935 = add i64 %3934, 7
  store i64 %3935, i64* %PC.i1218
  %3936 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %3937 = zext i32 %3936 to i64
  store i64 %3937, i64* %RSI.i1219, align 8
  store %struct.Memory* %loadMem_40bb1f, %struct.Memory** %MEMORY
  %loadMem_40bb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3939 = getelementptr inbounds %struct.GPR, %struct.GPR* %3938, i32 0, i32 33
  %3940 = getelementptr inbounds %struct.Reg, %struct.Reg* %3939, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %3940 to i64*
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3942 = getelementptr inbounds %struct.GPR, %struct.GPR* %3941, i32 0, i32 7
  %3943 = getelementptr inbounds %struct.Reg, %struct.Reg* %3942, i32 0, i32 0
  %EDX.i1216 = bitcast %union.anon* %3943 to i32*
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3945 = getelementptr inbounds %struct.GPR, %struct.GPR* %3944, i32 0, i32 9
  %3946 = getelementptr inbounds %struct.Reg, %struct.Reg* %3945, i32 0, i32 0
  %RSI.i1217 = bitcast %union.anon* %3946 to i64*
  %3947 = load i64, i64* %RSI.i1217
  %3948 = load i32, i32* %EDX.i1216
  %3949 = zext i32 %3948 to i64
  %3950 = load i64, i64* %PC.i1215
  %3951 = add i64 %3950, 2
  store i64 %3951, i64* %PC.i1215
  %3952 = trunc i64 %3947 to i32
  %3953 = sub i32 %3952, %3948
  %3954 = zext i32 %3953 to i64
  store i64 %3954, i64* %RSI.i1217, align 8
  %3955 = icmp ult i32 %3952, %3948
  %3956 = zext i1 %3955 to i8
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3956, i8* %3957, align 1
  %3958 = and i32 %3953, 255
  %3959 = call i32 @llvm.ctpop.i32(i32 %3958)
  %3960 = trunc i32 %3959 to i8
  %3961 = and i8 %3960, 1
  %3962 = xor i8 %3961, 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3962, i8* %3963, align 1
  %3964 = xor i64 %3949, %3947
  %3965 = trunc i64 %3964 to i32
  %3966 = xor i32 %3965, %3953
  %3967 = lshr i32 %3966, 4
  %3968 = trunc i32 %3967 to i8
  %3969 = and i8 %3968, 1
  %3970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3969, i8* %3970, align 1
  %3971 = icmp eq i32 %3953, 0
  %3972 = zext i1 %3971 to i8
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3972, i8* %3973, align 1
  %3974 = lshr i32 %3953, 31
  %3975 = trunc i32 %3974 to i8
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3975, i8* %3976, align 1
  %3977 = lshr i32 %3952, 31
  %3978 = lshr i32 %3948, 31
  %3979 = xor i32 %3978, %3977
  %3980 = xor i32 %3974, %3977
  %3981 = add i32 %3980, %3979
  %3982 = icmp eq i32 %3981, 2
  %3983 = zext i1 %3982 to i8
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3983, i8* %3984, align 1
  store %struct.Memory* %loadMem_40bb26, %struct.Memory** %MEMORY
  %loadMem_40bb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 33
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %3987 to i64*
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 9
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %ESI.i1214 = bitcast %union.anon* %3990 to i32*
  %3991 = load i32, i32* %ESI.i1214
  %3992 = zext i32 %3991 to i64
  %3993 = load i64, i64* %PC.i1213
  %3994 = add i64 %3993, 7
  store i64 %3994, i64* %PC.i1213
  store i32 %3991, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40bb28, %struct.Memory** %MEMORY
  %loadMem_40bb2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3996 = getelementptr inbounds %struct.GPR, %struct.GPR* %3995, i32 0, i32 33
  %3997 = getelementptr inbounds %struct.Reg, %struct.Reg* %3996, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %3997 to i64*
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3999 = getelementptr inbounds %struct.GPR, %struct.GPR* %3998, i32 0, i32 5
  %4000 = getelementptr inbounds %struct.Reg, %struct.Reg* %3999, i32 0, i32 0
  %RCX.i1211 = bitcast %union.anon* %4000 to i64*
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4002 = getelementptr inbounds %struct.GPR, %struct.GPR* %4001, i32 0, i32 15
  %4003 = getelementptr inbounds %struct.Reg, %struct.Reg* %4002, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %4003 to i64*
  %4004 = load i64, i64* %RBP.i1212
  %4005 = sub i64 %4004, 24
  %4006 = load i64, i64* %PC.i1210
  %4007 = add i64 %4006, 4
  store i64 %4007, i64* %PC.i1210
  %4008 = inttoptr i64 %4005 to i32*
  %4009 = load i32, i32* %4008
  %4010 = sext i32 %4009 to i64
  store i64 %4010, i64* %RCX.i1211, align 8
  store %struct.Memory* %loadMem_40bb2f, %struct.Memory** %MEMORY
  %loadMem_40bb33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4012 = getelementptr inbounds %struct.GPR, %struct.GPR* %4011, i32 0, i32 33
  %4013 = getelementptr inbounds %struct.Reg, %struct.Reg* %4012, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %4013 to i64*
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4015 = getelementptr inbounds %struct.GPR, %struct.GPR* %4014, i32 0, i32 5
  %4016 = getelementptr inbounds %struct.Reg, %struct.Reg* %4015, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %4016 to i64*
  %4017 = load i64, i64* %RCX.i1209
  %4018 = mul i64 %4017, 4
  %4019 = add i64 %4018, 8807744
  %4020 = load i64, i64* %PC.i1208
  %4021 = add i64 %4020, 8
  store i64 %4021, i64* %PC.i1208
  %4022 = inttoptr i64 %4019 to i32*
  %4023 = load i32, i32* %4022
  %4024 = sext i32 %4023 to i64
  store i64 %4024, i64* %RCX.i1209, align 8
  store %struct.Memory* %loadMem_40bb33, %struct.Memory** %MEMORY
  %loadMem_40bb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4026 = getelementptr inbounds %struct.GPR, %struct.GPR* %4025, i32 0, i32 33
  %4027 = getelementptr inbounds %struct.Reg, %struct.Reg* %4026, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %4027 to i64*
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 5
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %RCX.i1207 = bitcast %union.anon* %4030 to i64*
  %4031 = load i64, i64* %RCX.i1207
  %4032 = load i64, i64* %PC.i1206
  %4033 = add i64 %4032, 7
  store i64 %4033, i64* %PC.i1206
  %4034 = sext i64 %4031 to i128
  %4035 = and i128 %4034, -18446744073709551616
  %4036 = zext i64 %4031 to i128
  %4037 = or i128 %4035, %4036
  %4038 = mul i128 576, %4037
  %4039 = trunc i128 %4038 to i64
  store i64 %4039, i64* %RCX.i1207, align 8
  %4040 = sext i64 %4039 to i128
  %4041 = icmp ne i128 %4040, %4038
  %4042 = zext i1 %4041 to i8
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4042, i8* %4043, align 1
  %4044 = trunc i128 %4038 to i32
  %4045 = and i32 %4044, 255
  %4046 = call i32 @llvm.ctpop.i32(i32 %4045)
  %4047 = trunc i32 %4046 to i8
  %4048 = and i8 %4047, 1
  %4049 = xor i8 %4048, 1
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4049, i8* %4050, align 1
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4051, align 1
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4052, align 1
  %4053 = lshr i64 %4039, 63
  %4054 = trunc i64 %4053 to i8
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4054, i8* %4055, align 1
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4042, i8* %4056, align 1
  store %struct.Memory* %loadMem_40bb3b, %struct.Memory** %MEMORY
  %loadMem_40bb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %4059 to i64*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 1
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %RAX.i1204 = bitcast %union.anon* %4062 to i64*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 5
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %RCX.i1205 = bitcast %union.anon* %4065 to i64*
  %4066 = load i64, i64* %RAX.i1204
  %4067 = load i64, i64* %RCX.i1205
  %4068 = load i64, i64* %PC.i1203
  %4069 = add i64 %4068, 3
  store i64 %4069, i64* %PC.i1203
  %4070 = add i64 %4067, %4066
  store i64 %4070, i64* %RAX.i1204, align 8
  %4071 = icmp ult i64 %4070, %4066
  %4072 = icmp ult i64 %4070, %4067
  %4073 = or i1 %4071, %4072
  %4074 = zext i1 %4073 to i8
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4074, i8* %4075, align 1
  %4076 = trunc i64 %4070 to i32
  %4077 = and i32 %4076, 255
  %4078 = call i32 @llvm.ctpop.i32(i32 %4077)
  %4079 = trunc i32 %4078 to i8
  %4080 = and i8 %4079, 1
  %4081 = xor i8 %4080, 1
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4081, i8* %4082, align 1
  %4083 = xor i64 %4067, %4066
  %4084 = xor i64 %4083, %4070
  %4085 = lshr i64 %4084, 4
  %4086 = trunc i64 %4085 to i8
  %4087 = and i8 %4086, 1
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4087, i8* %4088, align 1
  %4089 = icmp eq i64 %4070, 0
  %4090 = zext i1 %4089 to i8
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4090, i8* %4091, align 1
  %4092 = lshr i64 %4070, 63
  %4093 = trunc i64 %4092 to i8
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4093, i8* %4094, align 1
  %4095 = lshr i64 %4066, 63
  %4096 = lshr i64 %4067, 63
  %4097 = xor i64 %4092, %4095
  %4098 = xor i64 %4092, %4096
  %4099 = add i64 %4097, %4098
  %4100 = icmp eq i64 %4099, 2
  %4101 = zext i1 %4100 to i8
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4101, i8* %4102, align 1
  store %struct.Memory* %loadMem_40bb42, %struct.Memory** %MEMORY
  %loadMem_40bb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 33
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %4105 to i64*
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 5
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %RCX.i1201 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 15
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %RBP.i1202 = bitcast %union.anon* %4111 to i64*
  %4112 = load i64, i64* %RBP.i1202
  %4113 = sub i64 %4112, 24
  %4114 = load i64, i64* %PC.i1200
  %4115 = add i64 %4114, 4
  store i64 %4115, i64* %PC.i1200
  %4116 = inttoptr i64 %4113 to i32*
  %4117 = load i32, i32* %4116
  %4118 = sext i32 %4117 to i64
  store i64 %4118, i64* %RCX.i1201, align 8
  store %struct.Memory* %loadMem_40bb45, %struct.Memory** %MEMORY
  %loadMem_40bb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4120 = getelementptr inbounds %struct.GPR, %struct.GPR* %4119, i32 0, i32 33
  %4121 = getelementptr inbounds %struct.Reg, %struct.Reg* %4120, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %4121 to i64*
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4123 = getelementptr inbounds %struct.GPR, %struct.GPR* %4122, i32 0, i32 1
  %4124 = getelementptr inbounds %struct.Reg, %struct.Reg* %4123, i32 0, i32 0
  %RAX.i1197 = bitcast %union.anon* %4124 to i64*
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 5
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %RCX.i1198 = bitcast %union.anon* %4127 to i64*
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 7
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %RDX.i1199 = bitcast %union.anon* %4130 to i64*
  %4131 = load i64, i64* %RAX.i1197
  %4132 = load i64, i64* %RCX.i1198
  %4133 = mul i64 %4132, 4
  %4134 = add i64 %4133, %4131
  %4135 = load i64, i64* %PC.i1196
  %4136 = add i64 %4135, 3
  store i64 %4136, i64* %PC.i1196
  %4137 = inttoptr i64 %4134 to i32*
  %4138 = load i32, i32* %4137
  %4139 = zext i32 %4138 to i64
  store i64 %4139, i64* %RDX.i1199, align 8
  store %struct.Memory* %loadMem_40bb49, %struct.Memory** %MEMORY
  %loadMem_40bb4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 33
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %4142 to i64*
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4144 = getelementptr inbounds %struct.GPR, %struct.GPR* %4143, i32 0, i32 7
  %4145 = getelementptr inbounds %struct.Reg, %struct.Reg* %4144, i32 0, i32 0
  %RDX.i1195 = bitcast %union.anon* %4145 to i64*
  %4146 = load i64, i64* %RDX.i1195
  %4147 = load i64, i64* %PC.i1194
  %4148 = add i64 %4147, 7
  store i64 %4148, i64* %PC.i1194
  %4149 = trunc i64 %4146 to i32
  %4150 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %4151 = xor i32 %4150, %4149
  %4152 = zext i32 %4151 to i64
  store i64 %4152, i64* %RDX.i1195, align 8
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4153, align 1
  %4154 = and i32 %4151, 255
  %4155 = call i32 @llvm.ctpop.i32(i32 %4154)
  %4156 = trunc i32 %4155 to i8
  %4157 = and i8 %4156, 1
  %4158 = xor i8 %4157, 1
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4158, i8* %4159, align 1
  %4160 = icmp eq i32 %4151, 0
  %4161 = zext i1 %4160 to i8
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4161, i8* %4162, align 1
  %4163 = lshr i32 %4151, 31
  %4164 = trunc i32 %4163 to i8
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4164, i8* %4165, align 1
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4166, align 1
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4167, align 1
  store %struct.Memory* %loadMem_40bb4c, %struct.Memory** %MEMORY
  %loadMem_40bb53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 33
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %4170 to i64*
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4172 = getelementptr inbounds %struct.GPR, %struct.GPR* %4171, i32 0, i32 7
  %4173 = getelementptr inbounds %struct.Reg, %struct.Reg* %4172, i32 0, i32 0
  %EDX.i1193 = bitcast %union.anon* %4173 to i32*
  %4174 = load i32, i32* %EDX.i1193
  %4175 = zext i32 %4174 to i64
  %4176 = load i64, i64* %PC.i1192
  %4177 = add i64 %4176, 7
  store i64 %4177, i64* %PC.i1192
  store i32 %4174, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bb53, %struct.Memory** %MEMORY
  %loadMem_40bb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 33
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %4180 to i64*
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 7
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %RDX.i1191 = bitcast %union.anon* %4183 to i64*
  %4184 = load i64, i64* %PC.i1190
  %4185 = add i64 %4184, 7
  store i64 %4185, i64* %PC.i1190
  %4186 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %4187 = zext i32 %4186 to i64
  store i64 %4187, i64* %RDX.i1191, align 8
  store %struct.Memory* %loadMem_40bb5a, %struct.Memory** %MEMORY
  %loadMem_40bb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4189 = getelementptr inbounds %struct.GPR, %struct.GPR* %4188, i32 0, i32 33
  %4190 = getelementptr inbounds %struct.Reg, %struct.Reg* %4189, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %4190 to i64*
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4192 = getelementptr inbounds %struct.GPR, %struct.GPR* %4191, i32 0, i32 7
  %4193 = getelementptr inbounds %struct.Reg, %struct.Reg* %4192, i32 0, i32 0
  %RDX.i1189 = bitcast %union.anon* %4193 to i64*
  %4194 = load i64, i64* %RDX.i1189
  %4195 = load i64, i64* %PC.i1188
  %4196 = add i64 %4195, 3
  store i64 %4196, i64* %PC.i1188
  %4197 = trunc i64 %4194 to i32
  %4198 = add i32 -1, %4197
  %4199 = zext i32 %4198 to i64
  store i64 %4199, i64* %RDX.i1189, align 8
  %4200 = icmp ult i32 %4198, %4197
  %4201 = icmp ult i32 %4198, -1
  %4202 = or i1 %4200, %4201
  %4203 = zext i1 %4202 to i8
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4203, i8* %4204, align 1
  %4205 = and i32 %4198, 255
  %4206 = call i32 @llvm.ctpop.i32(i32 %4205)
  %4207 = trunc i32 %4206 to i8
  %4208 = and i8 %4207, 1
  %4209 = xor i8 %4208, 1
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4209, i8* %4210, align 1
  %4211 = xor i64 -1, %4194
  %4212 = trunc i64 %4211 to i32
  %4213 = xor i32 %4212, %4198
  %4214 = lshr i32 %4213, 4
  %4215 = trunc i32 %4214 to i8
  %4216 = and i8 %4215, 1
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4216, i8* %4217, align 1
  %4218 = icmp eq i32 %4198, 0
  %4219 = zext i1 %4218 to i8
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4219, i8* %4220, align 1
  %4221 = lshr i32 %4198, 31
  %4222 = trunc i32 %4221 to i8
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4222, i8* %4223, align 1
  %4224 = lshr i32 %4197, 31
  %4225 = xor i32 %4221, %4224
  %4226 = xor i32 %4221, 1
  %4227 = add i32 %4225, %4226
  %4228 = icmp eq i32 %4227, 2
  %4229 = zext i1 %4228 to i8
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4229, i8* %4230, align 1
  store %struct.Memory* %loadMem_40bb61, %struct.Memory** %MEMORY
  %loadMem_40bb64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4232 = getelementptr inbounds %struct.GPR, %struct.GPR* %4231, i32 0, i32 33
  %4233 = getelementptr inbounds %struct.Reg, %struct.Reg* %4232, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %4233 to i64*
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4235 = getelementptr inbounds %struct.GPR, %struct.GPR* %4234, i32 0, i32 7
  %4236 = getelementptr inbounds %struct.Reg, %struct.Reg* %4235, i32 0, i32 0
  %EDX.i1187 = bitcast %union.anon* %4236 to i32*
  %4237 = load i32, i32* %EDX.i1187
  %4238 = zext i32 %4237 to i64
  %4239 = load i64, i64* %PC.i1186
  %4240 = add i64 %4239, 7
  store i64 %4240, i64* %PC.i1186
  store i32 %4237, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40bb64, %struct.Memory** %MEMORY
  br label %block_.L_40bb6b

block_.L_40bb6b:                                  ; preds = %block_.L_40bb02, %block_.L_40ba56
  %loadMem_40bb6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 33
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %4243 to i64*
  %4244 = load i64, i64* %PC.i1185
  %4245 = add i64 %4244, 5
  %4246 = load i64, i64* %PC.i1185
  %4247 = add i64 %4246, 5
  store i64 %4247, i64* %PC.i1185
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4245, i64* %4248, align 8
  store %struct.Memory* %loadMem_40bb6b, %struct.Memory** %MEMORY
  br label %block_.L_40bb70

block_.L_40bb70:                                  ; preds = %block_.L_40bb6b, %block_.L_40b990
  %loadMem_40bb70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4250 = getelementptr inbounds %struct.GPR, %struct.GPR* %4249, i32 0, i32 33
  %4251 = getelementptr inbounds %struct.Reg, %struct.Reg* %4250, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %4251 to i64*
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4253 = getelementptr inbounds %struct.GPR, %struct.GPR* %4252, i32 0, i32 1
  %4254 = getelementptr inbounds %struct.Reg, %struct.Reg* %4253, i32 0, i32 0
  %RAX.i1183 = bitcast %union.anon* %4254 to i64*
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4256 = getelementptr inbounds %struct.GPR, %struct.GPR* %4255, i32 0, i32 15
  %4257 = getelementptr inbounds %struct.Reg, %struct.Reg* %4256, i32 0, i32 0
  %RBP.i1184 = bitcast %union.anon* %4257 to i64*
  %4258 = load i64, i64* %RBP.i1184
  %4259 = sub i64 %4258, 20
  %4260 = load i64, i64* %PC.i1182
  %4261 = add i64 %4260, 4
  store i64 %4261, i64* %PC.i1182
  %4262 = inttoptr i64 %4259 to i32*
  %4263 = load i32, i32* %4262
  %4264 = sext i32 %4263 to i64
  store i64 %4264, i64* %RAX.i1183, align 8
  store %struct.Memory* %loadMem_40bb70, %struct.Memory** %MEMORY
  %loadMem_40bb74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 33
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %4267 to i64*
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 1
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %RAX.i1181 = bitcast %union.anon* %4270 to i64*
  %4271 = load i64, i64* %RAX.i1181
  %4272 = mul i64 %4271, 4
  %4273 = add i64 %4272, 8807744
  %4274 = load i64, i64* %PC.i1180
  %4275 = add i64 %4274, 8
  store i64 %4275, i64* %PC.i1180
  %4276 = inttoptr i64 %4273 to i32*
  %4277 = load i32, i32* %4276
  %4278 = sub i32 %4277, 1
  %4279 = icmp ult i32 %4277, 1
  %4280 = zext i1 %4279 to i8
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4280, i8* %4281, align 1
  %4282 = and i32 %4278, 255
  %4283 = call i32 @llvm.ctpop.i32(i32 %4282)
  %4284 = trunc i32 %4283 to i8
  %4285 = and i8 %4284, 1
  %4286 = xor i8 %4285, 1
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4286, i8* %4287, align 1
  %4288 = xor i32 %4277, 1
  %4289 = xor i32 %4288, %4278
  %4290 = lshr i32 %4289, 4
  %4291 = trunc i32 %4290 to i8
  %4292 = and i8 %4291, 1
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4292, i8* %4293, align 1
  %4294 = icmp eq i32 %4278, 0
  %4295 = zext i1 %4294 to i8
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4295, i8* %4296, align 1
  %4297 = lshr i32 %4278, 31
  %4298 = trunc i32 %4297 to i8
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4298, i8* %4299, align 1
  %4300 = lshr i32 %4277, 31
  %4301 = xor i32 %4297, %4300
  %4302 = add i32 %4301, %4300
  %4303 = icmp eq i32 %4302, 2
  %4304 = zext i1 %4303 to i8
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4304, i8* %4305, align 1
  store %struct.Memory* %loadMem_40bb74, %struct.Memory** %MEMORY
  %loadMem_40bb7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 33
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %4308 to i64*
  %4309 = load i64, i64* %PC.i1179
  %4310 = add i64 %4309, 856
  %4311 = load i64, i64* %PC.i1179
  %4312 = add i64 %4311, 6
  %4313 = load i64, i64* %PC.i1179
  %4314 = add i64 %4313, 6
  store i64 %4314, i64* %PC.i1179
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4316 = load i8, i8* %4315, align 1
  %4317 = icmp eq i8 %4316, 0
  %4318 = zext i1 %4317 to i8
  store i8 %4318, i8* %BRANCH_TAKEN, align 1
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4320 = select i1 %4317, i64 %4310, i64 %4312
  store i64 %4320, i64* %4319, align 8
  store %struct.Memory* %loadMem_40bb7c, %struct.Memory** %MEMORY
  %loadBr_40bb7c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb7c = icmp eq i8 %loadBr_40bb7c, 1
  br i1 %cmpBr_40bb7c, label %block_.L_40bed4, label %block_40bb82

block_40bb82:                                     ; preds = %block_.L_40bb70
  %loadMem_40bb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 33
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %4323 to i64*
  %4324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4325 = getelementptr inbounds %struct.GPR, %struct.GPR* %4324, i32 0, i32 15
  %4326 = getelementptr inbounds %struct.Reg, %struct.Reg* %4325, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %4326 to i64*
  %4327 = load i64, i64* %RBP.i1178
  %4328 = sub i64 %4327, 32
  %4329 = load i64, i64* %PC.i1177
  %4330 = add i64 %4329, 4
  store i64 %4330, i64* %PC.i1177
  %4331 = inttoptr i64 %4328 to i32*
  %4332 = load i32, i32* %4331
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4333, align 1
  %4334 = and i32 %4332, 255
  %4335 = call i32 @llvm.ctpop.i32(i32 %4334)
  %4336 = trunc i32 %4335 to i8
  %4337 = and i8 %4336, 1
  %4338 = xor i8 %4337, 1
  %4339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4338, i8* %4339, align 1
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4340, align 1
  %4341 = icmp eq i32 %4332, 0
  %4342 = zext i1 %4341 to i8
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4342, i8* %4343, align 1
  %4344 = lshr i32 %4332, 31
  %4345 = trunc i32 %4344 to i8
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4345, i8* %4346, align 1
  %4347 = lshr i32 %4332, 31
  %4348 = xor i32 %4344, %4347
  %4349 = add i32 %4348, %4347
  %4350 = icmp eq i32 %4349, 2
  %4351 = zext i1 %4350 to i8
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4351, i8* %4352, align 1
  store %struct.Memory* %loadMem_40bb82, %struct.Memory** %MEMORY
  %loadMem_40bb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4354 = getelementptr inbounds %struct.GPR, %struct.GPR* %4353, i32 0, i32 33
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %4355 to i64*
  %4356 = load i64, i64* %PC.i1176
  %4357 = add i64 %4356, 257
  %4358 = load i64, i64* %PC.i1176
  %4359 = add i64 %4358, 6
  %4360 = load i64, i64* %PC.i1176
  %4361 = add i64 %4360, 6
  store i64 %4361, i64* %PC.i1176
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4363 = load i8, i8* %4362, align 1
  store i8 %4363, i8* %BRANCH_TAKEN, align 1
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4365 = icmp ne i8 %4363, 0
  %4366 = select i1 %4365, i64 %4357, i64 %4359
  store i64 %4366, i64* %4364, align 8
  store %struct.Memory* %loadMem_40bb86, %struct.Memory** %MEMORY
  %loadBr_40bb86 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bb86 = icmp eq i8 %loadBr_40bb86, 1
  br i1 %cmpBr_40bb86, label %block_.L_40bc87, label %block_40bb8c

block_40bb8c:                                     ; preds = %block_40bb82
  %loadMem_40bb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4368 = getelementptr inbounds %struct.GPR, %struct.GPR* %4367, i32 0, i32 33
  %4369 = getelementptr inbounds %struct.Reg, %struct.Reg* %4368, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %4369 to i64*
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 1
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %RAX.i1175 = bitcast %union.anon* %4372 to i64*
  %4373 = load i64, i64* %PC.i1174
  %4374 = add i64 %4373, 10
  store i64 %4374, i64* %PC.i1174
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i1175, align 8
  store %struct.Memory* %loadMem_40bb8c, %struct.Memory** %MEMORY
  %loadMem_40bb96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 33
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %4377 to i64*
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4379 = getelementptr inbounds %struct.GPR, %struct.GPR* %4378, i32 0, i32 5
  %4380 = getelementptr inbounds %struct.Reg, %struct.Reg* %4379, i32 0, i32 0
  %RCX.i1172 = bitcast %union.anon* %4380 to i64*
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4382 = getelementptr inbounds %struct.GPR, %struct.GPR* %4381, i32 0, i32 15
  %4383 = getelementptr inbounds %struct.Reg, %struct.Reg* %4382, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %4383 to i64*
  %4384 = load i64, i64* %RBP.i1173
  %4385 = sub i64 %4384, 32
  %4386 = load i64, i64* %PC.i1171
  %4387 = add i64 %4386, 3
  store i64 %4387, i64* %PC.i1171
  %4388 = inttoptr i64 %4385 to i32*
  %4389 = load i32, i32* %4388
  %4390 = zext i32 %4389 to i64
  store i64 %4390, i64* %RCX.i1172, align 8
  store %struct.Memory* %loadMem_40bb96, %struct.Memory** %MEMORY
  %loadMem_40bb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4392 = getelementptr inbounds %struct.GPR, %struct.GPR* %4391, i32 0, i32 33
  %4393 = getelementptr inbounds %struct.Reg, %struct.Reg* %4392, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %4393 to i64*
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4395 = getelementptr inbounds %struct.GPR, %struct.GPR* %4394, i32 0, i32 7
  %4396 = getelementptr inbounds %struct.Reg, %struct.Reg* %4395, i32 0, i32 0
  %RDX.i1169 = bitcast %union.anon* %4396 to i64*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 15
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %RBP.i1170 = bitcast %union.anon* %4399 to i64*
  %4400 = load i64, i64* %RBP.i1170
  %4401 = sub i64 %4400, 24
  %4402 = load i64, i64* %PC.i1168
  %4403 = add i64 %4402, 4
  store i64 %4403, i64* %PC.i1168
  %4404 = inttoptr i64 %4401 to i32*
  %4405 = load i32, i32* %4404
  %4406 = sext i32 %4405 to i64
  store i64 %4406, i64* %RDX.i1169, align 8
  store %struct.Memory* %loadMem_40bb99, %struct.Memory** %MEMORY
  %loadMem_40bb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4408 = getelementptr inbounds %struct.GPR, %struct.GPR* %4407, i32 0, i32 33
  %4409 = getelementptr inbounds %struct.Reg, %struct.Reg* %4408, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %4409 to i64*
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4411 = getelementptr inbounds %struct.GPR, %struct.GPR* %4410, i32 0, i32 5
  %4412 = getelementptr inbounds %struct.Reg, %struct.Reg* %4411, i32 0, i32 0
  %ECX.i1166 = bitcast %union.anon* %4412 to i32*
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4414 = getelementptr inbounds %struct.GPR, %struct.GPR* %4413, i32 0, i32 7
  %4415 = getelementptr inbounds %struct.Reg, %struct.Reg* %4414, i32 0, i32 0
  %RDX.i1167 = bitcast %union.anon* %4415 to i64*
  %4416 = load i64, i64* %RDX.i1167
  %4417 = mul i64 %4416, 4
  %4418 = add i64 %4417, 8807744
  %4419 = load i32, i32* %ECX.i1166
  %4420 = zext i32 %4419 to i64
  %4421 = load i64, i64* %PC.i1165
  %4422 = add i64 %4421, 7
  store i64 %4422, i64* %PC.i1165
  %4423 = inttoptr i64 %4418 to i32*
  store i32 %4419, i32* %4423
  store %struct.Memory* %loadMem_40bb9d, %struct.Memory** %MEMORY
  %loadMem_40bba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4425 = getelementptr inbounds %struct.GPR, %struct.GPR* %4424, i32 0, i32 33
  %4426 = getelementptr inbounds %struct.Reg, %struct.Reg* %4425, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %4426 to i64*
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4428 = getelementptr inbounds %struct.GPR, %struct.GPR* %4427, i32 0, i32 7
  %4429 = getelementptr inbounds %struct.Reg, %struct.Reg* %4428, i32 0, i32 0
  %RDX.i1163 = bitcast %union.anon* %4429 to i64*
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 15
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %4432 to i64*
  %4433 = load i64, i64* %RBP.i1164
  %4434 = sub i64 %4433, 20
  %4435 = load i64, i64* %PC.i1162
  %4436 = add i64 %4435, 4
  store i64 %4436, i64* %PC.i1162
  %4437 = inttoptr i64 %4434 to i32*
  %4438 = load i32, i32* %4437
  %4439 = sext i32 %4438 to i64
  store i64 %4439, i64* %RDX.i1163, align 8
  store %struct.Memory* %loadMem_40bba4, %struct.Memory** %MEMORY
  %loadMem_40bba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4441 = getelementptr inbounds %struct.GPR, %struct.GPR* %4440, i32 0, i32 33
  %4442 = getelementptr inbounds %struct.Reg, %struct.Reg* %4441, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %4442 to i64*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4444 = getelementptr inbounds %struct.GPR, %struct.GPR* %4443, i32 0, i32 7
  %4445 = getelementptr inbounds %struct.Reg, %struct.Reg* %4444, i32 0, i32 0
  %RDX.i1161 = bitcast %union.anon* %4445 to i64*
  %4446 = load i64, i64* %RDX.i1161
  %4447 = mul i64 %4446, 4
  %4448 = add i64 %4447, 8807744
  %4449 = load i64, i64* %PC.i1160
  %4450 = add i64 %4449, 11
  store i64 %4450, i64* %PC.i1160
  %4451 = inttoptr i64 %4448 to i32*
  store i32 13, i32* %4451
  store %struct.Memory* %loadMem_40bba8, %struct.Memory** %MEMORY
  %loadMem_40bbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 33
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %4454 to i64*
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4456 = getelementptr inbounds %struct.GPR, %struct.GPR* %4455, i32 0, i32 7
  %4457 = getelementptr inbounds %struct.Reg, %struct.Reg* %4456, i32 0, i32 0
  %RDX.i1158 = bitcast %union.anon* %4457 to i64*
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 15
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %4460 to i64*
  %4461 = load i64, i64* %RBP.i1159
  %4462 = sub i64 %4461, 24
  %4463 = load i64, i64* %PC.i1157
  %4464 = add i64 %4463, 4
  store i64 %4464, i64* %PC.i1157
  %4465 = inttoptr i64 %4462 to i32*
  %4466 = load i32, i32* %4465
  %4467 = sext i32 %4466 to i64
  store i64 %4467, i64* %RDX.i1158, align 8
  store %struct.Memory* %loadMem_40bbb3, %struct.Memory** %MEMORY
  %loadMem_40bbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 33
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %4470 to i64*
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4472 = getelementptr inbounds %struct.GPR, %struct.GPR* %4471, i32 0, i32 5
  %4473 = getelementptr inbounds %struct.Reg, %struct.Reg* %4472, i32 0, i32 0
  %RCX.i1155 = bitcast %union.anon* %4473 to i64*
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4475 = getelementptr inbounds %struct.GPR, %struct.GPR* %4474, i32 0, i32 7
  %4476 = getelementptr inbounds %struct.Reg, %struct.Reg* %4475, i32 0, i32 0
  %RDX.i1156 = bitcast %union.anon* %4476 to i64*
  %4477 = load i64, i64* %RDX.i1156
  %4478 = mul i64 %4477, 4
  %4479 = add i64 %4478, 8922032
  %4480 = load i64, i64* %PC.i1154
  %4481 = add i64 %4480, 7
  store i64 %4481, i64* %PC.i1154
  %4482 = inttoptr i64 %4479 to i32*
  %4483 = load i32, i32* %4482
  %4484 = zext i32 %4483 to i64
  store i64 %4484, i64* %RCX.i1155, align 8
  store %struct.Memory* %loadMem_40bbb7, %struct.Memory** %MEMORY
  %loadMem_40bbbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 33
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 5
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %RCX.i1153 = bitcast %union.anon* %4490 to i64*
  %4491 = load i64, i64* %RCX.i1153
  %4492 = load i64, i64* %PC.i1152
  %4493 = add i64 %4492, 3
  store i64 %4493, i64* %PC.i1152
  %4494 = trunc i64 %4491 to i32
  %4495 = add i32 1, %4494
  %4496 = zext i32 %4495 to i64
  store i64 %4496, i64* %RCX.i1153, align 8
  %4497 = icmp ult i32 %4495, %4494
  %4498 = icmp ult i32 %4495, 1
  %4499 = or i1 %4497, %4498
  %4500 = zext i1 %4499 to i8
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4500, i8* %4501, align 1
  %4502 = and i32 %4495, 255
  %4503 = call i32 @llvm.ctpop.i32(i32 %4502)
  %4504 = trunc i32 %4503 to i8
  %4505 = and i8 %4504, 1
  %4506 = xor i8 %4505, 1
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4506, i8* %4507, align 1
  %4508 = xor i64 1, %4491
  %4509 = trunc i64 %4508 to i32
  %4510 = xor i32 %4509, %4495
  %4511 = lshr i32 %4510, 4
  %4512 = trunc i32 %4511 to i8
  %4513 = and i8 %4512, 1
  %4514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4513, i8* %4514, align 1
  %4515 = icmp eq i32 %4495, 0
  %4516 = zext i1 %4515 to i8
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4516, i8* %4517, align 1
  %4518 = lshr i32 %4495, 31
  %4519 = trunc i32 %4518 to i8
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4519, i8* %4520, align 1
  %4521 = lshr i32 %4494, 31
  %4522 = xor i32 %4518, %4521
  %4523 = add i32 %4522, %4518
  %4524 = icmp eq i32 %4523, 2
  %4525 = zext i1 %4524 to i8
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4525, i8* %4526, align 1
  store %struct.Memory* %loadMem_40bbbe, %struct.Memory** %MEMORY
  %loadMem_40bbc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4528 = getelementptr inbounds %struct.GPR, %struct.GPR* %4527, i32 0, i32 33
  %4529 = getelementptr inbounds %struct.Reg, %struct.Reg* %4528, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %4529 to i64*
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4531 = getelementptr inbounds %struct.GPR, %struct.GPR* %4530, i32 0, i32 5
  %4532 = getelementptr inbounds %struct.Reg, %struct.Reg* %4531, i32 0, i32 0
  %ECX.i1150 = bitcast %union.anon* %4532 to i32*
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4534 = getelementptr inbounds %struct.GPR, %struct.GPR* %4533, i32 0, i32 7
  %4535 = getelementptr inbounds %struct.Reg, %struct.Reg* %4534, i32 0, i32 0
  %RDX.i1151 = bitcast %union.anon* %4535 to i64*
  %4536 = load i64, i64* %RDX.i1151
  %4537 = mul i64 %4536, 4
  %4538 = add i64 %4537, 8922032
  %4539 = load i32, i32* %ECX.i1150
  %4540 = zext i32 %4539 to i64
  %4541 = load i64, i64* %PC.i1149
  %4542 = add i64 %4541, 7
  store i64 %4542, i64* %PC.i1149
  %4543 = inttoptr i64 %4538 to i32*
  store i32 %4539, i32* %4543
  store %struct.Memory* %loadMem_40bbc1, %struct.Memory** %MEMORY
  %loadMem_40bbc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 33
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %4546 to i64*
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4548 = getelementptr inbounds %struct.GPR, %struct.GPR* %4547, i32 0, i32 7
  %4549 = getelementptr inbounds %struct.Reg, %struct.Reg* %4548, i32 0, i32 0
  %RDX.i1147 = bitcast %union.anon* %4549 to i64*
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4551 = getelementptr inbounds %struct.GPR, %struct.GPR* %4550, i32 0, i32 15
  %4552 = getelementptr inbounds %struct.Reg, %struct.Reg* %4551, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %4552 to i64*
  %4553 = load i64, i64* %RBP.i1148
  %4554 = sub i64 %4553, 20
  %4555 = load i64, i64* %PC.i1146
  %4556 = add i64 %4555, 4
  store i64 %4556, i64* %PC.i1146
  %4557 = inttoptr i64 %4554 to i32*
  %4558 = load i32, i32* %4557
  %4559 = sext i32 %4558 to i64
  store i64 %4559, i64* %RDX.i1147, align 8
  store %struct.Memory* %loadMem_40bbc8, %struct.Memory** %MEMORY
  %loadMem_40bbcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4561 = getelementptr inbounds %struct.GPR, %struct.GPR* %4560, i32 0, i32 33
  %4562 = getelementptr inbounds %struct.Reg, %struct.Reg* %4561, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %4562 to i64*
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 5
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %RCX.i1144 = bitcast %union.anon* %4565 to i64*
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 7
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %RDX.i1145 = bitcast %union.anon* %4568 to i64*
  %4569 = load i64, i64* %RDX.i1145
  %4570 = mul i64 %4569, 4
  %4571 = add i64 %4570, 8922032
  %4572 = load i64, i64* %PC.i1143
  %4573 = add i64 %4572, 7
  store i64 %4573, i64* %PC.i1143
  %4574 = inttoptr i64 %4571 to i32*
  %4575 = load i32, i32* %4574
  %4576 = zext i32 %4575 to i64
  store i64 %4576, i64* %RCX.i1144, align 8
  store %struct.Memory* %loadMem_40bbcc, %struct.Memory** %MEMORY
  %loadMem_40bbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 33
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 5
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %RCX.i1142 = bitcast %union.anon* %4582 to i64*
  %4583 = load i64, i64* %RCX.i1142
  %4584 = load i64, i64* %PC.i1141
  %4585 = add i64 %4584, 3
  store i64 %4585, i64* %PC.i1141
  %4586 = trunc i64 %4583 to i32
  %4587 = add i32 1, %4586
  %4588 = zext i32 %4587 to i64
  store i64 %4588, i64* %RCX.i1142, align 8
  %4589 = icmp ult i32 %4587, %4586
  %4590 = icmp ult i32 %4587, 1
  %4591 = or i1 %4589, %4590
  %4592 = zext i1 %4591 to i8
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4592, i8* %4593, align 1
  %4594 = and i32 %4587, 255
  %4595 = call i32 @llvm.ctpop.i32(i32 %4594)
  %4596 = trunc i32 %4595 to i8
  %4597 = and i8 %4596, 1
  %4598 = xor i8 %4597, 1
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4598, i8* %4599, align 1
  %4600 = xor i64 1, %4583
  %4601 = trunc i64 %4600 to i32
  %4602 = xor i32 %4601, %4587
  %4603 = lshr i32 %4602, 4
  %4604 = trunc i32 %4603 to i8
  %4605 = and i8 %4604, 1
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4605, i8* %4606, align 1
  %4607 = icmp eq i32 %4587, 0
  %4608 = zext i1 %4607 to i8
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4608, i8* %4609, align 1
  %4610 = lshr i32 %4587, 31
  %4611 = trunc i32 %4610 to i8
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4611, i8* %4612, align 1
  %4613 = lshr i32 %4586, 31
  %4614 = xor i32 %4610, %4613
  %4615 = add i32 %4614, %4610
  %4616 = icmp eq i32 %4615, 2
  %4617 = zext i1 %4616 to i8
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4617, i8* %4618, align 1
  store %struct.Memory* %loadMem_40bbd3, %struct.Memory** %MEMORY
  %loadMem_40bbd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 33
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %4621 to i64*
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 5
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %ECX.i1139 = bitcast %union.anon* %4624 to i32*
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 7
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %RDX.i1140 = bitcast %union.anon* %4627 to i64*
  %4628 = load i64, i64* %RDX.i1140
  %4629 = mul i64 %4628, 4
  %4630 = add i64 %4629, 8922032
  %4631 = load i32, i32* %ECX.i1139
  %4632 = zext i32 %4631 to i64
  %4633 = load i64, i64* %PC.i1138
  %4634 = add i64 %4633, 7
  store i64 %4634, i64* %PC.i1138
  %4635 = inttoptr i64 %4630 to i32*
  store i32 %4631, i32* %4635
  store %struct.Memory* %loadMem_40bbd6, %struct.Memory** %MEMORY
  %loadMem_40bbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4637 = getelementptr inbounds %struct.GPR, %struct.GPR* %4636, i32 0, i32 33
  %4638 = getelementptr inbounds %struct.Reg, %struct.Reg* %4637, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %4638 to i64*
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4640 = getelementptr inbounds %struct.GPR, %struct.GPR* %4639, i32 0, i32 5
  %4641 = getelementptr inbounds %struct.Reg, %struct.Reg* %4640, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %4641 to i64*
  %4642 = load i64, i64* %PC.i1136
  %4643 = add i64 %4642, 7
  store i64 %4643, i64* %PC.i1136
  %4644 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %4645 = zext i32 %4644 to i64
  store i64 %4645, i64* %RCX.i1137, align 8
  store %struct.Memory* %loadMem_40bbdd, %struct.Memory** %MEMORY
  %loadMem_40bbe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4647 = getelementptr inbounds %struct.GPR, %struct.GPR* %4646, i32 0, i32 33
  %4648 = getelementptr inbounds %struct.Reg, %struct.Reg* %4647, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %4648 to i64*
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 5
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %4651 to i64*
  %4652 = load i64, i64* %RCX.i1135
  %4653 = load i64, i64* %PC.i1134
  %4654 = add i64 %4653, 3
  store i64 %4654, i64* %PC.i1134
  %4655 = xor i64 1, %4652
  %4656 = trunc i64 %4655 to i32
  %4657 = and i64 %4655, 4294967295
  store i64 %4657, i64* %RCX.i1135, align 8
  %4658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4658, align 1
  %4659 = and i32 %4656, 255
  %4660 = call i32 @llvm.ctpop.i32(i32 %4659)
  %4661 = trunc i32 %4660 to i8
  %4662 = and i8 %4661, 1
  %4663 = xor i8 %4662, 1
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4663, i8* %4664, align 1
  %4665 = icmp eq i32 %4656, 0
  %4666 = zext i1 %4665 to i8
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4666, i8* %4667, align 1
  %4668 = lshr i32 %4656, 31
  %4669 = trunc i32 %4668 to i8
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4669, i8* %4670, align 1
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4671, align 1
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4672, align 1
  store %struct.Memory* %loadMem_40bbe4, %struct.Memory** %MEMORY
  %loadMem_40bbe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 33
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %4675 to i64*
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4677 = getelementptr inbounds %struct.GPR, %struct.GPR* %4676, i32 0, i32 5
  %4678 = getelementptr inbounds %struct.Reg, %struct.Reg* %4677, i32 0, i32 0
  %ECX.i1133 = bitcast %union.anon* %4678 to i32*
  %4679 = load i32, i32* %ECX.i1133
  %4680 = zext i32 %4679 to i64
  %4681 = load i64, i64* %PC.i1132
  %4682 = add i64 %4681, 7
  store i64 %4682, i64* %PC.i1132
  store i32 %4679, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40bbe7, %struct.Memory** %MEMORY
  %loadMem_40bbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 33
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %4685 to i64*
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4687 = getelementptr inbounds %struct.GPR, %struct.GPR* %4686, i32 0, i32 7
  %4688 = getelementptr inbounds %struct.Reg, %struct.Reg* %4687, i32 0, i32 0
  %RDX.i1130 = bitcast %union.anon* %4688 to i64*
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4690 = getelementptr inbounds %struct.GPR, %struct.GPR* %4689, i32 0, i32 15
  %4691 = getelementptr inbounds %struct.Reg, %struct.Reg* %4690, i32 0, i32 0
  %RBP.i1131 = bitcast %union.anon* %4691 to i64*
  %4692 = load i64, i64* %RBP.i1131
  %4693 = sub i64 %4692, 24
  %4694 = load i64, i64* %PC.i1129
  %4695 = add i64 %4694, 4
  store i64 %4695, i64* %PC.i1129
  %4696 = inttoptr i64 %4693 to i32*
  %4697 = load i32, i32* %4696
  %4698 = sext i32 %4697 to i64
  store i64 %4698, i64* %RDX.i1130, align 8
  store %struct.Memory* %loadMem_40bbee, %struct.Memory** %MEMORY
  %loadMem_40bbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 33
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %4701 to i64*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 7
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %RDX.i1128 = bitcast %union.anon* %4704 to i64*
  %4705 = load i64, i64* %RDX.i1128
  %4706 = mul i64 %4705, 4
  %4707 = add i64 %4706, 8807152
  %4708 = load i64, i64* %PC.i1127
  %4709 = add i64 %4708, 8
  store i64 %4709, i64* %PC.i1127
  %4710 = inttoptr i64 %4707 to i32*
  %4711 = load i32, i32* %4710
  %4712 = sext i32 %4711 to i64
  store i64 %4712, i64* %RDX.i1128, align 8
  store %struct.Memory* %loadMem_40bbf2, %struct.Memory** %MEMORY
  %loadMem_40bbfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 33
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %4715 to i64*
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 7
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %RDX.i1126 = bitcast %union.anon* %4718 to i64*
  %4719 = load i64, i64* %RDX.i1126
  %4720 = mul i64 %4719, 4
  %4721 = add i64 %4720, 6525216
  %4722 = load i64, i64* %PC.i1125
  %4723 = add i64 %4722, 11
  store i64 %4723, i64* %PC.i1125
  %4724 = inttoptr i64 %4721 to i32*
  store i32 1, i32* %4724
  store %struct.Memory* %loadMem_40bbfa, %struct.Memory** %MEMORY
  %loadMem_40bc05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 33
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %4727 to i64*
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4729 = getelementptr inbounds %struct.GPR, %struct.GPR* %4728, i32 0, i32 7
  %4730 = getelementptr inbounds %struct.Reg, %struct.Reg* %4729, i32 0, i32 0
  %RDX.i1123 = bitcast %union.anon* %4730 to i64*
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 15
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %RBP.i1124 = bitcast %union.anon* %4733 to i64*
  %4734 = load i64, i64* %RBP.i1124
  %4735 = sub i64 %4734, 20
  %4736 = load i64, i64* %PC.i1122
  %4737 = add i64 %4736, 4
  store i64 %4737, i64* %PC.i1122
  %4738 = inttoptr i64 %4735 to i32*
  %4739 = load i32, i32* %4738
  %4740 = sext i32 %4739 to i64
  store i64 %4740, i64* %RDX.i1123, align 8
  store %struct.Memory* %loadMem_40bc05, %struct.Memory** %MEMORY
  %loadMem_40bc09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4742 = getelementptr inbounds %struct.GPR, %struct.GPR* %4741, i32 0, i32 33
  %4743 = getelementptr inbounds %struct.Reg, %struct.Reg* %4742, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %4743 to i64*
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4745 = getelementptr inbounds %struct.GPR, %struct.GPR* %4744, i32 0, i32 5
  %4746 = getelementptr inbounds %struct.Reg, %struct.Reg* %4745, i32 0, i32 0
  %RCX.i1120 = bitcast %union.anon* %4746 to i64*
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4748 = getelementptr inbounds %struct.GPR, %struct.GPR* %4747, i32 0, i32 7
  %4749 = getelementptr inbounds %struct.Reg, %struct.Reg* %4748, i32 0, i32 0
  %RDX.i1121 = bitcast %union.anon* %4749 to i64*
  %4750 = load i64, i64* %RDX.i1121
  %4751 = mul i64 %4750, 4
  %4752 = add i64 %4751, 9047232
  %4753 = load i64, i64* %PC.i1119
  %4754 = add i64 %4753, 7
  store i64 %4754, i64* %PC.i1119
  %4755 = inttoptr i64 %4752 to i32*
  %4756 = load i32, i32* %4755
  %4757 = zext i32 %4756 to i64
  store i64 %4757, i64* %RCX.i1120, align 8
  store %struct.Memory* %loadMem_40bc09, %struct.Memory** %MEMORY
  %loadMem_40bc10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 33
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %4760 to i64*
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 5
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %RCX.i1118 = bitcast %union.anon* %4763 to i64*
  %4764 = load i64, i64* %RCX.i1118
  %4765 = load i64, i64* %PC.i1117
  %4766 = add i64 %4765, 7
  store i64 %4766, i64* %PC.i1117
  %4767 = trunc i64 %4764 to i32
  %4768 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %4769 = xor i32 %4768, %4767
  %4770 = zext i32 %4769 to i64
  store i64 %4770, i64* %RCX.i1118, align 8
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4771, align 1
  %4772 = and i32 %4769, 255
  %4773 = call i32 @llvm.ctpop.i32(i32 %4772)
  %4774 = trunc i32 %4773 to i8
  %4775 = and i8 %4774, 1
  %4776 = xor i8 %4775, 1
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4776, i8* %4777, align 1
  %4778 = icmp eq i32 %4769, 0
  %4779 = zext i1 %4778 to i8
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4779, i8* %4780, align 1
  %4781 = lshr i32 %4769, 31
  %4782 = trunc i32 %4781 to i8
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4782, i8* %4783, align 1
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4784, align 1
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4785, align 1
  store %struct.Memory* %loadMem_40bc10, %struct.Memory** %MEMORY
  %loadMem_40bc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 33
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %4788 to i64*
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 5
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %ECX.i1116 = bitcast %union.anon* %4791 to i32*
  %4792 = load i32, i32* %ECX.i1116
  %4793 = zext i32 %4792 to i64
  %4794 = load i64, i64* %PC.i1115
  %4795 = add i64 %4794, 7
  store i64 %4795, i64* %PC.i1115
  store i32 %4792, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bc17, %struct.Memory** %MEMORY
  %loadMem_40bc1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4797 = getelementptr inbounds %struct.GPR, %struct.GPR* %4796, i32 0, i32 33
  %4798 = getelementptr inbounds %struct.Reg, %struct.Reg* %4797, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %4798 to i64*
  %4799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4800 = getelementptr inbounds %struct.GPR, %struct.GPR* %4799, i32 0, i32 7
  %4801 = getelementptr inbounds %struct.Reg, %struct.Reg* %4800, i32 0, i32 0
  %RDX.i1113 = bitcast %union.anon* %4801 to i64*
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4803 = getelementptr inbounds %struct.GPR, %struct.GPR* %4802, i32 0, i32 15
  %4804 = getelementptr inbounds %struct.Reg, %struct.Reg* %4803, i32 0, i32 0
  %RBP.i1114 = bitcast %union.anon* %4804 to i64*
  %4805 = load i64, i64* %RBP.i1114
  %4806 = sub i64 %4805, 32
  %4807 = load i64, i64* %PC.i1112
  %4808 = add i64 %4807, 4
  store i64 %4808, i64* %PC.i1112
  %4809 = inttoptr i64 %4806 to i32*
  %4810 = load i32, i32* %4809
  %4811 = sext i32 %4810 to i64
  store i64 %4811, i64* %RDX.i1113, align 8
  store %struct.Memory* %loadMem_40bc1e, %struct.Memory** %MEMORY
  %loadMem_40bc22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 33
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 7
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RDX.i1111 = bitcast %union.anon* %4817 to i64*
  %4818 = load i64, i64* %RDX.i1111
  %4819 = load i64, i64* %PC.i1110
  %4820 = add i64 %4819, 7
  store i64 %4820, i64* %PC.i1110
  %4821 = sext i64 %4818 to i128
  %4822 = and i128 %4821, -18446744073709551616
  %4823 = zext i64 %4818 to i128
  %4824 = or i128 %4822, %4823
  %4825 = mul i128 576, %4824
  %4826 = trunc i128 %4825 to i64
  store i64 %4826, i64* %RDX.i1111, align 8
  %4827 = sext i64 %4826 to i128
  %4828 = icmp ne i128 %4827, %4825
  %4829 = zext i1 %4828 to i8
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4829, i8* %4830, align 1
  %4831 = trunc i128 %4825 to i32
  %4832 = and i32 %4831, 255
  %4833 = call i32 @llvm.ctpop.i32(i32 %4832)
  %4834 = trunc i32 %4833 to i8
  %4835 = and i8 %4834, 1
  %4836 = xor i8 %4835, 1
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4836, i8* %4837, align 1
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4838, align 1
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4839, align 1
  %4840 = lshr i64 %4826, 63
  %4841 = trunc i64 %4840 to i8
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4841, i8* %4842, align 1
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4829, i8* %4843, align 1
  store %struct.Memory* %loadMem_40bc22, %struct.Memory** %MEMORY
  %loadMem_40bc29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4845 = getelementptr inbounds %struct.GPR, %struct.GPR* %4844, i32 0, i32 33
  %4846 = getelementptr inbounds %struct.Reg, %struct.Reg* %4845, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %4846 to i64*
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4848 = getelementptr inbounds %struct.GPR, %struct.GPR* %4847, i32 0, i32 1
  %4849 = getelementptr inbounds %struct.Reg, %struct.Reg* %4848, i32 0, i32 0
  %RAX.i1108 = bitcast %union.anon* %4849 to i64*
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4851 = getelementptr inbounds %struct.GPR, %struct.GPR* %4850, i32 0, i32 7
  %4852 = getelementptr inbounds %struct.Reg, %struct.Reg* %4851, i32 0, i32 0
  %RDX.i1109 = bitcast %union.anon* %4852 to i64*
  %4853 = load i64, i64* %RAX.i1108
  %4854 = load i64, i64* %RDX.i1109
  %4855 = load i64, i64* %PC.i1107
  %4856 = add i64 %4855, 3
  store i64 %4856, i64* %PC.i1107
  %4857 = add i64 %4854, %4853
  store i64 %4857, i64* %RAX.i1108, align 8
  %4858 = icmp ult i64 %4857, %4853
  %4859 = icmp ult i64 %4857, %4854
  %4860 = or i1 %4858, %4859
  %4861 = zext i1 %4860 to i8
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4861, i8* %4862, align 1
  %4863 = trunc i64 %4857 to i32
  %4864 = and i32 %4863, 255
  %4865 = call i32 @llvm.ctpop.i32(i32 %4864)
  %4866 = trunc i32 %4865 to i8
  %4867 = and i8 %4866, 1
  %4868 = xor i8 %4867, 1
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4868, i8* %4869, align 1
  %4870 = xor i64 %4854, %4853
  %4871 = xor i64 %4870, %4857
  %4872 = lshr i64 %4871, 4
  %4873 = trunc i64 %4872 to i8
  %4874 = and i8 %4873, 1
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4874, i8* %4875, align 1
  %4876 = icmp eq i64 %4857, 0
  %4877 = zext i1 %4876 to i8
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4877, i8* %4878, align 1
  %4879 = lshr i64 %4857, 63
  %4880 = trunc i64 %4879 to i8
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4880, i8* %4881, align 1
  %4882 = lshr i64 %4853, 63
  %4883 = lshr i64 %4854, 63
  %4884 = xor i64 %4879, %4882
  %4885 = xor i64 %4879, %4883
  %4886 = add i64 %4884, %4885
  %4887 = icmp eq i64 %4886, 2
  %4888 = zext i1 %4887 to i8
  %4889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4888, i8* %4889, align 1
  store %struct.Memory* %loadMem_40bc29, %struct.Memory** %MEMORY
  %loadMem_40bc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 33
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %4892 to i64*
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 7
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %RDX.i1105 = bitcast %union.anon* %4895 to i64*
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 15
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %4898 to i64*
  %4899 = load i64, i64* %RBP.i1106
  %4900 = sub i64 %4899, 24
  %4901 = load i64, i64* %PC.i1104
  %4902 = add i64 %4901, 4
  store i64 %4902, i64* %PC.i1104
  %4903 = inttoptr i64 %4900 to i32*
  %4904 = load i32, i32* %4903
  %4905 = sext i32 %4904 to i64
  store i64 %4905, i64* %RDX.i1105, align 8
  store %struct.Memory* %loadMem_40bc2c, %struct.Memory** %MEMORY
  %loadMem_40bc30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 33
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %4908 to i64*
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4910 = getelementptr inbounds %struct.GPR, %struct.GPR* %4909, i32 0, i32 1
  %4911 = getelementptr inbounds %struct.Reg, %struct.Reg* %4910, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %4911 to i64*
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4913 = getelementptr inbounds %struct.GPR, %struct.GPR* %4912, i32 0, i32 5
  %4914 = getelementptr inbounds %struct.Reg, %struct.Reg* %4913, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %4914 to i64*
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4916 = getelementptr inbounds %struct.GPR, %struct.GPR* %4915, i32 0, i32 7
  %4917 = getelementptr inbounds %struct.Reg, %struct.Reg* %4916, i32 0, i32 0
  %RDX.i1103 = bitcast %union.anon* %4917 to i64*
  %4918 = load i64, i64* %RAX.i1101
  %4919 = load i64, i64* %RDX.i1103
  %4920 = mul i64 %4919, 4
  %4921 = add i64 %4920, %4918
  %4922 = load i64, i64* %PC.i1100
  %4923 = add i64 %4922, 3
  store i64 %4923, i64* %PC.i1100
  %4924 = inttoptr i64 %4921 to i32*
  %4925 = load i32, i32* %4924
  %4926 = zext i32 %4925 to i64
  store i64 %4926, i64* %RCX.i1102, align 8
  store %struct.Memory* %loadMem_40bc30, %struct.Memory** %MEMORY
  %loadMem_40bc33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4928 = getelementptr inbounds %struct.GPR, %struct.GPR* %4927, i32 0, i32 33
  %4929 = getelementptr inbounds %struct.Reg, %struct.Reg* %4928, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %4929 to i64*
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4931 = getelementptr inbounds %struct.GPR, %struct.GPR* %4930, i32 0, i32 5
  %4932 = getelementptr inbounds %struct.Reg, %struct.Reg* %4931, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %4932 to i64*
  %4933 = load i64, i64* %RCX.i1099
  %4934 = load i64, i64* %PC.i1098
  %4935 = add i64 %4934, 7
  store i64 %4935, i64* %PC.i1098
  %4936 = trunc i64 %4933 to i32
  %4937 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %4938 = xor i32 %4937, %4936
  %4939 = zext i32 %4938 to i64
  store i64 %4939, i64* %RCX.i1099, align 8
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4940, align 1
  %4941 = and i32 %4938, 255
  %4942 = call i32 @llvm.ctpop.i32(i32 %4941)
  %4943 = trunc i32 %4942 to i8
  %4944 = and i8 %4943, 1
  %4945 = xor i8 %4944, 1
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4945, i8* %4946, align 1
  %4947 = icmp eq i32 %4938, 0
  %4948 = zext i1 %4947 to i8
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4948, i8* %4949, align 1
  %4950 = lshr i32 %4938, 31
  %4951 = trunc i32 %4950 to i8
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4951, i8* %4952, align 1
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4953, align 1
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4954, align 1
  store %struct.Memory* %loadMem_40bc33, %struct.Memory** %MEMORY
  %loadMem_40bc3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 33
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %4957 to i64*
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4959 = getelementptr inbounds %struct.GPR, %struct.GPR* %4958, i32 0, i32 5
  %4960 = getelementptr inbounds %struct.Reg, %struct.Reg* %4959, i32 0, i32 0
  %ECX.i1097 = bitcast %union.anon* %4960 to i32*
  %4961 = load i32, i32* %ECX.i1097
  %4962 = zext i32 %4961 to i64
  %4963 = load i64, i64* %PC.i1096
  %4964 = add i64 %4963, 7
  store i64 %4964, i64* %PC.i1096
  store i32 %4961, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bc3a, %struct.Memory** %MEMORY
  %loadMem_40bc41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4966 = getelementptr inbounds %struct.GPR, %struct.GPR* %4965, i32 0, i32 33
  %4967 = getelementptr inbounds %struct.Reg, %struct.Reg* %4966, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %4967 to i64*
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4969 = getelementptr inbounds %struct.GPR, %struct.GPR* %4968, i32 0, i32 5
  %4970 = getelementptr inbounds %struct.Reg, %struct.Reg* %4969, i32 0, i32 0
  %RCX.i1095 = bitcast %union.anon* %4970 to i64*
  %4971 = load i64, i64* %PC.i1094
  %4972 = add i64 %4971, 7
  store i64 %4972, i64* %PC.i1094
  %4973 = load i32, i32* bitcast (%G_0x62dab4_type* @G_0x62dab4 to i32*)
  %4974 = zext i32 %4973 to i64
  store i64 %4974, i64* %RCX.i1095, align 8
  store %struct.Memory* %loadMem_40bc41, %struct.Memory** %MEMORY
  %loadMem_40bc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 33
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %4977 to i64*
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 9
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %RSI.i1093 = bitcast %union.anon* %4980 to i64*
  %4981 = load i64, i64* %PC.i1092
  %4982 = add i64 %4981, 7
  store i64 %4982, i64* %PC.i1092
  %4983 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %4984 = zext i32 %4983 to i64
  store i64 %4984, i64* %RSI.i1093, align 8
  store %struct.Memory* %loadMem_40bc48, %struct.Memory** %MEMORY
  %loadMem_40bc4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4986 = getelementptr inbounds %struct.GPR, %struct.GPR* %4985, i32 0, i32 33
  %4987 = getelementptr inbounds %struct.Reg, %struct.Reg* %4986, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %4987 to i64*
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4989 = getelementptr inbounds %struct.GPR, %struct.GPR* %4988, i32 0, i32 5
  %4990 = getelementptr inbounds %struct.Reg, %struct.Reg* %4989, i32 0, i32 0
  %ECX.i1090 = bitcast %union.anon* %4990 to i32*
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 9
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %RSI.i1091 = bitcast %union.anon* %4993 to i64*
  %4994 = load i64, i64* %RSI.i1091
  %4995 = load i32, i32* %ECX.i1090
  %4996 = zext i32 %4995 to i64
  %4997 = load i64, i64* %PC.i1089
  %4998 = add i64 %4997, 2
  store i64 %4998, i64* %PC.i1089
  %4999 = trunc i64 %4994 to i32
  %5000 = sub i32 %4999, %4995
  %5001 = zext i32 %5000 to i64
  store i64 %5001, i64* %RSI.i1091, align 8
  %5002 = icmp ult i32 %4999, %4995
  %5003 = zext i1 %5002 to i8
  %5004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5003, i8* %5004, align 1
  %5005 = and i32 %5000, 255
  %5006 = call i32 @llvm.ctpop.i32(i32 %5005)
  %5007 = trunc i32 %5006 to i8
  %5008 = and i8 %5007, 1
  %5009 = xor i8 %5008, 1
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5009, i8* %5010, align 1
  %5011 = xor i64 %4996, %4994
  %5012 = trunc i64 %5011 to i32
  %5013 = xor i32 %5012, %5000
  %5014 = lshr i32 %5013, 4
  %5015 = trunc i32 %5014 to i8
  %5016 = and i8 %5015, 1
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5016, i8* %5017, align 1
  %5018 = icmp eq i32 %5000, 0
  %5019 = zext i1 %5018 to i8
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5019, i8* %5020, align 1
  %5021 = lshr i32 %5000, 31
  %5022 = trunc i32 %5021 to i8
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5022, i8* %5023, align 1
  %5024 = lshr i32 %4999, 31
  %5025 = lshr i32 %4995, 31
  %5026 = xor i32 %5025, %5024
  %5027 = xor i32 %5021, %5024
  %5028 = add i32 %5027, %5026
  %5029 = icmp eq i32 %5028, 2
  %5030 = zext i1 %5029 to i8
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5030, i8* %5031, align 1
  store %struct.Memory* %loadMem_40bc4f, %struct.Memory** %MEMORY
  %loadMem_40bc51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 33
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %5034 to i64*
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 9
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %ESI.i1088 = bitcast %union.anon* %5037 to i32*
  %5038 = load i32, i32* %ESI.i1088
  %5039 = zext i32 %5038 to i64
  %5040 = load i64, i64* %PC.i1087
  %5041 = add i64 %5040, 7
  store i64 %5041, i64* %PC.i1087
  store i32 %5038, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40bc51, %struct.Memory** %MEMORY
  %loadMem_40bc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5043 = getelementptr inbounds %struct.GPR, %struct.GPR* %5042, i32 0, i32 33
  %5044 = getelementptr inbounds %struct.Reg, %struct.Reg* %5043, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %5044 to i64*
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5046 = getelementptr inbounds %struct.GPR, %struct.GPR* %5045, i32 0, i32 1
  %5047 = getelementptr inbounds %struct.Reg, %struct.Reg* %5046, i32 0, i32 0
  %RAX.i1085 = bitcast %union.anon* %5047 to i64*
  %5048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5049 = getelementptr inbounds %struct.GPR, %struct.GPR* %5048, i32 0, i32 15
  %5050 = getelementptr inbounds %struct.Reg, %struct.Reg* %5049, i32 0, i32 0
  %RBP.i1086 = bitcast %union.anon* %5050 to i64*
  %5051 = load i64, i64* %RBP.i1086
  %5052 = sub i64 %5051, 32
  %5053 = load i64, i64* %PC.i1084
  %5054 = add i64 %5053, 4
  store i64 %5054, i64* %PC.i1084
  %5055 = inttoptr i64 %5052 to i32*
  %5056 = load i32, i32* %5055
  %5057 = sext i32 %5056 to i64
  store i64 %5057, i64* %RAX.i1085, align 8
  store %struct.Memory* %loadMem_40bc58, %struct.Memory** %MEMORY
  %loadMem_40bc5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 33
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %5060 to i64*
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 1
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %RAX.i1082 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 5
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %RCX.i1083 = bitcast %union.anon* %5066 to i64*
  %5067 = load i64, i64* %RAX.i1082
  %5068 = mul i64 %5067, 4
  %5069 = add i64 %5068, 6478512
  %5070 = load i64, i64* %PC.i1081
  %5071 = add i64 %5070, 7
  store i64 %5071, i64* %PC.i1081
  %5072 = inttoptr i64 %5069 to i32*
  %5073 = load i32, i32* %5072
  %5074 = zext i32 %5073 to i64
  store i64 %5074, i64* %RCX.i1083, align 8
  store %struct.Memory* %loadMem_40bc5c, %struct.Memory** %MEMORY
  %loadMem_40bc63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5076 = getelementptr inbounds %struct.GPR, %struct.GPR* %5075, i32 0, i32 33
  %5077 = getelementptr inbounds %struct.Reg, %struct.Reg* %5076, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %5077 to i64*
  %5078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5079 = getelementptr inbounds %struct.GPR, %struct.GPR* %5078, i32 0, i32 5
  %5080 = getelementptr inbounds %struct.Reg, %struct.Reg* %5079, i32 0, i32 0
  %RCX.i1080 = bitcast %union.anon* %5080 to i64*
  %5081 = load i64, i64* %RCX.i1080
  %5082 = load i64, i64* %PC.i1079
  %5083 = add i64 %5082, 7
  store i64 %5083, i64* %PC.i1079
  %5084 = trunc i64 %5081 to i32
  %5085 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %5086 = add i32 %5085, %5084
  %5087 = zext i32 %5086 to i64
  store i64 %5087, i64* %RCX.i1080, align 8
  %5088 = icmp ult i32 %5086, %5084
  %5089 = icmp ult i32 %5086, %5085
  %5090 = or i1 %5088, %5089
  %5091 = zext i1 %5090 to i8
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5091, i8* %5092, align 1
  %5093 = and i32 %5086, 255
  %5094 = call i32 @llvm.ctpop.i32(i32 %5093)
  %5095 = trunc i32 %5094 to i8
  %5096 = and i8 %5095, 1
  %5097 = xor i8 %5096, 1
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5097, i8* %5098, align 1
  %5099 = xor i32 %5085, %5084
  %5100 = xor i32 %5099, %5086
  %5101 = lshr i32 %5100, 4
  %5102 = trunc i32 %5101 to i8
  %5103 = and i8 %5102, 1
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5103, i8* %5104, align 1
  %5105 = icmp eq i32 %5086, 0
  %5106 = zext i1 %5105 to i8
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5106, i8* %5107, align 1
  %5108 = lshr i32 %5086, 31
  %5109 = trunc i32 %5108 to i8
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5109, i8* %5110, align 1
  %5111 = lshr i32 %5084, 31
  %5112 = lshr i32 %5085, 31
  %5113 = xor i32 %5108, %5111
  %5114 = xor i32 %5108, %5112
  %5115 = add i32 %5113, %5114
  %5116 = icmp eq i32 %5115, 2
  %5117 = zext i1 %5116 to i8
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5117, i8* %5118, align 1
  store %struct.Memory* %loadMem_40bc63, %struct.Memory** %MEMORY
  %loadMem_40bc6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 33
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %5121 to i64*
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5123 = getelementptr inbounds %struct.GPR, %struct.GPR* %5122, i32 0, i32 5
  %5124 = getelementptr inbounds %struct.Reg, %struct.Reg* %5123, i32 0, i32 0
  %ECX.i1078 = bitcast %union.anon* %5124 to i32*
  %5125 = load i32, i32* %ECX.i1078
  %5126 = zext i32 %5125 to i64
  %5127 = load i64, i64* %PC.i1077
  %5128 = add i64 %5127, 7
  store i64 %5128, i64* %PC.i1077
  store i32 %5125, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40bc6a, %struct.Memory** %MEMORY
  %loadMem_40bc71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5130 = getelementptr inbounds %struct.GPR, %struct.GPR* %5129, i32 0, i32 33
  %5131 = getelementptr inbounds %struct.Reg, %struct.Reg* %5130, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %5131 to i64*
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5133 = getelementptr inbounds %struct.GPR, %struct.GPR* %5132, i32 0, i32 5
  %5134 = getelementptr inbounds %struct.Reg, %struct.Reg* %5133, i32 0, i32 0
  %RCX.i1076 = bitcast %union.anon* %5134 to i64*
  %5135 = load i64, i64* %PC.i1075
  %5136 = add i64 %5135, 7
  store i64 %5136, i64* %PC.i1075
  %5137 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %5138 = zext i32 %5137 to i64
  store i64 %5138, i64* %RCX.i1076, align 8
  store %struct.Memory* %loadMem_40bc71, %struct.Memory** %MEMORY
  %loadMem_40bc78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 33
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %5141 to i64*
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 5
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %RCX.i1074 = bitcast %union.anon* %5144 to i64*
  %5145 = load i64, i64* %RCX.i1074
  %5146 = load i64, i64* %PC.i1073
  %5147 = add i64 %5146, 3
  store i64 %5147, i64* %PC.i1073
  %5148 = trunc i64 %5145 to i32
  %5149 = add i32 1, %5148
  %5150 = zext i32 %5149 to i64
  store i64 %5150, i64* %RCX.i1074, align 8
  %5151 = icmp ult i32 %5149, %5148
  %5152 = icmp ult i32 %5149, 1
  %5153 = or i1 %5151, %5152
  %5154 = zext i1 %5153 to i8
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5154, i8* %5155, align 1
  %5156 = and i32 %5149, 255
  %5157 = call i32 @llvm.ctpop.i32(i32 %5156)
  %5158 = trunc i32 %5157 to i8
  %5159 = and i8 %5158, 1
  %5160 = xor i8 %5159, 1
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5160, i8* %5161, align 1
  %5162 = xor i64 1, %5145
  %5163 = trunc i64 %5162 to i32
  %5164 = xor i32 %5163, %5149
  %5165 = lshr i32 %5164, 4
  %5166 = trunc i32 %5165 to i8
  %5167 = and i8 %5166, 1
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5167, i8* %5168, align 1
  %5169 = icmp eq i32 %5149, 0
  %5170 = zext i1 %5169 to i8
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5170, i8* %5171, align 1
  %5172 = lshr i32 %5149, 31
  %5173 = trunc i32 %5172 to i8
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5173, i8* %5174, align 1
  %5175 = lshr i32 %5148, 31
  %5176 = xor i32 %5172, %5175
  %5177 = add i32 %5176, %5172
  %5178 = icmp eq i32 %5177, 2
  %5179 = zext i1 %5178 to i8
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5179, i8* %5180, align 1
  store %struct.Memory* %loadMem_40bc78, %struct.Memory** %MEMORY
  %loadMem_40bc7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 33
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %5183 to i64*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5185 = getelementptr inbounds %struct.GPR, %struct.GPR* %5184, i32 0, i32 5
  %5186 = getelementptr inbounds %struct.Reg, %struct.Reg* %5185, i32 0, i32 0
  %ECX.i1072 = bitcast %union.anon* %5186 to i32*
  %5187 = load i32, i32* %ECX.i1072
  %5188 = zext i32 %5187 to i64
  %5189 = load i64, i64* %PC.i1071
  %5190 = add i64 %5189, 7
  store i64 %5190, i64* %PC.i1071
  store i32 %5187, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40bc7b, %struct.Memory** %MEMORY
  %loadMem_40bc82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5192 = getelementptr inbounds %struct.GPR, %struct.GPR* %5191, i32 0, i32 33
  %5193 = getelementptr inbounds %struct.Reg, %struct.Reg* %5192, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %5193 to i64*
  %5194 = load i64, i64* %PC.i1070
  %5195 = add i64 %5194, 2828
  %5196 = load i64, i64* %PC.i1070
  %5197 = add i64 %5196, 5
  store i64 %5197, i64* %PC.i1070
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5195, i64* %5198, align 8
  store %struct.Memory* %loadMem_40bc82, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40bc87:                                  ; preds = %block_40bb82
  %loadMem_40bc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 33
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %5201 to i64*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 15
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %RBP.i1069 = bitcast %union.anon* %5204 to i64*
  %5205 = load i64, i64* %RBP.i1069
  %5206 = sub i64 %5205, 16
  %5207 = load i64, i64* %PC.i1068
  %5208 = add i64 %5207, 4
  store i64 %5208, i64* %PC.i1068
  %5209 = inttoptr i64 %5206 to i32*
  %5210 = load i32, i32* %5209
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5211, align 1
  %5212 = and i32 %5210, 255
  %5213 = call i32 @llvm.ctpop.i32(i32 %5212)
  %5214 = trunc i32 %5213 to i8
  %5215 = and i8 %5214, 1
  %5216 = xor i8 %5215, 1
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5216, i8* %5217, align 1
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5218, align 1
  %5219 = icmp eq i32 %5210, 0
  %5220 = zext i1 %5219 to i8
  %5221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5220, i8* %5221, align 1
  %5222 = lshr i32 %5210, 31
  %5223 = trunc i32 %5222 to i8
  %5224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5223, i8* %5224, align 1
  %5225 = lshr i32 %5210, 31
  %5226 = xor i32 %5222, %5225
  %5227 = add i32 %5226, %5225
  %5228 = icmp eq i32 %5227, 2
  %5229 = zext i1 %5228 to i8
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5229, i8* %5230, align 1
  store %struct.Memory* %loadMem_40bc87, %struct.Memory** %MEMORY
  %loadMem_40bc8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 33
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %5233 to i64*
  %5234 = load i64, i64* %PC.i1067
  %5235 = add i64 %5234, 394
  %5236 = load i64, i64* %PC.i1067
  %5237 = add i64 %5236, 6
  %5238 = load i64, i64* %PC.i1067
  %5239 = add i64 %5238, 6
  store i64 %5239, i64* %PC.i1067
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5241 = load i8, i8* %5240, align 1
  store i8 %5241, i8* %BRANCH_TAKEN, align 1
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5243 = icmp ne i8 %5241, 0
  %5244 = select i1 %5243, i64 %5235, i64 %5237
  store i64 %5244, i64* %5242, align 8
  store %struct.Memory* %loadMem_40bc8b, %struct.Memory** %MEMORY
  %loadBr_40bc8b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bc8b = icmp eq i8 %loadBr_40bc8b, 1
  br i1 %cmpBr_40bc8b, label %block_.L_40be15, label %block_40bc91

block_40bc91:                                     ; preds = %block_.L_40bc87
  %loadMem_40bc91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5246 = getelementptr inbounds %struct.GPR, %struct.GPR* %5245, i32 0, i32 33
  %5247 = getelementptr inbounds %struct.Reg, %struct.Reg* %5246, i32 0, i32 0
  %PC.i1065 = bitcast %union.anon* %5247 to i64*
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 11
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %RDI.i1066 = bitcast %union.anon* %5250 to i64*
  %5251 = load i64, i64* %PC.i1065
  %5252 = add i64 %5251, 5
  store i64 %5252, i64* %PC.i1065
  store i64 1, i64* %RDI.i1066, align 8
  store %struct.Memory* %loadMem_40bc91, %struct.Memory** %MEMORY
  %loadMem_40bc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5254 = getelementptr inbounds %struct.GPR, %struct.GPR* %5253, i32 0, i32 33
  %5255 = getelementptr inbounds %struct.Reg, %struct.Reg* %5254, i32 0, i32 0
  %PC.i1062 = bitcast %union.anon* %5255 to i64*
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5257 = getelementptr inbounds %struct.GPR, %struct.GPR* %5256, i32 0, i32 9
  %5258 = getelementptr inbounds %struct.Reg, %struct.Reg* %5257, i32 0, i32 0
  %ESI.i1063 = bitcast %union.anon* %5258 to i32*
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5260 = getelementptr inbounds %struct.GPR, %struct.GPR* %5259, i32 0, i32 9
  %5261 = getelementptr inbounds %struct.Reg, %struct.Reg* %5260, i32 0, i32 0
  %RSI.i1064 = bitcast %union.anon* %5261 to i64*
  %5262 = load i64, i64* %RSI.i1064
  %5263 = load i32, i32* %ESI.i1063
  %5264 = zext i32 %5263 to i64
  %5265 = load i64, i64* %PC.i1062
  %5266 = add i64 %5265, 2
  store i64 %5266, i64* %PC.i1062
  %5267 = xor i64 %5264, %5262
  %5268 = trunc i64 %5267 to i32
  %5269 = and i64 %5267, 4294967295
  store i64 %5269, i64* %RSI.i1064, align 8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5270, align 1
  %5271 = and i32 %5268, 255
  %5272 = call i32 @llvm.ctpop.i32(i32 %5271)
  %5273 = trunc i32 %5272 to i8
  %5274 = and i8 %5273, 1
  %5275 = xor i8 %5274, 1
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5275, i8* %5276, align 1
  %5277 = icmp eq i32 %5268, 0
  %5278 = zext i1 %5277 to i8
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5278, i8* %5279, align 1
  %5280 = lshr i32 %5268, 31
  %5281 = trunc i32 %5280 to i8
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5281, i8* %5282, align 1
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5283, align 1
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5284, align 1
  store %struct.Memory* %loadMem_40bc96, %struct.Memory** %MEMORY
  %loadMem_40bc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 33
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %5287 to i64*
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 1
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %RAX.i1060 = bitcast %union.anon* %5290 to i64*
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5292 = getelementptr inbounds %struct.GPR, %struct.GPR* %5291, i32 0, i32 15
  %5293 = getelementptr inbounds %struct.Reg, %struct.Reg* %5292, i32 0, i32 0
  %RBP.i1061 = bitcast %union.anon* %5293 to i64*
  %5294 = load i64, i64* %RBP.i1061
  %5295 = sub i64 %5294, 20
  %5296 = load i64, i64* %PC.i1059
  %5297 = add i64 %5296, 4
  store i64 %5297, i64* %PC.i1059
  %5298 = inttoptr i64 %5295 to i32*
  %5299 = load i32, i32* %5298
  %5300 = sext i32 %5299 to i64
  store i64 %5300, i64* %RAX.i1060, align 8
  store %struct.Memory* %loadMem_40bc98, %struct.Memory** %MEMORY
  %loadMem_40bc9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5302 = getelementptr inbounds %struct.GPR, %struct.GPR* %5301, i32 0, i32 33
  %5303 = getelementptr inbounds %struct.Reg, %struct.Reg* %5302, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %5303 to i64*
  %5304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5305 = getelementptr inbounds %struct.GPR, %struct.GPR* %5304, i32 0, i32 1
  %5306 = getelementptr inbounds %struct.Reg, %struct.Reg* %5305, i32 0, i32 0
  %RAX.i1057 = bitcast %union.anon* %5306 to i64*
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5308 = getelementptr inbounds %struct.GPR, %struct.GPR* %5307, i32 0, i32 5
  %5309 = getelementptr inbounds %struct.Reg, %struct.Reg* %5308, i32 0, i32 0
  %RCX.i1058 = bitcast %union.anon* %5309 to i64*
  %5310 = load i64, i64* %RAX.i1057
  %5311 = mul i64 %5310, 4
  %5312 = add i64 %5311, 9047232
  %5313 = load i64, i64* %PC.i1056
  %5314 = add i64 %5313, 7
  store i64 %5314, i64* %PC.i1056
  %5315 = inttoptr i64 %5312 to i32*
  %5316 = load i32, i32* %5315
  %5317 = zext i32 %5316 to i64
  store i64 %5317, i64* %RCX.i1058, align 8
  store %struct.Memory* %loadMem_40bc9c, %struct.Memory** %MEMORY
  %loadMem_40bca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 33
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %5320 to i64*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 5
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RCX.i1055 = bitcast %union.anon* %5323 to i64*
  %5324 = load i64, i64* %RCX.i1055
  %5325 = load i64, i64* %PC.i1054
  %5326 = add i64 %5325, 7
  store i64 %5326, i64* %PC.i1054
  %5327 = trunc i64 %5324 to i32
  %5328 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5329 = xor i32 %5328, %5327
  %5330 = zext i32 %5329 to i64
  store i64 %5330, i64* %RCX.i1055, align 8
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5331, align 1
  %5332 = and i32 %5329, 255
  %5333 = call i32 @llvm.ctpop.i32(i32 %5332)
  %5334 = trunc i32 %5333 to i8
  %5335 = and i8 %5334, 1
  %5336 = xor i8 %5335, 1
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5336, i8* %5337, align 1
  %5338 = icmp eq i32 %5329, 0
  %5339 = zext i1 %5338 to i8
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5339, i8* %5340, align 1
  %5341 = lshr i32 %5329, 31
  %5342 = trunc i32 %5341 to i8
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5342, i8* %5343, align 1
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5344, align 1
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5345, align 1
  store %struct.Memory* %loadMem_40bca3, %struct.Memory** %MEMORY
  %loadMem_40bcaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5347 = getelementptr inbounds %struct.GPR, %struct.GPR* %5346, i32 0, i32 33
  %5348 = getelementptr inbounds %struct.Reg, %struct.Reg* %5347, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %5348 to i64*
  %5349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5350 = getelementptr inbounds %struct.GPR, %struct.GPR* %5349, i32 0, i32 5
  %5351 = getelementptr inbounds %struct.Reg, %struct.Reg* %5350, i32 0, i32 0
  %ECX.i1053 = bitcast %union.anon* %5351 to i32*
  %5352 = load i32, i32* %ECX.i1053
  %5353 = zext i32 %5352 to i64
  %5354 = load i64, i64* %PC.i1052
  %5355 = add i64 %5354, 7
  store i64 %5355, i64* %PC.i1052
  store i32 %5352, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bcaa, %struct.Memory** %MEMORY
  %loadMem_40bcb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 33
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %5358 to i64*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 5
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %5361 to i64*
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5363 = getelementptr inbounds %struct.GPR, %struct.GPR* %5362, i32 0, i32 15
  %5364 = getelementptr inbounds %struct.Reg, %struct.Reg* %5363, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %5364 to i64*
  %5365 = load i64, i64* %RBP.i1051
  %5366 = sub i64 %5365, 24
  %5367 = load i64, i64* %PC.i1049
  %5368 = add i64 %5367, 3
  store i64 %5368, i64* %PC.i1049
  %5369 = inttoptr i64 %5366 to i32*
  %5370 = load i32, i32* %5369
  %5371 = zext i32 %5370 to i64
  store i64 %5371, i64* %RCX.i1050, align 8
  store %struct.Memory* %loadMem_40bcb1, %struct.Memory** %MEMORY
  %loadMem_40bcb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 33
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %5374 to i64*
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5376 = getelementptr inbounds %struct.GPR, %struct.GPR* %5375, i32 0, i32 5
  %5377 = getelementptr inbounds %struct.Reg, %struct.Reg* %5376, i32 0, i32 0
  %RCX.i1048 = bitcast %union.anon* %5377 to i64*
  %5378 = load i64, i64* %RCX.i1048
  %5379 = load i64, i64* %PC.i1047
  %5380 = add i64 %5379, 3
  store i64 %5380, i64* %PC.i1047
  %5381 = trunc i64 %5378 to i32
  %5382 = sub i32 %5381, 12
  %5383 = zext i32 %5382 to i64
  store i64 %5383, i64* %RCX.i1048, align 8
  %5384 = icmp ult i32 %5381, 12
  %5385 = zext i1 %5384 to i8
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5385, i8* %5386, align 1
  %5387 = and i32 %5382, 255
  %5388 = call i32 @llvm.ctpop.i32(i32 %5387)
  %5389 = trunc i32 %5388 to i8
  %5390 = and i8 %5389, 1
  %5391 = xor i8 %5390, 1
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5391, i8* %5392, align 1
  %5393 = xor i64 12, %5378
  %5394 = trunc i64 %5393 to i32
  %5395 = xor i32 %5394, %5382
  %5396 = lshr i32 %5395, 4
  %5397 = trunc i32 %5396 to i8
  %5398 = and i8 %5397, 1
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5398, i8* %5399, align 1
  %5400 = icmp eq i32 %5382, 0
  %5401 = zext i1 %5400 to i8
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5401, i8* %5402, align 1
  %5403 = lshr i32 %5382, 31
  %5404 = trunc i32 %5403 to i8
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5404, i8* %5405, align 1
  %5406 = lshr i32 %5381, 31
  %5407 = xor i32 %5403, %5406
  %5408 = add i32 %5407, %5406
  %5409 = icmp eq i32 %5408, 2
  %5410 = zext i1 %5409 to i8
  %5411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5410, i8* %5411, align 1
  store %struct.Memory* %loadMem_40bcb4, %struct.Memory** %MEMORY
  %loadMem_40bcb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5413 = getelementptr inbounds %struct.GPR, %struct.GPR* %5412, i32 0, i32 33
  %5414 = getelementptr inbounds %struct.Reg, %struct.Reg* %5413, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %5414 to i64*
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5416 = getelementptr inbounds %struct.GPR, %struct.GPR* %5415, i32 0, i32 5
  %5417 = getelementptr inbounds %struct.Reg, %struct.Reg* %5416, i32 0, i32 0
  %ECX.i1045 = bitcast %union.anon* %5417 to i32*
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 1
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %RAX.i1046 = bitcast %union.anon* %5420 to i64*
  %5421 = load i32, i32* %ECX.i1045
  %5422 = zext i32 %5421 to i64
  %5423 = load i64, i64* %PC.i1044
  %5424 = add i64 %5423, 3
  store i64 %5424, i64* %PC.i1044
  %5425 = shl i64 %5422, 32
  %5426 = ashr exact i64 %5425, 32
  store i64 %5426, i64* %RAX.i1046, align 8
  store %struct.Memory* %loadMem_40bcb7, %struct.Memory** %MEMORY
  %loadMem_40bcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5428 = getelementptr inbounds %struct.GPR, %struct.GPR* %5427, i32 0, i32 33
  %5429 = getelementptr inbounds %struct.Reg, %struct.Reg* %5428, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %5429 to i64*
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5431 = getelementptr inbounds %struct.GPR, %struct.GPR* %5430, i32 0, i32 1
  %5432 = getelementptr inbounds %struct.Reg, %struct.Reg* %5431, i32 0, i32 0
  %RAX.i1042 = bitcast %union.anon* %5432 to i64*
  %5433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5434 = getelementptr inbounds %struct.GPR, %struct.GPR* %5433, i32 0, i32 5
  %5435 = getelementptr inbounds %struct.Reg, %struct.Reg* %5434, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %5435 to i64*
  %5436 = load i64, i64* %RAX.i1042
  %5437 = mul i64 %5436, 4
  %5438 = add i64 %5437, 9047808
  %5439 = load i64, i64* %PC.i1041
  %5440 = add i64 %5439, 7
  store i64 %5440, i64* %PC.i1041
  %5441 = inttoptr i64 %5438 to i32*
  %5442 = load i32, i32* %5441
  %5443 = zext i32 %5442 to i64
  store i64 %5443, i64* %RCX.i1043, align 8
  store %struct.Memory* %loadMem_40bcba, %struct.Memory** %MEMORY
  %loadMem_40bcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5445 = getelementptr inbounds %struct.GPR, %struct.GPR* %5444, i32 0, i32 33
  %5446 = getelementptr inbounds %struct.Reg, %struct.Reg* %5445, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %5446 to i64*
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5448 = getelementptr inbounds %struct.GPR, %struct.GPR* %5447, i32 0, i32 5
  %5449 = getelementptr inbounds %struct.Reg, %struct.Reg* %5448, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %5449 to i64*
  %5450 = load i64, i64* %RCX.i1040
  %5451 = load i64, i64* %PC.i1039
  %5452 = add i64 %5451, 7
  store i64 %5452, i64* %PC.i1039
  %5453 = trunc i64 %5450 to i32
  %5454 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5455 = xor i32 %5454, %5453
  %5456 = zext i32 %5455 to i64
  store i64 %5456, i64* %RCX.i1040, align 8
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5457, align 1
  %5458 = and i32 %5455, 255
  %5459 = call i32 @llvm.ctpop.i32(i32 %5458)
  %5460 = trunc i32 %5459 to i8
  %5461 = and i8 %5460, 1
  %5462 = xor i8 %5461, 1
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5462, i8* %5463, align 1
  %5464 = icmp eq i32 %5455, 0
  %5465 = zext i1 %5464 to i8
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5465, i8* %5466, align 1
  %5467 = lshr i32 %5455, 31
  %5468 = trunc i32 %5467 to i8
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5468, i8* %5469, align 1
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5470, align 1
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5471, align 1
  store %struct.Memory* %loadMem_40bcc1, %struct.Memory** %MEMORY
  %loadMem_40bcc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5473 = getelementptr inbounds %struct.GPR, %struct.GPR* %5472, i32 0, i32 33
  %5474 = getelementptr inbounds %struct.Reg, %struct.Reg* %5473, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %5474 to i64*
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 5
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %ECX.i1038 = bitcast %union.anon* %5477 to i32*
  %5478 = load i32, i32* %ECX.i1038
  %5479 = zext i32 %5478 to i64
  %5480 = load i64, i64* %PC.i1037
  %5481 = add i64 %5480, 7
  store i64 %5481, i64* %PC.i1037
  store i32 %5478, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bcc8, %struct.Memory** %MEMORY
  %loadMem_40bccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5483 = getelementptr inbounds %struct.GPR, %struct.GPR* %5482, i32 0, i32 33
  %5484 = getelementptr inbounds %struct.Reg, %struct.Reg* %5483, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %5484 to i64*
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5486 = getelementptr inbounds %struct.GPR, %struct.GPR* %5485, i32 0, i32 1
  %5487 = getelementptr inbounds %struct.Reg, %struct.Reg* %5486, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %5487 to i64*
  %5488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5489 = getelementptr inbounds %struct.GPR, %struct.GPR* %5488, i32 0, i32 15
  %5490 = getelementptr inbounds %struct.Reg, %struct.Reg* %5489, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %5490 to i64*
  %5491 = load i64, i64* %RBP.i1036
  %5492 = sub i64 %5491, 24
  %5493 = load i64, i64* %PC.i1034
  %5494 = add i64 %5493, 4
  store i64 %5494, i64* %PC.i1034
  %5495 = inttoptr i64 %5492 to i32*
  %5496 = load i32, i32* %5495
  %5497 = sext i32 %5496 to i64
  store i64 %5497, i64* %RAX.i1035, align 8
  store %struct.Memory* %loadMem_40bccf, %struct.Memory** %MEMORY
  %loadMem_40bcd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5499 = getelementptr inbounds %struct.GPR, %struct.GPR* %5498, i32 0, i32 33
  %5500 = getelementptr inbounds %struct.Reg, %struct.Reg* %5499, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %5500 to i64*
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5502 = getelementptr inbounds %struct.GPR, %struct.GPR* %5501, i32 0, i32 1
  %5503 = getelementptr inbounds %struct.Reg, %struct.Reg* %5502, i32 0, i32 0
  %RAX.i1032 = bitcast %union.anon* %5503 to i64*
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5505 = getelementptr inbounds %struct.GPR, %struct.GPR* %5504, i32 0, i32 5
  %5506 = getelementptr inbounds %struct.Reg, %struct.Reg* %5505, i32 0, i32 0
  %RCX.i1033 = bitcast %union.anon* %5506 to i64*
  %5507 = load i64, i64* %RAX.i1032
  %5508 = mul i64 %5507, 4
  %5509 = add i64 %5508, 9047232
  %5510 = load i64, i64* %PC.i1031
  %5511 = add i64 %5510, 7
  store i64 %5511, i64* %PC.i1031
  %5512 = inttoptr i64 %5509 to i32*
  %5513 = load i32, i32* %5512
  %5514 = zext i32 %5513 to i64
  store i64 %5514, i64* %RCX.i1033, align 8
  store %struct.Memory* %loadMem_40bcd3, %struct.Memory** %MEMORY
  %loadMem_40bcda = load %struct.Memory*, %struct.Memory** %MEMORY
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5516 = getelementptr inbounds %struct.GPR, %struct.GPR* %5515, i32 0, i32 33
  %5517 = getelementptr inbounds %struct.Reg, %struct.Reg* %5516, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %5517 to i64*
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 5
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %5520 to i64*
  %5521 = load i64, i64* %RCX.i1030
  %5522 = load i64, i64* %PC.i1029
  %5523 = add i64 %5522, 7
  store i64 %5523, i64* %PC.i1029
  %5524 = trunc i64 %5521 to i32
  %5525 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5526 = xor i32 %5525, %5524
  %5527 = zext i32 %5526 to i64
  store i64 %5527, i64* %RCX.i1030, align 8
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5528, align 1
  %5529 = and i32 %5526, 255
  %5530 = call i32 @llvm.ctpop.i32(i32 %5529)
  %5531 = trunc i32 %5530 to i8
  %5532 = and i8 %5531, 1
  %5533 = xor i8 %5532, 1
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5533, i8* %5534, align 1
  %5535 = icmp eq i32 %5526, 0
  %5536 = zext i1 %5535 to i8
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5536, i8* %5537, align 1
  %5538 = lshr i32 %5526, 31
  %5539 = trunc i32 %5538 to i8
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5539, i8* %5540, align 1
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5541, align 1
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5542, align 1
  store %struct.Memory* %loadMem_40bcda, %struct.Memory** %MEMORY
  %loadMem_40bce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5544 = getelementptr inbounds %struct.GPR, %struct.GPR* %5543, i32 0, i32 33
  %5545 = getelementptr inbounds %struct.Reg, %struct.Reg* %5544, i32 0, i32 0
  %PC.i1027 = bitcast %union.anon* %5545 to i64*
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 5
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %ECX.i1028 = bitcast %union.anon* %5548 to i32*
  %5549 = load i32, i32* %ECX.i1028
  %5550 = zext i32 %5549 to i64
  %5551 = load i64, i64* %PC.i1027
  %5552 = add i64 %5551, 7
  store i64 %5552, i64* %PC.i1027
  store i32 %5549, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bce1, %struct.Memory** %MEMORY
  %loadMem_40bce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 33
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %5555 to i64*
  %5556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5557 = getelementptr inbounds %struct.GPR, %struct.GPR* %5556, i32 0, i32 5
  %5558 = getelementptr inbounds %struct.Reg, %struct.Reg* %5557, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %5558 to i64*
  %5559 = load i64, i64* %PC.i1025
  %5560 = add i64 %5559, 7
  store i64 %5560, i64* %PC.i1025
  %5561 = load i32, i32* bitcast (%G_0x62dab8_type* @G_0x62dab8 to i32*)
  %5562 = zext i32 %5561 to i64
  store i64 %5562, i64* %RCX.i1026, align 8
  store %struct.Memory* %loadMem_40bce8, %struct.Memory** %MEMORY
  %loadMem_40bcef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5564 = getelementptr inbounds %struct.GPR, %struct.GPR* %5563, i32 0, i32 33
  %5565 = getelementptr inbounds %struct.Reg, %struct.Reg* %5564, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %5565 to i64*
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 7
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %RDX.i1024 = bitcast %union.anon* %5568 to i64*
  %5569 = load i64, i64* %PC.i1023
  %5570 = add i64 %5569, 7
  store i64 %5570, i64* %PC.i1023
  %5571 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %5572 = zext i32 %5571 to i64
  store i64 %5572, i64* %RDX.i1024, align 8
  store %struct.Memory* %loadMem_40bcef, %struct.Memory** %MEMORY
  %loadMem_40bcf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5574 = getelementptr inbounds %struct.GPR, %struct.GPR* %5573, i32 0, i32 33
  %5575 = getelementptr inbounds %struct.Reg, %struct.Reg* %5574, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %5575 to i64*
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 5
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %ECX.i1021 = bitcast %union.anon* %5578 to i32*
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5580 = getelementptr inbounds %struct.GPR, %struct.GPR* %5579, i32 0, i32 7
  %5581 = getelementptr inbounds %struct.Reg, %struct.Reg* %5580, i32 0, i32 0
  %RDX.i1022 = bitcast %union.anon* %5581 to i64*
  %5582 = load i64, i64* %RDX.i1022
  %5583 = load i32, i32* %ECX.i1021
  %5584 = zext i32 %5583 to i64
  %5585 = load i64, i64* %PC.i1020
  %5586 = add i64 %5585, 2
  store i64 %5586, i64* %PC.i1020
  %5587 = trunc i64 %5582 to i32
  %5588 = sub i32 %5587, %5583
  %5589 = zext i32 %5588 to i64
  store i64 %5589, i64* %RDX.i1022, align 8
  %5590 = icmp ult i32 %5587, %5583
  %5591 = zext i1 %5590 to i8
  %5592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5591, i8* %5592, align 1
  %5593 = and i32 %5588, 255
  %5594 = call i32 @llvm.ctpop.i32(i32 %5593)
  %5595 = trunc i32 %5594 to i8
  %5596 = and i8 %5595, 1
  %5597 = xor i8 %5596, 1
  %5598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5597, i8* %5598, align 1
  %5599 = xor i64 %5584, %5582
  %5600 = trunc i64 %5599 to i32
  %5601 = xor i32 %5600, %5588
  %5602 = lshr i32 %5601, 4
  %5603 = trunc i32 %5602 to i8
  %5604 = and i8 %5603, 1
  %5605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5604, i8* %5605, align 1
  %5606 = icmp eq i32 %5588, 0
  %5607 = zext i1 %5606 to i8
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5607, i8* %5608, align 1
  %5609 = lshr i32 %5588, 31
  %5610 = trunc i32 %5609 to i8
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5610, i8* %5611, align 1
  %5612 = lshr i32 %5587, 31
  %5613 = lshr i32 %5583, 31
  %5614 = xor i32 %5613, %5612
  %5615 = xor i32 %5609, %5612
  %5616 = add i32 %5615, %5614
  %5617 = icmp eq i32 %5616, 2
  %5618 = zext i1 %5617 to i8
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5618, i8* %5619, align 1
  store %struct.Memory* %loadMem_40bcf6, %struct.Memory** %MEMORY
  %loadMem_40bcf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 33
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %5622 to i64*
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 7
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %EDX.i1019 = bitcast %union.anon* %5625 to i32*
  %5626 = load i32, i32* %EDX.i1019
  %5627 = zext i32 %5626 to i64
  %5628 = load i64, i64* %PC.i1018
  %5629 = add i64 %5628, 7
  store i64 %5629, i64* %PC.i1018
  store i32 %5626, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40bcf8, %struct.Memory** %MEMORY
  %loadMem_40bcff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 33
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %5632 to i64*
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 1
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %5635 to i64*
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 15
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %5638 to i64*
  %5639 = load i64, i64* %RBP.i1017
  %5640 = sub i64 %5639, 24
  %5641 = load i64, i64* %PC.i1015
  %5642 = add i64 %5641, 4
  store i64 %5642, i64* %PC.i1015
  %5643 = inttoptr i64 %5640 to i32*
  %5644 = load i32, i32* %5643
  %5645 = sext i32 %5644 to i64
  store i64 %5645, i64* %RAX.i1016, align 8
  store %struct.Memory* %loadMem_40bcff, %struct.Memory** %MEMORY
  %loadMem_40bd03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 33
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %5648 to i64*
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5650 = getelementptr inbounds %struct.GPR, %struct.GPR* %5649, i32 0, i32 1
  %5651 = getelementptr inbounds %struct.Reg, %struct.Reg* %5650, i32 0, i32 0
  %RAX.i1014 = bitcast %union.anon* %5651 to i64*
  %5652 = load i64, i64* %RAX.i1014
  %5653 = mul i64 %5652, 4
  %5654 = add i64 %5653, 8807744
  %5655 = load i64, i64* %PC.i1013
  %5656 = add i64 %5655, 11
  store i64 %5656, i64* %PC.i1013
  %5657 = inttoptr i64 %5654 to i32*
  store i32 1, i32* %5657
  store %struct.Memory* %loadMem_40bd03, %struct.Memory** %MEMORY
  %loadMem_40bd0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 33
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %5660 to i64*
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5662 = getelementptr inbounds %struct.GPR, %struct.GPR* %5661, i32 0, i32 1
  %5663 = getelementptr inbounds %struct.Reg, %struct.Reg* %5662, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %5663 to i64*
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5665 = getelementptr inbounds %struct.GPR, %struct.GPR* %5664, i32 0, i32 15
  %5666 = getelementptr inbounds %struct.Reg, %struct.Reg* %5665, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %5666 to i64*
  %5667 = load i64, i64* %RBP.i1012
  %5668 = sub i64 %5667, 20
  %5669 = load i64, i64* %PC.i1010
  %5670 = add i64 %5669, 4
  store i64 %5670, i64* %PC.i1010
  %5671 = inttoptr i64 %5668 to i32*
  %5672 = load i32, i32* %5671
  %5673 = sext i32 %5672 to i64
  store i64 %5673, i64* %RAX.i1011, align 8
  store %struct.Memory* %loadMem_40bd0e, %struct.Memory** %MEMORY
  %loadMem_40bd12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5675 = getelementptr inbounds %struct.GPR, %struct.GPR* %5674, i32 0, i32 33
  %5676 = getelementptr inbounds %struct.Reg, %struct.Reg* %5675, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %5676 to i64*
  %5677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5678 = getelementptr inbounds %struct.GPR, %struct.GPR* %5677, i32 0, i32 1
  %5679 = getelementptr inbounds %struct.Reg, %struct.Reg* %5678, i32 0, i32 0
  %RAX.i1009 = bitcast %union.anon* %5679 to i64*
  %5680 = load i64, i64* %RAX.i1009
  %5681 = mul i64 %5680, 4
  %5682 = add i64 %5681, 8807744
  %5683 = load i64, i64* %PC.i1008
  %5684 = add i64 %5683, 11
  store i64 %5684, i64* %PC.i1008
  %5685 = inttoptr i64 %5682 to i32*
  store i32 13, i32* %5685
  store %struct.Memory* %loadMem_40bd12, %struct.Memory** %MEMORY
  %loadMem1_40bd1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5687 = getelementptr inbounds %struct.GPR, %struct.GPR* %5686, i32 0, i32 33
  %5688 = getelementptr inbounds %struct.Reg, %struct.Reg* %5687, i32 0, i32 0
  %PC.i1007 = bitcast %union.anon* %5688 to i64*
  %5689 = load i64, i64* %PC.i1007
  %5690 = add i64 %5689, -38957
  %5691 = load i64, i64* %PC.i1007
  %5692 = add i64 %5691, 5
  %5693 = load i64, i64* %PC.i1007
  %5694 = add i64 %5693, 5
  store i64 %5694, i64* %PC.i1007
  %5695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5696 = load i64, i64* %5695, align 8
  %5697 = add i64 %5696, -8
  %5698 = inttoptr i64 %5697 to i64*
  store i64 %5692, i64* %5698
  store i64 %5697, i64* %5695, align 8
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5690, i64* %5699, align 8
  store %struct.Memory* %loadMem1_40bd1d, %struct.Memory** %MEMORY
  %loadMem2_40bd1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40bd1d = load i64, i64* %3
  %call2_40bd1d = call %struct.Memory* @sub_4024f0.addHolding(%struct.State* %0, i64 %loadPC_40bd1d, %struct.Memory* %loadMem2_40bd1d)
  store %struct.Memory* %call2_40bd1d, %struct.Memory** %MEMORY
  %loadMem_40bd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5701 = getelementptr inbounds %struct.GPR, %struct.GPR* %5700, i32 0, i32 33
  %5702 = getelementptr inbounds %struct.Reg, %struct.Reg* %5701, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %5702 to i64*
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5704 = getelementptr inbounds %struct.GPR, %struct.GPR* %5703, i32 0, i32 1
  %5705 = getelementptr inbounds %struct.Reg, %struct.Reg* %5704, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %5705 to i64*
  %5706 = load i64, i64* %PC.i1005
  %5707 = add i64 %5706, 10
  store i64 %5707, i64* %PC.i1005
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1006, align 8
  store %struct.Memory* %loadMem_40bd22, %struct.Memory** %MEMORY
  %loadMem_40bd2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5709 = getelementptr inbounds %struct.GPR, %struct.GPR* %5708, i32 0, i32 33
  %5710 = getelementptr inbounds %struct.Reg, %struct.Reg* %5709, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %5710 to i64*
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5712 = getelementptr inbounds %struct.GPR, %struct.GPR* %5711, i32 0, i32 5
  %5713 = getelementptr inbounds %struct.Reg, %struct.Reg* %5712, i32 0, i32 0
  %RCX.i1004 = bitcast %union.anon* %5713 to i64*
  %5714 = load i64, i64* %PC.i1003
  %5715 = add i64 %5714, 7
  store i64 %5715, i64* %PC.i1003
  %5716 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %5717 = zext i32 %5716 to i64
  store i64 %5717, i64* %RCX.i1004, align 8
  store %struct.Memory* %loadMem_40bd2c, %struct.Memory** %MEMORY
  %loadMem_40bd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 33
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %PC.i1001 = bitcast %union.anon* %5720 to i64*
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 5
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %RCX.i1002 = bitcast %union.anon* %5723 to i64*
  %5724 = load i64, i64* %RCX.i1002
  %5725 = load i64, i64* %PC.i1001
  %5726 = add i64 %5725, 3
  store i64 %5726, i64* %PC.i1001
  %5727 = trunc i64 %5724 to i32
  %5728 = add i32 -1, %5727
  %5729 = zext i32 %5728 to i64
  store i64 %5729, i64* %RCX.i1002, align 8
  %5730 = icmp ult i32 %5728, %5727
  %5731 = icmp ult i32 %5728, -1
  %5732 = or i1 %5730, %5731
  %5733 = zext i1 %5732 to i8
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5733, i8* %5734, align 1
  %5735 = and i32 %5728, 255
  %5736 = call i32 @llvm.ctpop.i32(i32 %5735)
  %5737 = trunc i32 %5736 to i8
  %5738 = and i8 %5737, 1
  %5739 = xor i8 %5738, 1
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5739, i8* %5740, align 1
  %5741 = xor i64 -1, %5724
  %5742 = trunc i64 %5741 to i32
  %5743 = xor i32 %5742, %5728
  %5744 = lshr i32 %5743, 4
  %5745 = trunc i32 %5744 to i8
  %5746 = and i8 %5745, 1
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5746, i8* %5747, align 1
  %5748 = icmp eq i32 %5728, 0
  %5749 = zext i1 %5748 to i8
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5749, i8* %5750, align 1
  %5751 = lshr i32 %5728, 31
  %5752 = trunc i32 %5751 to i8
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5752, i8* %5753, align 1
  %5754 = lshr i32 %5727, 31
  %5755 = xor i32 %5751, %5754
  %5756 = xor i32 %5751, 1
  %5757 = add i32 %5755, %5756
  %5758 = icmp eq i32 %5757, 2
  %5759 = zext i1 %5758 to i8
  %5760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5759, i8* %5760, align 1
  store %struct.Memory* %loadMem_40bd33, %struct.Memory** %MEMORY
  %loadMem_40bd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 33
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %5763 to i64*
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 5
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %ECX.i1000 = bitcast %union.anon* %5766 to i32*
  %5767 = load i32, i32* %ECX.i1000
  %5768 = zext i32 %5767 to i64
  %5769 = load i64, i64* %PC.i999
  %5770 = add i64 %5769, 7
  store i64 %5770, i64* %PC.i999
  store i32 %5767, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40bd36, %struct.Memory** %MEMORY
  %loadMem_40bd3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5772 = getelementptr inbounds %struct.GPR, %struct.GPR* %5771, i32 0, i32 33
  %5773 = getelementptr inbounds %struct.Reg, %struct.Reg* %5772, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %5773 to i64*
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 5
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %5776 to i64*
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 15
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %5779 to i64*
  %5780 = load i64, i64* %RBP.i998
  %5781 = sub i64 %5780, 24
  %5782 = load i64, i64* %PC.i996
  %5783 = add i64 %5782, 3
  store i64 %5783, i64* %PC.i996
  %5784 = inttoptr i64 %5781 to i32*
  %5785 = load i32, i32* %5784
  %5786 = zext i32 %5785 to i64
  store i64 %5786, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_40bd3d, %struct.Memory** %MEMORY
  %loadMem_40bd40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5788 = getelementptr inbounds %struct.GPR, %struct.GPR* %5787, i32 0, i32 33
  %5789 = getelementptr inbounds %struct.Reg, %struct.Reg* %5788, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %5789 to i64*
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5791 = getelementptr inbounds %struct.GPR, %struct.GPR* %5790, i32 0, i32 5
  %5792 = getelementptr inbounds %struct.Reg, %struct.Reg* %5791, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %5792 to i64*
  %5793 = load i64, i64* %RCX.i995
  %5794 = load i64, i64* %PC.i994
  %5795 = add i64 %5794, 3
  store i64 %5795, i64* %PC.i994
  %5796 = trunc i64 %5793 to i32
  %5797 = sub i32 %5796, 12
  %5798 = zext i32 %5797 to i64
  store i64 %5798, i64* %RCX.i995, align 8
  %5799 = icmp ult i32 %5796, 12
  %5800 = zext i1 %5799 to i8
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5800, i8* %5801, align 1
  %5802 = and i32 %5797, 255
  %5803 = call i32 @llvm.ctpop.i32(i32 %5802)
  %5804 = trunc i32 %5803 to i8
  %5805 = and i8 %5804, 1
  %5806 = xor i8 %5805, 1
  %5807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5806, i8* %5807, align 1
  %5808 = xor i64 12, %5793
  %5809 = trunc i64 %5808 to i32
  %5810 = xor i32 %5809, %5797
  %5811 = lshr i32 %5810, 4
  %5812 = trunc i32 %5811 to i8
  %5813 = and i8 %5812, 1
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5813, i8* %5814, align 1
  %5815 = icmp eq i32 %5797, 0
  %5816 = zext i1 %5815 to i8
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5816, i8* %5817, align 1
  %5818 = lshr i32 %5797, 31
  %5819 = trunc i32 %5818 to i8
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5819, i8* %5820, align 1
  %5821 = lshr i32 %5796, 31
  %5822 = xor i32 %5818, %5821
  %5823 = add i32 %5822, %5821
  %5824 = icmp eq i32 %5823, 2
  %5825 = zext i1 %5824 to i8
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5825, i8* %5826, align 1
  store %struct.Memory* %loadMem_40bd40, %struct.Memory** %MEMORY
  %loadMem_40bd43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5828 = getelementptr inbounds %struct.GPR, %struct.GPR* %5827, i32 0, i32 33
  %5829 = getelementptr inbounds %struct.Reg, %struct.Reg* %5828, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %5829 to i64*
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5831 = getelementptr inbounds %struct.GPR, %struct.GPR* %5830, i32 0, i32 5
  %5832 = getelementptr inbounds %struct.Reg, %struct.Reg* %5831, i32 0, i32 0
  %ECX.i992 = bitcast %union.anon* %5832 to i32*
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 17
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %R8.i993 = bitcast %union.anon* %5835 to i64*
  %5836 = load i32, i32* %ECX.i992
  %5837 = zext i32 %5836 to i64
  %5838 = load i64, i64* %PC.i991
  %5839 = add i64 %5838, 3
  store i64 %5839, i64* %PC.i991
  %5840 = shl i64 %5837, 32
  %5841 = ashr exact i64 %5840, 32
  store i64 %5841, i64* %R8.i993, align 8
  store %struct.Memory* %loadMem_40bd43, %struct.Memory** %MEMORY
  %loadMem_40bd46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 33
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %5844 to i64*
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5846 = getelementptr inbounds %struct.GPR, %struct.GPR* %5845, i32 0, i32 17
  %5847 = getelementptr inbounds %struct.Reg, %struct.Reg* %5846, i32 0, i32 0
  %R8.i990 = bitcast %union.anon* %5847 to i64*
  %5848 = load i64, i64* %R8.i990
  %5849 = mul i64 %5848, 4
  %5850 = add i64 %5849, 8807744
  %5851 = load i64, i64* %PC.i989
  %5852 = add i64 %5851, 12
  store i64 %5852, i64* %PC.i989
  %5853 = inttoptr i64 %5850 to i32*
  store i32 13, i32* %5853
  store %struct.Memory* %loadMem_40bd46, %struct.Memory** %MEMORY
  %loadMem_40bd52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5855 = getelementptr inbounds %struct.GPR, %struct.GPR* %5854, i32 0, i32 33
  %5856 = getelementptr inbounds %struct.Reg, %struct.Reg* %5855, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %5856 to i64*
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 15
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %RBP.i987 = bitcast %union.anon* %5859 to i64*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 17
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %R8.i988 = bitcast %union.anon* %5862 to i64*
  %5863 = load i64, i64* %RBP.i987
  %5864 = sub i64 %5863, 24
  %5865 = load i64, i64* %PC.i986
  %5866 = add i64 %5865, 4
  store i64 %5866, i64* %PC.i986
  %5867 = inttoptr i64 %5864 to i32*
  %5868 = load i32, i32* %5867
  %5869 = sext i32 %5868 to i64
  store i64 %5869, i64* %R8.i988, align 8
  store %struct.Memory* %loadMem_40bd52, %struct.Memory** %MEMORY
  %loadMem_40bd56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5871 = getelementptr inbounds %struct.GPR, %struct.GPR* %5870, i32 0, i32 33
  %5872 = getelementptr inbounds %struct.Reg, %struct.Reg* %5871, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %5872 to i64*
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5874 = getelementptr inbounds %struct.GPR, %struct.GPR* %5873, i32 0, i32 5
  %5875 = getelementptr inbounds %struct.Reg, %struct.Reg* %5874, i32 0, i32 0
  %RCX.i984 = bitcast %union.anon* %5875 to i64*
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5877 = getelementptr inbounds %struct.GPR, %struct.GPR* %5876, i32 0, i32 17
  %5878 = getelementptr inbounds %struct.Reg, %struct.Reg* %5877, i32 0, i32 0
  %R8.i985 = bitcast %union.anon* %5878 to i64*
  %5879 = load i64, i64* %R8.i985
  %5880 = mul i64 %5879, 4
  %5881 = add i64 %5880, 8922032
  %5882 = load i64, i64* %PC.i983
  %5883 = add i64 %5882, 8
  store i64 %5883, i64* %PC.i983
  %5884 = inttoptr i64 %5881 to i32*
  %5885 = load i32, i32* %5884
  %5886 = zext i32 %5885 to i64
  store i64 %5886, i64* %RCX.i984, align 8
  store %struct.Memory* %loadMem_40bd56, %struct.Memory** %MEMORY
  %loadMem_40bd5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5888 = getelementptr inbounds %struct.GPR, %struct.GPR* %5887, i32 0, i32 33
  %5889 = getelementptr inbounds %struct.Reg, %struct.Reg* %5888, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %5889 to i64*
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5891 = getelementptr inbounds %struct.GPR, %struct.GPR* %5890, i32 0, i32 5
  %5892 = getelementptr inbounds %struct.Reg, %struct.Reg* %5891, i32 0, i32 0
  %RCX.i982 = bitcast %union.anon* %5892 to i64*
  %5893 = load i64, i64* %RCX.i982
  %5894 = load i64, i64* %PC.i981
  %5895 = add i64 %5894, 3
  store i64 %5895, i64* %PC.i981
  %5896 = trunc i64 %5893 to i32
  %5897 = add i32 1, %5896
  %5898 = zext i32 %5897 to i64
  store i64 %5898, i64* %RCX.i982, align 8
  %5899 = icmp ult i32 %5897, %5896
  %5900 = icmp ult i32 %5897, 1
  %5901 = or i1 %5899, %5900
  %5902 = zext i1 %5901 to i8
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5902, i8* %5903, align 1
  %5904 = and i32 %5897, 255
  %5905 = call i32 @llvm.ctpop.i32(i32 %5904)
  %5906 = trunc i32 %5905 to i8
  %5907 = and i8 %5906, 1
  %5908 = xor i8 %5907, 1
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5908, i8* %5909, align 1
  %5910 = xor i64 1, %5893
  %5911 = trunc i64 %5910 to i32
  %5912 = xor i32 %5911, %5897
  %5913 = lshr i32 %5912, 4
  %5914 = trunc i32 %5913 to i8
  %5915 = and i8 %5914, 1
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5915, i8* %5916, align 1
  %5917 = icmp eq i32 %5897, 0
  %5918 = zext i1 %5917 to i8
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5918, i8* %5919, align 1
  %5920 = lshr i32 %5897, 31
  %5921 = trunc i32 %5920 to i8
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5921, i8* %5922, align 1
  %5923 = lshr i32 %5896, 31
  %5924 = xor i32 %5920, %5923
  %5925 = add i32 %5924, %5920
  %5926 = icmp eq i32 %5925, 2
  %5927 = zext i1 %5926 to i8
  %5928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5927, i8* %5928, align 1
  store %struct.Memory* %loadMem_40bd5e, %struct.Memory** %MEMORY
  %loadMem_40bd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5930 = getelementptr inbounds %struct.GPR, %struct.GPR* %5929, i32 0, i32 33
  %5931 = getelementptr inbounds %struct.Reg, %struct.Reg* %5930, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %5931 to i64*
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 5
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %ECX.i979 = bitcast %union.anon* %5934 to i32*
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5936 = getelementptr inbounds %struct.GPR, %struct.GPR* %5935, i32 0, i32 17
  %5937 = getelementptr inbounds %struct.Reg, %struct.Reg* %5936, i32 0, i32 0
  %R8.i980 = bitcast %union.anon* %5937 to i64*
  %5938 = load i64, i64* %R8.i980
  %5939 = mul i64 %5938, 4
  %5940 = add i64 %5939, 8922032
  %5941 = load i32, i32* %ECX.i979
  %5942 = zext i32 %5941 to i64
  %5943 = load i64, i64* %PC.i978
  %5944 = add i64 %5943, 8
  store i64 %5944, i64* %PC.i978
  %5945 = inttoptr i64 %5940 to i32*
  store i32 %5941, i32* %5945
  store %struct.Memory* %loadMem_40bd61, %struct.Memory** %MEMORY
  %loadMem_40bd69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5947 = getelementptr inbounds %struct.GPR, %struct.GPR* %5946, i32 0, i32 33
  %5948 = getelementptr inbounds %struct.Reg, %struct.Reg* %5947, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %5948 to i64*
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5950 = getelementptr inbounds %struct.GPR, %struct.GPR* %5949, i32 0, i32 15
  %5951 = getelementptr inbounds %struct.Reg, %struct.Reg* %5950, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %5951 to i64*
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5953 = getelementptr inbounds %struct.GPR, %struct.GPR* %5952, i32 0, i32 17
  %5954 = getelementptr inbounds %struct.Reg, %struct.Reg* %5953, i32 0, i32 0
  %R8.i977 = bitcast %union.anon* %5954 to i64*
  %5955 = load i64, i64* %RBP.i976
  %5956 = sub i64 %5955, 20
  %5957 = load i64, i64* %PC.i975
  %5958 = add i64 %5957, 4
  store i64 %5958, i64* %PC.i975
  %5959 = inttoptr i64 %5956 to i32*
  %5960 = load i32, i32* %5959
  %5961 = sext i32 %5960 to i64
  store i64 %5961, i64* %R8.i977, align 8
  store %struct.Memory* %loadMem_40bd69, %struct.Memory** %MEMORY
  %loadMem_40bd6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5963 = getelementptr inbounds %struct.GPR, %struct.GPR* %5962, i32 0, i32 33
  %5964 = getelementptr inbounds %struct.Reg, %struct.Reg* %5963, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %5964 to i64*
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5966 = getelementptr inbounds %struct.GPR, %struct.GPR* %5965, i32 0, i32 5
  %5967 = getelementptr inbounds %struct.Reg, %struct.Reg* %5966, i32 0, i32 0
  %RCX.i973 = bitcast %union.anon* %5967 to i64*
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5969 = getelementptr inbounds %struct.GPR, %struct.GPR* %5968, i32 0, i32 17
  %5970 = getelementptr inbounds %struct.Reg, %struct.Reg* %5969, i32 0, i32 0
  %R8.i974 = bitcast %union.anon* %5970 to i64*
  %5971 = load i64, i64* %R8.i974
  %5972 = mul i64 %5971, 4
  %5973 = add i64 %5972, 8922032
  %5974 = load i64, i64* %PC.i972
  %5975 = add i64 %5974, 8
  store i64 %5975, i64* %PC.i972
  %5976 = inttoptr i64 %5973 to i32*
  %5977 = load i32, i32* %5976
  %5978 = zext i32 %5977 to i64
  store i64 %5978, i64* %RCX.i973, align 8
  store %struct.Memory* %loadMem_40bd6d, %struct.Memory** %MEMORY
  %loadMem_40bd75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 33
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %5981 to i64*
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 5
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %RCX.i971 = bitcast %union.anon* %5984 to i64*
  %5985 = load i64, i64* %RCX.i971
  %5986 = load i64, i64* %PC.i970
  %5987 = add i64 %5986, 3
  store i64 %5987, i64* %PC.i970
  %5988 = trunc i64 %5985 to i32
  %5989 = add i32 1, %5988
  %5990 = zext i32 %5989 to i64
  store i64 %5990, i64* %RCX.i971, align 8
  %5991 = icmp ult i32 %5989, %5988
  %5992 = icmp ult i32 %5989, 1
  %5993 = or i1 %5991, %5992
  %5994 = zext i1 %5993 to i8
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5994, i8* %5995, align 1
  %5996 = and i32 %5989, 255
  %5997 = call i32 @llvm.ctpop.i32(i32 %5996)
  %5998 = trunc i32 %5997 to i8
  %5999 = and i8 %5998, 1
  %6000 = xor i8 %5999, 1
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6000, i8* %6001, align 1
  %6002 = xor i64 1, %5985
  %6003 = trunc i64 %6002 to i32
  %6004 = xor i32 %6003, %5989
  %6005 = lshr i32 %6004, 4
  %6006 = trunc i32 %6005 to i8
  %6007 = and i8 %6006, 1
  %6008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6007, i8* %6008, align 1
  %6009 = icmp eq i32 %5989, 0
  %6010 = zext i1 %6009 to i8
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6010, i8* %6011, align 1
  %6012 = lshr i32 %5989, 31
  %6013 = trunc i32 %6012 to i8
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6013, i8* %6014, align 1
  %6015 = lshr i32 %5988, 31
  %6016 = xor i32 %6012, %6015
  %6017 = add i32 %6016, %6012
  %6018 = icmp eq i32 %6017, 2
  %6019 = zext i1 %6018 to i8
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6019, i8* %6020, align 1
  store %struct.Memory* %loadMem_40bd75, %struct.Memory** %MEMORY
  %loadMem_40bd78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6022 = getelementptr inbounds %struct.GPR, %struct.GPR* %6021, i32 0, i32 33
  %6023 = getelementptr inbounds %struct.Reg, %struct.Reg* %6022, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %6023 to i64*
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6025 = getelementptr inbounds %struct.GPR, %struct.GPR* %6024, i32 0, i32 5
  %6026 = getelementptr inbounds %struct.Reg, %struct.Reg* %6025, i32 0, i32 0
  %ECX.i968 = bitcast %union.anon* %6026 to i32*
  %6027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6028 = getelementptr inbounds %struct.GPR, %struct.GPR* %6027, i32 0, i32 17
  %6029 = getelementptr inbounds %struct.Reg, %struct.Reg* %6028, i32 0, i32 0
  %R8.i969 = bitcast %union.anon* %6029 to i64*
  %6030 = load i64, i64* %R8.i969
  %6031 = mul i64 %6030, 4
  %6032 = add i64 %6031, 8922032
  %6033 = load i32, i32* %ECX.i968
  %6034 = zext i32 %6033 to i64
  %6035 = load i64, i64* %PC.i967
  %6036 = add i64 %6035, 8
  store i64 %6036, i64* %PC.i967
  %6037 = inttoptr i64 %6032 to i32*
  store i32 %6033, i32* %6037
  store %struct.Memory* %loadMem_40bd78, %struct.Memory** %MEMORY
  %loadMem_40bd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6039 = getelementptr inbounds %struct.GPR, %struct.GPR* %6038, i32 0, i32 33
  %6040 = getelementptr inbounds %struct.Reg, %struct.Reg* %6039, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %6040 to i64*
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6042 = getelementptr inbounds %struct.GPR, %struct.GPR* %6041, i32 0, i32 5
  %6043 = getelementptr inbounds %struct.Reg, %struct.Reg* %6042, i32 0, i32 0
  %RCX.i965 = bitcast %union.anon* %6043 to i64*
  %6044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6045 = getelementptr inbounds %struct.GPR, %struct.GPR* %6044, i32 0, i32 15
  %6046 = getelementptr inbounds %struct.Reg, %struct.Reg* %6045, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %6046 to i64*
  %6047 = load i64, i64* %RBP.i966
  %6048 = sub i64 %6047, 24
  %6049 = load i64, i64* %PC.i964
  %6050 = add i64 %6049, 3
  store i64 %6050, i64* %PC.i964
  %6051 = inttoptr i64 %6048 to i32*
  %6052 = load i32, i32* %6051
  %6053 = zext i32 %6052 to i64
  store i64 %6053, i64* %RCX.i965, align 8
  store %struct.Memory* %loadMem_40bd80, %struct.Memory** %MEMORY
  %loadMem_40bd83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 33
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %6056 to i64*
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6058 = getelementptr inbounds %struct.GPR, %struct.GPR* %6057, i32 0, i32 5
  %6059 = getelementptr inbounds %struct.Reg, %struct.Reg* %6058, i32 0, i32 0
  %RCX.i963 = bitcast %union.anon* %6059 to i64*
  %6060 = load i64, i64* %RCX.i963
  %6061 = load i64, i64* %PC.i962
  %6062 = add i64 %6061, 3
  store i64 %6062, i64* %PC.i962
  %6063 = trunc i64 %6060 to i32
  %6064 = sub i32 %6063, 12
  %6065 = zext i32 %6064 to i64
  store i64 %6065, i64* %RCX.i963, align 8
  %6066 = icmp ult i32 %6063, 12
  %6067 = zext i1 %6066 to i8
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6067, i8* %6068, align 1
  %6069 = and i32 %6064, 255
  %6070 = call i32 @llvm.ctpop.i32(i32 %6069)
  %6071 = trunc i32 %6070 to i8
  %6072 = and i8 %6071, 1
  %6073 = xor i8 %6072, 1
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6073, i8* %6074, align 1
  %6075 = xor i64 12, %6060
  %6076 = trunc i64 %6075 to i32
  %6077 = xor i32 %6076, %6064
  %6078 = lshr i32 %6077, 4
  %6079 = trunc i32 %6078 to i8
  %6080 = and i8 %6079, 1
  %6081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6080, i8* %6081, align 1
  %6082 = icmp eq i32 %6064, 0
  %6083 = zext i1 %6082 to i8
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6083, i8* %6084, align 1
  %6085 = lshr i32 %6064, 31
  %6086 = trunc i32 %6085 to i8
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6086, i8* %6087, align 1
  %6088 = lshr i32 %6063, 31
  %6089 = xor i32 %6085, %6088
  %6090 = add i32 %6089, %6088
  %6091 = icmp eq i32 %6090, 2
  %6092 = zext i1 %6091 to i8
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6092, i8* %6093, align 1
  store %struct.Memory* %loadMem_40bd83, %struct.Memory** %MEMORY
  %loadMem_40bd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6095 = getelementptr inbounds %struct.GPR, %struct.GPR* %6094, i32 0, i32 33
  %6096 = getelementptr inbounds %struct.Reg, %struct.Reg* %6095, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %6096 to i64*
  %6097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6098 = getelementptr inbounds %struct.GPR, %struct.GPR* %6097, i32 0, i32 5
  %6099 = getelementptr inbounds %struct.Reg, %struct.Reg* %6098, i32 0, i32 0
  %ECX.i960 = bitcast %union.anon* %6099 to i32*
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6101 = getelementptr inbounds %struct.GPR, %struct.GPR* %6100, i32 0, i32 17
  %6102 = getelementptr inbounds %struct.Reg, %struct.Reg* %6101, i32 0, i32 0
  %R8.i961 = bitcast %union.anon* %6102 to i64*
  %6103 = load i32, i32* %ECX.i960
  %6104 = zext i32 %6103 to i64
  %6105 = load i64, i64* %PC.i959
  %6106 = add i64 %6105, 3
  store i64 %6106, i64* %PC.i959
  %6107 = shl i64 %6104, 32
  %6108 = ashr exact i64 %6107, 32
  store i64 %6108, i64* %R8.i961, align 8
  store %struct.Memory* %loadMem_40bd86, %struct.Memory** %MEMORY
  %loadMem_40bd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6110 = getelementptr inbounds %struct.GPR, %struct.GPR* %6109, i32 0, i32 33
  %6111 = getelementptr inbounds %struct.Reg, %struct.Reg* %6110, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %6111 to i64*
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 5
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %RCX.i957 = bitcast %union.anon* %6114 to i64*
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6116 = getelementptr inbounds %struct.GPR, %struct.GPR* %6115, i32 0, i32 17
  %6117 = getelementptr inbounds %struct.Reg, %struct.Reg* %6116, i32 0, i32 0
  %R8.i958 = bitcast %union.anon* %6117 to i64*
  %6118 = load i64, i64* %R8.i958
  %6119 = mul i64 %6118, 4
  %6120 = add i64 %6119, 8922032
  %6121 = load i64, i64* %PC.i956
  %6122 = add i64 %6121, 8
  store i64 %6122, i64* %PC.i956
  %6123 = inttoptr i64 %6120 to i32*
  %6124 = load i32, i32* %6123
  %6125 = zext i32 %6124 to i64
  store i64 %6125, i64* %RCX.i957, align 8
  store %struct.Memory* %loadMem_40bd89, %struct.Memory** %MEMORY
  %loadMem_40bd91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6127 = getelementptr inbounds %struct.GPR, %struct.GPR* %6126, i32 0, i32 33
  %6128 = getelementptr inbounds %struct.Reg, %struct.Reg* %6127, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %6128 to i64*
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6130 = getelementptr inbounds %struct.GPR, %struct.GPR* %6129, i32 0, i32 5
  %6131 = getelementptr inbounds %struct.Reg, %struct.Reg* %6130, i32 0, i32 0
  %RCX.i955 = bitcast %union.anon* %6131 to i64*
  %6132 = load i64, i64* %RCX.i955
  %6133 = load i64, i64* %PC.i954
  %6134 = add i64 %6133, 3
  store i64 %6134, i64* %PC.i954
  %6135 = trunc i64 %6132 to i32
  %6136 = add i32 1, %6135
  %6137 = zext i32 %6136 to i64
  store i64 %6137, i64* %RCX.i955, align 8
  %6138 = icmp ult i32 %6136, %6135
  %6139 = icmp ult i32 %6136, 1
  %6140 = or i1 %6138, %6139
  %6141 = zext i1 %6140 to i8
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6141, i8* %6142, align 1
  %6143 = and i32 %6136, 255
  %6144 = call i32 @llvm.ctpop.i32(i32 %6143)
  %6145 = trunc i32 %6144 to i8
  %6146 = and i8 %6145, 1
  %6147 = xor i8 %6146, 1
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6147, i8* %6148, align 1
  %6149 = xor i64 1, %6132
  %6150 = trunc i64 %6149 to i32
  %6151 = xor i32 %6150, %6136
  %6152 = lshr i32 %6151, 4
  %6153 = trunc i32 %6152 to i8
  %6154 = and i8 %6153, 1
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6154, i8* %6155, align 1
  %6156 = icmp eq i32 %6136, 0
  %6157 = zext i1 %6156 to i8
  %6158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6157, i8* %6158, align 1
  %6159 = lshr i32 %6136, 31
  %6160 = trunc i32 %6159 to i8
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6160, i8* %6161, align 1
  %6162 = lshr i32 %6135, 31
  %6163 = xor i32 %6159, %6162
  %6164 = add i32 %6163, %6159
  %6165 = icmp eq i32 %6164, 2
  %6166 = zext i1 %6165 to i8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6166, i8* %6167, align 1
  store %struct.Memory* %loadMem_40bd91, %struct.Memory** %MEMORY
  %loadMem_40bd94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 33
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 5
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %ECX.i952 = bitcast %union.anon* %6173 to i32*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 17
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %R8.i953 = bitcast %union.anon* %6176 to i64*
  %6177 = load i64, i64* %R8.i953
  %6178 = mul i64 %6177, 4
  %6179 = add i64 %6178, 8922032
  %6180 = load i32, i32* %ECX.i952
  %6181 = zext i32 %6180 to i64
  %6182 = load i64, i64* %PC.i951
  %6183 = add i64 %6182, 8
  store i64 %6183, i64* %PC.i951
  %6184 = inttoptr i64 %6179 to i32*
  store i32 %6180, i32* %6184
  store %struct.Memory* %loadMem_40bd94, %struct.Memory** %MEMORY
  %loadMem_40bd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6186 = getelementptr inbounds %struct.GPR, %struct.GPR* %6185, i32 0, i32 33
  %6187 = getelementptr inbounds %struct.Reg, %struct.Reg* %6186, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %6187 to i64*
  %6188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6189 = getelementptr inbounds %struct.GPR, %struct.GPR* %6188, i32 0, i32 5
  %6190 = getelementptr inbounds %struct.Reg, %struct.Reg* %6189, i32 0, i32 0
  %RCX.i950 = bitcast %union.anon* %6190 to i64*
  %6191 = load i64, i64* %PC.i949
  %6192 = add i64 %6191, 7
  store i64 %6192, i64* %PC.i949
  %6193 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %6194 = zext i32 %6193 to i64
  store i64 %6194, i64* %RCX.i950, align 8
  store %struct.Memory* %loadMem_40bd9c, %struct.Memory** %MEMORY
  %loadMem_40bda3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6196 = getelementptr inbounds %struct.GPR, %struct.GPR* %6195, i32 0, i32 33
  %6197 = getelementptr inbounds %struct.Reg, %struct.Reg* %6196, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %6197 to i64*
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 5
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %RCX.i948 = bitcast %union.anon* %6200 to i64*
  %6201 = load i64, i64* %RCX.i948
  %6202 = load i64, i64* %PC.i947
  %6203 = add i64 %6202, 3
  store i64 %6203, i64* %PC.i947
  %6204 = xor i64 1, %6201
  %6205 = trunc i64 %6204 to i32
  %6206 = and i64 %6204, 4294967295
  store i64 %6206, i64* %RCX.i948, align 8
  %6207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6207, align 1
  %6208 = and i32 %6205, 255
  %6209 = call i32 @llvm.ctpop.i32(i32 %6208)
  %6210 = trunc i32 %6209 to i8
  %6211 = and i8 %6210, 1
  %6212 = xor i8 %6211, 1
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6212, i8* %6213, align 1
  %6214 = icmp eq i32 %6205, 0
  %6215 = zext i1 %6214 to i8
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6215, i8* %6216, align 1
  %6217 = lshr i32 %6205, 31
  %6218 = trunc i32 %6217 to i8
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6218, i8* %6219, align 1
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6220, align 1
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6221, align 1
  store %struct.Memory* %loadMem_40bda3, %struct.Memory** %MEMORY
  %loadMem_40bda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6223 = getelementptr inbounds %struct.GPR, %struct.GPR* %6222, i32 0, i32 33
  %6224 = getelementptr inbounds %struct.Reg, %struct.Reg* %6223, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %6224 to i64*
  %6225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6226 = getelementptr inbounds %struct.GPR, %struct.GPR* %6225, i32 0, i32 5
  %6227 = getelementptr inbounds %struct.Reg, %struct.Reg* %6226, i32 0, i32 0
  %ECX.i946 = bitcast %union.anon* %6227 to i32*
  %6228 = load i32, i32* %ECX.i946
  %6229 = zext i32 %6228 to i64
  %6230 = load i64, i64* %PC.i945
  %6231 = add i64 %6230, 7
  store i64 %6231, i64* %PC.i945
  store i32 %6228, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40bda6, %struct.Memory** %MEMORY
  %loadMem_40bdad = load %struct.Memory*, %struct.Memory** %MEMORY
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6233 = getelementptr inbounds %struct.GPR, %struct.GPR* %6232, i32 0, i32 33
  %6234 = getelementptr inbounds %struct.Reg, %struct.Reg* %6233, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %6234 to i64*
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6236 = getelementptr inbounds %struct.GPR, %struct.GPR* %6235, i32 0, i32 5
  %6237 = getelementptr inbounds %struct.Reg, %struct.Reg* %6236, i32 0, i32 0
  %RCX.i943 = bitcast %union.anon* %6237 to i64*
  %6238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6239 = getelementptr inbounds %struct.GPR, %struct.GPR* %6238, i32 0, i32 15
  %6240 = getelementptr inbounds %struct.Reg, %struct.Reg* %6239, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %6240 to i64*
  %6241 = load i64, i64* %RBP.i944
  %6242 = sub i64 %6241, 24
  %6243 = load i64, i64* %PC.i942
  %6244 = add i64 %6243, 3
  store i64 %6244, i64* %PC.i942
  %6245 = inttoptr i64 %6242 to i32*
  %6246 = load i32, i32* %6245
  %6247 = zext i32 %6246 to i64
  store i64 %6247, i64* %RCX.i943, align 8
  store %struct.Memory* %loadMem_40bdad, %struct.Memory** %MEMORY
  %loadMem_40bdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6249 = getelementptr inbounds %struct.GPR, %struct.GPR* %6248, i32 0, i32 33
  %6250 = getelementptr inbounds %struct.Reg, %struct.Reg* %6249, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %6250 to i64*
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6252 = getelementptr inbounds %struct.GPR, %struct.GPR* %6251, i32 0, i32 5
  %6253 = getelementptr inbounds %struct.Reg, %struct.Reg* %6252, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %6253 to i64*
  %6254 = load i64, i64* %RCX.i941
  %6255 = load i64, i64* %PC.i940
  %6256 = add i64 %6255, 3
  store i64 %6256, i64* %PC.i940
  %6257 = trunc i64 %6254 to i32
  %6258 = sub i32 %6257, 12
  %6259 = zext i32 %6258 to i64
  store i64 %6259, i64* %RCX.i941, align 8
  %6260 = icmp ult i32 %6257, 12
  %6261 = zext i1 %6260 to i8
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6261, i8* %6262, align 1
  %6263 = and i32 %6258, 255
  %6264 = call i32 @llvm.ctpop.i32(i32 %6263)
  %6265 = trunc i32 %6264 to i8
  %6266 = and i8 %6265, 1
  %6267 = xor i8 %6266, 1
  %6268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6267, i8* %6268, align 1
  %6269 = xor i64 12, %6254
  %6270 = trunc i64 %6269 to i32
  %6271 = xor i32 %6270, %6258
  %6272 = lshr i32 %6271, 4
  %6273 = trunc i32 %6272 to i8
  %6274 = and i8 %6273, 1
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6274, i8* %6275, align 1
  %6276 = icmp eq i32 %6258, 0
  %6277 = zext i1 %6276 to i8
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6277, i8* %6278, align 1
  %6279 = lshr i32 %6258, 31
  %6280 = trunc i32 %6279 to i8
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6280, i8* %6281, align 1
  %6282 = lshr i32 %6257, 31
  %6283 = xor i32 %6279, %6282
  %6284 = add i32 %6283, %6282
  %6285 = icmp eq i32 %6284, 2
  %6286 = zext i1 %6285 to i8
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6286, i8* %6287, align 1
  store %struct.Memory* %loadMem_40bdb0, %struct.Memory** %MEMORY
  %loadMem_40bdb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 33
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %6290 to i64*
  %6291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6292 = getelementptr inbounds %struct.GPR, %struct.GPR* %6291, i32 0, i32 5
  %6293 = getelementptr inbounds %struct.Reg, %struct.Reg* %6292, i32 0, i32 0
  %ECX.i938 = bitcast %union.anon* %6293 to i32*
  %6294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6295 = getelementptr inbounds %struct.GPR, %struct.GPR* %6294, i32 0, i32 17
  %6296 = getelementptr inbounds %struct.Reg, %struct.Reg* %6295, i32 0, i32 0
  %R8.i939 = bitcast %union.anon* %6296 to i64*
  %6297 = load i32, i32* %ECX.i938
  %6298 = zext i32 %6297 to i64
  %6299 = load i64, i64* %PC.i937
  %6300 = add i64 %6299, 3
  store i64 %6300, i64* %PC.i937
  %6301 = shl i64 %6298, 32
  %6302 = ashr exact i64 %6301, 32
  store i64 %6302, i64* %R8.i939, align 8
  store %struct.Memory* %loadMem_40bdb3, %struct.Memory** %MEMORY
  %loadMem_40bdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 33
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 5
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RCX.i935 = bitcast %union.anon* %6308 to i64*
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 17
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %R8.i936 = bitcast %union.anon* %6311 to i64*
  %6312 = load i64, i64* %R8.i936
  %6313 = mul i64 %6312, 4
  %6314 = add i64 %6313, 8807152
  %6315 = load i64, i64* %PC.i934
  %6316 = add i64 %6315, 8
  store i64 %6316, i64* %PC.i934
  %6317 = inttoptr i64 %6314 to i32*
  %6318 = load i32, i32* %6317
  %6319 = zext i32 %6318 to i64
  store i64 %6319, i64* %RCX.i935, align 8
  store %struct.Memory* %loadMem_40bdb6, %struct.Memory** %MEMORY
  %loadMem_40bdbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6321 = getelementptr inbounds %struct.GPR, %struct.GPR* %6320, i32 0, i32 33
  %6322 = getelementptr inbounds %struct.Reg, %struct.Reg* %6321, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %6322 to i64*
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6324 = getelementptr inbounds %struct.GPR, %struct.GPR* %6323, i32 0, i32 17
  %6325 = getelementptr inbounds %struct.Reg, %struct.Reg* %6324, i32 0, i32 0
  %R8.i933 = bitcast %union.anon* %6325 to i64*
  %6326 = load i64, i64* %PC.i932
  %6327 = add i64 %6326, 8
  store i64 %6327, i64* %PC.i932
  %6328 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %6329 = sext i32 %6328 to i64
  store i64 %6329, i64* %R8.i933, align 8
  store %struct.Memory* %loadMem_40bdbe, %struct.Memory** %MEMORY
  %loadMem_40bdc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6331 = getelementptr inbounds %struct.GPR, %struct.GPR* %6330, i32 0, i32 33
  %6332 = getelementptr inbounds %struct.Reg, %struct.Reg* %6331, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %6332 to i64*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6334 = getelementptr inbounds %struct.GPR, %struct.GPR* %6333, i32 0, i32 17
  %6335 = getelementptr inbounds %struct.Reg, %struct.Reg* %6334, i32 0, i32 0
  %R8.i931 = bitcast %union.anon* %6335 to i64*
  %6336 = load i64, i64* %R8.i931
  %6337 = load i64, i64* %PC.i930
  %6338 = add i64 %6337, 4
  store i64 %6338, i64* %PC.i930
  %6339 = shl i64 %6336, 3
  %6340 = icmp slt i64 %6339, 0
  %6341 = shl i64 %6339, 1
  store i64 %6341, i64* %R8.i931, align 8
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6343 = zext i1 %6340 to i8
  store i8 %6343, i8* %6342, align 1
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6345 = trunc i64 %6341 to i32
  %6346 = and i32 %6345, 254
  %6347 = call i32 @llvm.ctpop.i32(i32 %6346)
  %6348 = trunc i32 %6347 to i8
  %6349 = and i8 %6348, 1
  %6350 = xor i8 %6349, 1
  store i8 %6350, i8* %6344, align 1
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6351, align 1
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6353 = icmp eq i64 %6341, 0
  %6354 = zext i1 %6353 to i8
  store i8 %6354, i8* %6352, align 1
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6356 = lshr i64 %6341, 63
  %6357 = trunc i64 %6356 to i8
  store i8 %6357, i8* %6355, align 1
  %6358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6358, align 1
  store %struct.Memory* %loadMem_40bdc6, %struct.Memory** %MEMORY
  %loadMem_40bdca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6360 = getelementptr inbounds %struct.GPR, %struct.GPR* %6359, i32 0, i32 33
  %6361 = getelementptr inbounds %struct.Reg, %struct.Reg* %6360, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %6361 to i64*
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 1
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %RAX.i928 = bitcast %union.anon* %6364 to i64*
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 17
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %R8.i929 = bitcast %union.anon* %6367 to i64*
  %6368 = load i64, i64* %RAX.i928
  %6369 = load i64, i64* %R8.i929
  %6370 = load i64, i64* %PC.i927
  %6371 = add i64 %6370, 3
  store i64 %6371, i64* %PC.i927
  %6372 = add i64 %6369, %6368
  store i64 %6372, i64* %RAX.i928, align 8
  %6373 = icmp ult i64 %6372, %6368
  %6374 = icmp ult i64 %6372, %6369
  %6375 = or i1 %6373, %6374
  %6376 = zext i1 %6375 to i8
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6376, i8* %6377, align 1
  %6378 = trunc i64 %6372 to i32
  %6379 = and i32 %6378, 255
  %6380 = call i32 @llvm.ctpop.i32(i32 %6379)
  %6381 = trunc i32 %6380 to i8
  %6382 = and i8 %6381, 1
  %6383 = xor i8 %6382, 1
  %6384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6383, i8* %6384, align 1
  %6385 = xor i64 %6369, %6368
  %6386 = xor i64 %6385, %6372
  %6387 = lshr i64 %6386, 4
  %6388 = trunc i64 %6387 to i8
  %6389 = and i8 %6388, 1
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6389, i8* %6390, align 1
  %6391 = icmp eq i64 %6372, 0
  %6392 = zext i1 %6391 to i8
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6392, i8* %6393, align 1
  %6394 = lshr i64 %6372, 63
  %6395 = trunc i64 %6394 to i8
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6395, i8* %6396, align 1
  %6397 = lshr i64 %6368, 63
  %6398 = lshr i64 %6369, 63
  %6399 = xor i64 %6394, %6397
  %6400 = xor i64 %6394, %6398
  %6401 = add i64 %6399, %6400
  %6402 = icmp eq i64 %6401, 2
  %6403 = zext i1 %6402 to i8
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6403, i8* %6404, align 1
  store %struct.Memory* %loadMem_40bdca, %struct.Memory** %MEMORY
  %loadMem_40bdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6406 = getelementptr inbounds %struct.GPR, %struct.GPR* %6405, i32 0, i32 33
  %6407 = getelementptr inbounds %struct.Reg, %struct.Reg* %6406, i32 0, i32 0
  %PC.i924 = bitcast %union.anon* %6407 to i64*
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6409 = getelementptr inbounds %struct.GPR, %struct.GPR* %6408, i32 0, i32 5
  %6410 = getelementptr inbounds %struct.Reg, %struct.Reg* %6409, i32 0, i32 0
  %ECX.i925 = bitcast %union.anon* %6410 to i32*
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6412 = getelementptr inbounds %struct.GPR, %struct.GPR* %6411, i32 0, i32 1
  %6413 = getelementptr inbounds %struct.Reg, %struct.Reg* %6412, i32 0, i32 0
  %RAX.i926 = bitcast %union.anon* %6413 to i64*
  %6414 = load i64, i64* %RAX.i926
  %6415 = load i32, i32* %ECX.i925
  %6416 = zext i32 %6415 to i64
  %6417 = load i64, i64* %PC.i924
  %6418 = add i64 %6417, 2
  store i64 %6418, i64* %PC.i924
  %6419 = inttoptr i64 %6414 to i32*
  store i32 %6415, i32* %6419
  store %struct.Memory* %loadMem_40bdcd, %struct.Memory** %MEMORY
  %loadMem_40bdcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6421 = getelementptr inbounds %struct.GPR, %struct.GPR* %6420, i32 0, i32 33
  %6422 = getelementptr inbounds %struct.Reg, %struct.Reg* %6421, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %6422 to i64*
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 5
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %RCX.i922 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6427 = getelementptr inbounds %struct.GPR, %struct.GPR* %6426, i32 0, i32 15
  %6428 = getelementptr inbounds %struct.Reg, %struct.Reg* %6427, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %6428 to i64*
  %6429 = load i64, i64* %RBP.i923
  %6430 = sub i64 %6429, 24
  %6431 = load i64, i64* %PC.i921
  %6432 = add i64 %6431, 3
  store i64 %6432, i64* %PC.i921
  %6433 = inttoptr i64 %6430 to i32*
  %6434 = load i32, i32* %6433
  %6435 = zext i32 %6434 to i64
  store i64 %6435, i64* %RCX.i922, align 8
  store %struct.Memory* %loadMem_40bdcf, %struct.Memory** %MEMORY
  %loadMem_40bdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6437 = getelementptr inbounds %struct.GPR, %struct.GPR* %6436, i32 0, i32 33
  %6438 = getelementptr inbounds %struct.Reg, %struct.Reg* %6437, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %6438 to i64*
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 5
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %RCX.i920 = bitcast %union.anon* %6441 to i64*
  %6442 = load i64, i64* %RCX.i920
  %6443 = load i64, i64* %PC.i919
  %6444 = add i64 %6443, 3
  store i64 %6444, i64* %PC.i919
  %6445 = trunc i64 %6442 to i32
  %6446 = sub i32 %6445, 12
  %6447 = zext i32 %6446 to i64
  store i64 %6447, i64* %RCX.i920, align 8
  %6448 = icmp ult i32 %6445, 12
  %6449 = zext i1 %6448 to i8
  %6450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6449, i8* %6450, align 1
  %6451 = and i32 %6446, 255
  %6452 = call i32 @llvm.ctpop.i32(i32 %6451)
  %6453 = trunc i32 %6452 to i8
  %6454 = and i8 %6453, 1
  %6455 = xor i8 %6454, 1
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6455, i8* %6456, align 1
  %6457 = xor i64 12, %6442
  %6458 = trunc i64 %6457 to i32
  %6459 = xor i32 %6458, %6446
  %6460 = lshr i32 %6459, 4
  %6461 = trunc i32 %6460 to i8
  %6462 = and i8 %6461, 1
  %6463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6462, i8* %6463, align 1
  %6464 = icmp eq i32 %6446, 0
  %6465 = zext i1 %6464 to i8
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6465, i8* %6466, align 1
  %6467 = lshr i32 %6446, 31
  %6468 = trunc i32 %6467 to i8
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6468, i8* %6469, align 1
  %6470 = lshr i32 %6445, 31
  %6471 = xor i32 %6467, %6470
  %6472 = add i32 %6471, %6470
  %6473 = icmp eq i32 %6472, 2
  %6474 = zext i1 %6473 to i8
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6474, i8* %6475, align 1
  store %struct.Memory* %loadMem_40bdd2, %struct.Memory** %MEMORY
  %loadMem_40bdd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 33
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %PC.i916 = bitcast %union.anon* %6478 to i64*
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6480 = getelementptr inbounds %struct.GPR, %struct.GPR* %6479, i32 0, i32 5
  %6481 = getelementptr inbounds %struct.Reg, %struct.Reg* %6480, i32 0, i32 0
  %ECX.i917 = bitcast %union.anon* %6481 to i32*
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 1
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %6484 to i64*
  %6485 = load i32, i32* %ECX.i917
  %6486 = zext i32 %6485 to i64
  %6487 = load i64, i64* %PC.i916
  %6488 = add i64 %6487, 3
  store i64 %6488, i64* %PC.i916
  %6489 = shl i64 %6486, 32
  %6490 = ashr exact i64 %6489, 32
  store i64 %6490, i64* %RAX.i918, align 8
  store %struct.Memory* %loadMem_40bdd5, %struct.Memory** %MEMORY
  %loadMem_40bdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 33
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %6493 to i64*
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 1
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %6496 to i64*
  %6497 = load i64, i64* %RAX.i915
  %6498 = mul i64 %6497, 4
  %6499 = add i64 %6498, 8807152
  %6500 = load i64, i64* %PC.i914
  %6501 = add i64 %6500, 8
  store i64 %6501, i64* %PC.i914
  %6502 = inttoptr i64 %6499 to i32*
  %6503 = load i32, i32* %6502
  %6504 = sext i32 %6503 to i64
  store i64 %6504, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_40bdd8, %struct.Memory** %MEMORY
  %loadMem_40bde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 33
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6509 = getelementptr inbounds %struct.GPR, %struct.GPR* %6508, i32 0, i32 1
  %6510 = getelementptr inbounds %struct.Reg, %struct.Reg* %6509, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %6510 to i64*
  %6511 = load i64, i64* %RAX.i913
  %6512 = mul i64 %6511, 4
  %6513 = add i64 %6512, 8778480
  %6514 = load i64, i64* %PC.i912
  %6515 = add i64 %6514, 11
  store i64 %6515, i64* %PC.i912
  %6516 = inttoptr i64 %6513 to i32*
  store i32 0, i32* %6516
  store %struct.Memory* %loadMem_40bde0, %struct.Memory** %MEMORY
  %loadMem_40bdeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6518 = getelementptr inbounds %struct.GPR, %struct.GPR* %6517, i32 0, i32 33
  %6519 = getelementptr inbounds %struct.Reg, %struct.Reg* %6518, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %6519 to i64*
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 5
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %RCX.i910 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 15
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %6525 to i64*
  %6526 = load i64, i64* %RBP.i911
  %6527 = sub i64 %6526, 24
  %6528 = load i64, i64* %PC.i909
  %6529 = add i64 %6528, 3
  store i64 %6529, i64* %PC.i909
  %6530 = inttoptr i64 %6527 to i32*
  %6531 = load i32, i32* %6530
  %6532 = zext i32 %6531 to i64
  store i64 %6532, i64* %RCX.i910, align 8
  store %struct.Memory* %loadMem_40bdeb, %struct.Memory** %MEMORY
  %loadMem_40bdee = load %struct.Memory*, %struct.Memory** %MEMORY
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6534 = getelementptr inbounds %struct.GPR, %struct.GPR* %6533, i32 0, i32 33
  %6535 = getelementptr inbounds %struct.Reg, %struct.Reg* %6534, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %6535 to i64*
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 5
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %RCX.i908 = bitcast %union.anon* %6538 to i64*
  %6539 = load i64, i64* %RCX.i908
  %6540 = load i64, i64* %PC.i907
  %6541 = add i64 %6540, 3
  store i64 %6541, i64* %PC.i907
  %6542 = trunc i64 %6539 to i32
  %6543 = sub i32 %6542, 12
  %6544 = zext i32 %6543 to i64
  store i64 %6544, i64* %RCX.i908, align 8
  %6545 = icmp ult i32 %6542, 12
  %6546 = zext i1 %6545 to i8
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6546, i8* %6547, align 1
  %6548 = and i32 %6543, 255
  %6549 = call i32 @llvm.ctpop.i32(i32 %6548)
  %6550 = trunc i32 %6549 to i8
  %6551 = and i8 %6550, 1
  %6552 = xor i8 %6551, 1
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6552, i8* %6553, align 1
  %6554 = xor i64 12, %6539
  %6555 = trunc i64 %6554 to i32
  %6556 = xor i32 %6555, %6543
  %6557 = lshr i32 %6556, 4
  %6558 = trunc i32 %6557 to i8
  %6559 = and i8 %6558, 1
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6559, i8* %6560, align 1
  %6561 = icmp eq i32 %6543, 0
  %6562 = zext i1 %6561 to i8
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6562, i8* %6563, align 1
  %6564 = lshr i32 %6543, 31
  %6565 = trunc i32 %6564 to i8
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6565, i8* %6566, align 1
  %6567 = lshr i32 %6542, 31
  %6568 = xor i32 %6564, %6567
  %6569 = add i32 %6568, %6567
  %6570 = icmp eq i32 %6569, 2
  %6571 = zext i1 %6570 to i8
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6571, i8* %6572, align 1
  store %struct.Memory* %loadMem_40bdee, %struct.Memory** %MEMORY
  %loadMem_40bdf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 33
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %6575 to i64*
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6577 = getelementptr inbounds %struct.GPR, %struct.GPR* %6576, i32 0, i32 5
  %6578 = getelementptr inbounds %struct.Reg, %struct.Reg* %6577, i32 0, i32 0
  %ECX.i905 = bitcast %union.anon* %6578 to i32*
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6580 = getelementptr inbounds %struct.GPR, %struct.GPR* %6579, i32 0, i32 1
  %6581 = getelementptr inbounds %struct.Reg, %struct.Reg* %6580, i32 0, i32 0
  %RAX.i906 = bitcast %union.anon* %6581 to i64*
  %6582 = load i32, i32* %ECX.i905
  %6583 = zext i32 %6582 to i64
  %6584 = load i64, i64* %PC.i904
  %6585 = add i64 %6584, 3
  store i64 %6585, i64* %PC.i904
  %6586 = shl i64 %6583, 32
  %6587 = ashr exact i64 %6586, 32
  store i64 %6587, i64* %RAX.i906, align 8
  store %struct.Memory* %loadMem_40bdf1, %struct.Memory** %MEMORY
  %loadMem_40bdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 33
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 1
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %6593 to i64*
  %6594 = load i64, i64* %RAX.i903
  %6595 = mul i64 %6594, 4
  %6596 = add i64 %6595, 8807152
  %6597 = load i64, i64* %PC.i902
  %6598 = add i64 %6597, 11
  store i64 %6598, i64* %PC.i902
  %6599 = inttoptr i64 %6596 to i32*
  store i32 0, i32* %6599
  store %struct.Memory* %loadMem_40bdf4, %struct.Memory** %MEMORY
  %loadMem_40bdff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6601 = getelementptr inbounds %struct.GPR, %struct.GPR* %6600, i32 0, i32 33
  %6602 = getelementptr inbounds %struct.Reg, %struct.Reg* %6601, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %6602 to i64*
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6604 = getelementptr inbounds %struct.GPR, %struct.GPR* %6603, i32 0, i32 5
  %6605 = getelementptr inbounds %struct.Reg, %struct.Reg* %6604, i32 0, i32 0
  %RCX.i901 = bitcast %union.anon* %6605 to i64*
  %6606 = load i64, i64* %PC.i900
  %6607 = add i64 %6606, 7
  store i64 %6607, i64* %PC.i900
  %6608 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %6609 = zext i32 %6608 to i64
  store i64 %6609, i64* %RCX.i901, align 8
  store %struct.Memory* %loadMem_40bdff, %struct.Memory** %MEMORY
  %loadMem_40be06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 33
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %6612 to i64*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 5
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %RCX.i899 = bitcast %union.anon* %6615 to i64*
  %6616 = load i64, i64* %RCX.i899
  %6617 = load i64, i64* %PC.i898
  %6618 = add i64 %6617, 3
  store i64 %6618, i64* %PC.i898
  %6619 = trunc i64 %6616 to i32
  %6620 = add i32 1, %6619
  %6621 = zext i32 %6620 to i64
  store i64 %6621, i64* %RCX.i899, align 8
  %6622 = icmp ult i32 %6620, %6619
  %6623 = icmp ult i32 %6620, 1
  %6624 = or i1 %6622, %6623
  %6625 = zext i1 %6624 to i8
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6625, i8* %6626, align 1
  %6627 = and i32 %6620, 255
  %6628 = call i32 @llvm.ctpop.i32(i32 %6627)
  %6629 = trunc i32 %6628 to i8
  %6630 = and i8 %6629, 1
  %6631 = xor i8 %6630, 1
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6631, i8* %6632, align 1
  %6633 = xor i64 1, %6616
  %6634 = trunc i64 %6633 to i32
  %6635 = xor i32 %6634, %6620
  %6636 = lshr i32 %6635, 4
  %6637 = trunc i32 %6636 to i8
  %6638 = and i8 %6637, 1
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6638, i8* %6639, align 1
  %6640 = icmp eq i32 %6620, 0
  %6641 = zext i1 %6640 to i8
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6641, i8* %6642, align 1
  %6643 = lshr i32 %6620, 31
  %6644 = trunc i32 %6643 to i8
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6644, i8* %6645, align 1
  %6646 = lshr i32 %6619, 31
  %6647 = xor i32 %6643, %6646
  %6648 = add i32 %6647, %6643
  %6649 = icmp eq i32 %6648, 2
  %6650 = zext i1 %6649 to i8
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6650, i8* %6651, align 1
  store %struct.Memory* %loadMem_40be06, %struct.Memory** %MEMORY
  %loadMem_40be09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 33
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %6654 to i64*
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6656 = getelementptr inbounds %struct.GPR, %struct.GPR* %6655, i32 0, i32 5
  %6657 = getelementptr inbounds %struct.Reg, %struct.Reg* %6656, i32 0, i32 0
  %ECX.i897 = bitcast %union.anon* %6657 to i32*
  %6658 = load i32, i32* %ECX.i897
  %6659 = zext i32 %6658 to i64
  %6660 = load i64, i64* %PC.i896
  %6661 = add i64 %6660, 7
  store i64 %6661, i64* %PC.i896
  store i32 %6658, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40be09, %struct.Memory** %MEMORY
  %loadMem_40be10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6663 = getelementptr inbounds %struct.GPR, %struct.GPR* %6662, i32 0, i32 33
  %6664 = getelementptr inbounds %struct.Reg, %struct.Reg* %6663, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %6664 to i64*
  %6665 = load i64, i64* %PC.i895
  %6666 = add i64 %6665, 2430
  %6667 = load i64, i64* %PC.i895
  %6668 = add i64 %6667, 5
  store i64 %6668, i64* %PC.i895
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6666, i64* %6669, align 8
  store %struct.Memory* %loadMem_40be10, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40be15:                                  ; preds = %block_.L_40bc87
  %loadMem_40be15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 33
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %6672 to i64*
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6674 = getelementptr inbounds %struct.GPR, %struct.GPR* %6673, i32 0, i32 1
  %6675 = getelementptr inbounds %struct.Reg, %struct.Reg* %6674, i32 0, i32 0
  %RAX.i893 = bitcast %union.anon* %6675 to i64*
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 15
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %6678 to i64*
  %6679 = load i64, i64* %RBP.i894
  %6680 = sub i64 %6679, 24
  %6681 = load i64, i64* %PC.i892
  %6682 = add i64 %6681, 3
  store i64 %6682, i64* %PC.i892
  %6683 = inttoptr i64 %6680 to i32*
  %6684 = load i32, i32* %6683
  %6685 = zext i32 %6684 to i64
  store i64 %6685, i64* %RAX.i893, align 8
  store %struct.Memory* %loadMem_40be15, %struct.Memory** %MEMORY
  %loadMem_40be18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6687 = getelementptr inbounds %struct.GPR, %struct.GPR* %6686, i32 0, i32 33
  %6688 = getelementptr inbounds %struct.Reg, %struct.Reg* %6687, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %6688 to i64*
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6690 = getelementptr inbounds %struct.GPR, %struct.GPR* %6689, i32 0, i32 5
  %6691 = getelementptr inbounds %struct.Reg, %struct.Reg* %6690, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %6691 to i64*
  %6692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6693 = getelementptr inbounds %struct.GPR, %struct.GPR* %6692, i32 0, i32 15
  %6694 = getelementptr inbounds %struct.Reg, %struct.Reg* %6693, i32 0, i32 0
  %RBP.i891 = bitcast %union.anon* %6694 to i64*
  %6695 = load i64, i64* %RBP.i891
  %6696 = sub i64 %6695, 20
  %6697 = load i64, i64* %PC.i889
  %6698 = add i64 %6697, 3
  store i64 %6698, i64* %PC.i889
  %6699 = inttoptr i64 %6696 to i32*
  %6700 = load i32, i32* %6699
  %6701 = zext i32 %6700 to i64
  store i64 %6701, i64* %RCX.i890, align 8
  store %struct.Memory* %loadMem_40be18, %struct.Memory** %MEMORY
  %loadMem_40be1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 33
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %6704 to i64*
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 5
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %RCX.i888 = bitcast %union.anon* %6707 to i64*
  %6708 = load i64, i64* %RCX.i888
  %6709 = load i64, i64* %PC.i887
  %6710 = add i64 %6709, 3
  store i64 %6710, i64* %PC.i887
  %6711 = trunc i64 %6708 to i32
  %6712 = add i32 24, %6711
  %6713 = zext i32 %6712 to i64
  store i64 %6713, i64* %RCX.i888, align 8
  %6714 = icmp ult i32 %6712, %6711
  %6715 = icmp ult i32 %6712, 24
  %6716 = or i1 %6714, %6715
  %6717 = zext i1 %6716 to i8
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6717, i8* %6718, align 1
  %6719 = and i32 %6712, 255
  %6720 = call i32 @llvm.ctpop.i32(i32 %6719)
  %6721 = trunc i32 %6720 to i8
  %6722 = and i8 %6721, 1
  %6723 = xor i8 %6722, 1
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6723, i8* %6724, align 1
  %6725 = xor i64 24, %6708
  %6726 = trunc i64 %6725 to i32
  %6727 = xor i32 %6726, %6712
  %6728 = lshr i32 %6727, 4
  %6729 = trunc i32 %6728 to i8
  %6730 = and i8 %6729, 1
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6730, i8* %6731, align 1
  %6732 = icmp eq i32 %6712, 0
  %6733 = zext i1 %6732 to i8
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6733, i8* %6734, align 1
  %6735 = lshr i32 %6712, 31
  %6736 = trunc i32 %6735 to i8
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6736, i8* %6737, align 1
  %6738 = lshr i32 %6711, 31
  %6739 = xor i32 %6735, %6738
  %6740 = add i32 %6739, %6735
  %6741 = icmp eq i32 %6740, 2
  %6742 = zext i1 %6741 to i8
  %6743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6742, i8* %6743, align 1
  store %struct.Memory* %loadMem_40be1b, %struct.Memory** %MEMORY
  %loadMem_40be1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6745 = getelementptr inbounds %struct.GPR, %struct.GPR* %6744, i32 0, i32 33
  %6746 = getelementptr inbounds %struct.Reg, %struct.Reg* %6745, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %6746 to i64*
  %6747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6748 = getelementptr inbounds %struct.GPR, %struct.GPR* %6747, i32 0, i32 1
  %6749 = getelementptr inbounds %struct.Reg, %struct.Reg* %6748, i32 0, i32 0
  %EAX.i885 = bitcast %union.anon* %6749 to i32*
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6751 = getelementptr inbounds %struct.GPR, %struct.GPR* %6750, i32 0, i32 5
  %6752 = getelementptr inbounds %struct.Reg, %struct.Reg* %6751, i32 0, i32 0
  %ECX.i886 = bitcast %union.anon* %6752 to i32*
  %6753 = load i32, i32* %EAX.i885
  %6754 = zext i32 %6753 to i64
  %6755 = load i32, i32* %ECX.i886
  %6756 = zext i32 %6755 to i64
  %6757 = load i64, i64* %PC.i884
  %6758 = add i64 %6757, 2
  store i64 %6758, i64* %PC.i884
  %6759 = sub i32 %6753, %6755
  %6760 = icmp ult i32 %6753, %6755
  %6761 = zext i1 %6760 to i8
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6761, i8* %6762, align 1
  %6763 = and i32 %6759, 255
  %6764 = call i32 @llvm.ctpop.i32(i32 %6763)
  %6765 = trunc i32 %6764 to i8
  %6766 = and i8 %6765, 1
  %6767 = xor i8 %6766, 1
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6767, i8* %6768, align 1
  %6769 = xor i64 %6756, %6754
  %6770 = trunc i64 %6769 to i32
  %6771 = xor i32 %6770, %6759
  %6772 = lshr i32 %6771, 4
  %6773 = trunc i32 %6772 to i8
  %6774 = and i8 %6773, 1
  %6775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6774, i8* %6775, align 1
  %6776 = icmp eq i32 %6759, 0
  %6777 = zext i1 %6776 to i8
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6777, i8* %6778, align 1
  %6779 = lshr i32 %6759, 31
  %6780 = trunc i32 %6779 to i8
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6780, i8* %6781, align 1
  %6782 = lshr i32 %6753, 31
  %6783 = lshr i32 %6755, 31
  %6784 = xor i32 %6783, %6782
  %6785 = xor i32 %6779, %6782
  %6786 = add i32 %6785, %6784
  %6787 = icmp eq i32 %6786, 2
  %6788 = zext i1 %6787 to i8
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6788, i8* %6789, align 1
  store %struct.Memory* %loadMem_40be1e, %struct.Memory** %MEMORY
  %loadMem_40be20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6791 = getelementptr inbounds %struct.GPR, %struct.GPR* %6790, i32 0, i32 33
  %6792 = getelementptr inbounds %struct.Reg, %struct.Reg* %6791, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %6792 to i64*
  %6793 = load i64, i64* %PC.i883
  %6794 = add i64 %6793, 19
  %6795 = load i64, i64* %PC.i883
  %6796 = add i64 %6795, 6
  %6797 = load i64, i64* %PC.i883
  %6798 = add i64 %6797, 6
  store i64 %6798, i64* %PC.i883
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6800 = load i8, i8* %6799, align 1
  %6801 = icmp eq i8 %6800, 0
  %6802 = zext i1 %6801 to i8
  store i8 %6802, i8* %BRANCH_TAKEN, align 1
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6804 = select i1 %6801, i64 %6794, i64 %6796
  store i64 %6804, i64* %6803, align 8
  store %struct.Memory* %loadMem_40be20, %struct.Memory** %MEMORY
  %loadBr_40be20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40be20 = icmp eq i8 %loadBr_40be20, 1
  br i1 %cmpBr_40be20, label %block_.L_40be33, label %block_40be26

block_40be26:                                     ; preds = %block_.L_40be15
  %loadMem_40be26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 1
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %6810 to i64*
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6812 = getelementptr inbounds %struct.GPR, %struct.GPR* %6811, i32 0, i32 15
  %6813 = getelementptr inbounds %struct.Reg, %struct.Reg* %6812, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %6813 to i64*
  %6814 = load i64, i64* %RBP.i882
  %6815 = sub i64 %6814, 20
  %6816 = load i64, i64* %PC.i880
  %6817 = add i64 %6816, 3
  store i64 %6817, i64* %PC.i880
  %6818 = inttoptr i64 %6815 to i32*
  %6819 = load i32, i32* %6818
  %6820 = zext i32 %6819 to i64
  store i64 %6820, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_40be26, %struct.Memory** %MEMORY
  %loadMem_40be29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 33
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %6823 to i64*
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 1
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %RAX.i879 = bitcast %union.anon* %6826 to i64*
  %6827 = load i64, i64* %RAX.i879
  %6828 = load i64, i64* %PC.i878
  %6829 = add i64 %6828, 3
  store i64 %6829, i64* %PC.i878
  %6830 = trunc i64 %6827 to i32
  %6831 = add i32 12, %6830
  %6832 = zext i32 %6831 to i64
  store i64 %6832, i64* %RAX.i879, align 8
  %6833 = icmp ult i32 %6831, %6830
  %6834 = icmp ult i32 %6831, 12
  %6835 = or i1 %6833, %6834
  %6836 = zext i1 %6835 to i8
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6836, i8* %6837, align 1
  %6838 = and i32 %6831, 255
  %6839 = call i32 @llvm.ctpop.i32(i32 %6838)
  %6840 = trunc i32 %6839 to i8
  %6841 = and i8 %6840, 1
  %6842 = xor i8 %6841, 1
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6842, i8* %6843, align 1
  %6844 = xor i64 12, %6827
  %6845 = trunc i64 %6844 to i32
  %6846 = xor i32 %6845, %6831
  %6847 = lshr i32 %6846, 4
  %6848 = trunc i32 %6847 to i8
  %6849 = and i8 %6848, 1
  %6850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6849, i8* %6850, align 1
  %6851 = icmp eq i32 %6831, 0
  %6852 = zext i1 %6851 to i8
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6852, i8* %6853, align 1
  %6854 = lshr i32 %6831, 31
  %6855 = trunc i32 %6854 to i8
  %6856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6855, i8* %6856, align 1
  %6857 = lshr i32 %6830, 31
  %6858 = xor i32 %6854, %6857
  %6859 = add i32 %6858, %6854
  %6860 = icmp eq i32 %6859, 2
  %6861 = zext i1 %6860 to i8
  %6862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6861, i8* %6862, align 1
  store %struct.Memory* %loadMem_40be29, %struct.Memory** %MEMORY
  %loadMem_40be2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 33
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %6865 to i64*
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 1
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %EAX.i877 = bitcast %union.anon* %6868 to i32*
  %6869 = load i32, i32* %EAX.i877
  %6870 = zext i32 %6869 to i64
  %6871 = load i64, i64* %PC.i876
  %6872 = add i64 %6871, 7
  store i64 %6872, i64* %PC.i876
  store i32 %6869, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  store %struct.Memory* %loadMem_40be2c, %struct.Memory** %MEMORY
  br label %block_.L_40be33

block_.L_40be33:                                  ; preds = %block_40be26, %block_.L_40be15
  %loadMem_40be33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6874 = getelementptr inbounds %struct.GPR, %struct.GPR* %6873, i32 0, i32 33
  %6875 = getelementptr inbounds %struct.Reg, %struct.Reg* %6874, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %6875 to i64*
  %6876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6877 = getelementptr inbounds %struct.GPR, %struct.GPR* %6876, i32 0, i32 1
  %6878 = getelementptr inbounds %struct.Reg, %struct.Reg* %6877, i32 0, i32 0
  %RAX.i874 = bitcast %union.anon* %6878 to i64*
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6880 = getelementptr inbounds %struct.GPR, %struct.GPR* %6879, i32 0, i32 15
  %6881 = getelementptr inbounds %struct.Reg, %struct.Reg* %6880, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %6881 to i64*
  %6882 = load i64, i64* %RBP.i875
  %6883 = sub i64 %6882, 20
  %6884 = load i64, i64* %PC.i873
  %6885 = add i64 %6884, 4
  store i64 %6885, i64* %PC.i873
  %6886 = inttoptr i64 %6883 to i32*
  %6887 = load i32, i32* %6886
  %6888 = sext i32 %6887 to i64
  store i64 %6888, i64* %RAX.i874, align 8
  store %struct.Memory* %loadMem_40be33, %struct.Memory** %MEMORY
  %loadMem_40be37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 33
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %6891 to i64*
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 1
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %RAX.i871 = bitcast %union.anon* %6894 to i64*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6896 = getelementptr inbounds %struct.GPR, %struct.GPR* %6895, i32 0, i32 5
  %6897 = getelementptr inbounds %struct.Reg, %struct.Reg* %6896, i32 0, i32 0
  %RCX.i872 = bitcast %union.anon* %6897 to i64*
  %6898 = load i64, i64* %RAX.i871
  %6899 = mul i64 %6898, 4
  %6900 = add i64 %6899, 9047232
  %6901 = load i64, i64* %PC.i870
  %6902 = add i64 %6901, 7
  store i64 %6902, i64* %PC.i870
  %6903 = inttoptr i64 %6900 to i32*
  %6904 = load i32, i32* %6903
  %6905 = zext i32 %6904 to i64
  store i64 %6905, i64* %RCX.i872, align 8
  store %struct.Memory* %loadMem_40be37, %struct.Memory** %MEMORY
  %loadMem_40be3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6907 = getelementptr inbounds %struct.GPR, %struct.GPR* %6906, i32 0, i32 33
  %6908 = getelementptr inbounds %struct.Reg, %struct.Reg* %6907, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %6908 to i64*
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 5
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %RCX.i869 = bitcast %union.anon* %6911 to i64*
  %6912 = load i64, i64* %RCX.i869
  %6913 = load i64, i64* %PC.i868
  %6914 = add i64 %6913, 7
  store i64 %6914, i64* %PC.i868
  %6915 = trunc i64 %6912 to i32
  %6916 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %6917 = xor i32 %6916, %6915
  %6918 = zext i32 %6917 to i64
  store i64 %6918, i64* %RCX.i869, align 8
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6919, align 1
  %6920 = and i32 %6917, 255
  %6921 = call i32 @llvm.ctpop.i32(i32 %6920)
  %6922 = trunc i32 %6921 to i8
  %6923 = and i8 %6922, 1
  %6924 = xor i8 %6923, 1
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6924, i8* %6925, align 1
  %6926 = icmp eq i32 %6917, 0
  %6927 = zext i1 %6926 to i8
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6927, i8* %6928, align 1
  %6929 = lshr i32 %6917, 31
  %6930 = trunc i32 %6929 to i8
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6930, i8* %6931, align 1
  %6932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6932, align 1
  %6933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6933, align 1
  store %struct.Memory* %loadMem_40be3e, %struct.Memory** %MEMORY
  %loadMem_40be45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6935 = getelementptr inbounds %struct.GPR, %struct.GPR* %6934, i32 0, i32 33
  %6936 = getelementptr inbounds %struct.Reg, %struct.Reg* %6935, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %6936 to i64*
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6938 = getelementptr inbounds %struct.GPR, %struct.GPR* %6937, i32 0, i32 5
  %6939 = getelementptr inbounds %struct.Reg, %struct.Reg* %6938, i32 0, i32 0
  %ECX.i867 = bitcast %union.anon* %6939 to i32*
  %6940 = load i32, i32* %ECX.i867
  %6941 = zext i32 %6940 to i64
  %6942 = load i64, i64* %PC.i866
  %6943 = add i64 %6942, 7
  store i64 %6943, i64* %PC.i866
  store i32 %6940, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40be45, %struct.Memory** %MEMORY
  %loadMem_40be4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 33
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %6946 to i64*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6948 = getelementptr inbounds %struct.GPR, %struct.GPR* %6947, i32 0, i32 1
  %6949 = getelementptr inbounds %struct.Reg, %struct.Reg* %6948, i32 0, i32 0
  %RAX.i864 = bitcast %union.anon* %6949 to i64*
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 15
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %RBP.i865 = bitcast %union.anon* %6952 to i64*
  %6953 = load i64, i64* %RBP.i865
  %6954 = sub i64 %6953, 24
  %6955 = load i64, i64* %PC.i863
  %6956 = add i64 %6955, 4
  store i64 %6956, i64* %PC.i863
  %6957 = inttoptr i64 %6954 to i32*
  %6958 = load i32, i32* %6957
  %6959 = sext i32 %6958 to i64
  store i64 %6959, i64* %RAX.i864, align 8
  store %struct.Memory* %loadMem_40be4c, %struct.Memory** %MEMORY
  %loadMem_40be50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6961 = getelementptr inbounds %struct.GPR, %struct.GPR* %6960, i32 0, i32 33
  %6962 = getelementptr inbounds %struct.Reg, %struct.Reg* %6961, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %6962 to i64*
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6964 = getelementptr inbounds %struct.GPR, %struct.GPR* %6963, i32 0, i32 1
  %6965 = getelementptr inbounds %struct.Reg, %struct.Reg* %6964, i32 0, i32 0
  %RAX.i861 = bitcast %union.anon* %6965 to i64*
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6967 = getelementptr inbounds %struct.GPR, %struct.GPR* %6966, i32 0, i32 5
  %6968 = getelementptr inbounds %struct.Reg, %struct.Reg* %6967, i32 0, i32 0
  %RCX.i862 = bitcast %union.anon* %6968 to i64*
  %6969 = load i64, i64* %RAX.i861
  %6970 = mul i64 %6969, 4
  %6971 = add i64 %6970, 9047232
  %6972 = load i64, i64* %PC.i860
  %6973 = add i64 %6972, 7
  store i64 %6973, i64* %PC.i860
  %6974 = inttoptr i64 %6971 to i32*
  %6975 = load i32, i32* %6974
  %6976 = zext i32 %6975 to i64
  store i64 %6976, i64* %RCX.i862, align 8
  store %struct.Memory* %loadMem_40be50, %struct.Memory** %MEMORY
  %loadMem_40be57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 33
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %6979 to i64*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 5
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RCX.i859 = bitcast %union.anon* %6982 to i64*
  %6983 = load i64, i64* %RCX.i859
  %6984 = load i64, i64* %PC.i858
  %6985 = add i64 %6984, 7
  store i64 %6985, i64* %PC.i858
  %6986 = trunc i64 %6983 to i32
  %6987 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %6988 = xor i32 %6987, %6986
  %6989 = zext i32 %6988 to i64
  store i64 %6989, i64* %RCX.i859, align 8
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6990, align 1
  %6991 = and i32 %6988, 255
  %6992 = call i32 @llvm.ctpop.i32(i32 %6991)
  %6993 = trunc i32 %6992 to i8
  %6994 = and i8 %6993, 1
  %6995 = xor i8 %6994, 1
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6995, i8* %6996, align 1
  %6997 = icmp eq i32 %6988, 0
  %6998 = zext i1 %6997 to i8
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6998, i8* %6999, align 1
  %7000 = lshr i32 %6988, 31
  %7001 = trunc i32 %7000 to i8
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7001, i8* %7002, align 1
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7003, align 1
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7004, align 1
  store %struct.Memory* %loadMem_40be57, %struct.Memory** %MEMORY
  %loadMem_40be5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7006 = getelementptr inbounds %struct.GPR, %struct.GPR* %7005, i32 0, i32 33
  %7007 = getelementptr inbounds %struct.Reg, %struct.Reg* %7006, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %7007 to i64*
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7009 = getelementptr inbounds %struct.GPR, %struct.GPR* %7008, i32 0, i32 5
  %7010 = getelementptr inbounds %struct.Reg, %struct.Reg* %7009, i32 0, i32 0
  %ECX.i857 = bitcast %union.anon* %7010 to i32*
  %7011 = load i32, i32* %ECX.i857
  %7012 = zext i32 %7011 to i64
  %7013 = load i64, i64* %PC.i856
  %7014 = add i64 %7013, 7
  store i64 %7014, i64* %PC.i856
  store i32 %7011, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40be5e, %struct.Memory** %MEMORY
  %loadMem_40be65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7016 = getelementptr inbounds %struct.GPR, %struct.GPR* %7015, i32 0, i32 33
  %7017 = getelementptr inbounds %struct.Reg, %struct.Reg* %7016, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %7017 to i64*
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7019 = getelementptr inbounds %struct.GPR, %struct.GPR* %7018, i32 0, i32 1
  %7020 = getelementptr inbounds %struct.Reg, %struct.Reg* %7019, i32 0, i32 0
  %RAX.i854 = bitcast %union.anon* %7020 to i64*
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7022 = getelementptr inbounds %struct.GPR, %struct.GPR* %7021, i32 0, i32 15
  %7023 = getelementptr inbounds %struct.Reg, %struct.Reg* %7022, i32 0, i32 0
  %RBP.i855 = bitcast %union.anon* %7023 to i64*
  %7024 = load i64, i64* %RBP.i855
  %7025 = sub i64 %7024, 24
  %7026 = load i64, i64* %PC.i853
  %7027 = add i64 %7026, 4
  store i64 %7027, i64* %PC.i853
  %7028 = inttoptr i64 %7025 to i32*
  %7029 = load i32, i32* %7028
  %7030 = sext i32 %7029 to i64
  store i64 %7030, i64* %RAX.i854, align 8
  store %struct.Memory* %loadMem_40be65, %struct.Memory** %MEMORY
  %loadMem_40be69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 33
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %7033 to i64*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 1
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RAX.i852 = bitcast %union.anon* %7036 to i64*
  %7037 = load i64, i64* %RAX.i852
  %7038 = mul i64 %7037, 4
  %7039 = add i64 %7038, 8807744
  %7040 = load i64, i64* %PC.i851
  %7041 = add i64 %7040, 11
  store i64 %7041, i64* %PC.i851
  %7042 = inttoptr i64 %7039 to i32*
  store i32 1, i32* %7042
  store %struct.Memory* %loadMem_40be69, %struct.Memory** %MEMORY
  %loadMem_40be74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7044 = getelementptr inbounds %struct.GPR, %struct.GPR* %7043, i32 0, i32 33
  %7045 = getelementptr inbounds %struct.Reg, %struct.Reg* %7044, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %7045 to i64*
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 1
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %RAX.i849 = bitcast %union.anon* %7048 to i64*
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 15
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %7051 to i64*
  %7052 = load i64, i64* %RBP.i850
  %7053 = sub i64 %7052, 20
  %7054 = load i64, i64* %PC.i848
  %7055 = add i64 %7054, 4
  store i64 %7055, i64* %PC.i848
  %7056 = inttoptr i64 %7053 to i32*
  %7057 = load i32, i32* %7056
  %7058 = sext i32 %7057 to i64
  store i64 %7058, i64* %RAX.i849, align 8
  store %struct.Memory* %loadMem_40be74, %struct.Memory** %MEMORY
  %loadMem_40be78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 33
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %7061 to i64*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 1
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %RAX.i847 = bitcast %union.anon* %7064 to i64*
  %7065 = load i64, i64* %RAX.i847
  %7066 = mul i64 %7065, 4
  %7067 = add i64 %7066, 8807744
  %7068 = load i64, i64* %PC.i846
  %7069 = add i64 %7068, 11
  store i64 %7069, i64* %PC.i846
  %7070 = inttoptr i64 %7067 to i32*
  store i32 13, i32* %7070
  store %struct.Memory* %loadMem_40be78, %struct.Memory** %MEMORY
  %loadMem_40be83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7072 = getelementptr inbounds %struct.GPR, %struct.GPR* %7071, i32 0, i32 33
  %7073 = getelementptr inbounds %struct.Reg, %struct.Reg* %7072, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %7073 to i64*
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7075 = getelementptr inbounds %struct.GPR, %struct.GPR* %7074, i32 0, i32 1
  %7076 = getelementptr inbounds %struct.Reg, %struct.Reg* %7075, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %7076 to i64*
  %7077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7078 = getelementptr inbounds %struct.GPR, %struct.GPR* %7077, i32 0, i32 15
  %7079 = getelementptr inbounds %struct.Reg, %struct.Reg* %7078, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %7079 to i64*
  %7080 = load i64, i64* %RBP.i845
  %7081 = sub i64 %7080, 24
  %7082 = load i64, i64* %PC.i843
  %7083 = add i64 %7082, 4
  store i64 %7083, i64* %PC.i843
  %7084 = inttoptr i64 %7081 to i32*
  %7085 = load i32, i32* %7084
  %7086 = sext i32 %7085 to i64
  store i64 %7086, i64* %RAX.i844, align 8
  store %struct.Memory* %loadMem_40be83, %struct.Memory** %MEMORY
  %loadMem_40be87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7088 = getelementptr inbounds %struct.GPR, %struct.GPR* %7087, i32 0, i32 33
  %7089 = getelementptr inbounds %struct.Reg, %struct.Reg* %7088, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %7089 to i64*
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7091 = getelementptr inbounds %struct.GPR, %struct.GPR* %7090, i32 0, i32 1
  %7092 = getelementptr inbounds %struct.Reg, %struct.Reg* %7091, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %7092 to i64*
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 5
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %RCX.i842 = bitcast %union.anon* %7095 to i64*
  %7096 = load i64, i64* %RAX.i841
  %7097 = mul i64 %7096, 4
  %7098 = add i64 %7097, 8922032
  %7099 = load i64, i64* %PC.i840
  %7100 = add i64 %7099, 7
  store i64 %7100, i64* %PC.i840
  %7101 = inttoptr i64 %7098 to i32*
  %7102 = load i32, i32* %7101
  %7103 = zext i32 %7102 to i64
  store i64 %7103, i64* %RCX.i842, align 8
  store %struct.Memory* %loadMem_40be87, %struct.Memory** %MEMORY
  %loadMem_40be8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 33
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %7106 to i64*
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 5
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %7109 to i64*
  %7110 = load i64, i64* %RCX.i839
  %7111 = load i64, i64* %PC.i838
  %7112 = add i64 %7111, 3
  store i64 %7112, i64* %PC.i838
  %7113 = trunc i64 %7110 to i32
  %7114 = add i32 1, %7113
  %7115 = zext i32 %7114 to i64
  store i64 %7115, i64* %RCX.i839, align 8
  %7116 = icmp ult i32 %7114, %7113
  %7117 = icmp ult i32 %7114, 1
  %7118 = or i1 %7116, %7117
  %7119 = zext i1 %7118 to i8
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7119, i8* %7120, align 1
  %7121 = and i32 %7114, 255
  %7122 = call i32 @llvm.ctpop.i32(i32 %7121)
  %7123 = trunc i32 %7122 to i8
  %7124 = and i8 %7123, 1
  %7125 = xor i8 %7124, 1
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7125, i8* %7126, align 1
  %7127 = xor i64 1, %7110
  %7128 = trunc i64 %7127 to i32
  %7129 = xor i32 %7128, %7114
  %7130 = lshr i32 %7129, 4
  %7131 = trunc i32 %7130 to i8
  %7132 = and i8 %7131, 1
  %7133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7132, i8* %7133, align 1
  %7134 = icmp eq i32 %7114, 0
  %7135 = zext i1 %7134 to i8
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7135, i8* %7136, align 1
  %7137 = lshr i32 %7114, 31
  %7138 = trunc i32 %7137 to i8
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7138, i8* %7139, align 1
  %7140 = lshr i32 %7113, 31
  %7141 = xor i32 %7137, %7140
  %7142 = add i32 %7141, %7137
  %7143 = icmp eq i32 %7142, 2
  %7144 = zext i1 %7143 to i8
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7144, i8* %7145, align 1
  store %struct.Memory* %loadMem_40be8e, %struct.Memory** %MEMORY
  %loadMem_40be91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7147 = getelementptr inbounds %struct.GPR, %struct.GPR* %7146, i32 0, i32 33
  %7148 = getelementptr inbounds %struct.Reg, %struct.Reg* %7147, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %7148 to i64*
  %7149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7150 = getelementptr inbounds %struct.GPR, %struct.GPR* %7149, i32 0, i32 5
  %7151 = getelementptr inbounds %struct.Reg, %struct.Reg* %7150, i32 0, i32 0
  %ECX.i836 = bitcast %union.anon* %7151 to i32*
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7153 = getelementptr inbounds %struct.GPR, %struct.GPR* %7152, i32 0, i32 1
  %7154 = getelementptr inbounds %struct.Reg, %struct.Reg* %7153, i32 0, i32 0
  %RAX.i837 = bitcast %union.anon* %7154 to i64*
  %7155 = load i64, i64* %RAX.i837
  %7156 = mul i64 %7155, 4
  %7157 = add i64 %7156, 8922032
  %7158 = load i32, i32* %ECX.i836
  %7159 = zext i32 %7158 to i64
  %7160 = load i64, i64* %PC.i835
  %7161 = add i64 %7160, 7
  store i64 %7161, i64* %PC.i835
  %7162 = inttoptr i64 %7157 to i32*
  store i32 %7158, i32* %7162
  store %struct.Memory* %loadMem_40be91, %struct.Memory** %MEMORY
  %loadMem_40be98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 33
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %7165 to i64*
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 1
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %RAX.i833 = bitcast %union.anon* %7168 to i64*
  %7169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7170 = getelementptr inbounds %struct.GPR, %struct.GPR* %7169, i32 0, i32 15
  %7171 = getelementptr inbounds %struct.Reg, %struct.Reg* %7170, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %7171 to i64*
  %7172 = load i64, i64* %RBP.i834
  %7173 = sub i64 %7172, 20
  %7174 = load i64, i64* %PC.i832
  %7175 = add i64 %7174, 4
  store i64 %7175, i64* %PC.i832
  %7176 = inttoptr i64 %7173 to i32*
  %7177 = load i32, i32* %7176
  %7178 = sext i32 %7177 to i64
  store i64 %7178, i64* %RAX.i833, align 8
  store %struct.Memory* %loadMem_40be98, %struct.Memory** %MEMORY
  %loadMem_40be9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7180 = getelementptr inbounds %struct.GPR, %struct.GPR* %7179, i32 0, i32 33
  %7181 = getelementptr inbounds %struct.Reg, %struct.Reg* %7180, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %7181 to i64*
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7183 = getelementptr inbounds %struct.GPR, %struct.GPR* %7182, i32 0, i32 1
  %7184 = getelementptr inbounds %struct.Reg, %struct.Reg* %7183, i32 0, i32 0
  %RAX.i830 = bitcast %union.anon* %7184 to i64*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7186 = getelementptr inbounds %struct.GPR, %struct.GPR* %7185, i32 0, i32 5
  %7187 = getelementptr inbounds %struct.Reg, %struct.Reg* %7186, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %7187 to i64*
  %7188 = load i64, i64* %RAX.i830
  %7189 = mul i64 %7188, 4
  %7190 = add i64 %7189, 8922032
  %7191 = load i64, i64* %PC.i829
  %7192 = add i64 %7191, 7
  store i64 %7192, i64* %PC.i829
  %7193 = inttoptr i64 %7190 to i32*
  %7194 = load i32, i32* %7193
  %7195 = zext i32 %7194 to i64
  store i64 %7195, i64* %RCX.i831, align 8
  store %struct.Memory* %loadMem_40be9c, %struct.Memory** %MEMORY
  %loadMem_40bea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7197 = getelementptr inbounds %struct.GPR, %struct.GPR* %7196, i32 0, i32 33
  %7198 = getelementptr inbounds %struct.Reg, %struct.Reg* %7197, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %7198 to i64*
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7200 = getelementptr inbounds %struct.GPR, %struct.GPR* %7199, i32 0, i32 5
  %7201 = getelementptr inbounds %struct.Reg, %struct.Reg* %7200, i32 0, i32 0
  %RCX.i828 = bitcast %union.anon* %7201 to i64*
  %7202 = load i64, i64* %RCX.i828
  %7203 = load i64, i64* %PC.i827
  %7204 = add i64 %7203, 3
  store i64 %7204, i64* %PC.i827
  %7205 = trunc i64 %7202 to i32
  %7206 = add i32 1, %7205
  %7207 = zext i32 %7206 to i64
  store i64 %7207, i64* %RCX.i828, align 8
  %7208 = icmp ult i32 %7206, %7205
  %7209 = icmp ult i32 %7206, 1
  %7210 = or i1 %7208, %7209
  %7211 = zext i1 %7210 to i8
  %7212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7211, i8* %7212, align 1
  %7213 = and i32 %7206, 255
  %7214 = call i32 @llvm.ctpop.i32(i32 %7213)
  %7215 = trunc i32 %7214 to i8
  %7216 = and i8 %7215, 1
  %7217 = xor i8 %7216, 1
  %7218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7217, i8* %7218, align 1
  %7219 = xor i64 1, %7202
  %7220 = trunc i64 %7219 to i32
  %7221 = xor i32 %7220, %7206
  %7222 = lshr i32 %7221, 4
  %7223 = trunc i32 %7222 to i8
  %7224 = and i8 %7223, 1
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7224, i8* %7225, align 1
  %7226 = icmp eq i32 %7206, 0
  %7227 = zext i1 %7226 to i8
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7227, i8* %7228, align 1
  %7229 = lshr i32 %7206, 31
  %7230 = trunc i32 %7229 to i8
  %7231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7230, i8* %7231, align 1
  %7232 = lshr i32 %7205, 31
  %7233 = xor i32 %7229, %7232
  %7234 = add i32 %7233, %7229
  %7235 = icmp eq i32 %7234, 2
  %7236 = zext i1 %7235 to i8
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7236, i8* %7237, align 1
  store %struct.Memory* %loadMem_40bea3, %struct.Memory** %MEMORY
  %loadMem_40bea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7239 = getelementptr inbounds %struct.GPR, %struct.GPR* %7238, i32 0, i32 33
  %7240 = getelementptr inbounds %struct.Reg, %struct.Reg* %7239, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %7240 to i64*
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7242 = getelementptr inbounds %struct.GPR, %struct.GPR* %7241, i32 0, i32 5
  %7243 = getelementptr inbounds %struct.Reg, %struct.Reg* %7242, i32 0, i32 0
  %ECX.i825 = bitcast %union.anon* %7243 to i32*
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7245 = getelementptr inbounds %struct.GPR, %struct.GPR* %7244, i32 0, i32 1
  %7246 = getelementptr inbounds %struct.Reg, %struct.Reg* %7245, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %7246 to i64*
  %7247 = load i64, i64* %RAX.i826
  %7248 = mul i64 %7247, 4
  %7249 = add i64 %7248, 8922032
  %7250 = load i32, i32* %ECX.i825
  %7251 = zext i32 %7250 to i64
  %7252 = load i64, i64* %PC.i824
  %7253 = add i64 %7252, 7
  store i64 %7253, i64* %PC.i824
  %7254 = inttoptr i64 %7249 to i32*
  store i32 %7250, i32* %7254
  store %struct.Memory* %loadMem_40bea6, %struct.Memory** %MEMORY
  %loadMem_40bead = load %struct.Memory*, %struct.Memory** %MEMORY
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7256 = getelementptr inbounds %struct.GPR, %struct.GPR* %7255, i32 0, i32 33
  %7257 = getelementptr inbounds %struct.Reg, %struct.Reg* %7256, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %7257 to i64*
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7259 = getelementptr inbounds %struct.GPR, %struct.GPR* %7258, i32 0, i32 5
  %7260 = getelementptr inbounds %struct.Reg, %struct.Reg* %7259, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %7260 to i64*
  %7261 = load i64, i64* %PC.i822
  %7262 = add i64 %7261, 7
  store i64 %7262, i64* %PC.i822
  %7263 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %7264 = zext i32 %7263 to i64
  store i64 %7264, i64* %RCX.i823, align 8
  store %struct.Memory* %loadMem_40bead, %struct.Memory** %MEMORY
  %loadMem_40beb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7266 = getelementptr inbounds %struct.GPR, %struct.GPR* %7265, i32 0, i32 33
  %7267 = getelementptr inbounds %struct.Reg, %struct.Reg* %7266, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %7267 to i64*
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 5
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %RCX.i821 = bitcast %union.anon* %7270 to i64*
  %7271 = load i64, i64* %RCX.i821
  %7272 = load i64, i64* %PC.i820
  %7273 = add i64 %7272, 3
  store i64 %7273, i64* %PC.i820
  %7274 = xor i64 1, %7271
  %7275 = trunc i64 %7274 to i32
  %7276 = and i64 %7274, 4294967295
  store i64 %7276, i64* %RCX.i821, align 8
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7277, align 1
  %7278 = and i32 %7275, 255
  %7279 = call i32 @llvm.ctpop.i32(i32 %7278)
  %7280 = trunc i32 %7279 to i8
  %7281 = and i8 %7280, 1
  %7282 = xor i8 %7281, 1
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7282, i8* %7283, align 1
  %7284 = icmp eq i32 %7275, 0
  %7285 = zext i1 %7284 to i8
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7285, i8* %7286, align 1
  %7287 = lshr i32 %7275, 31
  %7288 = trunc i32 %7287 to i8
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7288, i8* %7289, align 1
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7290, align 1
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7291, align 1
  store %struct.Memory* %loadMem_40beb4, %struct.Memory** %MEMORY
  %loadMem_40beb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7293 = getelementptr inbounds %struct.GPR, %struct.GPR* %7292, i32 0, i32 33
  %7294 = getelementptr inbounds %struct.Reg, %struct.Reg* %7293, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %7294 to i64*
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 5
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %ECX.i819 = bitcast %union.anon* %7297 to i32*
  %7298 = load i32, i32* %ECX.i819
  %7299 = zext i32 %7298 to i64
  %7300 = load i64, i64* %PC.i818
  %7301 = add i64 %7300, 7
  store i64 %7301, i64* %PC.i818
  store i32 %7298, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40beb7, %struct.Memory** %MEMORY
  %loadMem_40bebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7303 = getelementptr inbounds %struct.GPR, %struct.GPR* %7302, i32 0, i32 33
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %7304 to i64*
  %7305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7306 = getelementptr inbounds %struct.GPR, %struct.GPR* %7305, i32 0, i32 5
  %7307 = getelementptr inbounds %struct.Reg, %struct.Reg* %7306, i32 0, i32 0
  %RCX.i817 = bitcast %union.anon* %7307 to i64*
  %7308 = load i64, i64* %PC.i816
  %7309 = add i64 %7308, 7
  store i64 %7309, i64* %PC.i816
  %7310 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %7311 = zext i32 %7310 to i64
  store i64 %7311, i64* %RCX.i817, align 8
  store %struct.Memory* %loadMem_40bebe, %struct.Memory** %MEMORY
  %loadMem_40bec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7313 = getelementptr inbounds %struct.GPR, %struct.GPR* %7312, i32 0, i32 33
  %7314 = getelementptr inbounds %struct.Reg, %struct.Reg* %7313, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %7314 to i64*
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 5
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %RCX.i815 = bitcast %union.anon* %7317 to i64*
  %7318 = load i64, i64* %RCX.i815
  %7319 = load i64, i64* %PC.i814
  %7320 = add i64 %7319, 3
  store i64 %7320, i64* %PC.i814
  %7321 = trunc i64 %7318 to i32
  %7322 = add i32 1, %7321
  %7323 = zext i32 %7322 to i64
  store i64 %7323, i64* %RCX.i815, align 8
  %7324 = icmp ult i32 %7322, %7321
  %7325 = icmp ult i32 %7322, 1
  %7326 = or i1 %7324, %7325
  %7327 = zext i1 %7326 to i8
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7327, i8* %7328, align 1
  %7329 = and i32 %7322, 255
  %7330 = call i32 @llvm.ctpop.i32(i32 %7329)
  %7331 = trunc i32 %7330 to i8
  %7332 = and i8 %7331, 1
  %7333 = xor i8 %7332, 1
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7333, i8* %7334, align 1
  %7335 = xor i64 1, %7318
  %7336 = trunc i64 %7335 to i32
  %7337 = xor i32 %7336, %7322
  %7338 = lshr i32 %7337, 4
  %7339 = trunc i32 %7338 to i8
  %7340 = and i8 %7339, 1
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7340, i8* %7341, align 1
  %7342 = icmp eq i32 %7322, 0
  %7343 = zext i1 %7342 to i8
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7343, i8* %7344, align 1
  %7345 = lshr i32 %7322, 31
  %7346 = trunc i32 %7345 to i8
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7346, i8* %7347, align 1
  %7348 = lshr i32 %7321, 31
  %7349 = xor i32 %7345, %7348
  %7350 = add i32 %7349, %7345
  %7351 = icmp eq i32 %7350, 2
  %7352 = zext i1 %7351 to i8
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7352, i8* %7353, align 1
  store %struct.Memory* %loadMem_40bec5, %struct.Memory** %MEMORY
  %loadMem_40bec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7355 = getelementptr inbounds %struct.GPR, %struct.GPR* %7354, i32 0, i32 33
  %7356 = getelementptr inbounds %struct.Reg, %struct.Reg* %7355, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %7356 to i64*
  %7357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7358 = getelementptr inbounds %struct.GPR, %struct.GPR* %7357, i32 0, i32 5
  %7359 = getelementptr inbounds %struct.Reg, %struct.Reg* %7358, i32 0, i32 0
  %ECX.i813 = bitcast %union.anon* %7359 to i32*
  %7360 = load i32, i32* %ECX.i813
  %7361 = zext i32 %7360 to i64
  %7362 = load i64, i64* %PC.i812
  %7363 = add i64 %7362, 7
  store i64 %7363, i64* %PC.i812
  store i32 %7360, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40bec8, %struct.Memory** %MEMORY
  %loadMem_40becf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7365 = getelementptr inbounds %struct.GPR, %struct.GPR* %7364, i32 0, i32 33
  %7366 = getelementptr inbounds %struct.Reg, %struct.Reg* %7365, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %7366 to i64*
  %7367 = load i64, i64* %PC.i811
  %7368 = add i64 %7367, 2239
  %7369 = load i64, i64* %PC.i811
  %7370 = add i64 %7369, 5
  store i64 %7370, i64* %PC.i811
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7368, i64* %7371, align 8
  store %struct.Memory* %loadMem_40becf, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40bed4:                                  ; preds = %block_.L_40bb70
  %loadMem_40bed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7373 = getelementptr inbounds %struct.GPR, %struct.GPR* %7372, i32 0, i32 33
  %7374 = getelementptr inbounds %struct.Reg, %struct.Reg* %7373, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %7374 to i64*
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 1
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %7377 to i64*
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 15
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %RBP.i810 = bitcast %union.anon* %7380 to i64*
  %7381 = load i64, i64* %RBP.i810
  %7382 = sub i64 %7381, 20
  %7383 = load i64, i64* %PC.i808
  %7384 = add i64 %7383, 4
  store i64 %7384, i64* %PC.i808
  %7385 = inttoptr i64 %7382 to i32*
  %7386 = load i32, i32* %7385
  %7387 = sext i32 %7386 to i64
  store i64 %7387, i64* %RAX.i809, align 8
  store %struct.Memory* %loadMem_40bed4, %struct.Memory** %MEMORY
  %loadMem_40bed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 33
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %7390 to i64*
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 1
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %RAX.i807 = bitcast %union.anon* %7393 to i64*
  %7394 = load i64, i64* %RAX.i807
  %7395 = mul i64 %7394, 4
  %7396 = add i64 %7395, 8807744
  %7397 = load i64, i64* %PC.i806
  %7398 = add i64 %7397, 8
  store i64 %7398, i64* %PC.i806
  %7399 = inttoptr i64 %7396 to i32*
  %7400 = load i32, i32* %7399
  %7401 = sub i32 %7400, 2
  %7402 = icmp ult i32 %7400, 2
  %7403 = zext i1 %7402 to i8
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7403, i8* %7404, align 1
  %7405 = and i32 %7401, 255
  %7406 = call i32 @llvm.ctpop.i32(i32 %7405)
  %7407 = trunc i32 %7406 to i8
  %7408 = and i8 %7407, 1
  %7409 = xor i8 %7408, 1
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7409, i8* %7410, align 1
  %7411 = xor i32 %7400, 2
  %7412 = xor i32 %7411, %7401
  %7413 = lshr i32 %7412, 4
  %7414 = trunc i32 %7413 to i8
  %7415 = and i8 %7414, 1
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7415, i8* %7416, align 1
  %7417 = icmp eq i32 %7401, 0
  %7418 = zext i1 %7417 to i8
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7418, i8* %7419, align 1
  %7420 = lshr i32 %7401, 31
  %7421 = trunc i32 %7420 to i8
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7421, i8* %7422, align 1
  %7423 = lshr i32 %7400, 31
  %7424 = xor i32 %7420, %7423
  %7425 = add i32 %7424, %7423
  %7426 = icmp eq i32 %7425, 2
  %7427 = zext i1 %7426 to i8
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7427, i8* %7428, align 1
  store %struct.Memory* %loadMem_40bed8, %struct.Memory** %MEMORY
  %loadMem_40bee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 33
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %7431 to i64*
  %7432 = load i64, i64* %PC.i805
  %7433 = add i64 %7432, 859
  %7434 = load i64, i64* %PC.i805
  %7435 = add i64 %7434, 6
  %7436 = load i64, i64* %PC.i805
  %7437 = add i64 %7436, 6
  store i64 %7437, i64* %PC.i805
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7439 = load i8, i8* %7438, align 1
  %7440 = icmp eq i8 %7439, 0
  %7441 = zext i1 %7440 to i8
  store i8 %7441, i8* %BRANCH_TAKEN, align 1
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7443 = select i1 %7440, i64 %7433, i64 %7435
  store i64 %7443, i64* %7442, align 8
  store %struct.Memory* %loadMem_40bee0, %struct.Memory** %MEMORY
  %loadBr_40bee0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bee0 = icmp eq i8 %loadBr_40bee0, 1
  br i1 %cmpBr_40bee0, label %block_.L_40c23b, label %block_40bee6

block_40bee6:                                     ; preds = %block_.L_40bed4
  %loadMem_40bee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 33
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %7446 to i64*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7448 = getelementptr inbounds %struct.GPR, %struct.GPR* %7447, i32 0, i32 15
  %7449 = getelementptr inbounds %struct.Reg, %struct.Reg* %7448, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %7449 to i64*
  %7450 = load i64, i64* %RBP.i804
  %7451 = sub i64 %7450, 32
  %7452 = load i64, i64* %PC.i803
  %7453 = add i64 %7452, 4
  store i64 %7453, i64* %PC.i803
  %7454 = inttoptr i64 %7451 to i32*
  %7455 = load i32, i32* %7454
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7456, align 1
  %7457 = and i32 %7455, 255
  %7458 = call i32 @llvm.ctpop.i32(i32 %7457)
  %7459 = trunc i32 %7458 to i8
  %7460 = and i8 %7459, 1
  %7461 = xor i8 %7460, 1
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7461, i8* %7462, align 1
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7463, align 1
  %7464 = icmp eq i32 %7455, 0
  %7465 = zext i1 %7464 to i8
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7465, i8* %7466, align 1
  %7467 = lshr i32 %7455, 31
  %7468 = trunc i32 %7467 to i8
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7468, i8* %7469, align 1
  %7470 = lshr i32 %7455, 31
  %7471 = xor i32 %7467, %7470
  %7472 = add i32 %7471, %7470
  %7473 = icmp eq i32 %7472, 2
  %7474 = zext i1 %7473 to i8
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7474, i8* %7475, align 1
  store %struct.Memory* %loadMem_40bee6, %struct.Memory** %MEMORY
  %loadMem_40beea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7477 = getelementptr inbounds %struct.GPR, %struct.GPR* %7476, i32 0, i32 33
  %7478 = getelementptr inbounds %struct.Reg, %struct.Reg* %7477, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %7478 to i64*
  %7479 = load i64, i64* %PC.i802
  %7480 = add i64 %7479, 257
  %7481 = load i64, i64* %PC.i802
  %7482 = add i64 %7481, 6
  %7483 = load i64, i64* %PC.i802
  %7484 = add i64 %7483, 6
  store i64 %7484, i64* %PC.i802
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7486 = load i8, i8* %7485, align 1
  store i8 %7486, i8* %BRANCH_TAKEN, align 1
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7488 = icmp ne i8 %7486, 0
  %7489 = select i1 %7488, i64 %7480, i64 %7482
  store i64 %7489, i64* %7487, align 8
  store %struct.Memory* %loadMem_40beea, %struct.Memory** %MEMORY
  %loadBr_40beea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40beea = icmp eq i8 %loadBr_40beea, 1
  br i1 %cmpBr_40beea, label %block_.L_40bfeb, label %block_40bef0

block_40bef0:                                     ; preds = %block_40bee6
  %loadMem_40bef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 33
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %7492 to i64*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 1
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %7495 to i64*
  %7496 = load i64, i64* %PC.i800
  %7497 = add i64 %7496, 10
  store i64 %7497, i64* %PC.i800
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i801, align 8
  store %struct.Memory* %loadMem_40bef0, %struct.Memory** %MEMORY
  %loadMem_40befa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7499 = getelementptr inbounds %struct.GPR, %struct.GPR* %7498, i32 0, i32 33
  %7500 = getelementptr inbounds %struct.Reg, %struct.Reg* %7499, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %7500 to i64*
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7502 = getelementptr inbounds %struct.GPR, %struct.GPR* %7501, i32 0, i32 5
  %7503 = getelementptr inbounds %struct.Reg, %struct.Reg* %7502, i32 0, i32 0
  %RCX.i798 = bitcast %union.anon* %7503 to i64*
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7505 = getelementptr inbounds %struct.GPR, %struct.GPR* %7504, i32 0, i32 15
  %7506 = getelementptr inbounds %struct.Reg, %struct.Reg* %7505, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %7506 to i64*
  %7507 = load i64, i64* %RBP.i799
  %7508 = sub i64 %7507, 32
  %7509 = load i64, i64* %PC.i797
  %7510 = add i64 %7509, 3
  store i64 %7510, i64* %PC.i797
  %7511 = inttoptr i64 %7508 to i32*
  %7512 = load i32, i32* %7511
  %7513 = zext i32 %7512 to i64
  store i64 %7513, i64* %RCX.i798, align 8
  store %struct.Memory* %loadMem_40befa, %struct.Memory** %MEMORY
  %loadMem_40befd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 33
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 7
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %RDX.i795 = bitcast %union.anon* %7519 to i64*
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 15
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %7522 to i64*
  %7523 = load i64, i64* %RBP.i796
  %7524 = sub i64 %7523, 24
  %7525 = load i64, i64* %PC.i794
  %7526 = add i64 %7525, 4
  store i64 %7526, i64* %PC.i794
  %7527 = inttoptr i64 %7524 to i32*
  %7528 = load i32, i32* %7527
  %7529 = sext i32 %7528 to i64
  store i64 %7529, i64* %RDX.i795, align 8
  store %struct.Memory* %loadMem_40befd, %struct.Memory** %MEMORY
  %loadMem_40bf01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7531 = getelementptr inbounds %struct.GPR, %struct.GPR* %7530, i32 0, i32 33
  %7532 = getelementptr inbounds %struct.Reg, %struct.Reg* %7531, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %7532 to i64*
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7534 = getelementptr inbounds %struct.GPR, %struct.GPR* %7533, i32 0, i32 5
  %7535 = getelementptr inbounds %struct.Reg, %struct.Reg* %7534, i32 0, i32 0
  %ECX.i792 = bitcast %union.anon* %7535 to i32*
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7537 = getelementptr inbounds %struct.GPR, %struct.GPR* %7536, i32 0, i32 7
  %7538 = getelementptr inbounds %struct.Reg, %struct.Reg* %7537, i32 0, i32 0
  %RDX.i793 = bitcast %union.anon* %7538 to i64*
  %7539 = load i64, i64* %RDX.i793
  %7540 = mul i64 %7539, 4
  %7541 = add i64 %7540, 8807744
  %7542 = load i32, i32* %ECX.i792
  %7543 = zext i32 %7542 to i64
  %7544 = load i64, i64* %PC.i791
  %7545 = add i64 %7544, 7
  store i64 %7545, i64* %PC.i791
  %7546 = inttoptr i64 %7541 to i32*
  store i32 %7542, i32* %7546
  store %struct.Memory* %loadMem_40bf01, %struct.Memory** %MEMORY
  %loadMem_40bf08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 33
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %7549 to i64*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 7
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %RDX.i789 = bitcast %union.anon* %7552 to i64*
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7554 = getelementptr inbounds %struct.GPR, %struct.GPR* %7553, i32 0, i32 15
  %7555 = getelementptr inbounds %struct.Reg, %struct.Reg* %7554, i32 0, i32 0
  %RBP.i790 = bitcast %union.anon* %7555 to i64*
  %7556 = load i64, i64* %RBP.i790
  %7557 = sub i64 %7556, 20
  %7558 = load i64, i64* %PC.i788
  %7559 = add i64 %7558, 4
  store i64 %7559, i64* %PC.i788
  %7560 = inttoptr i64 %7557 to i32*
  %7561 = load i32, i32* %7560
  %7562 = sext i32 %7561 to i64
  store i64 %7562, i64* %RDX.i789, align 8
  store %struct.Memory* %loadMem_40bf08, %struct.Memory** %MEMORY
  %loadMem_40bf0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 33
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 7
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RDX.i787 = bitcast %union.anon* %7568 to i64*
  %7569 = load i64, i64* %RDX.i787
  %7570 = mul i64 %7569, 4
  %7571 = add i64 %7570, 8807744
  %7572 = load i64, i64* %PC.i786
  %7573 = add i64 %7572, 11
  store i64 %7573, i64* %PC.i786
  %7574 = inttoptr i64 %7571 to i32*
  store i32 13, i32* %7574
  store %struct.Memory* %loadMem_40bf0c, %struct.Memory** %MEMORY
  %loadMem_40bf17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 33
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %7577 to i64*
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7579 = getelementptr inbounds %struct.GPR, %struct.GPR* %7578, i32 0, i32 7
  %7580 = getelementptr inbounds %struct.Reg, %struct.Reg* %7579, i32 0, i32 0
  %RDX.i784 = bitcast %union.anon* %7580 to i64*
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 15
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %7583 to i64*
  %7584 = load i64, i64* %RBP.i785
  %7585 = sub i64 %7584, 24
  %7586 = load i64, i64* %PC.i783
  %7587 = add i64 %7586, 4
  store i64 %7587, i64* %PC.i783
  %7588 = inttoptr i64 %7585 to i32*
  %7589 = load i32, i32* %7588
  %7590 = sext i32 %7589 to i64
  store i64 %7590, i64* %RDX.i784, align 8
  store %struct.Memory* %loadMem_40bf17, %struct.Memory** %MEMORY
  %loadMem_40bf1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 33
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %7593 to i64*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7595 = getelementptr inbounds %struct.GPR, %struct.GPR* %7594, i32 0, i32 5
  %7596 = getelementptr inbounds %struct.Reg, %struct.Reg* %7595, i32 0, i32 0
  %RCX.i781 = bitcast %union.anon* %7596 to i64*
  %7597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7598 = getelementptr inbounds %struct.GPR, %struct.GPR* %7597, i32 0, i32 7
  %7599 = getelementptr inbounds %struct.Reg, %struct.Reg* %7598, i32 0, i32 0
  %RDX.i782 = bitcast %union.anon* %7599 to i64*
  %7600 = load i64, i64* %RDX.i782
  %7601 = mul i64 %7600, 4
  %7602 = add i64 %7601, 8922032
  %7603 = load i64, i64* %PC.i780
  %7604 = add i64 %7603, 7
  store i64 %7604, i64* %PC.i780
  %7605 = inttoptr i64 %7602 to i32*
  %7606 = load i32, i32* %7605
  %7607 = zext i32 %7606 to i64
  store i64 %7607, i64* %RCX.i781, align 8
  store %struct.Memory* %loadMem_40bf1b, %struct.Memory** %MEMORY
  %loadMem_40bf22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7609 = getelementptr inbounds %struct.GPR, %struct.GPR* %7608, i32 0, i32 33
  %7610 = getelementptr inbounds %struct.Reg, %struct.Reg* %7609, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %7610 to i64*
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7612 = getelementptr inbounds %struct.GPR, %struct.GPR* %7611, i32 0, i32 5
  %7613 = getelementptr inbounds %struct.Reg, %struct.Reg* %7612, i32 0, i32 0
  %RCX.i779 = bitcast %union.anon* %7613 to i64*
  %7614 = load i64, i64* %RCX.i779
  %7615 = load i64, i64* %PC.i778
  %7616 = add i64 %7615, 3
  store i64 %7616, i64* %PC.i778
  %7617 = trunc i64 %7614 to i32
  %7618 = add i32 1, %7617
  %7619 = zext i32 %7618 to i64
  store i64 %7619, i64* %RCX.i779, align 8
  %7620 = icmp ult i32 %7618, %7617
  %7621 = icmp ult i32 %7618, 1
  %7622 = or i1 %7620, %7621
  %7623 = zext i1 %7622 to i8
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7623, i8* %7624, align 1
  %7625 = and i32 %7618, 255
  %7626 = call i32 @llvm.ctpop.i32(i32 %7625)
  %7627 = trunc i32 %7626 to i8
  %7628 = and i8 %7627, 1
  %7629 = xor i8 %7628, 1
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7629, i8* %7630, align 1
  %7631 = xor i64 1, %7614
  %7632 = trunc i64 %7631 to i32
  %7633 = xor i32 %7632, %7618
  %7634 = lshr i32 %7633, 4
  %7635 = trunc i32 %7634 to i8
  %7636 = and i8 %7635, 1
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7636, i8* %7637, align 1
  %7638 = icmp eq i32 %7618, 0
  %7639 = zext i1 %7638 to i8
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7639, i8* %7640, align 1
  %7641 = lshr i32 %7618, 31
  %7642 = trunc i32 %7641 to i8
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7642, i8* %7643, align 1
  %7644 = lshr i32 %7617, 31
  %7645 = xor i32 %7641, %7644
  %7646 = add i32 %7645, %7641
  %7647 = icmp eq i32 %7646, 2
  %7648 = zext i1 %7647 to i8
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7648, i8* %7649, align 1
  store %struct.Memory* %loadMem_40bf22, %struct.Memory** %MEMORY
  %loadMem_40bf25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7651 = getelementptr inbounds %struct.GPR, %struct.GPR* %7650, i32 0, i32 33
  %7652 = getelementptr inbounds %struct.Reg, %struct.Reg* %7651, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %7652 to i64*
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7654 = getelementptr inbounds %struct.GPR, %struct.GPR* %7653, i32 0, i32 5
  %7655 = getelementptr inbounds %struct.Reg, %struct.Reg* %7654, i32 0, i32 0
  %ECX.i776 = bitcast %union.anon* %7655 to i32*
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7657 = getelementptr inbounds %struct.GPR, %struct.GPR* %7656, i32 0, i32 7
  %7658 = getelementptr inbounds %struct.Reg, %struct.Reg* %7657, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %7658 to i64*
  %7659 = load i64, i64* %RDX.i777
  %7660 = mul i64 %7659, 4
  %7661 = add i64 %7660, 8922032
  %7662 = load i32, i32* %ECX.i776
  %7663 = zext i32 %7662 to i64
  %7664 = load i64, i64* %PC.i775
  %7665 = add i64 %7664, 7
  store i64 %7665, i64* %PC.i775
  %7666 = inttoptr i64 %7661 to i32*
  store i32 %7662, i32* %7666
  store %struct.Memory* %loadMem_40bf25, %struct.Memory** %MEMORY
  %loadMem_40bf2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7668 = getelementptr inbounds %struct.GPR, %struct.GPR* %7667, i32 0, i32 33
  %7669 = getelementptr inbounds %struct.Reg, %struct.Reg* %7668, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %7669 to i64*
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7671 = getelementptr inbounds %struct.GPR, %struct.GPR* %7670, i32 0, i32 7
  %7672 = getelementptr inbounds %struct.Reg, %struct.Reg* %7671, i32 0, i32 0
  %RDX.i773 = bitcast %union.anon* %7672 to i64*
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7674 = getelementptr inbounds %struct.GPR, %struct.GPR* %7673, i32 0, i32 15
  %7675 = getelementptr inbounds %struct.Reg, %struct.Reg* %7674, i32 0, i32 0
  %RBP.i774 = bitcast %union.anon* %7675 to i64*
  %7676 = load i64, i64* %RBP.i774
  %7677 = sub i64 %7676, 20
  %7678 = load i64, i64* %PC.i772
  %7679 = add i64 %7678, 4
  store i64 %7679, i64* %PC.i772
  %7680 = inttoptr i64 %7677 to i32*
  %7681 = load i32, i32* %7680
  %7682 = sext i32 %7681 to i64
  store i64 %7682, i64* %RDX.i773, align 8
  store %struct.Memory* %loadMem_40bf2c, %struct.Memory** %MEMORY
  %loadMem_40bf30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7684 = getelementptr inbounds %struct.GPR, %struct.GPR* %7683, i32 0, i32 33
  %7685 = getelementptr inbounds %struct.Reg, %struct.Reg* %7684, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %7685 to i64*
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7687 = getelementptr inbounds %struct.GPR, %struct.GPR* %7686, i32 0, i32 5
  %7688 = getelementptr inbounds %struct.Reg, %struct.Reg* %7687, i32 0, i32 0
  %RCX.i770 = bitcast %union.anon* %7688 to i64*
  %7689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7690 = getelementptr inbounds %struct.GPR, %struct.GPR* %7689, i32 0, i32 7
  %7691 = getelementptr inbounds %struct.Reg, %struct.Reg* %7690, i32 0, i32 0
  %RDX.i771 = bitcast %union.anon* %7691 to i64*
  %7692 = load i64, i64* %RDX.i771
  %7693 = mul i64 %7692, 4
  %7694 = add i64 %7693, 8922032
  %7695 = load i64, i64* %PC.i769
  %7696 = add i64 %7695, 7
  store i64 %7696, i64* %PC.i769
  %7697 = inttoptr i64 %7694 to i32*
  %7698 = load i32, i32* %7697
  %7699 = zext i32 %7698 to i64
  store i64 %7699, i64* %RCX.i770, align 8
  store %struct.Memory* %loadMem_40bf30, %struct.Memory** %MEMORY
  %loadMem_40bf37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 33
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %7702 to i64*
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 5
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %RCX.i768 = bitcast %union.anon* %7705 to i64*
  %7706 = load i64, i64* %RCX.i768
  %7707 = load i64, i64* %PC.i767
  %7708 = add i64 %7707, 3
  store i64 %7708, i64* %PC.i767
  %7709 = trunc i64 %7706 to i32
  %7710 = add i32 1, %7709
  %7711 = zext i32 %7710 to i64
  store i64 %7711, i64* %RCX.i768, align 8
  %7712 = icmp ult i32 %7710, %7709
  %7713 = icmp ult i32 %7710, 1
  %7714 = or i1 %7712, %7713
  %7715 = zext i1 %7714 to i8
  %7716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7715, i8* %7716, align 1
  %7717 = and i32 %7710, 255
  %7718 = call i32 @llvm.ctpop.i32(i32 %7717)
  %7719 = trunc i32 %7718 to i8
  %7720 = and i8 %7719, 1
  %7721 = xor i8 %7720, 1
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7721, i8* %7722, align 1
  %7723 = xor i64 1, %7706
  %7724 = trunc i64 %7723 to i32
  %7725 = xor i32 %7724, %7710
  %7726 = lshr i32 %7725, 4
  %7727 = trunc i32 %7726 to i8
  %7728 = and i8 %7727, 1
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7728, i8* %7729, align 1
  %7730 = icmp eq i32 %7710, 0
  %7731 = zext i1 %7730 to i8
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7731, i8* %7732, align 1
  %7733 = lshr i32 %7710, 31
  %7734 = trunc i32 %7733 to i8
  %7735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7734, i8* %7735, align 1
  %7736 = lshr i32 %7709, 31
  %7737 = xor i32 %7733, %7736
  %7738 = add i32 %7737, %7733
  %7739 = icmp eq i32 %7738, 2
  %7740 = zext i1 %7739 to i8
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7740, i8* %7741, align 1
  store %struct.Memory* %loadMem_40bf37, %struct.Memory** %MEMORY
  %loadMem_40bf3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 33
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %7744 to i64*
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 5
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %ECX.i765 = bitcast %union.anon* %7747 to i32*
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7749 = getelementptr inbounds %struct.GPR, %struct.GPR* %7748, i32 0, i32 7
  %7750 = getelementptr inbounds %struct.Reg, %struct.Reg* %7749, i32 0, i32 0
  %RDX.i766 = bitcast %union.anon* %7750 to i64*
  %7751 = load i64, i64* %RDX.i766
  %7752 = mul i64 %7751, 4
  %7753 = add i64 %7752, 8922032
  %7754 = load i32, i32* %ECX.i765
  %7755 = zext i32 %7754 to i64
  %7756 = load i64, i64* %PC.i764
  %7757 = add i64 %7756, 7
  store i64 %7757, i64* %PC.i764
  %7758 = inttoptr i64 %7753 to i32*
  store i32 %7754, i32* %7758
  store %struct.Memory* %loadMem_40bf3a, %struct.Memory** %MEMORY
  %loadMem_40bf41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7760 = getelementptr inbounds %struct.GPR, %struct.GPR* %7759, i32 0, i32 33
  %7761 = getelementptr inbounds %struct.Reg, %struct.Reg* %7760, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %7761 to i64*
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7763 = getelementptr inbounds %struct.GPR, %struct.GPR* %7762, i32 0, i32 5
  %7764 = getelementptr inbounds %struct.Reg, %struct.Reg* %7763, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %7764 to i64*
  %7765 = load i64, i64* %PC.i762
  %7766 = add i64 %7765, 7
  store i64 %7766, i64* %PC.i762
  %7767 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %7768 = zext i32 %7767 to i64
  store i64 %7768, i64* %RCX.i763, align 8
  store %struct.Memory* %loadMem_40bf41, %struct.Memory** %MEMORY
  %loadMem_40bf48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 33
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %7771 to i64*
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 5
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %RCX.i761 = bitcast %union.anon* %7774 to i64*
  %7775 = load i64, i64* %RCX.i761
  %7776 = load i64, i64* %PC.i760
  %7777 = add i64 %7776, 3
  store i64 %7777, i64* %PC.i760
  %7778 = xor i64 1, %7775
  %7779 = trunc i64 %7778 to i32
  %7780 = and i64 %7778, 4294967295
  store i64 %7780, i64* %RCX.i761, align 8
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7781, align 1
  %7782 = and i32 %7779, 255
  %7783 = call i32 @llvm.ctpop.i32(i32 %7782)
  %7784 = trunc i32 %7783 to i8
  %7785 = and i8 %7784, 1
  %7786 = xor i8 %7785, 1
  %7787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7786, i8* %7787, align 1
  %7788 = icmp eq i32 %7779, 0
  %7789 = zext i1 %7788 to i8
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7789, i8* %7790, align 1
  %7791 = lshr i32 %7779, 31
  %7792 = trunc i32 %7791 to i8
  %7793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7792, i8* %7793, align 1
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7794, align 1
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7795, align 1
  store %struct.Memory* %loadMem_40bf48, %struct.Memory** %MEMORY
  %loadMem_40bf4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7797 = getelementptr inbounds %struct.GPR, %struct.GPR* %7796, i32 0, i32 33
  %7798 = getelementptr inbounds %struct.Reg, %struct.Reg* %7797, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %7798 to i64*
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7800 = getelementptr inbounds %struct.GPR, %struct.GPR* %7799, i32 0, i32 5
  %7801 = getelementptr inbounds %struct.Reg, %struct.Reg* %7800, i32 0, i32 0
  %ECX.i759 = bitcast %union.anon* %7801 to i32*
  %7802 = load i32, i32* %ECX.i759
  %7803 = zext i32 %7802 to i64
  %7804 = load i64, i64* %PC.i758
  %7805 = add i64 %7804, 7
  store i64 %7805, i64* %PC.i758
  store i32 %7802, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40bf4b, %struct.Memory** %MEMORY
  %loadMem_40bf52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7807 = getelementptr inbounds %struct.GPR, %struct.GPR* %7806, i32 0, i32 33
  %7808 = getelementptr inbounds %struct.Reg, %struct.Reg* %7807, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %7808 to i64*
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7810 = getelementptr inbounds %struct.GPR, %struct.GPR* %7809, i32 0, i32 7
  %7811 = getelementptr inbounds %struct.Reg, %struct.Reg* %7810, i32 0, i32 0
  %RDX.i756 = bitcast %union.anon* %7811 to i64*
  %7812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7813 = getelementptr inbounds %struct.GPR, %struct.GPR* %7812, i32 0, i32 15
  %7814 = getelementptr inbounds %struct.Reg, %struct.Reg* %7813, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %7814 to i64*
  %7815 = load i64, i64* %RBP.i757
  %7816 = sub i64 %7815, 24
  %7817 = load i64, i64* %PC.i755
  %7818 = add i64 %7817, 4
  store i64 %7818, i64* %PC.i755
  %7819 = inttoptr i64 %7816 to i32*
  %7820 = load i32, i32* %7819
  %7821 = sext i32 %7820 to i64
  store i64 %7821, i64* %RDX.i756, align 8
  store %struct.Memory* %loadMem_40bf52, %struct.Memory** %MEMORY
  %loadMem_40bf56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7823 = getelementptr inbounds %struct.GPR, %struct.GPR* %7822, i32 0, i32 33
  %7824 = getelementptr inbounds %struct.Reg, %struct.Reg* %7823, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %7824 to i64*
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 7
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %RDX.i754 = bitcast %union.anon* %7827 to i64*
  %7828 = load i64, i64* %RDX.i754
  %7829 = mul i64 %7828, 4
  %7830 = add i64 %7829, 8807152
  %7831 = load i64, i64* %PC.i753
  %7832 = add i64 %7831, 8
  store i64 %7832, i64* %PC.i753
  %7833 = inttoptr i64 %7830 to i32*
  %7834 = load i32, i32* %7833
  %7835 = sext i32 %7834 to i64
  store i64 %7835, i64* %RDX.i754, align 8
  store %struct.Memory* %loadMem_40bf56, %struct.Memory** %MEMORY
  %loadMem_40bf5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7837 = getelementptr inbounds %struct.GPR, %struct.GPR* %7836, i32 0, i32 33
  %7838 = getelementptr inbounds %struct.Reg, %struct.Reg* %7837, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %7838 to i64*
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 7
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %RDX.i752 = bitcast %union.anon* %7841 to i64*
  %7842 = load i64, i64* %RDX.i752
  %7843 = mul i64 %7842, 4
  %7844 = add i64 %7843, 6525216
  %7845 = load i64, i64* %PC.i751
  %7846 = add i64 %7845, 11
  store i64 %7846, i64* %PC.i751
  %7847 = inttoptr i64 %7844 to i32*
  store i32 1, i32* %7847
  store %struct.Memory* %loadMem_40bf5e, %struct.Memory** %MEMORY
  %loadMem_40bf69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 33
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %7850 to i64*
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 7
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %RDX.i749 = bitcast %union.anon* %7853 to i64*
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 15
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %RBP.i750 = bitcast %union.anon* %7856 to i64*
  %7857 = load i64, i64* %RBP.i750
  %7858 = sub i64 %7857, 20
  %7859 = load i64, i64* %PC.i748
  %7860 = add i64 %7859, 4
  store i64 %7860, i64* %PC.i748
  %7861 = inttoptr i64 %7858 to i32*
  %7862 = load i32, i32* %7861
  %7863 = sext i32 %7862 to i64
  store i64 %7863, i64* %RDX.i749, align 8
  store %struct.Memory* %loadMem_40bf69, %struct.Memory** %MEMORY
  %loadMem_40bf6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7865 = getelementptr inbounds %struct.GPR, %struct.GPR* %7864, i32 0, i32 33
  %7866 = getelementptr inbounds %struct.Reg, %struct.Reg* %7865, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %7866 to i64*
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 5
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %RCX.i746 = bitcast %union.anon* %7869 to i64*
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 7
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %7872 to i64*
  %7873 = load i64, i64* %RDX.i747
  %7874 = mul i64 %7873, 4
  %7875 = add i64 %7874, 9047808
  %7876 = load i64, i64* %PC.i745
  %7877 = add i64 %7876, 7
  store i64 %7877, i64* %PC.i745
  %7878 = inttoptr i64 %7875 to i32*
  %7879 = load i32, i32* %7878
  %7880 = zext i32 %7879 to i64
  store i64 %7880, i64* %RCX.i746, align 8
  store %struct.Memory* %loadMem_40bf6d, %struct.Memory** %MEMORY
  %loadMem_40bf74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 33
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 5
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %7886 to i64*
  %7887 = load i64, i64* %RCX.i744
  %7888 = load i64, i64* %PC.i743
  %7889 = add i64 %7888, 7
  store i64 %7889, i64* %PC.i743
  %7890 = trunc i64 %7887 to i32
  %7891 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %7892 = xor i32 %7891, %7890
  %7893 = zext i32 %7892 to i64
  store i64 %7893, i64* %RCX.i744, align 8
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7894, align 1
  %7895 = and i32 %7892, 255
  %7896 = call i32 @llvm.ctpop.i32(i32 %7895)
  %7897 = trunc i32 %7896 to i8
  %7898 = and i8 %7897, 1
  %7899 = xor i8 %7898, 1
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7899, i8* %7900, align 1
  %7901 = icmp eq i32 %7892, 0
  %7902 = zext i1 %7901 to i8
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7902, i8* %7903, align 1
  %7904 = lshr i32 %7892, 31
  %7905 = trunc i32 %7904 to i8
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7905, i8* %7906, align 1
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7907, align 1
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7908, align 1
  store %struct.Memory* %loadMem_40bf74, %struct.Memory** %MEMORY
  %loadMem_40bf7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 33
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %7911 to i64*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 5
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %ECX.i742 = bitcast %union.anon* %7914 to i32*
  %7915 = load i32, i32* %ECX.i742
  %7916 = zext i32 %7915 to i64
  %7917 = load i64, i64* %PC.i741
  %7918 = add i64 %7917, 7
  store i64 %7918, i64* %PC.i741
  store i32 %7915, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bf7b, %struct.Memory** %MEMORY
  %loadMem_40bf82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7920 = getelementptr inbounds %struct.GPR, %struct.GPR* %7919, i32 0, i32 33
  %7921 = getelementptr inbounds %struct.Reg, %struct.Reg* %7920, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %7921 to i64*
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7923 = getelementptr inbounds %struct.GPR, %struct.GPR* %7922, i32 0, i32 7
  %7924 = getelementptr inbounds %struct.Reg, %struct.Reg* %7923, i32 0, i32 0
  %RDX.i739 = bitcast %union.anon* %7924 to i64*
  %7925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7926 = getelementptr inbounds %struct.GPR, %struct.GPR* %7925, i32 0, i32 15
  %7927 = getelementptr inbounds %struct.Reg, %struct.Reg* %7926, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %7927 to i64*
  %7928 = load i64, i64* %RBP.i740
  %7929 = sub i64 %7928, 32
  %7930 = load i64, i64* %PC.i738
  %7931 = add i64 %7930, 4
  store i64 %7931, i64* %PC.i738
  %7932 = inttoptr i64 %7929 to i32*
  %7933 = load i32, i32* %7932
  %7934 = sext i32 %7933 to i64
  store i64 %7934, i64* %RDX.i739, align 8
  store %struct.Memory* %loadMem_40bf82, %struct.Memory** %MEMORY
  %loadMem_40bf86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7936 = getelementptr inbounds %struct.GPR, %struct.GPR* %7935, i32 0, i32 33
  %7937 = getelementptr inbounds %struct.Reg, %struct.Reg* %7936, i32 0, i32 0
  %PC.i736 = bitcast %union.anon* %7937 to i64*
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7939 = getelementptr inbounds %struct.GPR, %struct.GPR* %7938, i32 0, i32 7
  %7940 = getelementptr inbounds %struct.Reg, %struct.Reg* %7939, i32 0, i32 0
  %RDX.i737 = bitcast %union.anon* %7940 to i64*
  %7941 = load i64, i64* %RDX.i737
  %7942 = load i64, i64* %PC.i736
  %7943 = add i64 %7942, 7
  store i64 %7943, i64* %PC.i736
  %7944 = sext i64 %7941 to i128
  %7945 = and i128 %7944, -18446744073709551616
  %7946 = zext i64 %7941 to i128
  %7947 = or i128 %7945, %7946
  %7948 = mul i128 576, %7947
  %7949 = trunc i128 %7948 to i64
  store i64 %7949, i64* %RDX.i737, align 8
  %7950 = sext i64 %7949 to i128
  %7951 = icmp ne i128 %7950, %7948
  %7952 = zext i1 %7951 to i8
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7952, i8* %7953, align 1
  %7954 = trunc i128 %7948 to i32
  %7955 = and i32 %7954, 255
  %7956 = call i32 @llvm.ctpop.i32(i32 %7955)
  %7957 = trunc i32 %7956 to i8
  %7958 = and i8 %7957, 1
  %7959 = xor i8 %7958, 1
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7959, i8* %7960, align 1
  %7961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7961, align 1
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7962, align 1
  %7963 = lshr i64 %7949, 63
  %7964 = trunc i64 %7963 to i8
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7964, i8* %7965, align 1
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7952, i8* %7966, align 1
  store %struct.Memory* %loadMem_40bf86, %struct.Memory** %MEMORY
  %loadMem_40bf8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7968 = getelementptr inbounds %struct.GPR, %struct.GPR* %7967, i32 0, i32 33
  %7969 = getelementptr inbounds %struct.Reg, %struct.Reg* %7968, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %7969 to i64*
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7971 = getelementptr inbounds %struct.GPR, %struct.GPR* %7970, i32 0, i32 1
  %7972 = getelementptr inbounds %struct.Reg, %struct.Reg* %7971, i32 0, i32 0
  %RAX.i734 = bitcast %union.anon* %7972 to i64*
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7974 = getelementptr inbounds %struct.GPR, %struct.GPR* %7973, i32 0, i32 7
  %7975 = getelementptr inbounds %struct.Reg, %struct.Reg* %7974, i32 0, i32 0
  %RDX.i735 = bitcast %union.anon* %7975 to i64*
  %7976 = load i64, i64* %RAX.i734
  %7977 = load i64, i64* %RDX.i735
  %7978 = load i64, i64* %PC.i733
  %7979 = add i64 %7978, 3
  store i64 %7979, i64* %PC.i733
  %7980 = add i64 %7977, %7976
  store i64 %7980, i64* %RAX.i734, align 8
  %7981 = icmp ult i64 %7980, %7976
  %7982 = icmp ult i64 %7980, %7977
  %7983 = or i1 %7981, %7982
  %7984 = zext i1 %7983 to i8
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7984, i8* %7985, align 1
  %7986 = trunc i64 %7980 to i32
  %7987 = and i32 %7986, 255
  %7988 = call i32 @llvm.ctpop.i32(i32 %7987)
  %7989 = trunc i32 %7988 to i8
  %7990 = and i8 %7989, 1
  %7991 = xor i8 %7990, 1
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7991, i8* %7992, align 1
  %7993 = xor i64 %7977, %7976
  %7994 = xor i64 %7993, %7980
  %7995 = lshr i64 %7994, 4
  %7996 = trunc i64 %7995 to i8
  %7997 = and i8 %7996, 1
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7997, i8* %7998, align 1
  %7999 = icmp eq i64 %7980, 0
  %8000 = zext i1 %7999 to i8
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8000, i8* %8001, align 1
  %8002 = lshr i64 %7980, 63
  %8003 = trunc i64 %8002 to i8
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8003, i8* %8004, align 1
  %8005 = lshr i64 %7976, 63
  %8006 = lshr i64 %7977, 63
  %8007 = xor i64 %8002, %8005
  %8008 = xor i64 %8002, %8006
  %8009 = add i64 %8007, %8008
  %8010 = icmp eq i64 %8009, 2
  %8011 = zext i1 %8010 to i8
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8011, i8* %8012, align 1
  store %struct.Memory* %loadMem_40bf8d, %struct.Memory** %MEMORY
  %loadMem_40bf90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8014 = getelementptr inbounds %struct.GPR, %struct.GPR* %8013, i32 0, i32 33
  %8015 = getelementptr inbounds %struct.Reg, %struct.Reg* %8014, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %8015 to i64*
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8017 = getelementptr inbounds %struct.GPR, %struct.GPR* %8016, i32 0, i32 7
  %8018 = getelementptr inbounds %struct.Reg, %struct.Reg* %8017, i32 0, i32 0
  %RDX.i731 = bitcast %union.anon* %8018 to i64*
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8020 = getelementptr inbounds %struct.GPR, %struct.GPR* %8019, i32 0, i32 15
  %8021 = getelementptr inbounds %struct.Reg, %struct.Reg* %8020, i32 0, i32 0
  %RBP.i732 = bitcast %union.anon* %8021 to i64*
  %8022 = load i64, i64* %RBP.i732
  %8023 = sub i64 %8022, 24
  %8024 = load i64, i64* %PC.i730
  %8025 = add i64 %8024, 4
  store i64 %8025, i64* %PC.i730
  %8026 = inttoptr i64 %8023 to i32*
  %8027 = load i32, i32* %8026
  %8028 = sext i32 %8027 to i64
  store i64 %8028, i64* %RDX.i731, align 8
  store %struct.Memory* %loadMem_40bf90, %struct.Memory** %MEMORY
  %loadMem_40bf94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8030 = getelementptr inbounds %struct.GPR, %struct.GPR* %8029, i32 0, i32 33
  %8031 = getelementptr inbounds %struct.Reg, %struct.Reg* %8030, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %8031 to i64*
  %8032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8033 = getelementptr inbounds %struct.GPR, %struct.GPR* %8032, i32 0, i32 1
  %8034 = getelementptr inbounds %struct.Reg, %struct.Reg* %8033, i32 0, i32 0
  %RAX.i727 = bitcast %union.anon* %8034 to i64*
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8036 = getelementptr inbounds %struct.GPR, %struct.GPR* %8035, i32 0, i32 5
  %8037 = getelementptr inbounds %struct.Reg, %struct.Reg* %8036, i32 0, i32 0
  %RCX.i728 = bitcast %union.anon* %8037 to i64*
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8039 = getelementptr inbounds %struct.GPR, %struct.GPR* %8038, i32 0, i32 7
  %8040 = getelementptr inbounds %struct.Reg, %struct.Reg* %8039, i32 0, i32 0
  %RDX.i729 = bitcast %union.anon* %8040 to i64*
  %8041 = load i64, i64* %RAX.i727
  %8042 = load i64, i64* %RDX.i729
  %8043 = mul i64 %8042, 4
  %8044 = add i64 %8043, %8041
  %8045 = load i64, i64* %PC.i726
  %8046 = add i64 %8045, 3
  store i64 %8046, i64* %PC.i726
  %8047 = inttoptr i64 %8044 to i32*
  %8048 = load i32, i32* %8047
  %8049 = zext i32 %8048 to i64
  store i64 %8049, i64* %RCX.i728, align 8
  store %struct.Memory* %loadMem_40bf94, %struct.Memory** %MEMORY
  %loadMem_40bf97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8051 = getelementptr inbounds %struct.GPR, %struct.GPR* %8050, i32 0, i32 33
  %8052 = getelementptr inbounds %struct.Reg, %struct.Reg* %8051, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %8052 to i64*
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8054 = getelementptr inbounds %struct.GPR, %struct.GPR* %8053, i32 0, i32 5
  %8055 = getelementptr inbounds %struct.Reg, %struct.Reg* %8054, i32 0, i32 0
  %RCX.i725 = bitcast %union.anon* %8055 to i64*
  %8056 = load i64, i64* %RCX.i725
  %8057 = load i64, i64* %PC.i724
  %8058 = add i64 %8057, 7
  store i64 %8058, i64* %PC.i724
  %8059 = trunc i64 %8056 to i32
  %8060 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %8061 = xor i32 %8060, %8059
  %8062 = zext i32 %8061 to i64
  store i64 %8062, i64* %RCX.i725, align 8
  %8063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8063, align 1
  %8064 = and i32 %8061, 255
  %8065 = call i32 @llvm.ctpop.i32(i32 %8064)
  %8066 = trunc i32 %8065 to i8
  %8067 = and i8 %8066, 1
  %8068 = xor i8 %8067, 1
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8068, i8* %8069, align 1
  %8070 = icmp eq i32 %8061, 0
  %8071 = zext i1 %8070 to i8
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8071, i8* %8072, align 1
  %8073 = lshr i32 %8061, 31
  %8074 = trunc i32 %8073 to i8
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8074, i8* %8075, align 1
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8076, align 1
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8077, align 1
  store %struct.Memory* %loadMem_40bf97, %struct.Memory** %MEMORY
  %loadMem_40bf9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 33
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %8080 to i64*
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8082 = getelementptr inbounds %struct.GPR, %struct.GPR* %8081, i32 0, i32 5
  %8083 = getelementptr inbounds %struct.Reg, %struct.Reg* %8082, i32 0, i32 0
  %ECX.i723 = bitcast %union.anon* %8083 to i32*
  %8084 = load i32, i32* %ECX.i723
  %8085 = zext i32 %8084 to i64
  %8086 = load i64, i64* %PC.i722
  %8087 = add i64 %8086, 7
  store i64 %8087, i64* %PC.i722
  store i32 %8084, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40bf9e, %struct.Memory** %MEMORY
  %loadMem_40bfa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 33
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %8090 to i64*
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8092 = getelementptr inbounds %struct.GPR, %struct.GPR* %8091, i32 0, i32 5
  %8093 = getelementptr inbounds %struct.Reg, %struct.Reg* %8092, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %8093 to i64*
  %8094 = load i64, i64* %PC.i720
  %8095 = add i64 %8094, 7
  store i64 %8095, i64* %PC.i720
  %8096 = load i32, i32* bitcast (%G_0x62dab8_type* @G_0x62dab8 to i32*)
  %8097 = zext i32 %8096 to i64
  store i64 %8097, i64* %RCX.i721, align 8
  store %struct.Memory* %loadMem_40bfa5, %struct.Memory** %MEMORY
  %loadMem_40bfac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 33
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %8100 to i64*
  %8101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8102 = getelementptr inbounds %struct.GPR, %struct.GPR* %8101, i32 0, i32 9
  %8103 = getelementptr inbounds %struct.Reg, %struct.Reg* %8102, i32 0, i32 0
  %RSI.i719 = bitcast %union.anon* %8103 to i64*
  %8104 = load i64, i64* %PC.i718
  %8105 = add i64 %8104, 7
  store i64 %8105, i64* %PC.i718
  %8106 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %8107 = zext i32 %8106 to i64
  store i64 %8107, i64* %RSI.i719, align 8
  store %struct.Memory* %loadMem_40bfac, %struct.Memory** %MEMORY
  %loadMem_40bfb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8109 = getelementptr inbounds %struct.GPR, %struct.GPR* %8108, i32 0, i32 33
  %8110 = getelementptr inbounds %struct.Reg, %struct.Reg* %8109, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %8110 to i64*
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8112 = getelementptr inbounds %struct.GPR, %struct.GPR* %8111, i32 0, i32 5
  %8113 = getelementptr inbounds %struct.Reg, %struct.Reg* %8112, i32 0, i32 0
  %ECX.i716 = bitcast %union.anon* %8113 to i32*
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8115 = getelementptr inbounds %struct.GPR, %struct.GPR* %8114, i32 0, i32 9
  %8116 = getelementptr inbounds %struct.Reg, %struct.Reg* %8115, i32 0, i32 0
  %RSI.i717 = bitcast %union.anon* %8116 to i64*
  %8117 = load i64, i64* %RSI.i717
  %8118 = load i32, i32* %ECX.i716
  %8119 = zext i32 %8118 to i64
  %8120 = load i64, i64* %PC.i715
  %8121 = add i64 %8120, 2
  store i64 %8121, i64* %PC.i715
  %8122 = trunc i64 %8117 to i32
  %8123 = sub i32 %8122, %8118
  %8124 = zext i32 %8123 to i64
  store i64 %8124, i64* %RSI.i717, align 8
  %8125 = icmp ult i32 %8122, %8118
  %8126 = zext i1 %8125 to i8
  %8127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8126, i8* %8127, align 1
  %8128 = and i32 %8123, 255
  %8129 = call i32 @llvm.ctpop.i32(i32 %8128)
  %8130 = trunc i32 %8129 to i8
  %8131 = and i8 %8130, 1
  %8132 = xor i8 %8131, 1
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8132, i8* %8133, align 1
  %8134 = xor i64 %8119, %8117
  %8135 = trunc i64 %8134 to i32
  %8136 = xor i32 %8135, %8123
  %8137 = lshr i32 %8136, 4
  %8138 = trunc i32 %8137 to i8
  %8139 = and i8 %8138, 1
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8139, i8* %8140, align 1
  %8141 = icmp eq i32 %8123, 0
  %8142 = zext i1 %8141 to i8
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8142, i8* %8143, align 1
  %8144 = lshr i32 %8123, 31
  %8145 = trunc i32 %8144 to i8
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8145, i8* %8146, align 1
  %8147 = lshr i32 %8122, 31
  %8148 = lshr i32 %8118, 31
  %8149 = xor i32 %8148, %8147
  %8150 = xor i32 %8144, %8147
  %8151 = add i32 %8150, %8149
  %8152 = icmp eq i32 %8151, 2
  %8153 = zext i1 %8152 to i8
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8153, i8* %8154, align 1
  store %struct.Memory* %loadMem_40bfb3, %struct.Memory** %MEMORY
  %loadMem_40bfb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8156 = getelementptr inbounds %struct.GPR, %struct.GPR* %8155, i32 0, i32 33
  %8157 = getelementptr inbounds %struct.Reg, %struct.Reg* %8156, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %8157 to i64*
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 9
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %ESI.i714 = bitcast %union.anon* %8160 to i32*
  %8161 = load i32, i32* %ESI.i714
  %8162 = zext i32 %8161 to i64
  %8163 = load i64, i64* %PC.i713
  %8164 = add i64 %8163, 7
  store i64 %8164, i64* %PC.i713
  store i32 %8161, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40bfb5, %struct.Memory** %MEMORY
  %loadMem_40bfbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8166 = getelementptr inbounds %struct.GPR, %struct.GPR* %8165, i32 0, i32 33
  %8167 = getelementptr inbounds %struct.Reg, %struct.Reg* %8166, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %8167 to i64*
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8169 = getelementptr inbounds %struct.GPR, %struct.GPR* %8168, i32 0, i32 1
  %8170 = getelementptr inbounds %struct.Reg, %struct.Reg* %8169, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %8170 to i64*
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8172 = getelementptr inbounds %struct.GPR, %struct.GPR* %8171, i32 0, i32 15
  %8173 = getelementptr inbounds %struct.Reg, %struct.Reg* %8172, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %8173 to i64*
  %8174 = load i64, i64* %RBP.i712
  %8175 = sub i64 %8174, 32
  %8176 = load i64, i64* %PC.i710
  %8177 = add i64 %8176, 4
  store i64 %8177, i64* %PC.i710
  %8178 = inttoptr i64 %8175 to i32*
  %8179 = load i32, i32* %8178
  %8180 = sext i32 %8179 to i64
  store i64 %8180, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_40bfbc, %struct.Memory** %MEMORY
  %loadMem_40bfc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 33
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %8183 to i64*
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 1
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %8186 to i64*
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 5
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %RCX.i709 = bitcast %union.anon* %8189 to i64*
  %8190 = load i64, i64* %RAX.i708
  %8191 = mul i64 %8190, 4
  %8192 = add i64 %8191, 6478512
  %8193 = load i64, i64* %PC.i707
  %8194 = add i64 %8193, 7
  store i64 %8194, i64* %PC.i707
  %8195 = inttoptr i64 %8192 to i32*
  %8196 = load i32, i32* %8195
  %8197 = zext i32 %8196 to i64
  store i64 %8197, i64* %RCX.i709, align 8
  store %struct.Memory* %loadMem_40bfc0, %struct.Memory** %MEMORY
  %loadMem_40bfc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8199 = getelementptr inbounds %struct.GPR, %struct.GPR* %8198, i32 0, i32 33
  %8200 = getelementptr inbounds %struct.Reg, %struct.Reg* %8199, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %8200 to i64*
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8202 = getelementptr inbounds %struct.GPR, %struct.GPR* %8201, i32 0, i32 5
  %8203 = getelementptr inbounds %struct.Reg, %struct.Reg* %8202, i32 0, i32 0
  %RCX.i706 = bitcast %union.anon* %8203 to i64*
  %8204 = load i64, i64* %RCX.i706
  %8205 = load i64, i64* %PC.i705
  %8206 = add i64 %8205, 7
  store i64 %8206, i64* %PC.i705
  %8207 = trunc i64 %8204 to i32
  %8208 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %8209 = add i32 %8208, %8207
  %8210 = zext i32 %8209 to i64
  store i64 %8210, i64* %RCX.i706, align 8
  %8211 = icmp ult i32 %8209, %8207
  %8212 = icmp ult i32 %8209, %8208
  %8213 = or i1 %8211, %8212
  %8214 = zext i1 %8213 to i8
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8214, i8* %8215, align 1
  %8216 = and i32 %8209, 255
  %8217 = call i32 @llvm.ctpop.i32(i32 %8216)
  %8218 = trunc i32 %8217 to i8
  %8219 = and i8 %8218, 1
  %8220 = xor i8 %8219, 1
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8220, i8* %8221, align 1
  %8222 = xor i32 %8208, %8207
  %8223 = xor i32 %8222, %8209
  %8224 = lshr i32 %8223, 4
  %8225 = trunc i32 %8224 to i8
  %8226 = and i8 %8225, 1
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8226, i8* %8227, align 1
  %8228 = icmp eq i32 %8209, 0
  %8229 = zext i1 %8228 to i8
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8229, i8* %8230, align 1
  %8231 = lshr i32 %8209, 31
  %8232 = trunc i32 %8231 to i8
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8232, i8* %8233, align 1
  %8234 = lshr i32 %8207, 31
  %8235 = lshr i32 %8208, 31
  %8236 = xor i32 %8231, %8234
  %8237 = xor i32 %8231, %8235
  %8238 = add i32 %8236, %8237
  %8239 = icmp eq i32 %8238, 2
  %8240 = zext i1 %8239 to i8
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8240, i8* %8241, align 1
  store %struct.Memory* %loadMem_40bfc7, %struct.Memory** %MEMORY
  %loadMem_40bfce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 33
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %8244 to i64*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 5
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %ECX.i704 = bitcast %union.anon* %8247 to i32*
  %8248 = load i32, i32* %ECX.i704
  %8249 = zext i32 %8248 to i64
  %8250 = load i64, i64* %PC.i703
  %8251 = add i64 %8250, 7
  store i64 %8251, i64* %PC.i703
  store i32 %8248, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40bfce, %struct.Memory** %MEMORY
  %loadMem_40bfd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8253 = getelementptr inbounds %struct.GPR, %struct.GPR* %8252, i32 0, i32 33
  %8254 = getelementptr inbounds %struct.Reg, %struct.Reg* %8253, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %8254 to i64*
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 5
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %RCX.i702 = bitcast %union.anon* %8257 to i64*
  %8258 = load i64, i64* %PC.i701
  %8259 = add i64 %8258, 7
  store i64 %8259, i64* %PC.i701
  %8260 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %8261 = zext i32 %8260 to i64
  store i64 %8261, i64* %RCX.i702, align 8
  store %struct.Memory* %loadMem_40bfd5, %struct.Memory** %MEMORY
  %loadMem_40bfdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 33
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %8264 to i64*
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8266 = getelementptr inbounds %struct.GPR, %struct.GPR* %8265, i32 0, i32 5
  %8267 = getelementptr inbounds %struct.Reg, %struct.Reg* %8266, i32 0, i32 0
  %RCX.i700 = bitcast %union.anon* %8267 to i64*
  %8268 = load i64, i64* %RCX.i700
  %8269 = load i64, i64* %PC.i699
  %8270 = add i64 %8269, 3
  store i64 %8270, i64* %PC.i699
  %8271 = trunc i64 %8268 to i32
  %8272 = add i32 1, %8271
  %8273 = zext i32 %8272 to i64
  store i64 %8273, i64* %RCX.i700, align 8
  %8274 = icmp ult i32 %8272, %8271
  %8275 = icmp ult i32 %8272, 1
  %8276 = or i1 %8274, %8275
  %8277 = zext i1 %8276 to i8
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8277, i8* %8278, align 1
  %8279 = and i32 %8272, 255
  %8280 = call i32 @llvm.ctpop.i32(i32 %8279)
  %8281 = trunc i32 %8280 to i8
  %8282 = and i8 %8281, 1
  %8283 = xor i8 %8282, 1
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8283, i8* %8284, align 1
  %8285 = xor i64 1, %8268
  %8286 = trunc i64 %8285 to i32
  %8287 = xor i32 %8286, %8272
  %8288 = lshr i32 %8287, 4
  %8289 = trunc i32 %8288 to i8
  %8290 = and i8 %8289, 1
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8290, i8* %8291, align 1
  %8292 = icmp eq i32 %8272, 0
  %8293 = zext i1 %8292 to i8
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8293, i8* %8294, align 1
  %8295 = lshr i32 %8272, 31
  %8296 = trunc i32 %8295 to i8
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8296, i8* %8297, align 1
  %8298 = lshr i32 %8271, 31
  %8299 = xor i32 %8295, %8298
  %8300 = add i32 %8299, %8295
  %8301 = icmp eq i32 %8300, 2
  %8302 = zext i1 %8301 to i8
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8302, i8* %8303, align 1
  store %struct.Memory* %loadMem_40bfdc, %struct.Memory** %MEMORY
  %loadMem_40bfdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8305 = getelementptr inbounds %struct.GPR, %struct.GPR* %8304, i32 0, i32 33
  %8306 = getelementptr inbounds %struct.Reg, %struct.Reg* %8305, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %8306 to i64*
  %8307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8308 = getelementptr inbounds %struct.GPR, %struct.GPR* %8307, i32 0, i32 5
  %8309 = getelementptr inbounds %struct.Reg, %struct.Reg* %8308, i32 0, i32 0
  %ECX.i698 = bitcast %union.anon* %8309 to i32*
  %8310 = load i32, i32* %ECX.i698
  %8311 = zext i32 %8310 to i64
  %8312 = load i64, i64* %PC.i697
  %8313 = add i64 %8312, 7
  store i64 %8313, i64* %PC.i697
  store i32 %8310, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40bfdf, %struct.Memory** %MEMORY
  %loadMem_40bfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 33
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %8316 to i64*
  %8317 = load i64, i64* %PC.i696
  %8318 = add i64 %8317, 1960
  %8319 = load i64, i64* %PC.i696
  %8320 = add i64 %8319, 5
  store i64 %8320, i64* %PC.i696
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8318, i64* %8321, align 8
  store %struct.Memory* %loadMem_40bfe6, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40bfeb:                                  ; preds = %block_40bee6
  %loadMem_40bfeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8323 = getelementptr inbounds %struct.GPR, %struct.GPR* %8322, i32 0, i32 33
  %8324 = getelementptr inbounds %struct.Reg, %struct.Reg* %8323, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %8324 to i64*
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8326 = getelementptr inbounds %struct.GPR, %struct.GPR* %8325, i32 0, i32 15
  %8327 = getelementptr inbounds %struct.Reg, %struct.Reg* %8326, i32 0, i32 0
  %RBP.i695 = bitcast %union.anon* %8327 to i64*
  %8328 = load i64, i64* %RBP.i695
  %8329 = sub i64 %8328, 16
  %8330 = load i64, i64* %PC.i694
  %8331 = add i64 %8330, 4
  store i64 %8331, i64* %PC.i694
  %8332 = inttoptr i64 %8329 to i32*
  %8333 = load i32, i32* %8332
  %8334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8334, align 1
  %8335 = and i32 %8333, 255
  %8336 = call i32 @llvm.ctpop.i32(i32 %8335)
  %8337 = trunc i32 %8336 to i8
  %8338 = and i8 %8337, 1
  %8339 = xor i8 %8338, 1
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8339, i8* %8340, align 1
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8341, align 1
  %8342 = icmp eq i32 %8333, 0
  %8343 = zext i1 %8342 to i8
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8343, i8* %8344, align 1
  %8345 = lshr i32 %8333, 31
  %8346 = trunc i32 %8345 to i8
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8346, i8* %8347, align 1
  %8348 = lshr i32 %8333, 31
  %8349 = xor i32 %8345, %8348
  %8350 = add i32 %8349, %8348
  %8351 = icmp eq i32 %8350, 2
  %8352 = zext i1 %8351 to i8
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8352, i8* %8353, align 1
  store %struct.Memory* %loadMem_40bfeb, %struct.Memory** %MEMORY
  %loadMem_40bfef = load %struct.Memory*, %struct.Memory** %MEMORY
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 33
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %8356 to i64*
  %8357 = load i64, i64* %PC.i693
  %8358 = add i64 %8357, 397
  %8359 = load i64, i64* %PC.i693
  %8360 = add i64 %8359, 6
  %8361 = load i64, i64* %PC.i693
  %8362 = add i64 %8361, 6
  store i64 %8362, i64* %PC.i693
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8364 = load i8, i8* %8363, align 1
  store i8 %8364, i8* %BRANCH_TAKEN, align 1
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8366 = icmp ne i8 %8364, 0
  %8367 = select i1 %8366, i64 %8358, i64 %8360
  store i64 %8367, i64* %8365, align 8
  store %struct.Memory* %loadMem_40bfef, %struct.Memory** %MEMORY
  %loadBr_40bfef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40bfef = icmp eq i8 %loadBr_40bfef, 1
  br i1 %cmpBr_40bfef, label %block_.L_40c17c, label %block_40bff5

block_40bff5:                                     ; preds = %block_.L_40bfeb
  %loadMem_40bff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 33
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %PC.i692 = bitcast %union.anon* %8370 to i64*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 11
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %8373 to i64*
  %8374 = load i64, i64* %PC.i692
  %8375 = add i64 %8374, 5
  store i64 %8375, i64* %PC.i692
  store i64 2, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_40bff5, %struct.Memory** %MEMORY
  %loadMem_40bffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 33
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %8378 to i64*
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 9
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %RSI.i691 = bitcast %union.anon* %8381 to i64*
  %8382 = load i64, i64* %PC.i690
  %8383 = add i64 %8382, 5
  store i64 %8383, i64* %PC.i690
  store i64 1, i64* %RSI.i691, align 8
  store %struct.Memory* %loadMem_40bffa, %struct.Memory** %MEMORY
  %loadMem_40bfff = load %struct.Memory*, %struct.Memory** %MEMORY
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 33
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 1
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %RAX.i688 = bitcast %union.anon* %8389 to i64*
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 15
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %8392 to i64*
  %8393 = load i64, i64* %RBP.i689
  %8394 = sub i64 %8393, 20
  %8395 = load i64, i64* %PC.i687
  %8396 = add i64 %8395, 4
  store i64 %8396, i64* %PC.i687
  %8397 = inttoptr i64 %8394 to i32*
  %8398 = load i32, i32* %8397
  %8399 = sext i32 %8398 to i64
  store i64 %8399, i64* %RAX.i688, align 8
  store %struct.Memory* %loadMem_40bfff, %struct.Memory** %MEMORY
  %loadMem_40c003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 33
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 1
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %8405 to i64*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 5
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %8408 to i64*
  %8409 = load i64, i64* %RAX.i685
  %8410 = mul i64 %8409, 4
  %8411 = add i64 %8410, 9047808
  %8412 = load i64, i64* %PC.i684
  %8413 = add i64 %8412, 7
  store i64 %8413, i64* %PC.i684
  %8414 = inttoptr i64 %8411 to i32*
  %8415 = load i32, i32* %8414
  %8416 = zext i32 %8415 to i64
  store i64 %8416, i64* %RCX.i686, align 8
  store %struct.Memory* %loadMem_40c003, %struct.Memory** %MEMORY
  %loadMem_40c00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8418 = getelementptr inbounds %struct.GPR, %struct.GPR* %8417, i32 0, i32 33
  %8419 = getelementptr inbounds %struct.Reg, %struct.Reg* %8418, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %8419 to i64*
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8421 = getelementptr inbounds %struct.GPR, %struct.GPR* %8420, i32 0, i32 5
  %8422 = getelementptr inbounds %struct.Reg, %struct.Reg* %8421, i32 0, i32 0
  %RCX.i683 = bitcast %union.anon* %8422 to i64*
  %8423 = load i64, i64* %RCX.i683
  %8424 = load i64, i64* %PC.i682
  %8425 = add i64 %8424, 7
  store i64 %8425, i64* %PC.i682
  %8426 = trunc i64 %8423 to i32
  %8427 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %8428 = xor i32 %8427, %8426
  %8429 = zext i32 %8428 to i64
  store i64 %8429, i64* %RCX.i683, align 8
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8430, align 1
  %8431 = and i32 %8428, 255
  %8432 = call i32 @llvm.ctpop.i32(i32 %8431)
  %8433 = trunc i32 %8432 to i8
  %8434 = and i8 %8433, 1
  %8435 = xor i8 %8434, 1
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8435, i8* %8436, align 1
  %8437 = icmp eq i32 %8428, 0
  %8438 = zext i1 %8437 to i8
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8438, i8* %8439, align 1
  %8440 = lshr i32 %8428, 31
  %8441 = trunc i32 %8440 to i8
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8441, i8* %8442, align 1
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8443, align 1
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8444, align 1
  store %struct.Memory* %loadMem_40c00a, %struct.Memory** %MEMORY
  %loadMem_40c011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 33
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %8447 to i64*
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 5
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %ECX.i681 = bitcast %union.anon* %8450 to i32*
  %8451 = load i32, i32* %ECX.i681
  %8452 = zext i32 %8451 to i64
  %8453 = load i64, i64* %PC.i680
  %8454 = add i64 %8453, 7
  store i64 %8454, i64* %PC.i680
  store i32 %8451, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c011, %struct.Memory** %MEMORY
  %loadMem_40c018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 33
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %8457 to i64*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 5
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %RCX.i678 = bitcast %union.anon* %8460 to i64*
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8462 = getelementptr inbounds %struct.GPR, %struct.GPR* %8461, i32 0, i32 15
  %8463 = getelementptr inbounds %struct.Reg, %struct.Reg* %8462, i32 0, i32 0
  %RBP.i679 = bitcast %union.anon* %8463 to i64*
  %8464 = load i64, i64* %RBP.i679
  %8465 = sub i64 %8464, 24
  %8466 = load i64, i64* %PC.i677
  %8467 = add i64 %8466, 3
  store i64 %8467, i64* %PC.i677
  %8468 = inttoptr i64 %8465 to i32*
  %8469 = load i32, i32* %8468
  %8470 = zext i32 %8469 to i64
  store i64 %8470, i64* %RCX.i678, align 8
  store %struct.Memory* %loadMem_40c018, %struct.Memory** %MEMORY
  %loadMem_40c01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 33
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 5
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %RCX.i676 = bitcast %union.anon* %8476 to i64*
  %8477 = load i64, i64* %RCX.i676
  %8478 = load i64, i64* %PC.i675
  %8479 = add i64 %8478, 3
  store i64 %8479, i64* %PC.i675
  %8480 = trunc i64 %8477 to i32
  %8481 = add i32 12, %8480
  %8482 = zext i32 %8481 to i64
  store i64 %8482, i64* %RCX.i676, align 8
  %8483 = icmp ult i32 %8481, %8480
  %8484 = icmp ult i32 %8481, 12
  %8485 = or i1 %8483, %8484
  %8486 = zext i1 %8485 to i8
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8486, i8* %8487, align 1
  %8488 = and i32 %8481, 255
  %8489 = call i32 @llvm.ctpop.i32(i32 %8488)
  %8490 = trunc i32 %8489 to i8
  %8491 = and i8 %8490, 1
  %8492 = xor i8 %8491, 1
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8492, i8* %8493, align 1
  %8494 = xor i64 12, %8477
  %8495 = trunc i64 %8494 to i32
  %8496 = xor i32 %8495, %8481
  %8497 = lshr i32 %8496, 4
  %8498 = trunc i32 %8497 to i8
  %8499 = and i8 %8498, 1
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8499, i8* %8500, align 1
  %8501 = icmp eq i32 %8481, 0
  %8502 = zext i1 %8501 to i8
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8502, i8* %8503, align 1
  %8504 = lshr i32 %8481, 31
  %8505 = trunc i32 %8504 to i8
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8505, i8* %8506, align 1
  %8507 = lshr i32 %8480, 31
  %8508 = xor i32 %8504, %8507
  %8509 = add i32 %8508, %8504
  %8510 = icmp eq i32 %8509, 2
  %8511 = zext i1 %8510 to i8
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8511, i8* %8512, align 1
  store %struct.Memory* %loadMem_40c01b, %struct.Memory** %MEMORY
  %loadMem_40c01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8514 = getelementptr inbounds %struct.GPR, %struct.GPR* %8513, i32 0, i32 33
  %8515 = getelementptr inbounds %struct.Reg, %struct.Reg* %8514, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %8515 to i64*
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8517 = getelementptr inbounds %struct.GPR, %struct.GPR* %8516, i32 0, i32 5
  %8518 = getelementptr inbounds %struct.Reg, %struct.Reg* %8517, i32 0, i32 0
  %ECX.i673 = bitcast %union.anon* %8518 to i32*
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8520 = getelementptr inbounds %struct.GPR, %struct.GPR* %8519, i32 0, i32 1
  %8521 = getelementptr inbounds %struct.Reg, %struct.Reg* %8520, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %8521 to i64*
  %8522 = load i32, i32* %ECX.i673
  %8523 = zext i32 %8522 to i64
  %8524 = load i64, i64* %PC.i672
  %8525 = add i64 %8524, 3
  store i64 %8525, i64* %PC.i672
  %8526 = shl i64 %8523, 32
  %8527 = ashr exact i64 %8526, 32
  store i64 %8527, i64* %RAX.i674, align 8
  store %struct.Memory* %loadMem_40c01e, %struct.Memory** %MEMORY
  %loadMem_40c021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 1
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %RAX.i670 = bitcast %union.anon* %8533 to i64*
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 5
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %8536 to i64*
  %8537 = load i64, i64* %RAX.i670
  %8538 = mul i64 %8537, 4
  %8539 = add i64 %8538, 9047232
  %8540 = load i64, i64* %PC.i669
  %8541 = add i64 %8540, 7
  store i64 %8541, i64* %PC.i669
  %8542 = inttoptr i64 %8539 to i32*
  %8543 = load i32, i32* %8542
  %8544 = zext i32 %8543 to i64
  store i64 %8544, i64* %RCX.i671, align 8
  store %struct.Memory* %loadMem_40c021, %struct.Memory** %MEMORY
  %loadMem_40c028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8546 = getelementptr inbounds %struct.GPR, %struct.GPR* %8545, i32 0, i32 33
  %8547 = getelementptr inbounds %struct.Reg, %struct.Reg* %8546, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %8547 to i64*
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8549 = getelementptr inbounds %struct.GPR, %struct.GPR* %8548, i32 0, i32 5
  %8550 = getelementptr inbounds %struct.Reg, %struct.Reg* %8549, i32 0, i32 0
  %RCX.i668 = bitcast %union.anon* %8550 to i64*
  %8551 = load i64, i64* %RCX.i668
  %8552 = load i64, i64* %PC.i667
  %8553 = add i64 %8552, 7
  store i64 %8553, i64* %PC.i667
  %8554 = trunc i64 %8551 to i32
  %8555 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %8556 = xor i32 %8555, %8554
  %8557 = zext i32 %8556 to i64
  store i64 %8557, i64* %RCX.i668, align 8
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8558, align 1
  %8559 = and i32 %8556, 255
  %8560 = call i32 @llvm.ctpop.i32(i32 %8559)
  %8561 = trunc i32 %8560 to i8
  %8562 = and i8 %8561, 1
  %8563 = xor i8 %8562, 1
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8563, i8* %8564, align 1
  %8565 = icmp eq i32 %8556, 0
  %8566 = zext i1 %8565 to i8
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8566, i8* %8567, align 1
  %8568 = lshr i32 %8556, 31
  %8569 = trunc i32 %8568 to i8
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8569, i8* %8570, align 1
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8571, align 1
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8572, align 1
  store %struct.Memory* %loadMem_40c028, %struct.Memory** %MEMORY
  %loadMem_40c02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8574 = getelementptr inbounds %struct.GPR, %struct.GPR* %8573, i32 0, i32 33
  %8575 = getelementptr inbounds %struct.Reg, %struct.Reg* %8574, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %8575 to i64*
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8577 = getelementptr inbounds %struct.GPR, %struct.GPR* %8576, i32 0, i32 5
  %8578 = getelementptr inbounds %struct.Reg, %struct.Reg* %8577, i32 0, i32 0
  %ECX.i666 = bitcast %union.anon* %8578 to i32*
  %8579 = load i32, i32* %ECX.i666
  %8580 = zext i32 %8579 to i64
  %8581 = load i64, i64* %PC.i665
  %8582 = add i64 %8581, 7
  store i64 %8582, i64* %PC.i665
  store i32 %8579, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c02f, %struct.Memory** %MEMORY
  %loadMem_40c036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 33
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %8585 to i64*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 1
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %RAX.i663 = bitcast %union.anon* %8588 to i64*
  %8589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8590 = getelementptr inbounds %struct.GPR, %struct.GPR* %8589, i32 0, i32 15
  %8591 = getelementptr inbounds %struct.Reg, %struct.Reg* %8590, i32 0, i32 0
  %RBP.i664 = bitcast %union.anon* %8591 to i64*
  %8592 = load i64, i64* %RBP.i664
  %8593 = sub i64 %8592, 24
  %8594 = load i64, i64* %PC.i662
  %8595 = add i64 %8594, 4
  store i64 %8595, i64* %PC.i662
  %8596 = inttoptr i64 %8593 to i32*
  %8597 = load i32, i32* %8596
  %8598 = sext i32 %8597 to i64
  store i64 %8598, i64* %RAX.i663, align 8
  store %struct.Memory* %loadMem_40c036, %struct.Memory** %MEMORY
  %loadMem_40c03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8600 = getelementptr inbounds %struct.GPR, %struct.GPR* %8599, i32 0, i32 33
  %8601 = getelementptr inbounds %struct.Reg, %struct.Reg* %8600, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %8601 to i64*
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 1
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %8604 to i64*
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 5
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %RCX.i661 = bitcast %union.anon* %8607 to i64*
  %8608 = load i64, i64* %RAX.i660
  %8609 = mul i64 %8608, 4
  %8610 = add i64 %8609, 9047808
  %8611 = load i64, i64* %PC.i659
  %8612 = add i64 %8611, 7
  store i64 %8612, i64* %PC.i659
  %8613 = inttoptr i64 %8610 to i32*
  %8614 = load i32, i32* %8613
  %8615 = zext i32 %8614 to i64
  store i64 %8615, i64* %RCX.i661, align 8
  store %struct.Memory* %loadMem_40c03a, %struct.Memory** %MEMORY
  %loadMem_40c041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8617 = getelementptr inbounds %struct.GPR, %struct.GPR* %8616, i32 0, i32 33
  %8618 = getelementptr inbounds %struct.Reg, %struct.Reg* %8617, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %8618 to i64*
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8620 = getelementptr inbounds %struct.GPR, %struct.GPR* %8619, i32 0, i32 5
  %8621 = getelementptr inbounds %struct.Reg, %struct.Reg* %8620, i32 0, i32 0
  %RCX.i658 = bitcast %union.anon* %8621 to i64*
  %8622 = load i64, i64* %RCX.i658
  %8623 = load i64, i64* %PC.i657
  %8624 = add i64 %8623, 7
  store i64 %8624, i64* %PC.i657
  %8625 = trunc i64 %8622 to i32
  %8626 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %8627 = xor i32 %8626, %8625
  %8628 = zext i32 %8627 to i64
  store i64 %8628, i64* %RCX.i658, align 8
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8629, align 1
  %8630 = and i32 %8627, 255
  %8631 = call i32 @llvm.ctpop.i32(i32 %8630)
  %8632 = trunc i32 %8631 to i8
  %8633 = and i8 %8632, 1
  %8634 = xor i8 %8633, 1
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8634, i8* %8635, align 1
  %8636 = icmp eq i32 %8627, 0
  %8637 = zext i1 %8636 to i8
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8637, i8* %8638, align 1
  %8639 = lshr i32 %8627, 31
  %8640 = trunc i32 %8639 to i8
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8640, i8* %8641, align 1
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8642, align 1
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8643, align 1
  store %struct.Memory* %loadMem_40c041, %struct.Memory** %MEMORY
  %loadMem_40c048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8645 = getelementptr inbounds %struct.GPR, %struct.GPR* %8644, i32 0, i32 33
  %8646 = getelementptr inbounds %struct.Reg, %struct.Reg* %8645, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %8646 to i64*
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8648 = getelementptr inbounds %struct.GPR, %struct.GPR* %8647, i32 0, i32 5
  %8649 = getelementptr inbounds %struct.Reg, %struct.Reg* %8648, i32 0, i32 0
  %ECX.i656 = bitcast %union.anon* %8649 to i32*
  %8650 = load i32, i32* %ECX.i656
  %8651 = zext i32 %8650 to i64
  %8652 = load i64, i64* %PC.i655
  %8653 = add i64 %8652, 7
  store i64 %8653, i64* %PC.i655
  store i32 %8650, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c048, %struct.Memory** %MEMORY
  %loadMem_40c04f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8655 = getelementptr inbounds %struct.GPR, %struct.GPR* %8654, i32 0, i32 33
  %8656 = getelementptr inbounds %struct.Reg, %struct.Reg* %8655, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %8656 to i64*
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 5
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %RCX.i654 = bitcast %union.anon* %8659 to i64*
  %8660 = load i64, i64* %PC.i653
  %8661 = add i64 %8660, 7
  store i64 %8661, i64* %PC.i653
  %8662 = load i32, i32* bitcast (%G_0x62dab4_type* @G_0x62dab4 to i32*)
  %8663 = zext i32 %8662 to i64
  store i64 %8663, i64* %RCX.i654, align 8
  store %struct.Memory* %loadMem_40c04f, %struct.Memory** %MEMORY
  %loadMem_40c056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8665 = getelementptr inbounds %struct.GPR, %struct.GPR* %8664, i32 0, i32 33
  %8666 = getelementptr inbounds %struct.Reg, %struct.Reg* %8665, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %8666 to i64*
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 7
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %RDX.i652 = bitcast %union.anon* %8669 to i64*
  %8670 = load i64, i64* %PC.i651
  %8671 = add i64 %8670, 7
  store i64 %8671, i64* %PC.i651
  %8672 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %8673 = zext i32 %8672 to i64
  store i64 %8673, i64* %RDX.i652, align 8
  store %struct.Memory* %loadMem_40c056, %struct.Memory** %MEMORY
  %loadMem_40c05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8675 = getelementptr inbounds %struct.GPR, %struct.GPR* %8674, i32 0, i32 33
  %8676 = getelementptr inbounds %struct.Reg, %struct.Reg* %8675, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %8676 to i64*
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8678 = getelementptr inbounds %struct.GPR, %struct.GPR* %8677, i32 0, i32 5
  %8679 = getelementptr inbounds %struct.Reg, %struct.Reg* %8678, i32 0, i32 0
  %ECX.i649 = bitcast %union.anon* %8679 to i32*
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 7
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %RDX.i650 = bitcast %union.anon* %8682 to i64*
  %8683 = load i64, i64* %RDX.i650
  %8684 = load i32, i32* %ECX.i649
  %8685 = zext i32 %8684 to i64
  %8686 = load i64, i64* %PC.i648
  %8687 = add i64 %8686, 2
  store i64 %8687, i64* %PC.i648
  %8688 = trunc i64 %8683 to i32
  %8689 = sub i32 %8688, %8684
  %8690 = zext i32 %8689 to i64
  store i64 %8690, i64* %RDX.i650, align 8
  %8691 = icmp ult i32 %8688, %8684
  %8692 = zext i1 %8691 to i8
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8692, i8* %8693, align 1
  %8694 = and i32 %8689, 255
  %8695 = call i32 @llvm.ctpop.i32(i32 %8694)
  %8696 = trunc i32 %8695 to i8
  %8697 = and i8 %8696, 1
  %8698 = xor i8 %8697, 1
  %8699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8698, i8* %8699, align 1
  %8700 = xor i64 %8685, %8683
  %8701 = trunc i64 %8700 to i32
  %8702 = xor i32 %8701, %8689
  %8703 = lshr i32 %8702, 4
  %8704 = trunc i32 %8703 to i8
  %8705 = and i8 %8704, 1
  %8706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8705, i8* %8706, align 1
  %8707 = icmp eq i32 %8689, 0
  %8708 = zext i1 %8707 to i8
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8708, i8* %8709, align 1
  %8710 = lshr i32 %8689, 31
  %8711 = trunc i32 %8710 to i8
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8711, i8* %8712, align 1
  %8713 = lshr i32 %8688, 31
  %8714 = lshr i32 %8684, 31
  %8715 = xor i32 %8714, %8713
  %8716 = xor i32 %8710, %8713
  %8717 = add i32 %8716, %8715
  %8718 = icmp eq i32 %8717, 2
  %8719 = zext i1 %8718 to i8
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8719, i8* %8720, align 1
  store %struct.Memory* %loadMem_40c05d, %struct.Memory** %MEMORY
  %loadMem_40c05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8722 = getelementptr inbounds %struct.GPR, %struct.GPR* %8721, i32 0, i32 33
  %8723 = getelementptr inbounds %struct.Reg, %struct.Reg* %8722, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %8723 to i64*
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8725 = getelementptr inbounds %struct.GPR, %struct.GPR* %8724, i32 0, i32 7
  %8726 = getelementptr inbounds %struct.Reg, %struct.Reg* %8725, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %8726 to i32*
  %8727 = load i32, i32* %EDX.i
  %8728 = zext i32 %8727 to i64
  %8729 = load i64, i64* %PC.i647
  %8730 = add i64 %8729, 7
  store i64 %8730, i64* %PC.i647
  store i32 %8727, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40c05f, %struct.Memory** %MEMORY
  %loadMem_40c066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8732 = getelementptr inbounds %struct.GPR, %struct.GPR* %8731, i32 0, i32 33
  %8733 = getelementptr inbounds %struct.Reg, %struct.Reg* %8732, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %8733 to i64*
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 1
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %RAX.i645 = bitcast %union.anon* %8736 to i64*
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 15
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %RBP.i646 = bitcast %union.anon* %8739 to i64*
  %8740 = load i64, i64* %RBP.i646
  %8741 = sub i64 %8740, 24
  %8742 = load i64, i64* %PC.i644
  %8743 = add i64 %8742, 4
  store i64 %8743, i64* %PC.i644
  %8744 = inttoptr i64 %8741 to i32*
  %8745 = load i32, i32* %8744
  %8746 = sext i32 %8745 to i64
  store i64 %8746, i64* %RAX.i645, align 8
  store %struct.Memory* %loadMem_40c066, %struct.Memory** %MEMORY
  %loadMem_40c06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 33
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %8749 to i64*
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 1
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %8752 to i64*
  %8753 = load i64, i64* %RAX.i643
  %8754 = mul i64 %8753, 4
  %8755 = add i64 %8754, 8807744
  %8756 = load i64, i64* %PC.i642
  %8757 = add i64 %8756, 11
  store i64 %8757, i64* %PC.i642
  %8758 = inttoptr i64 %8755 to i32*
  store i32 2, i32* %8758
  store %struct.Memory* %loadMem_40c06a, %struct.Memory** %MEMORY
  %loadMem_40c075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8760 = getelementptr inbounds %struct.GPR, %struct.GPR* %8759, i32 0, i32 33
  %8761 = getelementptr inbounds %struct.Reg, %struct.Reg* %8760, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %8761 to i64*
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8763 = getelementptr inbounds %struct.GPR, %struct.GPR* %8762, i32 0, i32 1
  %8764 = getelementptr inbounds %struct.Reg, %struct.Reg* %8763, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %8764 to i64*
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8766 = getelementptr inbounds %struct.GPR, %struct.GPR* %8765, i32 0, i32 15
  %8767 = getelementptr inbounds %struct.Reg, %struct.Reg* %8766, i32 0, i32 0
  %RBP.i641 = bitcast %union.anon* %8767 to i64*
  %8768 = load i64, i64* %RBP.i641
  %8769 = sub i64 %8768, 20
  %8770 = load i64, i64* %PC.i639
  %8771 = add i64 %8770, 4
  store i64 %8771, i64* %PC.i639
  %8772 = inttoptr i64 %8769 to i32*
  %8773 = load i32, i32* %8772
  %8774 = sext i32 %8773 to i64
  store i64 %8774, i64* %RAX.i640, align 8
  store %struct.Memory* %loadMem_40c075, %struct.Memory** %MEMORY
  %loadMem_40c079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 33
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %8777 to i64*
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 1
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %8780 to i64*
  %8781 = load i64, i64* %RAX.i638
  %8782 = mul i64 %8781, 4
  %8783 = add i64 %8782, 8807744
  %8784 = load i64, i64* %PC.i637
  %8785 = add i64 %8784, 11
  store i64 %8785, i64* %PC.i637
  %8786 = inttoptr i64 %8783 to i32*
  store i32 13, i32* %8786
  store %struct.Memory* %loadMem_40c079, %struct.Memory** %MEMORY
  %loadMem1_40c084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8788 = getelementptr inbounds %struct.GPR, %struct.GPR* %8787, i32 0, i32 33
  %8789 = getelementptr inbounds %struct.Reg, %struct.Reg* %8788, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %8789 to i64*
  %8790 = load i64, i64* %PC.i636
  %8791 = add i64 %8790, -39828
  %8792 = load i64, i64* %PC.i636
  %8793 = add i64 %8792, 5
  %8794 = load i64, i64* %PC.i636
  %8795 = add i64 %8794, 5
  store i64 %8795, i64* %PC.i636
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8797 = load i64, i64* %8796, align 8
  %8798 = add i64 %8797, -8
  %8799 = inttoptr i64 %8798 to i64*
  store i64 %8793, i64* %8799
  store i64 %8798, i64* %8796, align 8
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8791, i64* %8800, align 8
  store %struct.Memory* %loadMem1_40c084, %struct.Memory** %MEMORY
  %loadMem2_40c084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c084 = load i64, i64* %3
  %call2_40c084 = call %struct.Memory* @sub_4024f0.addHolding(%struct.State* %0, i64 %loadPC_40c084, %struct.Memory* %loadMem2_40c084)
  store %struct.Memory* %call2_40c084, %struct.Memory** %MEMORY
  %loadMem_40c089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 33
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %8803 to i64*
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 1
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %8806 to i64*
  %8807 = load i64, i64* %PC.i634
  %8808 = add i64 %8807, 10
  store i64 %8808, i64* %PC.i634
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_40c089, %struct.Memory** %MEMORY
  %loadMem_40c093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8810 = getelementptr inbounds %struct.GPR, %struct.GPR* %8809, i32 0, i32 33
  %8811 = getelementptr inbounds %struct.Reg, %struct.Reg* %8810, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %8811 to i64*
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8813 = getelementptr inbounds %struct.GPR, %struct.GPR* %8812, i32 0, i32 5
  %8814 = getelementptr inbounds %struct.Reg, %struct.Reg* %8813, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %8814 to i64*
  %8815 = load i64, i64* %PC.i632
  %8816 = add i64 %8815, 7
  store i64 %8816, i64* %PC.i632
  %8817 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %8818 = zext i32 %8817 to i64
  store i64 %8818, i64* %RCX.i633, align 8
  store %struct.Memory* %loadMem_40c093, %struct.Memory** %MEMORY
  %loadMem_40c09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 33
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %8821 to i64*
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8823 = getelementptr inbounds %struct.GPR, %struct.GPR* %8822, i32 0, i32 5
  %8824 = getelementptr inbounds %struct.Reg, %struct.Reg* %8823, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %8824 to i64*
  %8825 = load i64, i64* %RCX.i631
  %8826 = load i64, i64* %PC.i630
  %8827 = add i64 %8826, 3
  store i64 %8827, i64* %PC.i630
  %8828 = trunc i64 %8825 to i32
  %8829 = add i32 -1, %8828
  %8830 = zext i32 %8829 to i64
  store i64 %8830, i64* %RCX.i631, align 8
  %8831 = icmp ult i32 %8829, %8828
  %8832 = icmp ult i32 %8829, -1
  %8833 = or i1 %8831, %8832
  %8834 = zext i1 %8833 to i8
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8834, i8* %8835, align 1
  %8836 = and i32 %8829, 255
  %8837 = call i32 @llvm.ctpop.i32(i32 %8836)
  %8838 = trunc i32 %8837 to i8
  %8839 = and i8 %8838, 1
  %8840 = xor i8 %8839, 1
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8840, i8* %8841, align 1
  %8842 = xor i64 -1, %8825
  %8843 = trunc i64 %8842 to i32
  %8844 = xor i32 %8843, %8829
  %8845 = lshr i32 %8844, 4
  %8846 = trunc i32 %8845 to i8
  %8847 = and i8 %8846, 1
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8847, i8* %8848, align 1
  %8849 = icmp eq i32 %8829, 0
  %8850 = zext i1 %8849 to i8
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8850, i8* %8851, align 1
  %8852 = lshr i32 %8829, 31
  %8853 = trunc i32 %8852 to i8
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8853, i8* %8854, align 1
  %8855 = lshr i32 %8828, 31
  %8856 = xor i32 %8852, %8855
  %8857 = xor i32 %8852, 1
  %8858 = add i32 %8856, %8857
  %8859 = icmp eq i32 %8858, 2
  %8860 = zext i1 %8859 to i8
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8860, i8* %8861, align 1
  store %struct.Memory* %loadMem_40c09a, %struct.Memory** %MEMORY
  %loadMem_40c09d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8863 = getelementptr inbounds %struct.GPR, %struct.GPR* %8862, i32 0, i32 33
  %8864 = getelementptr inbounds %struct.Reg, %struct.Reg* %8863, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %8864 to i64*
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8866 = getelementptr inbounds %struct.GPR, %struct.GPR* %8865, i32 0, i32 5
  %8867 = getelementptr inbounds %struct.Reg, %struct.Reg* %8866, i32 0, i32 0
  %ECX.i629 = bitcast %union.anon* %8867 to i32*
  %8868 = load i32, i32* %ECX.i629
  %8869 = zext i32 %8868 to i64
  %8870 = load i64, i64* %PC.i628
  %8871 = add i64 %8870, 7
  store i64 %8871, i64* %PC.i628
  store i32 %8868, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40c09d, %struct.Memory** %MEMORY
  %loadMem_40c0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8873 = getelementptr inbounds %struct.GPR, %struct.GPR* %8872, i32 0, i32 33
  %8874 = getelementptr inbounds %struct.Reg, %struct.Reg* %8873, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %8874 to i64*
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 5
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %RCX.i626 = bitcast %union.anon* %8877 to i64*
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 15
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %RBP.i627 = bitcast %union.anon* %8880 to i64*
  %8881 = load i64, i64* %RBP.i627
  %8882 = sub i64 %8881, 24
  %8883 = load i64, i64* %PC.i625
  %8884 = add i64 %8883, 3
  store i64 %8884, i64* %PC.i625
  %8885 = inttoptr i64 %8882 to i32*
  %8886 = load i32, i32* %8885
  %8887 = zext i32 %8886 to i64
  store i64 %8887, i64* %RCX.i626, align 8
  store %struct.Memory* %loadMem_40c0a4, %struct.Memory** %MEMORY
  %loadMem_40c0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8889 = getelementptr inbounds %struct.GPR, %struct.GPR* %8888, i32 0, i32 33
  %8890 = getelementptr inbounds %struct.Reg, %struct.Reg* %8889, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %8890 to i64*
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8892 = getelementptr inbounds %struct.GPR, %struct.GPR* %8891, i32 0, i32 5
  %8893 = getelementptr inbounds %struct.Reg, %struct.Reg* %8892, i32 0, i32 0
  %RCX.i624 = bitcast %union.anon* %8893 to i64*
  %8894 = load i64, i64* %RCX.i624
  %8895 = load i64, i64* %PC.i623
  %8896 = add i64 %8895, 3
  store i64 %8896, i64* %PC.i623
  %8897 = trunc i64 %8894 to i32
  %8898 = add i32 12, %8897
  %8899 = zext i32 %8898 to i64
  store i64 %8899, i64* %RCX.i624, align 8
  %8900 = icmp ult i32 %8898, %8897
  %8901 = icmp ult i32 %8898, 12
  %8902 = or i1 %8900, %8901
  %8903 = zext i1 %8902 to i8
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8903, i8* %8904, align 1
  %8905 = and i32 %8898, 255
  %8906 = call i32 @llvm.ctpop.i32(i32 %8905)
  %8907 = trunc i32 %8906 to i8
  %8908 = and i8 %8907, 1
  %8909 = xor i8 %8908, 1
  %8910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8909, i8* %8910, align 1
  %8911 = xor i64 12, %8894
  %8912 = trunc i64 %8911 to i32
  %8913 = xor i32 %8912, %8898
  %8914 = lshr i32 %8913, 4
  %8915 = trunc i32 %8914 to i8
  %8916 = and i8 %8915, 1
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8916, i8* %8917, align 1
  %8918 = icmp eq i32 %8898, 0
  %8919 = zext i1 %8918 to i8
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8919, i8* %8920, align 1
  %8921 = lshr i32 %8898, 31
  %8922 = trunc i32 %8921 to i8
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8922, i8* %8923, align 1
  %8924 = lshr i32 %8897, 31
  %8925 = xor i32 %8921, %8924
  %8926 = add i32 %8925, %8921
  %8927 = icmp eq i32 %8926, 2
  %8928 = zext i1 %8927 to i8
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8928, i8* %8929, align 1
  store %struct.Memory* %loadMem_40c0a7, %struct.Memory** %MEMORY
  %loadMem_40c0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8931 = getelementptr inbounds %struct.GPR, %struct.GPR* %8930, i32 0, i32 33
  %8932 = getelementptr inbounds %struct.Reg, %struct.Reg* %8931, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %8932 to i64*
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8934 = getelementptr inbounds %struct.GPR, %struct.GPR* %8933, i32 0, i32 5
  %8935 = getelementptr inbounds %struct.Reg, %struct.Reg* %8934, i32 0, i32 0
  %ECX.i621 = bitcast %union.anon* %8935 to i32*
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8937 = getelementptr inbounds %struct.GPR, %struct.GPR* %8936, i32 0, i32 17
  %8938 = getelementptr inbounds %struct.Reg, %struct.Reg* %8937, i32 0, i32 0
  %R8.i622 = bitcast %union.anon* %8938 to i64*
  %8939 = load i32, i32* %ECX.i621
  %8940 = zext i32 %8939 to i64
  %8941 = load i64, i64* %PC.i620
  %8942 = add i64 %8941, 3
  store i64 %8942, i64* %PC.i620
  %8943 = shl i64 %8940, 32
  %8944 = ashr exact i64 %8943, 32
  store i64 %8944, i64* %R8.i622, align 8
  store %struct.Memory* %loadMem_40c0aa, %struct.Memory** %MEMORY
  %loadMem_40c0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 33
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %8947 to i64*
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8949 = getelementptr inbounds %struct.GPR, %struct.GPR* %8948, i32 0, i32 17
  %8950 = getelementptr inbounds %struct.Reg, %struct.Reg* %8949, i32 0, i32 0
  %R8.i619 = bitcast %union.anon* %8950 to i64*
  %8951 = load i64, i64* %R8.i619
  %8952 = mul i64 %8951, 4
  %8953 = add i64 %8952, 8807744
  %8954 = load i64, i64* %PC.i618
  %8955 = add i64 %8954, 12
  store i64 %8955, i64* %PC.i618
  %8956 = inttoptr i64 %8953 to i32*
  store i32 13, i32* %8956
  store %struct.Memory* %loadMem_40c0ad, %struct.Memory** %MEMORY
  %loadMem_40c0b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8958 = getelementptr inbounds %struct.GPR, %struct.GPR* %8957, i32 0, i32 33
  %8959 = getelementptr inbounds %struct.Reg, %struct.Reg* %8958, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %8959 to i64*
  %8960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8961 = getelementptr inbounds %struct.GPR, %struct.GPR* %8960, i32 0, i32 15
  %8962 = getelementptr inbounds %struct.Reg, %struct.Reg* %8961, i32 0, i32 0
  %RBP.i616 = bitcast %union.anon* %8962 to i64*
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8964 = getelementptr inbounds %struct.GPR, %struct.GPR* %8963, i32 0, i32 17
  %8965 = getelementptr inbounds %struct.Reg, %struct.Reg* %8964, i32 0, i32 0
  %R8.i617 = bitcast %union.anon* %8965 to i64*
  %8966 = load i64, i64* %RBP.i616
  %8967 = sub i64 %8966, 24
  %8968 = load i64, i64* %PC.i615
  %8969 = add i64 %8968, 4
  store i64 %8969, i64* %PC.i615
  %8970 = inttoptr i64 %8967 to i32*
  %8971 = load i32, i32* %8970
  %8972 = sext i32 %8971 to i64
  store i64 %8972, i64* %R8.i617, align 8
  store %struct.Memory* %loadMem_40c0b9, %struct.Memory** %MEMORY
  %loadMem_40c0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8974 = getelementptr inbounds %struct.GPR, %struct.GPR* %8973, i32 0, i32 33
  %8975 = getelementptr inbounds %struct.Reg, %struct.Reg* %8974, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %8975 to i64*
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8977 = getelementptr inbounds %struct.GPR, %struct.GPR* %8976, i32 0, i32 5
  %8978 = getelementptr inbounds %struct.Reg, %struct.Reg* %8977, i32 0, i32 0
  %RCX.i613 = bitcast %union.anon* %8978 to i64*
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 17
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %R8.i614 = bitcast %union.anon* %8981 to i64*
  %8982 = load i64, i64* %R8.i614
  %8983 = mul i64 %8982, 4
  %8984 = add i64 %8983, 8922032
  %8985 = load i64, i64* %PC.i612
  %8986 = add i64 %8985, 8
  store i64 %8986, i64* %PC.i612
  %8987 = inttoptr i64 %8984 to i32*
  %8988 = load i32, i32* %8987
  %8989 = zext i32 %8988 to i64
  store i64 %8989, i64* %RCX.i613, align 8
  store %struct.Memory* %loadMem_40c0bd, %struct.Memory** %MEMORY
  %loadMem_40c0c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8991 = getelementptr inbounds %struct.GPR, %struct.GPR* %8990, i32 0, i32 33
  %8992 = getelementptr inbounds %struct.Reg, %struct.Reg* %8991, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %8992 to i64*
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8994 = getelementptr inbounds %struct.GPR, %struct.GPR* %8993, i32 0, i32 5
  %8995 = getelementptr inbounds %struct.Reg, %struct.Reg* %8994, i32 0, i32 0
  %RCX.i611 = bitcast %union.anon* %8995 to i64*
  %8996 = load i64, i64* %RCX.i611
  %8997 = load i64, i64* %PC.i610
  %8998 = add i64 %8997, 3
  store i64 %8998, i64* %PC.i610
  %8999 = trunc i64 %8996 to i32
  %9000 = add i32 1, %8999
  %9001 = zext i32 %9000 to i64
  store i64 %9001, i64* %RCX.i611, align 8
  %9002 = icmp ult i32 %9000, %8999
  %9003 = icmp ult i32 %9000, 1
  %9004 = or i1 %9002, %9003
  %9005 = zext i1 %9004 to i8
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9005, i8* %9006, align 1
  %9007 = and i32 %9000, 255
  %9008 = call i32 @llvm.ctpop.i32(i32 %9007)
  %9009 = trunc i32 %9008 to i8
  %9010 = and i8 %9009, 1
  %9011 = xor i8 %9010, 1
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9011, i8* %9012, align 1
  %9013 = xor i64 1, %8996
  %9014 = trunc i64 %9013 to i32
  %9015 = xor i32 %9014, %9000
  %9016 = lshr i32 %9015, 4
  %9017 = trunc i32 %9016 to i8
  %9018 = and i8 %9017, 1
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9018, i8* %9019, align 1
  %9020 = icmp eq i32 %9000, 0
  %9021 = zext i1 %9020 to i8
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9021, i8* %9022, align 1
  %9023 = lshr i32 %9000, 31
  %9024 = trunc i32 %9023 to i8
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9024, i8* %9025, align 1
  %9026 = lshr i32 %8999, 31
  %9027 = xor i32 %9023, %9026
  %9028 = add i32 %9027, %9023
  %9029 = icmp eq i32 %9028, 2
  %9030 = zext i1 %9029 to i8
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9030, i8* %9031, align 1
  store %struct.Memory* %loadMem_40c0c5, %struct.Memory** %MEMORY
  %loadMem_40c0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 33
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 5
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %ECX.i608 = bitcast %union.anon* %9037 to i32*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9039 = getelementptr inbounds %struct.GPR, %struct.GPR* %9038, i32 0, i32 17
  %9040 = getelementptr inbounds %struct.Reg, %struct.Reg* %9039, i32 0, i32 0
  %R8.i609 = bitcast %union.anon* %9040 to i64*
  %9041 = load i64, i64* %R8.i609
  %9042 = mul i64 %9041, 4
  %9043 = add i64 %9042, 8922032
  %9044 = load i32, i32* %ECX.i608
  %9045 = zext i32 %9044 to i64
  %9046 = load i64, i64* %PC.i607
  %9047 = add i64 %9046, 8
  store i64 %9047, i64* %PC.i607
  %9048 = inttoptr i64 %9043 to i32*
  store i32 %9044, i32* %9048
  store %struct.Memory* %loadMem_40c0c8, %struct.Memory** %MEMORY
  %loadMem_40c0d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9050 = getelementptr inbounds %struct.GPR, %struct.GPR* %9049, i32 0, i32 33
  %9051 = getelementptr inbounds %struct.Reg, %struct.Reg* %9050, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %9051 to i64*
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9053 = getelementptr inbounds %struct.GPR, %struct.GPR* %9052, i32 0, i32 15
  %9054 = getelementptr inbounds %struct.Reg, %struct.Reg* %9053, i32 0, i32 0
  %RBP.i605 = bitcast %union.anon* %9054 to i64*
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 17
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %R8.i606 = bitcast %union.anon* %9057 to i64*
  %9058 = load i64, i64* %RBP.i605
  %9059 = sub i64 %9058, 20
  %9060 = load i64, i64* %PC.i604
  %9061 = add i64 %9060, 4
  store i64 %9061, i64* %PC.i604
  %9062 = inttoptr i64 %9059 to i32*
  %9063 = load i32, i32* %9062
  %9064 = sext i32 %9063 to i64
  store i64 %9064, i64* %R8.i606, align 8
  store %struct.Memory* %loadMem_40c0d0, %struct.Memory** %MEMORY
  %loadMem_40c0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9066 = getelementptr inbounds %struct.GPR, %struct.GPR* %9065, i32 0, i32 33
  %9067 = getelementptr inbounds %struct.Reg, %struct.Reg* %9066, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %9067 to i64*
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9069 = getelementptr inbounds %struct.GPR, %struct.GPR* %9068, i32 0, i32 5
  %9070 = getelementptr inbounds %struct.Reg, %struct.Reg* %9069, i32 0, i32 0
  %RCX.i602 = bitcast %union.anon* %9070 to i64*
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9072 = getelementptr inbounds %struct.GPR, %struct.GPR* %9071, i32 0, i32 17
  %9073 = getelementptr inbounds %struct.Reg, %struct.Reg* %9072, i32 0, i32 0
  %R8.i603 = bitcast %union.anon* %9073 to i64*
  %9074 = load i64, i64* %R8.i603
  %9075 = mul i64 %9074, 4
  %9076 = add i64 %9075, 8922032
  %9077 = load i64, i64* %PC.i601
  %9078 = add i64 %9077, 8
  store i64 %9078, i64* %PC.i601
  %9079 = inttoptr i64 %9076 to i32*
  %9080 = load i32, i32* %9079
  %9081 = zext i32 %9080 to i64
  store i64 %9081, i64* %RCX.i602, align 8
  store %struct.Memory* %loadMem_40c0d4, %struct.Memory** %MEMORY
  %loadMem_40c0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9083 = getelementptr inbounds %struct.GPR, %struct.GPR* %9082, i32 0, i32 33
  %9084 = getelementptr inbounds %struct.Reg, %struct.Reg* %9083, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %9084 to i64*
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9086 = getelementptr inbounds %struct.GPR, %struct.GPR* %9085, i32 0, i32 5
  %9087 = getelementptr inbounds %struct.Reg, %struct.Reg* %9086, i32 0, i32 0
  %RCX.i600 = bitcast %union.anon* %9087 to i64*
  %9088 = load i64, i64* %RCX.i600
  %9089 = load i64, i64* %PC.i599
  %9090 = add i64 %9089, 3
  store i64 %9090, i64* %PC.i599
  %9091 = trunc i64 %9088 to i32
  %9092 = add i32 1, %9091
  %9093 = zext i32 %9092 to i64
  store i64 %9093, i64* %RCX.i600, align 8
  %9094 = icmp ult i32 %9092, %9091
  %9095 = icmp ult i32 %9092, 1
  %9096 = or i1 %9094, %9095
  %9097 = zext i1 %9096 to i8
  %9098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9097, i8* %9098, align 1
  %9099 = and i32 %9092, 255
  %9100 = call i32 @llvm.ctpop.i32(i32 %9099)
  %9101 = trunc i32 %9100 to i8
  %9102 = and i8 %9101, 1
  %9103 = xor i8 %9102, 1
  %9104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9103, i8* %9104, align 1
  %9105 = xor i64 1, %9088
  %9106 = trunc i64 %9105 to i32
  %9107 = xor i32 %9106, %9092
  %9108 = lshr i32 %9107, 4
  %9109 = trunc i32 %9108 to i8
  %9110 = and i8 %9109, 1
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9110, i8* %9111, align 1
  %9112 = icmp eq i32 %9092, 0
  %9113 = zext i1 %9112 to i8
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9113, i8* %9114, align 1
  %9115 = lshr i32 %9092, 31
  %9116 = trunc i32 %9115 to i8
  %9117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9116, i8* %9117, align 1
  %9118 = lshr i32 %9091, 31
  %9119 = xor i32 %9115, %9118
  %9120 = add i32 %9119, %9115
  %9121 = icmp eq i32 %9120, 2
  %9122 = zext i1 %9121 to i8
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9122, i8* %9123, align 1
  store %struct.Memory* %loadMem_40c0dc, %struct.Memory** %MEMORY
  %loadMem_40c0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 33
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %9126 to i64*
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9128 = getelementptr inbounds %struct.GPR, %struct.GPR* %9127, i32 0, i32 5
  %9129 = getelementptr inbounds %struct.Reg, %struct.Reg* %9128, i32 0, i32 0
  %ECX.i597 = bitcast %union.anon* %9129 to i32*
  %9130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9131 = getelementptr inbounds %struct.GPR, %struct.GPR* %9130, i32 0, i32 17
  %9132 = getelementptr inbounds %struct.Reg, %struct.Reg* %9131, i32 0, i32 0
  %R8.i598 = bitcast %union.anon* %9132 to i64*
  %9133 = load i64, i64* %R8.i598
  %9134 = mul i64 %9133, 4
  %9135 = add i64 %9134, 8922032
  %9136 = load i32, i32* %ECX.i597
  %9137 = zext i32 %9136 to i64
  %9138 = load i64, i64* %PC.i596
  %9139 = add i64 %9138, 8
  store i64 %9139, i64* %PC.i596
  %9140 = inttoptr i64 %9135 to i32*
  store i32 %9136, i32* %9140
  store %struct.Memory* %loadMem_40c0df, %struct.Memory** %MEMORY
  %loadMem_40c0e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9142 = getelementptr inbounds %struct.GPR, %struct.GPR* %9141, i32 0, i32 33
  %9143 = getelementptr inbounds %struct.Reg, %struct.Reg* %9142, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %9143 to i64*
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9145 = getelementptr inbounds %struct.GPR, %struct.GPR* %9144, i32 0, i32 5
  %9146 = getelementptr inbounds %struct.Reg, %struct.Reg* %9145, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %9146 to i64*
  %9147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9148 = getelementptr inbounds %struct.GPR, %struct.GPR* %9147, i32 0, i32 15
  %9149 = getelementptr inbounds %struct.Reg, %struct.Reg* %9148, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %9149 to i64*
  %9150 = load i64, i64* %RBP.i595
  %9151 = sub i64 %9150, 24
  %9152 = load i64, i64* %PC.i593
  %9153 = add i64 %9152, 3
  store i64 %9153, i64* %PC.i593
  %9154 = inttoptr i64 %9151 to i32*
  %9155 = load i32, i32* %9154
  %9156 = zext i32 %9155 to i64
  store i64 %9156, i64* %RCX.i594, align 8
  store %struct.Memory* %loadMem_40c0e7, %struct.Memory** %MEMORY
  %loadMem_40c0ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 33
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %9159 to i64*
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 5
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %RCX.i592 = bitcast %union.anon* %9162 to i64*
  %9163 = load i64, i64* %RCX.i592
  %9164 = load i64, i64* %PC.i591
  %9165 = add i64 %9164, 3
  store i64 %9165, i64* %PC.i591
  %9166 = trunc i64 %9163 to i32
  %9167 = add i32 12, %9166
  %9168 = zext i32 %9167 to i64
  store i64 %9168, i64* %RCX.i592, align 8
  %9169 = icmp ult i32 %9167, %9166
  %9170 = icmp ult i32 %9167, 12
  %9171 = or i1 %9169, %9170
  %9172 = zext i1 %9171 to i8
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9172, i8* %9173, align 1
  %9174 = and i32 %9167, 255
  %9175 = call i32 @llvm.ctpop.i32(i32 %9174)
  %9176 = trunc i32 %9175 to i8
  %9177 = and i8 %9176, 1
  %9178 = xor i8 %9177, 1
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9178, i8* %9179, align 1
  %9180 = xor i64 12, %9163
  %9181 = trunc i64 %9180 to i32
  %9182 = xor i32 %9181, %9167
  %9183 = lshr i32 %9182, 4
  %9184 = trunc i32 %9183 to i8
  %9185 = and i8 %9184, 1
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9185, i8* %9186, align 1
  %9187 = icmp eq i32 %9167, 0
  %9188 = zext i1 %9187 to i8
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9188, i8* %9189, align 1
  %9190 = lshr i32 %9167, 31
  %9191 = trunc i32 %9190 to i8
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9191, i8* %9192, align 1
  %9193 = lshr i32 %9166, 31
  %9194 = xor i32 %9190, %9193
  %9195 = add i32 %9194, %9190
  %9196 = icmp eq i32 %9195, 2
  %9197 = zext i1 %9196 to i8
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9197, i8* %9198, align 1
  store %struct.Memory* %loadMem_40c0ea, %struct.Memory** %MEMORY
  %loadMem_40c0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9200 = getelementptr inbounds %struct.GPR, %struct.GPR* %9199, i32 0, i32 33
  %9201 = getelementptr inbounds %struct.Reg, %struct.Reg* %9200, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %9201 to i64*
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9203 = getelementptr inbounds %struct.GPR, %struct.GPR* %9202, i32 0, i32 5
  %9204 = getelementptr inbounds %struct.Reg, %struct.Reg* %9203, i32 0, i32 0
  %ECX.i589 = bitcast %union.anon* %9204 to i32*
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9206 = getelementptr inbounds %struct.GPR, %struct.GPR* %9205, i32 0, i32 17
  %9207 = getelementptr inbounds %struct.Reg, %struct.Reg* %9206, i32 0, i32 0
  %R8.i590 = bitcast %union.anon* %9207 to i64*
  %9208 = load i32, i32* %ECX.i589
  %9209 = zext i32 %9208 to i64
  %9210 = load i64, i64* %PC.i588
  %9211 = add i64 %9210, 3
  store i64 %9211, i64* %PC.i588
  %9212 = shl i64 %9209, 32
  %9213 = ashr exact i64 %9212, 32
  store i64 %9213, i64* %R8.i590, align 8
  store %struct.Memory* %loadMem_40c0ed, %struct.Memory** %MEMORY
  %loadMem_40c0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9215 = getelementptr inbounds %struct.GPR, %struct.GPR* %9214, i32 0, i32 33
  %9216 = getelementptr inbounds %struct.Reg, %struct.Reg* %9215, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %9216 to i64*
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9218 = getelementptr inbounds %struct.GPR, %struct.GPR* %9217, i32 0, i32 5
  %9219 = getelementptr inbounds %struct.Reg, %struct.Reg* %9218, i32 0, i32 0
  %RCX.i586 = bitcast %union.anon* %9219 to i64*
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9221 = getelementptr inbounds %struct.GPR, %struct.GPR* %9220, i32 0, i32 17
  %9222 = getelementptr inbounds %struct.Reg, %struct.Reg* %9221, i32 0, i32 0
  %R8.i587 = bitcast %union.anon* %9222 to i64*
  %9223 = load i64, i64* %R8.i587
  %9224 = mul i64 %9223, 4
  %9225 = add i64 %9224, 8922032
  %9226 = load i64, i64* %PC.i585
  %9227 = add i64 %9226, 8
  store i64 %9227, i64* %PC.i585
  %9228 = inttoptr i64 %9225 to i32*
  %9229 = load i32, i32* %9228
  %9230 = zext i32 %9229 to i64
  store i64 %9230, i64* %RCX.i586, align 8
  store %struct.Memory* %loadMem_40c0f0, %struct.Memory** %MEMORY
  %loadMem_40c0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9232 = getelementptr inbounds %struct.GPR, %struct.GPR* %9231, i32 0, i32 33
  %9233 = getelementptr inbounds %struct.Reg, %struct.Reg* %9232, i32 0, i32 0
  %PC.i583 = bitcast %union.anon* %9233 to i64*
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9235 = getelementptr inbounds %struct.GPR, %struct.GPR* %9234, i32 0, i32 5
  %9236 = getelementptr inbounds %struct.Reg, %struct.Reg* %9235, i32 0, i32 0
  %RCX.i584 = bitcast %union.anon* %9236 to i64*
  %9237 = load i64, i64* %RCX.i584
  %9238 = load i64, i64* %PC.i583
  %9239 = add i64 %9238, 3
  store i64 %9239, i64* %PC.i583
  %9240 = trunc i64 %9237 to i32
  %9241 = add i32 1, %9240
  %9242 = zext i32 %9241 to i64
  store i64 %9242, i64* %RCX.i584, align 8
  %9243 = icmp ult i32 %9241, %9240
  %9244 = icmp ult i32 %9241, 1
  %9245 = or i1 %9243, %9244
  %9246 = zext i1 %9245 to i8
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9246, i8* %9247, align 1
  %9248 = and i32 %9241, 255
  %9249 = call i32 @llvm.ctpop.i32(i32 %9248)
  %9250 = trunc i32 %9249 to i8
  %9251 = and i8 %9250, 1
  %9252 = xor i8 %9251, 1
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9252, i8* %9253, align 1
  %9254 = xor i64 1, %9237
  %9255 = trunc i64 %9254 to i32
  %9256 = xor i32 %9255, %9241
  %9257 = lshr i32 %9256, 4
  %9258 = trunc i32 %9257 to i8
  %9259 = and i8 %9258, 1
  %9260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9259, i8* %9260, align 1
  %9261 = icmp eq i32 %9241, 0
  %9262 = zext i1 %9261 to i8
  %9263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9262, i8* %9263, align 1
  %9264 = lshr i32 %9241, 31
  %9265 = trunc i32 %9264 to i8
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9265, i8* %9266, align 1
  %9267 = lshr i32 %9240, 31
  %9268 = xor i32 %9264, %9267
  %9269 = add i32 %9268, %9264
  %9270 = icmp eq i32 %9269, 2
  %9271 = zext i1 %9270 to i8
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9271, i8* %9272, align 1
  store %struct.Memory* %loadMem_40c0f8, %struct.Memory** %MEMORY
  %loadMem_40c0fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9274 = getelementptr inbounds %struct.GPR, %struct.GPR* %9273, i32 0, i32 33
  %9275 = getelementptr inbounds %struct.Reg, %struct.Reg* %9274, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %9275 to i64*
  %9276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9277 = getelementptr inbounds %struct.GPR, %struct.GPR* %9276, i32 0, i32 5
  %9278 = getelementptr inbounds %struct.Reg, %struct.Reg* %9277, i32 0, i32 0
  %ECX.i581 = bitcast %union.anon* %9278 to i32*
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 17
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %R8.i582 = bitcast %union.anon* %9281 to i64*
  %9282 = load i64, i64* %R8.i582
  %9283 = mul i64 %9282, 4
  %9284 = add i64 %9283, 8922032
  %9285 = load i32, i32* %ECX.i581
  %9286 = zext i32 %9285 to i64
  %9287 = load i64, i64* %PC.i580
  %9288 = add i64 %9287, 8
  store i64 %9288, i64* %PC.i580
  %9289 = inttoptr i64 %9284 to i32*
  store i32 %9285, i32* %9289
  store %struct.Memory* %loadMem_40c0fb, %struct.Memory** %MEMORY
  %loadMem_40c103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9291 = getelementptr inbounds %struct.GPR, %struct.GPR* %9290, i32 0, i32 33
  %9292 = getelementptr inbounds %struct.Reg, %struct.Reg* %9291, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %9292 to i64*
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 5
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %9295 to i64*
  %9296 = load i64, i64* %PC.i578
  %9297 = add i64 %9296, 7
  store i64 %9297, i64* %PC.i578
  %9298 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %9299 = zext i32 %9298 to i64
  store i64 %9299, i64* %RCX.i579, align 8
  store %struct.Memory* %loadMem_40c103, %struct.Memory** %MEMORY
  %loadMem_40c10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9301 = getelementptr inbounds %struct.GPR, %struct.GPR* %9300, i32 0, i32 33
  %9302 = getelementptr inbounds %struct.Reg, %struct.Reg* %9301, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %9302 to i64*
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9304 = getelementptr inbounds %struct.GPR, %struct.GPR* %9303, i32 0, i32 5
  %9305 = getelementptr inbounds %struct.Reg, %struct.Reg* %9304, i32 0, i32 0
  %RCX.i577 = bitcast %union.anon* %9305 to i64*
  %9306 = load i64, i64* %RCX.i577
  %9307 = load i64, i64* %PC.i576
  %9308 = add i64 %9307, 3
  store i64 %9308, i64* %PC.i576
  %9309 = xor i64 1, %9306
  %9310 = trunc i64 %9309 to i32
  %9311 = and i64 %9309, 4294967295
  store i64 %9311, i64* %RCX.i577, align 8
  %9312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9312, align 1
  %9313 = and i32 %9310, 255
  %9314 = call i32 @llvm.ctpop.i32(i32 %9313)
  %9315 = trunc i32 %9314 to i8
  %9316 = and i8 %9315, 1
  %9317 = xor i8 %9316, 1
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9317, i8* %9318, align 1
  %9319 = icmp eq i32 %9310, 0
  %9320 = zext i1 %9319 to i8
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9320, i8* %9321, align 1
  %9322 = lshr i32 %9310, 31
  %9323 = trunc i32 %9322 to i8
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9323, i8* %9324, align 1
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9325, align 1
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9326, align 1
  store %struct.Memory* %loadMem_40c10a, %struct.Memory** %MEMORY
  %loadMem_40c10d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9328 = getelementptr inbounds %struct.GPR, %struct.GPR* %9327, i32 0, i32 33
  %9329 = getelementptr inbounds %struct.Reg, %struct.Reg* %9328, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %9329 to i64*
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9331 = getelementptr inbounds %struct.GPR, %struct.GPR* %9330, i32 0, i32 5
  %9332 = getelementptr inbounds %struct.Reg, %struct.Reg* %9331, i32 0, i32 0
  %ECX.i575 = bitcast %union.anon* %9332 to i32*
  %9333 = load i32, i32* %ECX.i575
  %9334 = zext i32 %9333 to i64
  %9335 = load i64, i64* %PC.i574
  %9336 = add i64 %9335, 7
  store i64 %9336, i64* %PC.i574
  store i32 %9333, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40c10d, %struct.Memory** %MEMORY
  %loadMem_40c114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 33
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %9339 to i64*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 5
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %9342 to i64*
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9344 = getelementptr inbounds %struct.GPR, %struct.GPR* %9343, i32 0, i32 15
  %9345 = getelementptr inbounds %struct.Reg, %struct.Reg* %9344, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %9345 to i64*
  %9346 = load i64, i64* %RBP.i573
  %9347 = sub i64 %9346, 24
  %9348 = load i64, i64* %PC.i571
  %9349 = add i64 %9348, 3
  store i64 %9349, i64* %PC.i571
  %9350 = inttoptr i64 %9347 to i32*
  %9351 = load i32, i32* %9350
  %9352 = zext i32 %9351 to i64
  store i64 %9352, i64* %RCX.i572, align 8
  store %struct.Memory* %loadMem_40c114, %struct.Memory** %MEMORY
  %loadMem_40c117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 33
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %9355 to i64*
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 5
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %RCX.i570 = bitcast %union.anon* %9358 to i64*
  %9359 = load i64, i64* %RCX.i570
  %9360 = load i64, i64* %PC.i569
  %9361 = add i64 %9360, 3
  store i64 %9361, i64* %PC.i569
  %9362 = trunc i64 %9359 to i32
  %9363 = add i32 12, %9362
  %9364 = zext i32 %9363 to i64
  store i64 %9364, i64* %RCX.i570, align 8
  %9365 = icmp ult i32 %9363, %9362
  %9366 = icmp ult i32 %9363, 12
  %9367 = or i1 %9365, %9366
  %9368 = zext i1 %9367 to i8
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9368, i8* %9369, align 1
  %9370 = and i32 %9363, 255
  %9371 = call i32 @llvm.ctpop.i32(i32 %9370)
  %9372 = trunc i32 %9371 to i8
  %9373 = and i8 %9372, 1
  %9374 = xor i8 %9373, 1
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9374, i8* %9375, align 1
  %9376 = xor i64 12, %9359
  %9377 = trunc i64 %9376 to i32
  %9378 = xor i32 %9377, %9363
  %9379 = lshr i32 %9378, 4
  %9380 = trunc i32 %9379 to i8
  %9381 = and i8 %9380, 1
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9381, i8* %9382, align 1
  %9383 = icmp eq i32 %9363, 0
  %9384 = zext i1 %9383 to i8
  %9385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9384, i8* %9385, align 1
  %9386 = lshr i32 %9363, 31
  %9387 = trunc i32 %9386 to i8
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9387, i8* %9388, align 1
  %9389 = lshr i32 %9362, 31
  %9390 = xor i32 %9386, %9389
  %9391 = add i32 %9390, %9386
  %9392 = icmp eq i32 %9391, 2
  %9393 = zext i1 %9392 to i8
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9393, i8* %9394, align 1
  store %struct.Memory* %loadMem_40c117, %struct.Memory** %MEMORY
  %loadMem_40c11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9396 = getelementptr inbounds %struct.GPR, %struct.GPR* %9395, i32 0, i32 33
  %9397 = getelementptr inbounds %struct.Reg, %struct.Reg* %9396, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %9397 to i64*
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9399 = getelementptr inbounds %struct.GPR, %struct.GPR* %9398, i32 0, i32 5
  %9400 = getelementptr inbounds %struct.Reg, %struct.Reg* %9399, i32 0, i32 0
  %ECX.i567 = bitcast %union.anon* %9400 to i32*
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 17
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %R8.i568 = bitcast %union.anon* %9403 to i64*
  %9404 = load i32, i32* %ECX.i567
  %9405 = zext i32 %9404 to i64
  %9406 = load i64, i64* %PC.i566
  %9407 = add i64 %9406, 3
  store i64 %9407, i64* %PC.i566
  %9408 = shl i64 %9405, 32
  %9409 = ashr exact i64 %9408, 32
  store i64 %9409, i64* %R8.i568, align 8
  store %struct.Memory* %loadMem_40c11a, %struct.Memory** %MEMORY
  %loadMem_40c11d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9411 = getelementptr inbounds %struct.GPR, %struct.GPR* %9410, i32 0, i32 33
  %9412 = getelementptr inbounds %struct.Reg, %struct.Reg* %9411, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %9412 to i64*
  %9413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9414 = getelementptr inbounds %struct.GPR, %struct.GPR* %9413, i32 0, i32 5
  %9415 = getelementptr inbounds %struct.Reg, %struct.Reg* %9414, i32 0, i32 0
  %RCX.i564 = bitcast %union.anon* %9415 to i64*
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 17
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %R8.i565 = bitcast %union.anon* %9418 to i64*
  %9419 = load i64, i64* %R8.i565
  %9420 = mul i64 %9419, 4
  %9421 = add i64 %9420, 8807152
  %9422 = load i64, i64* %PC.i563
  %9423 = add i64 %9422, 8
  store i64 %9423, i64* %PC.i563
  %9424 = inttoptr i64 %9421 to i32*
  %9425 = load i32, i32* %9424
  %9426 = zext i32 %9425 to i64
  store i64 %9426, i64* %RCX.i564, align 8
  store %struct.Memory* %loadMem_40c11d, %struct.Memory** %MEMORY
  %loadMem_40c125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9428 = getelementptr inbounds %struct.GPR, %struct.GPR* %9427, i32 0, i32 33
  %9429 = getelementptr inbounds %struct.Reg, %struct.Reg* %9428, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %9429 to i64*
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9431 = getelementptr inbounds %struct.GPR, %struct.GPR* %9430, i32 0, i32 17
  %9432 = getelementptr inbounds %struct.Reg, %struct.Reg* %9431, i32 0, i32 0
  %R8.i562 = bitcast %union.anon* %9432 to i64*
  %9433 = load i64, i64* %PC.i561
  %9434 = add i64 %9433, 8
  store i64 %9434, i64* %PC.i561
  %9435 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %9436 = sext i32 %9435 to i64
  store i64 %9436, i64* %R8.i562, align 8
  store %struct.Memory* %loadMem_40c125, %struct.Memory** %MEMORY
  %loadMem_40c12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9438 = getelementptr inbounds %struct.GPR, %struct.GPR* %9437, i32 0, i32 33
  %9439 = getelementptr inbounds %struct.Reg, %struct.Reg* %9438, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %9439 to i64*
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9441 = getelementptr inbounds %struct.GPR, %struct.GPR* %9440, i32 0, i32 17
  %9442 = getelementptr inbounds %struct.Reg, %struct.Reg* %9441, i32 0, i32 0
  %R8.i560 = bitcast %union.anon* %9442 to i64*
  %9443 = load i64, i64* %R8.i560
  %9444 = load i64, i64* %PC.i559
  %9445 = add i64 %9444, 4
  store i64 %9445, i64* %PC.i559
  %9446 = shl i64 %9443, 3
  %9447 = icmp slt i64 %9446, 0
  %9448 = shl i64 %9446, 1
  store i64 %9448, i64* %R8.i560, align 8
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %9450 = zext i1 %9447 to i8
  store i8 %9450, i8* %9449, align 1
  %9451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %9452 = trunc i64 %9448 to i32
  %9453 = and i32 %9452, 254
  %9454 = call i32 @llvm.ctpop.i32(i32 %9453)
  %9455 = trunc i32 %9454 to i8
  %9456 = and i8 %9455, 1
  %9457 = xor i8 %9456, 1
  store i8 %9457, i8* %9451, align 1
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9458, align 1
  %9459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9460 = icmp eq i64 %9448, 0
  %9461 = zext i1 %9460 to i8
  store i8 %9461, i8* %9459, align 1
  %9462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9463 = lshr i64 %9448, 63
  %9464 = trunc i64 %9463 to i8
  store i8 %9464, i8* %9462, align 1
  %9465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9465, align 1
  store %struct.Memory* %loadMem_40c12d, %struct.Memory** %MEMORY
  %loadMem_40c131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 33
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %9468 to i64*
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9470 = getelementptr inbounds %struct.GPR, %struct.GPR* %9469, i32 0, i32 1
  %9471 = getelementptr inbounds %struct.Reg, %struct.Reg* %9470, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %9471 to i64*
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9473 = getelementptr inbounds %struct.GPR, %struct.GPR* %9472, i32 0, i32 17
  %9474 = getelementptr inbounds %struct.Reg, %struct.Reg* %9473, i32 0, i32 0
  %R8.i = bitcast %union.anon* %9474 to i64*
  %9475 = load i64, i64* %RAX.i558
  %9476 = load i64, i64* %R8.i
  %9477 = load i64, i64* %PC.i557
  %9478 = add i64 %9477, 3
  store i64 %9478, i64* %PC.i557
  %9479 = add i64 %9476, %9475
  store i64 %9479, i64* %RAX.i558, align 8
  %9480 = icmp ult i64 %9479, %9475
  %9481 = icmp ult i64 %9479, %9476
  %9482 = or i1 %9480, %9481
  %9483 = zext i1 %9482 to i8
  %9484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9483, i8* %9484, align 1
  %9485 = trunc i64 %9479 to i32
  %9486 = and i32 %9485, 255
  %9487 = call i32 @llvm.ctpop.i32(i32 %9486)
  %9488 = trunc i32 %9487 to i8
  %9489 = and i8 %9488, 1
  %9490 = xor i8 %9489, 1
  %9491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9490, i8* %9491, align 1
  %9492 = xor i64 %9476, %9475
  %9493 = xor i64 %9492, %9479
  %9494 = lshr i64 %9493, 4
  %9495 = trunc i64 %9494 to i8
  %9496 = and i8 %9495, 1
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9496, i8* %9497, align 1
  %9498 = icmp eq i64 %9479, 0
  %9499 = zext i1 %9498 to i8
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9499, i8* %9500, align 1
  %9501 = lshr i64 %9479, 63
  %9502 = trunc i64 %9501 to i8
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9502, i8* %9503, align 1
  %9504 = lshr i64 %9475, 63
  %9505 = lshr i64 %9476, 63
  %9506 = xor i64 %9501, %9504
  %9507 = xor i64 %9501, %9505
  %9508 = add i64 %9506, %9507
  %9509 = icmp eq i64 %9508, 2
  %9510 = zext i1 %9509 to i8
  %9511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9510, i8* %9511, align 1
  store %struct.Memory* %loadMem_40c131, %struct.Memory** %MEMORY
  %loadMem_40c134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 33
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %9514 to i64*
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 5
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %ECX.i555 = bitcast %union.anon* %9517 to i32*
  %9518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9519 = getelementptr inbounds %struct.GPR, %struct.GPR* %9518, i32 0, i32 1
  %9520 = getelementptr inbounds %struct.Reg, %struct.Reg* %9519, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %9520 to i64*
  %9521 = load i64, i64* %RAX.i556
  %9522 = load i32, i32* %ECX.i555
  %9523 = zext i32 %9522 to i64
  %9524 = load i64, i64* %PC.i554
  %9525 = add i64 %9524, 2
  store i64 %9525, i64* %PC.i554
  %9526 = inttoptr i64 %9521 to i32*
  store i32 %9522, i32* %9526
  store %struct.Memory* %loadMem_40c134, %struct.Memory** %MEMORY
  %loadMem_40c136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9528 = getelementptr inbounds %struct.GPR, %struct.GPR* %9527, i32 0, i32 33
  %9529 = getelementptr inbounds %struct.Reg, %struct.Reg* %9528, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %9529 to i64*
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9531 = getelementptr inbounds %struct.GPR, %struct.GPR* %9530, i32 0, i32 5
  %9532 = getelementptr inbounds %struct.Reg, %struct.Reg* %9531, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %9532 to i64*
  %9533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9534 = getelementptr inbounds %struct.GPR, %struct.GPR* %9533, i32 0, i32 15
  %9535 = getelementptr inbounds %struct.Reg, %struct.Reg* %9534, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %9535 to i64*
  %9536 = load i64, i64* %RBP.i553
  %9537 = sub i64 %9536, 24
  %9538 = load i64, i64* %PC.i551
  %9539 = add i64 %9538, 3
  store i64 %9539, i64* %PC.i551
  %9540 = inttoptr i64 %9537 to i32*
  %9541 = load i32, i32* %9540
  %9542 = zext i32 %9541 to i64
  store i64 %9542, i64* %RCX.i552, align 8
  store %struct.Memory* %loadMem_40c136, %struct.Memory** %MEMORY
  %loadMem_40c139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9544 = getelementptr inbounds %struct.GPR, %struct.GPR* %9543, i32 0, i32 33
  %9545 = getelementptr inbounds %struct.Reg, %struct.Reg* %9544, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %9545 to i64*
  %9546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9547 = getelementptr inbounds %struct.GPR, %struct.GPR* %9546, i32 0, i32 5
  %9548 = getelementptr inbounds %struct.Reg, %struct.Reg* %9547, i32 0, i32 0
  %RCX.i550 = bitcast %union.anon* %9548 to i64*
  %9549 = load i64, i64* %RCX.i550
  %9550 = load i64, i64* %PC.i549
  %9551 = add i64 %9550, 3
  store i64 %9551, i64* %PC.i549
  %9552 = trunc i64 %9549 to i32
  %9553 = add i32 12, %9552
  %9554 = zext i32 %9553 to i64
  store i64 %9554, i64* %RCX.i550, align 8
  %9555 = icmp ult i32 %9553, %9552
  %9556 = icmp ult i32 %9553, 12
  %9557 = or i1 %9555, %9556
  %9558 = zext i1 %9557 to i8
  %9559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9558, i8* %9559, align 1
  %9560 = and i32 %9553, 255
  %9561 = call i32 @llvm.ctpop.i32(i32 %9560)
  %9562 = trunc i32 %9561 to i8
  %9563 = and i8 %9562, 1
  %9564 = xor i8 %9563, 1
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9564, i8* %9565, align 1
  %9566 = xor i64 12, %9549
  %9567 = trunc i64 %9566 to i32
  %9568 = xor i32 %9567, %9553
  %9569 = lshr i32 %9568, 4
  %9570 = trunc i32 %9569 to i8
  %9571 = and i8 %9570, 1
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9571, i8* %9572, align 1
  %9573 = icmp eq i32 %9553, 0
  %9574 = zext i1 %9573 to i8
  %9575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9574, i8* %9575, align 1
  %9576 = lshr i32 %9553, 31
  %9577 = trunc i32 %9576 to i8
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9577, i8* %9578, align 1
  %9579 = lshr i32 %9552, 31
  %9580 = xor i32 %9576, %9579
  %9581 = add i32 %9580, %9576
  %9582 = icmp eq i32 %9581, 2
  %9583 = zext i1 %9582 to i8
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9583, i8* %9584, align 1
  store %struct.Memory* %loadMem_40c139, %struct.Memory** %MEMORY
  %loadMem_40c13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 33
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %9587 to i64*
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 5
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %ECX.i547 = bitcast %union.anon* %9590 to i32*
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 1
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %9593 to i64*
  %9594 = load i32, i32* %ECX.i547
  %9595 = zext i32 %9594 to i64
  %9596 = load i64, i64* %PC.i546
  %9597 = add i64 %9596, 3
  store i64 %9597, i64* %PC.i546
  %9598 = shl i64 %9595, 32
  %9599 = ashr exact i64 %9598, 32
  store i64 %9599, i64* %RAX.i548, align 8
  store %struct.Memory* %loadMem_40c13c, %struct.Memory** %MEMORY
  %loadMem_40c13f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9601 = getelementptr inbounds %struct.GPR, %struct.GPR* %9600, i32 0, i32 33
  %9602 = getelementptr inbounds %struct.Reg, %struct.Reg* %9601, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %9602 to i64*
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9604 = getelementptr inbounds %struct.GPR, %struct.GPR* %9603, i32 0, i32 1
  %9605 = getelementptr inbounds %struct.Reg, %struct.Reg* %9604, i32 0, i32 0
  %RAX.i545 = bitcast %union.anon* %9605 to i64*
  %9606 = load i64, i64* %RAX.i545
  %9607 = mul i64 %9606, 4
  %9608 = add i64 %9607, 8807152
  %9609 = load i64, i64* %PC.i544
  %9610 = add i64 %9609, 8
  store i64 %9610, i64* %PC.i544
  %9611 = inttoptr i64 %9608 to i32*
  %9612 = load i32, i32* %9611
  %9613 = sext i32 %9612 to i64
  store i64 %9613, i64* %RAX.i545, align 8
  store %struct.Memory* %loadMem_40c13f, %struct.Memory** %MEMORY
  %loadMem_40c147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9615 = getelementptr inbounds %struct.GPR, %struct.GPR* %9614, i32 0, i32 33
  %9616 = getelementptr inbounds %struct.Reg, %struct.Reg* %9615, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %9616 to i64*
  %9617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9618 = getelementptr inbounds %struct.GPR, %struct.GPR* %9617, i32 0, i32 1
  %9619 = getelementptr inbounds %struct.Reg, %struct.Reg* %9618, i32 0, i32 0
  %RAX.i543 = bitcast %union.anon* %9619 to i64*
  %9620 = load i64, i64* %RAX.i543
  %9621 = mul i64 %9620, 4
  %9622 = add i64 %9621, 8778480
  %9623 = load i64, i64* %PC.i542
  %9624 = add i64 %9623, 11
  store i64 %9624, i64* %PC.i542
  %9625 = inttoptr i64 %9622 to i32*
  store i32 0, i32* %9625
  store %struct.Memory* %loadMem_40c147, %struct.Memory** %MEMORY
  %loadMem_40c152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9627 = getelementptr inbounds %struct.GPR, %struct.GPR* %9626, i32 0, i32 33
  %9628 = getelementptr inbounds %struct.Reg, %struct.Reg* %9627, i32 0, i32 0
  %PC.i539 = bitcast %union.anon* %9628 to i64*
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9630 = getelementptr inbounds %struct.GPR, %struct.GPR* %9629, i32 0, i32 5
  %9631 = getelementptr inbounds %struct.Reg, %struct.Reg* %9630, i32 0, i32 0
  %RCX.i540 = bitcast %union.anon* %9631 to i64*
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9633 = getelementptr inbounds %struct.GPR, %struct.GPR* %9632, i32 0, i32 15
  %9634 = getelementptr inbounds %struct.Reg, %struct.Reg* %9633, i32 0, i32 0
  %RBP.i541 = bitcast %union.anon* %9634 to i64*
  %9635 = load i64, i64* %RBP.i541
  %9636 = sub i64 %9635, 24
  %9637 = load i64, i64* %PC.i539
  %9638 = add i64 %9637, 3
  store i64 %9638, i64* %PC.i539
  %9639 = inttoptr i64 %9636 to i32*
  %9640 = load i32, i32* %9639
  %9641 = zext i32 %9640 to i64
  store i64 %9641, i64* %RCX.i540, align 8
  store %struct.Memory* %loadMem_40c152, %struct.Memory** %MEMORY
  %loadMem_40c155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 33
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %9644 to i64*
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9646 = getelementptr inbounds %struct.GPR, %struct.GPR* %9645, i32 0, i32 5
  %9647 = getelementptr inbounds %struct.Reg, %struct.Reg* %9646, i32 0, i32 0
  %RCX.i538 = bitcast %union.anon* %9647 to i64*
  %9648 = load i64, i64* %RCX.i538
  %9649 = load i64, i64* %PC.i537
  %9650 = add i64 %9649, 3
  store i64 %9650, i64* %PC.i537
  %9651 = trunc i64 %9648 to i32
  %9652 = add i32 12, %9651
  %9653 = zext i32 %9652 to i64
  store i64 %9653, i64* %RCX.i538, align 8
  %9654 = icmp ult i32 %9652, %9651
  %9655 = icmp ult i32 %9652, 12
  %9656 = or i1 %9654, %9655
  %9657 = zext i1 %9656 to i8
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9657, i8* %9658, align 1
  %9659 = and i32 %9652, 255
  %9660 = call i32 @llvm.ctpop.i32(i32 %9659)
  %9661 = trunc i32 %9660 to i8
  %9662 = and i8 %9661, 1
  %9663 = xor i8 %9662, 1
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9663, i8* %9664, align 1
  %9665 = xor i64 12, %9648
  %9666 = trunc i64 %9665 to i32
  %9667 = xor i32 %9666, %9652
  %9668 = lshr i32 %9667, 4
  %9669 = trunc i32 %9668 to i8
  %9670 = and i8 %9669, 1
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9670, i8* %9671, align 1
  %9672 = icmp eq i32 %9652, 0
  %9673 = zext i1 %9672 to i8
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9673, i8* %9674, align 1
  %9675 = lshr i32 %9652, 31
  %9676 = trunc i32 %9675 to i8
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9676, i8* %9677, align 1
  %9678 = lshr i32 %9651, 31
  %9679 = xor i32 %9675, %9678
  %9680 = add i32 %9679, %9675
  %9681 = icmp eq i32 %9680, 2
  %9682 = zext i1 %9681 to i8
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9682, i8* %9683, align 1
  store %struct.Memory* %loadMem_40c155, %struct.Memory** %MEMORY
  %loadMem_40c158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 33
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %9686 to i64*
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 5
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %ECX.i535 = bitcast %union.anon* %9689 to i32*
  %9690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9691 = getelementptr inbounds %struct.GPR, %struct.GPR* %9690, i32 0, i32 1
  %9692 = getelementptr inbounds %struct.Reg, %struct.Reg* %9691, i32 0, i32 0
  %RAX.i536 = bitcast %union.anon* %9692 to i64*
  %9693 = load i32, i32* %ECX.i535
  %9694 = zext i32 %9693 to i64
  %9695 = load i64, i64* %PC.i534
  %9696 = add i64 %9695, 3
  store i64 %9696, i64* %PC.i534
  %9697 = shl i64 %9694, 32
  %9698 = ashr exact i64 %9697, 32
  store i64 %9698, i64* %RAX.i536, align 8
  store %struct.Memory* %loadMem_40c158, %struct.Memory** %MEMORY
  %loadMem_40c15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9700 = getelementptr inbounds %struct.GPR, %struct.GPR* %9699, i32 0, i32 33
  %9701 = getelementptr inbounds %struct.Reg, %struct.Reg* %9700, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %9701 to i64*
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9703 = getelementptr inbounds %struct.GPR, %struct.GPR* %9702, i32 0, i32 1
  %9704 = getelementptr inbounds %struct.Reg, %struct.Reg* %9703, i32 0, i32 0
  %RAX.i533 = bitcast %union.anon* %9704 to i64*
  %9705 = load i64, i64* %RAX.i533
  %9706 = mul i64 %9705, 4
  %9707 = add i64 %9706, 8807152
  %9708 = load i64, i64* %PC.i532
  %9709 = add i64 %9708, 11
  store i64 %9709, i64* %PC.i532
  %9710 = inttoptr i64 %9707 to i32*
  store i32 0, i32* %9710
  store %struct.Memory* %loadMem_40c15b, %struct.Memory** %MEMORY
  %loadMem_40c166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 33
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %9713 to i64*
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 5
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %RCX.i531 = bitcast %union.anon* %9716 to i64*
  %9717 = load i64, i64* %PC.i530
  %9718 = add i64 %9717, 7
  store i64 %9718, i64* %PC.i530
  %9719 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %9720 = zext i32 %9719 to i64
  store i64 %9720, i64* %RCX.i531, align 8
  store %struct.Memory* %loadMem_40c166, %struct.Memory** %MEMORY
  %loadMem_40c16d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 33
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %9723 to i64*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 5
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %RCX.i529 = bitcast %union.anon* %9726 to i64*
  %9727 = load i64, i64* %RCX.i529
  %9728 = load i64, i64* %PC.i528
  %9729 = add i64 %9728, 3
  store i64 %9729, i64* %PC.i528
  %9730 = trunc i64 %9727 to i32
  %9731 = add i32 1, %9730
  %9732 = zext i32 %9731 to i64
  store i64 %9732, i64* %RCX.i529, align 8
  %9733 = icmp ult i32 %9731, %9730
  %9734 = icmp ult i32 %9731, 1
  %9735 = or i1 %9733, %9734
  %9736 = zext i1 %9735 to i8
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9736, i8* %9737, align 1
  %9738 = and i32 %9731, 255
  %9739 = call i32 @llvm.ctpop.i32(i32 %9738)
  %9740 = trunc i32 %9739 to i8
  %9741 = and i8 %9740, 1
  %9742 = xor i8 %9741, 1
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9742, i8* %9743, align 1
  %9744 = xor i64 1, %9727
  %9745 = trunc i64 %9744 to i32
  %9746 = xor i32 %9745, %9731
  %9747 = lshr i32 %9746, 4
  %9748 = trunc i32 %9747 to i8
  %9749 = and i8 %9748, 1
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9749, i8* %9750, align 1
  %9751 = icmp eq i32 %9731, 0
  %9752 = zext i1 %9751 to i8
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9752, i8* %9753, align 1
  %9754 = lshr i32 %9731, 31
  %9755 = trunc i32 %9754 to i8
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9755, i8* %9756, align 1
  %9757 = lshr i32 %9730, 31
  %9758 = xor i32 %9754, %9757
  %9759 = add i32 %9758, %9754
  %9760 = icmp eq i32 %9759, 2
  %9761 = zext i1 %9760 to i8
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9761, i8* %9762, align 1
  store %struct.Memory* %loadMem_40c16d, %struct.Memory** %MEMORY
  %loadMem_40c170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9764 = getelementptr inbounds %struct.GPR, %struct.GPR* %9763, i32 0, i32 33
  %9765 = getelementptr inbounds %struct.Reg, %struct.Reg* %9764, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %9765 to i64*
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9767 = getelementptr inbounds %struct.GPR, %struct.GPR* %9766, i32 0, i32 5
  %9768 = getelementptr inbounds %struct.Reg, %struct.Reg* %9767, i32 0, i32 0
  %ECX.i527 = bitcast %union.anon* %9768 to i32*
  %9769 = load i32, i32* %ECX.i527
  %9770 = zext i32 %9769 to i64
  %9771 = load i64, i64* %PC.i526
  %9772 = add i64 %9771, 7
  store i64 %9772, i64* %PC.i526
  store i32 %9769, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c170, %struct.Memory** %MEMORY
  %loadMem_40c177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9774 = getelementptr inbounds %struct.GPR, %struct.GPR* %9773, i32 0, i32 33
  %9775 = getelementptr inbounds %struct.Reg, %struct.Reg* %9774, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %9775 to i64*
  %9776 = load i64, i64* %PC.i525
  %9777 = add i64 %9776, 1559
  %9778 = load i64, i64* %PC.i525
  %9779 = add i64 %9778, 5
  store i64 %9779, i64* %PC.i525
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9777, i64* %9780, align 8
  store %struct.Memory* %loadMem_40c177, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c17c:                                  ; preds = %block_.L_40bfeb
  %loadMem_40c17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9782 = getelementptr inbounds %struct.GPR, %struct.GPR* %9781, i32 0, i32 33
  %9783 = getelementptr inbounds %struct.Reg, %struct.Reg* %9782, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %9783 to i64*
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9785 = getelementptr inbounds %struct.GPR, %struct.GPR* %9784, i32 0, i32 1
  %9786 = getelementptr inbounds %struct.Reg, %struct.Reg* %9785, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %9786 to i64*
  %9787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9788 = getelementptr inbounds %struct.GPR, %struct.GPR* %9787, i32 0, i32 15
  %9789 = getelementptr inbounds %struct.Reg, %struct.Reg* %9788, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %9789 to i64*
  %9790 = load i64, i64* %RBP.i524
  %9791 = sub i64 %9790, 24
  %9792 = load i64, i64* %PC.i522
  %9793 = add i64 %9792, 3
  store i64 %9793, i64* %PC.i522
  %9794 = inttoptr i64 %9791 to i32*
  %9795 = load i32, i32* %9794
  %9796 = zext i32 %9795 to i64
  store i64 %9796, i64* %RAX.i523, align 8
  store %struct.Memory* %loadMem_40c17c, %struct.Memory** %MEMORY
  %loadMem_40c17f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 33
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %9799 to i64*
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9801 = getelementptr inbounds %struct.GPR, %struct.GPR* %9800, i32 0, i32 5
  %9802 = getelementptr inbounds %struct.Reg, %struct.Reg* %9801, i32 0, i32 0
  %RCX.i520 = bitcast %union.anon* %9802 to i64*
  %9803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9804 = getelementptr inbounds %struct.GPR, %struct.GPR* %9803, i32 0, i32 15
  %9805 = getelementptr inbounds %struct.Reg, %struct.Reg* %9804, i32 0, i32 0
  %RBP.i521 = bitcast %union.anon* %9805 to i64*
  %9806 = load i64, i64* %RBP.i521
  %9807 = sub i64 %9806, 20
  %9808 = load i64, i64* %PC.i519
  %9809 = add i64 %9808, 3
  store i64 %9809, i64* %PC.i519
  %9810 = inttoptr i64 %9807 to i32*
  %9811 = load i32, i32* %9810
  %9812 = zext i32 %9811 to i64
  store i64 %9812, i64* %RCX.i520, align 8
  store %struct.Memory* %loadMem_40c17f, %struct.Memory** %MEMORY
  %loadMem_40c182 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9814 = getelementptr inbounds %struct.GPR, %struct.GPR* %9813, i32 0, i32 33
  %9815 = getelementptr inbounds %struct.Reg, %struct.Reg* %9814, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %9815 to i64*
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 5
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %RCX.i518 = bitcast %union.anon* %9818 to i64*
  %9819 = load i64, i64* %RCX.i518
  %9820 = load i64, i64* %PC.i517
  %9821 = add i64 %9820, 3
  store i64 %9821, i64* %PC.i517
  %9822 = trunc i64 %9819 to i32
  %9823 = sub i32 %9822, 24
  %9824 = zext i32 %9823 to i64
  store i64 %9824, i64* %RCX.i518, align 8
  %9825 = icmp ult i32 %9822, 24
  %9826 = zext i1 %9825 to i8
  %9827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9826, i8* %9827, align 1
  %9828 = and i32 %9823, 255
  %9829 = call i32 @llvm.ctpop.i32(i32 %9828)
  %9830 = trunc i32 %9829 to i8
  %9831 = and i8 %9830, 1
  %9832 = xor i8 %9831, 1
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9832, i8* %9833, align 1
  %9834 = xor i64 24, %9819
  %9835 = trunc i64 %9834 to i32
  %9836 = xor i32 %9835, %9823
  %9837 = lshr i32 %9836, 4
  %9838 = trunc i32 %9837 to i8
  %9839 = and i8 %9838, 1
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9839, i8* %9840, align 1
  %9841 = icmp eq i32 %9823, 0
  %9842 = zext i1 %9841 to i8
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9842, i8* %9843, align 1
  %9844 = lshr i32 %9823, 31
  %9845 = trunc i32 %9844 to i8
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9845, i8* %9846, align 1
  %9847 = lshr i32 %9822, 31
  %9848 = xor i32 %9844, %9847
  %9849 = add i32 %9848, %9847
  %9850 = icmp eq i32 %9849, 2
  %9851 = zext i1 %9850 to i8
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9851, i8* %9852, align 1
  store %struct.Memory* %loadMem_40c182, %struct.Memory** %MEMORY
  %loadMem_40c185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9854 = getelementptr inbounds %struct.GPR, %struct.GPR* %9853, i32 0, i32 33
  %9855 = getelementptr inbounds %struct.Reg, %struct.Reg* %9854, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %9855 to i64*
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9857 = getelementptr inbounds %struct.GPR, %struct.GPR* %9856, i32 0, i32 1
  %9858 = getelementptr inbounds %struct.Reg, %struct.Reg* %9857, i32 0, i32 0
  %EAX.i515 = bitcast %union.anon* %9858 to i32*
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 5
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %ECX.i516 = bitcast %union.anon* %9861 to i32*
  %9862 = load i32, i32* %EAX.i515
  %9863 = zext i32 %9862 to i64
  %9864 = load i32, i32* %ECX.i516
  %9865 = zext i32 %9864 to i64
  %9866 = load i64, i64* %PC.i514
  %9867 = add i64 %9866, 2
  store i64 %9867, i64* %PC.i514
  %9868 = sub i32 %9862, %9864
  %9869 = icmp ult i32 %9862, %9864
  %9870 = zext i1 %9869 to i8
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9870, i8* %9871, align 1
  %9872 = and i32 %9868, 255
  %9873 = call i32 @llvm.ctpop.i32(i32 %9872)
  %9874 = trunc i32 %9873 to i8
  %9875 = and i8 %9874, 1
  %9876 = xor i8 %9875, 1
  %9877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9876, i8* %9877, align 1
  %9878 = xor i64 %9865, %9863
  %9879 = trunc i64 %9878 to i32
  %9880 = xor i32 %9879, %9868
  %9881 = lshr i32 %9880, 4
  %9882 = trunc i32 %9881 to i8
  %9883 = and i8 %9882, 1
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9883, i8* %9884, align 1
  %9885 = icmp eq i32 %9868, 0
  %9886 = zext i1 %9885 to i8
  %9887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9886, i8* %9887, align 1
  %9888 = lshr i32 %9868, 31
  %9889 = trunc i32 %9888 to i8
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9889, i8* %9890, align 1
  %9891 = lshr i32 %9862, 31
  %9892 = lshr i32 %9864, 31
  %9893 = xor i32 %9892, %9891
  %9894 = xor i32 %9888, %9891
  %9895 = add i32 %9894, %9893
  %9896 = icmp eq i32 %9895, 2
  %9897 = zext i1 %9896 to i8
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9897, i8* %9898, align 1
  store %struct.Memory* %loadMem_40c185, %struct.Memory** %MEMORY
  %loadMem_40c187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 33
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %9901 to i64*
  %9902 = load i64, i64* %PC.i513
  %9903 = add i64 %9902, 19
  %9904 = load i64, i64* %PC.i513
  %9905 = add i64 %9904, 6
  %9906 = load i64, i64* %PC.i513
  %9907 = add i64 %9906, 6
  store i64 %9907, i64* %PC.i513
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9909 = load i8, i8* %9908, align 1
  %9910 = icmp eq i8 %9909, 0
  %9911 = zext i1 %9910 to i8
  store i8 %9911, i8* %BRANCH_TAKEN, align 1
  %9912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9913 = select i1 %9910, i64 %9903, i64 %9905
  store i64 %9913, i64* %9912, align 8
  store %struct.Memory* %loadMem_40c187, %struct.Memory** %MEMORY
  %loadBr_40c187 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c187 = icmp eq i8 %loadBr_40c187, 1
  br i1 %cmpBr_40c187, label %block_.L_40c19a, label %block_40c18d

block_40c18d:                                     ; preds = %block_.L_40c17c
  %loadMem_40c18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 33
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %9916 to i64*
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9918 = getelementptr inbounds %struct.GPR, %struct.GPR* %9917, i32 0, i32 1
  %9919 = getelementptr inbounds %struct.Reg, %struct.Reg* %9918, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %9919 to i64*
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 15
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %9922 to i64*
  %9923 = load i64, i64* %RBP.i512
  %9924 = sub i64 %9923, 20
  %9925 = load i64, i64* %PC.i510
  %9926 = add i64 %9925, 3
  store i64 %9926, i64* %PC.i510
  %9927 = inttoptr i64 %9924 to i32*
  %9928 = load i32, i32* %9927
  %9929 = zext i32 %9928 to i64
  store i64 %9929, i64* %RAX.i511, align 8
  store %struct.Memory* %loadMem_40c18d, %struct.Memory** %MEMORY
  %loadMem_40c190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9931 = getelementptr inbounds %struct.GPR, %struct.GPR* %9930, i32 0, i32 33
  %9932 = getelementptr inbounds %struct.Reg, %struct.Reg* %9931, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %9932 to i64*
  %9933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9934 = getelementptr inbounds %struct.GPR, %struct.GPR* %9933, i32 0, i32 1
  %9935 = getelementptr inbounds %struct.Reg, %struct.Reg* %9934, i32 0, i32 0
  %RAX.i509 = bitcast %union.anon* %9935 to i64*
  %9936 = load i64, i64* %RAX.i509
  %9937 = load i64, i64* %PC.i508
  %9938 = add i64 %9937, 3
  store i64 %9938, i64* %PC.i508
  %9939 = trunc i64 %9936 to i32
  %9940 = sub i32 %9939, 12
  %9941 = zext i32 %9940 to i64
  store i64 %9941, i64* %RAX.i509, align 8
  %9942 = icmp ult i32 %9939, 12
  %9943 = zext i1 %9942 to i8
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9943, i8* %9944, align 1
  %9945 = and i32 %9940, 255
  %9946 = call i32 @llvm.ctpop.i32(i32 %9945)
  %9947 = trunc i32 %9946 to i8
  %9948 = and i8 %9947, 1
  %9949 = xor i8 %9948, 1
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9949, i8* %9950, align 1
  %9951 = xor i64 12, %9936
  %9952 = trunc i64 %9951 to i32
  %9953 = xor i32 %9952, %9940
  %9954 = lshr i32 %9953, 4
  %9955 = trunc i32 %9954 to i8
  %9956 = and i8 %9955, 1
  %9957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9956, i8* %9957, align 1
  %9958 = icmp eq i32 %9940, 0
  %9959 = zext i1 %9958 to i8
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9959, i8* %9960, align 1
  %9961 = lshr i32 %9940, 31
  %9962 = trunc i32 %9961 to i8
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9962, i8* %9963, align 1
  %9964 = lshr i32 %9939, 31
  %9965 = xor i32 %9961, %9964
  %9966 = add i32 %9965, %9964
  %9967 = icmp eq i32 %9966, 2
  %9968 = zext i1 %9967 to i8
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9968, i8* %9969, align 1
  store %struct.Memory* %loadMem_40c190, %struct.Memory** %MEMORY
  %loadMem_40c193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9971 = getelementptr inbounds %struct.GPR, %struct.GPR* %9970, i32 0, i32 33
  %9972 = getelementptr inbounds %struct.Reg, %struct.Reg* %9971, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %9972 to i64*
  %9973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9974 = getelementptr inbounds %struct.GPR, %struct.GPR* %9973, i32 0, i32 1
  %9975 = getelementptr inbounds %struct.Reg, %struct.Reg* %9974, i32 0, i32 0
  %EAX.i507 = bitcast %union.anon* %9975 to i32*
  %9976 = load i32, i32* %EAX.i507
  %9977 = zext i32 %9976 to i64
  %9978 = load i64, i64* %PC.i506
  %9979 = add i64 %9978, 7
  store i64 %9979, i64* %PC.i506
  store i32 %9976, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  store %struct.Memory* %loadMem_40c193, %struct.Memory** %MEMORY
  br label %block_.L_40c19a

block_.L_40c19a:                                  ; preds = %block_40c18d, %block_.L_40c17c
  %loadMem_40c19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9981 = getelementptr inbounds %struct.GPR, %struct.GPR* %9980, i32 0, i32 33
  %9982 = getelementptr inbounds %struct.Reg, %struct.Reg* %9981, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %9982 to i64*
  %9983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9984 = getelementptr inbounds %struct.GPR, %struct.GPR* %9983, i32 0, i32 1
  %9985 = getelementptr inbounds %struct.Reg, %struct.Reg* %9984, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %9985 to i64*
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9987 = getelementptr inbounds %struct.GPR, %struct.GPR* %9986, i32 0, i32 15
  %9988 = getelementptr inbounds %struct.Reg, %struct.Reg* %9987, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %9988 to i64*
  %9989 = load i64, i64* %RBP.i505
  %9990 = sub i64 %9989, 24
  %9991 = load i64, i64* %PC.i503
  %9992 = add i64 %9991, 4
  store i64 %9992, i64* %PC.i503
  %9993 = inttoptr i64 %9990 to i32*
  %9994 = load i32, i32* %9993
  %9995 = sext i32 %9994 to i64
  store i64 %9995, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_40c19a, %struct.Memory** %MEMORY
  %loadMem_40c19e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9997 = getelementptr inbounds %struct.GPR, %struct.GPR* %9996, i32 0, i32 33
  %9998 = getelementptr inbounds %struct.Reg, %struct.Reg* %9997, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %9998 to i64*
  %9999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10000 = getelementptr inbounds %struct.GPR, %struct.GPR* %9999, i32 0, i32 1
  %10001 = getelementptr inbounds %struct.Reg, %struct.Reg* %10000, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %10001 to i64*
  %10002 = load i64, i64* %RAX.i502
  %10003 = mul i64 %10002, 4
  %10004 = add i64 %10003, 8807744
  %10005 = load i64, i64* %PC.i501
  %10006 = add i64 %10005, 11
  store i64 %10006, i64* %PC.i501
  %10007 = inttoptr i64 %10004 to i32*
  store i32 2, i32* %10007
  store %struct.Memory* %loadMem_40c19e, %struct.Memory** %MEMORY
  %loadMem_40c1a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10009 = getelementptr inbounds %struct.GPR, %struct.GPR* %10008, i32 0, i32 33
  %10010 = getelementptr inbounds %struct.Reg, %struct.Reg* %10009, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %10010 to i64*
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10012 = getelementptr inbounds %struct.GPR, %struct.GPR* %10011, i32 0, i32 1
  %10013 = getelementptr inbounds %struct.Reg, %struct.Reg* %10012, i32 0, i32 0
  %RAX.i499 = bitcast %union.anon* %10013 to i64*
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10015 = getelementptr inbounds %struct.GPR, %struct.GPR* %10014, i32 0, i32 15
  %10016 = getelementptr inbounds %struct.Reg, %struct.Reg* %10015, i32 0, i32 0
  %RBP.i500 = bitcast %union.anon* %10016 to i64*
  %10017 = load i64, i64* %RBP.i500
  %10018 = sub i64 %10017, 20
  %10019 = load i64, i64* %PC.i498
  %10020 = add i64 %10019, 4
  store i64 %10020, i64* %PC.i498
  %10021 = inttoptr i64 %10018 to i32*
  %10022 = load i32, i32* %10021
  %10023 = sext i32 %10022 to i64
  store i64 %10023, i64* %RAX.i499, align 8
  store %struct.Memory* %loadMem_40c1a9, %struct.Memory** %MEMORY
  %loadMem_40c1ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10025 = getelementptr inbounds %struct.GPR, %struct.GPR* %10024, i32 0, i32 33
  %10026 = getelementptr inbounds %struct.Reg, %struct.Reg* %10025, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %10026 to i64*
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10028 = getelementptr inbounds %struct.GPR, %struct.GPR* %10027, i32 0, i32 1
  %10029 = getelementptr inbounds %struct.Reg, %struct.Reg* %10028, i32 0, i32 0
  %RAX.i497 = bitcast %union.anon* %10029 to i64*
  %10030 = load i64, i64* %RAX.i497
  %10031 = mul i64 %10030, 4
  %10032 = add i64 %10031, 8807744
  %10033 = load i64, i64* %PC.i496
  %10034 = add i64 %10033, 11
  store i64 %10034, i64* %PC.i496
  %10035 = inttoptr i64 %10032 to i32*
  store i32 13, i32* %10035
  store %struct.Memory* %loadMem_40c1ad, %struct.Memory** %MEMORY
  %loadMem_40c1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10037 = getelementptr inbounds %struct.GPR, %struct.GPR* %10036, i32 0, i32 33
  %10038 = getelementptr inbounds %struct.Reg, %struct.Reg* %10037, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %10038 to i64*
  %10039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10040 = getelementptr inbounds %struct.GPR, %struct.GPR* %10039, i32 0, i32 1
  %10041 = getelementptr inbounds %struct.Reg, %struct.Reg* %10040, i32 0, i32 0
  %RAX.i494 = bitcast %union.anon* %10041 to i64*
  %10042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10043 = getelementptr inbounds %struct.GPR, %struct.GPR* %10042, i32 0, i32 15
  %10044 = getelementptr inbounds %struct.Reg, %struct.Reg* %10043, i32 0, i32 0
  %RBP.i495 = bitcast %union.anon* %10044 to i64*
  %10045 = load i64, i64* %RBP.i495
  %10046 = sub i64 %10045, 24
  %10047 = load i64, i64* %PC.i493
  %10048 = add i64 %10047, 4
  store i64 %10048, i64* %PC.i493
  %10049 = inttoptr i64 %10046 to i32*
  %10050 = load i32, i32* %10049
  %10051 = sext i32 %10050 to i64
  store i64 %10051, i64* %RAX.i494, align 8
  store %struct.Memory* %loadMem_40c1b8, %struct.Memory** %MEMORY
  %loadMem_40c1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 33
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %10054 to i64*
  %10055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10056 = getelementptr inbounds %struct.GPR, %struct.GPR* %10055, i32 0, i32 1
  %10057 = getelementptr inbounds %struct.Reg, %struct.Reg* %10056, i32 0, i32 0
  %RAX.i491 = bitcast %union.anon* %10057 to i64*
  %10058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10059 = getelementptr inbounds %struct.GPR, %struct.GPR* %10058, i32 0, i32 5
  %10060 = getelementptr inbounds %struct.Reg, %struct.Reg* %10059, i32 0, i32 0
  %RCX.i492 = bitcast %union.anon* %10060 to i64*
  %10061 = load i64, i64* %RAX.i491
  %10062 = mul i64 %10061, 4
  %10063 = add i64 %10062, 8922032
  %10064 = load i64, i64* %PC.i490
  %10065 = add i64 %10064, 7
  store i64 %10065, i64* %PC.i490
  %10066 = inttoptr i64 %10063 to i32*
  %10067 = load i32, i32* %10066
  %10068 = zext i32 %10067 to i64
  store i64 %10068, i64* %RCX.i492, align 8
  store %struct.Memory* %loadMem_40c1bc, %struct.Memory** %MEMORY
  %loadMem_40c1c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 33
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 5
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RCX.i489 = bitcast %union.anon* %10074 to i64*
  %10075 = load i64, i64* %RCX.i489
  %10076 = load i64, i64* %PC.i488
  %10077 = add i64 %10076, 3
  store i64 %10077, i64* %PC.i488
  %10078 = trunc i64 %10075 to i32
  %10079 = add i32 1, %10078
  %10080 = zext i32 %10079 to i64
  store i64 %10080, i64* %RCX.i489, align 8
  %10081 = icmp ult i32 %10079, %10078
  %10082 = icmp ult i32 %10079, 1
  %10083 = or i1 %10081, %10082
  %10084 = zext i1 %10083 to i8
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10084, i8* %10085, align 1
  %10086 = and i32 %10079, 255
  %10087 = call i32 @llvm.ctpop.i32(i32 %10086)
  %10088 = trunc i32 %10087 to i8
  %10089 = and i8 %10088, 1
  %10090 = xor i8 %10089, 1
  %10091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10090, i8* %10091, align 1
  %10092 = xor i64 1, %10075
  %10093 = trunc i64 %10092 to i32
  %10094 = xor i32 %10093, %10079
  %10095 = lshr i32 %10094, 4
  %10096 = trunc i32 %10095 to i8
  %10097 = and i8 %10096, 1
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10097, i8* %10098, align 1
  %10099 = icmp eq i32 %10079, 0
  %10100 = zext i1 %10099 to i8
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10100, i8* %10101, align 1
  %10102 = lshr i32 %10079, 31
  %10103 = trunc i32 %10102 to i8
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10103, i8* %10104, align 1
  %10105 = lshr i32 %10078, 31
  %10106 = xor i32 %10102, %10105
  %10107 = add i32 %10106, %10102
  %10108 = icmp eq i32 %10107, 2
  %10109 = zext i1 %10108 to i8
  %10110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10109, i8* %10110, align 1
  store %struct.Memory* %loadMem_40c1c3, %struct.Memory** %MEMORY
  %loadMem_40c1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10112 = getelementptr inbounds %struct.GPR, %struct.GPR* %10111, i32 0, i32 33
  %10113 = getelementptr inbounds %struct.Reg, %struct.Reg* %10112, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %10113 to i64*
  %10114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10115 = getelementptr inbounds %struct.GPR, %struct.GPR* %10114, i32 0, i32 5
  %10116 = getelementptr inbounds %struct.Reg, %struct.Reg* %10115, i32 0, i32 0
  %ECX.i486 = bitcast %union.anon* %10116 to i32*
  %10117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10118 = getelementptr inbounds %struct.GPR, %struct.GPR* %10117, i32 0, i32 1
  %10119 = getelementptr inbounds %struct.Reg, %struct.Reg* %10118, i32 0, i32 0
  %RAX.i487 = bitcast %union.anon* %10119 to i64*
  %10120 = load i64, i64* %RAX.i487
  %10121 = mul i64 %10120, 4
  %10122 = add i64 %10121, 8922032
  %10123 = load i32, i32* %ECX.i486
  %10124 = zext i32 %10123 to i64
  %10125 = load i64, i64* %PC.i485
  %10126 = add i64 %10125, 7
  store i64 %10126, i64* %PC.i485
  %10127 = inttoptr i64 %10122 to i32*
  store i32 %10123, i32* %10127
  store %struct.Memory* %loadMem_40c1c6, %struct.Memory** %MEMORY
  %loadMem_40c1cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10129 = getelementptr inbounds %struct.GPR, %struct.GPR* %10128, i32 0, i32 33
  %10130 = getelementptr inbounds %struct.Reg, %struct.Reg* %10129, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %10130 to i64*
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 1
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %RAX.i483 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 15
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %10136 to i64*
  %10137 = load i64, i64* %RBP.i484
  %10138 = sub i64 %10137, 20
  %10139 = load i64, i64* %PC.i482
  %10140 = add i64 %10139, 4
  store i64 %10140, i64* %PC.i482
  %10141 = inttoptr i64 %10138 to i32*
  %10142 = load i32, i32* %10141
  %10143 = sext i32 %10142 to i64
  store i64 %10143, i64* %RAX.i483, align 8
  store %struct.Memory* %loadMem_40c1cd, %struct.Memory** %MEMORY
  %loadMem_40c1d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10145 = getelementptr inbounds %struct.GPR, %struct.GPR* %10144, i32 0, i32 33
  %10146 = getelementptr inbounds %struct.Reg, %struct.Reg* %10145, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %10146 to i64*
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 1
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %RAX.i480 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 5
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %10152 to i64*
  %10153 = load i64, i64* %RAX.i480
  %10154 = mul i64 %10153, 4
  %10155 = add i64 %10154, 8922032
  %10156 = load i64, i64* %PC.i479
  %10157 = add i64 %10156, 7
  store i64 %10157, i64* %PC.i479
  %10158 = inttoptr i64 %10155 to i32*
  %10159 = load i32, i32* %10158
  %10160 = zext i32 %10159 to i64
  store i64 %10160, i64* %RCX.i481, align 8
  store %struct.Memory* %loadMem_40c1d1, %struct.Memory** %MEMORY
  %loadMem_40c1d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10162 = getelementptr inbounds %struct.GPR, %struct.GPR* %10161, i32 0, i32 33
  %10163 = getelementptr inbounds %struct.Reg, %struct.Reg* %10162, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %10163 to i64*
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10165 = getelementptr inbounds %struct.GPR, %struct.GPR* %10164, i32 0, i32 5
  %10166 = getelementptr inbounds %struct.Reg, %struct.Reg* %10165, i32 0, i32 0
  %RCX.i478 = bitcast %union.anon* %10166 to i64*
  %10167 = load i64, i64* %RCX.i478
  %10168 = load i64, i64* %PC.i477
  %10169 = add i64 %10168, 3
  store i64 %10169, i64* %PC.i477
  %10170 = trunc i64 %10167 to i32
  %10171 = add i32 1, %10170
  %10172 = zext i32 %10171 to i64
  store i64 %10172, i64* %RCX.i478, align 8
  %10173 = icmp ult i32 %10171, %10170
  %10174 = icmp ult i32 %10171, 1
  %10175 = or i1 %10173, %10174
  %10176 = zext i1 %10175 to i8
  %10177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10176, i8* %10177, align 1
  %10178 = and i32 %10171, 255
  %10179 = call i32 @llvm.ctpop.i32(i32 %10178)
  %10180 = trunc i32 %10179 to i8
  %10181 = and i8 %10180, 1
  %10182 = xor i8 %10181, 1
  %10183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10182, i8* %10183, align 1
  %10184 = xor i64 1, %10167
  %10185 = trunc i64 %10184 to i32
  %10186 = xor i32 %10185, %10171
  %10187 = lshr i32 %10186, 4
  %10188 = trunc i32 %10187 to i8
  %10189 = and i8 %10188, 1
  %10190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10189, i8* %10190, align 1
  %10191 = icmp eq i32 %10171, 0
  %10192 = zext i1 %10191 to i8
  %10193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10192, i8* %10193, align 1
  %10194 = lshr i32 %10171, 31
  %10195 = trunc i32 %10194 to i8
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10195, i8* %10196, align 1
  %10197 = lshr i32 %10170, 31
  %10198 = xor i32 %10194, %10197
  %10199 = add i32 %10198, %10194
  %10200 = icmp eq i32 %10199, 2
  %10201 = zext i1 %10200 to i8
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10201, i8* %10202, align 1
  store %struct.Memory* %loadMem_40c1d8, %struct.Memory** %MEMORY
  %loadMem_40c1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 33
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %10205 to i64*
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 5
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %ECX.i475 = bitcast %union.anon* %10208 to i32*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 1
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %RAX.i476
  %10213 = mul i64 %10212, 4
  %10214 = add i64 %10213, 8922032
  %10215 = load i32, i32* %ECX.i475
  %10216 = zext i32 %10215 to i64
  %10217 = load i64, i64* %PC.i474
  %10218 = add i64 %10217, 7
  store i64 %10218, i64* %PC.i474
  %10219 = inttoptr i64 %10214 to i32*
  store i32 %10215, i32* %10219
  store %struct.Memory* %loadMem_40c1db, %struct.Memory** %MEMORY
  %loadMem_40c1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10221 = getelementptr inbounds %struct.GPR, %struct.GPR* %10220, i32 0, i32 33
  %10222 = getelementptr inbounds %struct.Reg, %struct.Reg* %10221, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %10222 to i64*
  %10223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10224 = getelementptr inbounds %struct.GPR, %struct.GPR* %10223, i32 0, i32 5
  %10225 = getelementptr inbounds %struct.Reg, %struct.Reg* %10224, i32 0, i32 0
  %RCX.i473 = bitcast %union.anon* %10225 to i64*
  %10226 = load i64, i64* %PC.i472
  %10227 = add i64 %10226, 7
  store i64 %10227, i64* %PC.i472
  %10228 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %10229 = zext i32 %10228 to i64
  store i64 %10229, i64* %RCX.i473, align 8
  store %struct.Memory* %loadMem_40c1e2, %struct.Memory** %MEMORY
  %loadMem_40c1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10231 = getelementptr inbounds %struct.GPR, %struct.GPR* %10230, i32 0, i32 33
  %10232 = getelementptr inbounds %struct.Reg, %struct.Reg* %10231, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %10232 to i64*
  %10233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10234 = getelementptr inbounds %struct.GPR, %struct.GPR* %10233, i32 0, i32 5
  %10235 = getelementptr inbounds %struct.Reg, %struct.Reg* %10234, i32 0, i32 0
  %RCX.i471 = bitcast %union.anon* %10235 to i64*
  %10236 = load i64, i64* %RCX.i471
  %10237 = load i64, i64* %PC.i470
  %10238 = add i64 %10237, 3
  store i64 %10238, i64* %PC.i470
  %10239 = xor i64 1, %10236
  %10240 = trunc i64 %10239 to i32
  %10241 = and i64 %10239, 4294967295
  store i64 %10241, i64* %RCX.i471, align 8
  %10242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10242, align 1
  %10243 = and i32 %10240, 255
  %10244 = call i32 @llvm.ctpop.i32(i32 %10243)
  %10245 = trunc i32 %10244 to i8
  %10246 = and i8 %10245, 1
  %10247 = xor i8 %10246, 1
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10247, i8* %10248, align 1
  %10249 = icmp eq i32 %10240, 0
  %10250 = zext i1 %10249 to i8
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10250, i8* %10251, align 1
  %10252 = lshr i32 %10240, 31
  %10253 = trunc i32 %10252 to i8
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10253, i8* %10254, align 1
  %10255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10255, align 1
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10256, align 1
  store %struct.Memory* %loadMem_40c1e9, %struct.Memory** %MEMORY
  %loadMem_40c1ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 33
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %10259 to i64*
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10261 = getelementptr inbounds %struct.GPR, %struct.GPR* %10260, i32 0, i32 5
  %10262 = getelementptr inbounds %struct.Reg, %struct.Reg* %10261, i32 0, i32 0
  %ECX.i469 = bitcast %union.anon* %10262 to i32*
  %10263 = load i32, i32* %ECX.i469
  %10264 = zext i32 %10263 to i64
  %10265 = load i64, i64* %PC.i468
  %10266 = add i64 %10265, 7
  store i64 %10266, i64* %PC.i468
  store i32 %10263, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40c1ec, %struct.Memory** %MEMORY
  %loadMem_40c1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10268 = getelementptr inbounds %struct.GPR, %struct.GPR* %10267, i32 0, i32 33
  %10269 = getelementptr inbounds %struct.Reg, %struct.Reg* %10268, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %10269 to i64*
  %10270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10271 = getelementptr inbounds %struct.GPR, %struct.GPR* %10270, i32 0, i32 1
  %10272 = getelementptr inbounds %struct.Reg, %struct.Reg* %10271, i32 0, i32 0
  %RAX.i466 = bitcast %union.anon* %10272 to i64*
  %10273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10274 = getelementptr inbounds %struct.GPR, %struct.GPR* %10273, i32 0, i32 15
  %10275 = getelementptr inbounds %struct.Reg, %struct.Reg* %10274, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %10275 to i64*
  %10276 = load i64, i64* %RBP.i467
  %10277 = sub i64 %10276, 20
  %10278 = load i64, i64* %PC.i465
  %10279 = add i64 %10278, 4
  store i64 %10279, i64* %PC.i465
  %10280 = inttoptr i64 %10277 to i32*
  %10281 = load i32, i32* %10280
  %10282 = sext i32 %10281 to i64
  store i64 %10282, i64* %RAX.i466, align 8
  store %struct.Memory* %loadMem_40c1f3, %struct.Memory** %MEMORY
  %loadMem_40c1f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10284 = getelementptr inbounds %struct.GPR, %struct.GPR* %10283, i32 0, i32 33
  %10285 = getelementptr inbounds %struct.Reg, %struct.Reg* %10284, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %10285 to i64*
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 1
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %RAX.i463 = bitcast %union.anon* %10288 to i64*
  %10289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10290 = getelementptr inbounds %struct.GPR, %struct.GPR* %10289, i32 0, i32 5
  %10291 = getelementptr inbounds %struct.Reg, %struct.Reg* %10290, i32 0, i32 0
  %RCX.i464 = bitcast %union.anon* %10291 to i64*
  %10292 = load i64, i64* %RAX.i463
  %10293 = mul i64 %10292, 4
  %10294 = add i64 %10293, 9047808
  %10295 = load i64, i64* %PC.i462
  %10296 = add i64 %10295, 7
  store i64 %10296, i64* %PC.i462
  %10297 = inttoptr i64 %10294 to i32*
  %10298 = load i32, i32* %10297
  %10299 = zext i32 %10298 to i64
  store i64 %10299, i64* %RCX.i464, align 8
  store %struct.Memory* %loadMem_40c1f7, %struct.Memory** %MEMORY
  %loadMem_40c1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %10300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10301 = getelementptr inbounds %struct.GPR, %struct.GPR* %10300, i32 0, i32 33
  %10302 = getelementptr inbounds %struct.Reg, %struct.Reg* %10301, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %10302 to i64*
  %10303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10304 = getelementptr inbounds %struct.GPR, %struct.GPR* %10303, i32 0, i32 5
  %10305 = getelementptr inbounds %struct.Reg, %struct.Reg* %10304, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %10305 to i64*
  %10306 = load i64, i64* %RCX.i461
  %10307 = load i64, i64* %PC.i460
  %10308 = add i64 %10307, 7
  store i64 %10308, i64* %PC.i460
  %10309 = trunc i64 %10306 to i32
  %10310 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10311 = xor i32 %10310, %10309
  %10312 = zext i32 %10311 to i64
  store i64 %10312, i64* %RCX.i461, align 8
  %10313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10313, align 1
  %10314 = and i32 %10311, 255
  %10315 = call i32 @llvm.ctpop.i32(i32 %10314)
  %10316 = trunc i32 %10315 to i8
  %10317 = and i8 %10316, 1
  %10318 = xor i8 %10317, 1
  %10319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10318, i8* %10319, align 1
  %10320 = icmp eq i32 %10311, 0
  %10321 = zext i1 %10320 to i8
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10321, i8* %10322, align 1
  %10323 = lshr i32 %10311, 31
  %10324 = trunc i32 %10323 to i8
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10324, i8* %10325, align 1
  %10326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10326, align 1
  %10327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10327, align 1
  store %struct.Memory* %loadMem_40c1fe, %struct.Memory** %MEMORY
  %loadMem_40c205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10329 = getelementptr inbounds %struct.GPR, %struct.GPR* %10328, i32 0, i32 33
  %10330 = getelementptr inbounds %struct.Reg, %struct.Reg* %10329, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %10330 to i64*
  %10331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10332 = getelementptr inbounds %struct.GPR, %struct.GPR* %10331, i32 0, i32 5
  %10333 = getelementptr inbounds %struct.Reg, %struct.Reg* %10332, i32 0, i32 0
  %ECX.i459 = bitcast %union.anon* %10333 to i32*
  %10334 = load i32, i32* %ECX.i459
  %10335 = zext i32 %10334 to i64
  %10336 = load i64, i64* %PC.i458
  %10337 = add i64 %10336, 7
  store i64 %10337, i64* %PC.i458
  store i32 %10334, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c205, %struct.Memory** %MEMORY
  %loadMem_40c20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10339 = getelementptr inbounds %struct.GPR, %struct.GPR* %10338, i32 0, i32 33
  %10340 = getelementptr inbounds %struct.Reg, %struct.Reg* %10339, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %10340 to i64*
  %10341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10342 = getelementptr inbounds %struct.GPR, %struct.GPR* %10341, i32 0, i32 1
  %10343 = getelementptr inbounds %struct.Reg, %struct.Reg* %10342, i32 0, i32 0
  %RAX.i456 = bitcast %union.anon* %10343 to i64*
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10345 = getelementptr inbounds %struct.GPR, %struct.GPR* %10344, i32 0, i32 15
  %10346 = getelementptr inbounds %struct.Reg, %struct.Reg* %10345, i32 0, i32 0
  %RBP.i457 = bitcast %union.anon* %10346 to i64*
  %10347 = load i64, i64* %RBP.i457
  %10348 = sub i64 %10347, 24
  %10349 = load i64, i64* %PC.i455
  %10350 = add i64 %10349, 4
  store i64 %10350, i64* %PC.i455
  %10351 = inttoptr i64 %10348 to i32*
  %10352 = load i32, i32* %10351
  %10353 = sext i32 %10352 to i64
  store i64 %10353, i64* %RAX.i456, align 8
  store %struct.Memory* %loadMem_40c20c, %struct.Memory** %MEMORY
  %loadMem_40c210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10355 = getelementptr inbounds %struct.GPR, %struct.GPR* %10354, i32 0, i32 33
  %10356 = getelementptr inbounds %struct.Reg, %struct.Reg* %10355, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %10356 to i64*
  %10357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10358 = getelementptr inbounds %struct.GPR, %struct.GPR* %10357, i32 0, i32 1
  %10359 = getelementptr inbounds %struct.Reg, %struct.Reg* %10358, i32 0, i32 0
  %RAX.i453 = bitcast %union.anon* %10359 to i64*
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10361 = getelementptr inbounds %struct.GPR, %struct.GPR* %10360, i32 0, i32 5
  %10362 = getelementptr inbounds %struct.Reg, %struct.Reg* %10361, i32 0, i32 0
  %RCX.i454 = bitcast %union.anon* %10362 to i64*
  %10363 = load i64, i64* %RAX.i453
  %10364 = mul i64 %10363, 4
  %10365 = add i64 %10364, 9047808
  %10366 = load i64, i64* %PC.i452
  %10367 = add i64 %10366, 7
  store i64 %10367, i64* %PC.i452
  %10368 = inttoptr i64 %10365 to i32*
  %10369 = load i32, i32* %10368
  %10370 = zext i32 %10369 to i64
  store i64 %10370, i64* %RCX.i454, align 8
  store %struct.Memory* %loadMem_40c210, %struct.Memory** %MEMORY
  %loadMem_40c217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10372 = getelementptr inbounds %struct.GPR, %struct.GPR* %10371, i32 0, i32 33
  %10373 = getelementptr inbounds %struct.Reg, %struct.Reg* %10372, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %10373 to i64*
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10375 = getelementptr inbounds %struct.GPR, %struct.GPR* %10374, i32 0, i32 5
  %10376 = getelementptr inbounds %struct.Reg, %struct.Reg* %10375, i32 0, i32 0
  %RCX.i451 = bitcast %union.anon* %10376 to i64*
  %10377 = load i64, i64* %RCX.i451
  %10378 = load i64, i64* %PC.i450
  %10379 = add i64 %10378, 7
  store i64 %10379, i64* %PC.i450
  %10380 = trunc i64 %10377 to i32
  %10381 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10382 = xor i32 %10381, %10380
  %10383 = zext i32 %10382 to i64
  store i64 %10383, i64* %RCX.i451, align 8
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10384, align 1
  %10385 = and i32 %10382, 255
  %10386 = call i32 @llvm.ctpop.i32(i32 %10385)
  %10387 = trunc i32 %10386 to i8
  %10388 = and i8 %10387, 1
  %10389 = xor i8 %10388, 1
  %10390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10389, i8* %10390, align 1
  %10391 = icmp eq i32 %10382, 0
  %10392 = zext i1 %10391 to i8
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10392, i8* %10393, align 1
  %10394 = lshr i32 %10382, 31
  %10395 = trunc i32 %10394 to i8
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10395, i8* %10396, align 1
  %10397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10397, align 1
  %10398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10398, align 1
  store %struct.Memory* %loadMem_40c217, %struct.Memory** %MEMORY
  %loadMem_40c21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 33
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %10401 to i64*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 5
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %ECX.i449 = bitcast %union.anon* %10404 to i32*
  %10405 = load i32, i32* %ECX.i449
  %10406 = zext i32 %10405 to i64
  %10407 = load i64, i64* %PC.i448
  %10408 = add i64 %10407, 7
  store i64 %10408, i64* %PC.i448
  store i32 %10405, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c21e, %struct.Memory** %MEMORY
  %loadMem_40c225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 33
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %10411 to i64*
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 5
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %RCX.i447 = bitcast %union.anon* %10414 to i64*
  %10415 = load i64, i64* %PC.i446
  %10416 = add i64 %10415, 7
  store i64 %10416, i64* %PC.i446
  %10417 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %10418 = zext i32 %10417 to i64
  store i64 %10418, i64* %RCX.i447, align 8
  store %struct.Memory* %loadMem_40c225, %struct.Memory** %MEMORY
  %loadMem_40c22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10420 = getelementptr inbounds %struct.GPR, %struct.GPR* %10419, i32 0, i32 33
  %10421 = getelementptr inbounds %struct.Reg, %struct.Reg* %10420, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %10421 to i64*
  %10422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10423 = getelementptr inbounds %struct.GPR, %struct.GPR* %10422, i32 0, i32 5
  %10424 = getelementptr inbounds %struct.Reg, %struct.Reg* %10423, i32 0, i32 0
  %RCX.i445 = bitcast %union.anon* %10424 to i64*
  %10425 = load i64, i64* %RCX.i445
  %10426 = load i64, i64* %PC.i444
  %10427 = add i64 %10426, 3
  store i64 %10427, i64* %PC.i444
  %10428 = trunc i64 %10425 to i32
  %10429 = add i32 1, %10428
  %10430 = zext i32 %10429 to i64
  store i64 %10430, i64* %RCX.i445, align 8
  %10431 = icmp ult i32 %10429, %10428
  %10432 = icmp ult i32 %10429, 1
  %10433 = or i1 %10431, %10432
  %10434 = zext i1 %10433 to i8
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10434, i8* %10435, align 1
  %10436 = and i32 %10429, 255
  %10437 = call i32 @llvm.ctpop.i32(i32 %10436)
  %10438 = trunc i32 %10437 to i8
  %10439 = and i8 %10438, 1
  %10440 = xor i8 %10439, 1
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10440, i8* %10441, align 1
  %10442 = xor i64 1, %10425
  %10443 = trunc i64 %10442 to i32
  %10444 = xor i32 %10443, %10429
  %10445 = lshr i32 %10444, 4
  %10446 = trunc i32 %10445 to i8
  %10447 = and i8 %10446, 1
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10447, i8* %10448, align 1
  %10449 = icmp eq i32 %10429, 0
  %10450 = zext i1 %10449 to i8
  %10451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10450, i8* %10451, align 1
  %10452 = lshr i32 %10429, 31
  %10453 = trunc i32 %10452 to i8
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10453, i8* %10454, align 1
  %10455 = lshr i32 %10428, 31
  %10456 = xor i32 %10452, %10455
  %10457 = add i32 %10456, %10452
  %10458 = icmp eq i32 %10457, 2
  %10459 = zext i1 %10458 to i8
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10459, i8* %10460, align 1
  store %struct.Memory* %loadMem_40c22c, %struct.Memory** %MEMORY
  %loadMem_40c22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10462 = getelementptr inbounds %struct.GPR, %struct.GPR* %10461, i32 0, i32 33
  %10463 = getelementptr inbounds %struct.Reg, %struct.Reg* %10462, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %10463 to i64*
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10465 = getelementptr inbounds %struct.GPR, %struct.GPR* %10464, i32 0, i32 5
  %10466 = getelementptr inbounds %struct.Reg, %struct.Reg* %10465, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10466 to i32*
  %10467 = load i32, i32* %ECX.i
  %10468 = zext i32 %10467 to i64
  %10469 = load i64, i64* %PC.i443
  %10470 = add i64 %10469, 7
  store i64 %10470, i64* %PC.i443
  store i32 %10467, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c22f, %struct.Memory** %MEMORY
  %loadMem_40c236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10472 = getelementptr inbounds %struct.GPR, %struct.GPR* %10471, i32 0, i32 33
  %10473 = getelementptr inbounds %struct.Reg, %struct.Reg* %10472, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %10473 to i64*
  %10474 = load i64, i64* %PC.i442
  %10475 = add i64 %10474, 1368
  %10476 = load i64, i64* %PC.i442
  %10477 = add i64 %10476, 5
  store i64 %10477, i64* %PC.i442
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10475, i64* %10478, align 8
  store %struct.Memory* %loadMem_40c236, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c23b:                                  ; preds = %block_.L_40bed4
  %loadMem_40c23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10480 = getelementptr inbounds %struct.GPR, %struct.GPR* %10479, i32 0, i32 33
  %10481 = getelementptr inbounds %struct.Reg, %struct.Reg* %10480, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %10481 to i64*
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10483 = getelementptr inbounds %struct.GPR, %struct.GPR* %10482, i32 0, i32 1
  %10484 = getelementptr inbounds %struct.Reg, %struct.Reg* %10483, i32 0, i32 0
  %RAX.i440 = bitcast %union.anon* %10484 to i64*
  %10485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10486 = getelementptr inbounds %struct.GPR, %struct.GPR* %10485, i32 0, i32 15
  %10487 = getelementptr inbounds %struct.Reg, %struct.Reg* %10486, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %10487 to i64*
  %10488 = load i64, i64* %RBP.i441
  %10489 = sub i64 %10488, 20
  %10490 = load i64, i64* %PC.i439
  %10491 = add i64 %10490, 4
  store i64 %10491, i64* %PC.i439
  %10492 = inttoptr i64 %10489 to i32*
  %10493 = load i32, i32* %10492
  %10494 = sext i32 %10493 to i64
  store i64 %10494, i64* %RAX.i440, align 8
  store %struct.Memory* %loadMem_40c23b, %struct.Memory** %MEMORY
  %loadMem_40c23f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10496 = getelementptr inbounds %struct.GPR, %struct.GPR* %10495, i32 0, i32 33
  %10497 = getelementptr inbounds %struct.Reg, %struct.Reg* %10496, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %10497 to i64*
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10499 = getelementptr inbounds %struct.GPR, %struct.GPR* %10498, i32 0, i32 1
  %10500 = getelementptr inbounds %struct.Reg, %struct.Reg* %10499, i32 0, i32 0
  %RAX.i438 = bitcast %union.anon* %10500 to i64*
  %10501 = load i64, i64* %RAX.i438
  %10502 = mul i64 %10501, 4
  %10503 = add i64 %10502, 8807744
  %10504 = load i64, i64* %PC.i437
  %10505 = add i64 %10504, 8
  store i64 %10505, i64* %PC.i437
  %10506 = inttoptr i64 %10503 to i32*
  %10507 = load i32, i32* %10506
  %10508 = sub i32 %10507, 5
  %10509 = icmp ult i32 %10507, 5
  %10510 = zext i1 %10509 to i8
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10510, i8* %10511, align 1
  %10512 = and i32 %10508, 255
  %10513 = call i32 @llvm.ctpop.i32(i32 %10512)
  %10514 = trunc i32 %10513 to i8
  %10515 = and i8 %10514, 1
  %10516 = xor i8 %10515, 1
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10516, i8* %10517, align 1
  %10518 = xor i32 %10507, 5
  %10519 = xor i32 %10518, %10508
  %10520 = lshr i32 %10519, 4
  %10521 = trunc i32 %10520 to i8
  %10522 = and i8 %10521, 1
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10522, i8* %10523, align 1
  %10524 = icmp eq i32 %10508, 0
  %10525 = zext i1 %10524 to i8
  %10526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10525, i8* %10526, align 1
  %10527 = lshr i32 %10508, 31
  %10528 = trunc i32 %10527 to i8
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10528, i8* %10529, align 1
  %10530 = lshr i32 %10507, 31
  %10531 = xor i32 %10527, %10530
  %10532 = add i32 %10531, %10530
  %10533 = icmp eq i32 %10532, 2
  %10534 = zext i1 %10533 to i8
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10534, i8* %10535, align 1
  store %struct.Memory* %loadMem_40c23f, %struct.Memory** %MEMORY
  %loadMem_40c247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10537 = getelementptr inbounds %struct.GPR, %struct.GPR* %10536, i32 0, i32 33
  %10538 = getelementptr inbounds %struct.Reg, %struct.Reg* %10537, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %10538 to i64*
  %10539 = load i64, i64* %PC.i436
  %10540 = add i64 %10539, 241
  %10541 = load i64, i64* %PC.i436
  %10542 = add i64 %10541, 6
  %10543 = load i64, i64* %PC.i436
  %10544 = add i64 %10543, 6
  store i64 %10544, i64* %PC.i436
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10546 = load i8, i8* %10545, align 1
  store i8 %10546, i8* %BRANCH_TAKEN, align 1
  %10547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10548 = icmp ne i8 %10546, 0
  %10549 = select i1 %10548, i64 %10540, i64 %10542
  store i64 %10549, i64* %10547, align 8
  store %struct.Memory* %loadMem_40c247, %struct.Memory** %MEMORY
  %loadBr_40c247 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c247 = icmp eq i8 %loadBr_40c247, 1
  br i1 %cmpBr_40c247, label %block_.L_40c338, label %block_40c24d

block_40c24d:                                     ; preds = %block_.L_40c23b
  %loadMem_40c24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10551 = getelementptr inbounds %struct.GPR, %struct.GPR* %10550, i32 0, i32 33
  %10552 = getelementptr inbounds %struct.Reg, %struct.Reg* %10551, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %10552 to i64*
  %10553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10554 = getelementptr inbounds %struct.GPR, %struct.GPR* %10553, i32 0, i32 1
  %10555 = getelementptr inbounds %struct.Reg, %struct.Reg* %10554, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %10555 to i64*
  %10556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10557 = getelementptr inbounds %struct.GPR, %struct.GPR* %10556, i32 0, i32 15
  %10558 = getelementptr inbounds %struct.Reg, %struct.Reg* %10557, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %10558 to i64*
  %10559 = load i64, i64* %RBP.i435
  %10560 = sub i64 %10559, 20
  %10561 = load i64, i64* %PC.i433
  %10562 = add i64 %10561, 4
  store i64 %10562, i64* %PC.i433
  %10563 = inttoptr i64 %10560 to i32*
  %10564 = load i32, i32* %10563
  %10565 = sext i32 %10564 to i64
  store i64 %10565, i64* %RAX.i434, align 8
  store %struct.Memory* %loadMem_40c24d, %struct.Memory** %MEMORY
  %loadMem_40c251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10567 = getelementptr inbounds %struct.GPR, %struct.GPR* %10566, i32 0, i32 33
  %10568 = getelementptr inbounds %struct.Reg, %struct.Reg* %10567, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %10568 to i64*
  %10569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10570 = getelementptr inbounds %struct.GPR, %struct.GPR* %10569, i32 0, i32 1
  %10571 = getelementptr inbounds %struct.Reg, %struct.Reg* %10570, i32 0, i32 0
  %RAX.i432 = bitcast %union.anon* %10571 to i64*
  %10572 = load i64, i64* %RAX.i432
  %10573 = mul i64 %10572, 4
  %10574 = add i64 %10573, 8807744
  %10575 = load i64, i64* %PC.i431
  %10576 = add i64 %10575, 8
  store i64 %10576, i64* %PC.i431
  %10577 = inttoptr i64 %10574 to i32*
  %10578 = load i32, i32* %10577
  %10579 = sub i32 %10578, 6
  %10580 = icmp ult i32 %10578, 6
  %10581 = zext i1 %10580 to i8
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10581, i8* %10582, align 1
  %10583 = and i32 %10579, 255
  %10584 = call i32 @llvm.ctpop.i32(i32 %10583)
  %10585 = trunc i32 %10584 to i8
  %10586 = and i8 %10585, 1
  %10587 = xor i8 %10586, 1
  %10588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10587, i8* %10588, align 1
  %10589 = xor i32 %10578, 6
  %10590 = xor i32 %10589, %10579
  %10591 = lshr i32 %10590, 4
  %10592 = trunc i32 %10591 to i8
  %10593 = and i8 %10592, 1
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10593, i8* %10594, align 1
  %10595 = icmp eq i32 %10579, 0
  %10596 = zext i1 %10595 to i8
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10596, i8* %10597, align 1
  %10598 = lshr i32 %10579, 31
  %10599 = trunc i32 %10598 to i8
  %10600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10599, i8* %10600, align 1
  %10601 = lshr i32 %10578, 31
  %10602 = xor i32 %10598, %10601
  %10603 = add i32 %10602, %10601
  %10604 = icmp eq i32 %10603, 2
  %10605 = zext i1 %10604 to i8
  %10606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10605, i8* %10606, align 1
  store %struct.Memory* %loadMem_40c251, %struct.Memory** %MEMORY
  %loadMem_40c259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10608 = getelementptr inbounds %struct.GPR, %struct.GPR* %10607, i32 0, i32 33
  %10609 = getelementptr inbounds %struct.Reg, %struct.Reg* %10608, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %10609 to i64*
  %10610 = load i64, i64* %PC.i430
  %10611 = add i64 %10610, 223
  %10612 = load i64, i64* %PC.i430
  %10613 = add i64 %10612, 6
  %10614 = load i64, i64* %PC.i430
  %10615 = add i64 %10614, 6
  store i64 %10615, i64* %PC.i430
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10617 = load i8, i8* %10616, align 1
  store i8 %10617, i8* %BRANCH_TAKEN, align 1
  %10618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10619 = icmp ne i8 %10617, 0
  %10620 = select i1 %10619, i64 %10611, i64 %10613
  store i64 %10620, i64* %10618, align 8
  store %struct.Memory* %loadMem_40c259, %struct.Memory** %MEMORY
  %loadBr_40c259 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c259 = icmp eq i8 %loadBr_40c259, 1
  br i1 %cmpBr_40c259, label %block_.L_40c338, label %block_40c25f

block_40c25f:                                     ; preds = %block_40c24d
  %loadMem_40c25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10622 = getelementptr inbounds %struct.GPR, %struct.GPR* %10621, i32 0, i32 33
  %10623 = getelementptr inbounds %struct.Reg, %struct.Reg* %10622, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %10623 to i64*
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 1
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %10626 to i64*
  %10627 = load i64, i64* %PC.i428
  %10628 = add i64 %10627, 10
  store i64 %10628, i64* %PC.i428
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i429, align 8
  store %struct.Memory* %loadMem_40c25f, %struct.Memory** %MEMORY
  %loadMem_40c269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 33
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 5
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %RCX.i426 = bitcast %union.anon* %10634 to i64*
  %10635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10636 = getelementptr inbounds %struct.GPR, %struct.GPR* %10635, i32 0, i32 15
  %10637 = getelementptr inbounds %struct.Reg, %struct.Reg* %10636, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %10637 to i64*
  %10638 = load i64, i64* %RBP.i427
  %10639 = sub i64 %10638, 20
  %10640 = load i64, i64* %PC.i425
  %10641 = add i64 %10640, 4
  store i64 %10641, i64* %PC.i425
  %10642 = inttoptr i64 %10639 to i32*
  %10643 = load i32, i32* %10642
  %10644 = sext i32 %10643 to i64
  store i64 %10644, i64* %RCX.i426, align 8
  store %struct.Memory* %loadMem_40c269, %struct.Memory** %MEMORY
  %loadMem_40c26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10646 = getelementptr inbounds %struct.GPR, %struct.GPR* %10645, i32 0, i32 33
  %10647 = getelementptr inbounds %struct.Reg, %struct.Reg* %10646, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %10647 to i64*
  %10648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10649 = getelementptr inbounds %struct.GPR, %struct.GPR* %10648, i32 0, i32 5
  %10650 = getelementptr inbounds %struct.Reg, %struct.Reg* %10649, i32 0, i32 0
  %RCX.i424 = bitcast %union.anon* %10650 to i64*
  %10651 = load i64, i64* %RCX.i424
  %10652 = mul i64 %10651, 4
  %10653 = add i64 %10652, 8807744
  %10654 = load i64, i64* %PC.i423
  %10655 = add i64 %10654, 8
  store i64 %10655, i64* %PC.i423
  %10656 = inttoptr i64 %10653 to i32*
  %10657 = load i32, i32* %10656
  %10658 = sext i32 %10657 to i64
  store i64 %10658, i64* %RCX.i424, align 8
  store %struct.Memory* %loadMem_40c26d, %struct.Memory** %MEMORY
  %loadMem_40c275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10660 = getelementptr inbounds %struct.GPR, %struct.GPR* %10659, i32 0, i32 33
  %10661 = getelementptr inbounds %struct.Reg, %struct.Reg* %10660, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %10661 to i64*
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10663 = getelementptr inbounds %struct.GPR, %struct.GPR* %10662, i32 0, i32 5
  %10664 = getelementptr inbounds %struct.Reg, %struct.Reg* %10663, i32 0, i32 0
  %RCX.i422 = bitcast %union.anon* %10664 to i64*
  %10665 = load i64, i64* %RCX.i422
  %10666 = load i64, i64* %PC.i421
  %10667 = add i64 %10666, 7
  store i64 %10667, i64* %PC.i421
  %10668 = sext i64 %10665 to i128
  %10669 = and i128 %10668, -18446744073709551616
  %10670 = zext i64 %10665 to i128
  %10671 = or i128 %10669, %10670
  %10672 = mul i128 576, %10671
  %10673 = trunc i128 %10672 to i64
  store i64 %10673, i64* %RCX.i422, align 8
  %10674 = sext i64 %10673 to i128
  %10675 = icmp ne i128 %10674, %10672
  %10676 = zext i1 %10675 to i8
  %10677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10676, i8* %10677, align 1
  %10678 = trunc i128 %10672 to i32
  %10679 = and i32 %10678, 255
  %10680 = call i32 @llvm.ctpop.i32(i32 %10679)
  %10681 = trunc i32 %10680 to i8
  %10682 = and i8 %10681, 1
  %10683 = xor i8 %10682, 1
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10683, i8* %10684, align 1
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10685, align 1
  %10686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10686, align 1
  %10687 = lshr i64 %10673, 63
  %10688 = trunc i64 %10687 to i8
  %10689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10688, i8* %10689, align 1
  %10690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10676, i8* %10690, align 1
  store %struct.Memory* %loadMem_40c275, %struct.Memory** %MEMORY
  %loadMem_40c27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10692 = getelementptr inbounds %struct.GPR, %struct.GPR* %10691, i32 0, i32 33
  %10693 = getelementptr inbounds %struct.Reg, %struct.Reg* %10692, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %10693 to i64*
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 1
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %RAX.i419 = bitcast %union.anon* %10696 to i64*
  %10697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10698 = getelementptr inbounds %struct.GPR, %struct.GPR* %10697, i32 0, i32 7
  %10699 = getelementptr inbounds %struct.Reg, %struct.Reg* %10698, i32 0, i32 0
  %RDX.i420 = bitcast %union.anon* %10699 to i64*
  %10700 = load i64, i64* %RAX.i419
  %10701 = load i64, i64* %PC.i418
  %10702 = add i64 %10701, 3
  store i64 %10702, i64* %PC.i418
  store i64 %10700, i64* %RDX.i420, align 8
  store %struct.Memory* %loadMem_40c27c, %struct.Memory** %MEMORY
  %loadMem_40c27f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10704 = getelementptr inbounds %struct.GPR, %struct.GPR* %10703, i32 0, i32 33
  %10705 = getelementptr inbounds %struct.Reg, %struct.Reg* %10704, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %10705 to i64*
  %10706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10707 = getelementptr inbounds %struct.GPR, %struct.GPR* %10706, i32 0, i32 5
  %10708 = getelementptr inbounds %struct.Reg, %struct.Reg* %10707, i32 0, i32 0
  %RCX.i416 = bitcast %union.anon* %10708 to i64*
  %10709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10710 = getelementptr inbounds %struct.GPR, %struct.GPR* %10709, i32 0, i32 7
  %10711 = getelementptr inbounds %struct.Reg, %struct.Reg* %10710, i32 0, i32 0
  %RDX.i417 = bitcast %union.anon* %10711 to i64*
  %10712 = load i64, i64* %RDX.i417
  %10713 = load i64, i64* %RCX.i416
  %10714 = load i64, i64* %PC.i415
  %10715 = add i64 %10714, 3
  store i64 %10715, i64* %PC.i415
  %10716 = add i64 %10713, %10712
  store i64 %10716, i64* %RDX.i417, align 8
  %10717 = icmp ult i64 %10716, %10712
  %10718 = icmp ult i64 %10716, %10713
  %10719 = or i1 %10717, %10718
  %10720 = zext i1 %10719 to i8
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10720, i8* %10721, align 1
  %10722 = trunc i64 %10716 to i32
  %10723 = and i32 %10722, 255
  %10724 = call i32 @llvm.ctpop.i32(i32 %10723)
  %10725 = trunc i32 %10724 to i8
  %10726 = and i8 %10725, 1
  %10727 = xor i8 %10726, 1
  %10728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10727, i8* %10728, align 1
  %10729 = xor i64 %10713, %10712
  %10730 = xor i64 %10729, %10716
  %10731 = lshr i64 %10730, 4
  %10732 = trunc i64 %10731 to i8
  %10733 = and i8 %10732, 1
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10733, i8* %10734, align 1
  %10735 = icmp eq i64 %10716, 0
  %10736 = zext i1 %10735 to i8
  %10737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10736, i8* %10737, align 1
  %10738 = lshr i64 %10716, 63
  %10739 = trunc i64 %10738 to i8
  %10740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10739, i8* %10740, align 1
  %10741 = lshr i64 %10712, 63
  %10742 = lshr i64 %10713, 63
  %10743 = xor i64 %10738, %10741
  %10744 = xor i64 %10738, %10742
  %10745 = add i64 %10743, %10744
  %10746 = icmp eq i64 %10745, 2
  %10747 = zext i1 %10746 to i8
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10747, i8* %10748, align 1
  store %struct.Memory* %loadMem_40c27f, %struct.Memory** %MEMORY
  %loadMem_40c282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10750 = getelementptr inbounds %struct.GPR, %struct.GPR* %10749, i32 0, i32 33
  %10751 = getelementptr inbounds %struct.Reg, %struct.Reg* %10750, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %10751 to i64*
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10753 = getelementptr inbounds %struct.GPR, %struct.GPR* %10752, i32 0, i32 5
  %10754 = getelementptr inbounds %struct.Reg, %struct.Reg* %10753, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %10754 to i64*
  %10755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10756 = getelementptr inbounds %struct.GPR, %struct.GPR* %10755, i32 0, i32 15
  %10757 = getelementptr inbounds %struct.Reg, %struct.Reg* %10756, i32 0, i32 0
  %RBP.i414 = bitcast %union.anon* %10757 to i64*
  %10758 = load i64, i64* %RBP.i414
  %10759 = sub i64 %10758, 20
  %10760 = load i64, i64* %PC.i412
  %10761 = add i64 %10760, 4
  store i64 %10761, i64* %PC.i412
  %10762 = inttoptr i64 %10759 to i32*
  %10763 = load i32, i32* %10762
  %10764 = sext i32 %10763 to i64
  store i64 %10764, i64* %RCX.i413, align 8
  store %struct.Memory* %loadMem_40c282, %struct.Memory** %MEMORY
  %loadMem_40c286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10766 = getelementptr inbounds %struct.GPR, %struct.GPR* %10765, i32 0, i32 33
  %10767 = getelementptr inbounds %struct.Reg, %struct.Reg* %10766, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %10767 to i64*
  %10768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10769 = getelementptr inbounds %struct.GPR, %struct.GPR* %10768, i32 0, i32 5
  %10770 = getelementptr inbounds %struct.Reg, %struct.Reg* %10769, i32 0, i32 0
  %RCX.i410 = bitcast %union.anon* %10770 to i64*
  %10771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10772 = getelementptr inbounds %struct.GPR, %struct.GPR* %10771, i32 0, i32 7
  %10773 = getelementptr inbounds %struct.Reg, %struct.Reg* %10772, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %10773 to i64*
  %10774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10775 = getelementptr inbounds %struct.GPR, %struct.GPR* %10774, i32 0, i32 9
  %10776 = getelementptr inbounds %struct.Reg, %struct.Reg* %10775, i32 0, i32 0
  %RSI.i411 = bitcast %union.anon* %10776 to i64*
  %10777 = load i64, i64* %RDX.i
  %10778 = load i64, i64* %RCX.i410
  %10779 = mul i64 %10778, 4
  %10780 = add i64 %10779, %10777
  %10781 = load i64, i64* %PC.i409
  %10782 = add i64 %10781, 3
  store i64 %10782, i64* %PC.i409
  %10783 = inttoptr i64 %10780 to i32*
  %10784 = load i32, i32* %10783
  %10785 = zext i32 %10784 to i64
  store i64 %10785, i64* %RSI.i411, align 8
  store %struct.Memory* %loadMem_40c286, %struct.Memory** %MEMORY
  %loadMem_40c289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 33
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %10788 to i64*
  %10789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10790 = getelementptr inbounds %struct.GPR, %struct.GPR* %10789, i32 0, i32 9
  %10791 = getelementptr inbounds %struct.Reg, %struct.Reg* %10790, i32 0, i32 0
  %RSI.i408 = bitcast %union.anon* %10791 to i64*
  %10792 = load i64, i64* %RSI.i408
  %10793 = load i64, i64* %PC.i407
  %10794 = add i64 %10793, 7
  store i64 %10794, i64* %PC.i407
  %10795 = trunc i64 %10792 to i32
  %10796 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10797 = xor i32 %10796, %10795
  %10798 = zext i32 %10797 to i64
  store i64 %10798, i64* %RSI.i408, align 8
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10799, align 1
  %10800 = and i32 %10797, 255
  %10801 = call i32 @llvm.ctpop.i32(i32 %10800)
  %10802 = trunc i32 %10801 to i8
  %10803 = and i8 %10802, 1
  %10804 = xor i8 %10803, 1
  %10805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10804, i8* %10805, align 1
  %10806 = icmp eq i32 %10797, 0
  %10807 = zext i1 %10806 to i8
  %10808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10807, i8* %10808, align 1
  %10809 = lshr i32 %10797, 31
  %10810 = trunc i32 %10809 to i8
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10810, i8* %10811, align 1
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10812, align 1
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10813, align 1
  store %struct.Memory* %loadMem_40c289, %struct.Memory** %MEMORY
  %loadMem_40c290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 33
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %10816 to i64*
  %10817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10818 = getelementptr inbounds %struct.GPR, %struct.GPR* %10817, i32 0, i32 9
  %10819 = getelementptr inbounds %struct.Reg, %struct.Reg* %10818, i32 0, i32 0
  %ESI.i406 = bitcast %union.anon* %10819 to i32*
  %10820 = load i32, i32* %ESI.i406
  %10821 = zext i32 %10820 to i64
  %10822 = load i64, i64* %PC.i405
  %10823 = add i64 %10822, 7
  store i64 %10823, i64* %PC.i405
  store i32 %10820, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c290, %struct.Memory** %MEMORY
  %loadMem_40c297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10825 = getelementptr inbounds %struct.GPR, %struct.GPR* %10824, i32 0, i32 33
  %10826 = getelementptr inbounds %struct.Reg, %struct.Reg* %10825, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %10826 to i64*
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10828 = getelementptr inbounds %struct.GPR, %struct.GPR* %10827, i32 0, i32 5
  %10829 = getelementptr inbounds %struct.Reg, %struct.Reg* %10828, i32 0, i32 0
  %RCX.i403 = bitcast %union.anon* %10829 to i64*
  %10830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10831 = getelementptr inbounds %struct.GPR, %struct.GPR* %10830, i32 0, i32 15
  %10832 = getelementptr inbounds %struct.Reg, %struct.Reg* %10831, i32 0, i32 0
  %RBP.i404 = bitcast %union.anon* %10832 to i64*
  %10833 = load i64, i64* %RBP.i404
  %10834 = sub i64 %10833, 20
  %10835 = load i64, i64* %PC.i402
  %10836 = add i64 %10835, 4
  store i64 %10836, i64* %PC.i402
  %10837 = inttoptr i64 %10834 to i32*
  %10838 = load i32, i32* %10837
  %10839 = sext i32 %10838 to i64
  store i64 %10839, i64* %RCX.i403, align 8
  store %struct.Memory* %loadMem_40c297, %struct.Memory** %MEMORY
  %loadMem_40c29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10841 = getelementptr inbounds %struct.GPR, %struct.GPR* %10840, i32 0, i32 33
  %10842 = getelementptr inbounds %struct.Reg, %struct.Reg* %10841, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %10842 to i64*
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10844 = getelementptr inbounds %struct.GPR, %struct.GPR* %10843, i32 0, i32 5
  %10845 = getelementptr inbounds %struct.Reg, %struct.Reg* %10844, i32 0, i32 0
  %RCX.i401 = bitcast %union.anon* %10845 to i64*
  %10846 = load i64, i64* %RCX.i401
  %10847 = mul i64 %10846, 4
  %10848 = add i64 %10847, 8807744
  %10849 = load i64, i64* %PC.i400
  %10850 = add i64 %10849, 8
  store i64 %10850, i64* %PC.i400
  %10851 = inttoptr i64 %10848 to i32*
  %10852 = load i32, i32* %10851
  %10853 = sext i32 %10852 to i64
  store i64 %10853, i64* %RCX.i401, align 8
  store %struct.Memory* %loadMem_40c29b, %struct.Memory** %MEMORY
  %loadMem_40c2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10855 = getelementptr inbounds %struct.GPR, %struct.GPR* %10854, i32 0, i32 33
  %10856 = getelementptr inbounds %struct.Reg, %struct.Reg* %10855, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %10856 to i64*
  %10857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10858 = getelementptr inbounds %struct.GPR, %struct.GPR* %10857, i32 0, i32 5
  %10859 = getelementptr inbounds %struct.Reg, %struct.Reg* %10858, i32 0, i32 0
  %RCX.i399 = bitcast %union.anon* %10859 to i64*
  %10860 = load i64, i64* %RCX.i399
  %10861 = load i64, i64* %PC.i398
  %10862 = add i64 %10861, 7
  store i64 %10862, i64* %PC.i398
  %10863 = sext i64 %10860 to i128
  %10864 = and i128 %10863, -18446744073709551616
  %10865 = zext i64 %10860 to i128
  %10866 = or i128 %10864, %10865
  %10867 = mul i128 576, %10866
  %10868 = trunc i128 %10867 to i64
  store i64 %10868, i64* %RCX.i399, align 8
  %10869 = sext i64 %10868 to i128
  %10870 = icmp ne i128 %10869, %10867
  %10871 = zext i1 %10870 to i8
  %10872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10871, i8* %10872, align 1
  %10873 = trunc i128 %10867 to i32
  %10874 = and i32 %10873, 255
  %10875 = call i32 @llvm.ctpop.i32(i32 %10874)
  %10876 = trunc i32 %10875 to i8
  %10877 = and i8 %10876, 1
  %10878 = xor i8 %10877, 1
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10878, i8* %10879, align 1
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10880, align 1
  %10881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10881, align 1
  %10882 = lshr i64 %10868, 63
  %10883 = trunc i64 %10882 to i8
  %10884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10883, i8* %10884, align 1
  %10885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10871, i8* %10885, align 1
  store %struct.Memory* %loadMem_40c2a3, %struct.Memory** %MEMORY
  %loadMem_40c2aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %10886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10887 = getelementptr inbounds %struct.GPR, %struct.GPR* %10886, i32 0, i32 33
  %10888 = getelementptr inbounds %struct.Reg, %struct.Reg* %10887, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %10888 to i64*
  %10889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10890 = getelementptr inbounds %struct.GPR, %struct.GPR* %10889, i32 0, i32 1
  %10891 = getelementptr inbounds %struct.Reg, %struct.Reg* %10890, i32 0, i32 0
  %RAX.i396 = bitcast %union.anon* %10891 to i64*
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 5
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %10894 to i64*
  %10895 = load i64, i64* %RAX.i396
  %10896 = load i64, i64* %RCX.i397
  %10897 = load i64, i64* %PC.i395
  %10898 = add i64 %10897, 3
  store i64 %10898, i64* %PC.i395
  %10899 = add i64 %10896, %10895
  store i64 %10899, i64* %RAX.i396, align 8
  %10900 = icmp ult i64 %10899, %10895
  %10901 = icmp ult i64 %10899, %10896
  %10902 = or i1 %10900, %10901
  %10903 = zext i1 %10902 to i8
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10903, i8* %10904, align 1
  %10905 = trunc i64 %10899 to i32
  %10906 = and i32 %10905, 255
  %10907 = call i32 @llvm.ctpop.i32(i32 %10906)
  %10908 = trunc i32 %10907 to i8
  %10909 = and i8 %10908, 1
  %10910 = xor i8 %10909, 1
  %10911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10910, i8* %10911, align 1
  %10912 = xor i64 %10896, %10895
  %10913 = xor i64 %10912, %10899
  %10914 = lshr i64 %10913, 4
  %10915 = trunc i64 %10914 to i8
  %10916 = and i8 %10915, 1
  %10917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10916, i8* %10917, align 1
  %10918 = icmp eq i64 %10899, 0
  %10919 = zext i1 %10918 to i8
  %10920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10919, i8* %10920, align 1
  %10921 = lshr i64 %10899, 63
  %10922 = trunc i64 %10921 to i8
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10922, i8* %10923, align 1
  %10924 = lshr i64 %10895, 63
  %10925 = lshr i64 %10896, 63
  %10926 = xor i64 %10921, %10924
  %10927 = xor i64 %10921, %10925
  %10928 = add i64 %10926, %10927
  %10929 = icmp eq i64 %10928, 2
  %10930 = zext i1 %10929 to i8
  %10931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10930, i8* %10931, align 1
  store %struct.Memory* %loadMem_40c2aa, %struct.Memory** %MEMORY
  %loadMem_40c2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %10932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10933 = getelementptr inbounds %struct.GPR, %struct.GPR* %10932, i32 0, i32 33
  %10934 = getelementptr inbounds %struct.Reg, %struct.Reg* %10933, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %10934 to i64*
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10936 = getelementptr inbounds %struct.GPR, %struct.GPR* %10935, i32 0, i32 5
  %10937 = getelementptr inbounds %struct.Reg, %struct.Reg* %10936, i32 0, i32 0
  %RCX.i393 = bitcast %union.anon* %10937 to i64*
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10939 = getelementptr inbounds %struct.GPR, %struct.GPR* %10938, i32 0, i32 15
  %10940 = getelementptr inbounds %struct.Reg, %struct.Reg* %10939, i32 0, i32 0
  %RBP.i394 = bitcast %union.anon* %10940 to i64*
  %10941 = load i64, i64* %RBP.i394
  %10942 = sub i64 %10941, 24
  %10943 = load i64, i64* %PC.i392
  %10944 = add i64 %10943, 4
  store i64 %10944, i64* %PC.i392
  %10945 = inttoptr i64 %10942 to i32*
  %10946 = load i32, i32* %10945
  %10947 = sext i32 %10946 to i64
  store i64 %10947, i64* %RCX.i393, align 8
  store %struct.Memory* %loadMem_40c2ad, %struct.Memory** %MEMORY
  %loadMem_40c2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10949 = getelementptr inbounds %struct.GPR, %struct.GPR* %10948, i32 0, i32 33
  %10950 = getelementptr inbounds %struct.Reg, %struct.Reg* %10949, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %10950 to i64*
  %10951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10952 = getelementptr inbounds %struct.GPR, %struct.GPR* %10951, i32 0, i32 1
  %10953 = getelementptr inbounds %struct.Reg, %struct.Reg* %10952, i32 0, i32 0
  %RAX.i389 = bitcast %union.anon* %10953 to i64*
  %10954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10955 = getelementptr inbounds %struct.GPR, %struct.GPR* %10954, i32 0, i32 5
  %10956 = getelementptr inbounds %struct.Reg, %struct.Reg* %10955, i32 0, i32 0
  %RCX.i390 = bitcast %union.anon* %10956 to i64*
  %10957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10958 = getelementptr inbounds %struct.GPR, %struct.GPR* %10957, i32 0, i32 9
  %10959 = getelementptr inbounds %struct.Reg, %struct.Reg* %10958, i32 0, i32 0
  %RSI.i391 = bitcast %union.anon* %10959 to i64*
  %10960 = load i64, i64* %RAX.i389
  %10961 = load i64, i64* %RCX.i390
  %10962 = mul i64 %10961, 4
  %10963 = add i64 %10962, %10960
  %10964 = load i64, i64* %PC.i388
  %10965 = add i64 %10964, 3
  store i64 %10965, i64* %PC.i388
  %10966 = inttoptr i64 %10963 to i32*
  %10967 = load i32, i32* %10966
  %10968 = zext i32 %10967 to i64
  store i64 %10968, i64* %RSI.i391, align 8
  store %struct.Memory* %loadMem_40c2b1, %struct.Memory** %MEMORY
  %loadMem_40c2b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 33
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %10971 to i64*
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10973 = getelementptr inbounds %struct.GPR, %struct.GPR* %10972, i32 0, i32 9
  %10974 = getelementptr inbounds %struct.Reg, %struct.Reg* %10973, i32 0, i32 0
  %RSI.i387 = bitcast %union.anon* %10974 to i64*
  %10975 = load i64, i64* %RSI.i387
  %10976 = load i64, i64* %PC.i386
  %10977 = add i64 %10976, 7
  store i64 %10977, i64* %PC.i386
  %10978 = trunc i64 %10975 to i32
  %10979 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10980 = xor i32 %10979, %10978
  %10981 = zext i32 %10980 to i64
  store i64 %10981, i64* %RSI.i387, align 8
  %10982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10982, align 1
  %10983 = and i32 %10980, 255
  %10984 = call i32 @llvm.ctpop.i32(i32 %10983)
  %10985 = trunc i32 %10984 to i8
  %10986 = and i8 %10985, 1
  %10987 = xor i8 %10986, 1
  %10988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10987, i8* %10988, align 1
  %10989 = icmp eq i32 %10980, 0
  %10990 = zext i1 %10989 to i8
  %10991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10990, i8* %10991, align 1
  %10992 = lshr i32 %10980, 31
  %10993 = trunc i32 %10992 to i8
  %10994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10993, i8* %10994, align 1
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10995, align 1
  %10996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10996, align 1
  store %struct.Memory* %loadMem_40c2b4, %struct.Memory** %MEMORY
  %loadMem_40c2bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10998 = getelementptr inbounds %struct.GPR, %struct.GPR* %10997, i32 0, i32 33
  %10999 = getelementptr inbounds %struct.Reg, %struct.Reg* %10998, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %10999 to i64*
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11001 = getelementptr inbounds %struct.GPR, %struct.GPR* %11000, i32 0, i32 9
  %11002 = getelementptr inbounds %struct.Reg, %struct.Reg* %11001, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %11002 to i32*
  %11003 = load i32, i32* %ESI.i385
  %11004 = zext i32 %11003 to i64
  %11005 = load i64, i64* %PC.i384
  %11006 = add i64 %11005, 7
  store i64 %11006, i64* %PC.i384
  store i32 %11003, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c2bb, %struct.Memory** %MEMORY
  %loadMem_40c2c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11008 = getelementptr inbounds %struct.GPR, %struct.GPR* %11007, i32 0, i32 33
  %11009 = getelementptr inbounds %struct.Reg, %struct.Reg* %11008, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %11009 to i64*
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11011 = getelementptr inbounds %struct.GPR, %struct.GPR* %11010, i32 0, i32 1
  %11012 = getelementptr inbounds %struct.Reg, %struct.Reg* %11011, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %11012 to i64*
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11014 = getelementptr inbounds %struct.GPR, %struct.GPR* %11013, i32 0, i32 15
  %11015 = getelementptr inbounds %struct.Reg, %struct.Reg* %11014, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %11015 to i64*
  %11016 = load i64, i64* %RBP.i383
  %11017 = sub i64 %11016, 20
  %11018 = load i64, i64* %PC.i381
  %11019 = add i64 %11018, 4
  store i64 %11019, i64* %PC.i381
  %11020 = inttoptr i64 %11017 to i32*
  %11021 = load i32, i32* %11020
  %11022 = sext i32 %11021 to i64
  store i64 %11022, i64* %RAX.i382, align 8
  store %struct.Memory* %loadMem_40c2c2, %struct.Memory** %MEMORY
  %loadMem_40c2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11024 = getelementptr inbounds %struct.GPR, %struct.GPR* %11023, i32 0, i32 33
  %11025 = getelementptr inbounds %struct.Reg, %struct.Reg* %11024, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %11025 to i64*
  %11026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11027 = getelementptr inbounds %struct.GPR, %struct.GPR* %11026, i32 0, i32 1
  %11028 = getelementptr inbounds %struct.Reg, %struct.Reg* %11027, i32 0, i32 0
  %RAX.i379 = bitcast %union.anon* %11028 to i64*
  %11029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11030 = getelementptr inbounds %struct.GPR, %struct.GPR* %11029, i32 0, i32 9
  %11031 = getelementptr inbounds %struct.Reg, %struct.Reg* %11030, i32 0, i32 0
  %RSI.i380 = bitcast %union.anon* %11031 to i64*
  %11032 = load i64, i64* %RAX.i379
  %11033 = mul i64 %11032, 4
  %11034 = add i64 %11033, 8807744
  %11035 = load i64, i64* %PC.i378
  %11036 = add i64 %11035, 7
  store i64 %11036, i64* %PC.i378
  %11037 = inttoptr i64 %11034 to i32*
  %11038 = load i32, i32* %11037
  %11039 = zext i32 %11038 to i64
  store i64 %11039, i64* %RSI.i380, align 8
  store %struct.Memory* %loadMem_40c2c6, %struct.Memory** %MEMORY
  %loadMem_40c2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11041 = getelementptr inbounds %struct.GPR, %struct.GPR* %11040, i32 0, i32 33
  %11042 = getelementptr inbounds %struct.Reg, %struct.Reg* %11041, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %11042 to i64*
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11044 = getelementptr inbounds %struct.GPR, %struct.GPR* %11043, i32 0, i32 1
  %11045 = getelementptr inbounds %struct.Reg, %struct.Reg* %11044, i32 0, i32 0
  %RAX.i376 = bitcast %union.anon* %11045 to i64*
  %11046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11047 = getelementptr inbounds %struct.GPR, %struct.GPR* %11046, i32 0, i32 15
  %11048 = getelementptr inbounds %struct.Reg, %struct.Reg* %11047, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %11048 to i64*
  %11049 = load i64, i64* %RBP.i377
  %11050 = sub i64 %11049, 24
  %11051 = load i64, i64* %PC.i375
  %11052 = add i64 %11051, 4
  store i64 %11052, i64* %PC.i375
  %11053 = inttoptr i64 %11050 to i32*
  %11054 = load i32, i32* %11053
  %11055 = sext i32 %11054 to i64
  store i64 %11055, i64* %RAX.i376, align 8
  store %struct.Memory* %loadMem_40c2cd, %struct.Memory** %MEMORY
  %loadMem_40c2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11057 = getelementptr inbounds %struct.GPR, %struct.GPR* %11056, i32 0, i32 33
  %11058 = getelementptr inbounds %struct.Reg, %struct.Reg* %11057, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %11058 to i64*
  %11059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11060 = getelementptr inbounds %struct.GPR, %struct.GPR* %11059, i32 0, i32 9
  %11061 = getelementptr inbounds %struct.Reg, %struct.Reg* %11060, i32 0, i32 0
  %ESI.i373 = bitcast %union.anon* %11061 to i32*
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11063 = getelementptr inbounds %struct.GPR, %struct.GPR* %11062, i32 0, i32 1
  %11064 = getelementptr inbounds %struct.Reg, %struct.Reg* %11063, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %11064 to i64*
  %11065 = load i64, i64* %RAX.i374
  %11066 = mul i64 %11065, 4
  %11067 = add i64 %11066, 8807744
  %11068 = load i32, i32* %ESI.i373
  %11069 = zext i32 %11068 to i64
  %11070 = load i64, i64* %PC.i372
  %11071 = add i64 %11070, 7
  store i64 %11071, i64* %PC.i372
  %11072 = inttoptr i64 %11067 to i32*
  store i32 %11068, i32* %11072
  store %struct.Memory* %loadMem_40c2d1, %struct.Memory** %MEMORY
  %loadMem_40c2d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11074 = getelementptr inbounds %struct.GPR, %struct.GPR* %11073, i32 0, i32 33
  %11075 = getelementptr inbounds %struct.Reg, %struct.Reg* %11074, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %11075 to i64*
  %11076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11077 = getelementptr inbounds %struct.GPR, %struct.GPR* %11076, i32 0, i32 1
  %11078 = getelementptr inbounds %struct.Reg, %struct.Reg* %11077, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %11078 to i64*
  %11079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11080 = getelementptr inbounds %struct.GPR, %struct.GPR* %11079, i32 0, i32 15
  %11081 = getelementptr inbounds %struct.Reg, %struct.Reg* %11080, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %11081 to i64*
  %11082 = load i64, i64* %RBP.i371
  %11083 = sub i64 %11082, 20
  %11084 = load i64, i64* %PC.i369
  %11085 = add i64 %11084, 4
  store i64 %11085, i64* %PC.i369
  %11086 = inttoptr i64 %11083 to i32*
  %11087 = load i32, i32* %11086
  %11088 = sext i32 %11087 to i64
  store i64 %11088, i64* %RAX.i370, align 8
  store %struct.Memory* %loadMem_40c2d8, %struct.Memory** %MEMORY
  %loadMem_40c2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11090 = getelementptr inbounds %struct.GPR, %struct.GPR* %11089, i32 0, i32 33
  %11091 = getelementptr inbounds %struct.Reg, %struct.Reg* %11090, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %11091 to i64*
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11093 = getelementptr inbounds %struct.GPR, %struct.GPR* %11092, i32 0, i32 1
  %11094 = getelementptr inbounds %struct.Reg, %struct.Reg* %11093, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %11094 to i64*
  %11095 = load i64, i64* %RAX.i368
  %11096 = mul i64 %11095, 4
  %11097 = add i64 %11096, 8807744
  %11098 = load i64, i64* %PC.i367
  %11099 = add i64 %11098, 11
  store i64 %11099, i64* %PC.i367
  %11100 = inttoptr i64 %11097 to i32*
  store i32 13, i32* %11100
  store %struct.Memory* %loadMem_40c2dc, %struct.Memory** %MEMORY
  %loadMem_40c2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11102 = getelementptr inbounds %struct.GPR, %struct.GPR* %11101, i32 0, i32 33
  %11103 = getelementptr inbounds %struct.Reg, %struct.Reg* %11102, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %11103 to i64*
  %11104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11105 = getelementptr inbounds %struct.GPR, %struct.GPR* %11104, i32 0, i32 1
  %11106 = getelementptr inbounds %struct.Reg, %struct.Reg* %11105, i32 0, i32 0
  %RAX.i365 = bitcast %union.anon* %11106 to i64*
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11108 = getelementptr inbounds %struct.GPR, %struct.GPR* %11107, i32 0, i32 15
  %11109 = getelementptr inbounds %struct.Reg, %struct.Reg* %11108, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %11109 to i64*
  %11110 = load i64, i64* %RBP.i366
  %11111 = sub i64 %11110, 24
  %11112 = load i64, i64* %PC.i364
  %11113 = add i64 %11112, 4
  store i64 %11113, i64* %PC.i364
  %11114 = inttoptr i64 %11111 to i32*
  %11115 = load i32, i32* %11114
  %11116 = sext i32 %11115 to i64
  store i64 %11116, i64* %RAX.i365, align 8
  store %struct.Memory* %loadMem_40c2e7, %struct.Memory** %MEMORY
  %loadMem_40c2eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %11117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11118 = getelementptr inbounds %struct.GPR, %struct.GPR* %11117, i32 0, i32 33
  %11119 = getelementptr inbounds %struct.Reg, %struct.Reg* %11118, i32 0, i32 0
  %PC.i361 = bitcast %union.anon* %11119 to i64*
  %11120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11121 = getelementptr inbounds %struct.GPR, %struct.GPR* %11120, i32 0, i32 1
  %11122 = getelementptr inbounds %struct.Reg, %struct.Reg* %11121, i32 0, i32 0
  %RAX.i362 = bitcast %union.anon* %11122 to i64*
  %11123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11124 = getelementptr inbounds %struct.GPR, %struct.GPR* %11123, i32 0, i32 9
  %11125 = getelementptr inbounds %struct.Reg, %struct.Reg* %11124, i32 0, i32 0
  %RSI.i363 = bitcast %union.anon* %11125 to i64*
  %11126 = load i64, i64* %RAX.i362
  %11127 = mul i64 %11126, 4
  %11128 = add i64 %11127, 8922032
  %11129 = load i64, i64* %PC.i361
  %11130 = add i64 %11129, 7
  store i64 %11130, i64* %PC.i361
  %11131 = inttoptr i64 %11128 to i32*
  %11132 = load i32, i32* %11131
  %11133 = zext i32 %11132 to i64
  store i64 %11133, i64* %RSI.i363, align 8
  store %struct.Memory* %loadMem_40c2eb, %struct.Memory** %MEMORY
  %loadMem_40c2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11135 = getelementptr inbounds %struct.GPR, %struct.GPR* %11134, i32 0, i32 33
  %11136 = getelementptr inbounds %struct.Reg, %struct.Reg* %11135, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %11136 to i64*
  %11137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11138 = getelementptr inbounds %struct.GPR, %struct.GPR* %11137, i32 0, i32 9
  %11139 = getelementptr inbounds %struct.Reg, %struct.Reg* %11138, i32 0, i32 0
  %RSI.i360 = bitcast %union.anon* %11139 to i64*
  %11140 = load i64, i64* %RSI.i360
  %11141 = load i64, i64* %PC.i359
  %11142 = add i64 %11141, 3
  store i64 %11142, i64* %PC.i359
  %11143 = trunc i64 %11140 to i32
  %11144 = add i32 1, %11143
  %11145 = zext i32 %11144 to i64
  store i64 %11145, i64* %RSI.i360, align 8
  %11146 = icmp ult i32 %11144, %11143
  %11147 = icmp ult i32 %11144, 1
  %11148 = or i1 %11146, %11147
  %11149 = zext i1 %11148 to i8
  %11150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11149, i8* %11150, align 1
  %11151 = and i32 %11144, 255
  %11152 = call i32 @llvm.ctpop.i32(i32 %11151)
  %11153 = trunc i32 %11152 to i8
  %11154 = and i8 %11153, 1
  %11155 = xor i8 %11154, 1
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11155, i8* %11156, align 1
  %11157 = xor i64 1, %11140
  %11158 = trunc i64 %11157 to i32
  %11159 = xor i32 %11158, %11144
  %11160 = lshr i32 %11159, 4
  %11161 = trunc i32 %11160 to i8
  %11162 = and i8 %11161, 1
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11162, i8* %11163, align 1
  %11164 = icmp eq i32 %11144, 0
  %11165 = zext i1 %11164 to i8
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11165, i8* %11166, align 1
  %11167 = lshr i32 %11144, 31
  %11168 = trunc i32 %11167 to i8
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11168, i8* %11169, align 1
  %11170 = lshr i32 %11143, 31
  %11171 = xor i32 %11167, %11170
  %11172 = add i32 %11171, %11167
  %11173 = icmp eq i32 %11172, 2
  %11174 = zext i1 %11173 to i8
  %11175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11174, i8* %11175, align 1
  store %struct.Memory* %loadMem_40c2f2, %struct.Memory** %MEMORY
  %loadMem_40c2f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 33
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %11178 to i64*
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 9
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %ESI.i357 = bitcast %union.anon* %11181 to i32*
  %11182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11183 = getelementptr inbounds %struct.GPR, %struct.GPR* %11182, i32 0, i32 1
  %11184 = getelementptr inbounds %struct.Reg, %struct.Reg* %11183, i32 0, i32 0
  %RAX.i358 = bitcast %union.anon* %11184 to i64*
  %11185 = load i64, i64* %RAX.i358
  %11186 = mul i64 %11185, 4
  %11187 = add i64 %11186, 8922032
  %11188 = load i32, i32* %ESI.i357
  %11189 = zext i32 %11188 to i64
  %11190 = load i64, i64* %PC.i356
  %11191 = add i64 %11190, 7
  store i64 %11191, i64* %PC.i356
  %11192 = inttoptr i64 %11187 to i32*
  store i32 %11188, i32* %11192
  store %struct.Memory* %loadMem_40c2f5, %struct.Memory** %MEMORY
  %loadMem_40c2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11194 = getelementptr inbounds %struct.GPR, %struct.GPR* %11193, i32 0, i32 33
  %11195 = getelementptr inbounds %struct.Reg, %struct.Reg* %11194, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %11195 to i64*
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11197 = getelementptr inbounds %struct.GPR, %struct.GPR* %11196, i32 0, i32 1
  %11198 = getelementptr inbounds %struct.Reg, %struct.Reg* %11197, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %11198 to i64*
  %11199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11200 = getelementptr inbounds %struct.GPR, %struct.GPR* %11199, i32 0, i32 15
  %11201 = getelementptr inbounds %struct.Reg, %struct.Reg* %11200, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %11201 to i64*
  %11202 = load i64, i64* %RBP.i355
  %11203 = sub i64 %11202, 20
  %11204 = load i64, i64* %PC.i353
  %11205 = add i64 %11204, 4
  store i64 %11205, i64* %PC.i353
  %11206 = inttoptr i64 %11203 to i32*
  %11207 = load i32, i32* %11206
  %11208 = sext i32 %11207 to i64
  store i64 %11208, i64* %RAX.i354, align 8
  store %struct.Memory* %loadMem_40c2fc, %struct.Memory** %MEMORY
  %loadMem_40c300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 33
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %11211 to i64*
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 1
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %RAX.i351 = bitcast %union.anon* %11214 to i64*
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11216 = getelementptr inbounds %struct.GPR, %struct.GPR* %11215, i32 0, i32 9
  %11217 = getelementptr inbounds %struct.Reg, %struct.Reg* %11216, i32 0, i32 0
  %RSI.i352 = bitcast %union.anon* %11217 to i64*
  %11218 = load i64, i64* %RAX.i351
  %11219 = mul i64 %11218, 4
  %11220 = add i64 %11219, 8922032
  %11221 = load i64, i64* %PC.i350
  %11222 = add i64 %11221, 7
  store i64 %11222, i64* %PC.i350
  %11223 = inttoptr i64 %11220 to i32*
  %11224 = load i32, i32* %11223
  %11225 = zext i32 %11224 to i64
  store i64 %11225, i64* %RSI.i352, align 8
  store %struct.Memory* %loadMem_40c300, %struct.Memory** %MEMORY
  %loadMem_40c307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11227 = getelementptr inbounds %struct.GPR, %struct.GPR* %11226, i32 0, i32 33
  %11228 = getelementptr inbounds %struct.Reg, %struct.Reg* %11227, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %11228 to i64*
  %11229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11230 = getelementptr inbounds %struct.GPR, %struct.GPR* %11229, i32 0, i32 9
  %11231 = getelementptr inbounds %struct.Reg, %struct.Reg* %11230, i32 0, i32 0
  %RSI.i349 = bitcast %union.anon* %11231 to i64*
  %11232 = load i64, i64* %RSI.i349
  %11233 = load i64, i64* %PC.i348
  %11234 = add i64 %11233, 3
  store i64 %11234, i64* %PC.i348
  %11235 = trunc i64 %11232 to i32
  %11236 = add i32 1, %11235
  %11237 = zext i32 %11236 to i64
  store i64 %11237, i64* %RSI.i349, align 8
  %11238 = icmp ult i32 %11236, %11235
  %11239 = icmp ult i32 %11236, 1
  %11240 = or i1 %11238, %11239
  %11241 = zext i1 %11240 to i8
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11241, i8* %11242, align 1
  %11243 = and i32 %11236, 255
  %11244 = call i32 @llvm.ctpop.i32(i32 %11243)
  %11245 = trunc i32 %11244 to i8
  %11246 = and i8 %11245, 1
  %11247 = xor i8 %11246, 1
  %11248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11247, i8* %11248, align 1
  %11249 = xor i64 1, %11232
  %11250 = trunc i64 %11249 to i32
  %11251 = xor i32 %11250, %11236
  %11252 = lshr i32 %11251, 4
  %11253 = trunc i32 %11252 to i8
  %11254 = and i8 %11253, 1
  %11255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11254, i8* %11255, align 1
  %11256 = icmp eq i32 %11236, 0
  %11257 = zext i1 %11256 to i8
  %11258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11257, i8* %11258, align 1
  %11259 = lshr i32 %11236, 31
  %11260 = trunc i32 %11259 to i8
  %11261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11260, i8* %11261, align 1
  %11262 = lshr i32 %11235, 31
  %11263 = xor i32 %11259, %11262
  %11264 = add i32 %11263, %11259
  %11265 = icmp eq i32 %11264, 2
  %11266 = zext i1 %11265 to i8
  %11267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11266, i8* %11267, align 1
  store %struct.Memory* %loadMem_40c307, %struct.Memory** %MEMORY
  %loadMem_40c30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11269 = getelementptr inbounds %struct.GPR, %struct.GPR* %11268, i32 0, i32 33
  %11270 = getelementptr inbounds %struct.Reg, %struct.Reg* %11269, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %11270 to i64*
  %11271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11272 = getelementptr inbounds %struct.GPR, %struct.GPR* %11271, i32 0, i32 9
  %11273 = getelementptr inbounds %struct.Reg, %struct.Reg* %11272, i32 0, i32 0
  %ESI.i346 = bitcast %union.anon* %11273 to i32*
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11275 = getelementptr inbounds %struct.GPR, %struct.GPR* %11274, i32 0, i32 1
  %11276 = getelementptr inbounds %struct.Reg, %struct.Reg* %11275, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %11276 to i64*
  %11277 = load i64, i64* %RAX.i347
  %11278 = mul i64 %11277, 4
  %11279 = add i64 %11278, 8922032
  %11280 = load i32, i32* %ESI.i346
  %11281 = zext i32 %11280 to i64
  %11282 = load i64, i64* %PC.i345
  %11283 = add i64 %11282, 7
  store i64 %11283, i64* %PC.i345
  %11284 = inttoptr i64 %11279 to i32*
  store i32 %11280, i32* %11284
  store %struct.Memory* %loadMem_40c30a, %struct.Memory** %MEMORY
  %loadMem_40c311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11286 = getelementptr inbounds %struct.GPR, %struct.GPR* %11285, i32 0, i32 33
  %11287 = getelementptr inbounds %struct.Reg, %struct.Reg* %11286, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %11287 to i64*
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11289 = getelementptr inbounds %struct.GPR, %struct.GPR* %11288, i32 0, i32 9
  %11290 = getelementptr inbounds %struct.Reg, %struct.Reg* %11289, i32 0, i32 0
  %RSI.i344 = bitcast %union.anon* %11290 to i64*
  %11291 = load i64, i64* %PC.i343
  %11292 = add i64 %11291, 7
  store i64 %11292, i64* %PC.i343
  %11293 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %11294 = zext i32 %11293 to i64
  store i64 %11294, i64* %RSI.i344, align 8
  store %struct.Memory* %loadMem_40c311, %struct.Memory** %MEMORY
  %loadMem_40c318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11296 = getelementptr inbounds %struct.GPR, %struct.GPR* %11295, i32 0, i32 33
  %11297 = getelementptr inbounds %struct.Reg, %struct.Reg* %11296, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %11297 to i64*
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 9
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %RSI.i342 = bitcast %union.anon* %11300 to i64*
  %11301 = load i64, i64* %RSI.i342
  %11302 = load i64, i64* %PC.i341
  %11303 = add i64 %11302, 3
  store i64 %11303, i64* %PC.i341
  %11304 = xor i64 1, %11301
  %11305 = trunc i64 %11304 to i32
  %11306 = and i64 %11304, 4294967295
  store i64 %11306, i64* %RSI.i342, align 8
  %11307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11307, align 1
  %11308 = and i32 %11305, 255
  %11309 = call i32 @llvm.ctpop.i32(i32 %11308)
  %11310 = trunc i32 %11309 to i8
  %11311 = and i8 %11310, 1
  %11312 = xor i8 %11311, 1
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11312, i8* %11313, align 1
  %11314 = icmp eq i32 %11305, 0
  %11315 = zext i1 %11314 to i8
  %11316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11315, i8* %11316, align 1
  %11317 = lshr i32 %11305, 31
  %11318 = trunc i32 %11317 to i8
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11318, i8* %11319, align 1
  %11320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11320, align 1
  %11321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11321, align 1
  store %struct.Memory* %loadMem_40c318, %struct.Memory** %MEMORY
  %loadMem_40c31b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 33
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %11324 to i64*
  %11325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11326 = getelementptr inbounds %struct.GPR, %struct.GPR* %11325, i32 0, i32 9
  %11327 = getelementptr inbounds %struct.Reg, %struct.Reg* %11326, i32 0, i32 0
  %ESI.i340 = bitcast %union.anon* %11327 to i32*
  %11328 = load i32, i32* %ESI.i340
  %11329 = zext i32 %11328 to i64
  %11330 = load i64, i64* %PC.i339
  %11331 = add i64 %11330, 7
  store i64 %11331, i64* %PC.i339
  store i32 %11328, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40c31b, %struct.Memory** %MEMORY
  %loadMem_40c322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 33
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %11334 to i64*
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11336 = getelementptr inbounds %struct.GPR, %struct.GPR* %11335, i32 0, i32 9
  %11337 = getelementptr inbounds %struct.Reg, %struct.Reg* %11336, i32 0, i32 0
  %RSI.i338 = bitcast %union.anon* %11337 to i64*
  %11338 = load i64, i64* %PC.i337
  %11339 = add i64 %11338, 7
  store i64 %11339, i64* %PC.i337
  %11340 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %11341 = zext i32 %11340 to i64
  store i64 %11341, i64* %RSI.i338, align 8
  store %struct.Memory* %loadMem_40c322, %struct.Memory** %MEMORY
  %loadMem_40c329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11343 = getelementptr inbounds %struct.GPR, %struct.GPR* %11342, i32 0, i32 33
  %11344 = getelementptr inbounds %struct.Reg, %struct.Reg* %11343, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %11344 to i64*
  %11345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11346 = getelementptr inbounds %struct.GPR, %struct.GPR* %11345, i32 0, i32 9
  %11347 = getelementptr inbounds %struct.Reg, %struct.Reg* %11346, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %11347 to i64*
  %11348 = load i64, i64* %RSI.i
  %11349 = load i64, i64* %PC.i336
  %11350 = add i64 %11349, 3
  store i64 %11350, i64* %PC.i336
  %11351 = trunc i64 %11348 to i32
  %11352 = add i32 1, %11351
  %11353 = zext i32 %11352 to i64
  store i64 %11353, i64* %RSI.i, align 8
  %11354 = icmp ult i32 %11352, %11351
  %11355 = icmp ult i32 %11352, 1
  %11356 = or i1 %11354, %11355
  %11357 = zext i1 %11356 to i8
  %11358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11357, i8* %11358, align 1
  %11359 = and i32 %11352, 255
  %11360 = call i32 @llvm.ctpop.i32(i32 %11359)
  %11361 = trunc i32 %11360 to i8
  %11362 = and i8 %11361, 1
  %11363 = xor i8 %11362, 1
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11363, i8* %11364, align 1
  %11365 = xor i64 1, %11348
  %11366 = trunc i64 %11365 to i32
  %11367 = xor i32 %11366, %11352
  %11368 = lshr i32 %11367, 4
  %11369 = trunc i32 %11368 to i8
  %11370 = and i8 %11369, 1
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11370, i8* %11371, align 1
  %11372 = icmp eq i32 %11352, 0
  %11373 = zext i1 %11372 to i8
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11373, i8* %11374, align 1
  %11375 = lshr i32 %11352, 31
  %11376 = trunc i32 %11375 to i8
  %11377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11376, i8* %11377, align 1
  %11378 = lshr i32 %11351, 31
  %11379 = xor i32 %11375, %11378
  %11380 = add i32 %11379, %11375
  %11381 = icmp eq i32 %11380, 2
  %11382 = zext i1 %11381 to i8
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11382, i8* %11383, align 1
  store %struct.Memory* %loadMem_40c329, %struct.Memory** %MEMORY
  %loadMem_40c32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11385 = getelementptr inbounds %struct.GPR, %struct.GPR* %11384, i32 0, i32 33
  %11386 = getelementptr inbounds %struct.Reg, %struct.Reg* %11385, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %11386 to i64*
  %11387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11388 = getelementptr inbounds %struct.GPR, %struct.GPR* %11387, i32 0, i32 9
  %11389 = getelementptr inbounds %struct.Reg, %struct.Reg* %11388, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %11389 to i32*
  %11390 = load i32, i32* %ESI.i
  %11391 = zext i32 %11390 to i64
  %11392 = load i64, i64* %PC.i335
  %11393 = add i64 %11392, 7
  store i64 %11393, i64* %PC.i335
  store i32 %11390, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c32c, %struct.Memory** %MEMORY
  %loadMem_40c333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11395 = getelementptr inbounds %struct.GPR, %struct.GPR* %11394, i32 0, i32 33
  %11396 = getelementptr inbounds %struct.Reg, %struct.Reg* %11395, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %11396 to i64*
  %11397 = load i64, i64* %PC.i334
  %11398 = add i64 %11397, 1115
  %11399 = load i64, i64* %PC.i334
  %11400 = add i64 %11399, 5
  store i64 %11400, i64* %PC.i334
  %11401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11398, i64* %11401, align 8
  store %struct.Memory* %loadMem_40c333, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c338:                                  ; preds = %block_40c24d, %block_.L_40c23b
  %loadMem_40c338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11403 = getelementptr inbounds %struct.GPR, %struct.GPR* %11402, i32 0, i32 33
  %11404 = getelementptr inbounds %struct.Reg, %struct.Reg* %11403, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %11404 to i64*
  %11405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11406 = getelementptr inbounds %struct.GPR, %struct.GPR* %11405, i32 0, i32 1
  %11407 = getelementptr inbounds %struct.Reg, %struct.Reg* %11406, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %11407 to i64*
  %11408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11409 = getelementptr inbounds %struct.GPR, %struct.GPR* %11408, i32 0, i32 15
  %11410 = getelementptr inbounds %struct.Reg, %struct.Reg* %11409, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %11410 to i64*
  %11411 = load i64, i64* %RBP.i333
  %11412 = sub i64 %11411, 20
  %11413 = load i64, i64* %PC.i331
  %11414 = add i64 %11413, 4
  store i64 %11414, i64* %PC.i331
  %11415 = inttoptr i64 %11412 to i32*
  %11416 = load i32, i32* %11415
  %11417 = sext i32 %11416 to i64
  store i64 %11417, i64* %RAX.i332, align 8
  store %struct.Memory* %loadMem_40c338, %struct.Memory** %MEMORY
  %loadMem_40c33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11419 = getelementptr inbounds %struct.GPR, %struct.GPR* %11418, i32 0, i32 33
  %11420 = getelementptr inbounds %struct.Reg, %struct.Reg* %11419, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %11420 to i64*
  %11421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11422 = getelementptr inbounds %struct.GPR, %struct.GPR* %11421, i32 0, i32 1
  %11423 = getelementptr inbounds %struct.Reg, %struct.Reg* %11422, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %11423 to i64*
  %11424 = load i64, i64* %RAX.i330
  %11425 = mul i64 %11424, 4
  %11426 = add i64 %11425, 8807744
  %11427 = load i64, i64* %PC.i329
  %11428 = add i64 %11427, 8
  store i64 %11428, i64* %PC.i329
  %11429 = inttoptr i64 %11426 to i32*
  %11430 = load i32, i32* %11429
  %11431 = sub i32 %11430, 5
  %11432 = icmp ult i32 %11430, 5
  %11433 = zext i1 %11432 to i8
  %11434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11433, i8* %11434, align 1
  %11435 = and i32 %11431, 255
  %11436 = call i32 @llvm.ctpop.i32(i32 %11435)
  %11437 = trunc i32 %11436 to i8
  %11438 = and i8 %11437, 1
  %11439 = xor i8 %11438, 1
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11439, i8* %11440, align 1
  %11441 = xor i32 %11430, 5
  %11442 = xor i32 %11441, %11431
  %11443 = lshr i32 %11442, 4
  %11444 = trunc i32 %11443 to i8
  %11445 = and i8 %11444, 1
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11445, i8* %11446, align 1
  %11447 = icmp eq i32 %11431, 0
  %11448 = zext i1 %11447 to i8
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11448, i8* %11449, align 1
  %11450 = lshr i32 %11431, 31
  %11451 = trunc i32 %11450 to i8
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11451, i8* %11452, align 1
  %11453 = lshr i32 %11430, 31
  %11454 = xor i32 %11450, %11453
  %11455 = add i32 %11454, %11453
  %11456 = icmp eq i32 %11455, 2
  %11457 = zext i1 %11456 to i8
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11457, i8* %11458, align 1
  store %struct.Memory* %loadMem_40c33c, %struct.Memory** %MEMORY
  %loadMem_40c344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11460 = getelementptr inbounds %struct.GPR, %struct.GPR* %11459, i32 0, i32 33
  %11461 = getelementptr inbounds %struct.Reg, %struct.Reg* %11460, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %11461 to i64*
  %11462 = load i64, i64* %PC.i328
  %11463 = add i64 %11462, 552
  %11464 = load i64, i64* %PC.i328
  %11465 = add i64 %11464, 6
  %11466 = load i64, i64* %PC.i328
  %11467 = add i64 %11466, 6
  store i64 %11467, i64* %PC.i328
  %11468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11469 = load i8, i8* %11468, align 1
  %11470 = icmp eq i8 %11469, 0
  %11471 = zext i1 %11470 to i8
  store i8 %11471, i8* %BRANCH_TAKEN, align 1
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11473 = select i1 %11470, i64 %11463, i64 %11465
  store i64 %11473, i64* %11472, align 8
  store %struct.Memory* %loadMem_40c344, %struct.Memory** %MEMORY
  %loadBr_40c344 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c344 = icmp eq i8 %loadBr_40c344, 1
  br i1 %cmpBr_40c344, label %block_.L_40c56c, label %block_40c34a

block_40c34a:                                     ; preds = %block_.L_40c338
  %loadMem_40c34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 33
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %11476 to i64*
  %11477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11478 = getelementptr inbounds %struct.GPR, %struct.GPR* %11477, i32 0, i32 1
  %11479 = getelementptr inbounds %struct.Reg, %struct.Reg* %11478, i32 0, i32 0
  %RAX.i326 = bitcast %union.anon* %11479 to i64*
  %11480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11481 = getelementptr inbounds %struct.GPR, %struct.GPR* %11480, i32 0, i32 15
  %11482 = getelementptr inbounds %struct.Reg, %struct.Reg* %11481, i32 0, i32 0
  %RBP.i327 = bitcast %union.anon* %11482 to i64*
  %11483 = load i64, i64* %RBP.i327
  %11484 = sub i64 %11483, 24
  %11485 = load i64, i64* %PC.i325
  %11486 = add i64 %11485, 3
  store i64 %11486, i64* %PC.i325
  %11487 = inttoptr i64 %11484 to i32*
  %11488 = load i32, i32* %11487
  %11489 = zext i32 %11488 to i64
  store i64 %11489, i64* %RAX.i326, align 8
  store %struct.Memory* %loadMem_40c34a, %struct.Memory** %MEMORY
  %loadMem_40c34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11491 = getelementptr inbounds %struct.GPR, %struct.GPR* %11490, i32 0, i32 33
  %11492 = getelementptr inbounds %struct.Reg, %struct.Reg* %11491, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %11492 to i64*
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11494 = getelementptr inbounds %struct.GPR, %struct.GPR* %11493, i32 0, i32 1
  %11495 = getelementptr inbounds %struct.Reg, %struct.Reg* %11494, i32 0, i32 0
  %EAX.i324 = bitcast %union.anon* %11495 to i32*
  %11496 = load i32, i32* %EAX.i324
  %11497 = zext i32 %11496 to i64
  %11498 = load i64, i64* %PC.i323
  %11499 = add i64 %11498, 7
  store i64 %11499, i64* %PC.i323
  store i32 %11496, i32* bitcast (%G_0x86bd7c_type* @G_0x86bd7c to i32*)
  store %struct.Memory* %loadMem_40c34d, %struct.Memory** %MEMORY
  %loadMem_40c354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11501 = getelementptr inbounds %struct.GPR, %struct.GPR* %11500, i32 0, i32 33
  %11502 = getelementptr inbounds %struct.Reg, %struct.Reg* %11501, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %11502 to i64*
  %11503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11504 = getelementptr inbounds %struct.GPR, %struct.GPR* %11503, i32 0, i32 5
  %11505 = getelementptr inbounds %struct.Reg, %struct.Reg* %11504, i32 0, i32 0
  %RCX.i321 = bitcast %union.anon* %11505 to i64*
  %11506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11507 = getelementptr inbounds %struct.GPR, %struct.GPR* %11506, i32 0, i32 15
  %11508 = getelementptr inbounds %struct.Reg, %struct.Reg* %11507, i32 0, i32 0
  %RBP.i322 = bitcast %union.anon* %11508 to i64*
  %11509 = load i64, i64* %RBP.i322
  %11510 = sub i64 %11509, 24
  %11511 = load i64, i64* %PC.i320
  %11512 = add i64 %11511, 4
  store i64 %11512, i64* %PC.i320
  %11513 = inttoptr i64 %11510 to i32*
  %11514 = load i32, i32* %11513
  %11515 = sext i32 %11514 to i64
  store i64 %11515, i64* %RCX.i321, align 8
  store %struct.Memory* %loadMem_40c354, %struct.Memory** %MEMORY
  %loadMem_40c358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11517 = getelementptr inbounds %struct.GPR, %struct.GPR* %11516, i32 0, i32 33
  %11518 = getelementptr inbounds %struct.Reg, %struct.Reg* %11517, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %11518 to i64*
  %11519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11520 = getelementptr inbounds %struct.GPR, %struct.GPR* %11519, i32 0, i32 5
  %11521 = getelementptr inbounds %struct.Reg, %struct.Reg* %11520, i32 0, i32 0
  %RCX.i319 = bitcast %union.anon* %11521 to i64*
  %11522 = load i64, i64* %RCX.i319
  %11523 = mul i64 %11522, 4
  %11524 = add i64 %11523, 8807744
  %11525 = load i64, i64* %PC.i318
  %11526 = add i64 %11525, 11
  store i64 %11526, i64* %PC.i318
  %11527 = inttoptr i64 %11524 to i32*
  store i32 5, i32* %11527
  store %struct.Memory* %loadMem_40c358, %struct.Memory** %MEMORY
  %loadMem_40c363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11529 = getelementptr inbounds %struct.GPR, %struct.GPR* %11528, i32 0, i32 33
  %11530 = getelementptr inbounds %struct.Reg, %struct.Reg* %11529, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %11530 to i64*
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11532 = getelementptr inbounds %struct.GPR, %struct.GPR* %11531, i32 0, i32 5
  %11533 = getelementptr inbounds %struct.Reg, %struct.Reg* %11532, i32 0, i32 0
  %RCX.i316 = bitcast %union.anon* %11533 to i64*
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11535 = getelementptr inbounds %struct.GPR, %struct.GPR* %11534, i32 0, i32 15
  %11536 = getelementptr inbounds %struct.Reg, %struct.Reg* %11535, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %11536 to i64*
  %11537 = load i64, i64* %RBP.i317
  %11538 = sub i64 %11537, 20
  %11539 = load i64, i64* %PC.i315
  %11540 = add i64 %11539, 4
  store i64 %11540, i64* %PC.i315
  %11541 = inttoptr i64 %11538 to i32*
  %11542 = load i32, i32* %11541
  %11543 = sext i32 %11542 to i64
  store i64 %11543, i64* %RCX.i316, align 8
  store %struct.Memory* %loadMem_40c363, %struct.Memory** %MEMORY
  %loadMem_40c367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11545 = getelementptr inbounds %struct.GPR, %struct.GPR* %11544, i32 0, i32 33
  %11546 = getelementptr inbounds %struct.Reg, %struct.Reg* %11545, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %11546 to i64*
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11548 = getelementptr inbounds %struct.GPR, %struct.GPR* %11547, i32 0, i32 5
  %11549 = getelementptr inbounds %struct.Reg, %struct.Reg* %11548, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %11549 to i64*
  %11550 = load i64, i64* %RCX.i314
  %11551 = mul i64 %11550, 4
  %11552 = add i64 %11551, 8807744
  %11553 = load i64, i64* %PC.i313
  %11554 = add i64 %11553, 11
  store i64 %11554, i64* %PC.i313
  %11555 = inttoptr i64 %11552 to i32*
  store i32 13, i32* %11555
  store %struct.Memory* %loadMem_40c367, %struct.Memory** %MEMORY
  %loadMem_40c372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11557 = getelementptr inbounds %struct.GPR, %struct.GPR* %11556, i32 0, i32 33
  %11558 = getelementptr inbounds %struct.Reg, %struct.Reg* %11557, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %11558 to i64*
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11560 = getelementptr inbounds %struct.GPR, %struct.GPR* %11559, i32 0, i32 5
  %11561 = getelementptr inbounds %struct.Reg, %struct.Reg* %11560, i32 0, i32 0
  %RCX.i311 = bitcast %union.anon* %11561 to i64*
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11563 = getelementptr inbounds %struct.GPR, %struct.GPR* %11562, i32 0, i32 15
  %11564 = getelementptr inbounds %struct.Reg, %struct.Reg* %11563, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %11564 to i64*
  %11565 = load i64, i64* %RBP.i312
  %11566 = sub i64 %11565, 24
  %11567 = load i64, i64* %PC.i310
  %11568 = add i64 %11567, 4
  store i64 %11568, i64* %PC.i310
  %11569 = inttoptr i64 %11566 to i32*
  %11570 = load i32, i32* %11569
  %11571 = sext i32 %11570 to i64
  store i64 %11571, i64* %RCX.i311, align 8
  store %struct.Memory* %loadMem_40c372, %struct.Memory** %MEMORY
  %loadMem_40c376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11573 = getelementptr inbounds %struct.GPR, %struct.GPR* %11572, i32 0, i32 33
  %11574 = getelementptr inbounds %struct.Reg, %struct.Reg* %11573, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %11574 to i64*
  %11575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11576 = getelementptr inbounds %struct.GPR, %struct.GPR* %11575, i32 0, i32 1
  %11577 = getelementptr inbounds %struct.Reg, %struct.Reg* %11576, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %11577 to i64*
  %11578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11579 = getelementptr inbounds %struct.GPR, %struct.GPR* %11578, i32 0, i32 5
  %11580 = getelementptr inbounds %struct.Reg, %struct.Reg* %11579, i32 0, i32 0
  %RCX.i309 = bitcast %union.anon* %11580 to i64*
  %11581 = load i64, i64* %RCX.i309
  %11582 = mul i64 %11581, 4
  %11583 = add i64 %11582, 8922032
  %11584 = load i64, i64* %PC.i307
  %11585 = add i64 %11584, 7
  store i64 %11585, i64* %PC.i307
  %11586 = inttoptr i64 %11583 to i32*
  %11587 = load i32, i32* %11586
  %11588 = zext i32 %11587 to i64
  store i64 %11588, i64* %RAX.i308, align 8
  store %struct.Memory* %loadMem_40c376, %struct.Memory** %MEMORY
  %loadMem_40c37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11590 = getelementptr inbounds %struct.GPR, %struct.GPR* %11589, i32 0, i32 33
  %11591 = getelementptr inbounds %struct.Reg, %struct.Reg* %11590, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %11591 to i64*
  %11592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11593 = getelementptr inbounds %struct.GPR, %struct.GPR* %11592, i32 0, i32 1
  %11594 = getelementptr inbounds %struct.Reg, %struct.Reg* %11593, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %11594 to i64*
  %11595 = load i64, i64* %RAX.i306
  %11596 = load i64, i64* %PC.i305
  %11597 = add i64 %11596, 3
  store i64 %11597, i64* %PC.i305
  %11598 = trunc i64 %11595 to i32
  %11599 = add i32 1, %11598
  %11600 = zext i32 %11599 to i64
  store i64 %11600, i64* %RAX.i306, align 8
  %11601 = icmp ult i32 %11599, %11598
  %11602 = icmp ult i32 %11599, 1
  %11603 = or i1 %11601, %11602
  %11604 = zext i1 %11603 to i8
  %11605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11604, i8* %11605, align 1
  %11606 = and i32 %11599, 255
  %11607 = call i32 @llvm.ctpop.i32(i32 %11606)
  %11608 = trunc i32 %11607 to i8
  %11609 = and i8 %11608, 1
  %11610 = xor i8 %11609, 1
  %11611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11610, i8* %11611, align 1
  %11612 = xor i64 1, %11595
  %11613 = trunc i64 %11612 to i32
  %11614 = xor i32 %11613, %11599
  %11615 = lshr i32 %11614, 4
  %11616 = trunc i32 %11615 to i8
  %11617 = and i8 %11616, 1
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11617, i8* %11618, align 1
  %11619 = icmp eq i32 %11599, 0
  %11620 = zext i1 %11619 to i8
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11620, i8* %11621, align 1
  %11622 = lshr i32 %11599, 31
  %11623 = trunc i32 %11622 to i8
  %11624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11623, i8* %11624, align 1
  %11625 = lshr i32 %11598, 31
  %11626 = xor i32 %11622, %11625
  %11627 = add i32 %11626, %11622
  %11628 = icmp eq i32 %11627, 2
  %11629 = zext i1 %11628 to i8
  %11630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11629, i8* %11630, align 1
  store %struct.Memory* %loadMem_40c37d, %struct.Memory** %MEMORY
  %loadMem_40c380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11632 = getelementptr inbounds %struct.GPR, %struct.GPR* %11631, i32 0, i32 33
  %11633 = getelementptr inbounds %struct.Reg, %struct.Reg* %11632, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %11633 to i64*
  %11634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11635 = getelementptr inbounds %struct.GPR, %struct.GPR* %11634, i32 0, i32 1
  %11636 = getelementptr inbounds %struct.Reg, %struct.Reg* %11635, i32 0, i32 0
  %EAX.i303 = bitcast %union.anon* %11636 to i32*
  %11637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11638 = getelementptr inbounds %struct.GPR, %struct.GPR* %11637, i32 0, i32 5
  %11639 = getelementptr inbounds %struct.Reg, %struct.Reg* %11638, i32 0, i32 0
  %RCX.i304 = bitcast %union.anon* %11639 to i64*
  %11640 = load i64, i64* %RCX.i304
  %11641 = mul i64 %11640, 4
  %11642 = add i64 %11641, 8922032
  %11643 = load i32, i32* %EAX.i303
  %11644 = zext i32 %11643 to i64
  %11645 = load i64, i64* %PC.i302
  %11646 = add i64 %11645, 7
  store i64 %11646, i64* %PC.i302
  %11647 = inttoptr i64 %11642 to i32*
  store i32 %11643, i32* %11647
  store %struct.Memory* %loadMem_40c380, %struct.Memory** %MEMORY
  %loadMem_40c387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11649 = getelementptr inbounds %struct.GPR, %struct.GPR* %11648, i32 0, i32 33
  %11650 = getelementptr inbounds %struct.Reg, %struct.Reg* %11649, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %11650 to i64*
  %11651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11652 = getelementptr inbounds %struct.GPR, %struct.GPR* %11651, i32 0, i32 5
  %11653 = getelementptr inbounds %struct.Reg, %struct.Reg* %11652, i32 0, i32 0
  %RCX.i300 = bitcast %union.anon* %11653 to i64*
  %11654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11655 = getelementptr inbounds %struct.GPR, %struct.GPR* %11654, i32 0, i32 15
  %11656 = getelementptr inbounds %struct.Reg, %struct.Reg* %11655, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %11656 to i64*
  %11657 = load i64, i64* %RBP.i301
  %11658 = sub i64 %11657, 20
  %11659 = load i64, i64* %PC.i299
  %11660 = add i64 %11659, 4
  store i64 %11660, i64* %PC.i299
  %11661 = inttoptr i64 %11658 to i32*
  %11662 = load i32, i32* %11661
  %11663 = sext i32 %11662 to i64
  store i64 %11663, i64* %RCX.i300, align 8
  store %struct.Memory* %loadMem_40c387, %struct.Memory** %MEMORY
  %loadMem_40c38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11665 = getelementptr inbounds %struct.GPR, %struct.GPR* %11664, i32 0, i32 33
  %11666 = getelementptr inbounds %struct.Reg, %struct.Reg* %11665, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %11666 to i64*
  %11667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11668 = getelementptr inbounds %struct.GPR, %struct.GPR* %11667, i32 0, i32 1
  %11669 = getelementptr inbounds %struct.Reg, %struct.Reg* %11668, i32 0, i32 0
  %RAX.i297 = bitcast %union.anon* %11669 to i64*
  %11670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11671 = getelementptr inbounds %struct.GPR, %struct.GPR* %11670, i32 0, i32 5
  %11672 = getelementptr inbounds %struct.Reg, %struct.Reg* %11671, i32 0, i32 0
  %RCX.i298 = bitcast %union.anon* %11672 to i64*
  %11673 = load i64, i64* %RCX.i298
  %11674 = mul i64 %11673, 4
  %11675 = add i64 %11674, 8922032
  %11676 = load i64, i64* %PC.i296
  %11677 = add i64 %11676, 7
  store i64 %11677, i64* %PC.i296
  %11678 = inttoptr i64 %11675 to i32*
  %11679 = load i32, i32* %11678
  %11680 = zext i32 %11679 to i64
  store i64 %11680, i64* %RAX.i297, align 8
  store %struct.Memory* %loadMem_40c38b, %struct.Memory** %MEMORY
  %loadMem_40c392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11682 = getelementptr inbounds %struct.GPR, %struct.GPR* %11681, i32 0, i32 33
  %11683 = getelementptr inbounds %struct.Reg, %struct.Reg* %11682, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %11683 to i64*
  %11684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11685 = getelementptr inbounds %struct.GPR, %struct.GPR* %11684, i32 0, i32 1
  %11686 = getelementptr inbounds %struct.Reg, %struct.Reg* %11685, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %11686 to i64*
  %11687 = load i64, i64* %RAX.i295
  %11688 = load i64, i64* %PC.i294
  %11689 = add i64 %11688, 3
  store i64 %11689, i64* %PC.i294
  %11690 = trunc i64 %11687 to i32
  %11691 = add i32 1, %11690
  %11692 = zext i32 %11691 to i64
  store i64 %11692, i64* %RAX.i295, align 8
  %11693 = icmp ult i32 %11691, %11690
  %11694 = icmp ult i32 %11691, 1
  %11695 = or i1 %11693, %11694
  %11696 = zext i1 %11695 to i8
  %11697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11696, i8* %11697, align 1
  %11698 = and i32 %11691, 255
  %11699 = call i32 @llvm.ctpop.i32(i32 %11698)
  %11700 = trunc i32 %11699 to i8
  %11701 = and i8 %11700, 1
  %11702 = xor i8 %11701, 1
  %11703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11702, i8* %11703, align 1
  %11704 = xor i64 1, %11687
  %11705 = trunc i64 %11704 to i32
  %11706 = xor i32 %11705, %11691
  %11707 = lshr i32 %11706, 4
  %11708 = trunc i32 %11707 to i8
  %11709 = and i8 %11708, 1
  %11710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11709, i8* %11710, align 1
  %11711 = icmp eq i32 %11691, 0
  %11712 = zext i1 %11711 to i8
  %11713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11712, i8* %11713, align 1
  %11714 = lshr i32 %11691, 31
  %11715 = trunc i32 %11714 to i8
  %11716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11715, i8* %11716, align 1
  %11717 = lshr i32 %11690, 31
  %11718 = xor i32 %11714, %11717
  %11719 = add i32 %11718, %11714
  %11720 = icmp eq i32 %11719, 2
  %11721 = zext i1 %11720 to i8
  %11722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11721, i8* %11722, align 1
  store %struct.Memory* %loadMem_40c392, %struct.Memory** %MEMORY
  %loadMem_40c395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11724 = getelementptr inbounds %struct.GPR, %struct.GPR* %11723, i32 0, i32 33
  %11725 = getelementptr inbounds %struct.Reg, %struct.Reg* %11724, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %11725 to i64*
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11727 = getelementptr inbounds %struct.GPR, %struct.GPR* %11726, i32 0, i32 1
  %11728 = getelementptr inbounds %struct.Reg, %struct.Reg* %11727, i32 0, i32 0
  %EAX.i292 = bitcast %union.anon* %11728 to i32*
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11730 = getelementptr inbounds %struct.GPR, %struct.GPR* %11729, i32 0, i32 5
  %11731 = getelementptr inbounds %struct.Reg, %struct.Reg* %11730, i32 0, i32 0
  %RCX.i293 = bitcast %union.anon* %11731 to i64*
  %11732 = load i64, i64* %RCX.i293
  %11733 = mul i64 %11732, 4
  %11734 = add i64 %11733, 8922032
  %11735 = load i32, i32* %EAX.i292
  %11736 = zext i32 %11735 to i64
  %11737 = load i64, i64* %PC.i291
  %11738 = add i64 %11737, 7
  store i64 %11738, i64* %PC.i291
  %11739 = inttoptr i64 %11734 to i32*
  store i32 %11735, i32* %11739
  store %struct.Memory* %loadMem_40c395, %struct.Memory** %MEMORY
  %loadMem_40c39c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11741 = getelementptr inbounds %struct.GPR, %struct.GPR* %11740, i32 0, i32 33
  %11742 = getelementptr inbounds %struct.Reg, %struct.Reg* %11741, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %11742 to i64*
  %11743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11744 = getelementptr inbounds %struct.GPR, %struct.GPR* %11743, i32 0, i32 1
  %11745 = getelementptr inbounds %struct.Reg, %struct.Reg* %11744, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %11745 to i64*
  %11746 = load i64, i64* %PC.i289
  %11747 = add i64 %11746, 7
  store i64 %11747, i64* %PC.i289
  %11748 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %11749 = zext i32 %11748 to i64
  store i64 %11749, i64* %RAX.i290, align 8
  store %struct.Memory* %loadMem_40c39c, %struct.Memory** %MEMORY
  %loadMem_40c3a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 33
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %11752 to i64*
  %11753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11754 = getelementptr inbounds %struct.GPR, %struct.GPR* %11753, i32 0, i32 1
  %11755 = getelementptr inbounds %struct.Reg, %struct.Reg* %11754, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %11755 to i64*
  %11756 = load i64, i64* %RAX.i288
  %11757 = load i64, i64* %PC.i287
  %11758 = add i64 %11757, 3
  store i64 %11758, i64* %PC.i287
  %11759 = xor i64 1, %11756
  %11760 = trunc i64 %11759 to i32
  %11761 = and i64 %11759, 4294967295
  store i64 %11761, i64* %RAX.i288, align 8
  %11762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11762, align 1
  %11763 = and i32 %11760, 255
  %11764 = call i32 @llvm.ctpop.i32(i32 %11763)
  %11765 = trunc i32 %11764 to i8
  %11766 = and i8 %11765, 1
  %11767 = xor i8 %11766, 1
  %11768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11767, i8* %11768, align 1
  %11769 = icmp eq i32 %11760, 0
  %11770 = zext i1 %11769 to i8
  %11771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11770, i8* %11771, align 1
  %11772 = lshr i32 %11760, 31
  %11773 = trunc i32 %11772 to i8
  %11774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11773, i8* %11774, align 1
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11775, align 1
  %11776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11776, align 1
  store %struct.Memory* %loadMem_40c3a3, %struct.Memory** %MEMORY
  %loadMem_40c3a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11778 = getelementptr inbounds %struct.GPR, %struct.GPR* %11777, i32 0, i32 33
  %11779 = getelementptr inbounds %struct.Reg, %struct.Reg* %11778, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %11779 to i64*
  %11780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11781 = getelementptr inbounds %struct.GPR, %struct.GPR* %11780, i32 0, i32 1
  %11782 = getelementptr inbounds %struct.Reg, %struct.Reg* %11781, i32 0, i32 0
  %EAX.i286 = bitcast %union.anon* %11782 to i32*
  %11783 = load i32, i32* %EAX.i286
  %11784 = zext i32 %11783 to i64
  %11785 = load i64, i64* %PC.i285
  %11786 = add i64 %11785, 7
  store i64 %11786, i64* %PC.i285
  store i32 %11783, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40c3a6, %struct.Memory** %MEMORY
  %loadMem_40c3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %11787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11788 = getelementptr inbounds %struct.GPR, %struct.GPR* %11787, i32 0, i32 33
  %11789 = getelementptr inbounds %struct.Reg, %struct.Reg* %11788, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %11789 to i64*
  %11790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11791 = getelementptr inbounds %struct.GPR, %struct.GPR* %11790, i32 0, i32 5
  %11792 = getelementptr inbounds %struct.Reg, %struct.Reg* %11791, i32 0, i32 0
  %RCX.i283 = bitcast %union.anon* %11792 to i64*
  %11793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11794 = getelementptr inbounds %struct.GPR, %struct.GPR* %11793, i32 0, i32 15
  %11795 = getelementptr inbounds %struct.Reg, %struct.Reg* %11794, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %11795 to i64*
  %11796 = load i64, i64* %RBP.i284
  %11797 = sub i64 %11796, 20
  %11798 = load i64, i64* %PC.i282
  %11799 = add i64 %11798, 4
  store i64 %11799, i64* %PC.i282
  %11800 = inttoptr i64 %11797 to i32*
  %11801 = load i32, i32* %11800
  %11802 = sext i32 %11801 to i64
  store i64 %11802, i64* %RCX.i283, align 8
  store %struct.Memory* %loadMem_40c3ad, %struct.Memory** %MEMORY
  %loadMem_40c3b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11804 = getelementptr inbounds %struct.GPR, %struct.GPR* %11803, i32 0, i32 33
  %11805 = getelementptr inbounds %struct.Reg, %struct.Reg* %11804, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %11805 to i64*
  %11806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11807 = getelementptr inbounds %struct.GPR, %struct.GPR* %11806, i32 0, i32 1
  %11808 = getelementptr inbounds %struct.Reg, %struct.Reg* %11807, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %11808 to i64*
  %11809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11810 = getelementptr inbounds %struct.GPR, %struct.GPR* %11809, i32 0, i32 5
  %11811 = getelementptr inbounds %struct.Reg, %struct.Reg* %11810, i32 0, i32 0
  %RCX.i281 = bitcast %union.anon* %11811 to i64*
  %11812 = load i64, i64* %RCX.i281
  %11813 = mul i64 %11812, 4
  %11814 = add i64 %11813, 9049536
  %11815 = load i64, i64* %PC.i279
  %11816 = add i64 %11815, 7
  store i64 %11816, i64* %PC.i279
  %11817 = inttoptr i64 %11814 to i32*
  %11818 = load i32, i32* %11817
  %11819 = zext i32 %11818 to i64
  store i64 %11819, i64* %RAX.i280, align 8
  store %struct.Memory* %loadMem_40c3b1, %struct.Memory** %MEMORY
  %loadMem_40c3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 33
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %11822 to i64*
  %11823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11824 = getelementptr inbounds %struct.GPR, %struct.GPR* %11823, i32 0, i32 1
  %11825 = getelementptr inbounds %struct.Reg, %struct.Reg* %11824, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %11825 to i64*
  %11826 = load i64, i64* %RAX.i278
  %11827 = load i64, i64* %PC.i277
  %11828 = add i64 %11827, 7
  store i64 %11828, i64* %PC.i277
  %11829 = trunc i64 %11826 to i32
  %11830 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %11831 = xor i32 %11830, %11829
  %11832 = zext i32 %11831 to i64
  store i64 %11832, i64* %RAX.i278, align 8
  %11833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11833, align 1
  %11834 = and i32 %11831, 255
  %11835 = call i32 @llvm.ctpop.i32(i32 %11834)
  %11836 = trunc i32 %11835 to i8
  %11837 = and i8 %11836, 1
  %11838 = xor i8 %11837, 1
  %11839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11838, i8* %11839, align 1
  %11840 = icmp eq i32 %11831, 0
  %11841 = zext i1 %11840 to i8
  %11842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11841, i8* %11842, align 1
  %11843 = lshr i32 %11831, 31
  %11844 = trunc i32 %11843 to i8
  %11845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11844, i8* %11845, align 1
  %11846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11846, align 1
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11847, align 1
  store %struct.Memory* %loadMem_40c3b8, %struct.Memory** %MEMORY
  %loadMem_40c3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11849 = getelementptr inbounds %struct.GPR, %struct.GPR* %11848, i32 0, i32 33
  %11850 = getelementptr inbounds %struct.Reg, %struct.Reg* %11849, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %11850 to i64*
  %11851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11852 = getelementptr inbounds %struct.GPR, %struct.GPR* %11851, i32 0, i32 1
  %11853 = getelementptr inbounds %struct.Reg, %struct.Reg* %11852, i32 0, i32 0
  %EAX.i276 = bitcast %union.anon* %11853 to i32*
  %11854 = load i32, i32* %EAX.i276
  %11855 = zext i32 %11854 to i64
  %11856 = load i64, i64* %PC.i275
  %11857 = add i64 %11856, 7
  store i64 %11857, i64* %PC.i275
  store i32 %11854, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c3bf, %struct.Memory** %MEMORY
  %loadMem_40c3c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11859 = getelementptr inbounds %struct.GPR, %struct.GPR* %11858, i32 0, i32 33
  %11860 = getelementptr inbounds %struct.Reg, %struct.Reg* %11859, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %11860 to i64*
  %11861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11862 = getelementptr inbounds %struct.GPR, %struct.GPR* %11861, i32 0, i32 5
  %11863 = getelementptr inbounds %struct.Reg, %struct.Reg* %11862, i32 0, i32 0
  %RCX.i273 = bitcast %union.anon* %11863 to i64*
  %11864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11865 = getelementptr inbounds %struct.GPR, %struct.GPR* %11864, i32 0, i32 15
  %11866 = getelementptr inbounds %struct.Reg, %struct.Reg* %11865, i32 0, i32 0
  %RBP.i274 = bitcast %union.anon* %11866 to i64*
  %11867 = load i64, i64* %RBP.i274
  %11868 = sub i64 %11867, 24
  %11869 = load i64, i64* %PC.i272
  %11870 = add i64 %11869, 4
  store i64 %11870, i64* %PC.i272
  %11871 = inttoptr i64 %11868 to i32*
  %11872 = load i32, i32* %11871
  %11873 = sext i32 %11872 to i64
  store i64 %11873, i64* %RCX.i273, align 8
  store %struct.Memory* %loadMem_40c3c6, %struct.Memory** %MEMORY
  %loadMem_40c3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %11874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11875 = getelementptr inbounds %struct.GPR, %struct.GPR* %11874, i32 0, i32 33
  %11876 = getelementptr inbounds %struct.Reg, %struct.Reg* %11875, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %11876 to i64*
  %11877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11878 = getelementptr inbounds %struct.GPR, %struct.GPR* %11877, i32 0, i32 1
  %11879 = getelementptr inbounds %struct.Reg, %struct.Reg* %11878, i32 0, i32 0
  %RAX.i270 = bitcast %union.anon* %11879 to i64*
  %11880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11881 = getelementptr inbounds %struct.GPR, %struct.GPR* %11880, i32 0, i32 5
  %11882 = getelementptr inbounds %struct.Reg, %struct.Reg* %11881, i32 0, i32 0
  %RCX.i271 = bitcast %union.anon* %11882 to i64*
  %11883 = load i64, i64* %RCX.i271
  %11884 = mul i64 %11883, 4
  %11885 = add i64 %11884, 9049536
  %11886 = load i64, i64* %PC.i269
  %11887 = add i64 %11886, 7
  store i64 %11887, i64* %PC.i269
  %11888 = inttoptr i64 %11885 to i32*
  %11889 = load i32, i32* %11888
  %11890 = zext i32 %11889 to i64
  store i64 %11890, i64* %RAX.i270, align 8
  store %struct.Memory* %loadMem_40c3ca, %struct.Memory** %MEMORY
  %loadMem_40c3d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11892 = getelementptr inbounds %struct.GPR, %struct.GPR* %11891, i32 0, i32 33
  %11893 = getelementptr inbounds %struct.Reg, %struct.Reg* %11892, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %11893 to i64*
  %11894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11895 = getelementptr inbounds %struct.GPR, %struct.GPR* %11894, i32 0, i32 1
  %11896 = getelementptr inbounds %struct.Reg, %struct.Reg* %11895, i32 0, i32 0
  %RAX.i268 = bitcast %union.anon* %11896 to i64*
  %11897 = load i64, i64* %RAX.i268
  %11898 = load i64, i64* %PC.i267
  %11899 = add i64 %11898, 7
  store i64 %11899, i64* %PC.i267
  %11900 = trunc i64 %11897 to i32
  %11901 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %11902 = xor i32 %11901, %11900
  %11903 = zext i32 %11902 to i64
  store i64 %11903, i64* %RAX.i268, align 8
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11904, align 1
  %11905 = and i32 %11902, 255
  %11906 = call i32 @llvm.ctpop.i32(i32 %11905)
  %11907 = trunc i32 %11906 to i8
  %11908 = and i8 %11907, 1
  %11909 = xor i8 %11908, 1
  %11910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11909, i8* %11910, align 1
  %11911 = icmp eq i32 %11902, 0
  %11912 = zext i1 %11911 to i8
  %11913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11912, i8* %11913, align 1
  %11914 = lshr i32 %11902, 31
  %11915 = trunc i32 %11914 to i8
  %11916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11915, i8* %11916, align 1
  %11917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11917, align 1
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11918, align 1
  store %struct.Memory* %loadMem_40c3d1, %struct.Memory** %MEMORY
  %loadMem_40c3d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11920 = getelementptr inbounds %struct.GPR, %struct.GPR* %11919, i32 0, i32 33
  %11921 = getelementptr inbounds %struct.Reg, %struct.Reg* %11920, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %11921 to i64*
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11923 = getelementptr inbounds %struct.GPR, %struct.GPR* %11922, i32 0, i32 1
  %11924 = getelementptr inbounds %struct.Reg, %struct.Reg* %11923, i32 0, i32 0
  %EAX.i266 = bitcast %union.anon* %11924 to i32*
  %11925 = load i32, i32* %EAX.i266
  %11926 = zext i32 %11925 to i64
  %11927 = load i64, i64* %PC.i265
  %11928 = add i64 %11927, 7
  store i64 %11928, i64* %PC.i265
  store i32 %11925, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c3d8, %struct.Memory** %MEMORY
  %loadMem_40c3df = load %struct.Memory*, %struct.Memory** %MEMORY
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 33
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %11931 to i64*
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11933 = getelementptr inbounds %struct.GPR, %struct.GPR* %11932, i32 0, i32 15
  %11934 = getelementptr inbounds %struct.Reg, %struct.Reg* %11933, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %11934 to i64*
  %11935 = load i64, i64* %RBP.i264
  %11936 = sub i64 %11935, 36
  %11937 = load i64, i64* %PC.i263
  %11938 = add i64 %11937, 4
  store i64 %11938, i64* %PC.i263
  %11939 = inttoptr i64 %11936 to i32*
  %11940 = load i32, i32* %11939
  %11941 = sub i32 %11940, 1
  %11942 = icmp ult i32 %11940, 1
  %11943 = zext i1 %11942 to i8
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11943, i8* %11944, align 1
  %11945 = and i32 %11941, 255
  %11946 = call i32 @llvm.ctpop.i32(i32 %11945)
  %11947 = trunc i32 %11946 to i8
  %11948 = and i8 %11947, 1
  %11949 = xor i8 %11948, 1
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11949, i8* %11950, align 1
  %11951 = xor i32 %11940, 1
  %11952 = xor i32 %11951, %11941
  %11953 = lshr i32 %11952, 4
  %11954 = trunc i32 %11953 to i8
  %11955 = and i8 %11954, 1
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11955, i8* %11956, align 1
  %11957 = icmp eq i32 %11941, 0
  %11958 = zext i1 %11957 to i8
  %11959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11958, i8* %11959, align 1
  %11960 = lshr i32 %11941, 31
  %11961 = trunc i32 %11960 to i8
  %11962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11961, i8* %11962, align 1
  %11963 = lshr i32 %11940, 31
  %11964 = xor i32 %11960, %11963
  %11965 = add i32 %11964, %11963
  %11966 = icmp eq i32 %11965, 2
  %11967 = zext i1 %11966 to i8
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11967, i8* %11968, align 1
  store %struct.Memory* %loadMem_40c3df, %struct.Memory** %MEMORY
  %loadMem_40c3e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11970 = getelementptr inbounds %struct.GPR, %struct.GPR* %11969, i32 0, i32 33
  %11971 = getelementptr inbounds %struct.Reg, %struct.Reg* %11970, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %11971 to i64*
  %11972 = load i64, i64* %PC.i262
  %11973 = add i64 %11972, 181
  %11974 = load i64, i64* %PC.i262
  %11975 = add i64 %11974, 6
  %11976 = load i64, i64* %PC.i262
  %11977 = add i64 %11976, 6
  store i64 %11977, i64* %PC.i262
  %11978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11979 = load i8, i8* %11978, align 1
  %11980 = icmp eq i8 %11979, 0
  %11981 = zext i1 %11980 to i8
  store i8 %11981, i8* %BRANCH_TAKEN, align 1
  %11982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11983 = select i1 %11980, i64 %11973, i64 %11975
  store i64 %11983, i64* %11982, align 8
  store %struct.Memory* %loadMem_40c3e3, %struct.Memory** %MEMORY
  %loadBr_40c3e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c3e3 = icmp eq i8 %loadBr_40c3e3, 1
  br i1 %cmpBr_40c3e3, label %block_.L_40c498, label %block_40c3e9

block_40c3e9:                                     ; preds = %block_40c34a
  %loadMem_40c3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11985 = getelementptr inbounds %struct.GPR, %struct.GPR* %11984, i32 0, i32 33
  %11986 = getelementptr inbounds %struct.Reg, %struct.Reg* %11985, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %11986 to i64*
  %11987 = load i64, i64* %PC.i261
  %11988 = add i64 %11987, 11
  store i64 %11988, i64* %PC.i261
  store i32 13, i32* bitcast (%G_0x8665c4_type* @G_0x8665c4 to i32*)
  store %struct.Memory* %loadMem_40c3e9, %struct.Memory** %MEMORY
  %loadMem_40c3f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11990 = getelementptr inbounds %struct.GPR, %struct.GPR* %11989, i32 0, i32 33
  %11991 = getelementptr inbounds %struct.Reg, %struct.Reg* %11990, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %11991 to i64*
  %11992 = load i64, i64* %PC.i260
  %11993 = add i64 %11992, 11
  store i64 %11993, i64* %PC.i260
  store i32 7, i32* bitcast (%G_0x8665bc_type* @G_0x8665bc to i32*)
  store %struct.Memory* %loadMem_40c3f4, %struct.Memory** %MEMORY
  %loadMem_40c3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %11994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11995 = getelementptr inbounds %struct.GPR, %struct.GPR* %11994, i32 0, i32 33
  %11996 = getelementptr inbounds %struct.Reg, %struct.Reg* %11995, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %11996 to i64*
  %11997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11998 = getelementptr inbounds %struct.GPR, %struct.GPR* %11997, i32 0, i32 1
  %11999 = getelementptr inbounds %struct.Reg, %struct.Reg* %11998, i32 0, i32 0
  %RAX.i259 = bitcast %union.anon* %11999 to i64*
  %12000 = load i64, i64* %PC.i258
  %12001 = add i64 %12000, 7
  store i64 %12001, i64* %PC.i258
  %12002 = load i32, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  %12003 = zext i32 %12002 to i64
  store i64 %12003, i64* %RAX.i259, align 8
  store %struct.Memory* %loadMem_40c3ff, %struct.Memory** %MEMORY
  %loadMem_40c406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12005 = getelementptr inbounds %struct.GPR, %struct.GPR* %12004, i32 0, i32 33
  %12006 = getelementptr inbounds %struct.Reg, %struct.Reg* %12005, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %12006 to i64*
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12008 = getelementptr inbounds %struct.GPR, %struct.GPR* %12007, i32 0, i32 1
  %12009 = getelementptr inbounds %struct.Reg, %struct.Reg* %12008, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %12009 to i64*
  %12010 = load i64, i64* %RAX.i257
  %12011 = load i64, i64* %PC.i256
  %12012 = add i64 %12011, 3
  store i64 %12012, i64* %PC.i256
  %12013 = trunc i64 %12010 to i32
  %12014 = add i32 1, %12013
  %12015 = zext i32 %12014 to i64
  store i64 %12015, i64* %RAX.i257, align 8
  %12016 = icmp ult i32 %12014, %12013
  %12017 = icmp ult i32 %12014, 1
  %12018 = or i1 %12016, %12017
  %12019 = zext i1 %12018 to i8
  %12020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12019, i8* %12020, align 1
  %12021 = and i32 %12014, 255
  %12022 = call i32 @llvm.ctpop.i32(i32 %12021)
  %12023 = trunc i32 %12022 to i8
  %12024 = and i8 %12023, 1
  %12025 = xor i8 %12024, 1
  %12026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12025, i8* %12026, align 1
  %12027 = xor i64 1, %12010
  %12028 = trunc i64 %12027 to i32
  %12029 = xor i32 %12028, %12014
  %12030 = lshr i32 %12029, 4
  %12031 = trunc i32 %12030 to i8
  %12032 = and i8 %12031, 1
  %12033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12032, i8* %12033, align 1
  %12034 = icmp eq i32 %12014, 0
  %12035 = zext i1 %12034 to i8
  %12036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12035, i8* %12036, align 1
  %12037 = lshr i32 %12014, 31
  %12038 = trunc i32 %12037 to i8
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12038, i8* %12039, align 1
  %12040 = lshr i32 %12013, 31
  %12041 = xor i32 %12037, %12040
  %12042 = add i32 %12041, %12037
  %12043 = icmp eq i32 %12042, 2
  %12044 = zext i1 %12043 to i8
  %12045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12044, i8* %12045, align 1
  store %struct.Memory* %loadMem_40c406, %struct.Memory** %MEMORY
  %loadMem_40c409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12047 = getelementptr inbounds %struct.GPR, %struct.GPR* %12046, i32 0, i32 33
  %12048 = getelementptr inbounds %struct.Reg, %struct.Reg* %12047, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %12048 to i64*
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12050 = getelementptr inbounds %struct.GPR, %struct.GPR* %12049, i32 0, i32 1
  %12051 = getelementptr inbounds %struct.Reg, %struct.Reg* %12050, i32 0, i32 0
  %EAX.i255 = bitcast %union.anon* %12051 to i32*
  %12052 = load i32, i32* %EAX.i255
  %12053 = zext i32 %12052 to i64
  %12054 = load i64, i64* %PC.i254
  %12055 = add i64 %12054, 7
  store i64 %12055, i64* %PC.i254
  store i32 %12052, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  store %struct.Memory* %loadMem_40c409, %struct.Memory** %MEMORY
  %loadMem_40c410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12057 = getelementptr inbounds %struct.GPR, %struct.GPR* %12056, i32 0, i32 33
  %12058 = getelementptr inbounds %struct.Reg, %struct.Reg* %12057, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %12058 to i64*
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12060 = getelementptr inbounds %struct.GPR, %struct.GPR* %12059, i32 0, i32 1
  %12061 = getelementptr inbounds %struct.Reg, %struct.Reg* %12060, i32 0, i32 0
  %RAX.i253 = bitcast %union.anon* %12061 to i64*
  %12062 = load i64, i64* %PC.i252
  %12063 = add i64 %12062, 7
  store i64 %12063, i64* %PC.i252
  %12064 = load i32, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  %12065 = zext i32 %12064 to i64
  store i64 %12065, i64* %RAX.i253, align 8
  store %struct.Memory* %loadMem_40c410, %struct.Memory** %MEMORY
  %loadMem_40c417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12067 = getelementptr inbounds %struct.GPR, %struct.GPR* %12066, i32 0, i32 33
  %12068 = getelementptr inbounds %struct.Reg, %struct.Reg* %12067, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %12068 to i64*
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12070 = getelementptr inbounds %struct.GPR, %struct.GPR* %12069, i32 0, i32 1
  %12071 = getelementptr inbounds %struct.Reg, %struct.Reg* %12070, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %12071 to i64*
  %12072 = load i64, i64* %RAX.i251
  %12073 = load i64, i64* %PC.i250
  %12074 = add i64 %12073, 3
  store i64 %12074, i64* %PC.i250
  %12075 = trunc i64 %12072 to i32
  %12076 = add i32 1, %12075
  %12077 = zext i32 %12076 to i64
  store i64 %12077, i64* %RAX.i251, align 8
  %12078 = icmp ult i32 %12076, %12075
  %12079 = icmp ult i32 %12076, 1
  %12080 = or i1 %12078, %12079
  %12081 = zext i1 %12080 to i8
  %12082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12081, i8* %12082, align 1
  %12083 = and i32 %12076, 255
  %12084 = call i32 @llvm.ctpop.i32(i32 %12083)
  %12085 = trunc i32 %12084 to i8
  %12086 = and i8 %12085, 1
  %12087 = xor i8 %12086, 1
  %12088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12087, i8* %12088, align 1
  %12089 = xor i64 1, %12072
  %12090 = trunc i64 %12089 to i32
  %12091 = xor i32 %12090, %12076
  %12092 = lshr i32 %12091, 4
  %12093 = trunc i32 %12092 to i8
  %12094 = and i8 %12093, 1
  %12095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12094, i8* %12095, align 1
  %12096 = icmp eq i32 %12076, 0
  %12097 = zext i1 %12096 to i8
  %12098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12097, i8* %12098, align 1
  %12099 = lshr i32 %12076, 31
  %12100 = trunc i32 %12099 to i8
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12100, i8* %12101, align 1
  %12102 = lshr i32 %12075, 31
  %12103 = xor i32 %12099, %12102
  %12104 = add i32 %12103, %12099
  %12105 = icmp eq i32 %12104, 2
  %12106 = zext i1 %12105 to i8
  %12107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12106, i8* %12107, align 1
  store %struct.Memory* %loadMem_40c417, %struct.Memory** %MEMORY
  %loadMem_40c41a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12109 = getelementptr inbounds %struct.GPR, %struct.GPR* %12108, i32 0, i32 33
  %12110 = getelementptr inbounds %struct.Reg, %struct.Reg* %12109, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %12110 to i64*
  %12111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12112 = getelementptr inbounds %struct.GPR, %struct.GPR* %12111, i32 0, i32 1
  %12113 = getelementptr inbounds %struct.Reg, %struct.Reg* %12112, i32 0, i32 0
  %EAX.i249 = bitcast %union.anon* %12113 to i32*
  %12114 = load i32, i32* %EAX.i249
  %12115 = zext i32 %12114 to i64
  %12116 = load i64, i64* %PC.i248
  %12117 = add i64 %12116, 7
  store i64 %12117, i64* %PC.i248
  store i32 %12114, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  store %struct.Memory* %loadMem_40c41a, %struct.Memory** %MEMORY
  %loadMem_40c421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12119 = getelementptr inbounds %struct.GPR, %struct.GPR* %12118, i32 0, i32 33
  %12120 = getelementptr inbounds %struct.Reg, %struct.Reg* %12119, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %12120 to i64*
  %12121 = load i64, i64* %PC.i247
  %12122 = add i64 %12121, 11
  store i64 %12122, i64* %PC.i247
  store i32 1, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  store %struct.Memory* %loadMem_40c421, %struct.Memory** %MEMORY
  %loadMem_40c42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12124 = getelementptr inbounds %struct.GPR, %struct.GPR* %12123, i32 0, i32 33
  %12125 = getelementptr inbounds %struct.Reg, %struct.Reg* %12124, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %12125 to i64*
  %12126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12127 = getelementptr inbounds %struct.GPR, %struct.GPR* %12126, i32 0, i32 5
  %12128 = getelementptr inbounds %struct.Reg, %struct.Reg* %12127, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %12128 to i64*
  %12129 = load i64, i64* %PC.i245
  %12130 = add i64 %12129, 8
  store i64 %12130, i64* %PC.i245
  %12131 = load i32, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  %12132 = sext i32 %12131 to i64
  store i64 %12132, i64* %RCX.i246, align 8
  store %struct.Memory* %loadMem_40c42c, %struct.Memory** %MEMORY
  %loadMem_40c434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12134 = getelementptr inbounds %struct.GPR, %struct.GPR* %12133, i32 0, i32 33
  %12135 = getelementptr inbounds %struct.Reg, %struct.Reg* %12134, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %12135 to i64*
  %12136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12137 = getelementptr inbounds %struct.GPR, %struct.GPR* %12136, i32 0, i32 5
  %12138 = getelementptr inbounds %struct.Reg, %struct.Reg* %12137, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %12138 to i64*
  %12139 = load i64, i64* %RCX.i244
  %12140 = mul i64 %12139, 4
  %12141 = add i64 %12140, 8778480
  %12142 = load i64, i64* %PC.i243
  %12143 = add i64 %12142, 11
  store i64 %12143, i64* %PC.i243
  %12144 = inttoptr i64 %12141 to i32*
  store i32 31, i32* %12144
  store %struct.Memory* %loadMem_40c434, %struct.Memory** %MEMORY
  %loadMem_40c43f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12146 = getelementptr inbounds %struct.GPR, %struct.GPR* %12145, i32 0, i32 33
  %12147 = getelementptr inbounds %struct.Reg, %struct.Reg* %12146, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %12147 to i64*
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12149 = getelementptr inbounds %struct.GPR, %struct.GPR* %12148, i32 0, i32 1
  %12150 = getelementptr inbounds %struct.Reg, %struct.Reg* %12149, i32 0, i32 0
  %RAX.i242 = bitcast %union.anon* %12150 to i64*
  %12151 = load i64, i64* %PC.i241
  %12152 = add i64 %12151, 7
  store i64 %12152, i64* %PC.i241
  %12153 = load i32, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  %12154 = zext i32 %12153 to i64
  store i64 %12154, i64* %RAX.i242, align 8
  store %struct.Memory* %loadMem_40c43f, %struct.Memory** %MEMORY
  %loadMem_40c446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12156 = getelementptr inbounds %struct.GPR, %struct.GPR* %12155, i32 0, i32 33
  %12157 = getelementptr inbounds %struct.Reg, %struct.Reg* %12156, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %12157 to i64*
  %12158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12159 = getelementptr inbounds %struct.GPR, %struct.GPR* %12158, i32 0, i32 1
  %12160 = getelementptr inbounds %struct.Reg, %struct.Reg* %12159, i32 0, i32 0
  %EAX.i240 = bitcast %union.anon* %12160 to i32*
  %12161 = load i32, i32* %EAX.i240
  %12162 = zext i32 %12161 to i64
  %12163 = load i64, i64* %PC.i239
  %12164 = add i64 %12163, 7
  store i64 %12164, i64* %PC.i239
  store i32 %12161, i32* bitcast (%G_0x86636c_type* @G_0x86636c to i32*)
  store %struct.Memory* %loadMem_40c446, %struct.Memory** %MEMORY
  %loadMem_40c44d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12166 = getelementptr inbounds %struct.GPR, %struct.GPR* %12165, i32 0, i32 33
  %12167 = getelementptr inbounds %struct.Reg, %struct.Reg* %12166, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %12167 to i64*
  %12168 = load i64, i64* %PC.i238
  %12169 = add i64 %12168, 11
  store i64 %12169, i64* %PC.i238
  store i32 0, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  store %struct.Memory* %loadMem_40c44d, %struct.Memory** %MEMORY
  %loadMem_40c458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12171 = getelementptr inbounds %struct.GPR, %struct.GPR* %12170, i32 0, i32 33
  %12172 = getelementptr inbounds %struct.Reg, %struct.Reg* %12171, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %12172 to i64*
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12174 = getelementptr inbounds %struct.GPR, %struct.GPR* %12173, i32 0, i32 1
  %12175 = getelementptr inbounds %struct.Reg, %struct.Reg* %12174, i32 0, i32 0
  %RAX.i237 = bitcast %union.anon* %12175 to i64*
  %12176 = load i64, i64* %PC.i236
  %12177 = add i64 %12176, 7
  store i64 %12177, i64* %PC.i236
  %12178 = load i32, i32* bitcast (%G_0x8a1ac4_type* @G_0x8a1ac4 to i32*)
  %12179 = zext i32 %12178 to i64
  store i64 %12179, i64* %RAX.i237, align 8
  store %struct.Memory* %loadMem_40c458, %struct.Memory** %MEMORY
  %loadMem_40c45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12181 = getelementptr inbounds %struct.GPR, %struct.GPR* %12180, i32 0, i32 33
  %12182 = getelementptr inbounds %struct.Reg, %struct.Reg* %12181, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %12182 to i64*
  %12183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12184 = getelementptr inbounds %struct.GPR, %struct.GPR* %12183, i32 0, i32 1
  %12185 = getelementptr inbounds %struct.Reg, %struct.Reg* %12184, i32 0, i32 0
  %RAX.i235 = bitcast %union.anon* %12185 to i64*
  %12186 = load i64, i64* %RAX.i235
  %12187 = load i64, i64* %PC.i234
  %12188 = add i64 %12187, 7
  store i64 %12188, i64* %PC.i234
  %12189 = trunc i64 %12186 to i32
  %12190 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12191 = xor i32 %12190, %12189
  %12192 = zext i32 %12191 to i64
  store i64 %12192, i64* %RAX.i235, align 8
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12193, align 1
  %12194 = and i32 %12191, 255
  %12195 = call i32 @llvm.ctpop.i32(i32 %12194)
  %12196 = trunc i32 %12195 to i8
  %12197 = and i8 %12196, 1
  %12198 = xor i8 %12197, 1
  %12199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12198, i8* %12199, align 1
  %12200 = icmp eq i32 %12191, 0
  %12201 = zext i1 %12200 to i8
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12201, i8* %12202, align 1
  %12203 = lshr i32 %12191, 31
  %12204 = trunc i32 %12203 to i8
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12204, i8* %12205, align 1
  %12206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12206, align 1
  %12207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12207, align 1
  store %struct.Memory* %loadMem_40c45f, %struct.Memory** %MEMORY
  %loadMem_40c466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 33
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %12210 to i64*
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12212 = getelementptr inbounds %struct.GPR, %struct.GPR* %12211, i32 0, i32 1
  %12213 = getelementptr inbounds %struct.Reg, %struct.Reg* %12212, i32 0, i32 0
  %EAX.i233 = bitcast %union.anon* %12213 to i32*
  %12214 = load i32, i32* %EAX.i233
  %12215 = zext i32 %12214 to i64
  %12216 = load i64, i64* %PC.i232
  %12217 = add i64 %12216, 7
  store i64 %12217, i64* %PC.i232
  store i32 %12214, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c466, %struct.Memory** %MEMORY
  %loadMem_40c46d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12219 = getelementptr inbounds %struct.GPR, %struct.GPR* %12218, i32 0, i32 33
  %12220 = getelementptr inbounds %struct.Reg, %struct.Reg* %12219, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %12220 to i64*
  %12221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12222 = getelementptr inbounds %struct.GPR, %struct.GPR* %12221, i32 0, i32 1
  %12223 = getelementptr inbounds %struct.Reg, %struct.Reg* %12222, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %12223 to i64*
  %12224 = load i64, i64* %PC.i230
  %12225 = add i64 %12224, 7
  store i64 %12225, i64* %PC.i230
  %12226 = load i32, i32* bitcast (%G_0x8a1abc_type* @G_0x8a1abc to i32*)
  %12227 = zext i32 %12226 to i64
  store i64 %12227, i64* %RAX.i231, align 8
  store %struct.Memory* %loadMem_40c46d, %struct.Memory** %MEMORY
  %loadMem_40c474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12229 = getelementptr inbounds %struct.GPR, %struct.GPR* %12228, i32 0, i32 33
  %12230 = getelementptr inbounds %struct.Reg, %struct.Reg* %12229, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %12230 to i64*
  %12231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12232 = getelementptr inbounds %struct.GPR, %struct.GPR* %12231, i32 0, i32 1
  %12233 = getelementptr inbounds %struct.Reg, %struct.Reg* %12232, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %12233 to i64*
  %12234 = load i64, i64* %RAX.i229
  %12235 = load i64, i64* %PC.i228
  %12236 = add i64 %12235, 7
  store i64 %12236, i64* %PC.i228
  %12237 = trunc i64 %12234 to i32
  %12238 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12239 = xor i32 %12238, %12237
  %12240 = zext i32 %12239 to i64
  store i64 %12240, i64* %RAX.i229, align 8
  %12241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12241, align 1
  %12242 = and i32 %12239, 255
  %12243 = call i32 @llvm.ctpop.i32(i32 %12242)
  %12244 = trunc i32 %12243 to i8
  %12245 = and i8 %12244, 1
  %12246 = xor i8 %12245, 1
  %12247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12246, i8* %12247, align 1
  %12248 = icmp eq i32 %12239, 0
  %12249 = zext i1 %12248 to i8
  %12250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12249, i8* %12250, align 1
  %12251 = lshr i32 %12239, 31
  %12252 = trunc i32 %12251 to i8
  %12253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12252, i8* %12253, align 1
  %12254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12254, align 1
  %12255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12255, align 1
  store %struct.Memory* %loadMem_40c474, %struct.Memory** %MEMORY
  %loadMem_40c47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12257 = getelementptr inbounds %struct.GPR, %struct.GPR* %12256, i32 0, i32 33
  %12258 = getelementptr inbounds %struct.Reg, %struct.Reg* %12257, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %12258 to i64*
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12260 = getelementptr inbounds %struct.GPR, %struct.GPR* %12259, i32 0, i32 1
  %12261 = getelementptr inbounds %struct.Reg, %struct.Reg* %12260, i32 0, i32 0
  %EAX.i227 = bitcast %union.anon* %12261 to i32*
  %12262 = load i32, i32* %EAX.i227
  %12263 = zext i32 %12262 to i64
  %12264 = load i64, i64* %PC.i226
  %12265 = add i64 %12264, 7
  store i64 %12265, i64* %PC.i226
  store i32 %12262, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c47b, %struct.Memory** %MEMORY
  %loadMem_40c482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12267 = getelementptr inbounds %struct.GPR, %struct.GPR* %12266, i32 0, i32 33
  %12268 = getelementptr inbounds %struct.Reg, %struct.Reg* %12267, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %12268 to i64*
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12270 = getelementptr inbounds %struct.GPR, %struct.GPR* %12269, i32 0, i32 1
  %12271 = getelementptr inbounds %struct.Reg, %struct.Reg* %12270, i32 0, i32 0
  %RAX.i225 = bitcast %union.anon* %12271 to i64*
  %12272 = load i64, i64* %PC.i224
  %12273 = add i64 %12272, 7
  store i64 %12273, i64* %PC.i224
  %12274 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12275 = zext i32 %12274 to i64
  store i64 %12275, i64* %RAX.i225, align 8
  store %struct.Memory* %loadMem_40c482, %struct.Memory** %MEMORY
  %loadMem_40c489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12277 = getelementptr inbounds %struct.GPR, %struct.GPR* %12276, i32 0, i32 33
  %12278 = getelementptr inbounds %struct.Reg, %struct.Reg* %12277, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %12278 to i64*
  %12279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12280 = getelementptr inbounds %struct.GPR, %struct.GPR* %12279, i32 0, i32 1
  %12281 = getelementptr inbounds %struct.Reg, %struct.Reg* %12280, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %12281 to i64*
  %12282 = load i64, i64* %RAX.i223
  %12283 = load i64, i64* %PC.i222
  %12284 = add i64 %12283, 3
  store i64 %12284, i64* %PC.i222
  %12285 = trunc i64 %12282 to i32
  %12286 = add i32 1, %12285
  %12287 = zext i32 %12286 to i64
  store i64 %12287, i64* %RAX.i223, align 8
  %12288 = icmp ult i32 %12286, %12285
  %12289 = icmp ult i32 %12286, 1
  %12290 = or i1 %12288, %12289
  %12291 = zext i1 %12290 to i8
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12291, i8* %12292, align 1
  %12293 = and i32 %12286, 255
  %12294 = call i32 @llvm.ctpop.i32(i32 %12293)
  %12295 = trunc i32 %12294 to i8
  %12296 = and i8 %12295, 1
  %12297 = xor i8 %12296, 1
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12297, i8* %12298, align 1
  %12299 = xor i64 1, %12282
  %12300 = trunc i64 %12299 to i32
  %12301 = xor i32 %12300, %12286
  %12302 = lshr i32 %12301, 4
  %12303 = trunc i32 %12302 to i8
  %12304 = and i8 %12303, 1
  %12305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12304, i8* %12305, align 1
  %12306 = icmp eq i32 %12286, 0
  %12307 = zext i1 %12306 to i8
  %12308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12307, i8* %12308, align 1
  %12309 = lshr i32 %12286, 31
  %12310 = trunc i32 %12309 to i8
  %12311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12310, i8* %12311, align 1
  %12312 = lshr i32 %12285, 31
  %12313 = xor i32 %12309, %12312
  %12314 = add i32 %12313, %12309
  %12315 = icmp eq i32 %12314, 2
  %12316 = zext i1 %12315 to i8
  %12317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12316, i8* %12317, align 1
  store %struct.Memory* %loadMem_40c489, %struct.Memory** %MEMORY
  %loadMem_40c48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12319 = getelementptr inbounds %struct.GPR, %struct.GPR* %12318, i32 0, i32 33
  %12320 = getelementptr inbounds %struct.Reg, %struct.Reg* %12319, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %12320 to i64*
  %12321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12322 = getelementptr inbounds %struct.GPR, %struct.GPR* %12321, i32 0, i32 1
  %12323 = getelementptr inbounds %struct.Reg, %struct.Reg* %12322, i32 0, i32 0
  %EAX.i221 = bitcast %union.anon* %12323 to i32*
  %12324 = load i32, i32* %EAX.i221
  %12325 = zext i32 %12324 to i64
  %12326 = load i64, i64* %PC.i220
  %12327 = add i64 %12326, 7
  store i64 %12327, i64* %PC.i220
  store i32 %12324, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c48c, %struct.Memory** %MEMORY
  %loadMem_40c493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12329 = getelementptr inbounds %struct.GPR, %struct.GPR* %12328, i32 0, i32 33
  %12330 = getelementptr inbounds %struct.Reg, %struct.Reg* %12329, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %12330 to i64*
  %12331 = load i64, i64* %PC.i219
  %12332 = add i64 %12331, 763
  %12333 = load i64, i64* %PC.i219
  %12334 = add i64 %12333, 5
  store i64 %12334, i64* %PC.i219
  %12335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12332, i64* %12335, align 8
  store %struct.Memory* %loadMem_40c493, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c498:                                  ; preds = %block_40c34a
  %loadMem_40c498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12337 = getelementptr inbounds %struct.GPR, %struct.GPR* %12336, i32 0, i32 33
  %12338 = getelementptr inbounds %struct.Reg, %struct.Reg* %12337, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %12338 to i64*
  %12339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12340 = getelementptr inbounds %struct.GPR, %struct.GPR* %12339, i32 0, i32 15
  %12341 = getelementptr inbounds %struct.Reg, %struct.Reg* %12340, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %12341 to i64*
  %12342 = load i64, i64* %RBP.i218
  %12343 = sub i64 %12342, 36
  %12344 = load i64, i64* %PC.i217
  %12345 = add i64 %12344, 4
  store i64 %12345, i64* %PC.i217
  %12346 = inttoptr i64 %12343 to i32*
  %12347 = load i32, i32* %12346
  %12348 = sub i32 %12347, 2
  %12349 = icmp ult i32 %12347, 2
  %12350 = zext i1 %12349 to i8
  %12351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12350, i8* %12351, align 1
  %12352 = and i32 %12348, 255
  %12353 = call i32 @llvm.ctpop.i32(i32 %12352)
  %12354 = trunc i32 %12353 to i8
  %12355 = and i8 %12354, 1
  %12356 = xor i8 %12355, 1
  %12357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12356, i8* %12357, align 1
  %12358 = xor i32 %12347, 2
  %12359 = xor i32 %12358, %12348
  %12360 = lshr i32 %12359, 4
  %12361 = trunc i32 %12360 to i8
  %12362 = and i8 %12361, 1
  %12363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12362, i8* %12363, align 1
  %12364 = icmp eq i32 %12348, 0
  %12365 = zext i1 %12364 to i8
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12365, i8* %12366, align 1
  %12367 = lshr i32 %12348, 31
  %12368 = trunc i32 %12367 to i8
  %12369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12368, i8* %12369, align 1
  %12370 = lshr i32 %12347, 31
  %12371 = xor i32 %12367, %12370
  %12372 = add i32 %12371, %12370
  %12373 = icmp eq i32 %12372, 2
  %12374 = zext i1 %12373 to i8
  %12375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12374, i8* %12375, align 1
  store %struct.Memory* %loadMem_40c498, %struct.Memory** %MEMORY
  %loadMem_40c49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12377 = getelementptr inbounds %struct.GPR, %struct.GPR* %12376, i32 0, i32 33
  %12378 = getelementptr inbounds %struct.Reg, %struct.Reg* %12377, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %12378 to i64*
  %12379 = load i64, i64* %PC.i216
  %12380 = add i64 %12379, 181
  %12381 = load i64, i64* %PC.i216
  %12382 = add i64 %12381, 6
  %12383 = load i64, i64* %PC.i216
  %12384 = add i64 %12383, 6
  store i64 %12384, i64* %PC.i216
  %12385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12386 = load i8, i8* %12385, align 1
  %12387 = icmp eq i8 %12386, 0
  %12388 = zext i1 %12387 to i8
  store i8 %12388, i8* %BRANCH_TAKEN, align 1
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12390 = select i1 %12387, i64 %12380, i64 %12382
  store i64 %12390, i64* %12389, align 8
  store %struct.Memory* %loadMem_40c49c, %struct.Memory** %MEMORY
  %loadBr_40c49c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c49c = icmp eq i8 %loadBr_40c49c, 1
  br i1 %cmpBr_40c49c, label %block_.L_40c551, label %block_40c4a2

block_40c4a2:                                     ; preds = %block_.L_40c498
  %loadMem_40c4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12392 = getelementptr inbounds %struct.GPR, %struct.GPR* %12391, i32 0, i32 33
  %12393 = getelementptr inbounds %struct.Reg, %struct.Reg* %12392, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %12393 to i64*
  %12394 = load i64, i64* %PC.i215
  %12395 = add i64 %12394, 11
  store i64 %12395, i64* %PC.i215
  store i32 13, i32* bitcast (%G_0x8665a8_type* @G_0x8665a8 to i32*)
  store %struct.Memory* %loadMem_40c4a2, %struct.Memory** %MEMORY
  %loadMem_40c4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12397 = getelementptr inbounds %struct.GPR, %struct.GPR* %12396, i32 0, i32 33
  %12398 = getelementptr inbounds %struct.Reg, %struct.Reg* %12397, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %12398 to i64*
  %12399 = load i64, i64* %PC.i214
  %12400 = add i64 %12399, 11
  store i64 %12400, i64* %PC.i214
  store i32 7, i32* bitcast (%G_0x8665b4_type* @G_0x8665b4 to i32*)
  store %struct.Memory* %loadMem_40c4ad, %struct.Memory** %MEMORY
  %loadMem_40c4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12402 = getelementptr inbounds %struct.GPR, %struct.GPR* %12401, i32 0, i32 33
  %12403 = getelementptr inbounds %struct.Reg, %struct.Reg* %12402, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %12403 to i64*
  %12404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12405 = getelementptr inbounds %struct.GPR, %struct.GPR* %12404, i32 0, i32 1
  %12406 = getelementptr inbounds %struct.Reg, %struct.Reg* %12405, i32 0, i32 0
  %RAX.i213 = bitcast %union.anon* %12406 to i64*
  %12407 = load i64, i64* %PC.i212
  %12408 = add i64 %12407, 7
  store i64 %12408, i64* %PC.i212
  %12409 = load i32, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  %12410 = zext i32 %12409 to i64
  store i64 %12410, i64* %RAX.i213, align 8
  store %struct.Memory* %loadMem_40c4b8, %struct.Memory** %MEMORY
  %loadMem_40c4bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12412 = getelementptr inbounds %struct.GPR, %struct.GPR* %12411, i32 0, i32 33
  %12413 = getelementptr inbounds %struct.Reg, %struct.Reg* %12412, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %12413 to i64*
  %12414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12415 = getelementptr inbounds %struct.GPR, %struct.GPR* %12414, i32 0, i32 1
  %12416 = getelementptr inbounds %struct.Reg, %struct.Reg* %12415, i32 0, i32 0
  %RAX.i211 = bitcast %union.anon* %12416 to i64*
  %12417 = load i64, i64* %RAX.i211
  %12418 = load i64, i64* %PC.i210
  %12419 = add i64 %12418, 3
  store i64 %12419, i64* %PC.i210
  %12420 = trunc i64 %12417 to i32
  %12421 = add i32 1, %12420
  %12422 = zext i32 %12421 to i64
  store i64 %12422, i64* %RAX.i211, align 8
  %12423 = icmp ult i32 %12421, %12420
  %12424 = icmp ult i32 %12421, 1
  %12425 = or i1 %12423, %12424
  %12426 = zext i1 %12425 to i8
  %12427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12426, i8* %12427, align 1
  %12428 = and i32 %12421, 255
  %12429 = call i32 @llvm.ctpop.i32(i32 %12428)
  %12430 = trunc i32 %12429 to i8
  %12431 = and i8 %12430, 1
  %12432 = xor i8 %12431, 1
  %12433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12432, i8* %12433, align 1
  %12434 = xor i64 1, %12417
  %12435 = trunc i64 %12434 to i32
  %12436 = xor i32 %12435, %12421
  %12437 = lshr i32 %12436, 4
  %12438 = trunc i32 %12437 to i8
  %12439 = and i8 %12438, 1
  %12440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12439, i8* %12440, align 1
  %12441 = icmp eq i32 %12421, 0
  %12442 = zext i1 %12441 to i8
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12442, i8* %12443, align 1
  %12444 = lshr i32 %12421, 31
  %12445 = trunc i32 %12444 to i8
  %12446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12445, i8* %12446, align 1
  %12447 = lshr i32 %12420, 31
  %12448 = xor i32 %12444, %12447
  %12449 = add i32 %12448, %12444
  %12450 = icmp eq i32 %12449, 2
  %12451 = zext i1 %12450 to i8
  %12452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12451, i8* %12452, align 1
  store %struct.Memory* %loadMem_40c4bf, %struct.Memory** %MEMORY
  %loadMem_40c4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12454 = getelementptr inbounds %struct.GPR, %struct.GPR* %12453, i32 0, i32 33
  %12455 = getelementptr inbounds %struct.Reg, %struct.Reg* %12454, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %12455 to i64*
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12457 = getelementptr inbounds %struct.GPR, %struct.GPR* %12456, i32 0, i32 1
  %12458 = getelementptr inbounds %struct.Reg, %struct.Reg* %12457, i32 0, i32 0
  %EAX.i209 = bitcast %union.anon* %12458 to i32*
  %12459 = load i32, i32* %EAX.i209
  %12460 = zext i32 %12459 to i64
  %12461 = load i64, i64* %PC.i208
  %12462 = add i64 %12461, 7
  store i64 %12462, i64* %PC.i208
  store i32 %12459, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  store %struct.Memory* %loadMem_40c4c2, %struct.Memory** %MEMORY
  %loadMem_40c4c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12464 = getelementptr inbounds %struct.GPR, %struct.GPR* %12463, i32 0, i32 33
  %12465 = getelementptr inbounds %struct.Reg, %struct.Reg* %12464, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %12465 to i64*
  %12466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12467 = getelementptr inbounds %struct.GPR, %struct.GPR* %12466, i32 0, i32 1
  %12468 = getelementptr inbounds %struct.Reg, %struct.Reg* %12467, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %12468 to i64*
  %12469 = load i64, i64* %PC.i206
  %12470 = add i64 %12469, 7
  store i64 %12470, i64* %PC.i206
  %12471 = load i32, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  %12472 = zext i32 %12471 to i64
  store i64 %12472, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_40c4c9, %struct.Memory** %MEMORY
  %loadMem_40c4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12474 = getelementptr inbounds %struct.GPR, %struct.GPR* %12473, i32 0, i32 33
  %12475 = getelementptr inbounds %struct.Reg, %struct.Reg* %12474, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %12475 to i64*
  %12476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12477 = getelementptr inbounds %struct.GPR, %struct.GPR* %12476, i32 0, i32 1
  %12478 = getelementptr inbounds %struct.Reg, %struct.Reg* %12477, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %12478 to i64*
  %12479 = load i64, i64* %RAX.i205
  %12480 = load i64, i64* %PC.i204
  %12481 = add i64 %12480, 3
  store i64 %12481, i64* %PC.i204
  %12482 = trunc i64 %12479 to i32
  %12483 = add i32 1, %12482
  %12484 = zext i32 %12483 to i64
  store i64 %12484, i64* %RAX.i205, align 8
  %12485 = icmp ult i32 %12483, %12482
  %12486 = icmp ult i32 %12483, 1
  %12487 = or i1 %12485, %12486
  %12488 = zext i1 %12487 to i8
  %12489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12488, i8* %12489, align 1
  %12490 = and i32 %12483, 255
  %12491 = call i32 @llvm.ctpop.i32(i32 %12490)
  %12492 = trunc i32 %12491 to i8
  %12493 = and i8 %12492, 1
  %12494 = xor i8 %12493, 1
  %12495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12494, i8* %12495, align 1
  %12496 = xor i64 1, %12479
  %12497 = trunc i64 %12496 to i32
  %12498 = xor i32 %12497, %12483
  %12499 = lshr i32 %12498, 4
  %12500 = trunc i32 %12499 to i8
  %12501 = and i8 %12500, 1
  %12502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12501, i8* %12502, align 1
  %12503 = icmp eq i32 %12483, 0
  %12504 = zext i1 %12503 to i8
  %12505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12504, i8* %12505, align 1
  %12506 = lshr i32 %12483, 31
  %12507 = trunc i32 %12506 to i8
  %12508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12507, i8* %12508, align 1
  %12509 = lshr i32 %12482, 31
  %12510 = xor i32 %12506, %12509
  %12511 = add i32 %12510, %12506
  %12512 = icmp eq i32 %12511, 2
  %12513 = zext i1 %12512 to i8
  %12514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12513, i8* %12514, align 1
  store %struct.Memory* %loadMem_40c4d0, %struct.Memory** %MEMORY
  %loadMem_40c4d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12516 = getelementptr inbounds %struct.GPR, %struct.GPR* %12515, i32 0, i32 33
  %12517 = getelementptr inbounds %struct.Reg, %struct.Reg* %12516, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %12517 to i64*
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12519 = getelementptr inbounds %struct.GPR, %struct.GPR* %12518, i32 0, i32 1
  %12520 = getelementptr inbounds %struct.Reg, %struct.Reg* %12519, i32 0, i32 0
  %EAX.i203 = bitcast %union.anon* %12520 to i32*
  %12521 = load i32, i32* %EAX.i203
  %12522 = zext i32 %12521 to i64
  %12523 = load i64, i64* %PC.i202
  %12524 = add i64 %12523, 7
  store i64 %12524, i64* %PC.i202
  store i32 %12521, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  store %struct.Memory* %loadMem_40c4d3, %struct.Memory** %MEMORY
  %loadMem_40c4da = load %struct.Memory*, %struct.Memory** %MEMORY
  %12525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12526 = getelementptr inbounds %struct.GPR, %struct.GPR* %12525, i32 0, i32 33
  %12527 = getelementptr inbounds %struct.Reg, %struct.Reg* %12526, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %12527 to i64*
  %12528 = load i64, i64* %PC.i201
  %12529 = add i64 %12528, 11
  store i64 %12529, i64* %PC.i201
  store i32 2, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  store %struct.Memory* %loadMem_40c4da, %struct.Memory** %MEMORY
  %loadMem_40c4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12531 = getelementptr inbounds %struct.GPR, %struct.GPR* %12530, i32 0, i32 33
  %12532 = getelementptr inbounds %struct.Reg, %struct.Reg* %12531, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %12532 to i64*
  %12533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12534 = getelementptr inbounds %struct.GPR, %struct.GPR* %12533, i32 0, i32 5
  %12535 = getelementptr inbounds %struct.Reg, %struct.Reg* %12534, i32 0, i32 0
  %RCX.i200 = bitcast %union.anon* %12535 to i64*
  %12536 = load i64, i64* %PC.i199
  %12537 = add i64 %12536, 8
  store i64 %12537, i64* %PC.i199
  %12538 = load i32, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  %12539 = sext i32 %12538 to i64
  store i64 %12539, i64* %RCX.i200, align 8
  store %struct.Memory* %loadMem_40c4e5, %struct.Memory** %MEMORY
  %loadMem_40c4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %12540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12541 = getelementptr inbounds %struct.GPR, %struct.GPR* %12540, i32 0, i32 33
  %12542 = getelementptr inbounds %struct.Reg, %struct.Reg* %12541, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %12542 to i64*
  %12543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12544 = getelementptr inbounds %struct.GPR, %struct.GPR* %12543, i32 0, i32 5
  %12545 = getelementptr inbounds %struct.Reg, %struct.Reg* %12544, i32 0, i32 0
  %RCX.i198 = bitcast %union.anon* %12545 to i64*
  %12546 = load i64, i64* %RCX.i198
  %12547 = mul i64 %12546, 4
  %12548 = add i64 %12547, 8778480
  %12549 = load i64, i64* %PC.i197
  %12550 = add i64 %12549, 11
  store i64 %12550, i64* %PC.i197
  %12551 = inttoptr i64 %12548 to i32*
  store i32 29, i32* %12551
  store %struct.Memory* %loadMem_40c4ed, %struct.Memory** %MEMORY
  %loadMem_40c4f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12553 = getelementptr inbounds %struct.GPR, %struct.GPR* %12552, i32 0, i32 33
  %12554 = getelementptr inbounds %struct.Reg, %struct.Reg* %12553, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %12554 to i64*
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12556 = getelementptr inbounds %struct.GPR, %struct.GPR* %12555, i32 0, i32 1
  %12557 = getelementptr inbounds %struct.Reg, %struct.Reg* %12556, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %12557 to i64*
  %12558 = load i64, i64* %PC.i195
  %12559 = add i64 %12558, 7
  store i64 %12559, i64* %PC.i195
  %12560 = load i32, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  %12561 = zext i32 %12560 to i64
  store i64 %12561, i64* %RAX.i196, align 8
  store %struct.Memory* %loadMem_40c4f8, %struct.Memory** %MEMORY
  %loadMem_40c4ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12563 = getelementptr inbounds %struct.GPR, %struct.GPR* %12562, i32 0, i32 33
  %12564 = getelementptr inbounds %struct.Reg, %struct.Reg* %12563, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %12564 to i64*
  %12565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12566 = getelementptr inbounds %struct.GPR, %struct.GPR* %12565, i32 0, i32 1
  %12567 = getelementptr inbounds %struct.Reg, %struct.Reg* %12566, i32 0, i32 0
  %EAX.i194 = bitcast %union.anon* %12567 to i32*
  %12568 = load i32, i32* %EAX.i194
  %12569 = zext i32 %12568 to i64
  %12570 = load i64, i64* %PC.i193
  %12571 = add i64 %12570, 7
  store i64 %12571, i64* %PC.i193
  store i32 %12568, i32* bitcast (%G_0x866364_type* @G_0x866364 to i32*)
  store %struct.Memory* %loadMem_40c4ff, %struct.Memory** %MEMORY
  %loadMem_40c506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12573 = getelementptr inbounds %struct.GPR, %struct.GPR* %12572, i32 0, i32 33
  %12574 = getelementptr inbounds %struct.Reg, %struct.Reg* %12573, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %12574 to i64*
  %12575 = load i64, i64* %PC.i192
  %12576 = add i64 %12575, 11
  store i64 %12576, i64* %PC.i192
  store i32 0, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  store %struct.Memory* %loadMem_40c506, %struct.Memory** %MEMORY
  %loadMem_40c511 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12578 = getelementptr inbounds %struct.GPR, %struct.GPR* %12577, i32 0, i32 33
  %12579 = getelementptr inbounds %struct.Reg, %struct.Reg* %12578, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %12579 to i64*
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12581 = getelementptr inbounds %struct.GPR, %struct.GPR* %12580, i32 0, i32 1
  %12582 = getelementptr inbounds %struct.Reg, %struct.Reg* %12581, i32 0, i32 0
  %RAX.i191 = bitcast %union.anon* %12582 to i64*
  %12583 = load i64, i64* %PC.i190
  %12584 = add i64 %12583, 7
  store i64 %12584, i64* %PC.i190
  %12585 = load i32, i32* bitcast (%G_0x8a1aa8_type* @G_0x8a1aa8 to i32*)
  %12586 = zext i32 %12585 to i64
  store i64 %12586, i64* %RAX.i191, align 8
  store %struct.Memory* %loadMem_40c511, %struct.Memory** %MEMORY
  %loadMem_40c518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12588 = getelementptr inbounds %struct.GPR, %struct.GPR* %12587, i32 0, i32 33
  %12589 = getelementptr inbounds %struct.Reg, %struct.Reg* %12588, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %12589 to i64*
  %12590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12591 = getelementptr inbounds %struct.GPR, %struct.GPR* %12590, i32 0, i32 1
  %12592 = getelementptr inbounds %struct.Reg, %struct.Reg* %12591, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %12592 to i64*
  %12593 = load i64, i64* %RAX.i189
  %12594 = load i64, i64* %PC.i188
  %12595 = add i64 %12594, 7
  store i64 %12595, i64* %PC.i188
  %12596 = trunc i64 %12593 to i32
  %12597 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12598 = xor i32 %12597, %12596
  %12599 = zext i32 %12598 to i64
  store i64 %12599, i64* %RAX.i189, align 8
  %12600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12600, align 1
  %12601 = and i32 %12598, 255
  %12602 = call i32 @llvm.ctpop.i32(i32 %12601)
  %12603 = trunc i32 %12602 to i8
  %12604 = and i8 %12603, 1
  %12605 = xor i8 %12604, 1
  %12606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12605, i8* %12606, align 1
  %12607 = icmp eq i32 %12598, 0
  %12608 = zext i1 %12607 to i8
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12608, i8* %12609, align 1
  %12610 = lshr i32 %12598, 31
  %12611 = trunc i32 %12610 to i8
  %12612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12611, i8* %12612, align 1
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12613, align 1
  %12614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12614, align 1
  store %struct.Memory* %loadMem_40c518, %struct.Memory** %MEMORY
  %loadMem_40c51f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12616 = getelementptr inbounds %struct.GPR, %struct.GPR* %12615, i32 0, i32 33
  %12617 = getelementptr inbounds %struct.Reg, %struct.Reg* %12616, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %12617 to i64*
  %12618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12619 = getelementptr inbounds %struct.GPR, %struct.GPR* %12618, i32 0, i32 1
  %12620 = getelementptr inbounds %struct.Reg, %struct.Reg* %12619, i32 0, i32 0
  %EAX.i187 = bitcast %union.anon* %12620 to i32*
  %12621 = load i32, i32* %EAX.i187
  %12622 = zext i32 %12621 to i64
  %12623 = load i64, i64* %PC.i186
  %12624 = add i64 %12623, 7
  store i64 %12624, i64* %PC.i186
  store i32 %12621, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c51f, %struct.Memory** %MEMORY
  %loadMem_40c526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12626 = getelementptr inbounds %struct.GPR, %struct.GPR* %12625, i32 0, i32 33
  %12627 = getelementptr inbounds %struct.Reg, %struct.Reg* %12626, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %12627 to i64*
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 1
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %RAX.i185 = bitcast %union.anon* %12630 to i64*
  %12631 = load i64, i64* %PC.i184
  %12632 = add i64 %12631, 7
  store i64 %12632, i64* %PC.i184
  %12633 = load i32, i32* bitcast (%G_0x8a1ab4_type* @G_0x8a1ab4 to i32*)
  %12634 = zext i32 %12633 to i64
  store i64 %12634, i64* %RAX.i185, align 8
  store %struct.Memory* %loadMem_40c526, %struct.Memory** %MEMORY
  %loadMem_40c52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12636 = getelementptr inbounds %struct.GPR, %struct.GPR* %12635, i32 0, i32 33
  %12637 = getelementptr inbounds %struct.Reg, %struct.Reg* %12636, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %12637 to i64*
  %12638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12639 = getelementptr inbounds %struct.GPR, %struct.GPR* %12638, i32 0, i32 1
  %12640 = getelementptr inbounds %struct.Reg, %struct.Reg* %12639, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %12640 to i64*
  %12641 = load i64, i64* %RAX.i183
  %12642 = load i64, i64* %PC.i182
  %12643 = add i64 %12642, 7
  store i64 %12643, i64* %PC.i182
  %12644 = trunc i64 %12641 to i32
  %12645 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12646 = xor i32 %12645, %12644
  %12647 = zext i32 %12646 to i64
  store i64 %12647, i64* %RAX.i183, align 8
  %12648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12648, align 1
  %12649 = and i32 %12646, 255
  %12650 = call i32 @llvm.ctpop.i32(i32 %12649)
  %12651 = trunc i32 %12650 to i8
  %12652 = and i8 %12651, 1
  %12653 = xor i8 %12652, 1
  %12654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12653, i8* %12654, align 1
  %12655 = icmp eq i32 %12646, 0
  %12656 = zext i1 %12655 to i8
  %12657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12656, i8* %12657, align 1
  %12658 = lshr i32 %12646, 31
  %12659 = trunc i32 %12658 to i8
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12659, i8* %12660, align 1
  %12661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12661, align 1
  %12662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12662, align 1
  store %struct.Memory* %loadMem_40c52d, %struct.Memory** %MEMORY
  %loadMem_40c534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12664 = getelementptr inbounds %struct.GPR, %struct.GPR* %12663, i32 0, i32 33
  %12665 = getelementptr inbounds %struct.Reg, %struct.Reg* %12664, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %12665 to i64*
  %12666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12667 = getelementptr inbounds %struct.GPR, %struct.GPR* %12666, i32 0, i32 1
  %12668 = getelementptr inbounds %struct.Reg, %struct.Reg* %12667, i32 0, i32 0
  %EAX.i181 = bitcast %union.anon* %12668 to i32*
  %12669 = load i32, i32* %EAX.i181
  %12670 = zext i32 %12669 to i64
  %12671 = load i64, i64* %PC.i180
  %12672 = add i64 %12671, 7
  store i64 %12672, i64* %PC.i180
  store i32 %12669, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c534, %struct.Memory** %MEMORY
  %loadMem_40c53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12674 = getelementptr inbounds %struct.GPR, %struct.GPR* %12673, i32 0, i32 33
  %12675 = getelementptr inbounds %struct.Reg, %struct.Reg* %12674, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %12675 to i64*
  %12676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12677 = getelementptr inbounds %struct.GPR, %struct.GPR* %12676, i32 0, i32 1
  %12678 = getelementptr inbounds %struct.Reg, %struct.Reg* %12677, i32 0, i32 0
  %RAX.i179 = bitcast %union.anon* %12678 to i64*
  %12679 = load i64, i64* %PC.i178
  %12680 = add i64 %12679, 7
  store i64 %12680, i64* %PC.i178
  %12681 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12682 = zext i32 %12681 to i64
  store i64 %12682, i64* %RAX.i179, align 8
  store %struct.Memory* %loadMem_40c53b, %struct.Memory** %MEMORY
  %loadMem_40c542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12684 = getelementptr inbounds %struct.GPR, %struct.GPR* %12683, i32 0, i32 33
  %12685 = getelementptr inbounds %struct.Reg, %struct.Reg* %12684, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %12685 to i64*
  %12686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12687 = getelementptr inbounds %struct.GPR, %struct.GPR* %12686, i32 0, i32 1
  %12688 = getelementptr inbounds %struct.Reg, %struct.Reg* %12687, i32 0, i32 0
  %RAX.i177 = bitcast %union.anon* %12688 to i64*
  %12689 = load i64, i64* %RAX.i177
  %12690 = load i64, i64* %PC.i176
  %12691 = add i64 %12690, 3
  store i64 %12691, i64* %PC.i176
  %12692 = trunc i64 %12689 to i32
  %12693 = add i32 1, %12692
  %12694 = zext i32 %12693 to i64
  store i64 %12694, i64* %RAX.i177, align 8
  %12695 = icmp ult i32 %12693, %12692
  %12696 = icmp ult i32 %12693, 1
  %12697 = or i1 %12695, %12696
  %12698 = zext i1 %12697 to i8
  %12699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12698, i8* %12699, align 1
  %12700 = and i32 %12693, 255
  %12701 = call i32 @llvm.ctpop.i32(i32 %12700)
  %12702 = trunc i32 %12701 to i8
  %12703 = and i8 %12702, 1
  %12704 = xor i8 %12703, 1
  %12705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12704, i8* %12705, align 1
  %12706 = xor i64 1, %12689
  %12707 = trunc i64 %12706 to i32
  %12708 = xor i32 %12707, %12693
  %12709 = lshr i32 %12708, 4
  %12710 = trunc i32 %12709 to i8
  %12711 = and i8 %12710, 1
  %12712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12711, i8* %12712, align 1
  %12713 = icmp eq i32 %12693, 0
  %12714 = zext i1 %12713 to i8
  %12715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12714, i8* %12715, align 1
  %12716 = lshr i32 %12693, 31
  %12717 = trunc i32 %12716 to i8
  %12718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12717, i8* %12718, align 1
  %12719 = lshr i32 %12692, 31
  %12720 = xor i32 %12716, %12719
  %12721 = add i32 %12720, %12716
  %12722 = icmp eq i32 %12721, 2
  %12723 = zext i1 %12722 to i8
  %12724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12723, i8* %12724, align 1
  store %struct.Memory* %loadMem_40c542, %struct.Memory** %MEMORY
  %loadMem_40c545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12726 = getelementptr inbounds %struct.GPR, %struct.GPR* %12725, i32 0, i32 33
  %12727 = getelementptr inbounds %struct.Reg, %struct.Reg* %12726, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %12727 to i64*
  %12728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12729 = getelementptr inbounds %struct.GPR, %struct.GPR* %12728, i32 0, i32 1
  %12730 = getelementptr inbounds %struct.Reg, %struct.Reg* %12729, i32 0, i32 0
  %EAX.i175 = bitcast %union.anon* %12730 to i32*
  %12731 = load i32, i32* %EAX.i175
  %12732 = zext i32 %12731 to i64
  %12733 = load i64, i64* %PC.i174
  %12734 = add i64 %12733, 7
  store i64 %12734, i64* %PC.i174
  store i32 %12731, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c545, %struct.Memory** %MEMORY
  %loadMem_40c54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12736 = getelementptr inbounds %struct.GPR, %struct.GPR* %12735, i32 0, i32 33
  %12737 = getelementptr inbounds %struct.Reg, %struct.Reg* %12736, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %12737 to i64*
  %12738 = load i64, i64* %PC.i173
  %12739 = add i64 %12738, 578
  %12740 = load i64, i64* %PC.i173
  %12741 = add i64 %12740, 5
  store i64 %12741, i64* %PC.i173
  %12742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12739, i64* %12742, align 8
  store %struct.Memory* %loadMem_40c54c, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c551:                                  ; preds = %block_.L_40c498
  %loadMem_40c551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12744 = getelementptr inbounds %struct.GPR, %struct.GPR* %12743, i32 0, i32 33
  %12745 = getelementptr inbounds %struct.Reg, %struct.Reg* %12744, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %12745 to i64*
  %12746 = load i64, i64* %PC.i172
  %12747 = add i64 %12746, 5
  %12748 = load i64, i64* %PC.i172
  %12749 = add i64 %12748, 5
  store i64 %12749, i64* %PC.i172
  %12750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12747, i64* %12750, align 8
  store %struct.Memory* %loadMem_40c551, %struct.Memory** %MEMORY
  br label %block_.L_40c556

block_.L_40c556:                                  ; preds = %block_.L_40c551
  %loadMem_40c556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12752 = getelementptr inbounds %struct.GPR, %struct.GPR* %12751, i32 0, i32 33
  %12753 = getelementptr inbounds %struct.Reg, %struct.Reg* %12752, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %12753 to i64*
  %12754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12755 = getelementptr inbounds %struct.GPR, %struct.GPR* %12754, i32 0, i32 1
  %12756 = getelementptr inbounds %struct.Reg, %struct.Reg* %12755, i32 0, i32 0
  %RAX.i171 = bitcast %union.anon* %12756 to i64*
  %12757 = load i64, i64* %PC.i170
  %12758 = add i64 %12757, 7
  store i64 %12758, i64* %PC.i170
  %12759 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12760 = zext i32 %12759 to i64
  store i64 %12760, i64* %RAX.i171, align 8
  store %struct.Memory* %loadMem_40c556, %struct.Memory** %MEMORY
  %loadMem_40c55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12762 = getelementptr inbounds %struct.GPR, %struct.GPR* %12761, i32 0, i32 33
  %12763 = getelementptr inbounds %struct.Reg, %struct.Reg* %12762, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %12763 to i64*
  %12764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12765 = getelementptr inbounds %struct.GPR, %struct.GPR* %12764, i32 0, i32 1
  %12766 = getelementptr inbounds %struct.Reg, %struct.Reg* %12765, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %12766 to i64*
  %12767 = load i64, i64* %RAX.i169
  %12768 = load i64, i64* %PC.i168
  %12769 = add i64 %12768, 3
  store i64 %12769, i64* %PC.i168
  %12770 = trunc i64 %12767 to i32
  %12771 = add i32 1, %12770
  %12772 = zext i32 %12771 to i64
  store i64 %12772, i64* %RAX.i169, align 8
  %12773 = icmp ult i32 %12771, %12770
  %12774 = icmp ult i32 %12771, 1
  %12775 = or i1 %12773, %12774
  %12776 = zext i1 %12775 to i8
  %12777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12776, i8* %12777, align 1
  %12778 = and i32 %12771, 255
  %12779 = call i32 @llvm.ctpop.i32(i32 %12778)
  %12780 = trunc i32 %12779 to i8
  %12781 = and i8 %12780, 1
  %12782 = xor i8 %12781, 1
  %12783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12782, i8* %12783, align 1
  %12784 = xor i64 1, %12767
  %12785 = trunc i64 %12784 to i32
  %12786 = xor i32 %12785, %12771
  %12787 = lshr i32 %12786, 4
  %12788 = trunc i32 %12787 to i8
  %12789 = and i8 %12788, 1
  %12790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12789, i8* %12790, align 1
  %12791 = icmp eq i32 %12771, 0
  %12792 = zext i1 %12791 to i8
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12792, i8* %12793, align 1
  %12794 = lshr i32 %12771, 31
  %12795 = trunc i32 %12794 to i8
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12795, i8* %12796, align 1
  %12797 = lshr i32 %12770, 31
  %12798 = xor i32 %12794, %12797
  %12799 = add i32 %12798, %12794
  %12800 = icmp eq i32 %12799, 2
  %12801 = zext i1 %12800 to i8
  %12802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12801, i8* %12802, align 1
  store %struct.Memory* %loadMem_40c55d, %struct.Memory** %MEMORY
  %loadMem_40c560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12804 = getelementptr inbounds %struct.GPR, %struct.GPR* %12803, i32 0, i32 33
  %12805 = getelementptr inbounds %struct.Reg, %struct.Reg* %12804, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %12805 to i64*
  %12806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12807 = getelementptr inbounds %struct.GPR, %struct.GPR* %12806, i32 0, i32 1
  %12808 = getelementptr inbounds %struct.Reg, %struct.Reg* %12807, i32 0, i32 0
  %EAX.i167 = bitcast %union.anon* %12808 to i32*
  %12809 = load i32, i32* %EAX.i167
  %12810 = zext i32 %12809 to i64
  %12811 = load i64, i64* %PC.i166
  %12812 = add i64 %12811, 7
  store i64 %12812, i64* %PC.i166
  store i32 %12809, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c560, %struct.Memory** %MEMORY
  %loadMem_40c567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12814 = getelementptr inbounds %struct.GPR, %struct.GPR* %12813, i32 0, i32 33
  %12815 = getelementptr inbounds %struct.Reg, %struct.Reg* %12814, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %12815 to i64*
  %12816 = load i64, i64* %PC.i165
  %12817 = add i64 %12816, 551
  %12818 = load i64, i64* %PC.i165
  %12819 = add i64 %12818, 5
  store i64 %12819, i64* %PC.i165
  %12820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12817, i64* %12820, align 8
  store %struct.Memory* %loadMem_40c567, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c56c:                                  ; preds = %block_.L_40c338
  %loadMem_40c56c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12822 = getelementptr inbounds %struct.GPR, %struct.GPR* %12821, i32 0, i32 33
  %12823 = getelementptr inbounds %struct.Reg, %struct.Reg* %12822, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %12823 to i64*
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12825 = getelementptr inbounds %struct.GPR, %struct.GPR* %12824, i32 0, i32 1
  %12826 = getelementptr inbounds %struct.Reg, %struct.Reg* %12825, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %12826 to i64*
  %12827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12828 = getelementptr inbounds %struct.GPR, %struct.GPR* %12827, i32 0, i32 15
  %12829 = getelementptr inbounds %struct.Reg, %struct.Reg* %12828, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %12829 to i64*
  %12830 = load i64, i64* %RBP.i164
  %12831 = sub i64 %12830, 24
  %12832 = load i64, i64* %PC.i162
  %12833 = add i64 %12832, 3
  store i64 %12833, i64* %PC.i162
  %12834 = inttoptr i64 %12831 to i32*
  %12835 = load i32, i32* %12834
  %12836 = zext i32 %12835 to i64
  store i64 %12836, i64* %RAX.i163, align 8
  store %struct.Memory* %loadMem_40c56c, %struct.Memory** %MEMORY
  %loadMem_40c56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12838 = getelementptr inbounds %struct.GPR, %struct.GPR* %12837, i32 0, i32 33
  %12839 = getelementptr inbounds %struct.Reg, %struct.Reg* %12838, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %12839 to i64*
  %12840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12841 = getelementptr inbounds %struct.GPR, %struct.GPR* %12840, i32 0, i32 1
  %12842 = getelementptr inbounds %struct.Reg, %struct.Reg* %12841, i32 0, i32 0
  %EAX.i161 = bitcast %union.anon* %12842 to i32*
  %12843 = load i32, i32* %EAX.i161
  %12844 = zext i32 %12843 to i64
  %12845 = load i64, i64* %PC.i160
  %12846 = add i64 %12845, 7
  store i64 %12846, i64* %PC.i160
  store i32 %12843, i32* bitcast (%G_0x8661d0_type* @G_0x8661d0 to i32*)
  store %struct.Memory* %loadMem_40c56f, %struct.Memory** %MEMORY
  %loadMem_40c576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12848 = getelementptr inbounds %struct.GPR, %struct.GPR* %12847, i32 0, i32 33
  %12849 = getelementptr inbounds %struct.Reg, %struct.Reg* %12848, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %12849 to i64*
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12851 = getelementptr inbounds %struct.GPR, %struct.GPR* %12850, i32 0, i32 5
  %12852 = getelementptr inbounds %struct.Reg, %struct.Reg* %12851, i32 0, i32 0
  %RCX.i158 = bitcast %union.anon* %12852 to i64*
  %12853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12854 = getelementptr inbounds %struct.GPR, %struct.GPR* %12853, i32 0, i32 15
  %12855 = getelementptr inbounds %struct.Reg, %struct.Reg* %12854, i32 0, i32 0
  %RBP.i159 = bitcast %union.anon* %12855 to i64*
  %12856 = load i64, i64* %RBP.i159
  %12857 = sub i64 %12856, 24
  %12858 = load i64, i64* %PC.i157
  %12859 = add i64 %12858, 4
  store i64 %12859, i64* %PC.i157
  %12860 = inttoptr i64 %12857 to i32*
  %12861 = load i32, i32* %12860
  %12862 = sext i32 %12861 to i64
  store i64 %12862, i64* %RCX.i158, align 8
  store %struct.Memory* %loadMem_40c576, %struct.Memory** %MEMORY
  %loadMem_40c57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12864 = getelementptr inbounds %struct.GPR, %struct.GPR* %12863, i32 0, i32 33
  %12865 = getelementptr inbounds %struct.Reg, %struct.Reg* %12864, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %12865 to i64*
  %12866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12867 = getelementptr inbounds %struct.GPR, %struct.GPR* %12866, i32 0, i32 5
  %12868 = getelementptr inbounds %struct.Reg, %struct.Reg* %12867, i32 0, i32 0
  %RCX.i156 = bitcast %union.anon* %12868 to i64*
  %12869 = load i64, i64* %RCX.i156
  %12870 = mul i64 %12869, 4
  %12871 = add i64 %12870, 8807744
  %12872 = load i64, i64* %PC.i155
  %12873 = add i64 %12872, 11
  store i64 %12873, i64* %PC.i155
  %12874 = inttoptr i64 %12871 to i32*
  store i32 6, i32* %12874
  store %struct.Memory* %loadMem_40c57a, %struct.Memory** %MEMORY
  %loadMem_40c585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12876 = getelementptr inbounds %struct.GPR, %struct.GPR* %12875, i32 0, i32 33
  %12877 = getelementptr inbounds %struct.Reg, %struct.Reg* %12876, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %12877 to i64*
  %12878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12879 = getelementptr inbounds %struct.GPR, %struct.GPR* %12878, i32 0, i32 5
  %12880 = getelementptr inbounds %struct.Reg, %struct.Reg* %12879, i32 0, i32 0
  %RCX.i153 = bitcast %union.anon* %12880 to i64*
  %12881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12882 = getelementptr inbounds %struct.GPR, %struct.GPR* %12881, i32 0, i32 15
  %12883 = getelementptr inbounds %struct.Reg, %struct.Reg* %12882, i32 0, i32 0
  %RBP.i154 = bitcast %union.anon* %12883 to i64*
  %12884 = load i64, i64* %RBP.i154
  %12885 = sub i64 %12884, 20
  %12886 = load i64, i64* %PC.i152
  %12887 = add i64 %12886, 4
  store i64 %12887, i64* %PC.i152
  %12888 = inttoptr i64 %12885 to i32*
  %12889 = load i32, i32* %12888
  %12890 = sext i32 %12889 to i64
  store i64 %12890, i64* %RCX.i153, align 8
  store %struct.Memory* %loadMem_40c585, %struct.Memory** %MEMORY
  %loadMem_40c589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12892 = getelementptr inbounds %struct.GPR, %struct.GPR* %12891, i32 0, i32 33
  %12893 = getelementptr inbounds %struct.Reg, %struct.Reg* %12892, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %12893 to i64*
  %12894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12895 = getelementptr inbounds %struct.GPR, %struct.GPR* %12894, i32 0, i32 5
  %12896 = getelementptr inbounds %struct.Reg, %struct.Reg* %12895, i32 0, i32 0
  %RCX.i151 = bitcast %union.anon* %12896 to i64*
  %12897 = load i64, i64* %RCX.i151
  %12898 = mul i64 %12897, 4
  %12899 = add i64 %12898, 8807744
  %12900 = load i64, i64* %PC.i150
  %12901 = add i64 %12900, 11
  store i64 %12901, i64* %PC.i150
  %12902 = inttoptr i64 %12899 to i32*
  store i32 13, i32* %12902
  store %struct.Memory* %loadMem_40c589, %struct.Memory** %MEMORY
  %loadMem_40c594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12904 = getelementptr inbounds %struct.GPR, %struct.GPR* %12903, i32 0, i32 33
  %12905 = getelementptr inbounds %struct.Reg, %struct.Reg* %12904, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %12905 to i64*
  %12906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12907 = getelementptr inbounds %struct.GPR, %struct.GPR* %12906, i32 0, i32 5
  %12908 = getelementptr inbounds %struct.Reg, %struct.Reg* %12907, i32 0, i32 0
  %RCX.i148 = bitcast %union.anon* %12908 to i64*
  %12909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12910 = getelementptr inbounds %struct.GPR, %struct.GPR* %12909, i32 0, i32 15
  %12911 = getelementptr inbounds %struct.Reg, %struct.Reg* %12910, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %12911 to i64*
  %12912 = load i64, i64* %RBP.i149
  %12913 = sub i64 %12912, 24
  %12914 = load i64, i64* %PC.i147
  %12915 = add i64 %12914, 4
  store i64 %12915, i64* %PC.i147
  %12916 = inttoptr i64 %12913 to i32*
  %12917 = load i32, i32* %12916
  %12918 = sext i32 %12917 to i64
  store i64 %12918, i64* %RCX.i148, align 8
  store %struct.Memory* %loadMem_40c594, %struct.Memory** %MEMORY
  %loadMem_40c598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12920 = getelementptr inbounds %struct.GPR, %struct.GPR* %12919, i32 0, i32 33
  %12921 = getelementptr inbounds %struct.Reg, %struct.Reg* %12920, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %12921 to i64*
  %12922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12923 = getelementptr inbounds %struct.GPR, %struct.GPR* %12922, i32 0, i32 1
  %12924 = getelementptr inbounds %struct.Reg, %struct.Reg* %12923, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %12924 to i64*
  %12925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12926 = getelementptr inbounds %struct.GPR, %struct.GPR* %12925, i32 0, i32 5
  %12927 = getelementptr inbounds %struct.Reg, %struct.Reg* %12926, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %12927 to i64*
  %12928 = load i64, i64* %RCX.i146
  %12929 = mul i64 %12928, 4
  %12930 = add i64 %12929, 8922032
  %12931 = load i64, i64* %PC.i144
  %12932 = add i64 %12931, 7
  store i64 %12932, i64* %PC.i144
  %12933 = inttoptr i64 %12930 to i32*
  %12934 = load i32, i32* %12933
  %12935 = zext i32 %12934 to i64
  store i64 %12935, i64* %RAX.i145, align 8
  store %struct.Memory* %loadMem_40c598, %struct.Memory** %MEMORY
  %loadMem_40c59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12937 = getelementptr inbounds %struct.GPR, %struct.GPR* %12936, i32 0, i32 33
  %12938 = getelementptr inbounds %struct.Reg, %struct.Reg* %12937, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %12938 to i64*
  %12939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12940 = getelementptr inbounds %struct.GPR, %struct.GPR* %12939, i32 0, i32 1
  %12941 = getelementptr inbounds %struct.Reg, %struct.Reg* %12940, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %12941 to i64*
  %12942 = load i64, i64* %RAX.i143
  %12943 = load i64, i64* %PC.i142
  %12944 = add i64 %12943, 3
  store i64 %12944, i64* %PC.i142
  %12945 = trunc i64 %12942 to i32
  %12946 = add i32 1, %12945
  %12947 = zext i32 %12946 to i64
  store i64 %12947, i64* %RAX.i143, align 8
  %12948 = icmp ult i32 %12946, %12945
  %12949 = icmp ult i32 %12946, 1
  %12950 = or i1 %12948, %12949
  %12951 = zext i1 %12950 to i8
  %12952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12951, i8* %12952, align 1
  %12953 = and i32 %12946, 255
  %12954 = call i32 @llvm.ctpop.i32(i32 %12953)
  %12955 = trunc i32 %12954 to i8
  %12956 = and i8 %12955, 1
  %12957 = xor i8 %12956, 1
  %12958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12957, i8* %12958, align 1
  %12959 = xor i64 1, %12942
  %12960 = trunc i64 %12959 to i32
  %12961 = xor i32 %12960, %12946
  %12962 = lshr i32 %12961, 4
  %12963 = trunc i32 %12962 to i8
  %12964 = and i8 %12963, 1
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12964, i8* %12965, align 1
  %12966 = icmp eq i32 %12946, 0
  %12967 = zext i1 %12966 to i8
  %12968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12967, i8* %12968, align 1
  %12969 = lshr i32 %12946, 31
  %12970 = trunc i32 %12969 to i8
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12970, i8* %12971, align 1
  %12972 = lshr i32 %12945, 31
  %12973 = xor i32 %12969, %12972
  %12974 = add i32 %12973, %12969
  %12975 = icmp eq i32 %12974, 2
  %12976 = zext i1 %12975 to i8
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12976, i8* %12977, align 1
  store %struct.Memory* %loadMem_40c59f, %struct.Memory** %MEMORY
  %loadMem_40c5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12979 = getelementptr inbounds %struct.GPR, %struct.GPR* %12978, i32 0, i32 33
  %12980 = getelementptr inbounds %struct.Reg, %struct.Reg* %12979, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %12980 to i64*
  %12981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12982 = getelementptr inbounds %struct.GPR, %struct.GPR* %12981, i32 0, i32 1
  %12983 = getelementptr inbounds %struct.Reg, %struct.Reg* %12982, i32 0, i32 0
  %EAX.i140 = bitcast %union.anon* %12983 to i32*
  %12984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12985 = getelementptr inbounds %struct.GPR, %struct.GPR* %12984, i32 0, i32 5
  %12986 = getelementptr inbounds %struct.Reg, %struct.Reg* %12985, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %12986 to i64*
  %12987 = load i64, i64* %RCX.i141
  %12988 = mul i64 %12987, 4
  %12989 = add i64 %12988, 8922032
  %12990 = load i32, i32* %EAX.i140
  %12991 = zext i32 %12990 to i64
  %12992 = load i64, i64* %PC.i139
  %12993 = add i64 %12992, 7
  store i64 %12993, i64* %PC.i139
  %12994 = inttoptr i64 %12989 to i32*
  store i32 %12990, i32* %12994
  store %struct.Memory* %loadMem_40c5a2, %struct.Memory** %MEMORY
  %loadMem_40c5a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12996 = getelementptr inbounds %struct.GPR, %struct.GPR* %12995, i32 0, i32 33
  %12997 = getelementptr inbounds %struct.Reg, %struct.Reg* %12996, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %12997 to i64*
  %12998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12999 = getelementptr inbounds %struct.GPR, %struct.GPR* %12998, i32 0, i32 5
  %13000 = getelementptr inbounds %struct.Reg, %struct.Reg* %12999, i32 0, i32 0
  %RCX.i137 = bitcast %union.anon* %13000 to i64*
  %13001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13002 = getelementptr inbounds %struct.GPR, %struct.GPR* %13001, i32 0, i32 15
  %13003 = getelementptr inbounds %struct.Reg, %struct.Reg* %13002, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %13003 to i64*
  %13004 = load i64, i64* %RBP.i138
  %13005 = sub i64 %13004, 20
  %13006 = load i64, i64* %PC.i136
  %13007 = add i64 %13006, 4
  store i64 %13007, i64* %PC.i136
  %13008 = inttoptr i64 %13005 to i32*
  %13009 = load i32, i32* %13008
  %13010 = sext i32 %13009 to i64
  store i64 %13010, i64* %RCX.i137, align 8
  store %struct.Memory* %loadMem_40c5a9, %struct.Memory** %MEMORY
  %loadMem_40c5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13012 = getelementptr inbounds %struct.GPR, %struct.GPR* %13011, i32 0, i32 33
  %13013 = getelementptr inbounds %struct.Reg, %struct.Reg* %13012, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %13013 to i64*
  %13014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13015 = getelementptr inbounds %struct.GPR, %struct.GPR* %13014, i32 0, i32 1
  %13016 = getelementptr inbounds %struct.Reg, %struct.Reg* %13015, i32 0, i32 0
  %RAX.i134 = bitcast %union.anon* %13016 to i64*
  %13017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13018 = getelementptr inbounds %struct.GPR, %struct.GPR* %13017, i32 0, i32 5
  %13019 = getelementptr inbounds %struct.Reg, %struct.Reg* %13018, i32 0, i32 0
  %RCX.i135 = bitcast %union.anon* %13019 to i64*
  %13020 = load i64, i64* %RCX.i135
  %13021 = mul i64 %13020, 4
  %13022 = add i64 %13021, 8922032
  %13023 = load i64, i64* %PC.i133
  %13024 = add i64 %13023, 7
  store i64 %13024, i64* %PC.i133
  %13025 = inttoptr i64 %13022 to i32*
  %13026 = load i32, i32* %13025
  %13027 = zext i32 %13026 to i64
  store i64 %13027, i64* %RAX.i134, align 8
  store %struct.Memory* %loadMem_40c5ad, %struct.Memory** %MEMORY
  %loadMem_40c5b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13029 = getelementptr inbounds %struct.GPR, %struct.GPR* %13028, i32 0, i32 33
  %13030 = getelementptr inbounds %struct.Reg, %struct.Reg* %13029, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %13030 to i64*
  %13031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13032 = getelementptr inbounds %struct.GPR, %struct.GPR* %13031, i32 0, i32 1
  %13033 = getelementptr inbounds %struct.Reg, %struct.Reg* %13032, i32 0, i32 0
  %RAX.i132 = bitcast %union.anon* %13033 to i64*
  %13034 = load i64, i64* %RAX.i132
  %13035 = load i64, i64* %PC.i131
  %13036 = add i64 %13035, 3
  store i64 %13036, i64* %PC.i131
  %13037 = trunc i64 %13034 to i32
  %13038 = add i32 1, %13037
  %13039 = zext i32 %13038 to i64
  store i64 %13039, i64* %RAX.i132, align 8
  %13040 = icmp ult i32 %13038, %13037
  %13041 = icmp ult i32 %13038, 1
  %13042 = or i1 %13040, %13041
  %13043 = zext i1 %13042 to i8
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13043, i8* %13044, align 1
  %13045 = and i32 %13038, 255
  %13046 = call i32 @llvm.ctpop.i32(i32 %13045)
  %13047 = trunc i32 %13046 to i8
  %13048 = and i8 %13047, 1
  %13049 = xor i8 %13048, 1
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13049, i8* %13050, align 1
  %13051 = xor i64 1, %13034
  %13052 = trunc i64 %13051 to i32
  %13053 = xor i32 %13052, %13038
  %13054 = lshr i32 %13053, 4
  %13055 = trunc i32 %13054 to i8
  %13056 = and i8 %13055, 1
  %13057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13056, i8* %13057, align 1
  %13058 = icmp eq i32 %13038, 0
  %13059 = zext i1 %13058 to i8
  %13060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13059, i8* %13060, align 1
  %13061 = lshr i32 %13038, 31
  %13062 = trunc i32 %13061 to i8
  %13063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13062, i8* %13063, align 1
  %13064 = lshr i32 %13037, 31
  %13065 = xor i32 %13061, %13064
  %13066 = add i32 %13065, %13061
  %13067 = icmp eq i32 %13066, 2
  %13068 = zext i1 %13067 to i8
  %13069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13068, i8* %13069, align 1
  store %struct.Memory* %loadMem_40c5b4, %struct.Memory** %MEMORY
  %loadMem_40c5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13071 = getelementptr inbounds %struct.GPR, %struct.GPR* %13070, i32 0, i32 33
  %13072 = getelementptr inbounds %struct.Reg, %struct.Reg* %13071, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %13072 to i64*
  %13073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13074 = getelementptr inbounds %struct.GPR, %struct.GPR* %13073, i32 0, i32 1
  %13075 = getelementptr inbounds %struct.Reg, %struct.Reg* %13074, i32 0, i32 0
  %EAX.i129 = bitcast %union.anon* %13075 to i32*
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13077 = getelementptr inbounds %struct.GPR, %struct.GPR* %13076, i32 0, i32 5
  %13078 = getelementptr inbounds %struct.Reg, %struct.Reg* %13077, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %13078 to i64*
  %13079 = load i64, i64* %RCX.i130
  %13080 = mul i64 %13079, 4
  %13081 = add i64 %13080, 8922032
  %13082 = load i32, i32* %EAX.i129
  %13083 = zext i32 %13082 to i64
  %13084 = load i64, i64* %PC.i128
  %13085 = add i64 %13084, 7
  store i64 %13085, i64* %PC.i128
  %13086 = inttoptr i64 %13081 to i32*
  store i32 %13082, i32* %13086
  store %struct.Memory* %loadMem_40c5b7, %struct.Memory** %MEMORY
  %loadMem_40c5be = load %struct.Memory*, %struct.Memory** %MEMORY
  %13087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13088 = getelementptr inbounds %struct.GPR, %struct.GPR* %13087, i32 0, i32 33
  %13089 = getelementptr inbounds %struct.Reg, %struct.Reg* %13088, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %13089 to i64*
  %13090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13091 = getelementptr inbounds %struct.GPR, %struct.GPR* %13090, i32 0, i32 1
  %13092 = getelementptr inbounds %struct.Reg, %struct.Reg* %13091, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %13092 to i64*
  %13093 = load i64, i64* %PC.i126
  %13094 = add i64 %13093, 7
  store i64 %13094, i64* %PC.i126
  %13095 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %13096 = zext i32 %13095 to i64
  store i64 %13096, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_40c5be, %struct.Memory** %MEMORY
  %loadMem_40c5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13098 = getelementptr inbounds %struct.GPR, %struct.GPR* %13097, i32 0, i32 33
  %13099 = getelementptr inbounds %struct.Reg, %struct.Reg* %13098, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %13099 to i64*
  %13100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13101 = getelementptr inbounds %struct.GPR, %struct.GPR* %13100, i32 0, i32 1
  %13102 = getelementptr inbounds %struct.Reg, %struct.Reg* %13101, i32 0, i32 0
  %RAX.i125 = bitcast %union.anon* %13102 to i64*
  %13103 = load i64, i64* %RAX.i125
  %13104 = load i64, i64* %PC.i124
  %13105 = add i64 %13104, 3
  store i64 %13105, i64* %PC.i124
  %13106 = xor i64 1, %13103
  %13107 = trunc i64 %13106 to i32
  %13108 = and i64 %13106, 4294967295
  store i64 %13108, i64* %RAX.i125, align 8
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13109, align 1
  %13110 = and i32 %13107, 255
  %13111 = call i32 @llvm.ctpop.i32(i32 %13110)
  %13112 = trunc i32 %13111 to i8
  %13113 = and i8 %13112, 1
  %13114 = xor i8 %13113, 1
  %13115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13114, i8* %13115, align 1
  %13116 = icmp eq i32 %13107, 0
  %13117 = zext i1 %13116 to i8
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13117, i8* %13118, align 1
  %13119 = lshr i32 %13107, 31
  %13120 = trunc i32 %13119 to i8
  %13121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13120, i8* %13121, align 1
  %13122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13122, align 1
  %13123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13123, align 1
  store %struct.Memory* %loadMem_40c5c5, %struct.Memory** %MEMORY
  %loadMem_40c5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13125 = getelementptr inbounds %struct.GPR, %struct.GPR* %13124, i32 0, i32 33
  %13126 = getelementptr inbounds %struct.Reg, %struct.Reg* %13125, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %13126 to i64*
  %13127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13128 = getelementptr inbounds %struct.GPR, %struct.GPR* %13127, i32 0, i32 1
  %13129 = getelementptr inbounds %struct.Reg, %struct.Reg* %13128, i32 0, i32 0
  %EAX.i123 = bitcast %union.anon* %13129 to i32*
  %13130 = load i32, i32* %EAX.i123
  %13131 = zext i32 %13130 to i64
  %13132 = load i64, i64* %PC.i122
  %13133 = add i64 %13132, 7
  store i64 %13133, i64* %PC.i122
  store i32 %13130, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40c5c8, %struct.Memory** %MEMORY
  %loadMem_40c5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13135 = getelementptr inbounds %struct.GPR, %struct.GPR* %13134, i32 0, i32 33
  %13136 = getelementptr inbounds %struct.Reg, %struct.Reg* %13135, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %13136 to i64*
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13138 = getelementptr inbounds %struct.GPR, %struct.GPR* %13137, i32 0, i32 5
  %13139 = getelementptr inbounds %struct.Reg, %struct.Reg* %13138, i32 0, i32 0
  %RCX.i120 = bitcast %union.anon* %13139 to i64*
  %13140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13141 = getelementptr inbounds %struct.GPR, %struct.GPR* %13140, i32 0, i32 15
  %13142 = getelementptr inbounds %struct.Reg, %struct.Reg* %13141, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %13142 to i64*
  %13143 = load i64, i64* %RBP.i121
  %13144 = sub i64 %13143, 20
  %13145 = load i64, i64* %PC.i119
  %13146 = add i64 %13145, 4
  store i64 %13146, i64* %PC.i119
  %13147 = inttoptr i64 %13144 to i32*
  %13148 = load i32, i32* %13147
  %13149 = sext i32 %13148 to i64
  store i64 %13149, i64* %RCX.i120, align 8
  store %struct.Memory* %loadMem_40c5cf, %struct.Memory** %MEMORY
  %loadMem_40c5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13151 = getelementptr inbounds %struct.GPR, %struct.GPR* %13150, i32 0, i32 33
  %13152 = getelementptr inbounds %struct.Reg, %struct.Reg* %13151, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %13152 to i64*
  %13153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13154 = getelementptr inbounds %struct.GPR, %struct.GPR* %13153, i32 0, i32 1
  %13155 = getelementptr inbounds %struct.Reg, %struct.Reg* %13154, i32 0, i32 0
  %RAX.i117 = bitcast %union.anon* %13155 to i64*
  %13156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13157 = getelementptr inbounds %struct.GPR, %struct.GPR* %13156, i32 0, i32 5
  %13158 = getelementptr inbounds %struct.Reg, %struct.Reg* %13157, i32 0, i32 0
  %RCX.i118 = bitcast %union.anon* %13158 to i64*
  %13159 = load i64, i64* %RCX.i118
  %13160 = mul i64 %13159, 4
  %13161 = add i64 %13160, 9050112
  %13162 = load i64, i64* %PC.i116
  %13163 = add i64 %13162, 7
  store i64 %13163, i64* %PC.i116
  %13164 = inttoptr i64 %13161 to i32*
  %13165 = load i32, i32* %13164
  %13166 = zext i32 %13165 to i64
  store i64 %13166, i64* %RAX.i117, align 8
  store %struct.Memory* %loadMem_40c5d3, %struct.Memory** %MEMORY
  %loadMem_40c5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %13167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13168 = getelementptr inbounds %struct.GPR, %struct.GPR* %13167, i32 0, i32 33
  %13169 = getelementptr inbounds %struct.Reg, %struct.Reg* %13168, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %13169 to i64*
  %13170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13171 = getelementptr inbounds %struct.GPR, %struct.GPR* %13170, i32 0, i32 1
  %13172 = getelementptr inbounds %struct.Reg, %struct.Reg* %13171, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %13172 to i64*
  %13173 = load i64, i64* %RAX.i115
  %13174 = load i64, i64* %PC.i114
  %13175 = add i64 %13174, 7
  store i64 %13175, i64* %PC.i114
  %13176 = trunc i64 %13173 to i32
  %13177 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %13178 = xor i32 %13177, %13176
  %13179 = zext i32 %13178 to i64
  store i64 %13179, i64* %RAX.i115, align 8
  %13180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13180, align 1
  %13181 = and i32 %13178, 255
  %13182 = call i32 @llvm.ctpop.i32(i32 %13181)
  %13183 = trunc i32 %13182 to i8
  %13184 = and i8 %13183, 1
  %13185 = xor i8 %13184, 1
  %13186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13185, i8* %13186, align 1
  %13187 = icmp eq i32 %13178, 0
  %13188 = zext i1 %13187 to i8
  %13189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13188, i8* %13189, align 1
  %13190 = lshr i32 %13178, 31
  %13191 = trunc i32 %13190 to i8
  %13192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13191, i8* %13192, align 1
  %13193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13193, align 1
  %13194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13194, align 1
  store %struct.Memory* %loadMem_40c5da, %struct.Memory** %MEMORY
  %loadMem_40c5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13196 = getelementptr inbounds %struct.GPR, %struct.GPR* %13195, i32 0, i32 33
  %13197 = getelementptr inbounds %struct.Reg, %struct.Reg* %13196, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %13197 to i64*
  %13198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13199 = getelementptr inbounds %struct.GPR, %struct.GPR* %13198, i32 0, i32 1
  %13200 = getelementptr inbounds %struct.Reg, %struct.Reg* %13199, i32 0, i32 0
  %EAX.i113 = bitcast %union.anon* %13200 to i32*
  %13201 = load i32, i32* %EAX.i113
  %13202 = zext i32 %13201 to i64
  %13203 = load i64, i64* %PC.i112
  %13204 = add i64 %13203, 7
  store i64 %13204, i64* %PC.i112
  store i32 %13201, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c5e1, %struct.Memory** %MEMORY
  %loadMem_40c5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13206 = getelementptr inbounds %struct.GPR, %struct.GPR* %13205, i32 0, i32 33
  %13207 = getelementptr inbounds %struct.Reg, %struct.Reg* %13206, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %13207 to i64*
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13209 = getelementptr inbounds %struct.GPR, %struct.GPR* %13208, i32 0, i32 5
  %13210 = getelementptr inbounds %struct.Reg, %struct.Reg* %13209, i32 0, i32 0
  %RCX.i110 = bitcast %union.anon* %13210 to i64*
  %13211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13212 = getelementptr inbounds %struct.GPR, %struct.GPR* %13211, i32 0, i32 15
  %13213 = getelementptr inbounds %struct.Reg, %struct.Reg* %13212, i32 0, i32 0
  %RBP.i111 = bitcast %union.anon* %13213 to i64*
  %13214 = load i64, i64* %RBP.i111
  %13215 = sub i64 %13214, 24
  %13216 = load i64, i64* %PC.i109
  %13217 = add i64 %13216, 4
  store i64 %13217, i64* %PC.i109
  %13218 = inttoptr i64 %13215 to i32*
  %13219 = load i32, i32* %13218
  %13220 = sext i32 %13219 to i64
  store i64 %13220, i64* %RCX.i110, align 8
  store %struct.Memory* %loadMem_40c5e8, %struct.Memory** %MEMORY
  %loadMem_40c5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13222 = getelementptr inbounds %struct.GPR, %struct.GPR* %13221, i32 0, i32 33
  %13223 = getelementptr inbounds %struct.Reg, %struct.Reg* %13222, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %13223 to i64*
  %13224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13225 = getelementptr inbounds %struct.GPR, %struct.GPR* %13224, i32 0, i32 1
  %13226 = getelementptr inbounds %struct.Reg, %struct.Reg* %13225, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %13226 to i64*
  %13227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13228 = getelementptr inbounds %struct.GPR, %struct.GPR* %13227, i32 0, i32 5
  %13229 = getelementptr inbounds %struct.Reg, %struct.Reg* %13228, i32 0, i32 0
  %RCX.i108 = bitcast %union.anon* %13229 to i64*
  %13230 = load i64, i64* %RCX.i108
  %13231 = mul i64 %13230, 4
  %13232 = add i64 %13231, 9050112
  %13233 = load i64, i64* %PC.i106
  %13234 = add i64 %13233, 7
  store i64 %13234, i64* %PC.i106
  %13235 = inttoptr i64 %13232 to i32*
  %13236 = load i32, i32* %13235
  %13237 = zext i32 %13236 to i64
  store i64 %13237, i64* %RAX.i107, align 8
  store %struct.Memory* %loadMem_40c5ec, %struct.Memory** %MEMORY
  %loadMem_40c5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13239 = getelementptr inbounds %struct.GPR, %struct.GPR* %13238, i32 0, i32 33
  %13240 = getelementptr inbounds %struct.Reg, %struct.Reg* %13239, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %13240 to i64*
  %13241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13242 = getelementptr inbounds %struct.GPR, %struct.GPR* %13241, i32 0, i32 1
  %13243 = getelementptr inbounds %struct.Reg, %struct.Reg* %13242, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %13243 to i64*
  %13244 = load i64, i64* %RAX.i105
  %13245 = load i64, i64* %PC.i104
  %13246 = add i64 %13245, 7
  store i64 %13246, i64* %PC.i104
  %13247 = trunc i64 %13244 to i32
  %13248 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %13249 = xor i32 %13248, %13247
  %13250 = zext i32 %13249 to i64
  store i64 %13250, i64* %RAX.i105, align 8
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13251, align 1
  %13252 = and i32 %13249, 255
  %13253 = call i32 @llvm.ctpop.i32(i32 %13252)
  %13254 = trunc i32 %13253 to i8
  %13255 = and i8 %13254, 1
  %13256 = xor i8 %13255, 1
  %13257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13256, i8* %13257, align 1
  %13258 = icmp eq i32 %13249, 0
  %13259 = zext i1 %13258 to i8
  %13260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13259, i8* %13260, align 1
  %13261 = lshr i32 %13249, 31
  %13262 = trunc i32 %13261 to i8
  %13263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13262, i8* %13263, align 1
  %13264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13264, align 1
  %13265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13265, align 1
  store %struct.Memory* %loadMem_40c5f3, %struct.Memory** %MEMORY
  %loadMem_40c5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %13266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13267 = getelementptr inbounds %struct.GPR, %struct.GPR* %13266, i32 0, i32 33
  %13268 = getelementptr inbounds %struct.Reg, %struct.Reg* %13267, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %13268 to i64*
  %13269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13270 = getelementptr inbounds %struct.GPR, %struct.GPR* %13269, i32 0, i32 1
  %13271 = getelementptr inbounds %struct.Reg, %struct.Reg* %13270, i32 0, i32 0
  %EAX.i103 = bitcast %union.anon* %13271 to i32*
  %13272 = load i32, i32* %EAX.i103
  %13273 = zext i32 %13272 to i64
  %13274 = load i64, i64* %PC.i102
  %13275 = add i64 %13274, 7
  store i64 %13275, i64* %PC.i102
  store i32 %13272, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c5fa, %struct.Memory** %MEMORY
  %loadMem_40c601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13277 = getelementptr inbounds %struct.GPR, %struct.GPR* %13276, i32 0, i32 33
  %13278 = getelementptr inbounds %struct.Reg, %struct.Reg* %13277, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %13278 to i64*
  %13279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13280 = getelementptr inbounds %struct.GPR, %struct.GPR* %13279, i32 0, i32 15
  %13281 = getelementptr inbounds %struct.Reg, %struct.Reg* %13280, i32 0, i32 0
  %RBP.i101 = bitcast %union.anon* %13281 to i64*
  %13282 = load i64, i64* %RBP.i101
  %13283 = sub i64 %13282, 36
  %13284 = load i64, i64* %PC.i100
  %13285 = add i64 %13284, 4
  store i64 %13285, i64* %PC.i100
  %13286 = inttoptr i64 %13283 to i32*
  %13287 = load i32, i32* %13286
  %13288 = sub i32 %13287, 3
  %13289 = icmp ult i32 %13287, 3
  %13290 = zext i1 %13289 to i8
  %13291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13290, i8* %13291, align 1
  %13292 = and i32 %13288, 255
  %13293 = call i32 @llvm.ctpop.i32(i32 %13292)
  %13294 = trunc i32 %13293 to i8
  %13295 = and i8 %13294, 1
  %13296 = xor i8 %13295, 1
  %13297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13296, i8* %13297, align 1
  %13298 = xor i32 %13287, 3
  %13299 = xor i32 %13298, %13288
  %13300 = lshr i32 %13299, 4
  %13301 = trunc i32 %13300 to i8
  %13302 = and i8 %13301, 1
  %13303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13302, i8* %13303, align 1
  %13304 = icmp eq i32 %13288, 0
  %13305 = zext i1 %13304 to i8
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13305, i8* %13306, align 1
  %13307 = lshr i32 %13288, 31
  %13308 = trunc i32 %13307 to i8
  %13309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13308, i8* %13309, align 1
  %13310 = lshr i32 %13287, 31
  %13311 = xor i32 %13307, %13310
  %13312 = add i32 %13311, %13310
  %13313 = icmp eq i32 %13312, 2
  %13314 = zext i1 %13313 to i8
  %13315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13314, i8* %13315, align 1
  store %struct.Memory* %loadMem_40c601, %struct.Memory** %MEMORY
  %loadMem_40c605 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13317 = getelementptr inbounds %struct.GPR, %struct.GPR* %13316, i32 0, i32 33
  %13318 = getelementptr inbounds %struct.Reg, %struct.Reg* %13317, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %13318 to i64*
  %13319 = load i64, i64* %PC.i99
  %13320 = add i64 %13319, 181
  %13321 = load i64, i64* %PC.i99
  %13322 = add i64 %13321, 6
  %13323 = load i64, i64* %PC.i99
  %13324 = add i64 %13323, 6
  store i64 %13324, i64* %PC.i99
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13326 = load i8, i8* %13325, align 1
  %13327 = icmp eq i8 %13326, 0
  %13328 = zext i1 %13327 to i8
  store i8 %13328, i8* %BRANCH_TAKEN, align 1
  %13329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13330 = select i1 %13327, i64 %13320, i64 %13322
  store i64 %13330, i64* %13329, align 8
  store %struct.Memory* %loadMem_40c605, %struct.Memory** %MEMORY
  %loadBr_40c605 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c605 = icmp eq i8 %loadBr_40c605, 1
  br i1 %cmpBr_40c605, label %block_.L_40c6ba, label %block_40c60b

block_40c60b:                                     ; preds = %block_.L_40c56c
  %loadMem_40c60b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13332 = getelementptr inbounds %struct.GPR, %struct.GPR* %13331, i32 0, i32 33
  %13333 = getelementptr inbounds %struct.Reg, %struct.Reg* %13332, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %13333 to i64*
  %13334 = load i64, i64* %PC.i98
  %13335 = add i64 %13334, 11
  store i64 %13335, i64* %PC.i98
  store i32 13, i32* bitcast (%G_0x866714_type* @G_0x866714 to i32*)
  store %struct.Memory* %loadMem_40c60b, %struct.Memory** %MEMORY
  %loadMem_40c616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13337 = getelementptr inbounds %struct.GPR, %struct.GPR* %13336, i32 0, i32 33
  %13338 = getelementptr inbounds %struct.Reg, %struct.Reg* %13337, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %13338 to i64*
  %13339 = load i64, i64* %PC.i97
  %13340 = add i64 %13339, 11
  store i64 %13340, i64* %PC.i97
  store i32 8, i32* bitcast (%G_0x86670c_type* @G_0x86670c to i32*)
  store %struct.Memory* %loadMem_40c616, %struct.Memory** %MEMORY
  %loadMem_40c621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13342 = getelementptr inbounds %struct.GPR, %struct.GPR* %13341, i32 0, i32 33
  %13343 = getelementptr inbounds %struct.Reg, %struct.Reg* %13342, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %13343 to i64*
  %13344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13345 = getelementptr inbounds %struct.GPR, %struct.GPR* %13344, i32 0, i32 1
  %13346 = getelementptr inbounds %struct.Reg, %struct.Reg* %13345, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %13346 to i64*
  %13347 = load i64, i64* %PC.i95
  %13348 = add i64 %13347, 7
  store i64 %13348, i64* %PC.i95
  %13349 = load i32, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  %13350 = zext i32 %13349 to i64
  store i64 %13350, i64* %RAX.i96, align 8
  store %struct.Memory* %loadMem_40c621, %struct.Memory** %MEMORY
  %loadMem_40c628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13352 = getelementptr inbounds %struct.GPR, %struct.GPR* %13351, i32 0, i32 33
  %13353 = getelementptr inbounds %struct.Reg, %struct.Reg* %13352, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %13353 to i64*
  %13354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13355 = getelementptr inbounds %struct.GPR, %struct.GPR* %13354, i32 0, i32 1
  %13356 = getelementptr inbounds %struct.Reg, %struct.Reg* %13355, i32 0, i32 0
  %RAX.i94 = bitcast %union.anon* %13356 to i64*
  %13357 = load i64, i64* %RAX.i94
  %13358 = load i64, i64* %PC.i93
  %13359 = add i64 %13358, 3
  store i64 %13359, i64* %PC.i93
  %13360 = trunc i64 %13357 to i32
  %13361 = add i32 1, %13360
  %13362 = zext i32 %13361 to i64
  store i64 %13362, i64* %RAX.i94, align 8
  %13363 = icmp ult i32 %13361, %13360
  %13364 = icmp ult i32 %13361, 1
  %13365 = or i1 %13363, %13364
  %13366 = zext i1 %13365 to i8
  %13367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13366, i8* %13367, align 1
  %13368 = and i32 %13361, 255
  %13369 = call i32 @llvm.ctpop.i32(i32 %13368)
  %13370 = trunc i32 %13369 to i8
  %13371 = and i8 %13370, 1
  %13372 = xor i8 %13371, 1
  %13373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13372, i8* %13373, align 1
  %13374 = xor i64 1, %13357
  %13375 = trunc i64 %13374 to i32
  %13376 = xor i32 %13375, %13361
  %13377 = lshr i32 %13376, 4
  %13378 = trunc i32 %13377 to i8
  %13379 = and i8 %13378, 1
  %13380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13379, i8* %13380, align 1
  %13381 = icmp eq i32 %13361, 0
  %13382 = zext i1 %13381 to i8
  %13383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13382, i8* %13383, align 1
  %13384 = lshr i32 %13361, 31
  %13385 = trunc i32 %13384 to i8
  %13386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13385, i8* %13386, align 1
  %13387 = lshr i32 %13360, 31
  %13388 = xor i32 %13384, %13387
  %13389 = add i32 %13388, %13384
  %13390 = icmp eq i32 %13389, 2
  %13391 = zext i1 %13390 to i8
  %13392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13391, i8* %13392, align 1
  store %struct.Memory* %loadMem_40c628, %struct.Memory** %MEMORY
  %loadMem_40c62b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13394 = getelementptr inbounds %struct.GPR, %struct.GPR* %13393, i32 0, i32 33
  %13395 = getelementptr inbounds %struct.Reg, %struct.Reg* %13394, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %13395 to i64*
  %13396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13397 = getelementptr inbounds %struct.GPR, %struct.GPR* %13396, i32 0, i32 1
  %13398 = getelementptr inbounds %struct.Reg, %struct.Reg* %13397, i32 0, i32 0
  %EAX.i92 = bitcast %union.anon* %13398 to i32*
  %13399 = load i32, i32* %EAX.i92
  %13400 = zext i32 %13399 to i64
  %13401 = load i64, i64* %PC.i91
  %13402 = add i64 %13401, 7
  store i64 %13402, i64* %PC.i91
  store i32 %13399, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  store %struct.Memory* %loadMem_40c62b, %struct.Memory** %MEMORY
  %loadMem_40c632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13404 = getelementptr inbounds %struct.GPR, %struct.GPR* %13403, i32 0, i32 33
  %13405 = getelementptr inbounds %struct.Reg, %struct.Reg* %13404, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %13405 to i64*
  %13406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13407 = getelementptr inbounds %struct.GPR, %struct.GPR* %13406, i32 0, i32 1
  %13408 = getelementptr inbounds %struct.Reg, %struct.Reg* %13407, i32 0, i32 0
  %RAX.i90 = bitcast %union.anon* %13408 to i64*
  %13409 = load i64, i64* %PC.i89
  %13410 = add i64 %13409, 7
  store i64 %13410, i64* %PC.i89
  %13411 = load i32, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  %13412 = zext i32 %13411 to i64
  store i64 %13412, i64* %RAX.i90, align 8
  store %struct.Memory* %loadMem_40c632, %struct.Memory** %MEMORY
  %loadMem_40c639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13414 = getelementptr inbounds %struct.GPR, %struct.GPR* %13413, i32 0, i32 33
  %13415 = getelementptr inbounds %struct.Reg, %struct.Reg* %13414, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %13415 to i64*
  %13416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13417 = getelementptr inbounds %struct.GPR, %struct.GPR* %13416, i32 0, i32 1
  %13418 = getelementptr inbounds %struct.Reg, %struct.Reg* %13417, i32 0, i32 0
  %RAX.i88 = bitcast %union.anon* %13418 to i64*
  %13419 = load i64, i64* %RAX.i88
  %13420 = load i64, i64* %PC.i87
  %13421 = add i64 %13420, 3
  store i64 %13421, i64* %PC.i87
  %13422 = trunc i64 %13419 to i32
  %13423 = add i32 1, %13422
  %13424 = zext i32 %13423 to i64
  store i64 %13424, i64* %RAX.i88, align 8
  %13425 = icmp ult i32 %13423, %13422
  %13426 = icmp ult i32 %13423, 1
  %13427 = or i1 %13425, %13426
  %13428 = zext i1 %13427 to i8
  %13429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13428, i8* %13429, align 1
  %13430 = and i32 %13423, 255
  %13431 = call i32 @llvm.ctpop.i32(i32 %13430)
  %13432 = trunc i32 %13431 to i8
  %13433 = and i8 %13432, 1
  %13434 = xor i8 %13433, 1
  %13435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13434, i8* %13435, align 1
  %13436 = xor i64 1, %13419
  %13437 = trunc i64 %13436 to i32
  %13438 = xor i32 %13437, %13423
  %13439 = lshr i32 %13438, 4
  %13440 = trunc i32 %13439 to i8
  %13441 = and i8 %13440, 1
  %13442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13441, i8* %13442, align 1
  %13443 = icmp eq i32 %13423, 0
  %13444 = zext i1 %13443 to i8
  %13445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13444, i8* %13445, align 1
  %13446 = lshr i32 %13423, 31
  %13447 = trunc i32 %13446 to i8
  %13448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13447, i8* %13448, align 1
  %13449 = lshr i32 %13422, 31
  %13450 = xor i32 %13446, %13449
  %13451 = add i32 %13450, %13446
  %13452 = icmp eq i32 %13451, 2
  %13453 = zext i1 %13452 to i8
  %13454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13453, i8* %13454, align 1
  store %struct.Memory* %loadMem_40c639, %struct.Memory** %MEMORY
  %loadMem_40c63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13456 = getelementptr inbounds %struct.GPR, %struct.GPR* %13455, i32 0, i32 33
  %13457 = getelementptr inbounds %struct.Reg, %struct.Reg* %13456, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %13457 to i64*
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13459 = getelementptr inbounds %struct.GPR, %struct.GPR* %13458, i32 0, i32 1
  %13460 = getelementptr inbounds %struct.Reg, %struct.Reg* %13459, i32 0, i32 0
  %EAX.i86 = bitcast %union.anon* %13460 to i32*
  %13461 = load i32, i32* %EAX.i86
  %13462 = zext i32 %13461 to i64
  %13463 = load i64, i64* %PC.i85
  %13464 = add i64 %13463, 7
  store i64 %13464, i64* %PC.i85
  store i32 %13461, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  store %struct.Memory* %loadMem_40c63c, %struct.Memory** %MEMORY
  %loadMem_40c643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13466 = getelementptr inbounds %struct.GPR, %struct.GPR* %13465, i32 0, i32 33
  %13467 = getelementptr inbounds %struct.Reg, %struct.Reg* %13466, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %13467 to i64*
  %13468 = load i64, i64* %PC.i84
  %13469 = add i64 %13468, 11
  store i64 %13469, i64* %PC.i84
  store i32 3, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  store %struct.Memory* %loadMem_40c643, %struct.Memory** %MEMORY
  %loadMem_40c64e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13471 = getelementptr inbounds %struct.GPR, %struct.GPR* %13470, i32 0, i32 33
  %13472 = getelementptr inbounds %struct.Reg, %struct.Reg* %13471, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %13472 to i64*
  %13473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13474 = getelementptr inbounds %struct.GPR, %struct.GPR* %13473, i32 0, i32 5
  %13475 = getelementptr inbounds %struct.Reg, %struct.Reg* %13474, i32 0, i32 0
  %RCX.i83 = bitcast %union.anon* %13475 to i64*
  %13476 = load i64, i64* %PC.i82
  %13477 = add i64 %13476, 8
  store i64 %13477, i64* %PC.i82
  %13478 = load i32, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  %13479 = sext i32 %13478 to i64
  store i64 %13479, i64* %RCX.i83, align 8
  store %struct.Memory* %loadMem_40c64e, %struct.Memory** %MEMORY
  %loadMem_40c656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13481 = getelementptr inbounds %struct.GPR, %struct.GPR* %13480, i32 0, i32 33
  %13482 = getelementptr inbounds %struct.Reg, %struct.Reg* %13481, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %13482 to i64*
  %13483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13484 = getelementptr inbounds %struct.GPR, %struct.GPR* %13483, i32 0, i32 5
  %13485 = getelementptr inbounds %struct.Reg, %struct.Reg* %13484, i32 0, i32 0
  %RCX.i81 = bitcast %union.anon* %13485 to i64*
  %13486 = load i64, i64* %RCX.i81
  %13487 = mul i64 %13486, 4
  %13488 = add i64 %13487, 8778480
  %13489 = load i64, i64* %PC.i80
  %13490 = add i64 %13489, 11
  store i64 %13490, i64* %PC.i80
  %13491 = inttoptr i64 %13488 to i32*
  store i32 115, i32* %13491
  store %struct.Memory* %loadMem_40c656, %struct.Memory** %MEMORY
  %loadMem_40c661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13493 = getelementptr inbounds %struct.GPR, %struct.GPR* %13492, i32 0, i32 33
  %13494 = getelementptr inbounds %struct.Reg, %struct.Reg* %13493, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %13494 to i64*
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13496 = getelementptr inbounds %struct.GPR, %struct.GPR* %13495, i32 0, i32 1
  %13497 = getelementptr inbounds %struct.Reg, %struct.Reg* %13496, i32 0, i32 0
  %RAX.i79 = bitcast %union.anon* %13497 to i64*
  %13498 = load i64, i64* %PC.i78
  %13499 = add i64 %13498, 7
  store i64 %13499, i64* %PC.i78
  %13500 = load i32, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  %13501 = zext i32 %13500 to i64
  store i64 %13501, i64* %RAX.i79, align 8
  store %struct.Memory* %loadMem_40c661, %struct.Memory** %MEMORY
  %loadMem_40c668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13503 = getelementptr inbounds %struct.GPR, %struct.GPR* %13502, i32 0, i32 33
  %13504 = getelementptr inbounds %struct.Reg, %struct.Reg* %13503, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %13504 to i64*
  %13505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13506 = getelementptr inbounds %struct.GPR, %struct.GPR* %13505, i32 0, i32 1
  %13507 = getelementptr inbounds %struct.Reg, %struct.Reg* %13506, i32 0, i32 0
  %EAX.i77 = bitcast %union.anon* %13507 to i32*
  %13508 = load i32, i32* %EAX.i77
  %13509 = zext i32 %13508 to i64
  %13510 = load i64, i64* %PC.i76
  %13511 = add i64 %13510, 7
  store i64 %13511, i64* %PC.i76
  store i32 %13508, i32* bitcast (%G_0x8664bc_type* @G_0x8664bc to i32*)
  store %struct.Memory* %loadMem_40c668, %struct.Memory** %MEMORY
  %loadMem_40c66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13513 = getelementptr inbounds %struct.GPR, %struct.GPR* %13512, i32 0, i32 33
  %13514 = getelementptr inbounds %struct.Reg, %struct.Reg* %13513, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %13514 to i64*
  %13515 = load i64, i64* %PC.i75
  %13516 = add i64 %13515, 11
  store i64 %13516, i64* %PC.i75
  store i32 0, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  store %struct.Memory* %loadMem_40c66f, %struct.Memory** %MEMORY
  %loadMem_40c67a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13518 = getelementptr inbounds %struct.GPR, %struct.GPR* %13517, i32 0, i32 33
  %13519 = getelementptr inbounds %struct.Reg, %struct.Reg* %13518, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %13519 to i64*
  %13520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13521 = getelementptr inbounds %struct.GPR, %struct.GPR* %13520, i32 0, i32 1
  %13522 = getelementptr inbounds %struct.Reg, %struct.Reg* %13521, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %13522 to i64*
  %13523 = load i64, i64* %PC.i73
  %13524 = add i64 %13523, 7
  store i64 %13524, i64* %PC.i73
  %13525 = load i32, i32* bitcast (%G_0x8a1e54_type* @G_0x8a1e54 to i32*)
  %13526 = zext i32 %13525 to i64
  store i64 %13526, i64* %RAX.i74, align 8
  store %struct.Memory* %loadMem_40c67a, %struct.Memory** %MEMORY
  %loadMem_40c681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13528 = getelementptr inbounds %struct.GPR, %struct.GPR* %13527, i32 0, i32 33
  %13529 = getelementptr inbounds %struct.Reg, %struct.Reg* %13528, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %13529 to i64*
  %13530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13531 = getelementptr inbounds %struct.GPR, %struct.GPR* %13530, i32 0, i32 1
  %13532 = getelementptr inbounds %struct.Reg, %struct.Reg* %13531, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %13532 to i64*
  %13533 = load i64, i64* %RAX.i72
  %13534 = load i64, i64* %PC.i71
  %13535 = add i64 %13534, 7
  store i64 %13535, i64* %PC.i71
  %13536 = trunc i64 %13533 to i32
  %13537 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %13538 = xor i32 %13537, %13536
  %13539 = zext i32 %13538 to i64
  store i64 %13539, i64* %RAX.i72, align 8
  %13540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13540, align 1
  %13541 = and i32 %13538, 255
  %13542 = call i32 @llvm.ctpop.i32(i32 %13541)
  %13543 = trunc i32 %13542 to i8
  %13544 = and i8 %13543, 1
  %13545 = xor i8 %13544, 1
  %13546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13545, i8* %13546, align 1
  %13547 = icmp eq i32 %13538, 0
  %13548 = zext i1 %13547 to i8
  %13549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13548, i8* %13549, align 1
  %13550 = lshr i32 %13538, 31
  %13551 = trunc i32 %13550 to i8
  %13552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13551, i8* %13552, align 1
  %13553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13553, align 1
  %13554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13554, align 1
  store %struct.Memory* %loadMem_40c681, %struct.Memory** %MEMORY
  %loadMem_40c688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13556 = getelementptr inbounds %struct.GPR, %struct.GPR* %13555, i32 0, i32 33
  %13557 = getelementptr inbounds %struct.Reg, %struct.Reg* %13556, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %13557 to i64*
  %13558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13559 = getelementptr inbounds %struct.GPR, %struct.GPR* %13558, i32 0, i32 1
  %13560 = getelementptr inbounds %struct.Reg, %struct.Reg* %13559, i32 0, i32 0
  %EAX.i70 = bitcast %union.anon* %13560 to i32*
  %13561 = load i32, i32* %EAX.i70
  %13562 = zext i32 %13561 to i64
  %13563 = load i64, i64* %PC.i69
  %13564 = add i64 %13563, 7
  store i64 %13564, i64* %PC.i69
  store i32 %13561, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c688, %struct.Memory** %MEMORY
  %loadMem_40c68f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13566 = getelementptr inbounds %struct.GPR, %struct.GPR* %13565, i32 0, i32 33
  %13567 = getelementptr inbounds %struct.Reg, %struct.Reg* %13566, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %13567 to i64*
  %13568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13569 = getelementptr inbounds %struct.GPR, %struct.GPR* %13568, i32 0, i32 1
  %13570 = getelementptr inbounds %struct.Reg, %struct.Reg* %13569, i32 0, i32 0
  %RAX.i68 = bitcast %union.anon* %13570 to i64*
  %13571 = load i64, i64* %PC.i67
  %13572 = add i64 %13571, 7
  store i64 %13572, i64* %PC.i67
  %13573 = load i32, i32* bitcast (%G_0x8a1e4c_type* @G_0x8a1e4c to i32*)
  %13574 = zext i32 %13573 to i64
  store i64 %13574, i64* %RAX.i68, align 8
  store %struct.Memory* %loadMem_40c68f, %struct.Memory** %MEMORY
  %loadMem_40c696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13576 = getelementptr inbounds %struct.GPR, %struct.GPR* %13575, i32 0, i32 33
  %13577 = getelementptr inbounds %struct.Reg, %struct.Reg* %13576, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %13577 to i64*
  %13578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13579 = getelementptr inbounds %struct.GPR, %struct.GPR* %13578, i32 0, i32 1
  %13580 = getelementptr inbounds %struct.Reg, %struct.Reg* %13579, i32 0, i32 0
  %RAX.i66 = bitcast %union.anon* %13580 to i64*
  %13581 = load i64, i64* %RAX.i66
  %13582 = load i64, i64* %PC.i65
  %13583 = add i64 %13582, 7
  store i64 %13583, i64* %PC.i65
  %13584 = trunc i64 %13581 to i32
  %13585 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %13586 = xor i32 %13585, %13584
  %13587 = zext i32 %13586 to i64
  store i64 %13587, i64* %RAX.i66, align 8
  %13588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13588, align 1
  %13589 = and i32 %13586, 255
  %13590 = call i32 @llvm.ctpop.i32(i32 %13589)
  %13591 = trunc i32 %13590 to i8
  %13592 = and i8 %13591, 1
  %13593 = xor i8 %13592, 1
  %13594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13593, i8* %13594, align 1
  %13595 = icmp eq i32 %13586, 0
  %13596 = zext i1 %13595 to i8
  %13597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13596, i8* %13597, align 1
  %13598 = lshr i32 %13586, 31
  %13599 = trunc i32 %13598 to i8
  %13600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13599, i8* %13600, align 1
  %13601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13601, align 1
  %13602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13602, align 1
  store %struct.Memory* %loadMem_40c696, %struct.Memory** %MEMORY
  %loadMem_40c69d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13604 = getelementptr inbounds %struct.GPR, %struct.GPR* %13603, i32 0, i32 33
  %13605 = getelementptr inbounds %struct.Reg, %struct.Reg* %13604, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %13605 to i64*
  %13606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13607 = getelementptr inbounds %struct.GPR, %struct.GPR* %13606, i32 0, i32 1
  %13608 = getelementptr inbounds %struct.Reg, %struct.Reg* %13607, i32 0, i32 0
  %EAX.i64 = bitcast %union.anon* %13608 to i32*
  %13609 = load i32, i32* %EAX.i64
  %13610 = zext i32 %13609 to i64
  %13611 = load i64, i64* %PC.i63
  %13612 = add i64 %13611, 7
  store i64 %13612, i64* %PC.i63
  store i32 %13609, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c69d, %struct.Memory** %MEMORY
  %loadMem_40c6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13614 = getelementptr inbounds %struct.GPR, %struct.GPR* %13613, i32 0, i32 33
  %13615 = getelementptr inbounds %struct.Reg, %struct.Reg* %13614, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %13615 to i64*
  %13616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13617 = getelementptr inbounds %struct.GPR, %struct.GPR* %13616, i32 0, i32 1
  %13618 = getelementptr inbounds %struct.Reg, %struct.Reg* %13617, i32 0, i32 0
  %RAX.i62 = bitcast %union.anon* %13618 to i64*
  %13619 = load i64, i64* %PC.i61
  %13620 = add i64 %13619, 7
  store i64 %13620, i64* %PC.i61
  %13621 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %13622 = zext i32 %13621 to i64
  store i64 %13622, i64* %RAX.i62, align 8
  store %struct.Memory* %loadMem_40c6a4, %struct.Memory** %MEMORY
  %loadMem_40c6ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %13623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13624 = getelementptr inbounds %struct.GPR, %struct.GPR* %13623, i32 0, i32 33
  %13625 = getelementptr inbounds %struct.Reg, %struct.Reg* %13624, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %13625 to i64*
  %13626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13627 = getelementptr inbounds %struct.GPR, %struct.GPR* %13626, i32 0, i32 1
  %13628 = getelementptr inbounds %struct.Reg, %struct.Reg* %13627, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %13628 to i64*
  %13629 = load i64, i64* %RAX.i60
  %13630 = load i64, i64* %PC.i59
  %13631 = add i64 %13630, 3
  store i64 %13631, i64* %PC.i59
  %13632 = trunc i64 %13629 to i32
  %13633 = add i32 1, %13632
  %13634 = zext i32 %13633 to i64
  store i64 %13634, i64* %RAX.i60, align 8
  %13635 = icmp ult i32 %13633, %13632
  %13636 = icmp ult i32 %13633, 1
  %13637 = or i1 %13635, %13636
  %13638 = zext i1 %13637 to i8
  %13639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13638, i8* %13639, align 1
  %13640 = and i32 %13633, 255
  %13641 = call i32 @llvm.ctpop.i32(i32 %13640)
  %13642 = trunc i32 %13641 to i8
  %13643 = and i8 %13642, 1
  %13644 = xor i8 %13643, 1
  %13645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13644, i8* %13645, align 1
  %13646 = xor i64 1, %13629
  %13647 = trunc i64 %13646 to i32
  %13648 = xor i32 %13647, %13633
  %13649 = lshr i32 %13648, 4
  %13650 = trunc i32 %13649 to i8
  %13651 = and i8 %13650, 1
  %13652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13651, i8* %13652, align 1
  %13653 = icmp eq i32 %13633, 0
  %13654 = zext i1 %13653 to i8
  %13655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13654, i8* %13655, align 1
  %13656 = lshr i32 %13633, 31
  %13657 = trunc i32 %13656 to i8
  %13658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13657, i8* %13658, align 1
  %13659 = lshr i32 %13632, 31
  %13660 = xor i32 %13656, %13659
  %13661 = add i32 %13660, %13656
  %13662 = icmp eq i32 %13661, 2
  %13663 = zext i1 %13662 to i8
  %13664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13663, i8* %13664, align 1
  store %struct.Memory* %loadMem_40c6ab, %struct.Memory** %MEMORY
  %loadMem_40c6ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13666 = getelementptr inbounds %struct.GPR, %struct.GPR* %13665, i32 0, i32 33
  %13667 = getelementptr inbounds %struct.Reg, %struct.Reg* %13666, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %13667 to i64*
  %13668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13669 = getelementptr inbounds %struct.GPR, %struct.GPR* %13668, i32 0, i32 1
  %13670 = getelementptr inbounds %struct.Reg, %struct.Reg* %13669, i32 0, i32 0
  %EAX.i58 = bitcast %union.anon* %13670 to i32*
  %13671 = load i32, i32* %EAX.i58
  %13672 = zext i32 %13671 to i64
  %13673 = load i64, i64* %PC.i57
  %13674 = add i64 %13673, 7
  store i64 %13674, i64* %PC.i57
  store i32 %13671, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c6ae, %struct.Memory** %MEMORY
  %loadMem_40c6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13676 = getelementptr inbounds %struct.GPR, %struct.GPR* %13675, i32 0, i32 33
  %13677 = getelementptr inbounds %struct.Reg, %struct.Reg* %13676, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %13677 to i64*
  %13678 = load i64, i64* %PC.i56
  %13679 = add i64 %13678, 217
  %13680 = load i64, i64* %PC.i56
  %13681 = add i64 %13680, 5
  store i64 %13681, i64* %PC.i56
  %13682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13679, i64* %13682, align 8
  store %struct.Memory* %loadMem_40c6b5, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c6ba:                                  ; preds = %block_.L_40c56c
  %loadMem_40c6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %13683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13684 = getelementptr inbounds %struct.GPR, %struct.GPR* %13683, i32 0, i32 33
  %13685 = getelementptr inbounds %struct.Reg, %struct.Reg* %13684, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %13685 to i64*
  %13686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13687 = getelementptr inbounds %struct.GPR, %struct.GPR* %13686, i32 0, i32 15
  %13688 = getelementptr inbounds %struct.Reg, %struct.Reg* %13687, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %13688 to i64*
  %13689 = load i64, i64* %RBP.i55
  %13690 = sub i64 %13689, 36
  %13691 = load i64, i64* %PC.i54
  %13692 = add i64 %13691, 4
  store i64 %13692, i64* %PC.i54
  %13693 = inttoptr i64 %13690 to i32*
  %13694 = load i32, i32* %13693
  %13695 = sub i32 %13694, 4
  %13696 = icmp ult i32 %13694, 4
  %13697 = zext i1 %13696 to i8
  %13698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13697, i8* %13698, align 1
  %13699 = and i32 %13695, 255
  %13700 = call i32 @llvm.ctpop.i32(i32 %13699)
  %13701 = trunc i32 %13700 to i8
  %13702 = and i8 %13701, 1
  %13703 = xor i8 %13702, 1
  %13704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13703, i8* %13704, align 1
  %13705 = xor i32 %13694, 4
  %13706 = xor i32 %13705, %13695
  %13707 = lshr i32 %13706, 4
  %13708 = trunc i32 %13707 to i8
  %13709 = and i8 %13708, 1
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13709, i8* %13710, align 1
  %13711 = icmp eq i32 %13695, 0
  %13712 = zext i1 %13711 to i8
  %13713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13712, i8* %13713, align 1
  %13714 = lshr i32 %13695, 31
  %13715 = trunc i32 %13714 to i8
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13715, i8* %13716, align 1
  %13717 = lshr i32 %13694, 31
  %13718 = xor i32 %13714, %13717
  %13719 = add i32 %13718, %13717
  %13720 = icmp eq i32 %13719, 2
  %13721 = zext i1 %13720 to i8
  %13722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13721, i8* %13722, align 1
  store %struct.Memory* %loadMem_40c6ba, %struct.Memory** %MEMORY
  %loadMem_40c6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %13723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13724 = getelementptr inbounds %struct.GPR, %struct.GPR* %13723, i32 0, i32 33
  %13725 = getelementptr inbounds %struct.Reg, %struct.Reg* %13724, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %13725 to i64*
  %13726 = load i64, i64* %PC.i53
  %13727 = add i64 %13726, 181
  %13728 = load i64, i64* %PC.i53
  %13729 = add i64 %13728, 6
  %13730 = load i64, i64* %PC.i53
  %13731 = add i64 %13730, 6
  store i64 %13731, i64* %PC.i53
  %13732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13733 = load i8, i8* %13732, align 1
  %13734 = icmp eq i8 %13733, 0
  %13735 = zext i1 %13734 to i8
  store i8 %13735, i8* %BRANCH_TAKEN, align 1
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13737 = select i1 %13734, i64 %13727, i64 %13729
  store i64 %13737, i64* %13736, align 8
  store %struct.Memory* %loadMem_40c6be, %struct.Memory** %MEMORY
  %loadBr_40c6be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c6be = icmp eq i8 %loadBr_40c6be, 1
  br i1 %cmpBr_40c6be, label %block_.L_40c773, label %block_40c6c4

block_40c6c4:                                     ; preds = %block_.L_40c6ba
  %loadMem_40c6c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13739 = getelementptr inbounds %struct.GPR, %struct.GPR* %13738, i32 0, i32 33
  %13740 = getelementptr inbounds %struct.Reg, %struct.Reg* %13739, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %13740 to i64*
  %13741 = load i64, i64* %PC.i52
  %13742 = add i64 %13741, 11
  store i64 %13742, i64* %PC.i52
  store i32 13, i32* bitcast (%G_0x8666f8_type* @G_0x8666f8 to i32*)
  store %struct.Memory* %loadMem_40c6c4, %struct.Memory** %MEMORY
  %loadMem_40c6cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %13743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13744 = getelementptr inbounds %struct.GPR, %struct.GPR* %13743, i32 0, i32 33
  %13745 = getelementptr inbounds %struct.Reg, %struct.Reg* %13744, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %13745 to i64*
  %13746 = load i64, i64* %PC.i51
  %13747 = add i64 %13746, 11
  store i64 %13747, i64* %PC.i51
  store i32 8, i32* bitcast (%G_0x866704_type* @G_0x866704 to i32*)
  store %struct.Memory* %loadMem_40c6cf, %struct.Memory** %MEMORY
  %loadMem_40c6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %13748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13749 = getelementptr inbounds %struct.GPR, %struct.GPR* %13748, i32 0, i32 33
  %13750 = getelementptr inbounds %struct.Reg, %struct.Reg* %13749, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %13750 to i64*
  %13751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13752 = getelementptr inbounds %struct.GPR, %struct.GPR* %13751, i32 0, i32 1
  %13753 = getelementptr inbounds %struct.Reg, %struct.Reg* %13752, i32 0, i32 0
  %RAX.i50 = bitcast %union.anon* %13753 to i64*
  %13754 = load i64, i64* %PC.i49
  %13755 = add i64 %13754, 7
  store i64 %13755, i64* %PC.i49
  %13756 = load i32, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  %13757 = zext i32 %13756 to i64
  store i64 %13757, i64* %RAX.i50, align 8
  store %struct.Memory* %loadMem_40c6da, %struct.Memory** %MEMORY
  %loadMem_40c6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13759 = getelementptr inbounds %struct.GPR, %struct.GPR* %13758, i32 0, i32 33
  %13760 = getelementptr inbounds %struct.Reg, %struct.Reg* %13759, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %13760 to i64*
  %13761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13762 = getelementptr inbounds %struct.GPR, %struct.GPR* %13761, i32 0, i32 1
  %13763 = getelementptr inbounds %struct.Reg, %struct.Reg* %13762, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %13763 to i64*
  %13764 = load i64, i64* %RAX.i48
  %13765 = load i64, i64* %PC.i47
  %13766 = add i64 %13765, 3
  store i64 %13766, i64* %PC.i47
  %13767 = trunc i64 %13764 to i32
  %13768 = add i32 1, %13767
  %13769 = zext i32 %13768 to i64
  store i64 %13769, i64* %RAX.i48, align 8
  %13770 = icmp ult i32 %13768, %13767
  %13771 = icmp ult i32 %13768, 1
  %13772 = or i1 %13770, %13771
  %13773 = zext i1 %13772 to i8
  %13774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13773, i8* %13774, align 1
  %13775 = and i32 %13768, 255
  %13776 = call i32 @llvm.ctpop.i32(i32 %13775)
  %13777 = trunc i32 %13776 to i8
  %13778 = and i8 %13777, 1
  %13779 = xor i8 %13778, 1
  %13780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13779, i8* %13780, align 1
  %13781 = xor i64 1, %13764
  %13782 = trunc i64 %13781 to i32
  %13783 = xor i32 %13782, %13768
  %13784 = lshr i32 %13783, 4
  %13785 = trunc i32 %13784 to i8
  %13786 = and i8 %13785, 1
  %13787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13786, i8* %13787, align 1
  %13788 = icmp eq i32 %13768, 0
  %13789 = zext i1 %13788 to i8
  %13790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13789, i8* %13790, align 1
  %13791 = lshr i32 %13768, 31
  %13792 = trunc i32 %13791 to i8
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13792, i8* %13793, align 1
  %13794 = lshr i32 %13767, 31
  %13795 = xor i32 %13791, %13794
  %13796 = add i32 %13795, %13791
  %13797 = icmp eq i32 %13796, 2
  %13798 = zext i1 %13797 to i8
  %13799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13798, i8* %13799, align 1
  store %struct.Memory* %loadMem_40c6e1, %struct.Memory** %MEMORY
  %loadMem_40c6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13801 = getelementptr inbounds %struct.GPR, %struct.GPR* %13800, i32 0, i32 33
  %13802 = getelementptr inbounds %struct.Reg, %struct.Reg* %13801, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %13802 to i64*
  %13803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13804 = getelementptr inbounds %struct.GPR, %struct.GPR* %13803, i32 0, i32 1
  %13805 = getelementptr inbounds %struct.Reg, %struct.Reg* %13804, i32 0, i32 0
  %EAX.i46 = bitcast %union.anon* %13805 to i32*
  %13806 = load i32, i32* %EAX.i46
  %13807 = zext i32 %13806 to i64
  %13808 = load i64, i64* %PC.i45
  %13809 = add i64 %13808, 7
  store i64 %13809, i64* %PC.i45
  store i32 %13806, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  store %struct.Memory* %loadMem_40c6e4, %struct.Memory** %MEMORY
  %loadMem_40c6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13811 = getelementptr inbounds %struct.GPR, %struct.GPR* %13810, i32 0, i32 33
  %13812 = getelementptr inbounds %struct.Reg, %struct.Reg* %13811, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %13812 to i64*
  %13813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13814 = getelementptr inbounds %struct.GPR, %struct.GPR* %13813, i32 0, i32 1
  %13815 = getelementptr inbounds %struct.Reg, %struct.Reg* %13814, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %13815 to i64*
  %13816 = load i64, i64* %PC.i43
  %13817 = add i64 %13816, 7
  store i64 %13817, i64* %PC.i43
  %13818 = load i32, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  %13819 = zext i32 %13818 to i64
  store i64 %13819, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_40c6eb, %struct.Memory** %MEMORY
  %loadMem_40c6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13821 = getelementptr inbounds %struct.GPR, %struct.GPR* %13820, i32 0, i32 33
  %13822 = getelementptr inbounds %struct.Reg, %struct.Reg* %13821, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %13822 to i64*
  %13823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13824 = getelementptr inbounds %struct.GPR, %struct.GPR* %13823, i32 0, i32 1
  %13825 = getelementptr inbounds %struct.Reg, %struct.Reg* %13824, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %13825 to i64*
  %13826 = load i64, i64* %RAX.i42
  %13827 = load i64, i64* %PC.i41
  %13828 = add i64 %13827, 3
  store i64 %13828, i64* %PC.i41
  %13829 = trunc i64 %13826 to i32
  %13830 = add i32 1, %13829
  %13831 = zext i32 %13830 to i64
  store i64 %13831, i64* %RAX.i42, align 8
  %13832 = icmp ult i32 %13830, %13829
  %13833 = icmp ult i32 %13830, 1
  %13834 = or i1 %13832, %13833
  %13835 = zext i1 %13834 to i8
  %13836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13835, i8* %13836, align 1
  %13837 = and i32 %13830, 255
  %13838 = call i32 @llvm.ctpop.i32(i32 %13837)
  %13839 = trunc i32 %13838 to i8
  %13840 = and i8 %13839, 1
  %13841 = xor i8 %13840, 1
  %13842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13841, i8* %13842, align 1
  %13843 = xor i64 1, %13826
  %13844 = trunc i64 %13843 to i32
  %13845 = xor i32 %13844, %13830
  %13846 = lshr i32 %13845, 4
  %13847 = trunc i32 %13846 to i8
  %13848 = and i8 %13847, 1
  %13849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13848, i8* %13849, align 1
  %13850 = icmp eq i32 %13830, 0
  %13851 = zext i1 %13850 to i8
  %13852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13851, i8* %13852, align 1
  %13853 = lshr i32 %13830, 31
  %13854 = trunc i32 %13853 to i8
  %13855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13854, i8* %13855, align 1
  %13856 = lshr i32 %13829, 31
  %13857 = xor i32 %13853, %13856
  %13858 = add i32 %13857, %13853
  %13859 = icmp eq i32 %13858, 2
  %13860 = zext i1 %13859 to i8
  %13861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13860, i8* %13861, align 1
  store %struct.Memory* %loadMem_40c6f2, %struct.Memory** %MEMORY
  %loadMem_40c6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13863 = getelementptr inbounds %struct.GPR, %struct.GPR* %13862, i32 0, i32 33
  %13864 = getelementptr inbounds %struct.Reg, %struct.Reg* %13863, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %13864 to i64*
  %13865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13866 = getelementptr inbounds %struct.GPR, %struct.GPR* %13865, i32 0, i32 1
  %13867 = getelementptr inbounds %struct.Reg, %struct.Reg* %13866, i32 0, i32 0
  %EAX.i40 = bitcast %union.anon* %13867 to i32*
  %13868 = load i32, i32* %EAX.i40
  %13869 = zext i32 %13868 to i64
  %13870 = load i64, i64* %PC.i39
  %13871 = add i64 %13870, 7
  store i64 %13871, i64* %PC.i39
  store i32 %13868, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  store %struct.Memory* %loadMem_40c6f5, %struct.Memory** %MEMORY
  %loadMem_40c6fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13873 = getelementptr inbounds %struct.GPR, %struct.GPR* %13872, i32 0, i32 33
  %13874 = getelementptr inbounds %struct.Reg, %struct.Reg* %13873, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %13874 to i64*
  %13875 = load i64, i64* %PC.i38
  %13876 = add i64 %13875, 11
  store i64 %13876, i64* %PC.i38
  store i32 4, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  store %struct.Memory* %loadMem_40c6fc, %struct.Memory** %MEMORY
  %loadMem_40c707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13878 = getelementptr inbounds %struct.GPR, %struct.GPR* %13877, i32 0, i32 33
  %13879 = getelementptr inbounds %struct.Reg, %struct.Reg* %13878, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %13879 to i64*
  %13880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13881 = getelementptr inbounds %struct.GPR, %struct.GPR* %13880, i32 0, i32 5
  %13882 = getelementptr inbounds %struct.Reg, %struct.Reg* %13881, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %13882 to i64*
  %13883 = load i64, i64* %PC.i36
  %13884 = add i64 %13883, 8
  store i64 %13884, i64* %PC.i36
  %13885 = load i32, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  %13886 = sext i32 %13885 to i64
  store i64 %13886, i64* %RCX.i37, align 8
  store %struct.Memory* %loadMem_40c707, %struct.Memory** %MEMORY
  %loadMem_40c70f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13888 = getelementptr inbounds %struct.GPR, %struct.GPR* %13887, i32 0, i32 33
  %13889 = getelementptr inbounds %struct.Reg, %struct.Reg* %13888, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %13889 to i64*
  %13890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13891 = getelementptr inbounds %struct.GPR, %struct.GPR* %13890, i32 0, i32 5
  %13892 = getelementptr inbounds %struct.Reg, %struct.Reg* %13891, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %13892 to i64*
  %13893 = load i64, i64* %RCX.i
  %13894 = mul i64 %13893, 4
  %13895 = add i64 %13894, 8778480
  %13896 = load i64, i64* %PC.i35
  %13897 = add i64 %13896, 11
  store i64 %13897, i64* %PC.i35
  %13898 = inttoptr i64 %13895 to i32*
  store i32 113, i32* %13898
  store %struct.Memory* %loadMem_40c70f, %struct.Memory** %MEMORY
  %loadMem_40c71a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13900 = getelementptr inbounds %struct.GPR, %struct.GPR* %13899, i32 0, i32 33
  %13901 = getelementptr inbounds %struct.Reg, %struct.Reg* %13900, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %13901 to i64*
  %13902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13903 = getelementptr inbounds %struct.GPR, %struct.GPR* %13902, i32 0, i32 1
  %13904 = getelementptr inbounds %struct.Reg, %struct.Reg* %13903, i32 0, i32 0
  %RAX.i34 = bitcast %union.anon* %13904 to i64*
  %13905 = load i64, i64* %PC.i33
  %13906 = add i64 %13905, 7
  store i64 %13906, i64* %PC.i33
  %13907 = load i32, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  %13908 = zext i32 %13907 to i64
  store i64 %13908, i64* %RAX.i34, align 8
  store %struct.Memory* %loadMem_40c71a, %struct.Memory** %MEMORY
  %loadMem_40c721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13910 = getelementptr inbounds %struct.GPR, %struct.GPR* %13909, i32 0, i32 33
  %13911 = getelementptr inbounds %struct.Reg, %struct.Reg* %13910, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %13911 to i64*
  %13912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13913 = getelementptr inbounds %struct.GPR, %struct.GPR* %13912, i32 0, i32 1
  %13914 = getelementptr inbounds %struct.Reg, %struct.Reg* %13913, i32 0, i32 0
  %EAX.i32 = bitcast %union.anon* %13914 to i32*
  %13915 = load i32, i32* %EAX.i32
  %13916 = zext i32 %13915 to i64
  %13917 = load i64, i64* %PC.i31
  %13918 = add i64 %13917, 7
  store i64 %13918, i64* %PC.i31
  store i32 %13915, i32* bitcast (%G_0x8664b4_type* @G_0x8664b4 to i32*)
  store %struct.Memory* %loadMem_40c721, %struct.Memory** %MEMORY
  %loadMem_40c728 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13920 = getelementptr inbounds %struct.GPR, %struct.GPR* %13919, i32 0, i32 33
  %13921 = getelementptr inbounds %struct.Reg, %struct.Reg* %13920, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %13921 to i64*
  %13922 = load i64, i64* %PC.i30
  %13923 = add i64 %13922, 11
  store i64 %13923, i64* %PC.i30
  store i32 0, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  store %struct.Memory* %loadMem_40c728, %struct.Memory** %MEMORY
  %loadMem_40c733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13925 = getelementptr inbounds %struct.GPR, %struct.GPR* %13924, i32 0, i32 33
  %13926 = getelementptr inbounds %struct.Reg, %struct.Reg* %13925, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %13926 to i64*
  %13927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13928 = getelementptr inbounds %struct.GPR, %struct.GPR* %13927, i32 0, i32 1
  %13929 = getelementptr inbounds %struct.Reg, %struct.Reg* %13928, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %13929 to i64*
  %13930 = load i64, i64* %PC.i28
  %13931 = add i64 %13930, 7
  store i64 %13931, i64* %PC.i28
  %13932 = load i32, i32* bitcast (%G_0x8a1e38_type* @G_0x8a1e38 to i32*)
  %13933 = zext i32 %13932 to i64
  store i64 %13933, i64* %RAX.i29, align 8
  store %struct.Memory* %loadMem_40c733, %struct.Memory** %MEMORY
  %loadMem_40c73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13935 = getelementptr inbounds %struct.GPR, %struct.GPR* %13934, i32 0, i32 33
  %13936 = getelementptr inbounds %struct.Reg, %struct.Reg* %13935, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %13936 to i64*
  %13937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13938 = getelementptr inbounds %struct.GPR, %struct.GPR* %13937, i32 0, i32 1
  %13939 = getelementptr inbounds %struct.Reg, %struct.Reg* %13938, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %13939 to i64*
  %13940 = load i64, i64* %RAX.i27
  %13941 = load i64, i64* %PC.i26
  %13942 = add i64 %13941, 7
  store i64 %13942, i64* %PC.i26
  %13943 = trunc i64 %13940 to i32
  %13944 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %13945 = xor i32 %13944, %13943
  %13946 = zext i32 %13945 to i64
  store i64 %13946, i64* %RAX.i27, align 8
  %13947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13947, align 1
  %13948 = and i32 %13945, 255
  %13949 = call i32 @llvm.ctpop.i32(i32 %13948)
  %13950 = trunc i32 %13949 to i8
  %13951 = and i8 %13950, 1
  %13952 = xor i8 %13951, 1
  %13953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13952, i8* %13953, align 1
  %13954 = icmp eq i32 %13945, 0
  %13955 = zext i1 %13954 to i8
  %13956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13955, i8* %13956, align 1
  %13957 = lshr i32 %13945, 31
  %13958 = trunc i32 %13957 to i8
  %13959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13958, i8* %13959, align 1
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13960, align 1
  %13961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13961, align 1
  store %struct.Memory* %loadMem_40c73a, %struct.Memory** %MEMORY
  %loadMem_40c741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13963 = getelementptr inbounds %struct.GPR, %struct.GPR* %13962, i32 0, i32 33
  %13964 = getelementptr inbounds %struct.Reg, %struct.Reg* %13963, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %13964 to i64*
  %13965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13966 = getelementptr inbounds %struct.GPR, %struct.GPR* %13965, i32 0, i32 1
  %13967 = getelementptr inbounds %struct.Reg, %struct.Reg* %13966, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %13967 to i32*
  %13968 = load i32, i32* %EAX.i25
  %13969 = zext i32 %13968 to i64
  %13970 = load i64, i64* %PC.i24
  %13971 = add i64 %13970, 7
  store i64 %13971, i64* %PC.i24
  store i32 %13968, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c741, %struct.Memory** %MEMORY
  %loadMem_40c748 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13973 = getelementptr inbounds %struct.GPR, %struct.GPR* %13972, i32 0, i32 33
  %13974 = getelementptr inbounds %struct.Reg, %struct.Reg* %13973, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %13974 to i64*
  %13975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13976 = getelementptr inbounds %struct.GPR, %struct.GPR* %13975, i32 0, i32 1
  %13977 = getelementptr inbounds %struct.Reg, %struct.Reg* %13976, i32 0, i32 0
  %RAX.i23 = bitcast %union.anon* %13977 to i64*
  %13978 = load i64, i64* %PC.i22
  %13979 = add i64 %13978, 7
  store i64 %13979, i64* %PC.i22
  %13980 = load i32, i32* bitcast (%G_0x8a1e44_type* @G_0x8a1e44 to i32*)
  %13981 = zext i32 %13980 to i64
  store i64 %13981, i64* %RAX.i23, align 8
  store %struct.Memory* %loadMem_40c748, %struct.Memory** %MEMORY
  %loadMem_40c74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13983 = getelementptr inbounds %struct.GPR, %struct.GPR* %13982, i32 0, i32 33
  %13984 = getelementptr inbounds %struct.Reg, %struct.Reg* %13983, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %13984 to i64*
  %13985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13986 = getelementptr inbounds %struct.GPR, %struct.GPR* %13985, i32 0, i32 1
  %13987 = getelementptr inbounds %struct.Reg, %struct.Reg* %13986, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %13987 to i64*
  %13988 = load i64, i64* %RAX.i21
  %13989 = load i64, i64* %PC.i20
  %13990 = add i64 %13989, 7
  store i64 %13990, i64* %PC.i20
  %13991 = trunc i64 %13988 to i32
  %13992 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %13993 = xor i32 %13992, %13991
  %13994 = zext i32 %13993 to i64
  store i64 %13994, i64* %RAX.i21, align 8
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13995, align 1
  %13996 = and i32 %13993, 255
  %13997 = call i32 @llvm.ctpop.i32(i32 %13996)
  %13998 = trunc i32 %13997 to i8
  %13999 = and i8 %13998, 1
  %14000 = xor i8 %13999, 1
  %14001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14000, i8* %14001, align 1
  %14002 = icmp eq i32 %13993, 0
  %14003 = zext i1 %14002 to i8
  %14004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14003, i8* %14004, align 1
  %14005 = lshr i32 %13993, 31
  %14006 = trunc i32 %14005 to i8
  %14007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14006, i8* %14007, align 1
  %14008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %14008, align 1
  %14009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14009, align 1
  store %struct.Memory* %loadMem_40c74f, %struct.Memory** %MEMORY
  %loadMem_40c756 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14011 = getelementptr inbounds %struct.GPR, %struct.GPR* %14010, i32 0, i32 33
  %14012 = getelementptr inbounds %struct.Reg, %struct.Reg* %14011, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %14012 to i64*
  %14013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14014 = getelementptr inbounds %struct.GPR, %struct.GPR* %14013, i32 0, i32 1
  %14015 = getelementptr inbounds %struct.Reg, %struct.Reg* %14014, i32 0, i32 0
  %EAX.i19 = bitcast %union.anon* %14015 to i32*
  %14016 = load i32, i32* %EAX.i19
  %14017 = zext i32 %14016 to i64
  %14018 = load i64, i64* %PC.i18
  %14019 = add i64 %14018, 7
  store i64 %14019, i64* %PC.i18
  store i32 %14016, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c756, %struct.Memory** %MEMORY
  %loadMem_40c75d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14021 = getelementptr inbounds %struct.GPR, %struct.GPR* %14020, i32 0, i32 33
  %14022 = getelementptr inbounds %struct.Reg, %struct.Reg* %14021, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %14022 to i64*
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14024 = getelementptr inbounds %struct.GPR, %struct.GPR* %14023, i32 0, i32 1
  %14025 = getelementptr inbounds %struct.Reg, %struct.Reg* %14024, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %14025 to i64*
  %14026 = load i64, i64* %PC.i16
  %14027 = add i64 %14026, 7
  store i64 %14027, i64* %PC.i16
  %14028 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %14029 = zext i32 %14028 to i64
  store i64 %14029, i64* %RAX.i17, align 8
  store %struct.Memory* %loadMem_40c75d, %struct.Memory** %MEMORY
  %loadMem_40c764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14031 = getelementptr inbounds %struct.GPR, %struct.GPR* %14030, i32 0, i32 33
  %14032 = getelementptr inbounds %struct.Reg, %struct.Reg* %14031, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %14032 to i64*
  %14033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14034 = getelementptr inbounds %struct.GPR, %struct.GPR* %14033, i32 0, i32 1
  %14035 = getelementptr inbounds %struct.Reg, %struct.Reg* %14034, i32 0, i32 0
  %RAX.i15 = bitcast %union.anon* %14035 to i64*
  %14036 = load i64, i64* %RAX.i15
  %14037 = load i64, i64* %PC.i14
  %14038 = add i64 %14037, 3
  store i64 %14038, i64* %PC.i14
  %14039 = trunc i64 %14036 to i32
  %14040 = add i32 1, %14039
  %14041 = zext i32 %14040 to i64
  store i64 %14041, i64* %RAX.i15, align 8
  %14042 = icmp ult i32 %14040, %14039
  %14043 = icmp ult i32 %14040, 1
  %14044 = or i1 %14042, %14043
  %14045 = zext i1 %14044 to i8
  %14046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14045, i8* %14046, align 1
  %14047 = and i32 %14040, 255
  %14048 = call i32 @llvm.ctpop.i32(i32 %14047)
  %14049 = trunc i32 %14048 to i8
  %14050 = and i8 %14049, 1
  %14051 = xor i8 %14050, 1
  %14052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14051, i8* %14052, align 1
  %14053 = xor i64 1, %14036
  %14054 = trunc i64 %14053 to i32
  %14055 = xor i32 %14054, %14040
  %14056 = lshr i32 %14055, 4
  %14057 = trunc i32 %14056 to i8
  %14058 = and i8 %14057, 1
  %14059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14058, i8* %14059, align 1
  %14060 = icmp eq i32 %14040, 0
  %14061 = zext i1 %14060 to i8
  %14062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14061, i8* %14062, align 1
  %14063 = lshr i32 %14040, 31
  %14064 = trunc i32 %14063 to i8
  %14065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14064, i8* %14065, align 1
  %14066 = lshr i32 %14039, 31
  %14067 = xor i32 %14063, %14066
  %14068 = add i32 %14067, %14063
  %14069 = icmp eq i32 %14068, 2
  %14070 = zext i1 %14069 to i8
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14070, i8* %14071, align 1
  store %struct.Memory* %loadMem_40c764, %struct.Memory** %MEMORY
  %loadMem_40c767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14073 = getelementptr inbounds %struct.GPR, %struct.GPR* %14072, i32 0, i32 33
  %14074 = getelementptr inbounds %struct.Reg, %struct.Reg* %14073, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %14074 to i64*
  %14075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14076 = getelementptr inbounds %struct.GPR, %struct.GPR* %14075, i32 0, i32 1
  %14077 = getelementptr inbounds %struct.Reg, %struct.Reg* %14076, i32 0, i32 0
  %EAX.i13 = bitcast %union.anon* %14077 to i32*
  %14078 = load i32, i32* %EAX.i13
  %14079 = zext i32 %14078 to i64
  %14080 = load i64, i64* %PC.i12
  %14081 = add i64 %14080, 7
  store i64 %14081, i64* %PC.i12
  store i32 %14078, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c767, %struct.Memory** %MEMORY
  %loadMem_40c76e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14083 = getelementptr inbounds %struct.GPR, %struct.GPR* %14082, i32 0, i32 33
  %14084 = getelementptr inbounds %struct.Reg, %struct.Reg* %14083, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %14084 to i64*
  %14085 = load i64, i64* %PC.i11
  %14086 = add i64 %14085, 32
  %14087 = load i64, i64* %PC.i11
  %14088 = add i64 %14087, 5
  store i64 %14088, i64* %PC.i11
  %14089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14086, i64* %14089, align 8
  store %struct.Memory* %loadMem_40c76e, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c773:                                  ; preds = %block_.L_40c6ba
  %loadMem_40c773 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14091 = getelementptr inbounds %struct.GPR, %struct.GPR* %14090, i32 0, i32 33
  %14092 = getelementptr inbounds %struct.Reg, %struct.Reg* %14091, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %14092 to i64*
  %14093 = load i64, i64* %PC.i10
  %14094 = add i64 %14093, 5
  %14095 = load i64, i64* %PC.i10
  %14096 = add i64 %14095, 5
  store i64 %14096, i64* %PC.i10
  %14097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14094, i64* %14097, align 8
  store %struct.Memory* %loadMem_40c773, %struct.Memory** %MEMORY
  br label %block_.L_40c778

block_.L_40c778:                                  ; preds = %block_.L_40c773
  %loadMem_40c778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14099 = getelementptr inbounds %struct.GPR, %struct.GPR* %14098, i32 0, i32 33
  %14100 = getelementptr inbounds %struct.Reg, %struct.Reg* %14099, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %14100 to i64*
  %14101 = load i64, i64* %PC.i9
  %14102 = add i64 %14101, 5
  %14103 = load i64, i64* %PC.i9
  %14104 = add i64 %14103, 5
  store i64 %14104, i64* %PC.i9
  %14105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14102, i64* %14105, align 8
  store %struct.Memory* %loadMem_40c778, %struct.Memory** %MEMORY
  br label %block_.L_40c77d

block_.L_40c77d:                                  ; preds = %block_.L_40c778
  %loadMem_40c77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14107 = getelementptr inbounds %struct.GPR, %struct.GPR* %14106, i32 0, i32 33
  %14108 = getelementptr inbounds %struct.Reg, %struct.Reg* %14107, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %14108 to i64*
  %14109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14110 = getelementptr inbounds %struct.GPR, %struct.GPR* %14109, i32 0, i32 1
  %14111 = getelementptr inbounds %struct.Reg, %struct.Reg* %14110, i32 0, i32 0
  %RAX.i8 = bitcast %union.anon* %14111 to i64*
  %14112 = load i64, i64* %PC.i7
  %14113 = add i64 %14112, 7
  store i64 %14113, i64* %PC.i7
  %14114 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %14115 = zext i32 %14114 to i64
  store i64 %14115, i64* %RAX.i8, align 8
  store %struct.Memory* %loadMem_40c77d, %struct.Memory** %MEMORY
  %loadMem_40c784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14117 = getelementptr inbounds %struct.GPR, %struct.GPR* %14116, i32 0, i32 33
  %14118 = getelementptr inbounds %struct.Reg, %struct.Reg* %14117, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %14118 to i64*
  %14119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14120 = getelementptr inbounds %struct.GPR, %struct.GPR* %14119, i32 0, i32 1
  %14121 = getelementptr inbounds %struct.Reg, %struct.Reg* %14120, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %14121 to i64*
  %14122 = load i64, i64* %RAX.i
  %14123 = load i64, i64* %PC.i6
  %14124 = add i64 %14123, 3
  store i64 %14124, i64* %PC.i6
  %14125 = trunc i64 %14122 to i32
  %14126 = add i32 1, %14125
  %14127 = zext i32 %14126 to i64
  store i64 %14127, i64* %RAX.i, align 8
  %14128 = icmp ult i32 %14126, %14125
  %14129 = icmp ult i32 %14126, 1
  %14130 = or i1 %14128, %14129
  %14131 = zext i1 %14130 to i8
  %14132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14131, i8* %14132, align 1
  %14133 = and i32 %14126, 255
  %14134 = call i32 @llvm.ctpop.i32(i32 %14133)
  %14135 = trunc i32 %14134 to i8
  %14136 = and i8 %14135, 1
  %14137 = xor i8 %14136, 1
  %14138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14137, i8* %14138, align 1
  %14139 = xor i64 1, %14122
  %14140 = trunc i64 %14139 to i32
  %14141 = xor i32 %14140, %14126
  %14142 = lshr i32 %14141, 4
  %14143 = trunc i32 %14142 to i8
  %14144 = and i8 %14143, 1
  %14145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14144, i8* %14145, align 1
  %14146 = icmp eq i32 %14126, 0
  %14147 = zext i1 %14146 to i8
  %14148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14147, i8* %14148, align 1
  %14149 = lshr i32 %14126, 31
  %14150 = trunc i32 %14149 to i8
  %14151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14150, i8* %14151, align 1
  %14152 = lshr i32 %14125, 31
  %14153 = xor i32 %14149, %14152
  %14154 = add i32 %14153, %14149
  %14155 = icmp eq i32 %14154, 2
  %14156 = zext i1 %14155 to i8
  %14157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14156, i8* %14157, align 1
  store %struct.Memory* %loadMem_40c784, %struct.Memory** %MEMORY
  %loadMem_40c787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14159 = getelementptr inbounds %struct.GPR, %struct.GPR* %14158, i32 0, i32 33
  %14160 = getelementptr inbounds %struct.Reg, %struct.Reg* %14159, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %14160 to i64*
  %14161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14162 = getelementptr inbounds %struct.GPR, %struct.GPR* %14161, i32 0, i32 1
  %14163 = getelementptr inbounds %struct.Reg, %struct.Reg* %14162, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %14163 to i32*
  %14164 = load i32, i32* %EAX.i
  %14165 = zext i32 %14164 to i64
  %14166 = load i64, i64* %PC.i5
  %14167 = add i64 %14166, 7
  store i64 %14167, i64* %PC.i5
  store i32 %14164, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c787, %struct.Memory** %MEMORY
  br label %block_.L_40c78e

block_.L_40c78e:                                  ; preds = %block_.L_40c77d, %block_40c6c4, %block_40c60b, %block_.L_40c556, %block_40c4a2, %block_40c3e9, %block_40c25f, %block_.L_40c19a, %block_40bff5, %block_40bef0, %block_.L_40be33, %block_40bc91, %block_40bb8c, %block_.L_40b8a4
  %loadMem_40c78e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14169 = getelementptr inbounds %struct.GPR, %struct.GPR* %14168, i32 0, i32 33
  %14170 = getelementptr inbounds %struct.Reg, %struct.Reg* %14169, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %14170 to i64*
  %14171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14172 = getelementptr inbounds %struct.GPR, %struct.GPR* %14171, i32 0, i32 13
  %14173 = getelementptr inbounds %struct.Reg, %struct.Reg* %14172, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %14173 to i64*
  %14174 = load i64, i64* %RSP.i
  %14175 = load i64, i64* %PC.i4
  %14176 = add i64 %14175, 4
  store i64 %14176, i64* %PC.i4
  %14177 = add i64 64, %14174
  store i64 %14177, i64* %RSP.i, align 8
  %14178 = icmp ult i64 %14177, %14174
  %14179 = icmp ult i64 %14177, 64
  %14180 = or i1 %14178, %14179
  %14181 = zext i1 %14180 to i8
  %14182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14181, i8* %14182, align 1
  %14183 = trunc i64 %14177 to i32
  %14184 = and i32 %14183, 255
  %14185 = call i32 @llvm.ctpop.i32(i32 %14184)
  %14186 = trunc i32 %14185 to i8
  %14187 = and i8 %14186, 1
  %14188 = xor i8 %14187, 1
  %14189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14188, i8* %14189, align 1
  %14190 = xor i64 64, %14174
  %14191 = xor i64 %14190, %14177
  %14192 = lshr i64 %14191, 4
  %14193 = trunc i64 %14192 to i8
  %14194 = and i8 %14193, 1
  %14195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14194, i8* %14195, align 1
  %14196 = icmp eq i64 %14177, 0
  %14197 = zext i1 %14196 to i8
  %14198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14197, i8* %14198, align 1
  %14199 = lshr i64 %14177, 63
  %14200 = trunc i64 %14199 to i8
  %14201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14200, i8* %14201, align 1
  %14202 = lshr i64 %14174, 63
  %14203 = xor i64 %14199, %14202
  %14204 = add i64 %14203, %14199
  %14205 = icmp eq i64 %14204, 2
  %14206 = zext i1 %14205 to i8
  %14207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14206, i8* %14207, align 1
  store %struct.Memory* %loadMem_40c78e, %struct.Memory** %MEMORY
  %loadMem_40c792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14209 = getelementptr inbounds %struct.GPR, %struct.GPR* %14208, i32 0, i32 33
  %14210 = getelementptr inbounds %struct.Reg, %struct.Reg* %14209, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %14210 to i64*
  %14211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14212 = getelementptr inbounds %struct.GPR, %struct.GPR* %14211, i32 0, i32 15
  %14213 = getelementptr inbounds %struct.Reg, %struct.Reg* %14212, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %14213 to i64*
  %14214 = load i64, i64* %PC.i2
  %14215 = add i64 %14214, 1
  store i64 %14215, i64* %PC.i2
  %14216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14217 = load i64, i64* %14216, align 8
  %14218 = add i64 %14217, 8
  %14219 = inttoptr i64 %14217 to i64*
  %14220 = load i64, i64* %14219
  store i64 %14220, i64* %RBP.i3, align 8
  store i64 %14218, i64* %14216, align 8
  store %struct.Memory* %loadMem_40c792, %struct.Memory** %MEMORY
  %loadMem_40c793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14222 = getelementptr inbounds %struct.GPR, %struct.GPR* %14221, i32 0, i32 33
  %14223 = getelementptr inbounds %struct.Reg, %struct.Reg* %14222, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %14223 to i64*
  %14224 = load i64, i64* %PC.i1
  %14225 = add i64 %14224, 1
  store i64 %14225, i64* %PC.i1
  %14226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14228 = load i64, i64* %14227, align 8
  %14229 = inttoptr i64 %14228 to i64*
  %14230 = load i64, i64* %14229
  store i64 %14230, i64* %14226, align 8
  %14231 = add i64 %14228, 8
  store i64 %14231, i64* %14227, align 8
  store %struct.Memory* %loadMem_40c793, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40c793
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x40___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 64
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 64
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 64, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x880b20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x881de4___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x886bc0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8__rdi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 8
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x881de4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866790___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 1
  %17 = icmp ult i32 %15, 1
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 1
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b83c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 2
  %17 = icmp ult i32 %15, 2
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 2
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xd__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 13
  %17 = icmp ult i32 %15, 13
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 13
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b84c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866790(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b85d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866790___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866790(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40b990(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x63ae48___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x85f2f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %15, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i32 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %15, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %15, 31
  %31 = xor i32 %27, %30
  %32 = add i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40b8a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b896(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40b87f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RCX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x880b20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x85f2f0___rdi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8778480
  %15 = load i32, i32* %ESI
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x639120___rdi_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6525216
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x886bc0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x4__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x639120___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6525216
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8662f0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i32, i32* %ESI
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.DropremoveHolding(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8a0a80___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab0___r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6478512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8661c0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866540___r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x240___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 576, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661bc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x886bc0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x886bc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c78e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x639120___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6525216
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x4__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8662f0___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x85f2f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x85f2f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8778480
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8662f0___rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8662f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8662f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bb70(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866540___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xd___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 13
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 13, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ba5b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ba56(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb6b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ba77(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bb02(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40bace(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866540___rax_4____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SwitchPromoted(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RDI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.addHolding(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bafd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SwitchColor(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb02(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8a0a80___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x866540___rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab0___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6478512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661c0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__edx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x240___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 576, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x63ae48___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40bb70(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40bed4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40bc87(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x866540___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866540___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 13, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8823b0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661bc___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x639120___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6525216
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0cc0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047232
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x240___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 576, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x62dab4_type* @G_0x62dab4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6478512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8661c0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x886bc0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x886bc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40be15(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0cc0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047232
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xc___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 12
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 12, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0f00___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047808
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x62dab8_type* @G_0x62dab8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661c0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 13, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x63ae48___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866540___r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 12
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 13, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___r8_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8823b0___r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8662f0___r8_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x886bc0___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %R8, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x18___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 24, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 24
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 24, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40be33(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 12, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 12
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 12, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x881de4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8823b0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c23b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40bfeb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0f00___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047808
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c17c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xc___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 12, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 12
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 12, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 2, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x18___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 24
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 24
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 24, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c19a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 12
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 12, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 5
  %17 = icmp ult i32 %15, 5
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 5
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40c338(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x6__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 6
  %17 = icmp ult i32 %15, 6
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 6
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RSI, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866540___rax_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %ESI
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rax_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8823b0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %ESI
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661bc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x886bc0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x886bc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c56c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x86bd7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x86bd7c_type* @G_0x86bd7c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 5, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 13, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8823b0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a15c0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9049536
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c498(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x8665c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x8665c4_type* @G_0x8665c4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7__0x8665bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 7, i32* bitcast (%G_0x8665bc_type* @G_0x8665bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882434___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882434(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x88242c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x88242c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x62e4fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x866374___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1f__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 31, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866374___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x86636c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x86636c_type* @G_0x86636c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866374(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1ac4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1ac4_type* @G_0x8a1ac4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1abc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1abc_type* @G_0x8a1abc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c551(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x8665a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x8665a8_type* @G_0x8665a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7__0x8665b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 7, i32* bitcast (%G_0x8665b4_type* @G_0x8665b4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882418___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882418(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882424___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882424(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x62e4fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x866358___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1d__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 29, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866358___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866364(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x866364_type* @G_0x866364 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866358(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1aa8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1aa8_type* @G_0x8a1aa8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1ab4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1ab4_type* @G_0x8a1ab4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c556(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8661d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661d0_type* @G_0x8661d0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 6, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1800___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9050112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c6ba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866714(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x866714_type* @G_0x866714 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8__0x86670c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 8, i32* bitcast (%G_0x86670c_type* @G_0x86670c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882584___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882584(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x88257c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x88257c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x62e500(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8664c4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x73__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 115, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8664c4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8664bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8664bc_type* @G_0x8664bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8664c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e54___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e54_type* @G_0x8a1e54 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e4c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e4c_type* @G_0x8a1e4c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c773(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x8666f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x8666f8_type* @G_0x8666f8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8__0x866704(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 8, i32* bitcast (%G_0x866704_type* @G_0x866704 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882568___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882568(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882574___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882574(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4__0x62e500(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 4, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8664a8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x71__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 113, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8664a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8664b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8664b4_type* @G_0x8664b4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8664a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e38___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e38_type* @G_0x8a1e38 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e44___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e44_type* @G_0x8a1e44 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c778(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40c77d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x40___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 64, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 64
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 64, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
