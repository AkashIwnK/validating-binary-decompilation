; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x62dab4_type = type <{ [4 x i8] }>
%G_0x62dab8_type = type <{ [4 x i8] }>
%G_0x62e4fc_type = type <{ [4 x i8] }>
%G_0x62e500_type = type <{ [4 x i8] }>
%G_0x633b40_type = type <{ [4 x i8] }>
%G_0x63ae48_type = type <{ [4 x i8] }>
%G_0x85f154_type = type <{ [1 x i8] }>
%G_0x8661bc_type = type <{ [4 x i8] }>
%G_0x8661c0_type = type <{ [4 x i8] }>
%G_0x8661d0_type = type <{ [4 x i8] }>
%G_0x866358_type = type <{ [4 x i8] }>
%G_0x866364_type = type <{ [4 x i8] }>
%G_0x86636c_type = type <{ [4 x i8] }>
%G_0x866374_type = type <{ [4 x i8] }>
%G_0x8664a8_type = type <{ [4 x i8] }>
%G_0x8664b4_type = type <{ [4 x i8] }>
%G_0x8664bc_type = type <{ [4 x i8] }>
%G_0x8664c4_type = type <{ [4 x i8] }>
%G_0x8665a8_type = type <{ [4 x i8] }>
%G_0x8665b4_type = type <{ [4 x i8] }>
%G_0x8665bc_type = type <{ [4 x i8] }>
%G_0x8665c4_type = type <{ [4 x i8] }>
%G_0x8666f8_type = type <{ [4 x i8] }>
%G_0x866704_type = type <{ [4 x i8] }>
%G_0x86670c_type = type <{ [4 x i8] }>
%G_0x866714_type = type <{ [4 x i8] }>
%G_0x866790_type = type <{ [4 x i8] }>
%G_0x86bd7c_type = type <{ [4 x i8] }>
%G_0x881de4_type = type <{ [4 x i8] }>
%G_0x882418_type = type <{ [4 x i8] }>
%G_0x882424_type = type <{ [4 x i8] }>
%G_0x88242c_type = type <{ [4 x i8] }>
%G_0x882434_type = type <{ [4 x i8] }>
%G_0x882568_type = type <{ [4 x i8] }>
%G_0x882574_type = type <{ [4 x i8] }>
%G_0x88257c_type = type <{ [4 x i8] }>
%G_0x882584_type = type <{ [4 x i8] }>
%G_0x886bc0_type = type <{ [4 x i8] }>
%G_0x8a1aa8_type = type <{ [4 x i8] }>
%G_0x8a1ab4_type = type <{ [4 x i8] }>
%G_0x8a1abc_type = type <{ [4 x i8] }>
%G_0x8a1ac4_type = type <{ [4 x i8] }>
%G_0x8a1e38_type = type <{ [4 x i8] }>
%G_0x8a1e44_type = type <{ [4 x i8] }>
%G_0x8a1e4c_type = type <{ [4 x i8] }>
%G_0x8a1e54_type = type <{ [4 x i8] }>
%G__0x880b20_type = type <{ [8 x i8] }>
%G__0x8a0a80_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x62dab4 = global %G_0x62dab4_type zeroinitializer
@G_0x62dab8 = global %G_0x62dab8_type zeroinitializer
@G_0x62e4fc = global %G_0x62e4fc_type zeroinitializer
@G_0x62e500 = global %G_0x62e500_type zeroinitializer
@G_0x633b40 = global %G_0x633b40_type zeroinitializer
@G_0x63ae48 = global %G_0x63ae48_type zeroinitializer
@G_0x85f154 = global %G_0x85f154_type zeroinitializer
@G_0x8661bc = global %G_0x8661bc_type zeroinitializer
@G_0x8661c0 = global %G_0x8661c0_type zeroinitializer
@G_0x8661d0 = global %G_0x8661d0_type zeroinitializer
@G_0x866358 = global %G_0x866358_type zeroinitializer
@G_0x866364 = global %G_0x866364_type zeroinitializer
@G_0x86636c = global %G_0x86636c_type zeroinitializer
@G_0x866374 = global %G_0x866374_type zeroinitializer
@G_0x8664a8 = global %G_0x8664a8_type zeroinitializer
@G_0x8664b4 = global %G_0x8664b4_type zeroinitializer
@G_0x8664bc = global %G_0x8664bc_type zeroinitializer
@G_0x8664c4 = global %G_0x8664c4_type zeroinitializer
@G_0x8665a8 = global %G_0x8665a8_type zeroinitializer
@G_0x8665b4 = global %G_0x8665b4_type zeroinitializer
@G_0x8665bc = global %G_0x8665bc_type zeroinitializer
@G_0x8665c4 = global %G_0x8665c4_type zeroinitializer
@G_0x8666f8 = global %G_0x8666f8_type zeroinitializer
@G_0x866704 = global %G_0x866704_type zeroinitializer
@G_0x86670c = global %G_0x86670c_type zeroinitializer
@G_0x866714 = global %G_0x866714_type zeroinitializer
@G_0x866790 = global %G_0x866790_type zeroinitializer
@G_0x86bd7c = global %G_0x86bd7c_type zeroinitializer
@G_0x881de4 = global %G_0x881de4_type zeroinitializer
@G_0x882418 = global %G_0x882418_type zeroinitializer
@G_0x882424 = global %G_0x882424_type zeroinitializer
@G_0x88242c = global %G_0x88242c_type zeroinitializer
@G_0x882434 = global %G_0x882434_type zeroinitializer
@G_0x882568 = global %G_0x882568_type zeroinitializer
@G_0x882574 = global %G_0x882574_type zeroinitializer
@G_0x88257c = global %G_0x88257c_type zeroinitializer
@G_0x882584 = global %G_0x882584_type zeroinitializer
@G_0x886bc0 = global %G_0x886bc0_type zeroinitializer
@G_0x8a1aa8 = global %G_0x8a1aa8_type zeroinitializer
@G_0x8a1ab4 = global %G_0x8a1ab4_type zeroinitializer
@G_0x8a1abc = global %G_0x8a1abc_type zeroinitializer
@G_0x8a1ac4 = global %G_0x8a1ac4_type zeroinitializer
@G_0x8a1e38 = global %G_0x8a1e38_type zeroinitializer
@G_0x8a1e44 = global %G_0x8a1e44_type zeroinitializer
@G_0x8a1e4c = global %G_0x8a1e4c_type zeroinitializer
@G_0x8a1e54 = global %G_0x8a1e54_type zeroinitializer
@G__0x880b20 = global %G__0x880b20_type zeroinitializer
@G__0x8a0a80 = global %G__0x8a0a80_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4026d0.DropaddHolding(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4024b0.SwitchPromoted(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4025e0.removeHolding(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_402470.SwitchColor(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @unmake(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_40c7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_40c7a0, %struct.Memory** %MEMORY
  %loadMem_40c7a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i495 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i495
  %27 = load i64, i64* %PC.i494
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i494
  store i64 %26, i64* %RBP.i496, align 8
  store %struct.Memory* %loadMem_40c7a1, %struct.Memory** %MEMORY
  %loadMem_40c7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1537 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1538 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1538
  %36 = load i64, i64* %PC.i1537
  %37 = add i64 %36, 4
  store i64 %37, i64* %PC.i1537
  %38 = sub i64 %35, 64
  store i64 %38, i64* %RSP.i1538, align 8
  %39 = icmp ult i64 %35, 64
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 64, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_40c7a4, %struct.Memory** %MEMORY
  %loadMem_40c7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1535 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i1536 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %PC.i1535
  %74 = add i64 %73, 10
  store i64 %74, i64* %PC.i1535
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1536, align 8
  store %struct.Memory* %loadMem_40c7a8, %struct.Memory** %MEMORY
  %loadMem_40c7b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 33
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %PC.i1532 = bitcast %union.anon* %77 to i64*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 11
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %RDI.i1533 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 15
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %RBP.i1534 = bitcast %union.anon* %83 to i64*
  %84 = load i64, i64* %RBP.i1534
  %85 = sub i64 %84, 8
  %86 = load i64, i64* %RDI.i1533
  %87 = load i64, i64* %PC.i1532
  %88 = add i64 %87, 4
  store i64 %88, i64* %PC.i1532
  %89 = inttoptr i64 %85 to i64*
  store i64 %86, i64* %89
  store %struct.Memory* %loadMem_40c7b2, %struct.Memory** %MEMORY
  %loadMem_40c7b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 33
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %92 to i64*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 9
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %ESI.i1530 = bitcast %union.anon* %95 to i32*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 15
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %RBP.i1531 = bitcast %union.anon* %98 to i64*
  %99 = load i64, i64* %RBP.i1531
  %100 = sub i64 %99, 12
  %101 = load i32, i32* %ESI.i1530
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC.i1529
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC.i1529
  %105 = inttoptr i64 %100 to i32*
  store i32 %101, i32* %105
  store %struct.Memory* %loadMem_40c7b6, %struct.Memory** %MEMORY
  %loadMem_40c7b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %107 = getelementptr inbounds %struct.GPR, %struct.GPR* %106, i32 0, i32 33
  %108 = getelementptr inbounds %struct.Reg, %struct.Reg* %107, i32 0, i32 0
  %PC.i1526 = bitcast %union.anon* %108 to i64*
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 11
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %RDI.i1527 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1528 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1528
  %116 = sub i64 %115, 8
  %117 = load i64, i64* %PC.i1526
  %118 = add i64 %117, 4
  store i64 %118, i64* %PC.i1526
  %119 = inttoptr i64 %116 to i64*
  %120 = load i64, i64* %119
  store i64 %120, i64* %RDI.i1527, align 8
  store %struct.Memory* %loadMem_40c7b9, %struct.Memory** %MEMORY
  %loadMem_40c7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.GPR, %struct.GPR* %121, i32 0, i32 33
  %123 = getelementptr inbounds %struct.Reg, %struct.Reg* %122, i32 0, i32 0
  %PC.i1523 = bitcast %union.anon* %123 to i64*
  %124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %125 = getelementptr inbounds %struct.GPR, %struct.GPR* %124, i32 0, i32 5
  %126 = getelementptr inbounds %struct.Reg, %struct.Reg* %125, i32 0, i32 0
  %RCX.i1524 = bitcast %union.anon* %126 to i64*
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.GPR, %struct.GPR* %127, i32 0, i32 15
  %129 = getelementptr inbounds %struct.Reg, %struct.Reg* %128, i32 0, i32 0
  %RBP.i1525 = bitcast %union.anon* %129 to i64*
  %130 = load i64, i64* %RBP.i1525
  %131 = sub i64 %130, 12
  %132 = load i64, i64* %PC.i1523
  %133 = add i64 %132, 4
  store i64 %133, i64* %PC.i1523
  %134 = inttoptr i64 %131 to i32*
  %135 = load i32, i32* %134
  %136 = sext i32 %135 to i64
  store i64 %136, i64* %RCX.i1524, align 8
  store %struct.Memory* %loadMem_40c7bd, %struct.Memory** %MEMORY
  %loadMem_40c7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 33
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %139 to i64*
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 5
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %RCX.i1522 = bitcast %union.anon* %142 to i64*
  %143 = load i64, i64* %RCX.i1522
  %144 = load i64, i64* %PC.i1521
  %145 = add i64 %144, 4
  store i64 %145, i64* %PC.i1521
  %146 = sext i64 %143 to i128
  %147 = and i128 %146, -18446744073709551616
  %148 = zext i64 %143 to i128
  %149 = or i128 %147, %148
  %150 = mul i128 24, %149
  %151 = trunc i128 %150 to i64
  store i64 %151, i64* %RCX.i1522, align 8
  %152 = sext i64 %151 to i128
  %153 = icmp ne i128 %152, %150
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %154, i8* %155, align 1
  %156 = trunc i128 %150 to i32
  %157 = and i32 %156, 255
  %158 = call i32 @llvm.ctpop.i32(i32 %157)
  %159 = trunc i32 %158 to i8
  %160 = and i8 %159, 1
  %161 = xor i8 %160, 1
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %161, i8* %162, align 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %163, align 1
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %164, align 1
  %165 = lshr i64 %151, 63
  %166 = trunc i64 %165 to i8
  %167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %166, i8* %167, align 1
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %168, align 1
  store %struct.Memory* %loadMem_40c7c1, %struct.Memory** %MEMORY
  %loadMem_40c7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %170 = getelementptr inbounds %struct.GPR, %struct.GPR* %169, i32 0, i32 33
  %171 = getelementptr inbounds %struct.Reg, %struct.Reg* %170, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %171 to i64*
  %172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %173 = getelementptr inbounds %struct.GPR, %struct.GPR* %172, i32 0, i32 5
  %174 = getelementptr inbounds %struct.Reg, %struct.Reg* %173, i32 0, i32 0
  %RCX.i1519 = bitcast %union.anon* %174 to i64*
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %176 = getelementptr inbounds %struct.GPR, %struct.GPR* %175, i32 0, i32 11
  %177 = getelementptr inbounds %struct.Reg, %struct.Reg* %176, i32 0, i32 0
  %RDI.i1520 = bitcast %union.anon* %177 to i64*
  %178 = load i64, i64* %RDI.i1520
  %179 = load i64, i64* %RCX.i1519
  %180 = load i64, i64* %PC.i1518
  %181 = add i64 %180, 3
  store i64 %181, i64* %PC.i1518
  %182 = add i64 %179, %178
  store i64 %182, i64* %RDI.i1520, align 8
  %183 = icmp ult i64 %182, %178
  %184 = icmp ult i64 %182, %179
  %185 = or i1 %183, %184
  %186 = zext i1 %185 to i8
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %186, i8* %187, align 1
  %188 = trunc i64 %182 to i32
  %189 = and i32 %188, 255
  %190 = call i32 @llvm.ctpop.i32(i32 %189)
  %191 = trunc i32 %190 to i8
  %192 = and i8 %191, 1
  %193 = xor i8 %192, 1
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %193, i8* %194, align 1
  %195 = xor i64 %179, %178
  %196 = xor i64 %195, %182
  %197 = lshr i64 %196, 4
  %198 = trunc i64 %197 to i8
  %199 = and i8 %198, 1
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %199, i8* %200, align 1
  %201 = icmp eq i64 %182, 0
  %202 = zext i1 %201 to i8
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %202, i8* %203, align 1
  %204 = lshr i64 %182, 63
  %205 = trunc i64 %204 to i8
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %205, i8* %206, align 1
  %207 = lshr i64 %178, 63
  %208 = lshr i64 %179, 63
  %209 = xor i64 %204, %207
  %210 = xor i64 %204, %208
  %211 = add i64 %209, %210
  %212 = icmp eq i64 %211, 2
  %213 = zext i1 %212 to i8
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %213, i8* %214, align 1
  store %struct.Memory* %loadMem_40c7c5, %struct.Memory** %MEMORY
  %loadMem_40c7c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %216 = getelementptr inbounds %struct.GPR, %struct.GPR* %215, i32 0, i32 33
  %217 = getelementptr inbounds %struct.Reg, %struct.Reg* %216, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %217 to i64*
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 9
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %RSI.i1516 = bitcast %union.anon* %220 to i64*
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %222 = getelementptr inbounds %struct.GPR, %struct.GPR* %221, i32 0, i32 11
  %223 = getelementptr inbounds %struct.Reg, %struct.Reg* %222, i32 0, i32 0
  %RDI.i1517 = bitcast %union.anon* %223 to i64*
  %224 = load i64, i64* %RDI.i1517
  %225 = add i64 %224, 20
  %226 = load i64, i64* %PC.i1515
  %227 = add i64 %226, 3
  store i64 %227, i64* %PC.i1515
  %228 = inttoptr i64 %225 to i32*
  %229 = load i32, i32* %228
  %230 = zext i32 %229 to i64
  store i64 %230, i64* %RSI.i1516, align 8
  store %struct.Memory* %loadMem_40c7c8, %struct.Memory** %MEMORY
  %loadMem_40c7cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 33
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 9
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %ESI.i1513 = bitcast %union.anon* %236 to i32*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 15
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %RBP.i1514
  %241 = sub i64 %240, 16
  %242 = load i32, i32* %ESI.i1513
  %243 = zext i32 %242 to i64
  %244 = load i64, i64* %PC.i1512
  %245 = add i64 %244, 3
  store i64 %245, i64* %PC.i1512
  %246 = inttoptr i64 %241 to i32*
  store i32 %242, i32* %246
  store %struct.Memory* %loadMem_40c7cb, %struct.Memory** %MEMORY
  %loadMem_40c7ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 33
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %249 to i64*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 5
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %RCX.i1510 = bitcast %union.anon* %252 to i64*
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 15
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %RBP.i1511 = bitcast %union.anon* %255 to i64*
  %256 = load i64, i64* %RBP.i1511
  %257 = sub i64 %256, 8
  %258 = load i64, i64* %PC.i1509
  %259 = add i64 %258, 4
  store i64 %259, i64* %PC.i1509
  %260 = inttoptr i64 %257 to i64*
  %261 = load i64, i64* %260
  store i64 %261, i64* %RCX.i1510, align 8
  store %struct.Memory* %loadMem_40c7ce, %struct.Memory** %MEMORY
  %loadMem_40c7d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %263 = getelementptr inbounds %struct.GPR, %struct.GPR* %262, i32 0, i32 33
  %264 = getelementptr inbounds %struct.Reg, %struct.Reg* %263, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %264 to i64*
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %266 = getelementptr inbounds %struct.GPR, %struct.GPR* %265, i32 0, i32 11
  %267 = getelementptr inbounds %struct.Reg, %struct.Reg* %266, i32 0, i32 0
  %RDI.i1507 = bitcast %union.anon* %267 to i64*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 15
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %RBP.i1508 = bitcast %union.anon* %270 to i64*
  %271 = load i64, i64* %RBP.i1508
  %272 = sub i64 %271, 12
  %273 = load i64, i64* %PC.i1506
  %274 = add i64 %273, 4
  store i64 %274, i64* %PC.i1506
  %275 = inttoptr i64 %272 to i32*
  %276 = load i32, i32* %275
  %277 = sext i32 %276 to i64
  store i64 %277, i64* %RDI.i1507, align 8
  store %struct.Memory* %loadMem_40c7d2, %struct.Memory** %MEMORY
  %loadMem_40c7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %279 = getelementptr inbounds %struct.GPR, %struct.GPR* %278, i32 0, i32 33
  %280 = getelementptr inbounds %struct.Reg, %struct.Reg* %279, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %280 to i64*
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %282 = getelementptr inbounds %struct.GPR, %struct.GPR* %281, i32 0, i32 11
  %283 = getelementptr inbounds %struct.Reg, %struct.Reg* %282, i32 0, i32 0
  %RDI.i1505 = bitcast %union.anon* %283 to i64*
  %284 = load i64, i64* %RDI.i1505
  %285 = load i64, i64* %PC.i1504
  %286 = add i64 %285, 4
  store i64 %286, i64* %PC.i1504
  %287 = sext i64 %284 to i128
  %288 = and i128 %287, -18446744073709551616
  %289 = zext i64 %284 to i128
  %290 = or i128 %288, %289
  %291 = mul i128 24, %290
  %292 = trunc i128 %291 to i64
  store i64 %292, i64* %RDI.i1505, align 8
  %293 = sext i64 %292 to i128
  %294 = icmp ne i128 %293, %291
  %295 = zext i1 %294 to i8
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %295, i8* %296, align 1
  %297 = trunc i128 %291 to i32
  %298 = and i32 %297, 255
  %299 = call i32 @llvm.ctpop.i32(i32 %298)
  %300 = trunc i32 %299 to i8
  %301 = and i8 %300, 1
  %302 = xor i8 %301, 1
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %302, i8* %303, align 1
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %304, align 1
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %305, align 1
  %306 = lshr i64 %292, 63
  %307 = trunc i64 %306 to i8
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %307, i8* %308, align 1
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %295, i8* %309, align 1
  store %struct.Memory* %loadMem_40c7d6, %struct.Memory** %MEMORY
  %loadMem_40c7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 33
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %PC.i1501 = bitcast %union.anon* %312 to i64*
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %314 = getelementptr inbounds %struct.GPR, %struct.GPR* %313, i32 0, i32 5
  %315 = getelementptr inbounds %struct.Reg, %struct.Reg* %314, i32 0, i32 0
  %RCX.i1502 = bitcast %union.anon* %315 to i64*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %317 = getelementptr inbounds %struct.GPR, %struct.GPR* %316, i32 0, i32 11
  %318 = getelementptr inbounds %struct.Reg, %struct.Reg* %317, i32 0, i32 0
  %RDI.i1503 = bitcast %union.anon* %318 to i64*
  %319 = load i64, i64* %RCX.i1502
  %320 = load i64, i64* %RDI.i1503
  %321 = load i64, i64* %PC.i1501
  %322 = add i64 %321, 3
  store i64 %322, i64* %PC.i1501
  %323 = add i64 %320, %319
  store i64 %323, i64* %RCX.i1502, align 8
  %324 = icmp ult i64 %323, %319
  %325 = icmp ult i64 %323, %320
  %326 = or i1 %324, %325
  %327 = zext i1 %326 to i8
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %327, i8* %328, align 1
  %329 = trunc i64 %323 to i32
  %330 = and i32 %329, 255
  %331 = call i32 @llvm.ctpop.i32(i32 %330)
  %332 = trunc i32 %331 to i8
  %333 = and i8 %332, 1
  %334 = xor i8 %333, 1
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %334, i8* %335, align 1
  %336 = xor i64 %320, %319
  %337 = xor i64 %336, %323
  %338 = lshr i64 %337, 4
  %339 = trunc i64 %338 to i8
  %340 = and i8 %339, 1
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %340, i8* %341, align 1
  %342 = icmp eq i64 %323, 0
  %343 = zext i1 %342 to i8
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %343, i8* %344, align 1
  %345 = lshr i64 %323, 63
  %346 = trunc i64 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %346, i8* %347, align 1
  %348 = lshr i64 %319, 63
  %349 = lshr i64 %320, 63
  %350 = xor i64 %345, %348
  %351 = xor i64 %345, %349
  %352 = add i64 %350, %351
  %353 = icmp eq i64 %352, 2
  %354 = zext i1 %353 to i8
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %354, i8* %355, align 1
  store %struct.Memory* %loadMem_40c7da, %struct.Memory** %MEMORY
  %loadMem_40c7dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %357 = getelementptr inbounds %struct.GPR, %struct.GPR* %356, i32 0, i32 33
  %358 = getelementptr inbounds %struct.Reg, %struct.Reg* %357, i32 0, i32 0
  %PC.i1498 = bitcast %union.anon* %358 to i64*
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %360 = getelementptr inbounds %struct.GPR, %struct.GPR* %359, i32 0, i32 5
  %361 = getelementptr inbounds %struct.Reg, %struct.Reg* %360, i32 0, i32 0
  %RCX.i1499 = bitcast %union.anon* %361 to i64*
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 9
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %RSI.i1500 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %RCX.i1499
  %366 = load i64, i64* %PC.i1498
  %367 = add i64 %366, 2
  store i64 %367, i64* %PC.i1498
  %368 = inttoptr i64 %365 to i32*
  %369 = load i32, i32* %368
  %370 = zext i32 %369 to i64
  store i64 %370, i64* %RSI.i1500, align 8
  store %struct.Memory* %loadMem_40c7dd, %struct.Memory** %MEMORY
  %loadMem_40c7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %372 = getelementptr inbounds %struct.GPR, %struct.GPR* %371, i32 0, i32 33
  %373 = getelementptr inbounds %struct.Reg, %struct.Reg* %372, i32 0, i32 0
  %PC.i1495 = bitcast %union.anon* %373 to i64*
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 9
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %ESI.i1496 = bitcast %union.anon* %376 to i32*
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 15
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %RBP.i1497 = bitcast %union.anon* %379 to i64*
  %380 = load i64, i64* %RBP.i1497
  %381 = sub i64 %380, 20
  %382 = load i32, i32* %ESI.i1496
  %383 = zext i32 %382 to i64
  %384 = load i64, i64* %PC.i1495
  %385 = add i64 %384, 3
  store i64 %385, i64* %PC.i1495
  %386 = inttoptr i64 %381 to i32*
  store i32 %382, i32* %386
  store %struct.Memory* %loadMem_40c7df, %struct.Memory** %MEMORY
  %loadMem_40c7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %388 = getelementptr inbounds %struct.GPR, %struct.GPR* %387, i32 0, i32 33
  %389 = getelementptr inbounds %struct.Reg, %struct.Reg* %388, i32 0, i32 0
  %PC.i1492 = bitcast %union.anon* %389 to i64*
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %391 = getelementptr inbounds %struct.GPR, %struct.GPR* %390, i32 0, i32 5
  %392 = getelementptr inbounds %struct.Reg, %struct.Reg* %391, i32 0, i32 0
  %RCX.i1493 = bitcast %union.anon* %392 to i64*
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 15
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %RBP.i1494 = bitcast %union.anon* %395 to i64*
  %396 = load i64, i64* %RBP.i1494
  %397 = sub i64 %396, 8
  %398 = load i64, i64* %PC.i1492
  %399 = add i64 %398, 4
  store i64 %399, i64* %PC.i1492
  %400 = inttoptr i64 %397 to i64*
  %401 = load i64, i64* %400
  store i64 %401, i64* %RCX.i1493, align 8
  store %struct.Memory* %loadMem_40c7e2, %struct.Memory** %MEMORY
  %loadMem_40c7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 33
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %404 to i64*
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %406 = getelementptr inbounds %struct.GPR, %struct.GPR* %405, i32 0, i32 11
  %407 = getelementptr inbounds %struct.Reg, %struct.Reg* %406, i32 0, i32 0
  %RDI.i1490 = bitcast %union.anon* %407 to i64*
  %408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %409 = getelementptr inbounds %struct.GPR, %struct.GPR* %408, i32 0, i32 15
  %410 = getelementptr inbounds %struct.Reg, %struct.Reg* %409, i32 0, i32 0
  %RBP.i1491 = bitcast %union.anon* %410 to i64*
  %411 = load i64, i64* %RBP.i1491
  %412 = sub i64 %411, 12
  %413 = load i64, i64* %PC.i1489
  %414 = add i64 %413, 4
  store i64 %414, i64* %PC.i1489
  %415 = inttoptr i64 %412 to i32*
  %416 = load i32, i32* %415
  %417 = sext i32 %416 to i64
  store i64 %417, i64* %RDI.i1490, align 8
  store %struct.Memory* %loadMem_40c7e6, %struct.Memory** %MEMORY
  %loadMem_40c7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %419 = getelementptr inbounds %struct.GPR, %struct.GPR* %418, i32 0, i32 33
  %420 = getelementptr inbounds %struct.Reg, %struct.Reg* %419, i32 0, i32 0
  %PC.i1487 = bitcast %union.anon* %420 to i64*
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %422 = getelementptr inbounds %struct.GPR, %struct.GPR* %421, i32 0, i32 11
  %423 = getelementptr inbounds %struct.Reg, %struct.Reg* %422, i32 0, i32 0
  %RDI.i1488 = bitcast %union.anon* %423 to i64*
  %424 = load i64, i64* %RDI.i1488
  %425 = load i64, i64* %PC.i1487
  %426 = add i64 %425, 4
  store i64 %426, i64* %PC.i1487
  %427 = sext i64 %424 to i128
  %428 = and i128 %427, -18446744073709551616
  %429 = zext i64 %424 to i128
  %430 = or i128 %428, %429
  %431 = mul i128 24, %430
  %432 = trunc i128 %431 to i64
  store i64 %432, i64* %RDI.i1488, align 8
  %433 = sext i64 %432 to i128
  %434 = icmp ne i128 %433, %431
  %435 = zext i1 %434 to i8
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %435, i8* %436, align 1
  %437 = trunc i128 %431 to i32
  %438 = and i32 %437, 255
  %439 = call i32 @llvm.ctpop.i32(i32 %438)
  %440 = trunc i32 %439 to i8
  %441 = and i8 %440, 1
  %442 = xor i8 %441, 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %442, i8* %443, align 1
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %444, align 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %445, align 1
  %446 = lshr i64 %432, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %435, i8* %449, align 1
  store %struct.Memory* %loadMem_40c7ea, %struct.Memory** %MEMORY
  %loadMem_40c7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %451 = getelementptr inbounds %struct.GPR, %struct.GPR* %450, i32 0, i32 33
  %452 = getelementptr inbounds %struct.Reg, %struct.Reg* %451, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %452 to i64*
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %454 = getelementptr inbounds %struct.GPR, %struct.GPR* %453, i32 0, i32 5
  %455 = getelementptr inbounds %struct.Reg, %struct.Reg* %454, i32 0, i32 0
  %RCX.i1485 = bitcast %union.anon* %455 to i64*
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 11
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %RDI.i1486 = bitcast %union.anon* %458 to i64*
  %459 = load i64, i64* %RCX.i1485
  %460 = load i64, i64* %RDI.i1486
  %461 = load i64, i64* %PC.i1484
  %462 = add i64 %461, 3
  store i64 %462, i64* %PC.i1484
  %463 = add i64 %460, %459
  store i64 %463, i64* %RCX.i1485, align 8
  %464 = icmp ult i64 %463, %459
  %465 = icmp ult i64 %463, %460
  %466 = or i1 %464, %465
  %467 = zext i1 %466 to i8
  %468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %467, i8* %468, align 1
  %469 = trunc i64 %463 to i32
  %470 = and i32 %469, 255
  %471 = call i32 @llvm.ctpop.i32(i32 %470)
  %472 = trunc i32 %471 to i8
  %473 = and i8 %472, 1
  %474 = xor i8 %473, 1
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %474, i8* %475, align 1
  %476 = xor i64 %460, %459
  %477 = xor i64 %476, %463
  %478 = lshr i64 %477, 4
  %479 = trunc i64 %478 to i8
  %480 = and i8 %479, 1
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %480, i8* %481, align 1
  %482 = icmp eq i64 %463, 0
  %483 = zext i1 %482 to i8
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %483, i8* %484, align 1
  %485 = lshr i64 %463, 63
  %486 = trunc i64 %485 to i8
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %486, i8* %487, align 1
  %488 = lshr i64 %459, 63
  %489 = lshr i64 %460, 63
  %490 = xor i64 %485, %488
  %491 = xor i64 %485, %489
  %492 = add i64 %490, %491
  %493 = icmp eq i64 %492, 2
  %494 = zext i1 %493 to i8
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %494, i8* %495, align 1
  store %struct.Memory* %loadMem_40c7ee, %struct.Memory** %MEMORY
  %loadMem_40c7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 33
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %498 to i64*
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 5
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %RCX.i1482 = bitcast %union.anon* %501 to i64*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 9
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %RSI.i1483 = bitcast %union.anon* %504 to i64*
  %505 = load i64, i64* %RCX.i1482
  %506 = add i64 %505, 4
  %507 = load i64, i64* %PC.i1481
  %508 = add i64 %507, 3
  store i64 %508, i64* %PC.i1481
  %509 = inttoptr i64 %506 to i32*
  %510 = load i32, i32* %509
  %511 = zext i32 %510 to i64
  store i64 %511, i64* %RSI.i1483, align 8
  store %struct.Memory* %loadMem_40c7f1, %struct.Memory** %MEMORY
  %loadMem_40c7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %513 = getelementptr inbounds %struct.GPR, %struct.GPR* %512, i32 0, i32 33
  %514 = getelementptr inbounds %struct.Reg, %struct.Reg* %513, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %514 to i64*
  %515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %516 = getelementptr inbounds %struct.GPR, %struct.GPR* %515, i32 0, i32 9
  %517 = getelementptr inbounds %struct.Reg, %struct.Reg* %516, i32 0, i32 0
  %ESI.i1479 = bitcast %union.anon* %517 to i32*
  %518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %519 = getelementptr inbounds %struct.GPR, %struct.GPR* %518, i32 0, i32 15
  %520 = getelementptr inbounds %struct.Reg, %struct.Reg* %519, i32 0, i32 0
  %RBP.i1480 = bitcast %union.anon* %520 to i64*
  %521 = load i64, i64* %RBP.i1480
  %522 = sub i64 %521, 24
  %523 = load i32, i32* %ESI.i1479
  %524 = zext i32 %523 to i64
  %525 = load i64, i64* %PC.i1478
  %526 = add i64 %525, 3
  store i64 %526, i64* %PC.i1478
  %527 = inttoptr i64 %522 to i32*
  store i32 %523, i32* %527
  store %struct.Memory* %loadMem_40c7f4, %struct.Memory** %MEMORY
  %loadMem_40c7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 33
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %530 to i64*
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %532 = getelementptr inbounds %struct.GPR, %struct.GPR* %531, i32 0, i32 5
  %533 = getelementptr inbounds %struct.Reg, %struct.Reg* %532, i32 0, i32 0
  %RCX.i1476 = bitcast %union.anon* %533 to i64*
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %535 = getelementptr inbounds %struct.GPR, %struct.GPR* %534, i32 0, i32 15
  %536 = getelementptr inbounds %struct.Reg, %struct.Reg* %535, i32 0, i32 0
  %RBP.i1477 = bitcast %union.anon* %536 to i64*
  %537 = load i64, i64* %RBP.i1477
  %538 = sub i64 %537, 8
  %539 = load i64, i64* %PC.i1475
  %540 = add i64 %539, 4
  store i64 %540, i64* %PC.i1475
  %541 = inttoptr i64 %538 to i64*
  %542 = load i64, i64* %541
  store i64 %542, i64* %RCX.i1476, align 8
  store %struct.Memory* %loadMem_40c7f7, %struct.Memory** %MEMORY
  %loadMem_40c7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %544 = getelementptr inbounds %struct.GPR, %struct.GPR* %543, i32 0, i32 33
  %545 = getelementptr inbounds %struct.Reg, %struct.Reg* %544, i32 0, i32 0
  %PC.i1472 = bitcast %union.anon* %545 to i64*
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %547 = getelementptr inbounds %struct.GPR, %struct.GPR* %546, i32 0, i32 11
  %548 = getelementptr inbounds %struct.Reg, %struct.Reg* %547, i32 0, i32 0
  %RDI.i1473 = bitcast %union.anon* %548 to i64*
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 15
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %RBP.i1474 = bitcast %union.anon* %551 to i64*
  %552 = load i64, i64* %RBP.i1474
  %553 = sub i64 %552, 12
  %554 = load i64, i64* %PC.i1472
  %555 = add i64 %554, 4
  store i64 %555, i64* %PC.i1472
  %556 = inttoptr i64 %553 to i32*
  %557 = load i32, i32* %556
  %558 = sext i32 %557 to i64
  store i64 %558, i64* %RDI.i1473, align 8
  store %struct.Memory* %loadMem_40c7fb, %struct.Memory** %MEMORY
  %loadMem_40c7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 33
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %561 to i64*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 11
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RDI.i1471 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RDI.i1471
  %566 = load i64, i64* %PC.i1470
  %567 = add i64 %566, 4
  store i64 %567, i64* %PC.i1470
  %568 = sext i64 %565 to i128
  %569 = and i128 %568, -18446744073709551616
  %570 = zext i64 %565 to i128
  %571 = or i128 %569, %570
  %572 = mul i128 24, %571
  %573 = trunc i128 %572 to i64
  store i64 %573, i64* %RDI.i1471, align 8
  %574 = sext i64 %573 to i128
  %575 = icmp ne i128 %574, %572
  %576 = zext i1 %575 to i8
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %576, i8* %577, align 1
  %578 = trunc i128 %572 to i32
  %579 = and i32 %578, 255
  %580 = call i32 @llvm.ctpop.i32(i32 %579)
  %581 = trunc i32 %580 to i8
  %582 = and i8 %581, 1
  %583 = xor i8 %582, 1
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %583, i8* %584, align 1
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %585, align 1
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %586, align 1
  %587 = lshr i64 %573, 63
  %588 = trunc i64 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %588, i8* %589, align 1
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %576, i8* %590, align 1
  store %struct.Memory* %loadMem_40c7ff, %struct.Memory** %MEMORY
  %loadMem_40c803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %592 = getelementptr inbounds %struct.GPR, %struct.GPR* %591, i32 0, i32 33
  %593 = getelementptr inbounds %struct.Reg, %struct.Reg* %592, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %593 to i64*
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %595 = getelementptr inbounds %struct.GPR, %struct.GPR* %594, i32 0, i32 5
  %596 = getelementptr inbounds %struct.Reg, %struct.Reg* %595, i32 0, i32 0
  %RCX.i1468 = bitcast %union.anon* %596 to i64*
  %597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %598 = getelementptr inbounds %struct.GPR, %struct.GPR* %597, i32 0, i32 11
  %599 = getelementptr inbounds %struct.Reg, %struct.Reg* %598, i32 0, i32 0
  %RDI.i1469 = bitcast %union.anon* %599 to i64*
  %600 = load i64, i64* %RCX.i1468
  %601 = load i64, i64* %RDI.i1469
  %602 = load i64, i64* %PC.i1467
  %603 = add i64 %602, 3
  store i64 %603, i64* %PC.i1467
  %604 = add i64 %601, %600
  store i64 %604, i64* %RCX.i1468, align 8
  %605 = icmp ult i64 %604, %600
  %606 = icmp ult i64 %604, %601
  %607 = or i1 %605, %606
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %608, i8* %609, align 1
  %610 = trunc i64 %604 to i32
  %611 = and i32 %610, 255
  %612 = call i32 @llvm.ctpop.i32(i32 %611)
  %613 = trunc i32 %612 to i8
  %614 = and i8 %613, 1
  %615 = xor i8 %614, 1
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %615, i8* %616, align 1
  %617 = xor i64 %601, %600
  %618 = xor i64 %617, %604
  %619 = lshr i64 %618, 4
  %620 = trunc i64 %619 to i8
  %621 = and i8 %620, 1
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %621, i8* %622, align 1
  %623 = icmp eq i64 %604, 0
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %624, i8* %625, align 1
  %626 = lshr i64 %604, 63
  %627 = trunc i64 %626 to i8
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %627, i8* %628, align 1
  %629 = lshr i64 %600, 63
  %630 = lshr i64 %601, 63
  %631 = xor i64 %626, %629
  %632 = xor i64 %626, %630
  %633 = add i64 %631, %632
  %634 = icmp eq i64 %633, 2
  %635 = zext i1 %634 to i8
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %635, i8* %636, align 1
  store %struct.Memory* %loadMem_40c803, %struct.Memory** %MEMORY
  %loadMem_40c806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %638 = getelementptr inbounds %struct.GPR, %struct.GPR* %637, i32 0, i32 33
  %639 = getelementptr inbounds %struct.Reg, %struct.Reg* %638, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %639 to i64*
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %641 = getelementptr inbounds %struct.GPR, %struct.GPR* %640, i32 0, i32 5
  %642 = getelementptr inbounds %struct.Reg, %struct.Reg* %641, i32 0, i32 0
  %RCX.i1465 = bitcast %union.anon* %642 to i64*
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %644 = getelementptr inbounds %struct.GPR, %struct.GPR* %643, i32 0, i32 9
  %645 = getelementptr inbounds %struct.Reg, %struct.Reg* %644, i32 0, i32 0
  %RSI.i1466 = bitcast %union.anon* %645 to i64*
  %646 = load i64, i64* %RCX.i1465
  %647 = add i64 %646, 8
  %648 = load i64, i64* %PC.i1464
  %649 = add i64 %648, 3
  store i64 %649, i64* %PC.i1464
  %650 = inttoptr i64 %647 to i32*
  %651 = load i32, i32* %650
  %652 = zext i32 %651 to i64
  store i64 %652, i64* %RSI.i1466, align 8
  store %struct.Memory* %loadMem_40c806, %struct.Memory** %MEMORY
  %loadMem_40c809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %654 = getelementptr inbounds %struct.GPR, %struct.GPR* %653, i32 0, i32 33
  %655 = getelementptr inbounds %struct.Reg, %struct.Reg* %654, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %655 to i64*
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 9
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %ESI.i1462 = bitcast %union.anon* %658 to i32*
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %660 = getelementptr inbounds %struct.GPR, %struct.GPR* %659, i32 0, i32 15
  %661 = getelementptr inbounds %struct.Reg, %struct.Reg* %660, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %661 to i64*
  %662 = load i64, i64* %RBP.i1463
  %663 = sub i64 %662, 28
  %664 = load i32, i32* %ESI.i1462
  %665 = zext i32 %664 to i64
  %666 = load i64, i64* %PC.i1461
  %667 = add i64 %666, 3
  store i64 %667, i64* %PC.i1461
  %668 = inttoptr i64 %663 to i32*
  store i32 %664, i32* %668
  store %struct.Memory* %loadMem_40c809, %struct.Memory** %MEMORY
  %loadMem_40c80c = load %struct.Memory*, %struct.Memory** %MEMORY
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 33
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %671 to i64*
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 5
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %RCX.i1459 = bitcast %union.anon* %674 to i64*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 15
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RBP.i1460 = bitcast %union.anon* %677 to i64*
  %678 = load i64, i64* %RBP.i1460
  %679 = sub i64 %678, 8
  %680 = load i64, i64* %PC.i1458
  %681 = add i64 %680, 4
  store i64 %681, i64* %PC.i1458
  %682 = inttoptr i64 %679 to i64*
  %683 = load i64, i64* %682
  store i64 %683, i64* %RCX.i1459, align 8
  store %struct.Memory* %loadMem_40c80c, %struct.Memory** %MEMORY
  %loadMem_40c810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 11
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RDI.i1456 = bitcast %union.anon* %689 to i64*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 15
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RBP.i1457 = bitcast %union.anon* %692 to i64*
  %693 = load i64, i64* %RBP.i1457
  %694 = sub i64 %693, 12
  %695 = load i64, i64* %PC.i1455
  %696 = add i64 %695, 4
  store i64 %696, i64* %PC.i1455
  %697 = inttoptr i64 %694 to i32*
  %698 = load i32, i32* %697
  %699 = sext i32 %698 to i64
  store i64 %699, i64* %RDI.i1456, align 8
  store %struct.Memory* %loadMem_40c810, %struct.Memory** %MEMORY
  %loadMem_40c814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 33
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %702 to i64*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 11
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %RDI.i1454 = bitcast %union.anon* %705 to i64*
  %706 = load i64, i64* %RDI.i1454
  %707 = load i64, i64* %PC.i1453
  %708 = add i64 %707, 4
  store i64 %708, i64* %PC.i1453
  %709 = sext i64 %706 to i128
  %710 = and i128 %709, -18446744073709551616
  %711 = zext i64 %706 to i128
  %712 = or i128 %710, %711
  %713 = mul i128 24, %712
  %714 = trunc i128 %713 to i64
  store i64 %714, i64* %RDI.i1454, align 8
  %715 = sext i64 %714 to i128
  %716 = icmp ne i128 %715, %713
  %717 = zext i1 %716 to i8
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %717, i8* %718, align 1
  %719 = trunc i128 %713 to i32
  %720 = and i32 %719, 255
  %721 = call i32 @llvm.ctpop.i32(i32 %720)
  %722 = trunc i32 %721 to i8
  %723 = and i8 %722, 1
  %724 = xor i8 %723, 1
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %724, i8* %725, align 1
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %726, align 1
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %727, align 1
  %728 = lshr i64 %714, 63
  %729 = trunc i64 %728 to i8
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %729, i8* %730, align 1
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %717, i8* %731, align 1
  store %struct.Memory* %loadMem_40c814, %struct.Memory** %MEMORY
  %loadMem_40c818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 33
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %734 to i64*
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 5
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %RCX.i1451 = bitcast %union.anon* %737 to i64*
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 11
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %RDI.i1452 = bitcast %union.anon* %740 to i64*
  %741 = load i64, i64* %RCX.i1451
  %742 = load i64, i64* %RDI.i1452
  %743 = load i64, i64* %PC.i1450
  %744 = add i64 %743, 3
  store i64 %744, i64* %PC.i1450
  %745 = add i64 %742, %741
  store i64 %745, i64* %RCX.i1451, align 8
  %746 = icmp ult i64 %745, %741
  %747 = icmp ult i64 %745, %742
  %748 = or i1 %746, %747
  %749 = zext i1 %748 to i8
  %750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %749, i8* %750, align 1
  %751 = trunc i64 %745 to i32
  %752 = and i32 %751, 255
  %753 = call i32 @llvm.ctpop.i32(i32 %752)
  %754 = trunc i32 %753 to i8
  %755 = and i8 %754, 1
  %756 = xor i8 %755, 1
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %756, i8* %757, align 1
  %758 = xor i64 %742, %741
  %759 = xor i64 %758, %745
  %760 = lshr i64 %759, 4
  %761 = trunc i64 %760 to i8
  %762 = and i8 %761, 1
  %763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %762, i8* %763, align 1
  %764 = icmp eq i64 %745, 0
  %765 = zext i1 %764 to i8
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %765, i8* %766, align 1
  %767 = lshr i64 %745, 63
  %768 = trunc i64 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %768, i8* %769, align 1
  %770 = lshr i64 %741, 63
  %771 = lshr i64 %742, 63
  %772 = xor i64 %767, %770
  %773 = xor i64 %767, %771
  %774 = add i64 %772, %773
  %775 = icmp eq i64 %774, 2
  %776 = zext i1 %775 to i8
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %776, i8* %777, align 1
  store %struct.Memory* %loadMem_40c818, %struct.Memory** %MEMORY
  %loadMem_40c81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %779 = getelementptr inbounds %struct.GPR, %struct.GPR* %778, i32 0, i32 33
  %780 = getelementptr inbounds %struct.Reg, %struct.Reg* %779, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %780 to i64*
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 5
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %RCX.i1448 = bitcast %union.anon* %783 to i64*
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 9
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %RSI.i1449 = bitcast %union.anon* %786 to i64*
  %787 = load i64, i64* %RCX.i1448
  %788 = add i64 %787, 12
  %789 = load i64, i64* %PC.i1447
  %790 = add i64 %789, 3
  store i64 %790, i64* %PC.i1447
  %791 = inttoptr i64 %788 to i32*
  %792 = load i32, i32* %791
  %793 = zext i32 %792 to i64
  store i64 %793, i64* %RSI.i1449, align 8
  store %struct.Memory* %loadMem_40c81b, %struct.Memory** %MEMORY
  %loadMem_40c81e = load %struct.Memory*, %struct.Memory** %MEMORY
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 33
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 9
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %ESI.i1445 = bitcast %union.anon* %799 to i32*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 15
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %802 to i64*
  %803 = load i64, i64* %RBP.i1446
  %804 = sub i64 %803, 32
  %805 = load i32, i32* %ESI.i1445
  %806 = zext i32 %805 to i64
  %807 = load i64, i64* %PC.i1444
  %808 = add i64 %807, 3
  store i64 %808, i64* %PC.i1444
  %809 = inttoptr i64 %804 to i32*
  store i32 %805, i32* %809
  store %struct.Memory* %loadMem_40c81e, %struct.Memory** %MEMORY
  %loadMem_40c821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %811 = getelementptr inbounds %struct.GPR, %struct.GPR* %810, i32 0, i32 33
  %812 = getelementptr inbounds %struct.Reg, %struct.Reg* %811, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %812 to i64*
  %813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %814 = getelementptr inbounds %struct.GPR, %struct.GPR* %813, i32 0, i32 5
  %815 = getelementptr inbounds %struct.Reg, %struct.Reg* %814, i32 0, i32 0
  %RCX.i1442 = bitcast %union.anon* %815 to i64*
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %817 = getelementptr inbounds %struct.GPR, %struct.GPR* %816, i32 0, i32 15
  %818 = getelementptr inbounds %struct.Reg, %struct.Reg* %817, i32 0, i32 0
  %RBP.i1443 = bitcast %union.anon* %818 to i64*
  %819 = load i64, i64* %RBP.i1443
  %820 = sub i64 %819, 8
  %821 = load i64, i64* %PC.i1441
  %822 = add i64 %821, 4
  store i64 %822, i64* %PC.i1441
  %823 = inttoptr i64 %820 to i64*
  %824 = load i64, i64* %823
  store i64 %824, i64* %RCX.i1442, align 8
  store %struct.Memory* %loadMem_40c821, %struct.Memory** %MEMORY
  %loadMem_40c825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %826 = getelementptr inbounds %struct.GPR, %struct.GPR* %825, i32 0, i32 33
  %827 = getelementptr inbounds %struct.Reg, %struct.Reg* %826, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %827 to i64*
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 11
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %RDI.i1439 = bitcast %union.anon* %830 to i64*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 15
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %RBP.i1440 = bitcast %union.anon* %833 to i64*
  %834 = load i64, i64* %RBP.i1440
  %835 = sub i64 %834, 12
  %836 = load i64, i64* %PC.i1438
  %837 = add i64 %836, 4
  store i64 %837, i64* %PC.i1438
  %838 = inttoptr i64 %835 to i32*
  %839 = load i32, i32* %838
  %840 = sext i32 %839 to i64
  store i64 %840, i64* %RDI.i1439, align 8
  store %struct.Memory* %loadMem_40c825, %struct.Memory** %MEMORY
  %loadMem_40c829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %842 = getelementptr inbounds %struct.GPR, %struct.GPR* %841, i32 0, i32 33
  %843 = getelementptr inbounds %struct.Reg, %struct.Reg* %842, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %843 to i64*
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %845 = getelementptr inbounds %struct.GPR, %struct.GPR* %844, i32 0, i32 11
  %846 = getelementptr inbounds %struct.Reg, %struct.Reg* %845, i32 0, i32 0
  %RDI.i1437 = bitcast %union.anon* %846 to i64*
  %847 = load i64, i64* %RDI.i1437
  %848 = load i64, i64* %PC.i1436
  %849 = add i64 %848, 4
  store i64 %849, i64* %PC.i1436
  %850 = sext i64 %847 to i128
  %851 = and i128 %850, -18446744073709551616
  %852 = zext i64 %847 to i128
  %853 = or i128 %851, %852
  %854 = mul i128 24, %853
  %855 = trunc i128 %854 to i64
  store i64 %855, i64* %RDI.i1437, align 8
  %856 = sext i64 %855 to i128
  %857 = icmp ne i128 %856, %854
  %858 = zext i1 %857 to i8
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %858, i8* %859, align 1
  %860 = trunc i128 %854 to i32
  %861 = and i32 %860, 255
  %862 = call i32 @llvm.ctpop.i32(i32 %861)
  %863 = trunc i32 %862 to i8
  %864 = and i8 %863, 1
  %865 = xor i8 %864, 1
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %865, i8* %866, align 1
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %867, align 1
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %868, align 1
  %869 = lshr i64 %855, 63
  %870 = trunc i64 %869 to i8
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %870, i8* %871, align 1
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %858, i8* %872, align 1
  store %struct.Memory* %loadMem_40c829, %struct.Memory** %MEMORY
  %loadMem_40c82d = load %struct.Memory*, %struct.Memory** %MEMORY
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 33
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %875 to i64*
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %877 = getelementptr inbounds %struct.GPR, %struct.GPR* %876, i32 0, i32 5
  %878 = getelementptr inbounds %struct.Reg, %struct.Reg* %877, i32 0, i32 0
  %RCX.i1434 = bitcast %union.anon* %878 to i64*
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %880 = getelementptr inbounds %struct.GPR, %struct.GPR* %879, i32 0, i32 11
  %881 = getelementptr inbounds %struct.Reg, %struct.Reg* %880, i32 0, i32 0
  %RDI.i1435 = bitcast %union.anon* %881 to i64*
  %882 = load i64, i64* %RCX.i1434
  %883 = load i64, i64* %RDI.i1435
  %884 = load i64, i64* %PC.i1433
  %885 = add i64 %884, 3
  store i64 %885, i64* %PC.i1433
  %886 = add i64 %883, %882
  store i64 %886, i64* %RCX.i1434, align 8
  %887 = icmp ult i64 %886, %882
  %888 = icmp ult i64 %886, %883
  %889 = or i1 %887, %888
  %890 = zext i1 %889 to i8
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %890, i8* %891, align 1
  %892 = trunc i64 %886 to i32
  %893 = and i32 %892, 255
  %894 = call i32 @llvm.ctpop.i32(i32 %893)
  %895 = trunc i32 %894 to i8
  %896 = and i8 %895, 1
  %897 = xor i8 %896, 1
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %897, i8* %898, align 1
  %899 = xor i64 %883, %882
  %900 = xor i64 %899, %886
  %901 = lshr i64 %900, 4
  %902 = trunc i64 %901 to i8
  %903 = and i8 %902, 1
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %903, i8* %904, align 1
  %905 = icmp eq i64 %886, 0
  %906 = zext i1 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %906, i8* %907, align 1
  %908 = lshr i64 %886, 63
  %909 = trunc i64 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %909, i8* %910, align 1
  %911 = lshr i64 %882, 63
  %912 = lshr i64 %883, 63
  %913 = xor i64 %908, %911
  %914 = xor i64 %908, %912
  %915 = add i64 %913, %914
  %916 = icmp eq i64 %915, 2
  %917 = zext i1 %916 to i8
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %917, i8* %918, align 1
  store %struct.Memory* %loadMem_40c82d, %struct.Memory** %MEMORY
  %loadMem_40c830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 33
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %PC.i1430 = bitcast %union.anon* %921 to i64*
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %923 = getelementptr inbounds %struct.GPR, %struct.GPR* %922, i32 0, i32 5
  %924 = getelementptr inbounds %struct.Reg, %struct.Reg* %923, i32 0, i32 0
  %RCX.i1431 = bitcast %union.anon* %924 to i64*
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %926 = getelementptr inbounds %struct.GPR, %struct.GPR* %925, i32 0, i32 9
  %927 = getelementptr inbounds %struct.Reg, %struct.Reg* %926, i32 0, i32 0
  %RSI.i1432 = bitcast %union.anon* %927 to i64*
  %928 = load i64, i64* %RCX.i1431
  %929 = add i64 %928, 16
  %930 = load i64, i64* %PC.i1430
  %931 = add i64 %930, 3
  store i64 %931, i64* %PC.i1430
  %932 = inttoptr i64 %929 to i32*
  %933 = load i32, i32* %932
  %934 = zext i32 %933 to i64
  store i64 %934, i64* %RSI.i1432, align 8
  store %struct.Memory* %loadMem_40c830, %struct.Memory** %MEMORY
  %loadMem_40c833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 33
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %PC.i1427 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 9
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %ESI.i1428 = bitcast %union.anon* %940 to i32*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 15
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RBP.i1429 = bitcast %union.anon* %943 to i64*
  %944 = load i64, i64* %RBP.i1429
  %945 = sub i64 %944, 36
  %946 = load i32, i32* %ESI.i1428
  %947 = zext i32 %946 to i64
  %948 = load i64, i64* %PC.i1427
  %949 = add i64 %948, 3
  store i64 %949, i64* %PC.i1427
  %950 = inttoptr i64 %945 to i32*
  store i32 %946, i32* %950
  store %struct.Memory* %loadMem_40c833, %struct.Memory** %MEMORY
  %loadMem_40c836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 33
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 9
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %RSI.i1426 = bitcast %union.anon* %956 to i64*
  %957 = load i64, i64* %PC.i1425
  %958 = add i64 %957, 7
  store i64 %958, i64* %PC.i1425
  %959 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %960 = zext i32 %959 to i64
  store i64 %960, i64* %RSI.i1426, align 8
  store %struct.Memory* %loadMem_40c836, %struct.Memory** %MEMORY
  %loadMem_40c83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 33
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %PC.i1423 = bitcast %union.anon* %963 to i64*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %965 = getelementptr inbounds %struct.GPR, %struct.GPR* %964, i32 0, i32 9
  %966 = getelementptr inbounds %struct.Reg, %struct.Reg* %965, i32 0, i32 0
  %RSI.i1424 = bitcast %union.anon* %966 to i64*
  %967 = load i64, i64* %RSI.i1424
  %968 = load i64, i64* %PC.i1423
  %969 = add i64 %968, 3
  store i64 %969, i64* %PC.i1423
  %970 = trunc i64 %967 to i32
  %971 = add i32 -1, %970
  %972 = zext i32 %971 to i64
  store i64 %972, i64* %RSI.i1424, align 8
  %973 = icmp ult i32 %971, %970
  %974 = icmp ult i32 %971, -1
  %975 = or i1 %973, %974
  %976 = zext i1 %975 to i8
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %976, i8* %977, align 1
  %978 = and i32 %971, 255
  %979 = call i32 @llvm.ctpop.i32(i32 %978)
  %980 = trunc i32 %979 to i8
  %981 = and i8 %980, 1
  %982 = xor i8 %981, 1
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %982, i8* %983, align 1
  %984 = xor i64 -1, %967
  %985 = trunc i64 %984 to i32
  %986 = xor i32 %985, %971
  %987 = lshr i32 %986, 4
  %988 = trunc i32 %987 to i8
  %989 = and i8 %988, 1
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %989, i8* %990, align 1
  %991 = icmp eq i32 %971, 0
  %992 = zext i1 %991 to i8
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %992, i8* %993, align 1
  %994 = lshr i32 %971, 31
  %995 = trunc i32 %994 to i8
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %995, i8* %996, align 1
  %997 = lshr i32 %970, 31
  %998 = xor i32 %994, %997
  %999 = xor i32 %994, 1
  %1000 = add i32 %998, %999
  %1001 = icmp eq i32 %1000, 2
  %1002 = zext i1 %1001 to i8
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1002, i8* %1003, align 1
  store %struct.Memory* %loadMem_40c83d, %struct.Memory** %MEMORY
  %loadMem_40c840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 33
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %1006 to i64*
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 9
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %ESI.i1422 = bitcast %union.anon* %1009 to i32*
  %1010 = load i32, i32* %ESI.i1422
  %1011 = zext i32 %1010 to i64
  %1012 = load i64, i64* %PC.i1421
  %1013 = add i64 %1012, 7
  store i64 %1013, i64* %PC.i1421
  store i32 %1010, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_40c840, %struct.Memory** %MEMORY
  %loadMem_40c847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 33
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %1016 to i64*
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 5
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %RCX.i1420 = bitcast %union.anon* %1019 to i64*
  %1020 = load i64, i64* %PC.i1419
  %1021 = add i64 %1020, 8
  store i64 %1021, i64* %PC.i1419
  %1022 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %1023 = sext i32 %1022 to i64
  store i64 %1023, i64* %RCX.i1420, align 8
  store %struct.Memory* %loadMem_40c847, %struct.Memory** %MEMORY
  %loadMem_40c84f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1025 = getelementptr inbounds %struct.GPR, %struct.GPR* %1024, i32 0, i32 33
  %1026 = getelementptr inbounds %struct.Reg, %struct.Reg* %1025, i32 0, i32 0
  %PC.i1417 = bitcast %union.anon* %1026 to i64*
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 5
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %RCX.i1418 = bitcast %union.anon* %1029 to i64*
  %1030 = load i64, i64* %RCX.i1418
  %1031 = load i64, i64* %PC.i1417
  %1032 = add i64 %1031, 4
  store i64 %1032, i64* %PC.i1417
  %1033 = shl i64 %1030, 3
  %1034 = icmp slt i64 %1033, 0
  %1035 = shl i64 %1033, 1
  store i64 %1035, i64* %RCX.i1418, align 8
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1037 = zext i1 %1034 to i8
  store i8 %1037, i8* %1036, align 1
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1039 = trunc i64 %1035 to i32
  %1040 = and i32 %1039, 254
  %1041 = call i32 @llvm.ctpop.i32(i32 %1040)
  %1042 = trunc i32 %1041 to i8
  %1043 = and i8 %1042, 1
  %1044 = xor i8 %1043, 1
  store i8 %1044, i8* %1038, align 1
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1045, align 1
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1047 = icmp eq i64 %1035, 0
  %1048 = zext i1 %1047 to i8
  store i8 %1048, i8* %1046, align 1
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1050 = lshr i64 %1035, 63
  %1051 = trunc i64 %1050 to i8
  store i8 %1051, i8* %1049, align 1
  %1052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1052, align 1
  store %struct.Memory* %loadMem_40c84f, %struct.Memory** %MEMORY
  %loadMem_40c853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1054 = getelementptr inbounds %struct.GPR, %struct.GPR* %1053, i32 0, i32 33
  %1055 = getelementptr inbounds %struct.Reg, %struct.Reg* %1054, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %1055 to i64*
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1057 = getelementptr inbounds %struct.GPR, %struct.GPR* %1056, i32 0, i32 1
  %1058 = getelementptr inbounds %struct.Reg, %struct.Reg* %1057, i32 0, i32 0
  %RAX.i1415 = bitcast %union.anon* %1058 to i64*
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 11
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %RDI.i1416 = bitcast %union.anon* %1061 to i64*
  %1062 = load i64, i64* %RAX.i1415
  %1063 = load i64, i64* %PC.i1414
  %1064 = add i64 %1063, 3
  store i64 %1064, i64* %PC.i1414
  store i64 %1062, i64* %RDI.i1416, align 8
  store %struct.Memory* %loadMem_40c853, %struct.Memory** %MEMORY
  %loadMem_40c856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 33
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %1067 to i64*
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 5
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %RCX.i1412 = bitcast %union.anon* %1070 to i64*
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1072 = getelementptr inbounds %struct.GPR, %struct.GPR* %1071, i32 0, i32 11
  %1073 = getelementptr inbounds %struct.Reg, %struct.Reg* %1072, i32 0, i32 0
  %RDI.i1413 = bitcast %union.anon* %1073 to i64*
  %1074 = load i64, i64* %RDI.i1413
  %1075 = load i64, i64* %RCX.i1412
  %1076 = load i64, i64* %PC.i1411
  %1077 = add i64 %1076, 3
  store i64 %1077, i64* %PC.i1411
  %1078 = add i64 %1075, %1074
  store i64 %1078, i64* %RDI.i1413, align 8
  %1079 = icmp ult i64 %1078, %1074
  %1080 = icmp ult i64 %1078, %1075
  %1081 = or i1 %1079, %1080
  %1082 = zext i1 %1081 to i8
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1082, i8* %1083, align 1
  %1084 = trunc i64 %1078 to i32
  %1085 = and i32 %1084, 255
  %1086 = call i32 @llvm.ctpop.i32(i32 %1085)
  %1087 = trunc i32 %1086 to i8
  %1088 = and i8 %1087, 1
  %1089 = xor i8 %1088, 1
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1089, i8* %1090, align 1
  %1091 = xor i64 %1075, %1074
  %1092 = xor i64 %1091, %1078
  %1093 = lshr i64 %1092, 4
  %1094 = trunc i64 %1093 to i8
  %1095 = and i8 %1094, 1
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1095, i8* %1096, align 1
  %1097 = icmp eq i64 %1078, 0
  %1098 = zext i1 %1097 to i8
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1098, i8* %1099, align 1
  %1100 = lshr i64 %1078, 63
  %1101 = trunc i64 %1100 to i8
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1101, i8* %1102, align 1
  %1103 = lshr i64 %1074, 63
  %1104 = lshr i64 %1075, 63
  %1105 = xor i64 %1100, %1103
  %1106 = xor i64 %1100, %1104
  %1107 = add i64 %1105, %1106
  %1108 = icmp eq i64 %1107, 2
  %1109 = zext i1 %1108 to i8
  %1110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1109, i8* %1110, align 1
  store %struct.Memory* %loadMem_40c856, %struct.Memory** %MEMORY
  %loadMem_40c859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 33
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %PC.i1408 = bitcast %union.anon* %1113 to i64*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 9
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %RSI.i1409 = bitcast %union.anon* %1116 to i64*
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1118 = getelementptr inbounds %struct.GPR, %struct.GPR* %1117, i32 0, i32 11
  %1119 = getelementptr inbounds %struct.Reg, %struct.Reg* %1118, i32 0, i32 0
  %RDI.i1410 = bitcast %union.anon* %1119 to i64*
  %1120 = load i64, i64* %RDI.i1410
  %1121 = add i64 %1120, 8
  %1122 = load i64, i64* %PC.i1408
  %1123 = add i64 %1122, 3
  store i64 %1123, i64* %PC.i1408
  %1124 = inttoptr i64 %1121 to i32*
  %1125 = load i32, i32* %1124
  %1126 = zext i32 %1125 to i64
  store i64 %1126, i64* %RSI.i1409, align 8
  store %struct.Memory* %loadMem_40c859, %struct.Memory** %MEMORY
  %loadMem_40c85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 33
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %1129 to i64*
  %1130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1131 = getelementptr inbounds %struct.GPR, %struct.GPR* %1130, i32 0, i32 9
  %1132 = getelementptr inbounds %struct.Reg, %struct.Reg* %1131, i32 0, i32 0
  %ESI.i1407 = bitcast %union.anon* %1132 to i32*
  %1133 = load i32, i32* %ESI.i1407
  %1134 = zext i32 %1133 to i64
  %1135 = load i64, i64* %PC.i1406
  %1136 = add i64 %1135, 7
  store i64 %1136, i64* %PC.i1406
  store i32 %1133, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  store %struct.Memory* %loadMem_40c85c, %struct.Memory** %MEMORY
  %loadMem_40c863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1138 = getelementptr inbounds %struct.GPR, %struct.GPR* %1137, i32 0, i32 33
  %1139 = getelementptr inbounds %struct.Reg, %struct.Reg* %1138, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %1139 to i64*
  %1140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1141 = getelementptr inbounds %struct.GPR, %struct.GPR* %1140, i32 0, i32 5
  %1142 = getelementptr inbounds %struct.Reg, %struct.Reg* %1141, i32 0, i32 0
  %RCX.i1405 = bitcast %union.anon* %1142 to i64*
  %1143 = load i64, i64* %PC.i1404
  %1144 = add i64 %1143, 8
  store i64 %1144, i64* %PC.i1404
  %1145 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %1146 = sext i32 %1145 to i64
  store i64 %1146, i64* %RCX.i1405, align 8
  store %struct.Memory* %loadMem_40c863, %struct.Memory** %MEMORY
  %loadMem_40c86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 33
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %1149 to i64*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 5
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %RCX.i1403 = bitcast %union.anon* %1152 to i64*
  %1153 = load i64, i64* %RCX.i1403
  %1154 = load i64, i64* %PC.i1402
  %1155 = add i64 %1154, 4
  store i64 %1155, i64* %PC.i1402
  %1156 = shl i64 %1153, 3
  %1157 = icmp slt i64 %1156, 0
  %1158 = shl i64 %1156, 1
  store i64 %1158, i64* %RCX.i1403, align 8
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1160 = zext i1 %1157 to i8
  store i8 %1160, i8* %1159, align 1
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1162 = trunc i64 %1158 to i32
  %1163 = and i32 %1162, 254
  %1164 = call i32 @llvm.ctpop.i32(i32 %1163)
  %1165 = trunc i32 %1164 to i8
  %1166 = and i8 %1165, 1
  %1167 = xor i8 %1166, 1
  store i8 %1167, i8* %1161, align 1
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1168, align 1
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1170 = icmp eq i64 %1158, 0
  %1171 = zext i1 %1170 to i8
  store i8 %1171, i8* %1169, align 1
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1173 = lshr i64 %1158, 63
  %1174 = trunc i64 %1173 to i8
  store i8 %1174, i8* %1172, align 1
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1175, align 1
  store %struct.Memory* %loadMem_40c86b, %struct.Memory** %MEMORY
  %loadMem_40c86f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1177 = getelementptr inbounds %struct.GPR, %struct.GPR* %1176, i32 0, i32 33
  %1178 = getelementptr inbounds %struct.Reg, %struct.Reg* %1177, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %1178 to i64*
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1180 = getelementptr inbounds %struct.GPR, %struct.GPR* %1179, i32 0, i32 1
  %1181 = getelementptr inbounds %struct.Reg, %struct.Reg* %1180, i32 0, i32 0
  %RAX.i1400 = bitcast %union.anon* %1181 to i64*
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1183 = getelementptr inbounds %struct.GPR, %struct.GPR* %1182, i32 0, i32 5
  %1184 = getelementptr inbounds %struct.Reg, %struct.Reg* %1183, i32 0, i32 0
  %RCX.i1401 = bitcast %union.anon* %1184 to i64*
  %1185 = load i64, i64* %RAX.i1400
  %1186 = load i64, i64* %RCX.i1401
  %1187 = load i64, i64* %PC.i1399
  %1188 = add i64 %1187, 3
  store i64 %1188, i64* %PC.i1399
  %1189 = add i64 %1186, %1185
  store i64 %1189, i64* %RAX.i1400, align 8
  %1190 = icmp ult i64 %1189, %1185
  %1191 = icmp ult i64 %1189, %1186
  %1192 = or i1 %1190, %1191
  %1193 = zext i1 %1192 to i8
  %1194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1193, i8* %1194, align 1
  %1195 = trunc i64 %1189 to i32
  %1196 = and i32 %1195, 255
  %1197 = call i32 @llvm.ctpop.i32(i32 %1196)
  %1198 = trunc i32 %1197 to i8
  %1199 = and i8 %1198, 1
  %1200 = xor i8 %1199, 1
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1200, i8* %1201, align 1
  %1202 = xor i64 %1186, %1185
  %1203 = xor i64 %1202, %1189
  %1204 = lshr i64 %1203, 4
  %1205 = trunc i64 %1204 to i8
  %1206 = and i8 %1205, 1
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1206, i8* %1207, align 1
  %1208 = icmp eq i64 %1189, 0
  %1209 = zext i1 %1208 to i8
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1209, i8* %1210, align 1
  %1211 = lshr i64 %1189, 63
  %1212 = trunc i64 %1211 to i8
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1212, i8* %1213, align 1
  %1214 = lshr i64 %1185, 63
  %1215 = lshr i64 %1186, 63
  %1216 = xor i64 %1211, %1214
  %1217 = xor i64 %1211, %1215
  %1218 = add i64 %1216, %1217
  %1219 = icmp eq i64 %1218, 2
  %1220 = zext i1 %1219 to i8
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1220, i8* %1221, align 1
  store %struct.Memory* %loadMem_40c86f, %struct.Memory** %MEMORY
  %loadMem_40c872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 33
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %PC.i1396 = bitcast %union.anon* %1224 to i64*
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 1
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %RAX.i1397 = bitcast %union.anon* %1227 to i64*
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 9
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %RSI.i1398 = bitcast %union.anon* %1230 to i64*
  %1231 = load i64, i64* %RAX.i1397
  %1232 = add i64 %1231, 12
  %1233 = load i64, i64* %PC.i1396
  %1234 = add i64 %1233, 3
  store i64 %1234, i64* %PC.i1396
  %1235 = inttoptr i64 %1232 to i32*
  %1236 = load i32, i32* %1235
  %1237 = zext i32 %1236 to i64
  store i64 %1237, i64* %RSI.i1398, align 8
  store %struct.Memory* %loadMem_40c872, %struct.Memory** %MEMORY
  %loadMem_40c875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1239 = getelementptr inbounds %struct.GPR, %struct.GPR* %1238, i32 0, i32 33
  %1240 = getelementptr inbounds %struct.Reg, %struct.Reg* %1239, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %1240 to i64*
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1242 = getelementptr inbounds %struct.GPR, %struct.GPR* %1241, i32 0, i32 9
  %1243 = getelementptr inbounds %struct.Reg, %struct.Reg* %1242, i32 0, i32 0
  %ESI.i1395 = bitcast %union.anon* %1243 to i32*
  %1244 = load i32, i32* %ESI.i1395
  %1245 = zext i32 %1244 to i64
  %1246 = load i64, i64* %PC.i1394
  %1247 = add i64 %1246, 7
  store i64 %1247, i64* %PC.i1394
  store i32 %1244, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  store %struct.Memory* %loadMem_40c875, %struct.Memory** %MEMORY
  %loadMem_40c87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1249 = getelementptr inbounds %struct.GPR, %struct.GPR* %1248, i32 0, i32 33
  %1250 = getelementptr inbounds %struct.Reg, %struct.Reg* %1249, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %1250 to i64*
  %1251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1252 = getelementptr inbounds %struct.GPR, %struct.GPR* %1251, i32 0, i32 15
  %1253 = getelementptr inbounds %struct.Reg, %struct.Reg* %1252, i32 0, i32 0
  %RBP.i1393 = bitcast %union.anon* %1253 to i64*
  %1254 = load i64, i64* %RBP.i1393
  %1255 = sub i64 %1254, 20
  %1256 = load i64, i64* %PC.i1392
  %1257 = add i64 %1256, 4
  store i64 %1257, i64* %PC.i1392
  %1258 = inttoptr i64 %1255 to i32*
  %1259 = load i32, i32* %1258
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1260, align 1
  %1261 = and i32 %1259, 255
  %1262 = call i32 @llvm.ctpop.i32(i32 %1261)
  %1263 = trunc i32 %1262 to i8
  %1264 = and i8 %1263, 1
  %1265 = xor i8 %1264, 1
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1265, i8* %1266, align 1
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1267, align 1
  %1268 = icmp eq i32 %1259, 0
  %1269 = zext i1 %1268 to i8
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1269, i8* %1270, align 1
  %1271 = lshr i32 %1259, 31
  %1272 = trunc i32 %1271 to i8
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1272, i8* %1273, align 1
  %1274 = lshr i32 %1259, 31
  %1275 = xor i32 %1271, %1274
  %1276 = add i32 %1275, %1274
  %1277 = icmp eq i32 %1276, 2
  %1278 = zext i1 %1277 to i8
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1278, i8* %1279, align 1
  store %struct.Memory* %loadMem_40c87c, %struct.Memory** %MEMORY
  %loadMem_40c880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 33
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %PC.i1391 = bitcast %union.anon* %1282 to i64*
  %1283 = load i64, i64* %PC.i1391
  %1284 = add i64 %1283, 247
  %1285 = load i64, i64* %PC.i1391
  %1286 = add i64 %1285, 6
  %1287 = load i64, i64* %PC.i1391
  %1288 = add i64 %1287, 6
  store i64 %1288, i64* %PC.i1391
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1290 = load i8, i8* %1289, align 1
  %1291 = icmp eq i8 %1290, 0
  %1292 = zext i1 %1291 to i8
  store i8 %1292, i8* %BRANCH_TAKEN, align 1
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1294 = select i1 %1291, i64 %1284, i64 %1286
  store i64 %1294, i64* %1293, align 8
  store %struct.Memory* %loadMem_40c880, %struct.Memory** %MEMORY
  %loadBr_40c880 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40c880 = icmp eq i8 %loadBr_40c880, 1
  br i1 %cmpBr_40c880, label %block_.L_40c977, label %block_40c886

block_40c886:                                     ; preds = %entry
  %loadMem_40c886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1296 = getelementptr inbounds %struct.GPR, %struct.GPR* %1295, i32 0, i32 33
  %1297 = getelementptr inbounds %struct.Reg, %struct.Reg* %1296, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %1297 to i64*
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 1
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %EAX.i1389 = bitcast %union.anon* %1300 to i32*
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 1
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %RAX.i1390 = bitcast %union.anon* %1303 to i64*
  %1304 = load i64, i64* %RAX.i1390
  %1305 = load i32, i32* %EAX.i1389
  %1306 = zext i32 %1305 to i64
  %1307 = load i64, i64* %PC.i1388
  %1308 = add i64 %1307, 2
  store i64 %1308, i64* %PC.i1388
  %1309 = xor i64 %1306, %1304
  %1310 = trunc i64 %1309 to i32
  %1311 = and i64 %1309, 4294967295
  store i64 %1311, i64* %RAX.i1390, align 8
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1312, align 1
  %1313 = and i32 %1310, 255
  %1314 = call i32 @llvm.ctpop.i32(i32 %1313)
  %1315 = trunc i32 %1314 to i8
  %1316 = and i8 %1315, 1
  %1317 = xor i8 %1316, 1
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1317, i8* %1318, align 1
  %1319 = icmp eq i32 %1310, 0
  %1320 = zext i1 %1319 to i8
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1320, i8* %1321, align 1
  %1322 = lshr i32 %1310, 31
  %1323 = trunc i32 %1322 to i8
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1323, i8* %1324, align 1
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1325, align 1
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1326, align 1
  store %struct.Memory* %loadMem_40c886, %struct.Memory** %MEMORY
  %loadMem_40c888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 5
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %RCX.i1387 = bitcast %union.anon* %1332 to i64*
  %1333 = load i64, i64* %PC.i1386
  %1334 = add i64 %1333, 5
  store i64 %1334, i64* %PC.i1386
  store i64 1, i64* %RCX.i1387, align 8
  store %struct.Memory* %loadMem_40c888, %struct.Memory** %MEMORY
  %loadMem_40c88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 33
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %1337 to i64*
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 7
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %RDX.i1385 = bitcast %union.anon* %1340 to i64*
  %1341 = load i64, i64* %PC.i1384
  %1342 = add i64 %1341, 10
  store i64 %1342, i64* %PC.i1384
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RDX.i1385, align 8
  store %struct.Memory* %loadMem_40c88d, %struct.Memory** %MEMORY
  %loadMem_40c897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 33
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %1345 to i64*
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 9
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %RSI.i1382 = bitcast %union.anon* %1348 to i64*
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1350 = getelementptr inbounds %struct.GPR, %struct.GPR* %1349, i32 0, i32 15
  %1351 = getelementptr inbounds %struct.Reg, %struct.Reg* %1350, i32 0, i32 0
  %RBP.i1383 = bitcast %union.anon* %1351 to i64*
  %1352 = load i64, i64* %RBP.i1383
  %1353 = sub i64 %1352, 24
  %1354 = load i64, i64* %PC.i1381
  %1355 = add i64 %1354, 4
  store i64 %1355, i64* %PC.i1381
  %1356 = inttoptr i64 %1353 to i32*
  %1357 = load i32, i32* %1356
  %1358 = sext i32 %1357 to i64
  store i64 %1358, i64* %RSI.i1382, align 8
  store %struct.Memory* %loadMem_40c897, %struct.Memory** %MEMORY
  %loadMem_40c89b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 33
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %1361 to i64*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 9
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %RSI.i1380 = bitcast %union.anon* %1364 to i64*
  %1365 = load i64, i64* %RSI.i1380
  %1366 = mul i64 %1365, 4
  %1367 = add i64 %1366, 8807152
  %1368 = load i64, i64* %PC.i1379
  %1369 = add i64 %1368, 8
  store i64 %1369, i64* %PC.i1379
  %1370 = inttoptr i64 %1367 to i32*
  %1371 = load i32, i32* %1370
  %1372 = sext i32 %1371 to i64
  store i64 %1372, i64* %RSI.i1380, align 8
  store %struct.Memory* %loadMem_40c89b, %struct.Memory** %MEMORY
  %loadMem_40c8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 33
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %1375 to i64*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 9
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %RSI.i1378 = bitcast %union.anon* %1378 to i64*
  %1379 = load i64, i64* %RSI.i1378
  %1380 = mul i64 %1379, 4
  %1381 = add i64 %1380, 8778480
  %1382 = load i64, i64* %PC.i1377
  %1383 = add i64 %1382, 11
  store i64 %1383, i64* %PC.i1377
  %1384 = inttoptr i64 %1381 to i32*
  store i32 0, i32* %1384
  store %struct.Memory* %loadMem_40c8a3, %struct.Memory** %MEMORY
  %loadMem_40c8ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1386 = getelementptr inbounds %struct.GPR, %struct.GPR* %1385, i32 0, i32 33
  %1387 = getelementptr inbounds %struct.Reg, %struct.Reg* %1386, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %1387 to i64*
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1389 = getelementptr inbounds %struct.GPR, %struct.GPR* %1388, i32 0, i32 9
  %1390 = getelementptr inbounds %struct.Reg, %struct.Reg* %1389, i32 0, i32 0
  %RSI.i1376 = bitcast %union.anon* %1390 to i64*
  %1391 = load i64, i64* %PC.i1375
  %1392 = add i64 %1391, 8
  store i64 %1392, i64* %PC.i1375
  %1393 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %1394 = sext i32 %1393 to i64
  store i64 %1394, i64* %RSI.i1376, align 8
  store %struct.Memory* %loadMem_40c8ae, %struct.Memory** %MEMORY
  %loadMem_40c8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 33
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %1397 to i64*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 9
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %RSI.i1374 = bitcast %union.anon* %1400 to i64*
  %1401 = load i64, i64* %RSI.i1374
  %1402 = load i64, i64* %PC.i1373
  %1403 = add i64 %1402, 4
  store i64 %1403, i64* %PC.i1373
  %1404 = shl i64 %1401, 3
  %1405 = icmp slt i64 %1404, 0
  %1406 = shl i64 %1404, 1
  store i64 %1406, i64* %RSI.i1374, align 8
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1408 = zext i1 %1405 to i8
  store i8 %1408, i8* %1407, align 1
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1410 = trunc i64 %1406 to i32
  %1411 = and i32 %1410, 254
  %1412 = call i32 @llvm.ctpop.i32(i32 %1411)
  %1413 = trunc i32 %1412 to i8
  %1414 = and i8 %1413, 1
  %1415 = xor i8 %1414, 1
  store i8 %1415, i8* %1409, align 1
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1416, align 1
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1418 = icmp eq i64 %1406, 0
  %1419 = zext i1 %1418 to i8
  store i8 %1419, i8* %1417, align 1
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1421 = lshr i64 %1406, 63
  %1422 = trunc i64 %1421 to i8
  store i8 %1422, i8* %1420, align 1
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1423, align 1
  store %struct.Memory* %loadMem_40c8b6, %struct.Memory** %MEMORY
  %loadMem_40c8ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 33
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %1426 to i64*
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 7
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %RDX.i1371 = bitcast %union.anon* %1429 to i64*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1431 = getelementptr inbounds %struct.GPR, %struct.GPR* %1430, i32 0, i32 9
  %1432 = getelementptr inbounds %struct.Reg, %struct.Reg* %1431, i32 0, i32 0
  %RSI.i1372 = bitcast %union.anon* %1432 to i64*
  %1433 = load i64, i64* %RDX.i1371
  %1434 = load i64, i64* %RSI.i1372
  %1435 = load i64, i64* %PC.i1370
  %1436 = add i64 %1435, 3
  store i64 %1436, i64* %PC.i1370
  %1437 = add i64 %1434, %1433
  store i64 %1437, i64* %RDX.i1371, align 8
  %1438 = icmp ult i64 %1437, %1433
  %1439 = icmp ult i64 %1437, %1434
  %1440 = or i1 %1438, %1439
  %1441 = zext i1 %1440 to i8
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1441, i8* %1442, align 1
  %1443 = trunc i64 %1437 to i32
  %1444 = and i32 %1443, 255
  %1445 = call i32 @llvm.ctpop.i32(i32 %1444)
  %1446 = trunc i32 %1445 to i8
  %1447 = and i8 %1446, 1
  %1448 = xor i8 %1447, 1
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1448, i8* %1449, align 1
  %1450 = xor i64 %1434, %1433
  %1451 = xor i64 %1450, %1437
  %1452 = lshr i64 %1451, 4
  %1453 = trunc i64 %1452 to i8
  %1454 = and i8 %1453, 1
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1454, i8* %1455, align 1
  %1456 = icmp eq i64 %1437, 0
  %1457 = zext i1 %1456 to i8
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1457, i8* %1458, align 1
  %1459 = lshr i64 %1437, 63
  %1460 = trunc i64 %1459 to i8
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1460, i8* %1461, align 1
  %1462 = lshr i64 %1433, 63
  %1463 = lshr i64 %1434, 63
  %1464 = xor i64 %1459, %1462
  %1465 = xor i64 %1459, %1463
  %1466 = add i64 %1464, %1465
  %1467 = icmp eq i64 %1466, 2
  %1468 = zext i1 %1467 to i8
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1468, i8* %1469, align 1
  store %struct.Memory* %loadMem_40c8ba, %struct.Memory** %MEMORY
  %loadMem_40c8bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 33
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %PC.i1367 = bitcast %union.anon* %1472 to i64*
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 7
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %RDX.i1368 = bitcast %union.anon* %1475 to i64*
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 11
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %RDI.i1369 = bitcast %union.anon* %1478 to i64*
  %1479 = load i64, i64* %RDX.i1368
  %1480 = add i64 %1479, 4
  %1481 = load i64, i64* %PC.i1367
  %1482 = add i64 %1481, 3
  store i64 %1482, i64* %PC.i1367
  %1483 = inttoptr i64 %1480 to i32*
  %1484 = load i32, i32* %1483
  %1485 = zext i32 %1484 to i64
  store i64 %1485, i64* %RDI.i1369, align 8
  store %struct.Memory* %loadMem_40c8bd, %struct.Memory** %MEMORY
  %loadMem_40c8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1487 = getelementptr inbounds %struct.GPR, %struct.GPR* %1486, i32 0, i32 33
  %1488 = getelementptr inbounds %struct.Reg, %struct.Reg* %1487, i32 0, i32 0
  %PC.i1364 = bitcast %union.anon* %1488 to i64*
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1490 = getelementptr inbounds %struct.GPR, %struct.GPR* %1489, i32 0, i32 7
  %1491 = getelementptr inbounds %struct.Reg, %struct.Reg* %1490, i32 0, i32 0
  %RDX.i1365 = bitcast %union.anon* %1491 to i64*
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 15
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %RBP.i1366 = bitcast %union.anon* %1494 to i64*
  %1495 = load i64, i64* %RBP.i1366
  %1496 = sub i64 %1495, 24
  %1497 = load i64, i64* %PC.i1364
  %1498 = add i64 %1497, 4
  store i64 %1498, i64* %PC.i1364
  %1499 = inttoptr i64 %1496 to i32*
  %1500 = load i32, i32* %1499
  %1501 = sext i32 %1500 to i64
  store i64 %1501, i64* %RDX.i1365, align 8
  store %struct.Memory* %loadMem_40c8c0, %struct.Memory** %MEMORY
  %loadMem_40c8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 7
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RDX.i1363 = bitcast %union.anon* %1507 to i64*
  %1508 = load i64, i64* %RDX.i1363
  %1509 = mul i64 %1508, 4
  %1510 = add i64 %1509, 8807152
  %1511 = load i64, i64* %PC.i1362
  %1512 = add i64 %1511, 8
  store i64 %1512, i64* %PC.i1362
  %1513 = inttoptr i64 %1510 to i32*
  %1514 = load i32, i32* %1513
  %1515 = sext i32 %1514 to i64
  store i64 %1515, i64* %RDX.i1363, align 8
  store %struct.Memory* %loadMem_40c8c4, %struct.Memory** %MEMORY
  %loadMem_40c8cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1517 = getelementptr inbounds %struct.GPR, %struct.GPR* %1516, i32 0, i32 33
  %1518 = getelementptr inbounds %struct.Reg, %struct.Reg* %1517, i32 0, i32 0
  %PC.i1359 = bitcast %union.anon* %1518 to i64*
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 11
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %EDI.i1360 = bitcast %union.anon* %1521 to i32*
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 7
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %RDX.i1361 = bitcast %union.anon* %1524 to i64*
  %1525 = load i64, i64* %RDX.i1361
  %1526 = mul i64 %1525, 4
  %1527 = add i64 %1526, 6525216
  %1528 = load i32, i32* %EDI.i1360
  %1529 = zext i32 %1528 to i64
  %1530 = load i64, i64* %PC.i1359
  %1531 = add i64 %1530, 7
  store i64 %1531, i64* %PC.i1359
  %1532 = inttoptr i64 %1527 to i32*
  store i32 %1528, i32* %1532
  store %struct.Memory* %loadMem_40c8cc, %struct.Memory** %MEMORY
  %loadMem_40c8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1534 = getelementptr inbounds %struct.GPR, %struct.GPR* %1533, i32 0, i32 33
  %1535 = getelementptr inbounds %struct.Reg, %struct.Reg* %1534, i32 0, i32 0
  %PC.i1356 = bitcast %union.anon* %1535 to i64*
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1537 = getelementptr inbounds %struct.GPR, %struct.GPR* %1536, i32 0, i32 7
  %1538 = getelementptr inbounds %struct.Reg, %struct.Reg* %1537, i32 0, i32 0
  %RDX.i1357 = bitcast %union.anon* %1538 to i64*
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1540 = getelementptr inbounds %struct.GPR, %struct.GPR* %1539, i32 0, i32 15
  %1541 = getelementptr inbounds %struct.Reg, %struct.Reg* %1540, i32 0, i32 0
  %RBP.i1358 = bitcast %union.anon* %1541 to i64*
  %1542 = load i64, i64* %RBP.i1358
  %1543 = sub i64 %1542, 24
  %1544 = load i64, i64* %PC.i1356
  %1545 = add i64 %1544, 4
  store i64 %1545, i64* %PC.i1356
  %1546 = inttoptr i64 %1543 to i32*
  %1547 = load i32, i32* %1546
  %1548 = sext i32 %1547 to i64
  store i64 %1548, i64* %RDX.i1357, align 8
  store %struct.Memory* %loadMem_40c8d3, %struct.Memory** %MEMORY
  %loadMem_40c8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1550 = getelementptr inbounds %struct.GPR, %struct.GPR* %1549, i32 0, i32 33
  %1551 = getelementptr inbounds %struct.Reg, %struct.Reg* %1550, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %1551 to i64*
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1553 = getelementptr inbounds %struct.GPR, %struct.GPR* %1552, i32 0, i32 7
  %1554 = getelementptr inbounds %struct.Reg, %struct.Reg* %1553, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %1554 to i64*
  %1555 = load i64, i64* %RDX.i1355
  %1556 = mul i64 %1555, 4
  %1557 = add i64 %1556, 8807152
  %1558 = load i64, i64* %PC.i1354
  %1559 = add i64 %1558, 11
  store i64 %1559, i64* %PC.i1354
  %1560 = inttoptr i64 %1557 to i32*
  store i32 0, i32* %1560
  store %struct.Memory* %loadMem_40c8d7, %struct.Memory** %MEMORY
  %loadMem_40c8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i1352 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 11
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RDI.i1353 = bitcast %union.anon* %1566 to i64*
  %1567 = load i64, i64* %PC.i1352
  %1568 = add i64 %1567, 7
  store i64 %1568, i64* %PC.i1352
  %1569 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %1570 = zext i32 %1569 to i64
  store i64 %1570, i64* %RDI.i1353, align 8
  store %struct.Memory* %loadMem_40c8e2, %struct.Memory** %MEMORY
  %loadMem_40c8e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 33
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %1573 to i64*
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 11
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %RDI.i1351 = bitcast %union.anon* %1576 to i64*
  %1577 = load i64, i64* %RDI.i1351
  %1578 = load i64, i64* %PC.i1350
  %1579 = add i64 %1578, 3
  store i64 %1579, i64* %PC.i1350
  %1580 = trunc i64 %1577 to i32
  %1581 = add i32 -1, %1580
  %1582 = zext i32 %1581 to i64
  store i64 %1582, i64* %RDI.i1351, align 8
  %1583 = icmp ult i32 %1581, %1580
  %1584 = icmp ult i32 %1581, -1
  %1585 = or i1 %1583, %1584
  %1586 = zext i1 %1585 to i8
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1586, i8* %1587, align 1
  %1588 = and i32 %1581, 255
  %1589 = call i32 @llvm.ctpop.i32(i32 %1588)
  %1590 = trunc i32 %1589 to i8
  %1591 = and i8 %1590, 1
  %1592 = xor i8 %1591, 1
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1592, i8* %1593, align 1
  %1594 = xor i64 -1, %1577
  %1595 = trunc i64 %1594 to i32
  %1596 = xor i32 %1595, %1581
  %1597 = lshr i32 %1596, 4
  %1598 = trunc i32 %1597 to i8
  %1599 = and i8 %1598, 1
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1599, i8* %1600, align 1
  %1601 = icmp eq i32 %1581, 0
  %1602 = zext i1 %1601 to i8
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1602, i8* %1603, align 1
  %1604 = lshr i32 %1581, 31
  %1605 = trunc i32 %1604 to i8
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1605, i8* %1606, align 1
  %1607 = lshr i32 %1580, 31
  %1608 = xor i32 %1604, %1607
  %1609 = xor i32 %1604, 1
  %1610 = add i32 %1608, %1609
  %1611 = icmp eq i32 %1610, 2
  %1612 = zext i1 %1611 to i8
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1612, i8* %1613, align 1
  store %struct.Memory* %loadMem_40c8e9, %struct.Memory** %MEMORY
  %loadMem_40c8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 33
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %1616 to i64*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 11
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %EDI.i1349 = bitcast %union.anon* %1619 to i32*
  %1620 = load i32, i32* %EDI.i1349
  %1621 = zext i32 %1620 to i64
  %1622 = load i64, i64* %PC.i1348
  %1623 = add i64 %1622, 7
  store i64 %1623, i64* %PC.i1348
  store i32 %1620, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40c8ec, %struct.Memory** %MEMORY
  %loadMem_40c8f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 33
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %1626 to i64*
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1628 = getelementptr inbounds %struct.GPR, %struct.GPR* %1627, i32 0, i32 11
  %1629 = getelementptr inbounds %struct.Reg, %struct.Reg* %1628, i32 0, i32 0
  %RDI.i1346 = bitcast %union.anon* %1629 to i64*
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 15
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %RBP.i1347 = bitcast %union.anon* %1632 to i64*
  %1633 = load i64, i64* %RBP.i1347
  %1634 = sub i64 %1633, 32
  %1635 = load i64, i64* %PC.i1345
  %1636 = add i64 %1635, 3
  store i64 %1636, i64* %PC.i1345
  %1637 = inttoptr i64 %1634 to i32*
  %1638 = load i32, i32* %1637
  %1639 = zext i32 %1638 to i64
  store i64 %1639, i64* %RDI.i1346, align 8
  store %struct.Memory* %loadMem_40c8f3, %struct.Memory** %MEMORY
  %loadMem_40c8f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 33
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %1642 to i64*
  %1643 = load i64, i64* %PC.i1344
  %1644 = add i64 %1643, 8
  store i64 %1644, i64* %PC.i1344
  %1645 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1646, align 1
  %1647 = and i32 %1645, 255
  %1648 = call i32 @llvm.ctpop.i32(i32 %1647)
  %1649 = trunc i32 %1648 to i8
  %1650 = and i8 %1649, 1
  %1651 = xor i8 %1650, 1
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1651, i8* %1652, align 1
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1653, align 1
  %1654 = icmp eq i32 %1645, 0
  %1655 = zext i1 %1654 to i8
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1655, i8* %1656, align 1
  %1657 = lshr i32 %1645, 31
  %1658 = trunc i32 %1657 to i8
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1658, i8* %1659, align 1
  %1660 = lshr i32 %1645, 31
  %1661 = xor i32 %1657, %1660
  %1662 = add i32 %1661, %1660
  %1663 = icmp eq i32 %1662, 2
  %1664 = zext i1 %1663 to i8
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1664, i8* %1665, align 1
  store %struct.Memory* %loadMem_40c8f6, %struct.Memory** %MEMORY
  %loadMem_40c8fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 33
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %1668 to i64*
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 5
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %ECX.i1342 = bitcast %union.anon* %1671 to i32*
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 1
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %RAX.i1343 = bitcast %union.anon* %1674 to i64*
  %1675 = load i32, i32* %ECX.i1342
  %1676 = zext i32 %1675 to i64
  %1677 = load i64, i64* %PC.i1341
  %1678 = add i64 %1677, 3
  store i64 %1678, i64* %PC.i1341
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1680 = load i8, i8* %1679, align 1
  %1681 = icmp eq i8 %1680, 0
  %1682 = load i64, i64* %RAX.i1343, align 8
  %1683 = select i1 %1681, i64 %1676, i64 %1682
  %1684 = and i64 %1683, 4294967295
  store i64 %1684, i64* %RAX.i1343, align 8
  store %struct.Memory* %loadMem_40c8fe, %struct.Memory** %MEMORY
  %loadMem_40c901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1686 = getelementptr inbounds %struct.GPR, %struct.GPR* %1685, i32 0, i32 33
  %1687 = getelementptr inbounds %struct.Reg, %struct.Reg* %1686, i32 0, i32 0
  %PC.i1338 = bitcast %union.anon* %1687 to i64*
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1689 = getelementptr inbounds %struct.GPR, %struct.GPR* %1688, i32 0, i32 1
  %1690 = getelementptr inbounds %struct.Reg, %struct.Reg* %1689, i32 0, i32 0
  %EAX.i1339 = bitcast %union.anon* %1690 to i32*
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1692 = getelementptr inbounds %struct.GPR, %struct.GPR* %1691, i32 0, i32 9
  %1693 = getelementptr inbounds %struct.Reg, %struct.Reg* %1692, i32 0, i32 0
  %RSI.i1340 = bitcast %union.anon* %1693 to i64*
  %1694 = load i32, i32* %EAX.i1339
  %1695 = zext i32 %1694 to i64
  %1696 = load i64, i64* %PC.i1338
  %1697 = add i64 %1696, 2
  store i64 %1697, i64* %PC.i1338
  %1698 = and i64 %1695, 4294967295
  store i64 %1698, i64* %RSI.i1340, align 8
  store %struct.Memory* %loadMem_40c901, %struct.Memory** %MEMORY
  %loadMem1_40c903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1700 = getelementptr inbounds %struct.GPR, %struct.GPR* %1699, i32 0, i32 33
  %1701 = getelementptr inbounds %struct.Reg, %struct.Reg* %1700, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %1701 to i64*
  %1702 = load i64, i64* %PC.i1337
  %1703 = add i64 %1702, -41523
  %1704 = load i64, i64* %PC.i1337
  %1705 = add i64 %1704, 5
  %1706 = load i64, i64* %PC.i1337
  %1707 = add i64 %1706, 5
  store i64 %1707, i64* %PC.i1337
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1709 = load i64, i64* %1708, align 8
  %1710 = add i64 %1709, -8
  %1711 = inttoptr i64 %1710 to i64*
  store i64 %1705, i64* %1711
  store i64 %1710, i64* %1708, align 8
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1703, i64* %1712, align 8
  store %struct.Memory* %loadMem1_40c903, %struct.Memory** %MEMORY
  %loadMem2_40c903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40c903 = load i64, i64* %3
  %call2_40c903 = call %struct.Memory* @sub_4026d0.DropaddHolding(%struct.State* %0, i64 %loadPC_40c903, %struct.Memory* %loadMem2_40c903)
  store %struct.Memory* %call2_40c903, %struct.Memory** %MEMORY
  %loadMem_40c908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1714 = getelementptr inbounds %struct.GPR, %struct.GPR* %1713, i32 0, i32 33
  %1715 = getelementptr inbounds %struct.Reg, %struct.Reg* %1714, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %1715 to i64*
  %1716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1717 = getelementptr inbounds %struct.GPR, %struct.GPR* %1716, i32 0, i32 7
  %1718 = getelementptr inbounds %struct.Reg, %struct.Reg* %1717, i32 0, i32 0
  %RDX.i1336 = bitcast %union.anon* %1718 to i64*
  %1719 = load i64, i64* %PC.i1335
  %1720 = add i64 %1719, 10
  store i64 %1720, i64* %PC.i1335
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RDX.i1336, align 8
  store %struct.Memory* %loadMem_40c908, %struct.Memory** %MEMORY
  %loadMem_40c912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 33
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %1723 to i64*
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 15
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %RBP.i1333 = bitcast %union.anon* %1726 to i64*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 17
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %R8.i1334 = bitcast %union.anon* %1729 to i64*
  %1730 = load i64, i64* %RBP.i1333
  %1731 = sub i64 %1730, 32
  %1732 = load i64, i64* %PC.i1332
  %1733 = add i64 %1732, 4
  store i64 %1733, i64* %PC.i1332
  %1734 = inttoptr i64 %1731 to i32*
  %1735 = load i32, i32* %1734
  %1736 = sext i32 %1735 to i64
  store i64 %1736, i64* %R8.i1334, align 8
  store %struct.Memory* %loadMem_40c912, %struct.Memory** %MEMORY
  %loadMem_40c916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1738 = getelementptr inbounds %struct.GPR, %struct.GPR* %1737, i32 0, i32 33
  %1739 = getelementptr inbounds %struct.Reg, %struct.Reg* %1738, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %1739 to i64*
  %1740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1741 = getelementptr inbounds %struct.GPR, %struct.GPR* %1740, i32 0, i32 1
  %1742 = getelementptr inbounds %struct.Reg, %struct.Reg* %1741, i32 0, i32 0
  %RAX.i1330 = bitcast %union.anon* %1742 to i64*
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 17
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %R8.i1331 = bitcast %union.anon* %1745 to i64*
  %1746 = load i64, i64* %R8.i1331
  %1747 = mul i64 %1746, 4
  %1748 = add i64 %1747, 6478512
  %1749 = load i64, i64* %PC.i1329
  %1750 = add i64 %1749, 8
  store i64 %1750, i64* %PC.i1329
  %1751 = inttoptr i64 %1748 to i32*
  %1752 = load i32, i32* %1751
  %1753 = zext i32 %1752 to i64
  store i64 %1753, i64* %RAX.i1330, align 8
  store %struct.Memory* %loadMem_40c916, %struct.Memory** %MEMORY
  %loadMem_40c91e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 33
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %1756 to i64*
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1758 = getelementptr inbounds %struct.GPR, %struct.GPR* %1757, i32 0, i32 5
  %1759 = getelementptr inbounds %struct.Reg, %struct.Reg* %1758, i32 0, i32 0
  %RCX.i1328 = bitcast %union.anon* %1759 to i64*
  %1760 = load i64, i64* %PC.i1327
  %1761 = add i64 %1760, 7
  store i64 %1761, i64* %PC.i1327
  %1762 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %1763 = zext i32 %1762 to i64
  store i64 %1763, i64* %RCX.i1328, align 8
  store %struct.Memory* %loadMem_40c91e, %struct.Memory** %MEMORY
  %loadMem_40c925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1765 = getelementptr inbounds %struct.GPR, %struct.GPR* %1764, i32 0, i32 33
  %1766 = getelementptr inbounds %struct.Reg, %struct.Reg* %1765, i32 0, i32 0
  %PC.i1324 = bitcast %union.anon* %1766 to i64*
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 1
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %EAX.i1325 = bitcast %union.anon* %1769 to i32*
  %1770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1771 = getelementptr inbounds %struct.GPR, %struct.GPR* %1770, i32 0, i32 5
  %1772 = getelementptr inbounds %struct.Reg, %struct.Reg* %1771, i32 0, i32 0
  %RCX.i1326 = bitcast %union.anon* %1772 to i64*
  %1773 = load i64, i64* %RCX.i1326
  %1774 = load i32, i32* %EAX.i1325
  %1775 = zext i32 %1774 to i64
  %1776 = load i64, i64* %PC.i1324
  %1777 = add i64 %1776, 2
  store i64 %1777, i64* %PC.i1324
  %1778 = trunc i64 %1773 to i32
  %1779 = sub i32 %1778, %1774
  %1780 = zext i32 %1779 to i64
  store i64 %1780, i64* %RCX.i1326, align 8
  %1781 = icmp ult i32 %1778, %1774
  %1782 = zext i1 %1781 to i8
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1782, i8* %1783, align 1
  %1784 = and i32 %1779, 255
  %1785 = call i32 @llvm.ctpop.i32(i32 %1784)
  %1786 = trunc i32 %1785 to i8
  %1787 = and i8 %1786, 1
  %1788 = xor i8 %1787, 1
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1788, i8* %1789, align 1
  %1790 = xor i64 %1775, %1773
  %1791 = trunc i64 %1790 to i32
  %1792 = xor i32 %1791, %1779
  %1793 = lshr i32 %1792, 4
  %1794 = trunc i32 %1793 to i8
  %1795 = and i8 %1794, 1
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1795, i8* %1796, align 1
  %1797 = icmp eq i32 %1779, 0
  %1798 = zext i1 %1797 to i8
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1798, i8* %1799, align 1
  %1800 = lshr i32 %1779, 31
  %1801 = trunc i32 %1800 to i8
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1801, i8* %1802, align 1
  %1803 = lshr i32 %1778, 31
  %1804 = lshr i32 %1774, 31
  %1805 = xor i32 %1804, %1803
  %1806 = xor i32 %1800, %1803
  %1807 = add i32 %1806, %1805
  %1808 = icmp eq i32 %1807, 2
  %1809 = zext i1 %1808 to i8
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1809, i8* %1810, align 1
  store %struct.Memory* %loadMem_40c925, %struct.Memory** %MEMORY
  %loadMem_40c927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 33
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %1813 to i64*
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 5
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %ECX.i1323 = bitcast %union.anon* %1816 to i32*
  %1817 = load i32, i32* %ECX.i1323
  %1818 = zext i32 %1817 to i64
  %1819 = load i64, i64* %PC.i1322
  %1820 = add i64 %1819, 7
  store i64 %1820, i64* %PC.i1322
  store i32 %1817, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40c927, %struct.Memory** %MEMORY
  %loadMem_40c92e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1822 = getelementptr inbounds %struct.GPR, %struct.GPR* %1821, i32 0, i32 33
  %1823 = getelementptr inbounds %struct.Reg, %struct.Reg* %1822, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %1823 to i64*
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1825 = getelementptr inbounds %struct.GPR, %struct.GPR* %1824, i32 0, i32 1
  %1826 = getelementptr inbounds %struct.Reg, %struct.Reg* %1825, i32 0, i32 0
  %RAX.i1320 = bitcast %union.anon* %1826 to i64*
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1828 = getelementptr inbounds %struct.GPR, %struct.GPR* %1827, i32 0, i32 15
  %1829 = getelementptr inbounds %struct.Reg, %struct.Reg* %1828, i32 0, i32 0
  %RBP.i1321 = bitcast %union.anon* %1829 to i64*
  %1830 = load i64, i64* %RBP.i1321
  %1831 = sub i64 %1830, 28
  %1832 = load i64, i64* %PC.i1319
  %1833 = add i64 %1832, 3
  store i64 %1833, i64* %PC.i1319
  %1834 = inttoptr i64 %1831 to i32*
  %1835 = load i32, i32* %1834
  %1836 = zext i32 %1835 to i64
  store i64 %1836, i64* %RAX.i1320, align 8
  store %struct.Memory* %loadMem_40c92e, %struct.Memory** %MEMORY
  %loadMem_40c931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 33
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %PC.i1316 = bitcast %union.anon* %1839 to i64*
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 15
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %RBP.i1317 = bitcast %union.anon* %1842 to i64*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1844 = getelementptr inbounds %struct.GPR, %struct.GPR* %1843, i32 0, i32 17
  %1845 = getelementptr inbounds %struct.Reg, %struct.Reg* %1844, i32 0, i32 0
  %R8.i1318 = bitcast %union.anon* %1845 to i64*
  %1846 = load i64, i64* %RBP.i1317
  %1847 = sub i64 %1846, 24
  %1848 = load i64, i64* %PC.i1316
  %1849 = add i64 %1848, 4
  store i64 %1849, i64* %PC.i1316
  %1850 = inttoptr i64 %1847 to i32*
  %1851 = load i32, i32* %1850
  %1852 = sext i32 %1851 to i64
  store i64 %1852, i64* %R8.i1318, align 8
  store %struct.Memory* %loadMem_40c931, %struct.Memory** %MEMORY
  %loadMem_40c935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 33
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %PC.i1313 = bitcast %union.anon* %1855 to i64*
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1857 = getelementptr inbounds %struct.GPR, %struct.GPR* %1856, i32 0, i32 1
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %EAX.i1314 = bitcast %union.anon* %1858 to i32*
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1860 = getelementptr inbounds %struct.GPR, %struct.GPR* %1859, i32 0, i32 17
  %1861 = getelementptr inbounds %struct.Reg, %struct.Reg* %1860, i32 0, i32 0
  %R8.i1315 = bitcast %union.anon* %1861 to i64*
  %1862 = load i64, i64* %R8.i1315
  %1863 = mul i64 %1862, 4
  %1864 = add i64 %1863, 8807744
  %1865 = load i32, i32* %EAX.i1314
  %1866 = zext i32 %1865 to i64
  %1867 = load i64, i64* %PC.i1313
  %1868 = add i64 %1867, 8
  store i64 %1868, i64* %PC.i1313
  %1869 = inttoptr i64 %1864 to i32*
  store i32 %1865, i32* %1869
  store %struct.Memory* %loadMem_40c935, %struct.Memory** %MEMORY
  %loadMem_40c93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 33
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %1872 to i64*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1874 = getelementptr inbounds %struct.GPR, %struct.GPR* %1873, i32 0, i32 15
  %1875 = getelementptr inbounds %struct.Reg, %struct.Reg* %1874, i32 0, i32 0
  %RBP.i1311 = bitcast %union.anon* %1875 to i64*
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 17
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %R8.i1312 = bitcast %union.anon* %1878 to i64*
  %1879 = load i64, i64* %RBP.i1311
  %1880 = sub i64 %1879, 32
  %1881 = load i64, i64* %PC.i1310
  %1882 = add i64 %1881, 4
  store i64 %1882, i64* %PC.i1310
  %1883 = inttoptr i64 %1880 to i32*
  %1884 = load i32, i32* %1883
  %1885 = sext i32 %1884 to i64
  store i64 %1885, i64* %R8.i1312, align 8
  store %struct.Memory* %loadMem_40c93d, %struct.Memory** %MEMORY
  %loadMem_40c941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 33
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %1888 to i64*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 17
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %R8.i1309 = bitcast %union.anon* %1891 to i64*
  %1892 = load i64, i64* %R8.i1309
  %1893 = load i64, i64* %PC.i1308
  %1894 = add i64 %1893, 7
  store i64 %1894, i64* %PC.i1308
  %1895 = sext i64 %1892 to i128
  %1896 = and i128 %1895, -18446744073709551616
  %1897 = zext i64 %1892 to i128
  %1898 = or i128 %1896, %1897
  %1899 = mul i128 576, %1898
  %1900 = trunc i128 %1899 to i64
  store i64 %1900, i64* %R8.i1309, align 8
  %1901 = sext i64 %1900 to i128
  %1902 = icmp ne i128 %1901, %1899
  %1903 = zext i1 %1902 to i8
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1903, i8* %1904, align 1
  %1905 = trunc i128 %1899 to i32
  %1906 = and i32 %1905, 255
  %1907 = call i32 @llvm.ctpop.i32(i32 %1906)
  %1908 = trunc i32 %1907 to i8
  %1909 = and i8 %1908, 1
  %1910 = xor i8 %1909, 1
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1910, i8* %1911, align 1
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1912, align 1
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1913, align 1
  %1914 = lshr i64 %1900, 63
  %1915 = trunc i64 %1914 to i8
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1915, i8* %1916, align 1
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1903, i8* %1917, align 1
  store %struct.Memory* %loadMem_40c941, %struct.Memory** %MEMORY
  %loadMem_40c948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1919 = getelementptr inbounds %struct.GPR, %struct.GPR* %1918, i32 0, i32 33
  %1920 = getelementptr inbounds %struct.Reg, %struct.Reg* %1919, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %1920 to i64*
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1922 = getelementptr inbounds %struct.GPR, %struct.GPR* %1921, i32 0, i32 7
  %1923 = getelementptr inbounds %struct.Reg, %struct.Reg* %1922, i32 0, i32 0
  %RDX.i1306 = bitcast %union.anon* %1923 to i64*
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 17
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %R8.i1307 = bitcast %union.anon* %1926 to i64*
  %1927 = load i64, i64* %RDX.i1306
  %1928 = load i64, i64* %R8.i1307
  %1929 = load i64, i64* %PC.i1305
  %1930 = add i64 %1929, 3
  store i64 %1930, i64* %PC.i1305
  %1931 = add i64 %1928, %1927
  store i64 %1931, i64* %RDX.i1306, align 8
  %1932 = icmp ult i64 %1931, %1927
  %1933 = icmp ult i64 %1931, %1928
  %1934 = or i1 %1932, %1933
  %1935 = zext i1 %1934 to i8
  %1936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1935, i8* %1936, align 1
  %1937 = trunc i64 %1931 to i32
  %1938 = and i32 %1937, 255
  %1939 = call i32 @llvm.ctpop.i32(i32 %1938)
  %1940 = trunc i32 %1939 to i8
  %1941 = and i8 %1940, 1
  %1942 = xor i8 %1941, 1
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1942, i8* %1943, align 1
  %1944 = xor i64 %1928, %1927
  %1945 = xor i64 %1944, %1931
  %1946 = lshr i64 %1945, 4
  %1947 = trunc i64 %1946 to i8
  %1948 = and i8 %1947, 1
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1948, i8* %1949, align 1
  %1950 = icmp eq i64 %1931, 0
  %1951 = zext i1 %1950 to i8
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1951, i8* %1952, align 1
  %1953 = lshr i64 %1931, 63
  %1954 = trunc i64 %1953 to i8
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1954, i8* %1955, align 1
  %1956 = lshr i64 %1927, 63
  %1957 = lshr i64 %1928, 63
  %1958 = xor i64 %1953, %1956
  %1959 = xor i64 %1953, %1957
  %1960 = add i64 %1958, %1959
  %1961 = icmp eq i64 %1960, 2
  %1962 = zext i1 %1961 to i8
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1962, i8* %1963, align 1
  store %struct.Memory* %loadMem_40c948, %struct.Memory** %MEMORY
  %loadMem_40c94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 33
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %1966 to i64*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 15
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %1969 to i64*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 17
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %R8.i1304 = bitcast %union.anon* %1972 to i64*
  %1973 = load i64, i64* %RBP.i1303
  %1974 = sub i64 %1973, 24
  %1975 = load i64, i64* %PC.i1302
  %1976 = add i64 %1975, 4
  store i64 %1976, i64* %PC.i1302
  %1977 = inttoptr i64 %1974 to i32*
  %1978 = load i32, i32* %1977
  %1979 = sext i32 %1978 to i64
  store i64 %1979, i64* %R8.i1304, align 8
  store %struct.Memory* %loadMem_40c94b, %struct.Memory** %MEMORY
  %loadMem_40c94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 33
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %1982 to i64*
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1984 = getelementptr inbounds %struct.GPR, %struct.GPR* %1983, i32 0, i32 1
  %1985 = getelementptr inbounds %struct.Reg, %struct.Reg* %1984, i32 0, i32 0
  %RAX.i1299 = bitcast %union.anon* %1985 to i64*
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 7
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %RDX.i1300 = bitcast %union.anon* %1988 to i64*
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 17
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %R8.i1301 = bitcast %union.anon* %1991 to i64*
  %1992 = load i64, i64* %RDX.i1300
  %1993 = load i64, i64* %R8.i1301
  %1994 = mul i64 %1993, 4
  %1995 = add i64 %1994, %1992
  %1996 = load i64, i64* %PC.i1298
  %1997 = add i64 %1996, 4
  store i64 %1997, i64* %PC.i1298
  %1998 = inttoptr i64 %1995 to i32*
  %1999 = load i32, i32* %1998
  %2000 = zext i32 %1999 to i64
  store i64 %2000, i64* %RAX.i1299, align 8
  store %struct.Memory* %loadMem_40c94f, %struct.Memory** %MEMORY
  %loadMem_40c953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2002 = getelementptr inbounds %struct.GPR, %struct.GPR* %2001, i32 0, i32 33
  %2003 = getelementptr inbounds %struct.Reg, %struct.Reg* %2002, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %2003 to i64*
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2005 = getelementptr inbounds %struct.GPR, %struct.GPR* %2004, i32 0, i32 1
  %2006 = getelementptr inbounds %struct.Reg, %struct.Reg* %2005, i32 0, i32 0
  %RAX.i1297 = bitcast %union.anon* %2006 to i64*
  %2007 = load i64, i64* %RAX.i1297
  %2008 = load i64, i64* %PC.i1296
  %2009 = add i64 %2008, 7
  store i64 %2009, i64* %PC.i1296
  %2010 = trunc i64 %2007 to i32
  %2011 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %2012 = xor i32 %2011, %2010
  %2013 = zext i32 %2012 to i64
  store i64 %2013, i64* %RAX.i1297, align 8
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2014, align 1
  %2015 = and i32 %2012, 255
  %2016 = call i32 @llvm.ctpop.i32(i32 %2015)
  %2017 = trunc i32 %2016 to i8
  %2018 = and i8 %2017, 1
  %2019 = xor i8 %2018, 1
  %2020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2019, i8* %2020, align 1
  %2021 = icmp eq i32 %2012, 0
  %2022 = zext i1 %2021 to i8
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2022, i8* %2023, align 1
  %2024 = lshr i32 %2012, 31
  %2025 = trunc i32 %2024 to i8
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2025, i8* %2026, align 1
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2027, align 1
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2028, align 1
  store %struct.Memory* %loadMem_40c953, %struct.Memory** %MEMORY
  %loadMem_40c95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 33
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %2031 to i64*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2033 = getelementptr inbounds %struct.GPR, %struct.GPR* %2032, i32 0, i32 1
  %2034 = getelementptr inbounds %struct.Reg, %struct.Reg* %2033, i32 0, i32 0
  %EAX.i1295 = bitcast %union.anon* %2034 to i32*
  %2035 = load i32, i32* %EAX.i1295
  %2036 = zext i32 %2035 to i64
  %2037 = load i64, i64* %PC.i1294
  %2038 = add i64 %2037, 7
  store i64 %2038, i64* %PC.i1294
  store i32 %2035, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40c95a, %struct.Memory** %MEMORY
  %loadMem_40c961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 33
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %2041 to i64*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 1
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %RAX.i1293 = bitcast %union.anon* %2044 to i64*
  %2045 = load i64, i64* %PC.i1292
  %2046 = add i64 %2045, 7
  store i64 %2046, i64* %PC.i1292
  %2047 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %2048 = zext i32 %2047 to i64
  store i64 %2048, i64* %RAX.i1293, align 8
  store %struct.Memory* %loadMem_40c961, %struct.Memory** %MEMORY
  %loadMem_40c968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 1
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RAX.i1291 = bitcast %union.anon* %2054 to i64*
  %2055 = load i64, i64* %RAX.i1291
  %2056 = load i64, i64* %PC.i1290
  %2057 = add i64 %2056, 3
  store i64 %2057, i64* %PC.i1290
  %2058 = xor i64 1, %2055
  %2059 = trunc i64 %2058 to i32
  %2060 = and i64 %2058, 4294967295
  store i64 %2060, i64* %RAX.i1291, align 8
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2061, align 1
  %2062 = and i32 %2059, 255
  %2063 = call i32 @llvm.ctpop.i32(i32 %2062)
  %2064 = trunc i32 %2063 to i8
  %2065 = and i8 %2064, 1
  %2066 = xor i8 %2065, 1
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2066, i8* %2067, align 1
  %2068 = icmp eq i32 %2059, 0
  %2069 = zext i1 %2068 to i8
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2069, i8* %2070, align 1
  %2071 = lshr i32 %2059, 31
  %2072 = trunc i32 %2071 to i8
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2072, i8* %2073, align 1
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2074, align 1
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2075, align 1
  store %struct.Memory* %loadMem_40c968, %struct.Memory** %MEMORY
  %loadMem_40c96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 33
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %PC.i1288 = bitcast %union.anon* %2078 to i64*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 1
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %EAX.i1289 = bitcast %union.anon* %2081 to i32*
  %2082 = load i32, i32* %EAX.i1289
  %2083 = zext i32 %2082 to i64
  %2084 = load i64, i64* %PC.i1288
  %2085 = add i64 %2084, 7
  store i64 %2085, i64* %PC.i1288
  store i32 %2082, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40c96b, %struct.Memory** %MEMORY
  %loadMem_40c972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2087 = getelementptr inbounds %struct.GPR, %struct.GPR* %2086, i32 0, i32 33
  %2088 = getelementptr inbounds %struct.Reg, %struct.Reg* %2087, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %2088 to i64*
  %2089 = load i64, i64* %PC.i1287
  %2090 = add i64 %2089, 3218
  %2091 = load i64, i64* %PC.i1287
  %2092 = add i64 %2091, 5
  store i64 %2092, i64* %PC.i1287
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2090, i64* %2093, align 8
  store %struct.Memory* %loadMem_40c972, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40c977:                                  ; preds = %entry
  %loadMem_40c977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2095 = getelementptr inbounds %struct.GPR, %struct.GPR* %2094, i32 0, i32 33
  %2096 = getelementptr inbounds %struct.Reg, %struct.Reg* %2095, i32 0, i32 0
  %PC.i1285 = bitcast %union.anon* %2096 to i64*
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2098 = getelementptr inbounds %struct.GPR, %struct.GPR* %2097, i32 0, i32 1
  %2099 = getelementptr inbounds %struct.Reg, %struct.Reg* %2098, i32 0, i32 0
  %RAX.i1286 = bitcast %union.anon* %2099 to i64*
  %2100 = load i64, i64* %PC.i1285
  %2101 = add i64 %2100, 10
  store i64 %2101, i64* %PC.i1285
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1286, align 8
  store %struct.Memory* %loadMem_40c977, %struct.Memory** %MEMORY
  %loadMem_40c981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2103 = getelementptr inbounds %struct.GPR, %struct.GPR* %2102, i32 0, i32 33
  %2104 = getelementptr inbounds %struct.Reg, %struct.Reg* %2103, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %2104 to i64*
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2106 = getelementptr inbounds %struct.GPR, %struct.GPR* %2105, i32 0, i32 5
  %2107 = getelementptr inbounds %struct.Reg, %struct.Reg* %2106, i32 0, i32 0
  %RCX.i1283 = bitcast %union.anon* %2107 to i64*
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2109 = getelementptr inbounds %struct.GPR, %struct.GPR* %2108, i32 0, i32 15
  %2110 = getelementptr inbounds %struct.Reg, %struct.Reg* %2109, i32 0, i32 0
  %RBP.i1284 = bitcast %union.anon* %2110 to i64*
  %2111 = load i64, i64* %RBP.i1284
  %2112 = sub i64 %2111, 24
  %2113 = load i64, i64* %PC.i1282
  %2114 = add i64 %2113, 4
  store i64 %2114, i64* %PC.i1282
  %2115 = inttoptr i64 %2112 to i32*
  %2116 = load i32, i32* %2115
  %2117 = sext i32 %2116 to i64
  store i64 %2117, i64* %RCX.i1283, align 8
  store %struct.Memory* %loadMem_40c981, %struct.Memory** %MEMORY
  %loadMem_40c985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 33
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %2120 to i64*
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2122 = getelementptr inbounds %struct.GPR, %struct.GPR* %2121, i32 0, i32 5
  %2123 = getelementptr inbounds %struct.Reg, %struct.Reg* %2122, i32 0, i32 0
  %RCX.i1280 = bitcast %union.anon* %2123 to i64*
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2125 = getelementptr inbounds %struct.GPR, %struct.GPR* %2124, i32 0, i32 7
  %2126 = getelementptr inbounds %struct.Reg, %struct.Reg* %2125, i32 0, i32 0
  %RDX.i1281 = bitcast %union.anon* %2126 to i64*
  %2127 = load i64, i64* %RCX.i1280
  %2128 = mul i64 %2127, 4
  %2129 = add i64 %2128, 8807152
  %2130 = load i64, i64* %PC.i1279
  %2131 = add i64 %2130, 7
  store i64 %2131, i64* %PC.i1279
  %2132 = inttoptr i64 %2129 to i32*
  %2133 = load i32, i32* %2132
  %2134 = zext i32 %2133 to i64
  store i64 %2134, i64* %RDX.i1281, align 8
  store %struct.Memory* %loadMem_40c985, %struct.Memory** %MEMORY
  %loadMem_40c98c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 5
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %RCX.i1277 = bitcast %union.anon* %2140 to i64*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2142 = getelementptr inbounds %struct.GPR, %struct.GPR* %2141, i32 0, i32 15
  %2143 = getelementptr inbounds %struct.Reg, %struct.Reg* %2142, i32 0, i32 0
  %RBP.i1278 = bitcast %union.anon* %2143 to i64*
  %2144 = load i64, i64* %RBP.i1278
  %2145 = sub i64 %2144, 20
  %2146 = load i64, i64* %PC.i1276
  %2147 = add i64 %2146, 4
  store i64 %2147, i64* %PC.i1276
  %2148 = inttoptr i64 %2145 to i32*
  %2149 = load i32, i32* %2148
  %2150 = sext i32 %2149 to i64
  store i64 %2150, i64* %RCX.i1277, align 8
  store %struct.Memory* %loadMem_40c98c, %struct.Memory** %MEMORY
  %loadMem_40c990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 33
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %2153 to i64*
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2155 = getelementptr inbounds %struct.GPR, %struct.GPR* %2154, i32 0, i32 7
  %2156 = getelementptr inbounds %struct.Reg, %struct.Reg* %2155, i32 0, i32 0
  %EDX.i1274 = bitcast %union.anon* %2156 to i32*
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2158 = getelementptr inbounds %struct.GPR, %struct.GPR* %2157, i32 0, i32 5
  %2159 = getelementptr inbounds %struct.Reg, %struct.Reg* %2158, i32 0, i32 0
  %RCX.i1275 = bitcast %union.anon* %2159 to i64*
  %2160 = load i64, i64* %RCX.i1275
  %2161 = mul i64 %2160, 4
  %2162 = add i64 %2161, 8807152
  %2163 = load i32, i32* %EDX.i1274
  %2164 = zext i32 %2163 to i64
  %2165 = load i64, i64* %PC.i1273
  %2166 = add i64 %2165, 7
  store i64 %2166, i64* %PC.i1273
  %2167 = inttoptr i64 %2162 to i32*
  store i32 %2163, i32* %2167
  store %struct.Memory* %loadMem_40c990, %struct.Memory** %MEMORY
  %loadMem_40c997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2169 = getelementptr inbounds %struct.GPR, %struct.GPR* %2168, i32 0, i32 33
  %2170 = getelementptr inbounds %struct.Reg, %struct.Reg* %2169, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %2170 to i64*
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2172 = getelementptr inbounds %struct.GPR, %struct.GPR* %2171, i32 0, i32 5
  %2173 = getelementptr inbounds %struct.Reg, %struct.Reg* %2172, i32 0, i32 0
  %RCX.i1272 = bitcast %union.anon* %2173 to i64*
  %2174 = load i64, i64* %PC.i1271
  %2175 = add i64 %2174, 8
  store i64 %2175, i64* %PC.i1271
  %2176 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %2177 = sext i32 %2176 to i64
  store i64 %2177, i64* %RCX.i1272, align 8
  store %struct.Memory* %loadMem_40c997, %struct.Memory** %MEMORY
  %loadMem_40c99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 33
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %2180 to i64*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 5
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RCX.i1270 = bitcast %union.anon* %2183 to i64*
  %2184 = load i64, i64* %RCX.i1270
  %2185 = load i64, i64* %PC.i1269
  %2186 = add i64 %2185, 4
  store i64 %2186, i64* %PC.i1269
  %2187 = shl i64 %2184, 3
  %2188 = icmp slt i64 %2187, 0
  %2189 = shl i64 %2187, 1
  store i64 %2189, i64* %RCX.i1270, align 8
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2191 = zext i1 %2188 to i8
  store i8 %2191, i8* %2190, align 1
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2193 = trunc i64 %2189 to i32
  %2194 = and i32 %2193, 254
  %2195 = call i32 @llvm.ctpop.i32(i32 %2194)
  %2196 = trunc i32 %2195 to i8
  %2197 = and i8 %2196, 1
  %2198 = xor i8 %2197, 1
  store i8 %2198, i8* %2192, align 1
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2199, align 1
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2201 = icmp eq i64 %2189, 0
  %2202 = zext i1 %2201 to i8
  store i8 %2202, i8* %2200, align 1
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2204 = lshr i64 %2189, 63
  %2205 = trunc i64 %2204 to i8
  store i8 %2205, i8* %2203, align 1
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2206, align 1
  store %struct.Memory* %loadMem_40c99f, %struct.Memory** %MEMORY
  %loadMem_40c9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2208 = getelementptr inbounds %struct.GPR, %struct.GPR* %2207, i32 0, i32 33
  %2209 = getelementptr inbounds %struct.Reg, %struct.Reg* %2208, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %2209 to i64*
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2211 = getelementptr inbounds %struct.GPR, %struct.GPR* %2210, i32 0, i32 1
  %2212 = getelementptr inbounds %struct.Reg, %struct.Reg* %2211, i32 0, i32 0
  %RAX.i1267 = bitcast %union.anon* %2212 to i64*
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2214 = getelementptr inbounds %struct.GPR, %struct.GPR* %2213, i32 0, i32 9
  %2215 = getelementptr inbounds %struct.Reg, %struct.Reg* %2214, i32 0, i32 0
  %RSI.i1268 = bitcast %union.anon* %2215 to i64*
  %2216 = load i64, i64* %RAX.i1267
  %2217 = load i64, i64* %PC.i1266
  %2218 = add i64 %2217, 3
  store i64 %2218, i64* %PC.i1266
  store i64 %2216, i64* %RSI.i1268, align 8
  store %struct.Memory* %loadMem_40c9a3, %struct.Memory** %MEMORY
  %loadMem_40c9a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2220 = getelementptr inbounds %struct.GPR, %struct.GPR* %2219, i32 0, i32 33
  %2221 = getelementptr inbounds %struct.Reg, %struct.Reg* %2220, i32 0, i32 0
  %PC.i1263 = bitcast %union.anon* %2221 to i64*
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2223 = getelementptr inbounds %struct.GPR, %struct.GPR* %2222, i32 0, i32 5
  %2224 = getelementptr inbounds %struct.Reg, %struct.Reg* %2223, i32 0, i32 0
  %RCX.i1264 = bitcast %union.anon* %2224 to i64*
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2226 = getelementptr inbounds %struct.GPR, %struct.GPR* %2225, i32 0, i32 9
  %2227 = getelementptr inbounds %struct.Reg, %struct.Reg* %2226, i32 0, i32 0
  %RSI.i1265 = bitcast %union.anon* %2227 to i64*
  %2228 = load i64, i64* %RSI.i1265
  %2229 = load i64, i64* %RCX.i1264
  %2230 = load i64, i64* %PC.i1263
  %2231 = add i64 %2230, 3
  store i64 %2231, i64* %PC.i1263
  %2232 = add i64 %2229, %2228
  store i64 %2232, i64* %RSI.i1265, align 8
  %2233 = icmp ult i64 %2232, %2228
  %2234 = icmp ult i64 %2232, %2229
  %2235 = or i1 %2233, %2234
  %2236 = zext i1 %2235 to i8
  %2237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2236, i8* %2237, align 1
  %2238 = trunc i64 %2232 to i32
  %2239 = and i32 %2238, 255
  %2240 = call i32 @llvm.ctpop.i32(i32 %2239)
  %2241 = trunc i32 %2240 to i8
  %2242 = and i8 %2241, 1
  %2243 = xor i8 %2242, 1
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2243, i8* %2244, align 1
  %2245 = xor i64 %2229, %2228
  %2246 = xor i64 %2245, %2232
  %2247 = lshr i64 %2246, 4
  %2248 = trunc i64 %2247 to i8
  %2249 = and i8 %2248, 1
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2249, i8* %2250, align 1
  %2251 = icmp eq i64 %2232, 0
  %2252 = zext i1 %2251 to i8
  %2253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2252, i8* %2253, align 1
  %2254 = lshr i64 %2232, 63
  %2255 = trunc i64 %2254 to i8
  %2256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2255, i8* %2256, align 1
  %2257 = lshr i64 %2228, 63
  %2258 = lshr i64 %2229, 63
  %2259 = xor i64 %2254, %2257
  %2260 = xor i64 %2254, %2258
  %2261 = add i64 %2259, %2260
  %2262 = icmp eq i64 %2261, 2
  %2263 = zext i1 %2262 to i8
  %2264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2263, i8* %2264, align 1
  store %struct.Memory* %loadMem_40c9a6, %struct.Memory** %MEMORY
  %loadMem_40c9a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 33
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %PC.i1260 = bitcast %union.anon* %2267 to i64*
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2269 = getelementptr inbounds %struct.GPR, %struct.GPR* %2268, i32 0, i32 7
  %2270 = getelementptr inbounds %struct.Reg, %struct.Reg* %2269, i32 0, i32 0
  %RDX.i1261 = bitcast %union.anon* %2270 to i64*
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2272 = getelementptr inbounds %struct.GPR, %struct.GPR* %2271, i32 0, i32 9
  %2273 = getelementptr inbounds %struct.Reg, %struct.Reg* %2272, i32 0, i32 0
  %RSI.i1262 = bitcast %union.anon* %2273 to i64*
  %2274 = load i64, i64* %RSI.i1262
  %2275 = load i64, i64* %PC.i1260
  %2276 = add i64 %2275, 2
  store i64 %2276, i64* %PC.i1260
  %2277 = inttoptr i64 %2274 to i32*
  %2278 = load i32, i32* %2277
  %2279 = zext i32 %2278 to i64
  store i64 %2279, i64* %RDX.i1261, align 8
  store %struct.Memory* %loadMem_40c9a9, %struct.Memory** %MEMORY
  %loadMem_40c9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 33
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 5
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RCX.i1258 = bitcast %union.anon* %2285 to i64*
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2287 = getelementptr inbounds %struct.GPR, %struct.GPR* %2286, i32 0, i32 15
  %2288 = getelementptr inbounds %struct.Reg, %struct.Reg* %2287, i32 0, i32 0
  %RBP.i1259 = bitcast %union.anon* %2288 to i64*
  %2289 = load i64, i64* %RBP.i1259
  %2290 = sub i64 %2289, 24
  %2291 = load i64, i64* %PC.i1257
  %2292 = add i64 %2291, 4
  store i64 %2292, i64* %PC.i1257
  %2293 = inttoptr i64 %2290 to i32*
  %2294 = load i32, i32* %2293
  %2295 = sext i32 %2294 to i64
  store i64 %2295, i64* %RCX.i1258, align 8
  store %struct.Memory* %loadMem_40c9ab, %struct.Memory** %MEMORY
  %loadMem_40c9af = load %struct.Memory*, %struct.Memory** %MEMORY
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 33
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 7
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %EDX.i1255 = bitcast %union.anon* %2301 to i32*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 5
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %RCX.i1256 = bitcast %union.anon* %2304 to i64*
  %2305 = load i64, i64* %RCX.i1256
  %2306 = mul i64 %2305, 4
  %2307 = add i64 %2306, 8807152
  %2308 = load i32, i32* %EDX.i1255
  %2309 = zext i32 %2308 to i64
  %2310 = load i64, i64* %PC.i1254
  %2311 = add i64 %2310, 7
  store i64 %2311, i64* %PC.i1254
  %2312 = inttoptr i64 %2307 to i32*
  store i32 %2308, i32* %2312
  store %struct.Memory* %loadMem_40c9af, %struct.Memory** %MEMORY
  %loadMem_40c9b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 33
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %2315 to i64*
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2317 = getelementptr inbounds %struct.GPR, %struct.GPR* %2316, i32 0, i32 7
  %2318 = getelementptr inbounds %struct.Reg, %struct.Reg* %2317, i32 0, i32 0
  %RDX.i1252 = bitcast %union.anon* %2318 to i64*
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 15
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %2321 to i64*
  %2322 = load i64, i64* %RBP.i1253
  %2323 = sub i64 %2322, 24
  %2324 = load i64, i64* %PC.i1251
  %2325 = add i64 %2324, 3
  store i64 %2325, i64* %PC.i1251
  %2326 = inttoptr i64 %2323 to i32*
  %2327 = load i32, i32* %2326
  %2328 = zext i32 %2327 to i64
  store i64 %2328, i64* %RDX.i1252, align 8
  store %struct.Memory* %loadMem_40c9b6, %struct.Memory** %MEMORY
  %loadMem_40c9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 33
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %2331 to i64*
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2333 = getelementptr inbounds %struct.GPR, %struct.GPR* %2332, i32 0, i32 5
  %2334 = getelementptr inbounds %struct.Reg, %struct.Reg* %2333, i32 0, i32 0
  %RCX.i1249 = bitcast %union.anon* %2334 to i64*
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2336 = getelementptr inbounds %struct.GPR, %struct.GPR* %2335, i32 0, i32 15
  %2337 = getelementptr inbounds %struct.Reg, %struct.Reg* %2336, i32 0, i32 0
  %RBP.i1250 = bitcast %union.anon* %2337 to i64*
  %2338 = load i64, i64* %RBP.i1250
  %2339 = sub i64 %2338, 24
  %2340 = load i64, i64* %PC.i1248
  %2341 = add i64 %2340, 4
  store i64 %2341, i64* %PC.i1248
  %2342 = inttoptr i64 %2339 to i32*
  %2343 = load i32, i32* %2342
  %2344 = sext i32 %2343 to i64
  store i64 %2344, i64* %RCX.i1249, align 8
  store %struct.Memory* %loadMem_40c9b9, %struct.Memory** %MEMORY
  %loadMem_40c9bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2346 = getelementptr inbounds %struct.GPR, %struct.GPR* %2345, i32 0, i32 33
  %2347 = getelementptr inbounds %struct.Reg, %struct.Reg* %2346, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %2347 to i64*
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2349 = getelementptr inbounds %struct.GPR, %struct.GPR* %2348, i32 0, i32 5
  %2350 = getelementptr inbounds %struct.Reg, %struct.Reg* %2349, i32 0, i32 0
  %RCX.i1247 = bitcast %union.anon* %2350 to i64*
  %2351 = load i64, i64* %RCX.i1247
  %2352 = mul i64 %2351, 4
  %2353 = add i64 %2352, 8807152
  %2354 = load i64, i64* %PC.i1246
  %2355 = add i64 %2354, 8
  store i64 %2355, i64* %PC.i1246
  %2356 = inttoptr i64 %2353 to i32*
  %2357 = load i32, i32* %2356
  %2358 = sext i32 %2357 to i64
  store i64 %2358, i64* %RCX.i1247, align 8
  store %struct.Memory* %loadMem_40c9bd, %struct.Memory** %MEMORY
  %loadMem_40c9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2360 = getelementptr inbounds %struct.GPR, %struct.GPR* %2359, i32 0, i32 33
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %2361 to i64*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 7
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %EDX.i1244 = bitcast %union.anon* %2364 to i32*
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 5
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %RCX.i1245 = bitcast %union.anon* %2367 to i64*
  %2368 = load i64, i64* %RCX.i1245
  %2369 = mul i64 %2368, 4
  %2370 = add i64 %2369, 8778480
  %2371 = load i32, i32* %EDX.i1244
  %2372 = zext i32 %2371 to i64
  %2373 = load i64, i64* %PC.i1243
  %2374 = add i64 %2373, 7
  store i64 %2374, i64* %PC.i1243
  %2375 = inttoptr i64 %2370 to i32*
  store i32 %2371, i32* %2375
  store %struct.Memory* %loadMem_40c9c5, %struct.Memory** %MEMORY
  %loadMem_40c9cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 33
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %2378 to i64*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 7
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %RDX.i1241 = bitcast %union.anon* %2381 to i64*
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2383 = getelementptr inbounds %struct.GPR, %struct.GPR* %2382, i32 0, i32 15
  %2384 = getelementptr inbounds %struct.Reg, %struct.Reg* %2383, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %2384 to i64*
  %2385 = load i64, i64* %RBP.i1242
  %2386 = sub i64 %2385, 20
  %2387 = load i64, i64* %PC.i1240
  %2388 = add i64 %2387, 3
  store i64 %2388, i64* %PC.i1240
  %2389 = inttoptr i64 %2386 to i32*
  %2390 = load i32, i32* %2389
  %2391 = zext i32 %2390 to i64
  store i64 %2391, i64* %RDX.i1241, align 8
  store %struct.Memory* %loadMem_40c9cc, %struct.Memory** %MEMORY
  %loadMem_40c9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2393 = getelementptr inbounds %struct.GPR, %struct.GPR* %2392, i32 0, i32 33
  %2394 = getelementptr inbounds %struct.Reg, %struct.Reg* %2393, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %2394 to i64*
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 5
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %RCX.i1238 = bitcast %union.anon* %2397 to i64*
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 15
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %RBP.i1239 = bitcast %union.anon* %2400 to i64*
  %2401 = load i64, i64* %RBP.i1239
  %2402 = sub i64 %2401, 20
  %2403 = load i64, i64* %PC.i1237
  %2404 = add i64 %2403, 4
  store i64 %2404, i64* %PC.i1237
  %2405 = inttoptr i64 %2402 to i32*
  %2406 = load i32, i32* %2405
  %2407 = sext i32 %2406 to i64
  store i64 %2407, i64* %RCX.i1238, align 8
  store %struct.Memory* %loadMem_40c9cf, %struct.Memory** %MEMORY
  %loadMem_40c9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2409 = getelementptr inbounds %struct.GPR, %struct.GPR* %2408, i32 0, i32 33
  %2410 = getelementptr inbounds %struct.Reg, %struct.Reg* %2409, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %2410 to i64*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2412 = getelementptr inbounds %struct.GPR, %struct.GPR* %2411, i32 0, i32 5
  %2413 = getelementptr inbounds %struct.Reg, %struct.Reg* %2412, i32 0, i32 0
  %RCX.i1236 = bitcast %union.anon* %2413 to i64*
  %2414 = load i64, i64* %RCX.i1236
  %2415 = mul i64 %2414, 4
  %2416 = add i64 %2415, 8807152
  %2417 = load i64, i64* %PC.i1235
  %2418 = add i64 %2417, 8
  store i64 %2418, i64* %PC.i1235
  %2419 = inttoptr i64 %2416 to i32*
  %2420 = load i32, i32* %2419
  %2421 = sext i32 %2420 to i64
  store i64 %2421, i64* %RCX.i1236, align 8
  store %struct.Memory* %loadMem_40c9d3, %struct.Memory** %MEMORY
  %loadMem_40c9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2423 = getelementptr inbounds %struct.GPR, %struct.GPR* %2422, i32 0, i32 33
  %2424 = getelementptr inbounds %struct.Reg, %struct.Reg* %2423, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %2424 to i64*
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2426 = getelementptr inbounds %struct.GPR, %struct.GPR* %2425, i32 0, i32 7
  %2427 = getelementptr inbounds %struct.Reg, %struct.Reg* %2426, i32 0, i32 0
  %EDX.i1233 = bitcast %union.anon* %2427 to i32*
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 5
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %RCX.i1234 = bitcast %union.anon* %2430 to i64*
  %2431 = load i64, i64* %RCX.i1234
  %2432 = mul i64 %2431, 4
  %2433 = add i64 %2432, 8778480
  %2434 = load i32, i32* %EDX.i1233
  %2435 = zext i32 %2434 to i64
  %2436 = load i64, i64* %PC.i1232
  %2437 = add i64 %2436, 7
  store i64 %2437, i64* %PC.i1232
  %2438 = inttoptr i64 %2433 to i32*
  store i32 %2434, i32* %2438
  store %struct.Memory* %loadMem_40c9db, %struct.Memory** %MEMORY
  %loadMem_40c9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2440 = getelementptr inbounds %struct.GPR, %struct.GPR* %2439, i32 0, i32 33
  %2441 = getelementptr inbounds %struct.Reg, %struct.Reg* %2440, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %2441 to i64*
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2443 = getelementptr inbounds %struct.GPR, %struct.GPR* %2442, i32 0, i32 5
  %2444 = getelementptr inbounds %struct.Reg, %struct.Reg* %2443, i32 0, i32 0
  %RCX.i1231 = bitcast %union.anon* %2444 to i64*
  %2445 = load i64, i64* %PC.i1230
  %2446 = add i64 %2445, 8
  store i64 %2446, i64* %PC.i1230
  %2447 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %2448 = sext i32 %2447 to i64
  store i64 %2448, i64* %RCX.i1231, align 8
  store %struct.Memory* %loadMem_40c9e2, %struct.Memory** %MEMORY
  %loadMem_40c9ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 33
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %2451 to i64*
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2453 = getelementptr inbounds %struct.GPR, %struct.GPR* %2452, i32 0, i32 5
  %2454 = getelementptr inbounds %struct.Reg, %struct.Reg* %2453, i32 0, i32 0
  %RCX.i1229 = bitcast %union.anon* %2454 to i64*
  %2455 = load i64, i64* %RCX.i1229
  %2456 = load i64, i64* %PC.i1228
  %2457 = add i64 %2456, 4
  store i64 %2457, i64* %PC.i1228
  %2458 = shl i64 %2455, 3
  %2459 = icmp slt i64 %2458, 0
  %2460 = shl i64 %2458, 1
  store i64 %2460, i64* %RCX.i1229, align 8
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2462 = zext i1 %2459 to i8
  store i8 %2462, i8* %2461, align 1
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2464 = trunc i64 %2460 to i32
  %2465 = and i32 %2464, 254
  %2466 = call i32 @llvm.ctpop.i32(i32 %2465)
  %2467 = trunc i32 %2466 to i8
  %2468 = and i8 %2467, 1
  %2469 = xor i8 %2468, 1
  store i8 %2469, i8* %2463, align 1
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2470, align 1
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2472 = icmp eq i64 %2460, 0
  %2473 = zext i1 %2472 to i8
  store i8 %2473, i8* %2471, align 1
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2475 = lshr i64 %2460, 63
  %2476 = trunc i64 %2475 to i8
  store i8 %2476, i8* %2474, align 1
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2477, align 1
  store %struct.Memory* %loadMem_40c9ea, %struct.Memory** %MEMORY
  %loadMem_40c9ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2479 = getelementptr inbounds %struct.GPR, %struct.GPR* %2478, i32 0, i32 33
  %2480 = getelementptr inbounds %struct.Reg, %struct.Reg* %2479, i32 0, i32 0
  %PC.i1225 = bitcast %union.anon* %2480 to i64*
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 1
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %RAX.i1226 = bitcast %union.anon* %2483 to i64*
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2485 = getelementptr inbounds %struct.GPR, %struct.GPR* %2484, i32 0, i32 5
  %2486 = getelementptr inbounds %struct.Reg, %struct.Reg* %2485, i32 0, i32 0
  %RCX.i1227 = bitcast %union.anon* %2486 to i64*
  %2487 = load i64, i64* %RAX.i1226
  %2488 = load i64, i64* %RCX.i1227
  %2489 = load i64, i64* %PC.i1225
  %2490 = add i64 %2489, 3
  store i64 %2490, i64* %PC.i1225
  %2491 = add i64 %2488, %2487
  store i64 %2491, i64* %RAX.i1226, align 8
  %2492 = icmp ult i64 %2491, %2487
  %2493 = icmp ult i64 %2491, %2488
  %2494 = or i1 %2492, %2493
  %2495 = zext i1 %2494 to i8
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2495, i8* %2496, align 1
  %2497 = trunc i64 %2491 to i32
  %2498 = and i32 %2497, 255
  %2499 = call i32 @llvm.ctpop.i32(i32 %2498)
  %2500 = trunc i32 %2499 to i8
  %2501 = and i8 %2500, 1
  %2502 = xor i8 %2501, 1
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2502, i8* %2503, align 1
  %2504 = xor i64 %2488, %2487
  %2505 = xor i64 %2504, %2491
  %2506 = lshr i64 %2505, 4
  %2507 = trunc i64 %2506 to i8
  %2508 = and i8 %2507, 1
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2508, i8* %2509, align 1
  %2510 = icmp eq i64 %2491, 0
  %2511 = zext i1 %2510 to i8
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2511, i8* %2512, align 1
  %2513 = lshr i64 %2491, 63
  %2514 = trunc i64 %2513 to i8
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2514, i8* %2515, align 1
  %2516 = lshr i64 %2487, 63
  %2517 = lshr i64 %2488, 63
  %2518 = xor i64 %2513, %2516
  %2519 = xor i64 %2513, %2517
  %2520 = add i64 %2518, %2519
  %2521 = icmp eq i64 %2520, 2
  %2522 = zext i1 %2521 to i8
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2522, i8* %2523, align 1
  store %struct.Memory* %loadMem_40c9ee, %struct.Memory** %MEMORY
  %loadMem_40c9f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 33
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %2526 to i64*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 1
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %RAX.i1223 = bitcast %union.anon* %2529 to i64*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 7
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %RDX.i1224 = bitcast %union.anon* %2532 to i64*
  %2533 = load i64, i64* %RAX.i1223
  %2534 = add i64 %2533, 4
  %2535 = load i64, i64* %PC.i1222
  %2536 = add i64 %2535, 3
  store i64 %2536, i64* %PC.i1222
  %2537 = inttoptr i64 %2534 to i32*
  %2538 = load i32, i32* %2537
  %2539 = zext i32 %2538 to i64
  store i64 %2539, i64* %RDX.i1224, align 8
  store %struct.Memory* %loadMem_40c9f1, %struct.Memory** %MEMORY
  %loadMem_40c9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 33
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %2542 to i64*
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2544 = getelementptr inbounds %struct.GPR, %struct.GPR* %2543, i32 0, i32 1
  %2545 = getelementptr inbounds %struct.Reg, %struct.Reg* %2544, i32 0, i32 0
  %RAX.i1220 = bitcast %union.anon* %2545 to i64*
  %2546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2547 = getelementptr inbounds %struct.GPR, %struct.GPR* %2546, i32 0, i32 15
  %2548 = getelementptr inbounds %struct.Reg, %struct.Reg* %2547, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %2548 to i64*
  %2549 = load i64, i64* %RBP.i1221
  %2550 = sub i64 %2549, 24
  %2551 = load i64, i64* %PC.i1219
  %2552 = add i64 %2551, 4
  store i64 %2552, i64* %PC.i1219
  %2553 = inttoptr i64 %2550 to i32*
  %2554 = load i32, i32* %2553
  %2555 = sext i32 %2554 to i64
  store i64 %2555, i64* %RAX.i1220, align 8
  store %struct.Memory* %loadMem_40c9f4, %struct.Memory** %MEMORY
  %loadMem_40c9f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2557 = getelementptr inbounds %struct.GPR, %struct.GPR* %2556, i32 0, i32 33
  %2558 = getelementptr inbounds %struct.Reg, %struct.Reg* %2557, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %2558 to i64*
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2560 = getelementptr inbounds %struct.GPR, %struct.GPR* %2559, i32 0, i32 1
  %2561 = getelementptr inbounds %struct.Reg, %struct.Reg* %2560, i32 0, i32 0
  %RAX.i1218 = bitcast %union.anon* %2561 to i64*
  %2562 = load i64, i64* %RAX.i1218
  %2563 = mul i64 %2562, 4
  %2564 = add i64 %2563, 8807152
  %2565 = load i64, i64* %PC.i1217
  %2566 = add i64 %2565, 8
  store i64 %2566, i64* %PC.i1217
  %2567 = inttoptr i64 %2564 to i32*
  %2568 = load i32, i32* %2567
  %2569 = sext i32 %2568 to i64
  store i64 %2569, i64* %RAX.i1218, align 8
  store %struct.Memory* %loadMem_40c9f8, %struct.Memory** %MEMORY
  %loadMem_40ca00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 33
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %2572 to i64*
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 7
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %EDX.i1215 = bitcast %union.anon* %2575 to i32*
  %2576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2577 = getelementptr inbounds %struct.GPR, %struct.GPR* %2576, i32 0, i32 1
  %2578 = getelementptr inbounds %struct.Reg, %struct.Reg* %2577, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %2578 to i64*
  %2579 = load i64, i64* %RAX.i1216
  %2580 = mul i64 %2579, 4
  %2581 = add i64 %2580, 6525216
  %2582 = load i32, i32* %EDX.i1215
  %2583 = zext i32 %2582 to i64
  %2584 = load i64, i64* %PC.i1214
  %2585 = add i64 %2584, 7
  store i64 %2585, i64* %PC.i1214
  %2586 = inttoptr i64 %2581 to i32*
  store i32 %2582, i32* %2586
  store %struct.Memory* %loadMem_40ca00, %struct.Memory** %MEMORY
  %loadMem_40ca07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 33
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %PC.i1212 = bitcast %union.anon* %2589 to i64*
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2591 = getelementptr inbounds %struct.GPR, %struct.GPR* %2590, i32 0, i32 15
  %2592 = getelementptr inbounds %struct.Reg, %struct.Reg* %2591, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %2592 to i64*
  %2593 = load i64, i64* %RBP.i1213
  %2594 = sub i64 %2593, 16
  %2595 = load i64, i64* %PC.i1212
  %2596 = add i64 %2595, 4
  store i64 %2596, i64* %PC.i1212
  %2597 = inttoptr i64 %2594 to i32*
  %2598 = load i32, i32* %2597
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2599, align 1
  %2600 = and i32 %2598, 255
  %2601 = call i32 @llvm.ctpop.i32(i32 %2600)
  %2602 = trunc i32 %2601 to i8
  %2603 = and i8 %2602, 1
  %2604 = xor i8 %2603, 1
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2604, i8* %2605, align 1
  %2606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2606, align 1
  %2607 = icmp eq i32 %2598, 0
  %2608 = zext i1 %2607 to i8
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2608, i8* %2609, align 1
  %2610 = lshr i32 %2598, 31
  %2611 = trunc i32 %2610 to i8
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2611, i8* %2612, align 1
  %2613 = lshr i32 %2598, 31
  %2614 = xor i32 %2610, %2613
  %2615 = add i32 %2614, %2613
  %2616 = icmp eq i32 %2615, 2
  %2617 = zext i1 %2616 to i8
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2617, i8* %2618, align 1
  store %struct.Memory* %loadMem_40ca07, %struct.Memory** %MEMORY
  %loadMem_40ca0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 33
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %2621 to i64*
  %2622 = load i64, i64* %PC.i1211
  %2623 = add i64 %2622, 265
  %2624 = load i64, i64* %PC.i1211
  %2625 = add i64 %2624, 6
  %2626 = load i64, i64* %PC.i1211
  %2627 = add i64 %2626, 6
  store i64 %2627, i64* %PC.i1211
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2629 = load i8, i8* %2628, align 1
  %2630 = icmp eq i8 %2629, 0
  %2631 = zext i1 %2630 to i8
  store i8 %2631, i8* %BRANCH_TAKEN, align 1
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2633 = select i1 %2630, i64 %2623, i64 %2625
  store i64 %2633, i64* %2632, align 8
  store %struct.Memory* %loadMem_40ca0b, %struct.Memory** %MEMORY
  %loadBr_40ca0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca0b = icmp eq i8 %loadBr_40ca0b, 1
  br i1 %cmpBr_40ca0b, label %block_.L_40cb14, label %block_40ca11

block_40ca11:                                     ; preds = %block_.L_40c977
  %loadMem_40ca11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2635 = getelementptr inbounds %struct.GPR, %struct.GPR* %2634, i32 0, i32 33
  %2636 = getelementptr inbounds %struct.Reg, %struct.Reg* %2635, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %2636 to i64*
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 1
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %2639 to i64*
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2641 = getelementptr inbounds %struct.GPR, %struct.GPR* %2640, i32 0, i32 15
  %2642 = getelementptr inbounds %struct.Reg, %struct.Reg* %2641, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %2642 to i64*
  %2643 = load i64, i64* %RBP.i1210
  %2644 = sub i64 %2643, 28
  %2645 = load i64, i64* %PC.i1208
  %2646 = add i64 %2645, 3
  store i64 %2646, i64* %PC.i1208
  %2647 = inttoptr i64 %2644 to i32*
  %2648 = load i32, i32* %2647
  %2649 = zext i32 %2648 to i64
  store i64 %2649, i64* %RAX.i1209, align 8
  store %struct.Memory* %loadMem_40ca11, %struct.Memory** %MEMORY
  %loadMem_40ca14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 33
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 1
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RAX.i1207 = bitcast %union.anon* %2655 to i64*
  %2656 = load i64, i64* %RAX.i1207
  %2657 = load i64, i64* %PC.i1206
  %2658 = add i64 %2657, 3
  store i64 %2658, i64* %PC.i1206
  %2659 = trunc i64 %2656 to i32
  %2660 = sub i32 %2659, 13
  %2661 = zext i32 %2660 to i64
  store i64 %2661, i64* %RAX.i1207, align 8
  %2662 = icmp ult i32 %2659, 13
  %2663 = zext i1 %2662 to i8
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2663, i8* %2664, align 1
  %2665 = and i32 %2660, 255
  %2666 = call i32 @llvm.ctpop.i32(i32 %2665)
  %2667 = trunc i32 %2666 to i8
  %2668 = and i8 %2667, 1
  %2669 = xor i8 %2668, 1
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2669, i8* %2670, align 1
  %2671 = xor i64 13, %2656
  %2672 = trunc i64 %2671 to i32
  %2673 = xor i32 %2672, %2660
  %2674 = lshr i32 %2673, 4
  %2675 = trunc i32 %2674 to i8
  %2676 = and i8 %2675, 1
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2676, i8* %2677, align 1
  %2678 = icmp eq i32 %2660, 0
  %2679 = zext i1 %2678 to i8
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2679, i8* %2680, align 1
  %2681 = lshr i32 %2660, 31
  %2682 = trunc i32 %2681 to i8
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2682, i8* %2683, align 1
  %2684 = lshr i32 %2659, 31
  %2685 = xor i32 %2681, %2684
  %2686 = add i32 %2685, %2684
  %2687 = icmp eq i32 %2686, 2
  %2688 = zext i1 %2687 to i8
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2688, i8* %2689, align 1
  store %struct.Memory* %loadMem_40ca14, %struct.Memory** %MEMORY
  %loadMem_40ca17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2691 = getelementptr inbounds %struct.GPR, %struct.GPR* %2690, i32 0, i32 33
  %2692 = getelementptr inbounds %struct.Reg, %struct.Reg* %2691, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %2692 to i64*
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2694 = getelementptr inbounds %struct.GPR, %struct.GPR* %2693, i32 0, i32 1
  %2695 = getelementptr inbounds %struct.Reg, %struct.Reg* %2694, i32 0, i32 0
  %EAX.i1204 = bitcast %union.anon* %2695 to i32*
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2697 = getelementptr inbounds %struct.GPR, %struct.GPR* %2696, i32 0, i32 15
  %2698 = getelementptr inbounds %struct.Reg, %struct.Reg* %2697, i32 0, i32 0
  %RBP.i1205 = bitcast %union.anon* %2698 to i64*
  %2699 = load i64, i64* %RBP.i1205
  %2700 = sub i64 %2699, 40
  %2701 = load i32, i32* %EAX.i1204
  %2702 = zext i32 %2701 to i64
  %2703 = load i64, i64* %PC.i1203
  %2704 = add i64 %2703, 3
  store i64 %2704, i64* %PC.i1203
  %2705 = inttoptr i64 %2700 to i32*
  store i32 %2701, i32* %2705
  store %struct.Memory* %loadMem_40ca17, %struct.Memory** %MEMORY
  %loadMem_40ca1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2707 = getelementptr inbounds %struct.GPR, %struct.GPR* %2706, i32 0, i32 33
  %2708 = getelementptr inbounds %struct.Reg, %struct.Reg* %2707, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %2708 to i64*
  %2709 = load i64, i64* %PC.i1202
  %2710 = add i64 %2709, 16
  %2711 = load i64, i64* %PC.i1202
  %2712 = add i64 %2711, 6
  %2713 = load i64, i64* %PC.i1202
  %2714 = add i64 %2713, 6
  store i64 %2714, i64* %PC.i1202
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2716 = load i8, i8* %2715, align 1
  %2717 = icmp eq i8 %2716, 0
  %2718 = zext i1 %2717 to i8
  store i8 %2718, i8* %BRANCH_TAKEN, align 1
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2720 = select i1 %2717, i64 %2710, i64 %2712
  store i64 %2720, i64* %2719, align 8
  store %struct.Memory* %loadMem_40ca1a, %struct.Memory** %MEMORY
  %loadBr_40ca1a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca1a = icmp eq i8 %loadBr_40ca1a, 1
  br i1 %cmpBr_40ca1a, label %block_.L_40ca2a, label %block_40ca20

block_40ca20:                                     ; preds = %block_40ca11
  %loadMem_40ca20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2722 = getelementptr inbounds %struct.GPR, %struct.GPR* %2721, i32 0, i32 33
  %2723 = getelementptr inbounds %struct.Reg, %struct.Reg* %2722, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %2723 to i64*
  %2724 = load i64, i64* %PC.i1201
  %2725 = add i64 %2724, 5
  %2726 = load i64, i64* %PC.i1201
  %2727 = add i64 %2726, 5
  store i64 %2727, i64* %PC.i1201
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2725, i64* %2728, align 8
  store %struct.Memory* %loadMem_40ca20, %struct.Memory** %MEMORY
  br label %block_.L_40ca25

block_.L_40ca25:                                  ; preds = %block_40ca20
  %loadMem_40ca25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2730 = getelementptr inbounds %struct.GPR, %struct.GPR* %2729, i32 0, i32 33
  %2731 = getelementptr inbounds %struct.Reg, %struct.Reg* %2730, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %2731 to i64*
  %2732 = load i64, i64* %PC.i1200
  %2733 = add i64 %2732, 234
  %2734 = load i64, i64* %PC.i1200
  %2735 = add i64 %2734, 5
  store i64 %2735, i64* %PC.i1200
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2733, i64* %2736, align 8
  store %struct.Memory* %loadMem_40ca25, %struct.Memory** %MEMORY
  br label %block_.L_40cb0f

block_.L_40ca2a:                                  ; preds = %block_40ca11
  %loadMem_40ca2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2738 = getelementptr inbounds %struct.GPR, %struct.GPR* %2737, i32 0, i32 33
  %2739 = getelementptr inbounds %struct.Reg, %struct.Reg* %2738, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %2739 to i64*
  %2740 = load i64, i64* %PC.i1199
  %2741 = add i64 %2740, 8
  store i64 %2741, i64* %PC.i1199
  %2742 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %2743 = sub i32 %2742, 1
  %2744 = icmp ult i32 %2742, 1
  %2745 = zext i1 %2744 to i8
  %2746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2745, i8* %2746, align 1
  %2747 = and i32 %2743, 255
  %2748 = call i32 @llvm.ctpop.i32(i32 %2747)
  %2749 = trunc i32 %2748 to i8
  %2750 = and i8 %2749, 1
  %2751 = xor i8 %2750, 1
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2751, i8* %2752, align 1
  %2753 = xor i32 %2742, 1
  %2754 = xor i32 %2753, %2743
  %2755 = lshr i32 %2754, 4
  %2756 = trunc i32 %2755 to i8
  %2757 = and i8 %2756, 1
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2757, i8* %2758, align 1
  %2759 = icmp eq i32 %2743, 0
  %2760 = zext i1 %2759 to i8
  %2761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2760, i8* %2761, align 1
  %2762 = lshr i32 %2743, 31
  %2763 = trunc i32 %2762 to i8
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2763, i8* %2764, align 1
  %2765 = lshr i32 %2742, 31
  %2766 = xor i32 %2762, %2765
  %2767 = add i32 %2766, %2765
  %2768 = icmp eq i32 %2767, 2
  %2769 = zext i1 %2768 to i8
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2769, i8* %2770, align 1
  store %struct.Memory* %loadMem_40ca2a, %struct.Memory** %MEMORY
  %loadMem_40ca32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 33
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %2773 to i64*
  %2774 = load i64, i64* %PC.i1198
  %2775 = add i64 %2774, 20
  %2776 = load i64, i64* %PC.i1198
  %2777 = add i64 %2776, 6
  %2778 = load i64, i64* %PC.i1198
  %2779 = add i64 %2778, 6
  store i64 %2779, i64* %PC.i1198
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2781 = load i8, i8* %2780, align 1
  store i8 %2781, i8* %BRANCH_TAKEN, align 1
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2783 = icmp ne i8 %2781, 0
  %2784 = select i1 %2783, i64 %2775, i64 %2777
  store i64 %2784, i64* %2782, align 8
  store %struct.Memory* %loadMem_40ca32, %struct.Memory** %MEMORY
  %loadBr_40ca32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca32 = icmp eq i8 %loadBr_40ca32, 1
  br i1 %cmpBr_40ca32, label %block_.L_40ca46, label %block_40ca38

block_40ca38:                                     ; preds = %block_.L_40ca2a
  %loadMem_40ca38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2786 = getelementptr inbounds %struct.GPR, %struct.GPR* %2785, i32 0, i32 33
  %2787 = getelementptr inbounds %struct.Reg, %struct.Reg* %2786, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %2787 to i64*
  %2788 = load i64, i64* %PC.i1197
  %2789 = add i64 %2788, 8
  store i64 %2789, i64* %PC.i1197
  %2790 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2791, align 1
  %2792 = and i32 %2790, 255
  %2793 = call i32 @llvm.ctpop.i32(i32 %2792)
  %2794 = trunc i32 %2793 to i8
  %2795 = and i8 %2794, 1
  %2796 = xor i8 %2795, 1
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2796, i8* %2797, align 1
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2798, align 1
  %2799 = icmp eq i32 %2790, 0
  %2800 = zext i1 %2799 to i8
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2800, i8* %2801, align 1
  %2802 = lshr i32 %2790, 31
  %2803 = trunc i32 %2802 to i8
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2803, i8* %2804, align 1
  %2805 = lshr i32 %2790, 31
  %2806 = xor i32 %2802, %2805
  %2807 = add i32 %2806, %2805
  %2808 = icmp eq i32 %2807, 2
  %2809 = zext i1 %2808 to i8
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2809, i8* %2810, align 1
  store %struct.Memory* %loadMem_40ca38, %struct.Memory** %MEMORY
  %loadMem_40ca40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 33
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %2813 to i64*
  %2814 = load i64, i64* %PC.i1196
  %2815 = add i64 %2814, 120
  %2816 = load i64, i64* %PC.i1196
  %2817 = add i64 %2816, 6
  %2818 = load i64, i64* %PC.i1196
  %2819 = add i64 %2818, 6
  store i64 %2819, i64* %PC.i1196
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2821 = load i8, i8* %2820, align 1
  %2822 = icmp eq i8 %2821, 0
  %2823 = zext i1 %2822 to i8
  store i8 %2823, i8* %BRANCH_TAKEN, align 1
  %2824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2825 = select i1 %2822, i64 %2815, i64 %2817
  store i64 %2825, i64* %2824, align 8
  store %struct.Memory* %loadMem_40ca40, %struct.Memory** %MEMORY
  %loadBr_40ca40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca40 = icmp eq i8 %loadBr_40ca40, 1
  br i1 %cmpBr_40ca40, label %block_.L_40cab8, label %block_.L_40ca46

block_.L_40ca46:                                  ; preds = %block_40ca38, %block_.L_40ca2a
  %loadMem_40ca46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 33
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %2828 to i64*
  %2829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2830 = getelementptr inbounds %struct.GPR, %struct.GPR* %2829, i32 0, i32 1
  %2831 = getelementptr inbounds %struct.Reg, %struct.Reg* %2830, i32 0, i32 0
  %RAX.i1194 = bitcast %union.anon* %2831 to i64*
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2833 = getelementptr inbounds %struct.GPR, %struct.GPR* %2832, i32 0, i32 15
  %2834 = getelementptr inbounds %struct.Reg, %struct.Reg* %2833, i32 0, i32 0
  %RBP.i1195 = bitcast %union.anon* %2834 to i64*
  %2835 = load i64, i64* %RBP.i1195
  %2836 = sub i64 %2835, 24
  %2837 = load i64, i64* %PC.i1193
  %2838 = add i64 %2837, 4
  store i64 %2838, i64* %PC.i1193
  %2839 = inttoptr i64 %2836 to i32*
  %2840 = load i32, i32* %2839
  %2841 = sext i32 %2840 to i64
  store i64 %2841, i64* %RAX.i1194, align 8
  store %struct.Memory* %loadMem_40ca46, %struct.Memory** %MEMORY
  %loadMem_40ca4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2843 = getelementptr inbounds %struct.GPR, %struct.GPR* %2842, i32 0, i32 33
  %2844 = getelementptr inbounds %struct.Reg, %struct.Reg* %2843, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %2844 to i64*
  %2845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2846 = getelementptr inbounds %struct.GPR, %struct.GPR* %2845, i32 0, i32 1
  %2847 = getelementptr inbounds %struct.Reg, %struct.Reg* %2846, i32 0, i32 0
  %RAX.i1192 = bitcast %union.anon* %2847 to i64*
  %2848 = load i64, i64* %RAX.i1192
  %2849 = mul i64 %2848, 4
  %2850 = add i64 %2849, 8807152
  %2851 = load i64, i64* %PC.i1191
  %2852 = add i64 %2851, 8
  store i64 %2852, i64* %PC.i1191
  %2853 = inttoptr i64 %2850 to i32*
  %2854 = load i32, i32* %2853
  %2855 = sext i32 %2854 to i64
  store i64 %2855, i64* %RAX.i1192, align 8
  store %struct.Memory* %loadMem_40ca4a, %struct.Memory** %MEMORY
  %loadMem_40ca52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2857 = getelementptr inbounds %struct.GPR, %struct.GPR* %2856, i32 0, i32 33
  %2858 = getelementptr inbounds %struct.Reg, %struct.Reg* %2857, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %2858 to i64*
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2860 = getelementptr inbounds %struct.GPR, %struct.GPR* %2859, i32 0, i32 1
  %2861 = getelementptr inbounds %struct.Reg, %struct.Reg* %2860, i32 0, i32 0
  %RAX.i1190 = bitcast %union.anon* %2861 to i64*
  %2862 = load i64, i64* %RAX.i1190
  %2863 = mul i64 %2862, 4
  %2864 = add i64 %2863, 6525216
  %2865 = load i64, i64* %PC.i1189
  %2866 = add i64 %2865, 8
  store i64 %2866, i64* %PC.i1189
  %2867 = inttoptr i64 %2864 to i32*
  %2868 = load i32, i32* %2867
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2869, align 1
  %2870 = and i32 %2868, 255
  %2871 = call i32 @llvm.ctpop.i32(i32 %2870)
  %2872 = trunc i32 %2871 to i8
  %2873 = and i8 %2872, 1
  %2874 = xor i8 %2873, 1
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2874, i8* %2875, align 1
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2876, align 1
  %2877 = icmp eq i32 %2868, 0
  %2878 = zext i1 %2877 to i8
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2878, i8* %2879, align 1
  %2880 = lshr i32 %2868, 31
  %2881 = trunc i32 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2881, i8* %2882, align 1
  %2883 = lshr i32 %2868, 31
  %2884 = xor i32 %2880, %2883
  %2885 = add i32 %2884, %2883
  %2886 = icmp eq i32 %2885, 2
  %2887 = zext i1 %2886 to i8
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2887, i8* %2888, align 1
  store %struct.Memory* %loadMem_40ca52, %struct.Memory** %MEMORY
  %loadMem_40ca5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2890 = getelementptr inbounds %struct.GPR, %struct.GPR* %2889, i32 0, i32 33
  %2891 = getelementptr inbounds %struct.Reg, %struct.Reg* %2890, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %2891 to i64*
  %2892 = load i64, i64* %PC.i1188
  %2893 = add i64 %2892, 50
  %2894 = load i64, i64* %PC.i1188
  %2895 = add i64 %2894, 6
  %2896 = load i64, i64* %PC.i1188
  %2897 = add i64 %2896, 6
  store i64 %2897, i64* %PC.i1188
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2899 = load i8, i8* %2898, align 1
  store i8 %2899, i8* %BRANCH_TAKEN, align 1
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2901 = icmp ne i8 %2899, 0
  %2902 = select i1 %2901, i64 %2893, i64 %2895
  store i64 %2902, i64* %2900, align 8
  store %struct.Memory* %loadMem_40ca5a, %struct.Memory** %MEMORY
  %loadBr_40ca5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40ca5a = icmp eq i8 %loadBr_40ca5a, 1
  br i1 %cmpBr_40ca5a, label %block_.L_40ca8c, label %block_40ca60

block_40ca60:                                     ; preds = %block_.L_40ca46
  %loadMem_40ca60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 33
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %2905 to i64*
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2907 = getelementptr inbounds %struct.GPR, %struct.GPR* %2906, i32 0, i32 11
  %2908 = getelementptr inbounds %struct.Reg, %struct.Reg* %2907, i32 0, i32 0
  %RDI.i1186 = bitcast %union.anon* %2908 to i64*
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 15
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %2911 to i64*
  %2912 = load i64, i64* %RBP.i1187
  %2913 = sub i64 %2912, 28
  %2914 = load i64, i64* %PC.i1185
  %2915 = add i64 %2914, 3
  store i64 %2915, i64* %PC.i1185
  %2916 = inttoptr i64 %2913 to i32*
  %2917 = load i32, i32* %2916
  %2918 = zext i32 %2917 to i64
  store i64 %2918, i64* %RDI.i1186, align 8
  store %struct.Memory* %loadMem_40ca60, %struct.Memory** %MEMORY
  %loadMem1_40ca63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2920 = getelementptr inbounds %struct.GPR, %struct.GPR* %2919, i32 0, i32 33
  %2921 = getelementptr inbounds %struct.Reg, %struct.Reg* %2920, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %2921 to i64*
  %2922 = load i64, i64* %PC.i1184
  %2923 = add i64 %2922, -42419
  %2924 = load i64, i64* %PC.i1184
  %2925 = add i64 %2924, 5
  %2926 = load i64, i64* %PC.i1184
  %2927 = add i64 %2926, 5
  store i64 %2927, i64* %PC.i1184
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2929 = load i64, i64* %2928, align 8
  %2930 = add i64 %2929, -8
  %2931 = inttoptr i64 %2930 to i64*
  store i64 %2925, i64* %2931
  store i64 %2930, i64* %2928, align 8
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2923, i64* %2932, align 8
  store %struct.Memory* %loadMem1_40ca63, %struct.Memory** %MEMORY
  %loadMem2_40ca63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ca63 = load i64, i64* %3
  %call2_40ca63 = call %struct.Memory* @sub_4024b0.SwitchPromoted(%struct.State* %0, i64 %loadPC_40ca63, %struct.Memory* %loadMem2_40ca63)
  store %struct.Memory* %call2_40ca63, %struct.Memory** %MEMORY
  %loadMem_40ca68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 33
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %2935 to i64*
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2937 = getelementptr inbounds %struct.GPR, %struct.GPR* %2936, i32 0, i32 11
  %2938 = getelementptr inbounds %struct.Reg, %struct.Reg* %2937, i32 0, i32 0
  %EDI.i1182 = bitcast %union.anon* %2938 to i32*
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 11
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %RDI.i1183 = bitcast %union.anon* %2941 to i64*
  %2942 = load i64, i64* %RDI.i1183
  %2943 = load i32, i32* %EDI.i1182
  %2944 = zext i32 %2943 to i64
  %2945 = load i64, i64* %PC.i1181
  %2946 = add i64 %2945, 2
  store i64 %2946, i64* %PC.i1181
  %2947 = xor i64 %2944, %2942
  %2948 = trunc i64 %2947 to i32
  %2949 = and i64 %2947, 4294967295
  store i64 %2949, i64* %RDI.i1183, align 8
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2950, align 1
  %2951 = and i32 %2948, 255
  %2952 = call i32 @llvm.ctpop.i32(i32 %2951)
  %2953 = trunc i32 %2952 to i8
  %2954 = and i8 %2953, 1
  %2955 = xor i8 %2954, 1
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2955, i8* %2956, align 1
  %2957 = icmp eq i32 %2948, 0
  %2958 = zext i1 %2957 to i8
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2958, i8* %2959, align 1
  %2960 = lshr i32 %2948, 31
  %2961 = trunc i32 %2960 to i8
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2961, i8* %2962, align 1
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2963, align 1
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2964, align 1
  store %struct.Memory* %loadMem_40ca68, %struct.Memory** %MEMORY
  %loadMem_40ca6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 33
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 5
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %RCX.i1180 = bitcast %union.anon* %2970 to i64*
  %2971 = load i64, i64* %PC.i1179
  %2972 = add i64 %2971, 5
  store i64 %2972, i64* %PC.i1179
  store i64 1, i64* %RCX.i1180, align 8
  store %struct.Memory* %loadMem_40ca6a, %struct.Memory** %MEMORY
  %loadMem_40ca6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 33
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %2975 to i64*
  %2976 = load i64, i64* %PC.i1178
  %2977 = add i64 %2976, 8
  store i64 %2977, i64* %PC.i1178
  %2978 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2979, align 1
  %2980 = and i32 %2978, 255
  %2981 = call i32 @llvm.ctpop.i32(i32 %2980)
  %2982 = trunc i32 %2981 to i8
  %2983 = and i8 %2982, 1
  %2984 = xor i8 %2983, 1
  %2985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2984, i8* %2985, align 1
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2986, align 1
  %2987 = icmp eq i32 %2978, 0
  %2988 = zext i1 %2987 to i8
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2988, i8* %2989, align 1
  %2990 = lshr i32 %2978, 31
  %2991 = trunc i32 %2990 to i8
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2991, i8* %2992, align 1
  %2993 = lshr i32 %2978, 31
  %2994 = xor i32 %2990, %2993
  %2995 = add i32 %2994, %2993
  %2996 = icmp eq i32 %2995, 2
  %2997 = zext i1 %2996 to i8
  %2998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2997, i8* %2998, align 1
  store %struct.Memory* %loadMem_40ca6f, %struct.Memory** %MEMORY
  %loadMem_40ca77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 33
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %3001 to i64*
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 5
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %ECX.i1176 = bitcast %union.anon* %3004 to i32*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 11
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %RDI.i1177 = bitcast %union.anon* %3007 to i64*
  %3008 = load i32, i32* %ECX.i1176
  %3009 = zext i32 %3008 to i64
  %3010 = load i64, i64* %PC.i1175
  %3011 = add i64 %3010, 3
  store i64 %3011, i64* %PC.i1175
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3013 = load i8, i8* %3012, align 1
  %3014 = icmp eq i8 %3013, 0
  %3015 = load i64, i64* %RDI.i1177, align 8
  %3016 = select i1 %3014, i64 %3009, i64 %3015
  %3017 = and i64 %3016, 4294967295
  store i64 %3017, i64* %RDI.i1177, align 8
  store %struct.Memory* %loadMem_40ca77, %struct.Memory** %MEMORY
  %loadMem_40ca7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3019 = getelementptr inbounds %struct.GPR, %struct.GPR* %3018, i32 0, i32 33
  %3020 = getelementptr inbounds %struct.Reg, %struct.Reg* %3019, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %3020 to i64*
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3022 = getelementptr inbounds %struct.GPR, %struct.GPR* %3021, i32 0, i32 11
  %3023 = getelementptr inbounds %struct.Reg, %struct.Reg* %3022, i32 0, i32 0
  %EDI.i1173 = bitcast %union.anon* %3023 to i32*
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3025 = getelementptr inbounds %struct.GPR, %struct.GPR* %3024, i32 0, i32 15
  %3026 = getelementptr inbounds %struct.Reg, %struct.Reg* %3025, i32 0, i32 0
  %RBP.i1174 = bitcast %union.anon* %3026 to i64*
  %3027 = load i64, i64* %RBP.i1174
  %3028 = sub i64 %3027, 44
  %3029 = load i32, i32* %EDI.i1173
  %3030 = zext i32 %3029 to i64
  %3031 = load i64, i64* %PC.i1172
  %3032 = add i64 %3031, 3
  store i64 %3032, i64* %PC.i1172
  %3033 = inttoptr i64 %3028 to i32*
  store i32 %3029, i32* %3033
  store %struct.Memory* %loadMem_40ca7a, %struct.Memory** %MEMORY
  %loadMem_40ca7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3035 = getelementptr inbounds %struct.GPR, %struct.GPR* %3034, i32 0, i32 33
  %3036 = getelementptr inbounds %struct.Reg, %struct.Reg* %3035, i32 0, i32 0
  %PC.i1169 = bitcast %union.anon* %3036 to i64*
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3038 = getelementptr inbounds %struct.GPR, %struct.GPR* %3037, i32 0, i32 1
  %3039 = getelementptr inbounds %struct.Reg, %struct.Reg* %3038, i32 0, i32 0
  %EAX.i1170 = bitcast %union.anon* %3039 to i32*
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3041 = getelementptr inbounds %struct.GPR, %struct.GPR* %3040, i32 0, i32 11
  %3042 = getelementptr inbounds %struct.Reg, %struct.Reg* %3041, i32 0, i32 0
  %RDI.i1171 = bitcast %union.anon* %3042 to i64*
  %3043 = load i32, i32* %EAX.i1170
  %3044 = zext i32 %3043 to i64
  %3045 = load i64, i64* %PC.i1169
  %3046 = add i64 %3045, 2
  store i64 %3046, i64* %PC.i1169
  %3047 = and i64 %3044, 4294967295
  store i64 %3047, i64* %RDI.i1171, align 8
  store %struct.Memory* %loadMem_40ca7d, %struct.Memory** %MEMORY
  %loadMem_40ca7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 33
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %3050 to i64*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 9
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %RSI.i1167 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 15
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %RBP.i1168 = bitcast %union.anon* %3056 to i64*
  %3057 = load i64, i64* %RBP.i1168
  %3058 = sub i64 %3057, 44
  %3059 = load i64, i64* %PC.i1166
  %3060 = add i64 %3059, 3
  store i64 %3060, i64* %PC.i1166
  %3061 = inttoptr i64 %3058 to i32*
  %3062 = load i32, i32* %3061
  %3063 = zext i32 %3062 to i64
  store i64 %3063, i64* %RSI.i1167, align 8
  store %struct.Memory* %loadMem_40ca7f, %struct.Memory** %MEMORY
  %loadMem1_40ca82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 33
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %3066 to i64*
  %3067 = load i64, i64* %PC.i1165
  %3068 = add i64 %3067, -42146
  %3069 = load i64, i64* %PC.i1165
  %3070 = add i64 %3069, 5
  %3071 = load i64, i64* %PC.i1165
  %3072 = add i64 %3071, 5
  store i64 %3072, i64* %PC.i1165
  %3073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3074 = load i64, i64* %3073, align 8
  %3075 = add i64 %3074, -8
  %3076 = inttoptr i64 %3075 to i64*
  store i64 %3070, i64* %3076
  store i64 %3075, i64* %3073, align 8
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3068, i64* %3077, align 8
  store %struct.Memory* %loadMem1_40ca82, %struct.Memory** %MEMORY
  %loadMem2_40ca82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ca82 = load i64, i64* %3
  %call2_40ca82 = call %struct.Memory* @sub_4025e0.removeHolding(%struct.State* %0, i64 %loadPC_40ca82, %struct.Memory* %loadMem2_40ca82)
  store %struct.Memory* %call2_40ca82, %struct.Memory** %MEMORY
  %loadMem_40ca87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3079 = getelementptr inbounds %struct.GPR, %struct.GPR* %3078, i32 0, i32 33
  %3080 = getelementptr inbounds %struct.Reg, %struct.Reg* %3079, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %3080 to i64*
  %3081 = load i64, i64* %PC.i1164
  %3082 = add i64 %3081, 44
  %3083 = load i64, i64* %PC.i1164
  %3084 = add i64 %3083, 5
  store i64 %3084, i64* %PC.i1164
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3082, i64* %3085, align 8
  store %struct.Memory* %loadMem_40ca87, %struct.Memory** %MEMORY
  br label %block_.L_40cab3

block_.L_40ca8c:                                  ; preds = %block_.L_40ca46
  %loadMem_40ca8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 33
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 11
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RDI.i1162 = bitcast %union.anon* %3091 to i64*
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 15
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %RBP.i1163 = bitcast %union.anon* %3094 to i64*
  %3095 = load i64, i64* %RBP.i1163
  %3096 = sub i64 %3095, 28
  %3097 = load i64, i64* %PC.i1161
  %3098 = add i64 %3097, 3
  store i64 %3098, i64* %PC.i1161
  %3099 = inttoptr i64 %3096 to i32*
  %3100 = load i32, i32* %3099
  %3101 = zext i32 %3100 to i64
  store i64 %3101, i64* %RDI.i1162, align 8
  store %struct.Memory* %loadMem_40ca8c, %struct.Memory** %MEMORY
  %loadMem1_40ca8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 33
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %3104 to i64*
  %3105 = load i64, i64* %PC.i1160
  %3106 = add i64 %3105, -42527
  %3107 = load i64, i64* %PC.i1160
  %3108 = add i64 %3107, 5
  %3109 = load i64, i64* %PC.i1160
  %3110 = add i64 %3109, 5
  store i64 %3110, i64* %PC.i1160
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3112 = load i64, i64* %3111, align 8
  %3113 = add i64 %3112, -8
  %3114 = inttoptr i64 %3113 to i64*
  store i64 %3108, i64* %3114
  store i64 %3113, i64* %3111, align 8
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3106, i64* %3115, align 8
  store %struct.Memory* %loadMem1_40ca8f, %struct.Memory** %MEMORY
  %loadMem2_40ca8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40ca8f = load i64, i64* %3
  %call2_40ca8f = call %struct.Memory* @sub_402470.SwitchColor(%struct.State* %0, i64 %loadPC_40ca8f, %struct.Memory* %loadMem2_40ca8f)
  store %struct.Memory* %call2_40ca8f, %struct.Memory** %MEMORY
  %loadMem_40ca94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 33
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %3118 to i64*
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3120 = getelementptr inbounds %struct.GPR, %struct.GPR* %3119, i32 0, i32 11
  %3121 = getelementptr inbounds %struct.Reg, %struct.Reg* %3120, i32 0, i32 0
  %EDI.i1158 = bitcast %union.anon* %3121 to i32*
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3123 = getelementptr inbounds %struct.GPR, %struct.GPR* %3122, i32 0, i32 11
  %3124 = getelementptr inbounds %struct.Reg, %struct.Reg* %3123, i32 0, i32 0
  %RDI.i1159 = bitcast %union.anon* %3124 to i64*
  %3125 = load i64, i64* %RDI.i1159
  %3126 = load i32, i32* %EDI.i1158
  %3127 = zext i32 %3126 to i64
  %3128 = load i64, i64* %PC.i1157
  %3129 = add i64 %3128, 2
  store i64 %3129, i64* %PC.i1157
  %3130 = xor i64 %3127, %3125
  %3131 = trunc i64 %3130 to i32
  %3132 = and i64 %3130, 4294967295
  store i64 %3132, i64* %RDI.i1159, align 8
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3133, align 1
  %3134 = and i32 %3131, 255
  %3135 = call i32 @llvm.ctpop.i32(i32 %3134)
  %3136 = trunc i32 %3135 to i8
  %3137 = and i8 %3136, 1
  %3138 = xor i8 %3137, 1
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3138, i8* %3139, align 1
  %3140 = icmp eq i32 %3131, 0
  %3141 = zext i1 %3140 to i8
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3141, i8* %3142, align 1
  %3143 = lshr i32 %3131, 31
  %3144 = trunc i32 %3143 to i8
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3144, i8* %3145, align 1
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3146, align 1
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3147, align 1
  store %struct.Memory* %loadMem_40ca94, %struct.Memory** %MEMORY
  %loadMem_40ca96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 33
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %PC.i1155 = bitcast %union.anon* %3150 to i64*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 5
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %RCX.i1156 = bitcast %union.anon* %3153 to i64*
  %3154 = load i64, i64* %PC.i1155
  %3155 = add i64 %3154, 5
  store i64 %3155, i64* %PC.i1155
  store i64 1, i64* %RCX.i1156, align 8
  store %struct.Memory* %loadMem_40ca96, %struct.Memory** %MEMORY
  %loadMem_40ca9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3157 = getelementptr inbounds %struct.GPR, %struct.GPR* %3156, i32 0, i32 33
  %3158 = getelementptr inbounds %struct.Reg, %struct.Reg* %3157, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %3158 to i64*
  %3159 = load i64, i64* %PC.i1154
  %3160 = add i64 %3159, 8
  store i64 %3160, i64* %PC.i1154
  %3161 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3162, align 1
  %3163 = and i32 %3161, 255
  %3164 = call i32 @llvm.ctpop.i32(i32 %3163)
  %3165 = trunc i32 %3164 to i8
  %3166 = and i8 %3165, 1
  %3167 = xor i8 %3166, 1
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3167, i8* %3168, align 1
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3169, align 1
  %3170 = icmp eq i32 %3161, 0
  %3171 = zext i1 %3170 to i8
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3171, i8* %3172, align 1
  %3173 = lshr i32 %3161, 31
  %3174 = trunc i32 %3173 to i8
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3174, i8* %3175, align 1
  %3176 = lshr i32 %3161, 31
  %3177 = xor i32 %3173, %3176
  %3178 = add i32 %3177, %3176
  %3179 = icmp eq i32 %3178, 2
  %3180 = zext i1 %3179 to i8
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3180, i8* %3181, align 1
  store %struct.Memory* %loadMem_40ca9b, %struct.Memory** %MEMORY
  %loadMem_40caa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 33
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %3184 to i64*
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 5
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %ECX.i1152 = bitcast %union.anon* %3187 to i32*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3189 = getelementptr inbounds %struct.GPR, %struct.GPR* %3188, i32 0, i32 11
  %3190 = getelementptr inbounds %struct.Reg, %struct.Reg* %3189, i32 0, i32 0
  %RDI.i1153 = bitcast %union.anon* %3190 to i64*
  %3191 = load i32, i32* %ECX.i1152
  %3192 = zext i32 %3191 to i64
  %3193 = load i64, i64* %PC.i1151
  %3194 = add i64 %3193, 3
  store i64 %3194, i64* %PC.i1151
  %3195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3196 = load i8, i8* %3195, align 1
  %3197 = icmp eq i8 %3196, 0
  %3198 = load i64, i64* %RDI.i1153, align 8
  %3199 = select i1 %3197, i64 %3192, i64 %3198
  %3200 = and i64 %3199, 4294967295
  store i64 %3200, i64* %RDI.i1153, align 8
  store %struct.Memory* %loadMem_40caa3, %struct.Memory** %MEMORY
  %loadMem_40caa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 33
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %3203 to i64*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3205 = getelementptr inbounds %struct.GPR, %struct.GPR* %3204, i32 0, i32 11
  %3206 = getelementptr inbounds %struct.Reg, %struct.Reg* %3205, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %3206 to i32*
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3208 = getelementptr inbounds %struct.GPR, %struct.GPR* %3207, i32 0, i32 15
  %3209 = getelementptr inbounds %struct.Reg, %struct.Reg* %3208, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %3209 to i64*
  %3210 = load i64, i64* %RBP.i1150
  %3211 = sub i64 %3210, 48
  %3212 = load i32, i32* %EDI.i
  %3213 = zext i32 %3212 to i64
  %3214 = load i64, i64* %PC.i1149
  %3215 = add i64 %3214, 3
  store i64 %3215, i64* %PC.i1149
  %3216 = inttoptr i64 %3211 to i32*
  store i32 %3212, i32* %3216
  store %struct.Memory* %loadMem_40caa6, %struct.Memory** %MEMORY
  %loadMem_40caa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3218 = getelementptr inbounds %struct.GPR, %struct.GPR* %3217, i32 0, i32 33
  %3219 = getelementptr inbounds %struct.Reg, %struct.Reg* %3218, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %3219 to i64*
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3221 = getelementptr inbounds %struct.GPR, %struct.GPR* %3220, i32 0, i32 1
  %3222 = getelementptr inbounds %struct.Reg, %struct.Reg* %3221, i32 0, i32 0
  %EAX.i1147 = bitcast %union.anon* %3222 to i32*
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3224 = getelementptr inbounds %struct.GPR, %struct.GPR* %3223, i32 0, i32 11
  %3225 = getelementptr inbounds %struct.Reg, %struct.Reg* %3224, i32 0, i32 0
  %RDI.i1148 = bitcast %union.anon* %3225 to i64*
  %3226 = load i32, i32* %EAX.i1147
  %3227 = zext i32 %3226 to i64
  %3228 = load i64, i64* %PC.i1146
  %3229 = add i64 %3228, 2
  store i64 %3229, i64* %PC.i1146
  %3230 = and i64 %3227, 4294967295
  store i64 %3230, i64* %RDI.i1148, align 8
  store %struct.Memory* %loadMem_40caa9, %struct.Memory** %MEMORY
  %loadMem_40caab = load %struct.Memory*, %struct.Memory** %MEMORY
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 33
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %3233 to i64*
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 9
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %RSI.i1144 = bitcast %union.anon* %3236 to i64*
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 15
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %3239 to i64*
  %3240 = load i64, i64* %RBP.i1145
  %3241 = sub i64 %3240, 48
  %3242 = load i64, i64* %PC.i1143
  %3243 = add i64 %3242, 3
  store i64 %3243, i64* %PC.i1143
  %3244 = inttoptr i64 %3241 to i32*
  %3245 = load i32, i32* %3244
  %3246 = zext i32 %3245 to i64
  store i64 %3246, i64* %RSI.i1144, align 8
  store %struct.Memory* %loadMem_40caab, %struct.Memory** %MEMORY
  %loadMem1_40caae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3248 = getelementptr inbounds %struct.GPR, %struct.GPR* %3247, i32 0, i32 33
  %3249 = getelementptr inbounds %struct.Reg, %struct.Reg* %3248, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %3249 to i64*
  %3250 = load i64, i64* %PC.i1142
  %3251 = add i64 %3250, -42190
  %3252 = load i64, i64* %PC.i1142
  %3253 = add i64 %3252, 5
  %3254 = load i64, i64* %PC.i1142
  %3255 = add i64 %3254, 5
  store i64 %3255, i64* %PC.i1142
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3257 = load i64, i64* %3256, align 8
  %3258 = add i64 %3257, -8
  %3259 = inttoptr i64 %3258 to i64*
  store i64 %3253, i64* %3259
  store i64 %3258, i64* %3256, align 8
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3251, i64* %3260, align 8
  store %struct.Memory* %loadMem1_40caae, %struct.Memory** %MEMORY
  %loadMem2_40caae = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40caae = load i64, i64* %3
  %call2_40caae = call %struct.Memory* @sub_4025e0.removeHolding(%struct.State* %0, i64 %loadPC_40caae, %struct.Memory* %loadMem2_40caae)
  store %struct.Memory* %call2_40caae, %struct.Memory** %MEMORY
  br label %block_.L_40cab3

block_.L_40cab3:                                  ; preds = %block_.L_40ca8c, %block_40ca60
  %loadMem_40cab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3262 = getelementptr inbounds %struct.GPR, %struct.GPR* %3261, i32 0, i32 33
  %3263 = getelementptr inbounds %struct.Reg, %struct.Reg* %3262, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %3263 to i64*
  %3264 = load i64, i64* %PC.i1141
  %3265 = add i64 %3264, 5
  %3266 = load i64, i64* %PC.i1141
  %3267 = add i64 %3266, 5
  store i64 %3267, i64* %PC.i1141
  %3268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3265, i64* %3268, align 8
  store %struct.Memory* %loadMem_40cab3, %struct.Memory** %MEMORY
  br label %block_.L_40cab8

block_.L_40cab8:                                  ; preds = %block_.L_40cab3, %block_40ca38
  %loadMem_40cab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 33
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %3271 to i64*
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3273 = getelementptr inbounds %struct.GPR, %struct.GPR* %3272, i32 0, i32 1
  %3274 = getelementptr inbounds %struct.Reg, %struct.Reg* %3273, i32 0, i32 0
  %RAX.i1140 = bitcast %union.anon* %3274 to i64*
  %3275 = load i64, i64* %PC.i1139
  %3276 = add i64 %3275, 10
  store i64 %3276, i64* %PC.i1139
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i1140, align 8
  store %struct.Memory* %loadMem_40cab8, %struct.Memory** %MEMORY
  %loadMem_40cac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3278 = getelementptr inbounds %struct.GPR, %struct.GPR* %3277, i32 0, i32 33
  %3279 = getelementptr inbounds %struct.Reg, %struct.Reg* %3278, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %3279 to i64*
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3281 = getelementptr inbounds %struct.GPR, %struct.GPR* %3280, i32 0, i32 5
  %3282 = getelementptr inbounds %struct.Reg, %struct.Reg* %3281, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %3282 to i64*
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3284 = getelementptr inbounds %struct.GPR, %struct.GPR* %3283, i32 0, i32 15
  %3285 = getelementptr inbounds %struct.Reg, %struct.Reg* %3284, i32 0, i32 0
  %RBP.i1138 = bitcast %union.anon* %3285 to i64*
  %3286 = load i64, i64* %RBP.i1138
  %3287 = sub i64 %3286, 28
  %3288 = load i64, i64* %PC.i1136
  %3289 = add i64 %3288, 4
  store i64 %3289, i64* %PC.i1136
  %3290 = inttoptr i64 %3287 to i32*
  %3291 = load i32, i32* %3290
  %3292 = sext i32 %3291 to i64
  store i64 %3292, i64* %RCX.i1137, align 8
  store %struct.Memory* %loadMem_40cac2, %struct.Memory** %MEMORY
  %loadMem_40cac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3294 = getelementptr inbounds %struct.GPR, %struct.GPR* %3293, i32 0, i32 33
  %3295 = getelementptr inbounds %struct.Reg, %struct.Reg* %3294, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %3295 to i64*
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3297 = getelementptr inbounds %struct.GPR, %struct.GPR* %3296, i32 0, i32 5
  %3298 = getelementptr inbounds %struct.Reg, %struct.Reg* %3297, i32 0, i32 0
  %RCX.i1135 = bitcast %union.anon* %3298 to i64*
  %3299 = load i64, i64* %RCX.i1135
  %3300 = load i64, i64* %PC.i1134
  %3301 = add i64 %3300, 7
  store i64 %3301, i64* %PC.i1134
  %3302 = sext i64 %3299 to i128
  %3303 = and i128 %3302, -18446744073709551616
  %3304 = zext i64 %3299 to i128
  %3305 = or i128 %3303, %3304
  %3306 = mul i128 576, %3305
  %3307 = trunc i128 %3306 to i64
  store i64 %3307, i64* %RCX.i1135, align 8
  %3308 = sext i64 %3307 to i128
  %3309 = icmp ne i128 %3308, %3306
  %3310 = zext i1 %3309 to i8
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3310, i8* %3311, align 1
  %3312 = trunc i128 %3306 to i32
  %3313 = and i32 %3312, 255
  %3314 = call i32 @llvm.ctpop.i32(i32 %3313)
  %3315 = trunc i32 %3314 to i8
  %3316 = and i8 %3315, 1
  %3317 = xor i8 %3316, 1
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3317, i8* %3318, align 1
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3319, align 1
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3320, align 1
  %3321 = lshr i64 %3307, 63
  %3322 = trunc i64 %3321 to i8
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3322, i8* %3323, align 1
  %3324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3310, i8* %3324, align 1
  store %struct.Memory* %loadMem_40cac6, %struct.Memory** %MEMORY
  %loadMem_40cacd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 33
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %3327 to i64*
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3329 = getelementptr inbounds %struct.GPR, %struct.GPR* %3328, i32 0, i32 1
  %3330 = getelementptr inbounds %struct.Reg, %struct.Reg* %3329, i32 0, i32 0
  %RAX.i1132 = bitcast %union.anon* %3330 to i64*
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3332 = getelementptr inbounds %struct.GPR, %struct.GPR* %3331, i32 0, i32 5
  %3333 = getelementptr inbounds %struct.Reg, %struct.Reg* %3332, i32 0, i32 0
  %RCX.i1133 = bitcast %union.anon* %3333 to i64*
  %3334 = load i64, i64* %RAX.i1132
  %3335 = load i64, i64* %RCX.i1133
  %3336 = load i64, i64* %PC.i1131
  %3337 = add i64 %3336, 3
  store i64 %3337, i64* %PC.i1131
  %3338 = add i64 %3335, %3334
  store i64 %3338, i64* %RAX.i1132, align 8
  %3339 = icmp ult i64 %3338, %3334
  %3340 = icmp ult i64 %3338, %3335
  %3341 = or i1 %3339, %3340
  %3342 = zext i1 %3341 to i8
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3342, i8* %3343, align 1
  %3344 = trunc i64 %3338 to i32
  %3345 = and i32 %3344, 255
  %3346 = call i32 @llvm.ctpop.i32(i32 %3345)
  %3347 = trunc i32 %3346 to i8
  %3348 = and i8 %3347, 1
  %3349 = xor i8 %3348, 1
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3349, i8* %3350, align 1
  %3351 = xor i64 %3335, %3334
  %3352 = xor i64 %3351, %3338
  %3353 = lshr i64 %3352, 4
  %3354 = trunc i64 %3353 to i8
  %3355 = and i8 %3354, 1
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3355, i8* %3356, align 1
  %3357 = icmp eq i64 %3338, 0
  %3358 = zext i1 %3357 to i8
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3358, i8* %3359, align 1
  %3360 = lshr i64 %3338, 63
  %3361 = trunc i64 %3360 to i8
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3361, i8* %3362, align 1
  %3363 = lshr i64 %3334, 63
  %3364 = lshr i64 %3335, 63
  %3365 = xor i64 %3360, %3363
  %3366 = xor i64 %3360, %3364
  %3367 = add i64 %3365, %3366
  %3368 = icmp eq i64 %3367, 2
  %3369 = zext i1 %3368 to i8
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3369, i8* %3370, align 1
  store %struct.Memory* %loadMem_40cacd, %struct.Memory** %MEMORY
  %loadMem_40cad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3372 = getelementptr inbounds %struct.GPR, %struct.GPR* %3371, i32 0, i32 33
  %3373 = getelementptr inbounds %struct.Reg, %struct.Reg* %3372, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %3373 to i64*
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 5
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %RCX.i1129 = bitcast %union.anon* %3376 to i64*
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3378 = getelementptr inbounds %struct.GPR, %struct.GPR* %3377, i32 0, i32 15
  %3379 = getelementptr inbounds %struct.Reg, %struct.Reg* %3378, i32 0, i32 0
  %RBP.i1130 = bitcast %union.anon* %3379 to i64*
  %3380 = load i64, i64* %RBP.i1130
  %3381 = sub i64 %3380, 24
  %3382 = load i64, i64* %PC.i1128
  %3383 = add i64 %3382, 4
  store i64 %3383, i64* %PC.i1128
  %3384 = inttoptr i64 %3381 to i32*
  %3385 = load i32, i32* %3384
  %3386 = sext i32 %3385 to i64
  store i64 %3386, i64* %RCX.i1129, align 8
  store %struct.Memory* %loadMem_40cad0, %struct.Memory** %MEMORY
  %loadMem_40cad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3388 = getelementptr inbounds %struct.GPR, %struct.GPR* %3387, i32 0, i32 33
  %3389 = getelementptr inbounds %struct.Reg, %struct.Reg* %3388, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %3389 to i64*
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3391 = getelementptr inbounds %struct.GPR, %struct.GPR* %3390, i32 0, i32 1
  %3392 = getelementptr inbounds %struct.Reg, %struct.Reg* %3391, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %3392 to i64*
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3394 = getelementptr inbounds %struct.GPR, %struct.GPR* %3393, i32 0, i32 5
  %3395 = getelementptr inbounds %struct.Reg, %struct.Reg* %3394, i32 0, i32 0
  %RCX.i1126 = bitcast %union.anon* %3395 to i64*
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 7
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %RDX.i1127 = bitcast %union.anon* %3398 to i64*
  %3399 = load i64, i64* %RAX.i1125
  %3400 = load i64, i64* %RCX.i1126
  %3401 = mul i64 %3400, 4
  %3402 = add i64 %3401, %3399
  %3403 = load i64, i64* %PC.i1124
  %3404 = add i64 %3403, 3
  store i64 %3404, i64* %PC.i1124
  %3405 = inttoptr i64 %3402 to i32*
  %3406 = load i32, i32* %3405
  %3407 = zext i32 %3406 to i64
  store i64 %3407, i64* %RDX.i1127, align 8
  store %struct.Memory* %loadMem_40cad4, %struct.Memory** %MEMORY
  %loadMem_40cad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3409 = getelementptr inbounds %struct.GPR, %struct.GPR* %3408, i32 0, i32 33
  %3410 = getelementptr inbounds %struct.Reg, %struct.Reg* %3409, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %3410 to i64*
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3412 = getelementptr inbounds %struct.GPR, %struct.GPR* %3411, i32 0, i32 7
  %3413 = getelementptr inbounds %struct.Reg, %struct.Reg* %3412, i32 0, i32 0
  %RDX.i1123 = bitcast %union.anon* %3413 to i64*
  %3414 = load i64, i64* %RDX.i1123
  %3415 = load i64, i64* %PC.i1122
  %3416 = add i64 %3415, 7
  store i64 %3416, i64* %PC.i1122
  %3417 = trunc i64 %3414 to i32
  %3418 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %3419 = xor i32 %3418, %3417
  %3420 = zext i32 %3419 to i64
  store i64 %3420, i64* %RDX.i1123, align 8
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3421, align 1
  %3422 = and i32 %3419, 255
  %3423 = call i32 @llvm.ctpop.i32(i32 %3422)
  %3424 = trunc i32 %3423 to i8
  %3425 = and i8 %3424, 1
  %3426 = xor i8 %3425, 1
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3426, i8* %3427, align 1
  %3428 = icmp eq i32 %3419, 0
  %3429 = zext i1 %3428 to i8
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3429, i8* %3430, align 1
  %3431 = lshr i32 %3419, 31
  %3432 = trunc i32 %3431 to i8
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3432, i8* %3433, align 1
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3434, align 1
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3435, align 1
  store %struct.Memory* %loadMem_40cad7, %struct.Memory** %MEMORY
  %loadMem_40cade = load %struct.Memory*, %struct.Memory** %MEMORY
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3437 = getelementptr inbounds %struct.GPR, %struct.GPR* %3436, i32 0, i32 33
  %3438 = getelementptr inbounds %struct.Reg, %struct.Reg* %3437, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %3438 to i64*
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3440 = getelementptr inbounds %struct.GPR, %struct.GPR* %3439, i32 0, i32 7
  %3441 = getelementptr inbounds %struct.Reg, %struct.Reg* %3440, i32 0, i32 0
  %EDX.i1121 = bitcast %union.anon* %3441 to i32*
  %3442 = load i32, i32* %EDX.i1121
  %3443 = zext i32 %3442 to i64
  %3444 = load i64, i64* %PC.i1120
  %3445 = add i64 %3444, 7
  store i64 %3445, i64* %PC.i1120
  store i32 %3442, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cade, %struct.Memory** %MEMORY
  %loadMem_40cae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 33
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %3448 to i64*
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 1
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %3451 to i64*
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 15
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %3454 to i64*
  %3455 = load i64, i64* %RBP.i1119
  %3456 = sub i64 %3455, 28
  %3457 = load i64, i64* %PC.i1117
  %3458 = add i64 %3457, 4
  store i64 %3458, i64* %PC.i1117
  %3459 = inttoptr i64 %3456 to i32*
  %3460 = load i32, i32* %3459
  %3461 = sext i32 %3460 to i64
  store i64 %3461, i64* %RAX.i1118, align 8
  store %struct.Memory* %loadMem_40cae5, %struct.Memory** %MEMORY
  %loadMem_40cae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 33
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %3464 to i64*
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3466 = getelementptr inbounds %struct.GPR, %struct.GPR* %3465, i32 0, i32 1
  %3467 = getelementptr inbounds %struct.Reg, %struct.Reg* %3466, i32 0, i32 0
  %RAX.i1115 = bitcast %union.anon* %3467 to i64*
  %3468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3469 = getelementptr inbounds %struct.GPR, %struct.GPR* %3468, i32 0, i32 7
  %3470 = getelementptr inbounds %struct.Reg, %struct.Reg* %3469, i32 0, i32 0
  %RDX.i1116 = bitcast %union.anon* %3470 to i64*
  %3471 = load i64, i64* %RAX.i1115
  %3472 = mul i64 %3471, 4
  %3473 = add i64 %3472, 6478512
  %3474 = load i64, i64* %PC.i1114
  %3475 = add i64 %3474, 7
  store i64 %3475, i64* %PC.i1114
  %3476 = inttoptr i64 %3473 to i32*
  %3477 = load i32, i32* %3476
  %3478 = zext i32 %3477 to i64
  store i64 %3478, i64* %RDX.i1116, align 8
  store %struct.Memory* %loadMem_40cae9, %struct.Memory** %MEMORY
  %loadMem_40caf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 33
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %3481 to i64*
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 7
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %RDX.i1113 = bitcast %union.anon* %3484 to i64*
  %3485 = load i64, i64* %RDX.i1113
  %3486 = load i64, i64* %PC.i1112
  %3487 = add i64 %3486, 7
  store i64 %3487, i64* %PC.i1112
  %3488 = trunc i64 %3485 to i32
  %3489 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %3490 = add i32 %3489, %3488
  %3491 = zext i32 %3490 to i64
  store i64 %3491, i64* %RDX.i1113, align 8
  %3492 = icmp ult i32 %3490, %3488
  %3493 = icmp ult i32 %3490, %3489
  %3494 = or i1 %3492, %3493
  %3495 = zext i1 %3494 to i8
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3495, i8* %3496, align 1
  %3497 = and i32 %3490, 255
  %3498 = call i32 @llvm.ctpop.i32(i32 %3497)
  %3499 = trunc i32 %3498 to i8
  %3500 = and i8 %3499, 1
  %3501 = xor i8 %3500, 1
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3501, i8* %3502, align 1
  %3503 = xor i32 %3489, %3488
  %3504 = xor i32 %3503, %3490
  %3505 = lshr i32 %3504, 4
  %3506 = trunc i32 %3505 to i8
  %3507 = and i8 %3506, 1
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3507, i8* %3508, align 1
  %3509 = icmp eq i32 %3490, 0
  %3510 = zext i1 %3509 to i8
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3510, i8* %3511, align 1
  %3512 = lshr i32 %3490, 31
  %3513 = trunc i32 %3512 to i8
  %3514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3513, i8* %3514, align 1
  %3515 = lshr i32 %3488, 31
  %3516 = lshr i32 %3489, 31
  %3517 = xor i32 %3512, %3515
  %3518 = xor i32 %3512, %3516
  %3519 = add i32 %3517, %3518
  %3520 = icmp eq i32 %3519, 2
  %3521 = zext i1 %3520 to i8
  %3522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3521, i8* %3522, align 1
  store %struct.Memory* %loadMem_40caf0, %struct.Memory** %MEMORY
  %loadMem_40caf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3524 = getelementptr inbounds %struct.GPR, %struct.GPR* %3523, i32 0, i32 33
  %3525 = getelementptr inbounds %struct.Reg, %struct.Reg* %3524, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %3525 to i64*
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3527 = getelementptr inbounds %struct.GPR, %struct.GPR* %3526, i32 0, i32 7
  %3528 = getelementptr inbounds %struct.Reg, %struct.Reg* %3527, i32 0, i32 0
  %EDX.i1111 = bitcast %union.anon* %3528 to i32*
  %3529 = load i32, i32* %EDX.i1111
  %3530 = zext i32 %3529 to i64
  %3531 = load i64, i64* %PC.i1110
  %3532 = add i64 %3531, 7
  store i64 %3532, i64* %PC.i1110
  store i32 %3529, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40caf7, %struct.Memory** %MEMORY
  %loadMem_40cafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 33
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 7
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RDX.i1109 = bitcast %union.anon* %3538 to i64*
  %3539 = load i64, i64* %PC.i1108
  %3540 = add i64 %3539, 7
  store i64 %3540, i64* %PC.i1108
  %3541 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %3542 = zext i32 %3541 to i64
  store i64 %3542, i64* %RDX.i1109, align 8
  store %struct.Memory* %loadMem_40cafe, %struct.Memory** %MEMORY
  %loadMem_40cb05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3544 = getelementptr inbounds %struct.GPR, %struct.GPR* %3543, i32 0, i32 33
  %3545 = getelementptr inbounds %struct.Reg, %struct.Reg* %3544, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %3545 to i64*
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 7
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %RDX.i1107 = bitcast %union.anon* %3548 to i64*
  %3549 = load i64, i64* %RDX.i1107
  %3550 = load i64, i64* %PC.i1106
  %3551 = add i64 %3550, 3
  store i64 %3551, i64* %PC.i1106
  %3552 = trunc i64 %3549 to i32
  %3553 = add i32 1, %3552
  %3554 = zext i32 %3553 to i64
  store i64 %3554, i64* %RDX.i1107, align 8
  %3555 = icmp ult i32 %3553, %3552
  %3556 = icmp ult i32 %3553, 1
  %3557 = or i1 %3555, %3556
  %3558 = zext i1 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3558, i8* %3559, align 1
  %3560 = and i32 %3553, 255
  %3561 = call i32 @llvm.ctpop.i32(i32 %3560)
  %3562 = trunc i32 %3561 to i8
  %3563 = and i8 %3562, 1
  %3564 = xor i8 %3563, 1
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3564, i8* %3565, align 1
  %3566 = xor i64 1, %3549
  %3567 = trunc i64 %3566 to i32
  %3568 = xor i32 %3567, %3553
  %3569 = lshr i32 %3568, 4
  %3570 = trunc i32 %3569 to i8
  %3571 = and i8 %3570, 1
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3571, i8* %3572, align 1
  %3573 = icmp eq i32 %3553, 0
  %3574 = zext i1 %3573 to i8
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3574, i8* %3575, align 1
  %3576 = lshr i32 %3553, 31
  %3577 = trunc i32 %3576 to i8
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3577, i8* %3578, align 1
  %3579 = lshr i32 %3552, 31
  %3580 = xor i32 %3576, %3579
  %3581 = add i32 %3580, %3576
  %3582 = icmp eq i32 %3581, 2
  %3583 = zext i1 %3582 to i8
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3583, i8* %3584, align 1
  store %struct.Memory* %loadMem_40cb05, %struct.Memory** %MEMORY
  %loadMem_40cb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3586 = getelementptr inbounds %struct.GPR, %struct.GPR* %3585, i32 0, i32 33
  %3587 = getelementptr inbounds %struct.Reg, %struct.Reg* %3586, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %3587 to i64*
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 7
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %EDX.i1105 = bitcast %union.anon* %3590 to i32*
  %3591 = load i32, i32* %EDX.i1105
  %3592 = zext i32 %3591 to i64
  %3593 = load i64, i64* %PC.i1104
  %3594 = add i64 %3593, 7
  store i64 %3594, i64* %PC.i1104
  store i32 %3591, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40cb08, %struct.Memory** %MEMORY
  br label %block_.L_40cb0f

block_.L_40cb0f:                                  ; preds = %block_.L_40cab8, %block_.L_40ca25
  %loadMem_40cb0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 33
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %3597 to i64*
  %3598 = load i64, i64* %PC.i1103
  %3599 = add i64 %3598, 5
  %3600 = load i64, i64* %PC.i1103
  %3601 = add i64 %3600, 5
  store i64 %3601, i64* %PC.i1103
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3599, i64* %3602, align 8
  store %struct.Memory* %loadMem_40cb0f, %struct.Memory** %MEMORY
  br label %block_.L_40cb14

block_.L_40cb14:                                  ; preds = %block_.L_40cb0f, %block_.L_40c977
  %loadMem_40cb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 33
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %3605 to i64*
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3607 = getelementptr inbounds %struct.GPR, %struct.GPR* %3606, i32 0, i32 1
  %3608 = getelementptr inbounds %struct.Reg, %struct.Reg* %3607, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %3608 to i64*
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 15
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %3611 to i64*
  %3612 = load i64, i64* %RBP.i1102
  %3613 = sub i64 %3612, 24
  %3614 = load i64, i64* %PC.i1100
  %3615 = add i64 %3614, 4
  store i64 %3615, i64* %PC.i1100
  %3616 = inttoptr i64 %3613 to i32*
  %3617 = load i32, i32* %3616
  %3618 = sext i32 %3617 to i64
  store i64 %3618, i64* %RAX.i1101, align 8
  store %struct.Memory* %loadMem_40cb14, %struct.Memory** %MEMORY
  %loadMem_40cb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3620 = getelementptr inbounds %struct.GPR, %struct.GPR* %3619, i32 0, i32 33
  %3621 = getelementptr inbounds %struct.Reg, %struct.Reg* %3620, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %3621 to i64*
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3623 = getelementptr inbounds %struct.GPR, %struct.GPR* %3622, i32 0, i32 1
  %3624 = getelementptr inbounds %struct.Reg, %struct.Reg* %3623, i32 0, i32 0
  %RAX.i1099 = bitcast %union.anon* %3624 to i64*
  %3625 = load i64, i64* %RAX.i1099
  %3626 = mul i64 %3625, 4
  %3627 = add i64 %3626, 8807744
  %3628 = load i64, i64* %PC.i1098
  %3629 = add i64 %3628, 8
  store i64 %3629, i64* %PC.i1098
  %3630 = inttoptr i64 %3627 to i32*
  %3631 = load i32, i32* %3630
  %3632 = sub i32 %3631, 1
  %3633 = icmp ult i32 %3631, 1
  %3634 = zext i1 %3633 to i8
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3634, i8* %3635, align 1
  %3636 = and i32 %3632, 255
  %3637 = call i32 @llvm.ctpop.i32(i32 %3636)
  %3638 = trunc i32 %3637 to i8
  %3639 = and i8 %3638, 1
  %3640 = xor i8 %3639, 1
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3640, i8* %3641, align 1
  %3642 = xor i32 %3631, 1
  %3643 = xor i32 %3642, %3632
  %3644 = lshr i32 %3643, 4
  %3645 = trunc i32 %3644 to i8
  %3646 = and i8 %3645, 1
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3646, i8* %3647, align 1
  %3648 = icmp eq i32 %3632, 0
  %3649 = zext i1 %3648 to i8
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3649, i8* %3650, align 1
  %3651 = lshr i32 %3632, 31
  %3652 = trunc i32 %3651 to i8
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3652, i8* %3653, align 1
  %3654 = lshr i32 %3631, 31
  %3655 = xor i32 %3651, %3654
  %3656 = add i32 %3655, %3654
  %3657 = icmp eq i32 %3656, 2
  %3658 = zext i1 %3657 to i8
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3658, i8* %3659, align 1
  store %struct.Memory* %loadMem_40cb18, %struct.Memory** %MEMORY
  %loadMem_40cb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 33
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %3662 to i64*
  %3663 = load i64, i64* %PC.i1097
  %3664 = add i64 %3663, 522
  %3665 = load i64, i64* %PC.i1097
  %3666 = add i64 %3665, 6
  %3667 = load i64, i64* %PC.i1097
  %3668 = add i64 %3667, 6
  store i64 %3668, i64* %PC.i1097
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3670 = load i8, i8* %3669, align 1
  %3671 = icmp eq i8 %3670, 0
  %3672 = zext i1 %3671 to i8
  store i8 %3672, i8* %BRANCH_TAKEN, align 1
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3674 = select i1 %3671, i64 %3664, i64 %3666
  store i64 %3674, i64* %3673, align 8
  store %struct.Memory* %loadMem_40cb20, %struct.Memory** %MEMORY
  %loadBr_40cb20 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb20 = icmp eq i8 %loadBr_40cb20, 1
  br i1 %cmpBr_40cb20, label %block_.L_40cd2a, label %block_40cb26

block_40cb26:                                     ; preds = %block_.L_40cb14
  %loadMem_40cb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3676 = getelementptr inbounds %struct.GPR, %struct.GPR* %3675, i32 0, i32 33
  %3677 = getelementptr inbounds %struct.Reg, %struct.Reg* %3676, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %3677 to i64*
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 15
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %3680 to i64*
  %3681 = load i64, i64* %RBP.i1096
  %3682 = sub i64 %3681, 16
  %3683 = load i64, i64* %PC.i1095
  %3684 = add i64 %3683, 4
  store i64 %3684, i64* %PC.i1095
  %3685 = inttoptr i64 %3682 to i32*
  %3686 = load i32, i32* %3685
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3687, align 1
  %3688 = and i32 %3686, 255
  %3689 = call i32 @llvm.ctpop.i32(i32 %3688)
  %3690 = trunc i32 %3689 to i8
  %3691 = and i8 %3690, 1
  %3692 = xor i8 %3691, 1
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3692, i8* %3693, align 1
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3694, align 1
  %3695 = icmp eq i32 %3686, 0
  %3696 = zext i1 %3695 to i8
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3696, i8* %3697, align 1
  %3698 = lshr i32 %3686, 31
  %3699 = trunc i32 %3698 to i8
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3699, i8* %3700, align 1
  %3701 = lshr i32 %3686, 31
  %3702 = xor i32 %3698, %3701
  %3703 = add i32 %3702, %3701
  %3704 = icmp eq i32 %3703, 2
  %3705 = zext i1 %3704 to i8
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3705, i8* %3706, align 1
  store %struct.Memory* %loadMem_40cb26, %struct.Memory** %MEMORY
  %loadMem_40cb2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 33
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %3709 to i64*
  %3710 = load i64, i64* %PC.i1094
  %3711 = add i64 %3710, 369
  %3712 = load i64, i64* %PC.i1094
  %3713 = add i64 %3712, 6
  %3714 = load i64, i64* %PC.i1094
  %3715 = add i64 %3714, 6
  store i64 %3715, i64* %PC.i1094
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3717 = load i8, i8* %3716, align 1
  store i8 %3717, i8* %BRANCH_TAKEN, align 1
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3719 = icmp ne i8 %3717, 0
  %3720 = select i1 %3719, i64 %3711, i64 %3713
  store i64 %3720, i64* %3718, align 8
  store %struct.Memory* %loadMem_40cb2a, %struct.Memory** %MEMORY
  %loadBr_40cb2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cb2a = icmp eq i8 %loadBr_40cb2a, 1
  br i1 %cmpBr_40cb2a, label %block_.L_40cc9b, label %block_40cb30

block_40cb30:                                     ; preds = %block_40cb26
  %loadMem_40cb30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3722 = getelementptr inbounds %struct.GPR, %struct.GPR* %3721, i32 0, i32 33
  %3723 = getelementptr inbounds %struct.Reg, %struct.Reg* %3722, i32 0, i32 0
  %PC.i1092 = bitcast %union.anon* %3723 to i64*
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 11
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %RDI.i1093 = bitcast %union.anon* %3726 to i64*
  %3727 = load i64, i64* %PC.i1092
  %3728 = add i64 %3727, 5
  store i64 %3728, i64* %PC.i1092
  store i64 1, i64* %RDI.i1093, align 8
  store %struct.Memory* %loadMem_40cb30, %struct.Memory** %MEMORY
  %loadMem_40cb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3730 = getelementptr inbounds %struct.GPR, %struct.GPR* %3729, i32 0, i32 33
  %3731 = getelementptr inbounds %struct.Reg, %struct.Reg* %3730, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %3731 to i64*
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3733 = getelementptr inbounds %struct.GPR, %struct.GPR* %3732, i32 0, i32 9
  %3734 = getelementptr inbounds %struct.Reg, %struct.Reg* %3733, i32 0, i32 0
  %ESI.i1090 = bitcast %union.anon* %3734 to i32*
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3736 = getelementptr inbounds %struct.GPR, %struct.GPR* %3735, i32 0, i32 9
  %3737 = getelementptr inbounds %struct.Reg, %struct.Reg* %3736, i32 0, i32 0
  %RSI.i1091 = bitcast %union.anon* %3737 to i64*
  %3738 = load i64, i64* %RSI.i1091
  %3739 = load i32, i32* %ESI.i1090
  %3740 = zext i32 %3739 to i64
  %3741 = load i64, i64* %PC.i1089
  %3742 = add i64 %3741, 2
  store i64 %3742, i64* %PC.i1089
  %3743 = xor i64 %3740, %3738
  %3744 = trunc i64 %3743 to i32
  %3745 = and i64 %3743, 4294967295
  store i64 %3745, i64* %RSI.i1091, align 8
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3746, align 1
  %3747 = and i32 %3744, 255
  %3748 = call i32 @llvm.ctpop.i32(i32 %3747)
  %3749 = trunc i32 %3748 to i8
  %3750 = and i8 %3749, 1
  %3751 = xor i8 %3750, 1
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3751, i8* %3752, align 1
  %3753 = icmp eq i32 %3744, 0
  %3754 = zext i1 %3753 to i8
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3754, i8* %3755, align 1
  %3756 = lshr i32 %3744, 31
  %3757 = trunc i32 %3756 to i8
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3757, i8* %3758, align 1
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3759, align 1
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3760, align 1
  store %struct.Memory* %loadMem_40cb35, %struct.Memory** %MEMORY
  %loadMem_40cb37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 33
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %3763 to i64*
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 1
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %RAX.i1087 = bitcast %union.anon* %3766 to i64*
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3768 = getelementptr inbounds %struct.GPR, %struct.GPR* %3767, i32 0, i32 15
  %3769 = getelementptr inbounds %struct.Reg, %struct.Reg* %3768, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %3769 to i64*
  %3770 = load i64, i64* %RBP.i1088
  %3771 = sub i64 %3770, 24
  %3772 = load i64, i64* %PC.i1086
  %3773 = add i64 %3772, 4
  store i64 %3773, i64* %PC.i1086
  %3774 = inttoptr i64 %3771 to i32*
  %3775 = load i32, i32* %3774
  %3776 = sext i32 %3775 to i64
  store i64 %3776, i64* %RAX.i1087, align 8
  store %struct.Memory* %loadMem_40cb37, %struct.Memory** %MEMORY
  %loadMem_40cb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 33
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %3779 to i64*
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 1
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %RAX.i1084 = bitcast %union.anon* %3782 to i64*
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 5
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %RCX.i1085 = bitcast %union.anon* %3785 to i64*
  %3786 = load i64, i64* %RAX.i1084
  %3787 = mul i64 %3786, 4
  %3788 = add i64 %3787, 9047232
  %3789 = load i64, i64* %PC.i1083
  %3790 = add i64 %3789, 7
  store i64 %3790, i64* %PC.i1083
  %3791 = inttoptr i64 %3788 to i32*
  %3792 = load i32, i32* %3791
  %3793 = zext i32 %3792 to i64
  store i64 %3793, i64* %RCX.i1085, align 8
  store %struct.Memory* %loadMem_40cb3b, %struct.Memory** %MEMORY
  %loadMem_40cb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 33
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %3796 to i64*
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 5
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %RCX.i1082 = bitcast %union.anon* %3799 to i64*
  %3800 = load i64, i64* %RCX.i1082
  %3801 = load i64, i64* %PC.i1081
  %3802 = add i64 %3801, 7
  store i64 %3802, i64* %PC.i1081
  %3803 = trunc i64 %3800 to i32
  %3804 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %3805 = xor i32 %3804, %3803
  %3806 = zext i32 %3805 to i64
  store i64 %3806, i64* %RCX.i1082, align 8
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3807, align 1
  %3808 = and i32 %3805, 255
  %3809 = call i32 @llvm.ctpop.i32(i32 %3808)
  %3810 = trunc i32 %3809 to i8
  %3811 = and i8 %3810, 1
  %3812 = xor i8 %3811, 1
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3812, i8* %3813, align 1
  %3814 = icmp eq i32 %3805, 0
  %3815 = zext i1 %3814 to i8
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3815, i8* %3816, align 1
  %3817 = lshr i32 %3805, 31
  %3818 = trunc i32 %3817 to i8
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3818, i8* %3819, align 1
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3820, align 1
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3821, align 1
  store %struct.Memory* %loadMem_40cb42, %struct.Memory** %MEMORY
  %loadMem_40cb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 33
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %3824 to i64*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3826 = getelementptr inbounds %struct.GPR, %struct.GPR* %3825, i32 0, i32 5
  %3827 = getelementptr inbounds %struct.Reg, %struct.Reg* %3826, i32 0, i32 0
  %ECX.i1080 = bitcast %union.anon* %3827 to i32*
  %3828 = load i32, i32* %ECX.i1080
  %3829 = zext i32 %3828 to i64
  %3830 = load i64, i64* %PC.i1079
  %3831 = add i64 %3830, 7
  store i64 %3831, i64* %PC.i1079
  store i32 %3828, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cb49, %struct.Memory** %MEMORY
  %loadMem_40cb50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3833 = getelementptr inbounds %struct.GPR, %struct.GPR* %3832, i32 0, i32 33
  %3834 = getelementptr inbounds %struct.Reg, %struct.Reg* %3833, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %3834 to i64*
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3836 = getelementptr inbounds %struct.GPR, %struct.GPR* %3835, i32 0, i32 1
  %3837 = getelementptr inbounds %struct.Reg, %struct.Reg* %3836, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %3837 to i64*
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3839 = getelementptr inbounds %struct.GPR, %struct.GPR* %3838, i32 0, i32 15
  %3840 = getelementptr inbounds %struct.Reg, %struct.Reg* %3839, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %3840 to i64*
  %3841 = load i64, i64* %RBP.i1078
  %3842 = sub i64 %3841, 20
  %3843 = load i64, i64* %PC.i1076
  %3844 = add i64 %3843, 4
  store i64 %3844, i64* %PC.i1076
  %3845 = inttoptr i64 %3842 to i32*
  %3846 = load i32, i32* %3845
  %3847 = sext i32 %3846 to i64
  store i64 %3847, i64* %RAX.i1077, align 8
  store %struct.Memory* %loadMem_40cb50, %struct.Memory** %MEMORY
  %loadMem_40cb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 33
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %3850 to i64*
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3852 = getelementptr inbounds %struct.GPR, %struct.GPR* %3851, i32 0, i32 1
  %3853 = getelementptr inbounds %struct.Reg, %struct.Reg* %3852, i32 0, i32 0
  %RAX.i1074 = bitcast %union.anon* %3853 to i64*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 5
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %RCX.i1075 = bitcast %union.anon* %3856 to i64*
  %3857 = load i64, i64* %RAX.i1074
  %3858 = mul i64 %3857, 4
  %3859 = add i64 %3858, 9047232
  %3860 = load i64, i64* %PC.i1073
  %3861 = add i64 %3860, 7
  store i64 %3861, i64* %PC.i1073
  %3862 = inttoptr i64 %3859 to i32*
  %3863 = load i32, i32* %3862
  %3864 = zext i32 %3863 to i64
  store i64 %3864, i64* %RCX.i1075, align 8
  store %struct.Memory* %loadMem_40cb54, %struct.Memory** %MEMORY
  %loadMem_40cb5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 33
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %3867 to i64*
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3869 = getelementptr inbounds %struct.GPR, %struct.GPR* %3868, i32 0, i32 5
  %3870 = getelementptr inbounds %struct.Reg, %struct.Reg* %3869, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %3870 to i64*
  %3871 = load i64, i64* %RCX.i1072
  %3872 = load i64, i64* %PC.i1071
  %3873 = add i64 %3872, 7
  store i64 %3873, i64* %PC.i1071
  %3874 = trunc i64 %3871 to i32
  %3875 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %3876 = xor i32 %3875, %3874
  %3877 = zext i32 %3876 to i64
  store i64 %3877, i64* %RCX.i1072, align 8
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3878, align 1
  %3879 = and i32 %3876, 255
  %3880 = call i32 @llvm.ctpop.i32(i32 %3879)
  %3881 = trunc i32 %3880 to i8
  %3882 = and i8 %3881, 1
  %3883 = xor i8 %3882, 1
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3883, i8* %3884, align 1
  %3885 = icmp eq i32 %3876, 0
  %3886 = zext i1 %3885 to i8
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3886, i8* %3887, align 1
  %3888 = lshr i32 %3876, 31
  %3889 = trunc i32 %3888 to i8
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3889, i8* %3890, align 1
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3891, align 1
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3892, align 1
  store %struct.Memory* %loadMem_40cb5b, %struct.Memory** %MEMORY
  %loadMem_40cb62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3894 = getelementptr inbounds %struct.GPR, %struct.GPR* %3893, i32 0, i32 33
  %3895 = getelementptr inbounds %struct.Reg, %struct.Reg* %3894, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %3895 to i64*
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 5
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %ECX.i1070 = bitcast %union.anon* %3898 to i32*
  %3899 = load i32, i32* %ECX.i1070
  %3900 = zext i32 %3899 to i64
  %3901 = load i64, i64* %PC.i1069
  %3902 = add i64 %3901, 7
  store i64 %3902, i64* %PC.i1069
  store i32 %3899, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cb62, %struct.Memory** %MEMORY
  %loadMem_40cb69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3904 = getelementptr inbounds %struct.GPR, %struct.GPR* %3903, i32 0, i32 33
  %3905 = getelementptr inbounds %struct.Reg, %struct.Reg* %3904, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %3905 to i64*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3907 = getelementptr inbounds %struct.GPR, %struct.GPR* %3906, i32 0, i32 5
  %3908 = getelementptr inbounds %struct.Reg, %struct.Reg* %3907, i32 0, i32 0
  %RCX.i1067 = bitcast %union.anon* %3908 to i64*
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3910 = getelementptr inbounds %struct.GPR, %struct.GPR* %3909, i32 0, i32 15
  %3911 = getelementptr inbounds %struct.Reg, %struct.Reg* %3910, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %3911 to i64*
  %3912 = load i64, i64* %RBP.i1068
  %3913 = sub i64 %3912, 24
  %3914 = load i64, i64* %PC.i1066
  %3915 = add i64 %3914, 3
  store i64 %3915, i64* %PC.i1066
  %3916 = inttoptr i64 %3913 to i32*
  %3917 = load i32, i32* %3916
  %3918 = zext i32 %3917 to i64
  store i64 %3918, i64* %RCX.i1067, align 8
  store %struct.Memory* %loadMem_40cb69, %struct.Memory** %MEMORY
  %loadMem_40cb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3920 = getelementptr inbounds %struct.GPR, %struct.GPR* %3919, i32 0, i32 33
  %3921 = getelementptr inbounds %struct.Reg, %struct.Reg* %3920, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %3921 to i64*
  %3922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3923 = getelementptr inbounds %struct.GPR, %struct.GPR* %3922, i32 0, i32 5
  %3924 = getelementptr inbounds %struct.Reg, %struct.Reg* %3923, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %3924 to i64*
  %3925 = load i64, i64* %RCX.i1065
  %3926 = load i64, i64* %PC.i1064
  %3927 = add i64 %3926, 3
  store i64 %3927, i64* %PC.i1064
  %3928 = trunc i64 %3925 to i32
  %3929 = sub i32 %3928, 12
  %3930 = zext i32 %3929 to i64
  store i64 %3930, i64* %RCX.i1065, align 8
  %3931 = icmp ult i32 %3928, 12
  %3932 = zext i1 %3931 to i8
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3932, i8* %3933, align 1
  %3934 = and i32 %3929, 255
  %3935 = call i32 @llvm.ctpop.i32(i32 %3934)
  %3936 = trunc i32 %3935 to i8
  %3937 = and i8 %3936, 1
  %3938 = xor i8 %3937, 1
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3938, i8* %3939, align 1
  %3940 = xor i64 12, %3925
  %3941 = trunc i64 %3940 to i32
  %3942 = xor i32 %3941, %3929
  %3943 = lshr i32 %3942, 4
  %3944 = trunc i32 %3943 to i8
  %3945 = and i8 %3944, 1
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3945, i8* %3946, align 1
  %3947 = icmp eq i32 %3929, 0
  %3948 = zext i1 %3947 to i8
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3948, i8* %3949, align 1
  %3950 = lshr i32 %3929, 31
  %3951 = trunc i32 %3950 to i8
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3951, i8* %3952, align 1
  %3953 = lshr i32 %3928, 31
  %3954 = xor i32 %3950, %3953
  %3955 = add i32 %3954, %3953
  %3956 = icmp eq i32 %3955, 2
  %3957 = zext i1 %3956 to i8
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3957, i8* %3958, align 1
  store %struct.Memory* %loadMem_40cb6c, %struct.Memory** %MEMORY
  %loadMem_40cb6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 33
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %3961 to i64*
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 5
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %ECX.i1062 = bitcast %union.anon* %3964 to i32*
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 1
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %RAX.i1063 = bitcast %union.anon* %3967 to i64*
  %3968 = load i32, i32* %ECX.i1062
  %3969 = zext i32 %3968 to i64
  %3970 = load i64, i64* %PC.i1061
  %3971 = add i64 %3970, 3
  store i64 %3971, i64* %PC.i1061
  %3972 = shl i64 %3969, 32
  %3973 = ashr exact i64 %3972, 32
  store i64 %3973, i64* %RAX.i1063, align 8
  store %struct.Memory* %loadMem_40cb6f, %struct.Memory** %MEMORY
  %loadMem_40cb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3975 = getelementptr inbounds %struct.GPR, %struct.GPR* %3974, i32 0, i32 33
  %3976 = getelementptr inbounds %struct.Reg, %struct.Reg* %3975, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %3976 to i64*
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3978 = getelementptr inbounds %struct.GPR, %struct.GPR* %3977, i32 0, i32 1
  %3979 = getelementptr inbounds %struct.Reg, %struct.Reg* %3978, i32 0, i32 0
  %RAX.i1059 = bitcast %union.anon* %3979 to i64*
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3981 = getelementptr inbounds %struct.GPR, %struct.GPR* %3980, i32 0, i32 5
  %3982 = getelementptr inbounds %struct.Reg, %struct.Reg* %3981, i32 0, i32 0
  %RCX.i1060 = bitcast %union.anon* %3982 to i64*
  %3983 = load i64, i64* %RAX.i1059
  %3984 = mul i64 %3983, 4
  %3985 = add i64 %3984, 9047808
  %3986 = load i64, i64* %PC.i1058
  %3987 = add i64 %3986, 7
  store i64 %3987, i64* %PC.i1058
  %3988 = inttoptr i64 %3985 to i32*
  %3989 = load i32, i32* %3988
  %3990 = zext i32 %3989 to i64
  store i64 %3990, i64* %RCX.i1060, align 8
  store %struct.Memory* %loadMem_40cb72, %struct.Memory** %MEMORY
  %loadMem_40cb79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3992 = getelementptr inbounds %struct.GPR, %struct.GPR* %3991, i32 0, i32 33
  %3993 = getelementptr inbounds %struct.Reg, %struct.Reg* %3992, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %3993 to i64*
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3995 = getelementptr inbounds %struct.GPR, %struct.GPR* %3994, i32 0, i32 5
  %3996 = getelementptr inbounds %struct.Reg, %struct.Reg* %3995, i32 0, i32 0
  %RCX.i1057 = bitcast %union.anon* %3996 to i64*
  %3997 = load i64, i64* %RCX.i1057
  %3998 = load i64, i64* %PC.i1056
  %3999 = add i64 %3998, 7
  store i64 %3999, i64* %PC.i1056
  %4000 = trunc i64 %3997 to i32
  %4001 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %4002 = xor i32 %4001, %4000
  %4003 = zext i32 %4002 to i64
  store i64 %4003, i64* %RCX.i1057, align 8
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4004, align 1
  %4005 = and i32 %4002, 255
  %4006 = call i32 @llvm.ctpop.i32(i32 %4005)
  %4007 = trunc i32 %4006 to i8
  %4008 = and i8 %4007, 1
  %4009 = xor i8 %4008, 1
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4009, i8* %4010, align 1
  %4011 = icmp eq i32 %4002, 0
  %4012 = zext i1 %4011 to i8
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4012, i8* %4013, align 1
  %4014 = lshr i32 %4002, 31
  %4015 = trunc i32 %4014 to i8
  %4016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4015, i8* %4016, align 1
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4017, align 1
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4018, align 1
  store %struct.Memory* %loadMem_40cb79, %struct.Memory** %MEMORY
  %loadMem_40cb80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4020 = getelementptr inbounds %struct.GPR, %struct.GPR* %4019, i32 0, i32 33
  %4021 = getelementptr inbounds %struct.Reg, %struct.Reg* %4020, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %4021 to i64*
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4023 = getelementptr inbounds %struct.GPR, %struct.GPR* %4022, i32 0, i32 5
  %4024 = getelementptr inbounds %struct.Reg, %struct.Reg* %4023, i32 0, i32 0
  %ECX.i1055 = bitcast %union.anon* %4024 to i32*
  %4025 = load i32, i32* %ECX.i1055
  %4026 = zext i32 %4025 to i64
  %4027 = load i64, i64* %PC.i1054
  %4028 = add i64 %4027, 7
  store i64 %4028, i64* %PC.i1054
  store i32 %4025, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cb80, %struct.Memory** %MEMORY
  %loadMem_40cb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4030 = getelementptr inbounds %struct.GPR, %struct.GPR* %4029, i32 0, i32 33
  %4031 = getelementptr inbounds %struct.Reg, %struct.Reg* %4030, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %4031 to i64*
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4033 = getelementptr inbounds %struct.GPR, %struct.GPR* %4032, i32 0, i32 1
  %4034 = getelementptr inbounds %struct.Reg, %struct.Reg* %4033, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %4034 to i64*
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 15
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %4037 to i64*
  %4038 = load i64, i64* %RBP.i1053
  %4039 = sub i64 %4038, 24
  %4040 = load i64, i64* %PC.i1051
  %4041 = add i64 %4040, 4
  store i64 %4041, i64* %PC.i1051
  %4042 = inttoptr i64 %4039 to i32*
  %4043 = load i32, i32* %4042
  %4044 = sext i32 %4043 to i64
  store i64 %4044, i64* %RAX.i1052, align 8
  store %struct.Memory* %loadMem_40cb87, %struct.Memory** %MEMORY
  %loadMem_40cb8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4046 = getelementptr inbounds %struct.GPR, %struct.GPR* %4045, i32 0, i32 33
  %4047 = getelementptr inbounds %struct.Reg, %struct.Reg* %4046, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %4047 to i64*
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 1
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %4050 to i64*
  %4051 = load i64, i64* %RAX.i1050
  %4052 = mul i64 %4051, 4
  %4053 = add i64 %4052, 8807744
  %4054 = load i64, i64* %PC.i1049
  %4055 = add i64 %4054, 11
  store i64 %4055, i64* %PC.i1049
  %4056 = inttoptr i64 %4053 to i32*
  store i32 13, i32* %4056
  store %struct.Memory* %loadMem_40cb8b, %struct.Memory** %MEMORY
  %loadMem_40cb96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %4059 to i64*
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 1
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %4062 to i64*
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4064 = getelementptr inbounds %struct.GPR, %struct.GPR* %4063, i32 0, i32 15
  %4065 = getelementptr inbounds %struct.Reg, %struct.Reg* %4064, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %4065 to i64*
  %4066 = load i64, i64* %RBP.i1048
  %4067 = sub i64 %4066, 20
  %4068 = load i64, i64* %PC.i1046
  %4069 = add i64 %4068, 4
  store i64 %4069, i64* %PC.i1046
  %4070 = inttoptr i64 %4067 to i32*
  %4071 = load i32, i32* %4070
  %4072 = sext i32 %4071 to i64
  store i64 %4072, i64* %RAX.i1047, align 8
  store %struct.Memory* %loadMem_40cb96, %struct.Memory** %MEMORY
  %loadMem_40cb9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4074 = getelementptr inbounds %struct.GPR, %struct.GPR* %4073, i32 0, i32 33
  %4075 = getelementptr inbounds %struct.Reg, %struct.Reg* %4074, i32 0, i32 0
  %PC.i1044 = bitcast %union.anon* %4075 to i64*
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4077 = getelementptr inbounds %struct.GPR, %struct.GPR* %4076, i32 0, i32 1
  %4078 = getelementptr inbounds %struct.Reg, %struct.Reg* %4077, i32 0, i32 0
  %RAX.i1045 = bitcast %union.anon* %4078 to i64*
  %4079 = load i64, i64* %RAX.i1045
  %4080 = mul i64 %4079, 4
  %4081 = add i64 %4080, 8807744
  %4082 = load i64, i64* %PC.i1044
  %4083 = add i64 %4082, 11
  store i64 %4083, i64* %PC.i1044
  %4084 = inttoptr i64 %4081 to i32*
  store i32 1, i32* %4084
  store %struct.Memory* %loadMem_40cb9a, %struct.Memory** %MEMORY
  %loadMem_40cba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4086 = getelementptr inbounds %struct.GPR, %struct.GPR* %4085, i32 0, i32 33
  %4087 = getelementptr inbounds %struct.Reg, %struct.Reg* %4086, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %4087 to i64*
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4089 = getelementptr inbounds %struct.GPR, %struct.GPR* %4088, i32 0, i32 5
  %4090 = getelementptr inbounds %struct.Reg, %struct.Reg* %4089, i32 0, i32 0
  %RCX.i1043 = bitcast %union.anon* %4090 to i64*
  %4091 = load i64, i64* %PC.i1042
  %4092 = add i64 %4091, 7
  store i64 %4092, i64* %PC.i1042
  %4093 = load i32, i32* bitcast (%G_0x62dab8_type* @G_0x62dab8 to i32*)
  %4094 = zext i32 %4093 to i64
  store i64 %4094, i64* %RCX.i1043, align 8
  store %struct.Memory* %loadMem_40cba5, %struct.Memory** %MEMORY
  %loadMem_40cbac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4096 = getelementptr inbounds %struct.GPR, %struct.GPR* %4095, i32 0, i32 33
  %4097 = getelementptr inbounds %struct.Reg, %struct.Reg* %4096, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %4097 to i64*
  %4098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4099 = getelementptr inbounds %struct.GPR, %struct.GPR* %4098, i32 0, i32 5
  %4100 = getelementptr inbounds %struct.Reg, %struct.Reg* %4099, i32 0, i32 0
  %RCX.i1041 = bitcast %union.anon* %4100 to i64*
  %4101 = load i64, i64* %RCX.i1041
  %4102 = load i64, i64* %PC.i1040
  %4103 = add i64 %4102, 7
  store i64 %4103, i64* %PC.i1040
  %4104 = trunc i64 %4101 to i32
  %4105 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %4106 = add i32 %4105, %4104
  %4107 = zext i32 %4106 to i64
  store i64 %4107, i64* %RCX.i1041, align 8
  %4108 = icmp ult i32 %4106, %4104
  %4109 = icmp ult i32 %4106, %4105
  %4110 = or i1 %4108, %4109
  %4111 = zext i1 %4110 to i8
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4111, i8* %4112, align 1
  %4113 = and i32 %4106, 255
  %4114 = call i32 @llvm.ctpop.i32(i32 %4113)
  %4115 = trunc i32 %4114 to i8
  %4116 = and i8 %4115, 1
  %4117 = xor i8 %4116, 1
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4117, i8* %4118, align 1
  %4119 = xor i32 %4105, %4104
  %4120 = xor i32 %4119, %4106
  %4121 = lshr i32 %4120, 4
  %4122 = trunc i32 %4121 to i8
  %4123 = and i8 %4122, 1
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4123, i8* %4124, align 1
  %4125 = icmp eq i32 %4106, 0
  %4126 = zext i1 %4125 to i8
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4126, i8* %4127, align 1
  %4128 = lshr i32 %4106, 31
  %4129 = trunc i32 %4128 to i8
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4129, i8* %4130, align 1
  %4131 = lshr i32 %4104, 31
  %4132 = lshr i32 %4105, 31
  %4133 = xor i32 %4128, %4131
  %4134 = xor i32 %4128, %4132
  %4135 = add i32 %4133, %4134
  %4136 = icmp eq i32 %4135, 2
  %4137 = zext i1 %4136 to i8
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4137, i8* %4138, align 1
  store %struct.Memory* %loadMem_40cbac, %struct.Memory** %MEMORY
  %loadMem_40cbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4140 = getelementptr inbounds %struct.GPR, %struct.GPR* %4139, i32 0, i32 33
  %4141 = getelementptr inbounds %struct.Reg, %struct.Reg* %4140, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %4141 to i64*
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4143 = getelementptr inbounds %struct.GPR, %struct.GPR* %4142, i32 0, i32 5
  %4144 = getelementptr inbounds %struct.Reg, %struct.Reg* %4143, i32 0, i32 0
  %ECX.i1039 = bitcast %union.anon* %4144 to i32*
  %4145 = load i32, i32* %ECX.i1039
  %4146 = zext i32 %4145 to i64
  %4147 = load i64, i64* %PC.i1038
  %4148 = add i64 %4147, 7
  store i64 %4148, i64* %PC.i1038
  store i32 %4145, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40cbb3, %struct.Memory** %MEMORY
  %loadMem1_40cbba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4150 = getelementptr inbounds %struct.GPR, %struct.GPR* %4149, i32 0, i32 33
  %4151 = getelementptr inbounds %struct.Reg, %struct.Reg* %4150, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %4151 to i64*
  %4152 = load i64, i64* %PC.i1037
  %4153 = add i64 %4152, -42458
  %4154 = load i64, i64* %PC.i1037
  %4155 = add i64 %4154, 5
  %4156 = load i64, i64* %PC.i1037
  %4157 = add i64 %4156, 5
  store i64 %4157, i64* %PC.i1037
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4159 = load i64, i64* %4158, align 8
  %4160 = add i64 %4159, -8
  %4161 = inttoptr i64 %4160 to i64*
  store i64 %4155, i64* %4161
  store i64 %4160, i64* %4158, align 8
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4153, i64* %4162, align 8
  store %struct.Memory* %loadMem1_40cbba, %struct.Memory** %MEMORY
  %loadMem2_40cbba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cbba = load i64, i64* %3
  %call2_40cbba = call %struct.Memory* @sub_4025e0.removeHolding(%struct.State* %0, i64 %loadPC_40cbba, %struct.Memory* %loadMem2_40cbba)
  store %struct.Memory* %call2_40cbba, %struct.Memory** %MEMORY
  %loadMem_40cbbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4164 = getelementptr inbounds %struct.GPR, %struct.GPR* %4163, i32 0, i32 33
  %4165 = getelementptr inbounds %struct.Reg, %struct.Reg* %4164, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %4165 to i64*
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4167 = getelementptr inbounds %struct.GPR, %struct.GPR* %4166, i32 0, i32 1
  %4168 = getelementptr inbounds %struct.Reg, %struct.Reg* %4167, i32 0, i32 0
  %RAX.i1036 = bitcast %union.anon* %4168 to i64*
  %4169 = load i64, i64* %PC.i1035
  %4170 = add i64 %4169, 10
  store i64 %4170, i64* %PC.i1035
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i1036, align 8
  store %struct.Memory* %loadMem_40cbbf, %struct.Memory** %MEMORY
  %loadMem_40cbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4172 = getelementptr inbounds %struct.GPR, %struct.GPR* %4171, i32 0, i32 33
  %4173 = getelementptr inbounds %struct.Reg, %struct.Reg* %4172, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %4173 to i64*
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4175 = getelementptr inbounds %struct.GPR, %struct.GPR* %4174, i32 0, i32 5
  %4176 = getelementptr inbounds %struct.Reg, %struct.Reg* %4175, i32 0, i32 0
  %RCX.i1034 = bitcast %union.anon* %4176 to i64*
  %4177 = load i64, i64* %PC.i1033
  %4178 = add i64 %4177, 7
  store i64 %4178, i64* %PC.i1033
  %4179 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %4180 = zext i32 %4179 to i64
  store i64 %4180, i64* %RCX.i1034, align 8
  store %struct.Memory* %loadMem_40cbc9, %struct.Memory** %MEMORY
  %loadMem_40cbd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 33
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %4183 to i64*
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 5
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %RCX.i1032 = bitcast %union.anon* %4186 to i64*
  %4187 = load i64, i64* %RCX.i1032
  %4188 = load i64, i64* %PC.i1031
  %4189 = add i64 %4188, 3
  store i64 %4189, i64* %PC.i1031
  %4190 = trunc i64 %4187 to i32
  %4191 = add i32 1, %4190
  %4192 = zext i32 %4191 to i64
  store i64 %4192, i64* %RCX.i1032, align 8
  %4193 = icmp ult i32 %4191, %4190
  %4194 = icmp ult i32 %4191, 1
  %4195 = or i1 %4193, %4194
  %4196 = zext i1 %4195 to i8
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4196, i8* %4197, align 1
  %4198 = and i32 %4191, 255
  %4199 = call i32 @llvm.ctpop.i32(i32 %4198)
  %4200 = trunc i32 %4199 to i8
  %4201 = and i8 %4200, 1
  %4202 = xor i8 %4201, 1
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4202, i8* %4203, align 1
  %4204 = xor i64 1, %4187
  %4205 = trunc i64 %4204 to i32
  %4206 = xor i32 %4205, %4191
  %4207 = lshr i32 %4206, 4
  %4208 = trunc i32 %4207 to i8
  %4209 = and i8 %4208, 1
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4209, i8* %4210, align 1
  %4211 = icmp eq i32 %4191, 0
  %4212 = zext i1 %4211 to i8
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4212, i8* %4213, align 1
  %4214 = lshr i32 %4191, 31
  %4215 = trunc i32 %4214 to i8
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4215, i8* %4216, align 1
  %4217 = lshr i32 %4190, 31
  %4218 = xor i32 %4214, %4217
  %4219 = add i32 %4218, %4214
  %4220 = icmp eq i32 %4219, 2
  %4221 = zext i1 %4220 to i8
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4221, i8* %4222, align 1
  store %struct.Memory* %loadMem_40cbd0, %struct.Memory** %MEMORY
  %loadMem_40cbd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 33
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %4225 to i64*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 5
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %ECX.i1030 = bitcast %union.anon* %4228 to i32*
  %4229 = load i32, i32* %ECX.i1030
  %4230 = zext i32 %4229 to i64
  %4231 = load i64, i64* %PC.i1029
  %4232 = add i64 %4231, 7
  store i64 %4232, i64* %PC.i1029
  store i32 %4229, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40cbd3, %struct.Memory** %MEMORY
  %loadMem_40cbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 33
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %4235 to i64*
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 5
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %RCX.i1027 = bitcast %union.anon* %4238 to i64*
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 15
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %4241 to i64*
  %4242 = load i64, i64* %RBP.i1028
  %4243 = sub i64 %4242, 24
  %4244 = load i64, i64* %PC.i1026
  %4245 = add i64 %4244, 3
  store i64 %4245, i64* %PC.i1026
  %4246 = inttoptr i64 %4243 to i32*
  %4247 = load i32, i32* %4246
  %4248 = zext i32 %4247 to i64
  store i64 %4248, i64* %RCX.i1027, align 8
  store %struct.Memory* %loadMem_40cbda, %struct.Memory** %MEMORY
  %loadMem_40cbdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4250 = getelementptr inbounds %struct.GPR, %struct.GPR* %4249, i32 0, i32 33
  %4251 = getelementptr inbounds %struct.Reg, %struct.Reg* %4250, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %4251 to i64*
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4253 = getelementptr inbounds %struct.GPR, %struct.GPR* %4252, i32 0, i32 5
  %4254 = getelementptr inbounds %struct.Reg, %struct.Reg* %4253, i32 0, i32 0
  %RCX.i1025 = bitcast %union.anon* %4254 to i64*
  %4255 = load i64, i64* %RCX.i1025
  %4256 = load i64, i64* %PC.i1024
  %4257 = add i64 %4256, 3
  store i64 %4257, i64* %PC.i1024
  %4258 = trunc i64 %4255 to i32
  %4259 = sub i32 %4258, 12
  %4260 = zext i32 %4259 to i64
  store i64 %4260, i64* %RCX.i1025, align 8
  %4261 = icmp ult i32 %4258, 12
  %4262 = zext i1 %4261 to i8
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4262, i8* %4263, align 1
  %4264 = and i32 %4259, 255
  %4265 = call i32 @llvm.ctpop.i32(i32 %4264)
  %4266 = trunc i32 %4265 to i8
  %4267 = and i8 %4266, 1
  %4268 = xor i8 %4267, 1
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4268, i8* %4269, align 1
  %4270 = xor i64 12, %4255
  %4271 = trunc i64 %4270 to i32
  %4272 = xor i32 %4271, %4259
  %4273 = lshr i32 %4272, 4
  %4274 = trunc i32 %4273 to i8
  %4275 = and i8 %4274, 1
  %4276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4275, i8* %4276, align 1
  %4277 = icmp eq i32 %4259, 0
  %4278 = zext i1 %4277 to i8
  %4279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4278, i8* %4279, align 1
  %4280 = lshr i32 %4259, 31
  %4281 = trunc i32 %4280 to i8
  %4282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4281, i8* %4282, align 1
  %4283 = lshr i32 %4258, 31
  %4284 = xor i32 %4280, %4283
  %4285 = add i32 %4284, %4283
  %4286 = icmp eq i32 %4285, 2
  %4287 = zext i1 %4286 to i8
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4287, i8* %4288, align 1
  store %struct.Memory* %loadMem_40cbdd, %struct.Memory** %MEMORY
  %loadMem_40cbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 33
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 5
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %ECX.i1022 = bitcast %union.anon* %4294 to i32*
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 7
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %RDX.i1023 = bitcast %union.anon* %4297 to i64*
  %4298 = load i32, i32* %ECX.i1022
  %4299 = zext i32 %4298 to i64
  %4300 = load i64, i64* %PC.i1021
  %4301 = add i64 %4300, 3
  store i64 %4301, i64* %PC.i1021
  %4302 = shl i64 %4299, 32
  %4303 = ashr exact i64 %4302, 32
  store i64 %4303, i64* %RDX.i1023, align 8
  store %struct.Memory* %loadMem_40cbe0, %struct.Memory** %MEMORY
  %loadMem_40cbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 33
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %4306 to i64*
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4308 = getelementptr inbounds %struct.GPR, %struct.GPR* %4307, i32 0, i32 7
  %4309 = getelementptr inbounds %struct.Reg, %struct.Reg* %4308, i32 0, i32 0
  %RDX.i1020 = bitcast %union.anon* %4309 to i64*
  %4310 = load i64, i64* %RDX.i1020
  %4311 = mul i64 %4310, 4
  %4312 = add i64 %4311, 8807744
  %4313 = load i64, i64* %PC.i1019
  %4314 = add i64 %4313, 11
  store i64 %4314, i64* %PC.i1019
  %4315 = inttoptr i64 %4312 to i32*
  store i32 2, i32* %4315
  store %struct.Memory* %loadMem_40cbe3, %struct.Memory** %MEMORY
  %loadMem_40cbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 33
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %4318 to i64*
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 7
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %RDX.i1017 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 15
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %4324 to i64*
  %4325 = load i64, i64* %RBP.i1018
  %4326 = sub i64 %4325, 24
  %4327 = load i64, i64* %PC.i1016
  %4328 = add i64 %4327, 4
  store i64 %4328, i64* %PC.i1016
  %4329 = inttoptr i64 %4326 to i32*
  %4330 = load i32, i32* %4329
  %4331 = sext i32 %4330 to i64
  store i64 %4331, i64* %RDX.i1017, align 8
  store %struct.Memory* %loadMem_40cbee, %struct.Memory** %MEMORY
  %loadMem_40cbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 33
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %4334 to i64*
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4336 = getelementptr inbounds %struct.GPR, %struct.GPR* %4335, i32 0, i32 5
  %4337 = getelementptr inbounds %struct.Reg, %struct.Reg* %4336, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %4337 to i64*
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4339 = getelementptr inbounds %struct.GPR, %struct.GPR* %4338, i32 0, i32 7
  %4340 = getelementptr inbounds %struct.Reg, %struct.Reg* %4339, i32 0, i32 0
  %RDX.i1015 = bitcast %union.anon* %4340 to i64*
  %4341 = load i64, i64* %RDX.i1015
  %4342 = mul i64 %4341, 4
  %4343 = add i64 %4342, 8922032
  %4344 = load i64, i64* %PC.i1013
  %4345 = add i64 %4344, 7
  store i64 %4345, i64* %PC.i1013
  %4346 = inttoptr i64 %4343 to i32*
  %4347 = load i32, i32* %4346
  %4348 = zext i32 %4347 to i64
  store i64 %4348, i64* %RCX.i1014, align 8
  store %struct.Memory* %loadMem_40cbf2, %struct.Memory** %MEMORY
  %loadMem_40cbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 33
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %4351 to i64*
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4353 = getelementptr inbounds %struct.GPR, %struct.GPR* %4352, i32 0, i32 5
  %4354 = getelementptr inbounds %struct.Reg, %struct.Reg* %4353, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %4354 to i64*
  %4355 = load i64, i64* %RCX.i1012
  %4356 = load i64, i64* %PC.i1011
  %4357 = add i64 %4356, 3
  store i64 %4357, i64* %PC.i1011
  %4358 = trunc i64 %4355 to i32
  %4359 = add i32 -1, %4358
  %4360 = zext i32 %4359 to i64
  store i64 %4360, i64* %RCX.i1012, align 8
  %4361 = icmp ult i32 %4359, %4358
  %4362 = icmp ult i32 %4359, -1
  %4363 = or i1 %4361, %4362
  %4364 = zext i1 %4363 to i8
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4364, i8* %4365, align 1
  %4366 = and i32 %4359, 255
  %4367 = call i32 @llvm.ctpop.i32(i32 %4366)
  %4368 = trunc i32 %4367 to i8
  %4369 = and i8 %4368, 1
  %4370 = xor i8 %4369, 1
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4370, i8* %4371, align 1
  %4372 = xor i64 -1, %4355
  %4373 = trunc i64 %4372 to i32
  %4374 = xor i32 %4373, %4359
  %4375 = lshr i32 %4374, 4
  %4376 = trunc i32 %4375 to i8
  %4377 = and i8 %4376, 1
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4377, i8* %4378, align 1
  %4379 = icmp eq i32 %4359, 0
  %4380 = zext i1 %4379 to i8
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4380, i8* %4381, align 1
  %4382 = lshr i32 %4359, 31
  %4383 = trunc i32 %4382 to i8
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4383, i8* %4384, align 1
  %4385 = lshr i32 %4358, 31
  %4386 = xor i32 %4382, %4385
  %4387 = xor i32 %4382, 1
  %4388 = add i32 %4386, %4387
  %4389 = icmp eq i32 %4388, 2
  %4390 = zext i1 %4389 to i8
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4390, i8* %4391, align 1
  store %struct.Memory* %loadMem_40cbf9, %struct.Memory** %MEMORY
  %loadMem_40cbfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 33
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %4394 to i64*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4396 = getelementptr inbounds %struct.GPR, %struct.GPR* %4395, i32 0, i32 5
  %4397 = getelementptr inbounds %struct.Reg, %struct.Reg* %4396, i32 0, i32 0
  %ECX.i1009 = bitcast %union.anon* %4397 to i32*
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 7
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %RDX.i1010 = bitcast %union.anon* %4400 to i64*
  %4401 = load i64, i64* %RDX.i1010
  %4402 = mul i64 %4401, 4
  %4403 = add i64 %4402, 8922032
  %4404 = load i32, i32* %ECX.i1009
  %4405 = zext i32 %4404 to i64
  %4406 = load i64, i64* %PC.i1008
  %4407 = add i64 %4406, 7
  store i64 %4407, i64* %PC.i1008
  %4408 = inttoptr i64 %4403 to i32*
  store i32 %4404, i32* %4408
  store %struct.Memory* %loadMem_40cbfc, %struct.Memory** %MEMORY
  %loadMem_40cc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4410 = getelementptr inbounds %struct.GPR, %struct.GPR* %4409, i32 0, i32 33
  %4411 = getelementptr inbounds %struct.Reg, %struct.Reg* %4410, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %4411 to i64*
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4413 = getelementptr inbounds %struct.GPR, %struct.GPR* %4412, i32 0, i32 7
  %4414 = getelementptr inbounds %struct.Reg, %struct.Reg* %4413, i32 0, i32 0
  %RDX.i1006 = bitcast %union.anon* %4414 to i64*
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4416 = getelementptr inbounds %struct.GPR, %struct.GPR* %4415, i32 0, i32 15
  %4417 = getelementptr inbounds %struct.Reg, %struct.Reg* %4416, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %4417 to i64*
  %4418 = load i64, i64* %RBP.i1007
  %4419 = sub i64 %4418, 20
  %4420 = load i64, i64* %PC.i1005
  %4421 = add i64 %4420, 4
  store i64 %4421, i64* %PC.i1005
  %4422 = inttoptr i64 %4419 to i32*
  %4423 = load i32, i32* %4422
  %4424 = sext i32 %4423 to i64
  store i64 %4424, i64* %RDX.i1006, align 8
  store %struct.Memory* %loadMem_40cc03, %struct.Memory** %MEMORY
  %loadMem_40cc07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4426 = getelementptr inbounds %struct.GPR, %struct.GPR* %4425, i32 0, i32 33
  %4427 = getelementptr inbounds %struct.Reg, %struct.Reg* %4426, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %4427 to i64*
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4429 = getelementptr inbounds %struct.GPR, %struct.GPR* %4428, i32 0, i32 5
  %4430 = getelementptr inbounds %struct.Reg, %struct.Reg* %4429, i32 0, i32 0
  %RCX.i1003 = bitcast %union.anon* %4430 to i64*
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4432 = getelementptr inbounds %struct.GPR, %struct.GPR* %4431, i32 0, i32 7
  %4433 = getelementptr inbounds %struct.Reg, %struct.Reg* %4432, i32 0, i32 0
  %RDX.i1004 = bitcast %union.anon* %4433 to i64*
  %4434 = load i64, i64* %RDX.i1004
  %4435 = mul i64 %4434, 4
  %4436 = add i64 %4435, 8922032
  %4437 = load i64, i64* %PC.i1002
  %4438 = add i64 %4437, 7
  store i64 %4438, i64* %PC.i1002
  %4439 = inttoptr i64 %4436 to i32*
  %4440 = load i32, i32* %4439
  %4441 = zext i32 %4440 to i64
  store i64 %4441, i64* %RCX.i1003, align 8
  store %struct.Memory* %loadMem_40cc07, %struct.Memory** %MEMORY
  %loadMem_40cc0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4443 = getelementptr inbounds %struct.GPR, %struct.GPR* %4442, i32 0, i32 33
  %4444 = getelementptr inbounds %struct.Reg, %struct.Reg* %4443, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %4444 to i64*
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4446 = getelementptr inbounds %struct.GPR, %struct.GPR* %4445, i32 0, i32 5
  %4447 = getelementptr inbounds %struct.Reg, %struct.Reg* %4446, i32 0, i32 0
  %RCX.i1001 = bitcast %union.anon* %4447 to i64*
  %4448 = load i64, i64* %RCX.i1001
  %4449 = load i64, i64* %PC.i1000
  %4450 = add i64 %4449, 3
  store i64 %4450, i64* %PC.i1000
  %4451 = trunc i64 %4448 to i32
  %4452 = add i32 -1, %4451
  %4453 = zext i32 %4452 to i64
  store i64 %4453, i64* %RCX.i1001, align 8
  %4454 = icmp ult i32 %4452, %4451
  %4455 = icmp ult i32 %4452, -1
  %4456 = or i1 %4454, %4455
  %4457 = zext i1 %4456 to i8
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4457, i8* %4458, align 1
  %4459 = and i32 %4452, 255
  %4460 = call i32 @llvm.ctpop.i32(i32 %4459)
  %4461 = trunc i32 %4460 to i8
  %4462 = and i8 %4461, 1
  %4463 = xor i8 %4462, 1
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4463, i8* %4464, align 1
  %4465 = xor i64 -1, %4448
  %4466 = trunc i64 %4465 to i32
  %4467 = xor i32 %4466, %4452
  %4468 = lshr i32 %4467, 4
  %4469 = trunc i32 %4468 to i8
  %4470 = and i8 %4469, 1
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4470, i8* %4471, align 1
  %4472 = icmp eq i32 %4452, 0
  %4473 = zext i1 %4472 to i8
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4473, i8* %4474, align 1
  %4475 = lshr i32 %4452, 31
  %4476 = trunc i32 %4475 to i8
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4476, i8* %4477, align 1
  %4478 = lshr i32 %4451, 31
  %4479 = xor i32 %4475, %4478
  %4480 = xor i32 %4475, 1
  %4481 = add i32 %4479, %4480
  %4482 = icmp eq i32 %4481, 2
  %4483 = zext i1 %4482 to i8
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4483, i8* %4484, align 1
  store %struct.Memory* %loadMem_40cc0e, %struct.Memory** %MEMORY
  %loadMem_40cc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 33
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 5
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %ECX.i998 = bitcast %union.anon* %4490 to i32*
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4492 = getelementptr inbounds %struct.GPR, %struct.GPR* %4491, i32 0, i32 7
  %4493 = getelementptr inbounds %struct.Reg, %struct.Reg* %4492, i32 0, i32 0
  %RDX.i999 = bitcast %union.anon* %4493 to i64*
  %4494 = load i64, i64* %RDX.i999
  %4495 = mul i64 %4494, 4
  %4496 = add i64 %4495, 8922032
  %4497 = load i32, i32* %ECX.i998
  %4498 = zext i32 %4497 to i64
  %4499 = load i64, i64* %PC.i997
  %4500 = add i64 %4499, 7
  store i64 %4500, i64* %PC.i997
  %4501 = inttoptr i64 %4496 to i32*
  store i32 %4497, i32* %4501
  store %struct.Memory* %loadMem_40cc11, %struct.Memory** %MEMORY
  %loadMem_40cc18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 33
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %4504 to i64*
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 5
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %RCX.i995 = bitcast %union.anon* %4507 to i64*
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 15
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %RBP.i996 = bitcast %union.anon* %4510 to i64*
  %4511 = load i64, i64* %RBP.i996
  %4512 = sub i64 %4511, 24
  %4513 = load i64, i64* %PC.i994
  %4514 = add i64 %4513, 3
  store i64 %4514, i64* %PC.i994
  %4515 = inttoptr i64 %4512 to i32*
  %4516 = load i32, i32* %4515
  %4517 = zext i32 %4516 to i64
  store i64 %4517, i64* %RCX.i995, align 8
  store %struct.Memory* %loadMem_40cc18, %struct.Memory** %MEMORY
  %loadMem_40cc1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4519 = getelementptr inbounds %struct.GPR, %struct.GPR* %4518, i32 0, i32 33
  %4520 = getelementptr inbounds %struct.Reg, %struct.Reg* %4519, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %4520 to i64*
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4522 = getelementptr inbounds %struct.GPR, %struct.GPR* %4521, i32 0, i32 5
  %4523 = getelementptr inbounds %struct.Reg, %struct.Reg* %4522, i32 0, i32 0
  %RCX.i993 = bitcast %union.anon* %4523 to i64*
  %4524 = load i64, i64* %RCX.i993
  %4525 = load i64, i64* %PC.i992
  %4526 = add i64 %4525, 3
  store i64 %4526, i64* %PC.i992
  %4527 = trunc i64 %4524 to i32
  %4528 = sub i32 %4527, 12
  %4529 = zext i32 %4528 to i64
  store i64 %4529, i64* %RCX.i993, align 8
  %4530 = icmp ult i32 %4527, 12
  %4531 = zext i1 %4530 to i8
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4531, i8* %4532, align 1
  %4533 = and i32 %4528, 255
  %4534 = call i32 @llvm.ctpop.i32(i32 %4533)
  %4535 = trunc i32 %4534 to i8
  %4536 = and i8 %4535, 1
  %4537 = xor i8 %4536, 1
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4537, i8* %4538, align 1
  %4539 = xor i64 12, %4524
  %4540 = trunc i64 %4539 to i32
  %4541 = xor i32 %4540, %4528
  %4542 = lshr i32 %4541, 4
  %4543 = trunc i32 %4542 to i8
  %4544 = and i8 %4543, 1
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4544, i8* %4545, align 1
  %4546 = icmp eq i32 %4528, 0
  %4547 = zext i1 %4546 to i8
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4547, i8* %4548, align 1
  %4549 = lshr i32 %4528, 31
  %4550 = trunc i32 %4549 to i8
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4550, i8* %4551, align 1
  %4552 = lshr i32 %4527, 31
  %4553 = xor i32 %4549, %4552
  %4554 = add i32 %4553, %4552
  %4555 = icmp eq i32 %4554, 2
  %4556 = zext i1 %4555 to i8
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4556, i8* %4557, align 1
  store %struct.Memory* %loadMem_40cc1b, %struct.Memory** %MEMORY
  %loadMem_40cc1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4559 = getelementptr inbounds %struct.GPR, %struct.GPR* %4558, i32 0, i32 33
  %4560 = getelementptr inbounds %struct.Reg, %struct.Reg* %4559, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %4560 to i64*
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4562 = getelementptr inbounds %struct.GPR, %struct.GPR* %4561, i32 0, i32 5
  %4563 = getelementptr inbounds %struct.Reg, %struct.Reg* %4562, i32 0, i32 0
  %ECX.i990 = bitcast %union.anon* %4563 to i32*
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 7
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %RDX.i991 = bitcast %union.anon* %4566 to i64*
  %4567 = load i32, i32* %ECX.i990
  %4568 = zext i32 %4567 to i64
  %4569 = load i64, i64* %PC.i989
  %4570 = add i64 %4569, 3
  store i64 %4570, i64* %PC.i989
  %4571 = shl i64 %4568, 32
  %4572 = ashr exact i64 %4571, 32
  store i64 %4572, i64* %RDX.i991, align 8
  store %struct.Memory* %loadMem_40cc1e, %struct.Memory** %MEMORY
  %loadMem_40cc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 33
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %4575 to i64*
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4577 = getelementptr inbounds %struct.GPR, %struct.GPR* %4576, i32 0, i32 5
  %4578 = getelementptr inbounds %struct.Reg, %struct.Reg* %4577, i32 0, i32 0
  %RCX.i987 = bitcast %union.anon* %4578 to i64*
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4580 = getelementptr inbounds %struct.GPR, %struct.GPR* %4579, i32 0, i32 7
  %4581 = getelementptr inbounds %struct.Reg, %struct.Reg* %4580, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %4581 to i64*
  %4582 = load i64, i64* %RDX.i988
  %4583 = mul i64 %4582, 4
  %4584 = add i64 %4583, 8922032
  %4585 = load i64, i64* %PC.i986
  %4586 = add i64 %4585, 7
  store i64 %4586, i64* %PC.i986
  %4587 = inttoptr i64 %4584 to i32*
  %4588 = load i32, i32* %4587
  %4589 = zext i32 %4588 to i64
  store i64 %4589, i64* %RCX.i987, align 8
  store %struct.Memory* %loadMem_40cc21, %struct.Memory** %MEMORY
  %loadMem_40cc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 33
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %4592 to i64*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 5
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %RCX.i985 = bitcast %union.anon* %4595 to i64*
  %4596 = load i64, i64* %RCX.i985
  %4597 = load i64, i64* %PC.i984
  %4598 = add i64 %4597, 3
  store i64 %4598, i64* %PC.i984
  %4599 = trunc i64 %4596 to i32
  %4600 = add i32 -1, %4599
  %4601 = zext i32 %4600 to i64
  store i64 %4601, i64* %RCX.i985, align 8
  %4602 = icmp ult i32 %4600, %4599
  %4603 = icmp ult i32 %4600, -1
  %4604 = or i1 %4602, %4603
  %4605 = zext i1 %4604 to i8
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4605, i8* %4606, align 1
  %4607 = and i32 %4600, 255
  %4608 = call i32 @llvm.ctpop.i32(i32 %4607)
  %4609 = trunc i32 %4608 to i8
  %4610 = and i8 %4609, 1
  %4611 = xor i8 %4610, 1
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4611, i8* %4612, align 1
  %4613 = xor i64 -1, %4596
  %4614 = trunc i64 %4613 to i32
  %4615 = xor i32 %4614, %4600
  %4616 = lshr i32 %4615, 4
  %4617 = trunc i32 %4616 to i8
  %4618 = and i8 %4617, 1
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4618, i8* %4619, align 1
  %4620 = icmp eq i32 %4600, 0
  %4621 = zext i1 %4620 to i8
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4621, i8* %4622, align 1
  %4623 = lshr i32 %4600, 31
  %4624 = trunc i32 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4624, i8* %4625, align 1
  %4626 = lshr i32 %4599, 31
  %4627 = xor i32 %4623, %4626
  %4628 = xor i32 %4623, 1
  %4629 = add i32 %4627, %4628
  %4630 = icmp eq i32 %4629, 2
  %4631 = zext i1 %4630 to i8
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4631, i8* %4632, align 1
  store %struct.Memory* %loadMem_40cc28, %struct.Memory** %MEMORY
  %loadMem_40cc2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 33
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %4635 to i64*
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4637 = getelementptr inbounds %struct.GPR, %struct.GPR* %4636, i32 0, i32 5
  %4638 = getelementptr inbounds %struct.Reg, %struct.Reg* %4637, i32 0, i32 0
  %ECX.i982 = bitcast %union.anon* %4638 to i32*
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4640 = getelementptr inbounds %struct.GPR, %struct.GPR* %4639, i32 0, i32 7
  %4641 = getelementptr inbounds %struct.Reg, %struct.Reg* %4640, i32 0, i32 0
  %RDX.i983 = bitcast %union.anon* %4641 to i64*
  %4642 = load i64, i64* %RDX.i983
  %4643 = mul i64 %4642, 4
  %4644 = add i64 %4643, 8922032
  %4645 = load i32, i32* %ECX.i982
  %4646 = zext i32 %4645 to i64
  %4647 = load i64, i64* %PC.i981
  %4648 = add i64 %4647, 7
  store i64 %4648, i64* %PC.i981
  %4649 = inttoptr i64 %4644 to i32*
  store i32 %4645, i32* %4649
  store %struct.Memory* %loadMem_40cc2b, %struct.Memory** %MEMORY
  %loadMem_40cc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4651 = getelementptr inbounds %struct.GPR, %struct.GPR* %4650, i32 0, i32 33
  %4652 = getelementptr inbounds %struct.Reg, %struct.Reg* %4651, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %4652 to i64*
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4654 = getelementptr inbounds %struct.GPR, %struct.GPR* %4653, i32 0, i32 5
  %4655 = getelementptr inbounds %struct.Reg, %struct.Reg* %4654, i32 0, i32 0
  %RCX.i980 = bitcast %union.anon* %4655 to i64*
  %4656 = load i64, i64* %PC.i979
  %4657 = add i64 %4656, 7
  store i64 %4657, i64* %PC.i979
  %4658 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %4659 = zext i32 %4658 to i64
  store i64 %4659, i64* %RCX.i980, align 8
  store %struct.Memory* %loadMem_40cc32, %struct.Memory** %MEMORY
  %loadMem_40cc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4661 = getelementptr inbounds %struct.GPR, %struct.GPR* %4660, i32 0, i32 33
  %4662 = getelementptr inbounds %struct.Reg, %struct.Reg* %4661, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %4662 to i64*
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 5
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %4665 to i64*
  %4666 = load i64, i64* %RCX.i978
  %4667 = load i64, i64* %PC.i977
  %4668 = add i64 %4667, 3
  store i64 %4668, i64* %PC.i977
  %4669 = xor i64 1, %4666
  %4670 = trunc i64 %4669 to i32
  %4671 = and i64 %4669, 4294967295
  store i64 %4671, i64* %RCX.i978, align 8
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4672, align 1
  %4673 = and i32 %4670, 255
  %4674 = call i32 @llvm.ctpop.i32(i32 %4673)
  %4675 = trunc i32 %4674 to i8
  %4676 = and i8 %4675, 1
  %4677 = xor i8 %4676, 1
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4677, i8* %4678, align 1
  %4679 = icmp eq i32 %4670, 0
  %4680 = zext i1 %4679 to i8
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4680, i8* %4681, align 1
  %4682 = lshr i32 %4670, 31
  %4683 = trunc i32 %4682 to i8
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4683, i8* %4684, align 1
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4685, align 1
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4686, align 1
  store %struct.Memory* %loadMem_40cc39, %struct.Memory** %MEMORY
  %loadMem_40cc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4688 = getelementptr inbounds %struct.GPR, %struct.GPR* %4687, i32 0, i32 33
  %4689 = getelementptr inbounds %struct.Reg, %struct.Reg* %4688, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %4689 to i64*
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4691 = getelementptr inbounds %struct.GPR, %struct.GPR* %4690, i32 0, i32 5
  %4692 = getelementptr inbounds %struct.Reg, %struct.Reg* %4691, i32 0, i32 0
  %ECX.i976 = bitcast %union.anon* %4692 to i32*
  %4693 = load i32, i32* %ECX.i976
  %4694 = zext i32 %4693 to i64
  %4695 = load i64, i64* %PC.i975
  %4696 = add i64 %4695, 7
  store i64 %4696, i64* %PC.i975
  store i32 %4693, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40cc3c, %struct.Memory** %MEMORY
  %loadMem_40cc43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 33
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %4699 to i64*
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4701 = getelementptr inbounds %struct.GPR, %struct.GPR* %4700, i32 0, i32 7
  %4702 = getelementptr inbounds %struct.Reg, %struct.Reg* %4701, i32 0, i32 0
  %RDX.i974 = bitcast %union.anon* %4702 to i64*
  %4703 = load i64, i64* %PC.i973
  %4704 = add i64 %4703, 8
  store i64 %4704, i64* %PC.i973
  %4705 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %4706 = sext i32 %4705 to i64
  store i64 %4706, i64* %RDX.i974, align 8
  store %struct.Memory* %loadMem_40cc43, %struct.Memory** %MEMORY
  %loadMem_40cc4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4708 = getelementptr inbounds %struct.GPR, %struct.GPR* %4707, i32 0, i32 33
  %4709 = getelementptr inbounds %struct.Reg, %struct.Reg* %4708, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %4709 to i64*
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4711 = getelementptr inbounds %struct.GPR, %struct.GPR* %4710, i32 0, i32 7
  %4712 = getelementptr inbounds %struct.Reg, %struct.Reg* %4711, i32 0, i32 0
  %RDX.i972 = bitcast %union.anon* %4712 to i64*
  %4713 = load i64, i64* %RDX.i972
  %4714 = load i64, i64* %PC.i971
  %4715 = add i64 %4714, 4
  store i64 %4715, i64* %PC.i971
  %4716 = shl i64 %4713, 3
  %4717 = icmp slt i64 %4716, 0
  %4718 = shl i64 %4716, 1
  store i64 %4718, i64* %RDX.i972, align 8
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4720 = zext i1 %4717 to i8
  store i8 %4720, i8* %4719, align 1
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4722 = trunc i64 %4718 to i32
  %4723 = and i32 %4722, 254
  %4724 = call i32 @llvm.ctpop.i32(i32 %4723)
  %4725 = trunc i32 %4724 to i8
  %4726 = and i8 %4725, 1
  %4727 = xor i8 %4726, 1
  store i8 %4727, i8* %4721, align 1
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4728, align 1
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4730 = icmp eq i64 %4718, 0
  %4731 = zext i1 %4730 to i8
  store i8 %4731, i8* %4729, align 1
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4733 = lshr i64 %4718, 63
  %4734 = trunc i64 %4733 to i8
  store i8 %4734, i8* %4732, align 1
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4735, align 1
  store %struct.Memory* %loadMem_40cc4b, %struct.Memory** %MEMORY
  %loadMem_40cc4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4737 = getelementptr inbounds %struct.GPR, %struct.GPR* %4736, i32 0, i32 33
  %4738 = getelementptr inbounds %struct.Reg, %struct.Reg* %4737, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %4738 to i64*
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4740 = getelementptr inbounds %struct.GPR, %struct.GPR* %4739, i32 0, i32 1
  %4741 = getelementptr inbounds %struct.Reg, %struct.Reg* %4740, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %4741 to i64*
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 17
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %R8.i970 = bitcast %union.anon* %4744 to i64*
  %4745 = load i64, i64* %RAX.i969
  %4746 = load i64, i64* %PC.i968
  %4747 = add i64 %4746, 3
  store i64 %4747, i64* %PC.i968
  store i64 %4745, i64* %R8.i970, align 8
  store %struct.Memory* %loadMem_40cc4f, %struct.Memory** %MEMORY
  %loadMem_40cc52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4749 = getelementptr inbounds %struct.GPR, %struct.GPR* %4748, i32 0, i32 33
  %4750 = getelementptr inbounds %struct.Reg, %struct.Reg* %4749, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %4750 to i64*
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4752 = getelementptr inbounds %struct.GPR, %struct.GPR* %4751, i32 0, i32 7
  %4753 = getelementptr inbounds %struct.Reg, %struct.Reg* %4752, i32 0, i32 0
  %RDX.i966 = bitcast %union.anon* %4753 to i64*
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4755 = getelementptr inbounds %struct.GPR, %struct.GPR* %4754, i32 0, i32 17
  %4756 = getelementptr inbounds %struct.Reg, %struct.Reg* %4755, i32 0, i32 0
  %R8.i967 = bitcast %union.anon* %4756 to i64*
  %4757 = load i64, i64* %R8.i967
  %4758 = load i64, i64* %RDX.i966
  %4759 = load i64, i64* %PC.i965
  %4760 = add i64 %4759, 3
  store i64 %4760, i64* %PC.i965
  %4761 = add i64 %4758, %4757
  store i64 %4761, i64* %R8.i967, align 8
  %4762 = icmp ult i64 %4761, %4757
  %4763 = icmp ult i64 %4761, %4758
  %4764 = or i1 %4762, %4763
  %4765 = zext i1 %4764 to i8
  %4766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4765, i8* %4766, align 1
  %4767 = trunc i64 %4761 to i32
  %4768 = and i32 %4767, 255
  %4769 = call i32 @llvm.ctpop.i32(i32 %4768)
  %4770 = trunc i32 %4769 to i8
  %4771 = and i8 %4770, 1
  %4772 = xor i8 %4771, 1
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4772, i8* %4773, align 1
  %4774 = xor i64 %4758, %4757
  %4775 = xor i64 %4774, %4761
  %4776 = lshr i64 %4775, 4
  %4777 = trunc i64 %4776 to i8
  %4778 = and i8 %4777, 1
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4778, i8* %4779, align 1
  %4780 = icmp eq i64 %4761, 0
  %4781 = zext i1 %4780 to i8
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4781, i8* %4782, align 1
  %4783 = lshr i64 %4761, 63
  %4784 = trunc i64 %4783 to i8
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4784, i8* %4785, align 1
  %4786 = lshr i64 %4757, 63
  %4787 = lshr i64 %4758, 63
  %4788 = xor i64 %4783, %4786
  %4789 = xor i64 %4783, %4787
  %4790 = add i64 %4788, %4789
  %4791 = icmp eq i64 %4790, 2
  %4792 = zext i1 %4791 to i8
  %4793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4792, i8* %4793, align 1
  store %struct.Memory* %loadMem_40cc52, %struct.Memory** %MEMORY
  %loadMem_40cc55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 33
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %4796 to i64*
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4798 = getelementptr inbounds %struct.GPR, %struct.GPR* %4797, i32 0, i32 5
  %4799 = getelementptr inbounds %struct.Reg, %struct.Reg* %4798, i32 0, i32 0
  %RCX.i963 = bitcast %union.anon* %4799 to i64*
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4801 = getelementptr inbounds %struct.GPR, %struct.GPR* %4800, i32 0, i32 17
  %4802 = getelementptr inbounds %struct.Reg, %struct.Reg* %4801, i32 0, i32 0
  %R8.i964 = bitcast %union.anon* %4802 to i64*
  %4803 = load i64, i64* %R8.i964
  %4804 = load i64, i64* %PC.i962
  %4805 = add i64 %4804, 3
  store i64 %4805, i64* %PC.i962
  %4806 = inttoptr i64 %4803 to i32*
  %4807 = load i32, i32* %4806
  %4808 = zext i32 %4807 to i64
  store i64 %4808, i64* %RCX.i963, align 8
  store %struct.Memory* %loadMem_40cc55, %struct.Memory** %MEMORY
  %loadMem_40cc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 33
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %4811 to i64*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 9
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %RSI.i960 = bitcast %union.anon* %4814 to i64*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 15
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %4817 to i64*
  %4818 = load i64, i64* %RBP.i961
  %4819 = sub i64 %4818, 24
  %4820 = load i64, i64* %PC.i959
  %4821 = add i64 %4820, 3
  store i64 %4821, i64* %PC.i959
  %4822 = inttoptr i64 %4819 to i32*
  %4823 = load i32, i32* %4822
  %4824 = zext i32 %4823 to i64
  store i64 %4824, i64* %RSI.i960, align 8
  store %struct.Memory* %loadMem_40cc58, %struct.Memory** %MEMORY
  %loadMem_40cc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 33
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %4827 to i64*
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 9
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %RSI.i958 = bitcast %union.anon* %4830 to i64*
  %4831 = load i64, i64* %RSI.i958
  %4832 = load i64, i64* %PC.i957
  %4833 = add i64 %4832, 3
  store i64 %4833, i64* %PC.i957
  %4834 = trunc i64 %4831 to i32
  %4835 = sub i32 %4834, 12
  %4836 = zext i32 %4835 to i64
  store i64 %4836, i64* %RSI.i958, align 8
  %4837 = icmp ult i32 %4834, 12
  %4838 = zext i1 %4837 to i8
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4838, i8* %4839, align 1
  %4840 = and i32 %4835, 255
  %4841 = call i32 @llvm.ctpop.i32(i32 %4840)
  %4842 = trunc i32 %4841 to i8
  %4843 = and i8 %4842, 1
  %4844 = xor i8 %4843, 1
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4844, i8* %4845, align 1
  %4846 = xor i64 12, %4831
  %4847 = trunc i64 %4846 to i32
  %4848 = xor i32 %4847, %4835
  %4849 = lshr i32 %4848, 4
  %4850 = trunc i32 %4849 to i8
  %4851 = and i8 %4850, 1
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4851, i8* %4852, align 1
  %4853 = icmp eq i32 %4835, 0
  %4854 = zext i1 %4853 to i8
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4854, i8* %4855, align 1
  %4856 = lshr i32 %4835, 31
  %4857 = trunc i32 %4856 to i8
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4857, i8* %4858, align 1
  %4859 = lshr i32 %4834, 31
  %4860 = xor i32 %4856, %4859
  %4861 = add i32 %4860, %4859
  %4862 = icmp eq i32 %4861, 2
  %4863 = zext i1 %4862 to i8
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4863, i8* %4864, align 1
  store %struct.Memory* %loadMem_40cc5b, %struct.Memory** %MEMORY
  %loadMem_40cc5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4866 = getelementptr inbounds %struct.GPR, %struct.GPR* %4865, i32 0, i32 33
  %4867 = getelementptr inbounds %struct.Reg, %struct.Reg* %4866, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %4867 to i64*
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4869 = getelementptr inbounds %struct.GPR, %struct.GPR* %4868, i32 0, i32 9
  %4870 = getelementptr inbounds %struct.Reg, %struct.Reg* %4869, i32 0, i32 0
  %ESI.i955 = bitcast %union.anon* %4870 to i32*
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 7
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %RDX.i956 = bitcast %union.anon* %4873 to i64*
  %4874 = load i32, i32* %ESI.i955
  %4875 = zext i32 %4874 to i64
  %4876 = load i64, i64* %PC.i954
  %4877 = add i64 %4876, 3
  store i64 %4877, i64* %PC.i954
  %4878 = shl i64 %4875, 32
  %4879 = ashr exact i64 %4878, 32
  store i64 %4879, i64* %RDX.i956, align 8
  store %struct.Memory* %loadMem_40cc5e, %struct.Memory** %MEMORY
  %loadMem_40cc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4881 = getelementptr inbounds %struct.GPR, %struct.GPR* %4880, i32 0, i32 33
  %4882 = getelementptr inbounds %struct.Reg, %struct.Reg* %4881, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %4882 to i64*
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 5
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %ECX.i952 = bitcast %union.anon* %4885 to i32*
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4887 = getelementptr inbounds %struct.GPR, %struct.GPR* %4886, i32 0, i32 7
  %4888 = getelementptr inbounds %struct.Reg, %struct.Reg* %4887, i32 0, i32 0
  %RDX.i953 = bitcast %union.anon* %4888 to i64*
  %4889 = load i64, i64* %RDX.i953
  %4890 = mul i64 %4889, 4
  %4891 = add i64 %4890, 8807152
  %4892 = load i32, i32* %ECX.i952
  %4893 = zext i32 %4892 to i64
  %4894 = load i64, i64* %PC.i951
  %4895 = add i64 %4894, 7
  store i64 %4895, i64* %PC.i951
  %4896 = inttoptr i64 %4891 to i32*
  store i32 %4892, i32* %4896
  store %struct.Memory* %loadMem_40cc61, %struct.Memory** %MEMORY
  %loadMem_40cc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4898 = getelementptr inbounds %struct.GPR, %struct.GPR* %4897, i32 0, i32 33
  %4899 = getelementptr inbounds %struct.Reg, %struct.Reg* %4898, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %4899 to i64*
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4901 = getelementptr inbounds %struct.GPR, %struct.GPR* %4900, i32 0, i32 5
  %4902 = getelementptr inbounds %struct.Reg, %struct.Reg* %4901, i32 0, i32 0
  %RCX.i949 = bitcast %union.anon* %4902 to i64*
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 15
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %4905 to i64*
  %4906 = load i64, i64* %RBP.i950
  %4907 = sub i64 %4906, 24
  %4908 = load i64, i64* %PC.i948
  %4909 = add i64 %4908, 3
  store i64 %4909, i64* %PC.i948
  %4910 = inttoptr i64 %4907 to i32*
  %4911 = load i32, i32* %4910
  %4912 = zext i32 %4911 to i64
  store i64 %4912, i64* %RCX.i949, align 8
  store %struct.Memory* %loadMem_40cc68, %struct.Memory** %MEMORY
  %loadMem_40cc6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4914 = getelementptr inbounds %struct.GPR, %struct.GPR* %4913, i32 0, i32 33
  %4915 = getelementptr inbounds %struct.Reg, %struct.Reg* %4914, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %4915 to i64*
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4917 = getelementptr inbounds %struct.GPR, %struct.GPR* %4916, i32 0, i32 5
  %4918 = getelementptr inbounds %struct.Reg, %struct.Reg* %4917, i32 0, i32 0
  %RCX.i947 = bitcast %union.anon* %4918 to i64*
  %4919 = load i64, i64* %RCX.i947
  %4920 = load i64, i64* %PC.i946
  %4921 = add i64 %4920, 3
  store i64 %4921, i64* %PC.i946
  %4922 = trunc i64 %4919 to i32
  %4923 = sub i32 %4922, 12
  %4924 = zext i32 %4923 to i64
  store i64 %4924, i64* %RCX.i947, align 8
  %4925 = icmp ult i32 %4922, 12
  %4926 = zext i1 %4925 to i8
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4926, i8* %4927, align 1
  %4928 = and i32 %4923, 255
  %4929 = call i32 @llvm.ctpop.i32(i32 %4928)
  %4930 = trunc i32 %4929 to i8
  %4931 = and i8 %4930, 1
  %4932 = xor i8 %4931, 1
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4932, i8* %4933, align 1
  %4934 = xor i64 12, %4919
  %4935 = trunc i64 %4934 to i32
  %4936 = xor i32 %4935, %4923
  %4937 = lshr i32 %4936, 4
  %4938 = trunc i32 %4937 to i8
  %4939 = and i8 %4938, 1
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4939, i8* %4940, align 1
  %4941 = icmp eq i32 %4923, 0
  %4942 = zext i1 %4941 to i8
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4942, i8* %4943, align 1
  %4944 = lshr i32 %4923, 31
  %4945 = trunc i32 %4944 to i8
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4945, i8* %4946, align 1
  %4947 = lshr i32 %4922, 31
  %4948 = xor i32 %4944, %4947
  %4949 = add i32 %4948, %4947
  %4950 = icmp eq i32 %4949, 2
  %4951 = zext i1 %4950 to i8
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4951, i8* %4952, align 1
  store %struct.Memory* %loadMem_40cc6b, %struct.Memory** %MEMORY
  %loadMem_40cc6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4954 = getelementptr inbounds %struct.GPR, %struct.GPR* %4953, i32 0, i32 33
  %4955 = getelementptr inbounds %struct.Reg, %struct.Reg* %4954, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %4955 to i64*
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4957 = getelementptr inbounds %struct.GPR, %struct.GPR* %4956, i32 0, i32 7
  %4958 = getelementptr inbounds %struct.Reg, %struct.Reg* %4957, i32 0, i32 0
  %RDX.i945 = bitcast %union.anon* %4958 to i64*
  %4959 = load i64, i64* %PC.i944
  %4960 = add i64 %4959, 8
  store i64 %4960, i64* %PC.i944
  %4961 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %4962 = sext i32 %4961 to i64
  store i64 %4962, i64* %RDX.i945, align 8
  store %struct.Memory* %loadMem_40cc6e, %struct.Memory** %MEMORY
  %loadMem_40cc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 33
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %4965 to i64*
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 7
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %RDX.i943 = bitcast %union.anon* %4968 to i64*
  %4969 = load i64, i64* %RDX.i943
  %4970 = load i64, i64* %PC.i942
  %4971 = add i64 %4970, 4
  store i64 %4971, i64* %PC.i942
  %4972 = shl i64 %4969, 3
  %4973 = icmp slt i64 %4972, 0
  %4974 = shl i64 %4972, 1
  store i64 %4974, i64* %RDX.i943, align 8
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %4976 = zext i1 %4973 to i8
  store i8 %4976, i8* %4975, align 1
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4978 = trunc i64 %4974 to i32
  %4979 = and i32 %4978, 254
  %4980 = call i32 @llvm.ctpop.i32(i32 %4979)
  %4981 = trunc i32 %4980 to i8
  %4982 = and i8 %4981, 1
  %4983 = xor i8 %4982, 1
  store i8 %4983, i8* %4977, align 1
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4984, align 1
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4986 = icmp eq i64 %4974, 0
  %4987 = zext i1 %4986 to i8
  store i8 %4987, i8* %4985, align 1
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4989 = lshr i64 %4974, 63
  %4990 = trunc i64 %4989 to i8
  store i8 %4990, i8* %4988, align 1
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4991, align 1
  store %struct.Memory* %loadMem_40cc76, %struct.Memory** %MEMORY
  %loadMem_40cc7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4993 = getelementptr inbounds %struct.GPR, %struct.GPR* %4992, i32 0, i32 33
  %4994 = getelementptr inbounds %struct.Reg, %struct.Reg* %4993, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %4994 to i64*
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 1
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %RAX.i940 = bitcast %union.anon* %4997 to i64*
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4999 = getelementptr inbounds %struct.GPR, %struct.GPR* %4998, i32 0, i32 7
  %5000 = getelementptr inbounds %struct.Reg, %struct.Reg* %4999, i32 0, i32 0
  %RDX.i941 = bitcast %union.anon* %5000 to i64*
  %5001 = load i64, i64* %RAX.i940
  %5002 = load i64, i64* %RDX.i941
  %5003 = load i64, i64* %PC.i939
  %5004 = add i64 %5003, 3
  store i64 %5004, i64* %PC.i939
  %5005 = add i64 %5002, %5001
  store i64 %5005, i64* %RAX.i940, align 8
  %5006 = icmp ult i64 %5005, %5001
  %5007 = icmp ult i64 %5005, %5002
  %5008 = or i1 %5006, %5007
  %5009 = zext i1 %5008 to i8
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5009, i8* %5010, align 1
  %5011 = trunc i64 %5005 to i32
  %5012 = and i32 %5011, 255
  %5013 = call i32 @llvm.ctpop.i32(i32 %5012)
  %5014 = trunc i32 %5013 to i8
  %5015 = and i8 %5014, 1
  %5016 = xor i8 %5015, 1
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5016, i8* %5017, align 1
  %5018 = xor i64 %5002, %5001
  %5019 = xor i64 %5018, %5005
  %5020 = lshr i64 %5019, 4
  %5021 = trunc i64 %5020 to i8
  %5022 = and i8 %5021, 1
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5022, i8* %5023, align 1
  %5024 = icmp eq i64 %5005, 0
  %5025 = zext i1 %5024 to i8
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5025, i8* %5026, align 1
  %5027 = lshr i64 %5005, 63
  %5028 = trunc i64 %5027 to i8
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5028, i8* %5029, align 1
  %5030 = lshr i64 %5001, 63
  %5031 = lshr i64 %5002, 63
  %5032 = xor i64 %5027, %5030
  %5033 = xor i64 %5027, %5031
  %5034 = add i64 %5032, %5033
  %5035 = icmp eq i64 %5034, 2
  %5036 = zext i1 %5035 to i8
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5036, i8* %5037, align 1
  store %struct.Memory* %loadMem_40cc7a, %struct.Memory** %MEMORY
  %loadMem_40cc7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 33
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %5040 to i64*
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5042 = getelementptr inbounds %struct.GPR, %struct.GPR* %5041, i32 0, i32 1
  %5043 = getelementptr inbounds %struct.Reg, %struct.Reg* %5042, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %5043 to i64*
  %5044 = load i64, i64* %RAX.i938
  %5045 = load i64, i64* %PC.i937
  %5046 = add i64 %5045, 3
  store i64 %5046, i64* %PC.i937
  %5047 = inttoptr i64 %5044 to i32*
  %5048 = load i32, i32* %5047
  %5049 = sext i32 %5048 to i64
  store i64 %5049, i64* %RAX.i938, align 8
  store %struct.Memory* %loadMem_40cc7d, %struct.Memory** %MEMORY
  %loadMem_40cc80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5051 = getelementptr inbounds %struct.GPR, %struct.GPR* %5050, i32 0, i32 33
  %5052 = getelementptr inbounds %struct.Reg, %struct.Reg* %5051, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %5052 to i64*
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5054 = getelementptr inbounds %struct.GPR, %struct.GPR* %5053, i32 0, i32 5
  %5055 = getelementptr inbounds %struct.Reg, %struct.Reg* %5054, i32 0, i32 0
  %ECX.i935 = bitcast %union.anon* %5055 to i32*
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5057 = getelementptr inbounds %struct.GPR, %struct.GPR* %5056, i32 0, i32 1
  %5058 = getelementptr inbounds %struct.Reg, %struct.Reg* %5057, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %5058 to i64*
  %5059 = load i64, i64* %RAX.i936
  %5060 = mul i64 %5059, 4
  %5061 = add i64 %5060, 8778480
  %5062 = load i32, i32* %ECX.i935
  %5063 = zext i32 %5062 to i64
  %5064 = load i64, i64* %PC.i934
  %5065 = add i64 %5064, 7
  store i64 %5065, i64* %PC.i934
  %5066 = inttoptr i64 %5061 to i32*
  store i32 %5062, i32* %5066
  store %struct.Memory* %loadMem_40cc80, %struct.Memory** %MEMORY
  %loadMem_40cc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 33
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %5069 to i64*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 1
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %RAX.i932 = bitcast %union.anon* %5072 to i64*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 15
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %RBP.i933 = bitcast %union.anon* %5075 to i64*
  %5076 = load i64, i64* %RBP.i933
  %5077 = sub i64 %5076, 24
  %5078 = load i64, i64* %PC.i931
  %5079 = add i64 %5078, 4
  store i64 %5079, i64* %PC.i931
  %5080 = inttoptr i64 %5077 to i32*
  %5081 = load i32, i32* %5080
  %5082 = sext i32 %5081 to i64
  store i64 %5082, i64* %RAX.i932, align 8
  store %struct.Memory* %loadMem_40cc87, %struct.Memory** %MEMORY
  %loadMem_40cc8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 33
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %5085 to i64*
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 1
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %RAX.i930 = bitcast %union.anon* %5088 to i64*
  %5089 = load i64, i64* %RAX.i930
  %5090 = mul i64 %5089, 4
  %5091 = add i64 %5090, 8807152
  %5092 = load i64, i64* %PC.i929
  %5093 = add i64 %5092, 11
  store i64 %5093, i64* %PC.i929
  %5094 = inttoptr i64 %5091 to i32*
  store i32 0, i32* %5094
  store %struct.Memory* %loadMem_40cc8b, %struct.Memory** %MEMORY
  %loadMem_40cc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 33
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %5097 to i64*
  %5098 = load i64, i64* %PC.i928
  %5099 = add i64 %5098, 2414
  %5100 = load i64, i64* %PC.i928
  %5101 = add i64 %5100, 5
  store i64 %5101, i64* %PC.i928
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5099, i64* %5102, align 8
  store %struct.Memory* %loadMem_40cc96, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40cc9b:                                  ; preds = %block_40cb26
  %loadMem_40cc9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5104 = getelementptr inbounds %struct.GPR, %struct.GPR* %5103, i32 0, i32 33
  %5105 = getelementptr inbounds %struct.Reg, %struct.Reg* %5104, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %5105 to i64*
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5107 = getelementptr inbounds %struct.GPR, %struct.GPR* %5106, i32 0, i32 1
  %5108 = getelementptr inbounds %struct.Reg, %struct.Reg* %5107, i32 0, i32 0
  %RAX.i926 = bitcast %union.anon* %5108 to i64*
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 15
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %5111 to i64*
  %5112 = load i64, i64* %RBP.i927
  %5113 = sub i64 %5112, 20
  %5114 = load i64, i64* %PC.i925
  %5115 = add i64 %5114, 4
  store i64 %5115, i64* %PC.i925
  %5116 = inttoptr i64 %5113 to i32*
  %5117 = load i32, i32* %5116
  %5118 = sext i32 %5117 to i64
  store i64 %5118, i64* %RAX.i926, align 8
  store %struct.Memory* %loadMem_40cc9b, %struct.Memory** %MEMORY
  %loadMem_40cc9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 33
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %5121 to i64*
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5123 = getelementptr inbounds %struct.GPR, %struct.GPR* %5122, i32 0, i32 1
  %5124 = getelementptr inbounds %struct.Reg, %struct.Reg* %5123, i32 0, i32 0
  %RAX.i923 = bitcast %union.anon* %5124 to i64*
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5126 = getelementptr inbounds %struct.GPR, %struct.GPR* %5125, i32 0, i32 5
  %5127 = getelementptr inbounds %struct.Reg, %struct.Reg* %5126, i32 0, i32 0
  %RCX.i924 = bitcast %union.anon* %5127 to i64*
  %5128 = load i64, i64* %RAX.i923
  %5129 = mul i64 %5128, 4
  %5130 = add i64 %5129, 9047232
  %5131 = load i64, i64* %PC.i922
  %5132 = add i64 %5131, 7
  store i64 %5132, i64* %PC.i922
  %5133 = inttoptr i64 %5130 to i32*
  %5134 = load i32, i32* %5133
  %5135 = zext i32 %5134 to i64
  store i64 %5135, i64* %RCX.i924, align 8
  store %struct.Memory* %loadMem_40cc9f, %struct.Memory** %MEMORY
  %loadMem_40cca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 33
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %5138 to i64*
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 5
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %RCX.i921 = bitcast %union.anon* %5141 to i64*
  %5142 = load i64, i64* %RCX.i921
  %5143 = load i64, i64* %PC.i920
  %5144 = add i64 %5143, 7
  store i64 %5144, i64* %PC.i920
  %5145 = trunc i64 %5142 to i32
  %5146 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5147 = xor i32 %5146, %5145
  %5148 = zext i32 %5147 to i64
  store i64 %5148, i64* %RCX.i921, align 8
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5149, align 1
  %5150 = and i32 %5147, 255
  %5151 = call i32 @llvm.ctpop.i32(i32 %5150)
  %5152 = trunc i32 %5151 to i8
  %5153 = and i8 %5152, 1
  %5154 = xor i8 %5153, 1
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5154, i8* %5155, align 1
  %5156 = icmp eq i32 %5147, 0
  %5157 = zext i1 %5156 to i8
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5157, i8* %5158, align 1
  %5159 = lshr i32 %5147, 31
  %5160 = trunc i32 %5159 to i8
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5160, i8* %5161, align 1
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5162, align 1
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5163, align 1
  store %struct.Memory* %loadMem_40cca6, %struct.Memory** %MEMORY
  %loadMem_40ccad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5165 = getelementptr inbounds %struct.GPR, %struct.GPR* %5164, i32 0, i32 33
  %5166 = getelementptr inbounds %struct.Reg, %struct.Reg* %5165, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %5166 to i64*
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5168 = getelementptr inbounds %struct.GPR, %struct.GPR* %5167, i32 0, i32 5
  %5169 = getelementptr inbounds %struct.Reg, %struct.Reg* %5168, i32 0, i32 0
  %ECX.i919 = bitcast %union.anon* %5169 to i32*
  %5170 = load i32, i32* %ECX.i919
  %5171 = zext i32 %5170 to i64
  %5172 = load i64, i64* %PC.i918
  %5173 = add i64 %5172, 7
  store i64 %5173, i64* %PC.i918
  store i32 %5170, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40ccad, %struct.Memory** %MEMORY
  %loadMem_40ccb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5175 = getelementptr inbounds %struct.GPR, %struct.GPR* %5174, i32 0, i32 33
  %5176 = getelementptr inbounds %struct.Reg, %struct.Reg* %5175, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %5176 to i64*
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5178 = getelementptr inbounds %struct.GPR, %struct.GPR* %5177, i32 0, i32 1
  %5179 = getelementptr inbounds %struct.Reg, %struct.Reg* %5178, i32 0, i32 0
  %RAX.i916 = bitcast %union.anon* %5179 to i64*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5181 = getelementptr inbounds %struct.GPR, %struct.GPR* %5180, i32 0, i32 15
  %5182 = getelementptr inbounds %struct.Reg, %struct.Reg* %5181, i32 0, i32 0
  %RBP.i917 = bitcast %union.anon* %5182 to i64*
  %5183 = load i64, i64* %RBP.i917
  %5184 = sub i64 %5183, 24
  %5185 = load i64, i64* %PC.i915
  %5186 = add i64 %5185, 4
  store i64 %5186, i64* %PC.i915
  %5187 = inttoptr i64 %5184 to i32*
  %5188 = load i32, i32* %5187
  %5189 = sext i32 %5188 to i64
  store i64 %5189, i64* %RAX.i916, align 8
  store %struct.Memory* %loadMem_40ccb4, %struct.Memory** %MEMORY
  %loadMem_40ccb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5191 = getelementptr inbounds %struct.GPR, %struct.GPR* %5190, i32 0, i32 33
  %5192 = getelementptr inbounds %struct.Reg, %struct.Reg* %5191, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %5192 to i64*
  %5193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5194 = getelementptr inbounds %struct.GPR, %struct.GPR* %5193, i32 0, i32 1
  %5195 = getelementptr inbounds %struct.Reg, %struct.Reg* %5194, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %5195 to i64*
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5197 = getelementptr inbounds %struct.GPR, %struct.GPR* %5196, i32 0, i32 5
  %5198 = getelementptr inbounds %struct.Reg, %struct.Reg* %5197, i32 0, i32 0
  %RCX.i914 = bitcast %union.anon* %5198 to i64*
  %5199 = load i64, i64* %RAX.i913
  %5200 = mul i64 %5199, 4
  %5201 = add i64 %5200, 9047232
  %5202 = load i64, i64* %PC.i912
  %5203 = add i64 %5202, 7
  store i64 %5203, i64* %PC.i912
  %5204 = inttoptr i64 %5201 to i32*
  %5205 = load i32, i32* %5204
  %5206 = zext i32 %5205 to i64
  store i64 %5206, i64* %RCX.i914, align 8
  store %struct.Memory* %loadMem_40ccb8, %struct.Memory** %MEMORY
  %loadMem_40ccbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5208 = getelementptr inbounds %struct.GPR, %struct.GPR* %5207, i32 0, i32 33
  %5209 = getelementptr inbounds %struct.Reg, %struct.Reg* %5208, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %5209 to i64*
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5211 = getelementptr inbounds %struct.GPR, %struct.GPR* %5210, i32 0, i32 5
  %5212 = getelementptr inbounds %struct.Reg, %struct.Reg* %5211, i32 0, i32 0
  %RCX.i911 = bitcast %union.anon* %5212 to i64*
  %5213 = load i64, i64* %RCX.i911
  %5214 = load i64, i64* %PC.i910
  %5215 = add i64 %5214, 7
  store i64 %5215, i64* %PC.i910
  %5216 = trunc i64 %5213 to i32
  %5217 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5218 = xor i32 %5217, %5216
  %5219 = zext i32 %5218 to i64
  store i64 %5219, i64* %RCX.i911, align 8
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5220, align 1
  %5221 = and i32 %5218, 255
  %5222 = call i32 @llvm.ctpop.i32(i32 %5221)
  %5223 = trunc i32 %5222 to i8
  %5224 = and i8 %5223, 1
  %5225 = xor i8 %5224, 1
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5225, i8* %5226, align 1
  %5227 = icmp eq i32 %5218, 0
  %5228 = zext i1 %5227 to i8
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5228, i8* %5229, align 1
  %5230 = lshr i32 %5218, 31
  %5231 = trunc i32 %5230 to i8
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5231, i8* %5232, align 1
  %5233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5233, align 1
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5234, align 1
  store %struct.Memory* %loadMem_40ccbf, %struct.Memory** %MEMORY
  %loadMem_40ccc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 33
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %5237 to i64*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5239 = getelementptr inbounds %struct.GPR, %struct.GPR* %5238, i32 0, i32 5
  %5240 = getelementptr inbounds %struct.Reg, %struct.Reg* %5239, i32 0, i32 0
  %ECX.i909 = bitcast %union.anon* %5240 to i32*
  %5241 = load i32, i32* %ECX.i909
  %5242 = zext i32 %5241 to i64
  %5243 = load i64, i64* %PC.i908
  %5244 = add i64 %5243, 7
  store i64 %5244, i64* %PC.i908
  store i32 %5241, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40ccc6, %struct.Memory** %MEMORY
  %loadMem_40cccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5246 = getelementptr inbounds %struct.GPR, %struct.GPR* %5245, i32 0, i32 33
  %5247 = getelementptr inbounds %struct.Reg, %struct.Reg* %5246, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %5247 to i64*
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 5
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %RCX.i906 = bitcast %union.anon* %5250 to i64*
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5252 = getelementptr inbounds %struct.GPR, %struct.GPR* %5251, i32 0, i32 15
  %5253 = getelementptr inbounds %struct.Reg, %struct.Reg* %5252, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %5253 to i64*
  %5254 = load i64, i64* %RBP.i907
  %5255 = sub i64 %5254, 28
  %5256 = load i64, i64* %PC.i905
  %5257 = add i64 %5256, 3
  store i64 %5257, i64* %PC.i905
  %5258 = inttoptr i64 %5255 to i32*
  %5259 = load i32, i32* %5258
  %5260 = zext i32 %5259 to i64
  store i64 %5260, i64* %RCX.i906, align 8
  store %struct.Memory* %loadMem_40cccd, %struct.Memory** %MEMORY
  %loadMem_40ccd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 33
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %5263 to i64*
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 1
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %5266 to i64*
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 15
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %5269 to i64*
  %5270 = load i64, i64* %RBP.i904
  %5271 = sub i64 %5270, 24
  %5272 = load i64, i64* %PC.i902
  %5273 = add i64 %5272, 4
  store i64 %5273, i64* %PC.i902
  %5274 = inttoptr i64 %5271 to i32*
  %5275 = load i32, i32* %5274
  %5276 = sext i32 %5275 to i64
  store i64 %5276, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_40ccd0, %struct.Memory** %MEMORY
  %loadMem_40ccd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5278 = getelementptr inbounds %struct.GPR, %struct.GPR* %5277, i32 0, i32 33
  %5279 = getelementptr inbounds %struct.Reg, %struct.Reg* %5278, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %5279 to i64*
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 5
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %ECX.i900 = bitcast %union.anon* %5282 to i32*
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5284 = getelementptr inbounds %struct.GPR, %struct.GPR* %5283, i32 0, i32 1
  %5285 = getelementptr inbounds %struct.Reg, %struct.Reg* %5284, i32 0, i32 0
  %RAX.i901 = bitcast %union.anon* %5285 to i64*
  %5286 = load i64, i64* %RAX.i901
  %5287 = mul i64 %5286, 4
  %5288 = add i64 %5287, 8807744
  %5289 = load i32, i32* %ECX.i900
  %5290 = zext i32 %5289 to i64
  %5291 = load i64, i64* %PC.i899
  %5292 = add i64 %5291, 7
  store i64 %5292, i64* %PC.i899
  %5293 = inttoptr i64 %5288 to i32*
  store i32 %5289, i32* %5293
  store %struct.Memory* %loadMem_40ccd4, %struct.Memory** %MEMORY
  %loadMem_40ccdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 33
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %5296 to i64*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 1
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 15
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %5302 to i64*
  %5303 = load i64, i64* %RBP.i898
  %5304 = sub i64 %5303, 20
  %5305 = load i64, i64* %PC.i896
  %5306 = add i64 %5305, 4
  store i64 %5306, i64* %PC.i896
  %5307 = inttoptr i64 %5304 to i32*
  %5308 = load i32, i32* %5307
  %5309 = sext i32 %5308 to i64
  store i64 %5309, i64* %RAX.i897, align 8
  store %struct.Memory* %loadMem_40ccdb, %struct.Memory** %MEMORY
  %loadMem_40ccdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5311 = getelementptr inbounds %struct.GPR, %struct.GPR* %5310, i32 0, i32 33
  %5312 = getelementptr inbounds %struct.Reg, %struct.Reg* %5311, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %5312 to i64*
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5314 = getelementptr inbounds %struct.GPR, %struct.GPR* %5313, i32 0, i32 1
  %5315 = getelementptr inbounds %struct.Reg, %struct.Reg* %5314, i32 0, i32 0
  %RAX.i895 = bitcast %union.anon* %5315 to i64*
  %5316 = load i64, i64* %RAX.i895
  %5317 = mul i64 %5316, 4
  %5318 = add i64 %5317, 8807744
  %5319 = load i64, i64* %PC.i894
  %5320 = add i64 %5319, 11
  store i64 %5320, i64* %PC.i894
  %5321 = inttoptr i64 %5318 to i32*
  store i32 1, i32* %5321
  store %struct.Memory* %loadMem_40ccdf, %struct.Memory** %MEMORY
  %loadMem_40ccea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5323 = getelementptr inbounds %struct.GPR, %struct.GPR* %5322, i32 0, i32 33
  %5324 = getelementptr inbounds %struct.Reg, %struct.Reg* %5323, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %5324 to i64*
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5326 = getelementptr inbounds %struct.GPR, %struct.GPR* %5325, i32 0, i32 1
  %5327 = getelementptr inbounds %struct.Reg, %struct.Reg* %5326, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %5327 to i64*
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5329 = getelementptr inbounds %struct.GPR, %struct.GPR* %5328, i32 0, i32 15
  %5330 = getelementptr inbounds %struct.Reg, %struct.Reg* %5329, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %5330 to i64*
  %5331 = load i64, i64* %RBP.i893
  %5332 = sub i64 %5331, 24
  %5333 = load i64, i64* %PC.i891
  %5334 = add i64 %5333, 4
  store i64 %5334, i64* %PC.i891
  %5335 = inttoptr i64 %5332 to i32*
  %5336 = load i32, i32* %5335
  %5337 = sext i32 %5336 to i64
  store i64 %5337, i64* %RAX.i892, align 8
  store %struct.Memory* %loadMem_40ccea, %struct.Memory** %MEMORY
  %loadMem_40ccee = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 1
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 5
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %5346 to i64*
  %5347 = load i64, i64* %RAX.i889
  %5348 = mul i64 %5347, 4
  %5349 = add i64 %5348, 8922032
  %5350 = load i64, i64* %PC.i888
  %5351 = add i64 %5350, 7
  store i64 %5351, i64* %PC.i888
  %5352 = inttoptr i64 %5349 to i32*
  %5353 = load i32, i32* %5352
  %5354 = zext i32 %5353 to i64
  store i64 %5354, i64* %RCX.i890, align 8
  store %struct.Memory* %loadMem_40ccee, %struct.Memory** %MEMORY
  %loadMem_40ccf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5356 = getelementptr inbounds %struct.GPR, %struct.GPR* %5355, i32 0, i32 33
  %5357 = getelementptr inbounds %struct.Reg, %struct.Reg* %5356, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %5357 to i64*
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5359 = getelementptr inbounds %struct.GPR, %struct.GPR* %5358, i32 0, i32 5
  %5360 = getelementptr inbounds %struct.Reg, %struct.Reg* %5359, i32 0, i32 0
  %RCX.i887 = bitcast %union.anon* %5360 to i64*
  %5361 = load i64, i64* %RCX.i887
  %5362 = load i64, i64* %PC.i886
  %5363 = add i64 %5362, 3
  store i64 %5363, i64* %PC.i886
  %5364 = trunc i64 %5361 to i32
  %5365 = add i32 -1, %5364
  %5366 = zext i32 %5365 to i64
  store i64 %5366, i64* %RCX.i887, align 8
  %5367 = icmp ult i32 %5365, %5364
  %5368 = icmp ult i32 %5365, -1
  %5369 = or i1 %5367, %5368
  %5370 = zext i1 %5369 to i8
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5370, i8* %5371, align 1
  %5372 = and i32 %5365, 255
  %5373 = call i32 @llvm.ctpop.i32(i32 %5372)
  %5374 = trunc i32 %5373 to i8
  %5375 = and i8 %5374, 1
  %5376 = xor i8 %5375, 1
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5376, i8* %5377, align 1
  %5378 = xor i64 -1, %5361
  %5379 = trunc i64 %5378 to i32
  %5380 = xor i32 %5379, %5365
  %5381 = lshr i32 %5380, 4
  %5382 = trunc i32 %5381 to i8
  %5383 = and i8 %5382, 1
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5383, i8* %5384, align 1
  %5385 = icmp eq i32 %5365, 0
  %5386 = zext i1 %5385 to i8
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5386, i8* %5387, align 1
  %5388 = lshr i32 %5365, 31
  %5389 = trunc i32 %5388 to i8
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5389, i8* %5390, align 1
  %5391 = lshr i32 %5364, 31
  %5392 = xor i32 %5388, %5391
  %5393 = xor i32 %5388, 1
  %5394 = add i32 %5392, %5393
  %5395 = icmp eq i32 %5394, 2
  %5396 = zext i1 %5395 to i8
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5396, i8* %5397, align 1
  store %struct.Memory* %loadMem_40ccf5, %struct.Memory** %MEMORY
  %loadMem_40ccf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 33
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %5400 to i64*
  %5401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5402 = getelementptr inbounds %struct.GPR, %struct.GPR* %5401, i32 0, i32 5
  %5403 = getelementptr inbounds %struct.Reg, %struct.Reg* %5402, i32 0, i32 0
  %ECX.i884 = bitcast %union.anon* %5403 to i32*
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5405 = getelementptr inbounds %struct.GPR, %struct.GPR* %5404, i32 0, i32 1
  %5406 = getelementptr inbounds %struct.Reg, %struct.Reg* %5405, i32 0, i32 0
  %RAX.i885 = bitcast %union.anon* %5406 to i64*
  %5407 = load i64, i64* %RAX.i885
  %5408 = mul i64 %5407, 4
  %5409 = add i64 %5408, 8922032
  %5410 = load i32, i32* %ECX.i884
  %5411 = zext i32 %5410 to i64
  %5412 = load i64, i64* %PC.i883
  %5413 = add i64 %5412, 7
  store i64 %5413, i64* %PC.i883
  %5414 = inttoptr i64 %5409 to i32*
  store i32 %5410, i32* %5414
  store %struct.Memory* %loadMem_40ccf8, %struct.Memory** %MEMORY
  %loadMem_40ccff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5416 = getelementptr inbounds %struct.GPR, %struct.GPR* %5415, i32 0, i32 33
  %5417 = getelementptr inbounds %struct.Reg, %struct.Reg* %5416, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %5417 to i64*
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 1
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %RAX.i881 = bitcast %union.anon* %5420 to i64*
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 15
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %5423 to i64*
  %5424 = load i64, i64* %RBP.i882
  %5425 = sub i64 %5424, 20
  %5426 = load i64, i64* %PC.i880
  %5427 = add i64 %5426, 4
  store i64 %5427, i64* %PC.i880
  %5428 = inttoptr i64 %5425 to i32*
  %5429 = load i32, i32* %5428
  %5430 = sext i32 %5429 to i64
  store i64 %5430, i64* %RAX.i881, align 8
  store %struct.Memory* %loadMem_40ccff, %struct.Memory** %MEMORY
  %loadMem_40cd03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5432 = getelementptr inbounds %struct.GPR, %struct.GPR* %5431, i32 0, i32 33
  %5433 = getelementptr inbounds %struct.Reg, %struct.Reg* %5432, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %5433 to i64*
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5435 = getelementptr inbounds %struct.GPR, %struct.GPR* %5434, i32 0, i32 1
  %5436 = getelementptr inbounds %struct.Reg, %struct.Reg* %5435, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %5436 to i64*
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 5
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %RCX.i879 = bitcast %union.anon* %5439 to i64*
  %5440 = load i64, i64* %RAX.i878
  %5441 = mul i64 %5440, 4
  %5442 = add i64 %5441, 8922032
  %5443 = load i64, i64* %PC.i877
  %5444 = add i64 %5443, 7
  store i64 %5444, i64* %PC.i877
  %5445 = inttoptr i64 %5442 to i32*
  %5446 = load i32, i32* %5445
  %5447 = zext i32 %5446 to i64
  store i64 %5447, i64* %RCX.i879, align 8
  store %struct.Memory* %loadMem_40cd03, %struct.Memory** %MEMORY
  %loadMem_40cd0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 33
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %5450 to i64*
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 5
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %RCX.i876 = bitcast %union.anon* %5453 to i64*
  %5454 = load i64, i64* %RCX.i876
  %5455 = load i64, i64* %PC.i875
  %5456 = add i64 %5455, 3
  store i64 %5456, i64* %PC.i875
  %5457 = trunc i64 %5454 to i32
  %5458 = add i32 -1, %5457
  %5459 = zext i32 %5458 to i64
  store i64 %5459, i64* %RCX.i876, align 8
  %5460 = icmp ult i32 %5458, %5457
  %5461 = icmp ult i32 %5458, -1
  %5462 = or i1 %5460, %5461
  %5463 = zext i1 %5462 to i8
  %5464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5463, i8* %5464, align 1
  %5465 = and i32 %5458, 255
  %5466 = call i32 @llvm.ctpop.i32(i32 %5465)
  %5467 = trunc i32 %5466 to i8
  %5468 = and i8 %5467, 1
  %5469 = xor i8 %5468, 1
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5469, i8* %5470, align 1
  %5471 = xor i64 -1, %5454
  %5472 = trunc i64 %5471 to i32
  %5473 = xor i32 %5472, %5458
  %5474 = lshr i32 %5473, 4
  %5475 = trunc i32 %5474 to i8
  %5476 = and i8 %5475, 1
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5476, i8* %5477, align 1
  %5478 = icmp eq i32 %5458, 0
  %5479 = zext i1 %5478 to i8
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5479, i8* %5480, align 1
  %5481 = lshr i32 %5458, 31
  %5482 = trunc i32 %5481 to i8
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5482, i8* %5483, align 1
  %5484 = lshr i32 %5457, 31
  %5485 = xor i32 %5481, %5484
  %5486 = xor i32 %5481, 1
  %5487 = add i32 %5485, %5486
  %5488 = icmp eq i32 %5487, 2
  %5489 = zext i1 %5488 to i8
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5489, i8* %5490, align 1
  store %struct.Memory* %loadMem_40cd0a, %struct.Memory** %MEMORY
  %loadMem_40cd0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5492 = getelementptr inbounds %struct.GPR, %struct.GPR* %5491, i32 0, i32 33
  %5493 = getelementptr inbounds %struct.Reg, %struct.Reg* %5492, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %5493 to i64*
  %5494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5495 = getelementptr inbounds %struct.GPR, %struct.GPR* %5494, i32 0, i32 5
  %5496 = getelementptr inbounds %struct.Reg, %struct.Reg* %5495, i32 0, i32 0
  %ECX.i873 = bitcast %union.anon* %5496 to i32*
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 1
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %RAX.i874 = bitcast %union.anon* %5499 to i64*
  %5500 = load i64, i64* %RAX.i874
  %5501 = mul i64 %5500, 4
  %5502 = add i64 %5501, 8922032
  %5503 = load i32, i32* %ECX.i873
  %5504 = zext i32 %5503 to i64
  %5505 = load i64, i64* %PC.i872
  %5506 = add i64 %5505, 7
  store i64 %5506, i64* %PC.i872
  %5507 = inttoptr i64 %5502 to i32*
  store i32 %5503, i32* %5507
  store %struct.Memory* %loadMem_40cd0d, %struct.Memory** %MEMORY
  %loadMem_40cd14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5509 = getelementptr inbounds %struct.GPR, %struct.GPR* %5508, i32 0, i32 33
  %5510 = getelementptr inbounds %struct.Reg, %struct.Reg* %5509, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %5510 to i64*
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5512 = getelementptr inbounds %struct.GPR, %struct.GPR* %5511, i32 0, i32 5
  %5513 = getelementptr inbounds %struct.Reg, %struct.Reg* %5512, i32 0, i32 0
  %RCX.i871 = bitcast %union.anon* %5513 to i64*
  %5514 = load i64, i64* %PC.i870
  %5515 = add i64 %5514, 7
  store i64 %5515, i64* %PC.i870
  %5516 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %5517 = zext i32 %5516 to i64
  store i64 %5517, i64* %RCX.i871, align 8
  store %struct.Memory* %loadMem_40cd14, %struct.Memory** %MEMORY
  %loadMem_40cd1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 33
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %5520 to i64*
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5522 = getelementptr inbounds %struct.GPR, %struct.GPR* %5521, i32 0, i32 5
  %5523 = getelementptr inbounds %struct.Reg, %struct.Reg* %5522, i32 0, i32 0
  %RCX.i869 = bitcast %union.anon* %5523 to i64*
  %5524 = load i64, i64* %RCX.i869
  %5525 = load i64, i64* %PC.i868
  %5526 = add i64 %5525, 3
  store i64 %5526, i64* %PC.i868
  %5527 = xor i64 1, %5524
  %5528 = trunc i64 %5527 to i32
  %5529 = and i64 %5527, 4294967295
  store i64 %5529, i64* %RCX.i869, align 8
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5530, align 1
  %5531 = and i32 %5528, 255
  %5532 = call i32 @llvm.ctpop.i32(i32 %5531)
  %5533 = trunc i32 %5532 to i8
  %5534 = and i8 %5533, 1
  %5535 = xor i8 %5534, 1
  %5536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5535, i8* %5536, align 1
  %5537 = icmp eq i32 %5528, 0
  %5538 = zext i1 %5537 to i8
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5538, i8* %5539, align 1
  %5540 = lshr i32 %5528, 31
  %5541 = trunc i32 %5540 to i8
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5541, i8* %5542, align 1
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5543, align 1
  %5544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5544, align 1
  store %struct.Memory* %loadMem_40cd1b, %struct.Memory** %MEMORY
  %loadMem_40cd1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 33
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %5547 to i64*
  %5548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5549 = getelementptr inbounds %struct.GPR, %struct.GPR* %5548, i32 0, i32 5
  %5550 = getelementptr inbounds %struct.Reg, %struct.Reg* %5549, i32 0, i32 0
  %ECX.i867 = bitcast %union.anon* %5550 to i32*
  %5551 = load i32, i32* %ECX.i867
  %5552 = zext i32 %5551 to i64
  %5553 = load i64, i64* %PC.i866
  %5554 = add i64 %5553, 7
  store i64 %5554, i64* %PC.i866
  store i32 %5551, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40cd1e, %struct.Memory** %MEMORY
  %loadMem_40cd25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 33
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %5557 to i64*
  %5558 = load i64, i64* %PC.i865
  %5559 = add i64 %5558, 2271
  %5560 = load i64, i64* %PC.i865
  %5561 = add i64 %5560, 5
  store i64 %5561, i64* %PC.i865
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5559, i64* %5562, align 8
  store %struct.Memory* %loadMem_40cd25, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40cd2a:                                  ; preds = %block_.L_40cb14
  %loadMem_40cd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5564 = getelementptr inbounds %struct.GPR, %struct.GPR* %5563, i32 0, i32 33
  %5565 = getelementptr inbounds %struct.Reg, %struct.Reg* %5564, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %5565 to i64*
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 1
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %RAX.i863 = bitcast %union.anon* %5568 to i64*
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5570 = getelementptr inbounds %struct.GPR, %struct.GPR* %5569, i32 0, i32 15
  %5571 = getelementptr inbounds %struct.Reg, %struct.Reg* %5570, i32 0, i32 0
  %RBP.i864 = bitcast %union.anon* %5571 to i64*
  %5572 = load i64, i64* %RBP.i864
  %5573 = sub i64 %5572, 24
  %5574 = load i64, i64* %PC.i862
  %5575 = add i64 %5574, 4
  store i64 %5575, i64* %PC.i862
  %5576 = inttoptr i64 %5573 to i32*
  %5577 = load i32, i32* %5576
  %5578 = sext i32 %5577 to i64
  store i64 %5578, i64* %RAX.i863, align 8
  store %struct.Memory* %loadMem_40cd2a, %struct.Memory** %MEMORY
  %loadMem_40cd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5580 = getelementptr inbounds %struct.GPR, %struct.GPR* %5579, i32 0, i32 33
  %5581 = getelementptr inbounds %struct.Reg, %struct.Reg* %5580, i32 0, i32 0
  %PC.i860 = bitcast %union.anon* %5581 to i64*
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5583 = getelementptr inbounds %struct.GPR, %struct.GPR* %5582, i32 0, i32 1
  %5584 = getelementptr inbounds %struct.Reg, %struct.Reg* %5583, i32 0, i32 0
  %RAX.i861 = bitcast %union.anon* %5584 to i64*
  %5585 = load i64, i64* %RAX.i861
  %5586 = mul i64 %5585, 4
  %5587 = add i64 %5586, 8807744
  %5588 = load i64, i64* %PC.i860
  %5589 = add i64 %5588, 8
  store i64 %5589, i64* %PC.i860
  %5590 = inttoptr i64 %5587 to i32*
  %5591 = load i32, i32* %5590
  %5592 = sub i32 %5591, 2
  %5593 = icmp ult i32 %5591, 2
  %5594 = zext i1 %5593 to i8
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5594, i8* %5595, align 1
  %5596 = and i32 %5592, 255
  %5597 = call i32 @llvm.ctpop.i32(i32 %5596)
  %5598 = trunc i32 %5597 to i8
  %5599 = and i8 %5598, 1
  %5600 = xor i8 %5599, 1
  %5601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5600, i8* %5601, align 1
  %5602 = xor i32 %5591, 2
  %5603 = xor i32 %5602, %5592
  %5604 = lshr i32 %5603, 4
  %5605 = trunc i32 %5604 to i8
  %5606 = and i8 %5605, 1
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5606, i8* %5607, align 1
  %5608 = icmp eq i32 %5592, 0
  %5609 = zext i1 %5608 to i8
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5609, i8* %5610, align 1
  %5611 = lshr i32 %5592, 31
  %5612 = trunc i32 %5611 to i8
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5612, i8* %5613, align 1
  %5614 = lshr i32 %5591, 31
  %5615 = xor i32 %5611, %5614
  %5616 = add i32 %5615, %5614
  %5617 = icmp eq i32 %5616, 2
  %5618 = zext i1 %5617 to i8
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5618, i8* %5619, align 1
  store %struct.Memory* %loadMem_40cd2e, %struct.Memory** %MEMORY
  %loadMem_40cd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 33
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %5622 to i64*
  %5623 = load i64, i64* %PC.i859
  %5624 = add i64 %5623, 525
  %5625 = load i64, i64* %PC.i859
  %5626 = add i64 %5625, 6
  %5627 = load i64, i64* %PC.i859
  %5628 = add i64 %5627, 6
  store i64 %5628, i64* %PC.i859
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5630 = load i8, i8* %5629, align 1
  %5631 = icmp eq i8 %5630, 0
  %5632 = zext i1 %5631 to i8
  store i8 %5632, i8* %BRANCH_TAKEN, align 1
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5634 = select i1 %5631, i64 %5624, i64 %5626
  store i64 %5634, i64* %5633, align 8
  store %struct.Memory* %loadMem_40cd36, %struct.Memory** %MEMORY
  %loadBr_40cd36 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cd36 = icmp eq i8 %loadBr_40cd36, 1
  br i1 %cmpBr_40cd36, label %block_.L_40cf43, label %block_40cd3c

block_40cd3c:                                     ; preds = %block_.L_40cd2a
  %loadMem_40cd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5636 = getelementptr inbounds %struct.GPR, %struct.GPR* %5635, i32 0, i32 33
  %5637 = getelementptr inbounds %struct.Reg, %struct.Reg* %5636, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %5637 to i64*
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 15
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %RBP.i858 = bitcast %union.anon* %5640 to i64*
  %5641 = load i64, i64* %RBP.i858
  %5642 = sub i64 %5641, 16
  %5643 = load i64, i64* %PC.i857
  %5644 = add i64 %5643, 4
  store i64 %5644, i64* %PC.i857
  %5645 = inttoptr i64 %5642 to i32*
  %5646 = load i32, i32* %5645
  %5647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5647, align 1
  %5648 = and i32 %5646, 255
  %5649 = call i32 @llvm.ctpop.i32(i32 %5648)
  %5650 = trunc i32 %5649 to i8
  %5651 = and i8 %5650, 1
  %5652 = xor i8 %5651, 1
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5652, i8* %5653, align 1
  %5654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5654, align 1
  %5655 = icmp eq i32 %5646, 0
  %5656 = zext i1 %5655 to i8
  %5657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5656, i8* %5657, align 1
  %5658 = lshr i32 %5646, 31
  %5659 = trunc i32 %5658 to i8
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5659, i8* %5660, align 1
  %5661 = lshr i32 %5646, 31
  %5662 = xor i32 %5658, %5661
  %5663 = add i32 %5662, %5661
  %5664 = icmp eq i32 %5663, 2
  %5665 = zext i1 %5664 to i8
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5665, i8* %5666, align 1
  store %struct.Memory* %loadMem_40cd3c, %struct.Memory** %MEMORY
  %loadMem_40cd40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5668 = getelementptr inbounds %struct.GPR, %struct.GPR* %5667, i32 0, i32 33
  %5669 = getelementptr inbounds %struct.Reg, %struct.Reg* %5668, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %5669 to i64*
  %5670 = load i64, i64* %PC.i856
  %5671 = add i64 %5670, 372
  %5672 = load i64, i64* %PC.i856
  %5673 = add i64 %5672, 6
  %5674 = load i64, i64* %PC.i856
  %5675 = add i64 %5674, 6
  store i64 %5675, i64* %PC.i856
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5677 = load i8, i8* %5676, align 1
  store i8 %5677, i8* %BRANCH_TAKEN, align 1
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5679 = icmp ne i8 %5677, 0
  %5680 = select i1 %5679, i64 %5671, i64 %5673
  store i64 %5680, i64* %5678, align 8
  store %struct.Memory* %loadMem_40cd40, %struct.Memory** %MEMORY
  %loadBr_40cd40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cd40 = icmp eq i8 %loadBr_40cd40, 1
  br i1 %cmpBr_40cd40, label %block_.L_40ceb4, label %block_40cd46

block_40cd46:                                     ; preds = %block_40cd3c
  %loadMem_40cd46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5682 = getelementptr inbounds %struct.GPR, %struct.GPR* %5681, i32 0, i32 33
  %5683 = getelementptr inbounds %struct.Reg, %struct.Reg* %5682, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %5683 to i64*
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5685 = getelementptr inbounds %struct.GPR, %struct.GPR* %5684, i32 0, i32 11
  %5686 = getelementptr inbounds %struct.Reg, %struct.Reg* %5685, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %5686 to i64*
  %5687 = load i64, i64* %PC.i855
  %5688 = add i64 %5687, 5
  store i64 %5688, i64* %PC.i855
  store i64 2, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_40cd46, %struct.Memory** %MEMORY
  %loadMem_40cd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5690 = getelementptr inbounds %struct.GPR, %struct.GPR* %5689, i32 0, i32 33
  %5691 = getelementptr inbounds %struct.Reg, %struct.Reg* %5690, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %5691 to i64*
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5693 = getelementptr inbounds %struct.GPR, %struct.GPR* %5692, i32 0, i32 9
  %5694 = getelementptr inbounds %struct.Reg, %struct.Reg* %5693, i32 0, i32 0
  %RSI.i854 = bitcast %union.anon* %5694 to i64*
  %5695 = load i64, i64* %PC.i853
  %5696 = add i64 %5695, 5
  store i64 %5696, i64* %PC.i853
  store i64 1, i64* %RSI.i854, align 8
  store %struct.Memory* %loadMem_40cd4b, %struct.Memory** %MEMORY
  %loadMem_40cd50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 33
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %5699 to i64*
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5701 = getelementptr inbounds %struct.GPR, %struct.GPR* %5700, i32 0, i32 1
  %5702 = getelementptr inbounds %struct.Reg, %struct.Reg* %5701, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %5702 to i64*
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5704 = getelementptr inbounds %struct.GPR, %struct.GPR* %5703, i32 0, i32 15
  %5705 = getelementptr inbounds %struct.Reg, %struct.Reg* %5704, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %5705 to i64*
  %5706 = load i64, i64* %RBP.i852
  %5707 = sub i64 %5706, 24
  %5708 = load i64, i64* %PC.i850
  %5709 = add i64 %5708, 4
  store i64 %5709, i64* %PC.i850
  %5710 = inttoptr i64 %5707 to i32*
  %5711 = load i32, i32* %5710
  %5712 = sext i32 %5711 to i64
  store i64 %5712, i64* %RAX.i851, align 8
  store %struct.Memory* %loadMem_40cd50, %struct.Memory** %MEMORY
  %loadMem_40cd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5714 = getelementptr inbounds %struct.GPR, %struct.GPR* %5713, i32 0, i32 33
  %5715 = getelementptr inbounds %struct.Reg, %struct.Reg* %5714, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %5715 to i64*
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 1
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %RAX.i848 = bitcast %union.anon* %5718 to i64*
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5720 = getelementptr inbounds %struct.GPR, %struct.GPR* %5719, i32 0, i32 5
  %5721 = getelementptr inbounds %struct.Reg, %struct.Reg* %5720, i32 0, i32 0
  %RCX.i849 = bitcast %union.anon* %5721 to i64*
  %5722 = load i64, i64* %RAX.i848
  %5723 = mul i64 %5722, 4
  %5724 = add i64 %5723, 9047808
  %5725 = load i64, i64* %PC.i847
  %5726 = add i64 %5725, 7
  store i64 %5726, i64* %PC.i847
  %5727 = inttoptr i64 %5724 to i32*
  %5728 = load i32, i32* %5727
  %5729 = zext i32 %5728 to i64
  store i64 %5729, i64* %RCX.i849, align 8
  store %struct.Memory* %loadMem_40cd54, %struct.Memory** %MEMORY
  %loadMem_40cd5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 33
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %5732 to i64*
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5734 = getelementptr inbounds %struct.GPR, %struct.GPR* %5733, i32 0, i32 5
  %5735 = getelementptr inbounds %struct.Reg, %struct.Reg* %5734, i32 0, i32 0
  %RCX.i846 = bitcast %union.anon* %5735 to i64*
  %5736 = load i64, i64* %RCX.i846
  %5737 = load i64, i64* %PC.i845
  %5738 = add i64 %5737, 7
  store i64 %5738, i64* %PC.i845
  %5739 = trunc i64 %5736 to i32
  %5740 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5741 = xor i32 %5740, %5739
  %5742 = zext i32 %5741 to i64
  store i64 %5742, i64* %RCX.i846, align 8
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5743, align 1
  %5744 = and i32 %5741, 255
  %5745 = call i32 @llvm.ctpop.i32(i32 %5744)
  %5746 = trunc i32 %5745 to i8
  %5747 = and i8 %5746, 1
  %5748 = xor i8 %5747, 1
  %5749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5748, i8* %5749, align 1
  %5750 = icmp eq i32 %5741, 0
  %5751 = zext i1 %5750 to i8
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5751, i8* %5752, align 1
  %5753 = lshr i32 %5741, 31
  %5754 = trunc i32 %5753 to i8
  %5755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5754, i8* %5755, align 1
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5756, align 1
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5757, align 1
  store %struct.Memory* %loadMem_40cd5b, %struct.Memory** %MEMORY
  %loadMem_40cd62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 33
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %5760 to i64*
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 5
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %ECX.i844 = bitcast %union.anon* %5763 to i32*
  %5764 = load i32, i32* %ECX.i844
  %5765 = zext i32 %5764 to i64
  %5766 = load i64, i64* %PC.i843
  %5767 = add i64 %5766, 7
  store i64 %5767, i64* %PC.i843
  store i32 %5764, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cd62, %struct.Memory** %MEMORY
  %loadMem_40cd69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5769 = getelementptr inbounds %struct.GPR, %struct.GPR* %5768, i32 0, i32 33
  %5770 = getelementptr inbounds %struct.Reg, %struct.Reg* %5769, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %5770 to i64*
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5772 = getelementptr inbounds %struct.GPR, %struct.GPR* %5771, i32 0, i32 1
  %5773 = getelementptr inbounds %struct.Reg, %struct.Reg* %5772, i32 0, i32 0
  %RAX.i841 = bitcast %union.anon* %5773 to i64*
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 15
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %5776 to i64*
  %5777 = load i64, i64* %RBP.i842
  %5778 = sub i64 %5777, 20
  %5779 = load i64, i64* %PC.i840
  %5780 = add i64 %5779, 4
  store i64 %5780, i64* %PC.i840
  %5781 = inttoptr i64 %5778 to i32*
  %5782 = load i32, i32* %5781
  %5783 = sext i32 %5782 to i64
  store i64 %5783, i64* %RAX.i841, align 8
  store %struct.Memory* %loadMem_40cd69, %struct.Memory** %MEMORY
  %loadMem_40cd6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5785 = getelementptr inbounds %struct.GPR, %struct.GPR* %5784, i32 0, i32 33
  %5786 = getelementptr inbounds %struct.Reg, %struct.Reg* %5785, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %5786 to i64*
  %5787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5788 = getelementptr inbounds %struct.GPR, %struct.GPR* %5787, i32 0, i32 1
  %5789 = getelementptr inbounds %struct.Reg, %struct.Reg* %5788, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %5789 to i64*
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5791 = getelementptr inbounds %struct.GPR, %struct.GPR* %5790, i32 0, i32 5
  %5792 = getelementptr inbounds %struct.Reg, %struct.Reg* %5791, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %5792 to i64*
  %5793 = load i64, i64* %RAX.i838
  %5794 = mul i64 %5793, 4
  %5795 = add i64 %5794, 9047808
  %5796 = load i64, i64* %PC.i837
  %5797 = add i64 %5796, 7
  store i64 %5797, i64* %PC.i837
  %5798 = inttoptr i64 %5795 to i32*
  %5799 = load i32, i32* %5798
  %5800 = zext i32 %5799 to i64
  store i64 %5800, i64* %RCX.i839, align 8
  store %struct.Memory* %loadMem_40cd6d, %struct.Memory** %MEMORY
  %loadMem_40cd74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 33
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %5803 to i64*
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5805 = getelementptr inbounds %struct.GPR, %struct.GPR* %5804, i32 0, i32 5
  %5806 = getelementptr inbounds %struct.Reg, %struct.Reg* %5805, i32 0, i32 0
  %RCX.i836 = bitcast %union.anon* %5806 to i64*
  %5807 = load i64, i64* %RCX.i836
  %5808 = load i64, i64* %PC.i835
  %5809 = add i64 %5808, 7
  store i64 %5809, i64* %PC.i835
  %5810 = trunc i64 %5807 to i32
  %5811 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5812 = xor i32 %5811, %5810
  %5813 = zext i32 %5812 to i64
  store i64 %5813, i64* %RCX.i836, align 8
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5814, align 1
  %5815 = and i32 %5812, 255
  %5816 = call i32 @llvm.ctpop.i32(i32 %5815)
  %5817 = trunc i32 %5816 to i8
  %5818 = and i8 %5817, 1
  %5819 = xor i8 %5818, 1
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5819, i8* %5820, align 1
  %5821 = icmp eq i32 %5812, 0
  %5822 = zext i1 %5821 to i8
  %5823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5822, i8* %5823, align 1
  %5824 = lshr i32 %5812, 31
  %5825 = trunc i32 %5824 to i8
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5825, i8* %5826, align 1
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5827, align 1
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5828, align 1
  store %struct.Memory* %loadMem_40cd74, %struct.Memory** %MEMORY
  %loadMem_40cd7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5830 = getelementptr inbounds %struct.GPR, %struct.GPR* %5829, i32 0, i32 33
  %5831 = getelementptr inbounds %struct.Reg, %struct.Reg* %5830, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %5831 to i64*
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5833 = getelementptr inbounds %struct.GPR, %struct.GPR* %5832, i32 0, i32 5
  %5834 = getelementptr inbounds %struct.Reg, %struct.Reg* %5833, i32 0, i32 0
  %ECX.i834 = bitcast %union.anon* %5834 to i32*
  %5835 = load i32, i32* %ECX.i834
  %5836 = zext i32 %5835 to i64
  %5837 = load i64, i64* %PC.i833
  %5838 = add i64 %5837, 7
  store i64 %5838, i64* %PC.i833
  store i32 %5835, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cd7b, %struct.Memory** %MEMORY
  %loadMem_40cd82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5840 = getelementptr inbounds %struct.GPR, %struct.GPR* %5839, i32 0, i32 33
  %5841 = getelementptr inbounds %struct.Reg, %struct.Reg* %5840, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %5841 to i64*
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 5
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %RCX.i831 = bitcast %union.anon* %5844 to i64*
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5846 = getelementptr inbounds %struct.GPR, %struct.GPR* %5845, i32 0, i32 15
  %5847 = getelementptr inbounds %struct.Reg, %struct.Reg* %5846, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %5847 to i64*
  %5848 = load i64, i64* %RBP.i832
  %5849 = sub i64 %5848, 24
  %5850 = load i64, i64* %PC.i830
  %5851 = add i64 %5850, 3
  store i64 %5851, i64* %PC.i830
  %5852 = inttoptr i64 %5849 to i32*
  %5853 = load i32, i32* %5852
  %5854 = zext i32 %5853 to i64
  store i64 %5854, i64* %RCX.i831, align 8
  store %struct.Memory* %loadMem_40cd82, %struct.Memory** %MEMORY
  %loadMem_40cd85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5856 = getelementptr inbounds %struct.GPR, %struct.GPR* %5855, i32 0, i32 33
  %5857 = getelementptr inbounds %struct.Reg, %struct.Reg* %5856, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %5857 to i64*
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5859 = getelementptr inbounds %struct.GPR, %struct.GPR* %5858, i32 0, i32 5
  %5860 = getelementptr inbounds %struct.Reg, %struct.Reg* %5859, i32 0, i32 0
  %RCX.i829 = bitcast %union.anon* %5860 to i64*
  %5861 = load i64, i64* %RCX.i829
  %5862 = load i64, i64* %PC.i828
  %5863 = add i64 %5862, 3
  store i64 %5863, i64* %PC.i828
  %5864 = trunc i64 %5861 to i32
  %5865 = add i32 12, %5864
  %5866 = zext i32 %5865 to i64
  store i64 %5866, i64* %RCX.i829, align 8
  %5867 = icmp ult i32 %5865, %5864
  %5868 = icmp ult i32 %5865, 12
  %5869 = or i1 %5867, %5868
  %5870 = zext i1 %5869 to i8
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5870, i8* %5871, align 1
  %5872 = and i32 %5865, 255
  %5873 = call i32 @llvm.ctpop.i32(i32 %5872)
  %5874 = trunc i32 %5873 to i8
  %5875 = and i8 %5874, 1
  %5876 = xor i8 %5875, 1
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5876, i8* %5877, align 1
  %5878 = xor i64 12, %5861
  %5879 = trunc i64 %5878 to i32
  %5880 = xor i32 %5879, %5865
  %5881 = lshr i32 %5880, 4
  %5882 = trunc i32 %5881 to i8
  %5883 = and i8 %5882, 1
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5883, i8* %5884, align 1
  %5885 = icmp eq i32 %5865, 0
  %5886 = zext i1 %5885 to i8
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5886, i8* %5887, align 1
  %5888 = lshr i32 %5865, 31
  %5889 = trunc i32 %5888 to i8
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5889, i8* %5890, align 1
  %5891 = lshr i32 %5864, 31
  %5892 = xor i32 %5888, %5891
  %5893 = add i32 %5892, %5888
  %5894 = icmp eq i32 %5893, 2
  %5895 = zext i1 %5894 to i8
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5895, i8* %5896, align 1
  store %struct.Memory* %loadMem_40cd85, %struct.Memory** %MEMORY
  %loadMem_40cd88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5898 = getelementptr inbounds %struct.GPR, %struct.GPR* %5897, i32 0, i32 33
  %5899 = getelementptr inbounds %struct.Reg, %struct.Reg* %5898, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %5899 to i64*
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5901 = getelementptr inbounds %struct.GPR, %struct.GPR* %5900, i32 0, i32 5
  %5902 = getelementptr inbounds %struct.Reg, %struct.Reg* %5901, i32 0, i32 0
  %ECX.i826 = bitcast %union.anon* %5902 to i32*
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5904 = getelementptr inbounds %struct.GPR, %struct.GPR* %5903, i32 0, i32 1
  %5905 = getelementptr inbounds %struct.Reg, %struct.Reg* %5904, i32 0, i32 0
  %RAX.i827 = bitcast %union.anon* %5905 to i64*
  %5906 = load i32, i32* %ECX.i826
  %5907 = zext i32 %5906 to i64
  %5908 = load i64, i64* %PC.i825
  %5909 = add i64 %5908, 3
  store i64 %5909, i64* %PC.i825
  %5910 = shl i64 %5907, 32
  %5911 = ashr exact i64 %5910, 32
  store i64 %5911, i64* %RAX.i827, align 8
  store %struct.Memory* %loadMem_40cd88, %struct.Memory** %MEMORY
  %loadMem_40cd8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5913 = getelementptr inbounds %struct.GPR, %struct.GPR* %5912, i32 0, i32 33
  %5914 = getelementptr inbounds %struct.Reg, %struct.Reg* %5913, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %5914 to i64*
  %5915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5916 = getelementptr inbounds %struct.GPR, %struct.GPR* %5915, i32 0, i32 1
  %5917 = getelementptr inbounds %struct.Reg, %struct.Reg* %5916, i32 0, i32 0
  %RAX.i823 = bitcast %union.anon* %5917 to i64*
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 5
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %RCX.i824 = bitcast %union.anon* %5920 to i64*
  %5921 = load i64, i64* %RAX.i823
  %5922 = mul i64 %5921, 4
  %5923 = add i64 %5922, 9047232
  %5924 = load i64, i64* %PC.i822
  %5925 = add i64 %5924, 7
  store i64 %5925, i64* %PC.i822
  %5926 = inttoptr i64 %5923 to i32*
  %5927 = load i32, i32* %5926
  %5928 = zext i32 %5927 to i64
  store i64 %5928, i64* %RCX.i824, align 8
  store %struct.Memory* %loadMem_40cd8b, %struct.Memory** %MEMORY
  %loadMem_40cd92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5930 = getelementptr inbounds %struct.GPR, %struct.GPR* %5929, i32 0, i32 33
  %5931 = getelementptr inbounds %struct.Reg, %struct.Reg* %5930, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %5931 to i64*
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 5
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %RCX.i821 = bitcast %union.anon* %5934 to i64*
  %5935 = load i64, i64* %RCX.i821
  %5936 = load i64, i64* %PC.i820
  %5937 = add i64 %5936, 7
  store i64 %5937, i64* %PC.i820
  %5938 = trunc i64 %5935 to i32
  %5939 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %5940 = xor i32 %5939, %5938
  %5941 = zext i32 %5940 to i64
  store i64 %5941, i64* %RCX.i821, align 8
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5942, align 1
  %5943 = and i32 %5940, 255
  %5944 = call i32 @llvm.ctpop.i32(i32 %5943)
  %5945 = trunc i32 %5944 to i8
  %5946 = and i8 %5945, 1
  %5947 = xor i8 %5946, 1
  %5948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5947, i8* %5948, align 1
  %5949 = icmp eq i32 %5940, 0
  %5950 = zext i1 %5949 to i8
  %5951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5950, i8* %5951, align 1
  %5952 = lshr i32 %5940, 31
  %5953 = trunc i32 %5952 to i8
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5953, i8* %5954, align 1
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5955, align 1
  %5956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5956, align 1
  store %struct.Memory* %loadMem_40cd92, %struct.Memory** %MEMORY
  %loadMem_40cd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5958 = getelementptr inbounds %struct.GPR, %struct.GPR* %5957, i32 0, i32 33
  %5959 = getelementptr inbounds %struct.Reg, %struct.Reg* %5958, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %5959 to i64*
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5961 = getelementptr inbounds %struct.GPR, %struct.GPR* %5960, i32 0, i32 5
  %5962 = getelementptr inbounds %struct.Reg, %struct.Reg* %5961, i32 0, i32 0
  %ECX.i819 = bitcast %union.anon* %5962 to i32*
  %5963 = load i32, i32* %ECX.i819
  %5964 = zext i32 %5963 to i64
  %5965 = load i64, i64* %PC.i818
  %5966 = add i64 %5965, 7
  store i64 %5966, i64* %PC.i818
  store i32 %5963, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cd99, %struct.Memory** %MEMORY
  %loadMem_40cda0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5968 = getelementptr inbounds %struct.GPR, %struct.GPR* %5967, i32 0, i32 33
  %5969 = getelementptr inbounds %struct.Reg, %struct.Reg* %5968, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %5969 to i64*
  %5970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5971 = getelementptr inbounds %struct.GPR, %struct.GPR* %5970, i32 0, i32 1
  %5972 = getelementptr inbounds %struct.Reg, %struct.Reg* %5971, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %5972 to i64*
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5974 = getelementptr inbounds %struct.GPR, %struct.GPR* %5973, i32 0, i32 15
  %5975 = getelementptr inbounds %struct.Reg, %struct.Reg* %5974, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %5975 to i64*
  %5976 = load i64, i64* %RBP.i817
  %5977 = sub i64 %5976, 24
  %5978 = load i64, i64* %PC.i815
  %5979 = add i64 %5978, 4
  store i64 %5979, i64* %PC.i815
  %5980 = inttoptr i64 %5977 to i32*
  %5981 = load i32, i32* %5980
  %5982 = sext i32 %5981 to i64
  store i64 %5982, i64* %RAX.i816, align 8
  store %struct.Memory* %loadMem_40cda0, %struct.Memory** %MEMORY
  %loadMem_40cda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5984 = getelementptr inbounds %struct.GPR, %struct.GPR* %5983, i32 0, i32 33
  %5985 = getelementptr inbounds %struct.Reg, %struct.Reg* %5984, i32 0, i32 0
  %PC.i813 = bitcast %union.anon* %5985 to i64*
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5987 = getelementptr inbounds %struct.GPR, %struct.GPR* %5986, i32 0, i32 1
  %5988 = getelementptr inbounds %struct.Reg, %struct.Reg* %5987, i32 0, i32 0
  %RAX.i814 = bitcast %union.anon* %5988 to i64*
  %5989 = load i64, i64* %RAX.i814
  %5990 = mul i64 %5989, 4
  %5991 = add i64 %5990, 8807744
  %5992 = load i64, i64* %PC.i813
  %5993 = add i64 %5992, 11
  store i64 %5993, i64* %PC.i813
  %5994 = inttoptr i64 %5991 to i32*
  store i32 13, i32* %5994
  store %struct.Memory* %loadMem_40cda4, %struct.Memory** %MEMORY
  %loadMem_40cdaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 1
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 15
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %RBP.i812 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %RBP.i812
  %6005 = sub i64 %6004, 20
  %6006 = load i64, i64* %PC.i810
  %6007 = add i64 %6006, 4
  store i64 %6007, i64* %PC.i810
  %6008 = inttoptr i64 %6005 to i32*
  %6009 = load i32, i32* %6008
  %6010 = sext i32 %6009 to i64
  store i64 %6010, i64* %RAX.i811, align 8
  store %struct.Memory* %loadMem_40cdaf, %struct.Memory** %MEMORY
  %loadMem_40cdb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 33
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %6013 to i64*
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6015 = getelementptr inbounds %struct.GPR, %struct.GPR* %6014, i32 0, i32 1
  %6016 = getelementptr inbounds %struct.Reg, %struct.Reg* %6015, i32 0, i32 0
  %RAX.i809 = bitcast %union.anon* %6016 to i64*
  %6017 = load i64, i64* %RAX.i809
  %6018 = mul i64 %6017, 4
  %6019 = add i64 %6018, 8807744
  %6020 = load i64, i64* %PC.i808
  %6021 = add i64 %6020, 11
  store i64 %6021, i64* %PC.i808
  %6022 = inttoptr i64 %6019 to i32*
  store i32 2, i32* %6022
  store %struct.Memory* %loadMem_40cdb3, %struct.Memory** %MEMORY
  %loadMem_40cdbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 33
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 5
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %RCX.i807 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %PC.i806
  %6030 = add i64 %6029, 7
  store i64 %6030, i64* %PC.i806
  %6031 = load i32, i32* bitcast (%G_0x62dab4_type* @G_0x62dab4 to i32*)
  %6032 = zext i32 %6031 to i64
  store i64 %6032, i64* %RCX.i807, align 8
  store %struct.Memory* %loadMem_40cdbe, %struct.Memory** %MEMORY
  %loadMem_40cdc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6034 = getelementptr inbounds %struct.GPR, %struct.GPR* %6033, i32 0, i32 33
  %6035 = getelementptr inbounds %struct.Reg, %struct.Reg* %6034, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %6035 to i64*
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6037 = getelementptr inbounds %struct.GPR, %struct.GPR* %6036, i32 0, i32 5
  %6038 = getelementptr inbounds %struct.Reg, %struct.Reg* %6037, i32 0, i32 0
  %RCX.i805 = bitcast %union.anon* %6038 to i64*
  %6039 = load i64, i64* %RCX.i805
  %6040 = load i64, i64* %PC.i804
  %6041 = add i64 %6040, 7
  store i64 %6041, i64* %PC.i804
  %6042 = trunc i64 %6039 to i32
  %6043 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %6044 = add i32 %6043, %6042
  %6045 = zext i32 %6044 to i64
  store i64 %6045, i64* %RCX.i805, align 8
  %6046 = icmp ult i32 %6044, %6042
  %6047 = icmp ult i32 %6044, %6043
  %6048 = or i1 %6046, %6047
  %6049 = zext i1 %6048 to i8
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6049, i8* %6050, align 1
  %6051 = and i32 %6044, 255
  %6052 = call i32 @llvm.ctpop.i32(i32 %6051)
  %6053 = trunc i32 %6052 to i8
  %6054 = and i8 %6053, 1
  %6055 = xor i8 %6054, 1
  %6056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6055, i8* %6056, align 1
  %6057 = xor i32 %6043, %6042
  %6058 = xor i32 %6057, %6044
  %6059 = lshr i32 %6058, 4
  %6060 = trunc i32 %6059 to i8
  %6061 = and i8 %6060, 1
  %6062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6061, i8* %6062, align 1
  %6063 = icmp eq i32 %6044, 0
  %6064 = zext i1 %6063 to i8
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6064, i8* %6065, align 1
  %6066 = lshr i32 %6044, 31
  %6067 = trunc i32 %6066 to i8
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6067, i8* %6068, align 1
  %6069 = lshr i32 %6042, 31
  %6070 = lshr i32 %6043, 31
  %6071 = xor i32 %6066, %6069
  %6072 = xor i32 %6066, %6070
  %6073 = add i32 %6071, %6072
  %6074 = icmp eq i32 %6073, 2
  %6075 = zext i1 %6074 to i8
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6075, i8* %6076, align 1
  store %struct.Memory* %loadMem_40cdc5, %struct.Memory** %MEMORY
  %loadMem_40cdcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 33
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %6079 to i64*
  %6080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6081 = getelementptr inbounds %struct.GPR, %struct.GPR* %6080, i32 0, i32 5
  %6082 = getelementptr inbounds %struct.Reg, %struct.Reg* %6081, i32 0, i32 0
  %ECX.i803 = bitcast %union.anon* %6082 to i32*
  %6083 = load i32, i32* %ECX.i803
  %6084 = zext i32 %6083 to i64
  %6085 = load i64, i64* %PC.i802
  %6086 = add i64 %6085, 7
  store i64 %6086, i64* %PC.i802
  store i32 %6083, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40cdcc, %struct.Memory** %MEMORY
  %loadMem1_40cdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6088 = getelementptr inbounds %struct.GPR, %struct.GPR* %6087, i32 0, i32 33
  %6089 = getelementptr inbounds %struct.Reg, %struct.Reg* %6088, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %6089 to i64*
  %6090 = load i64, i64* %PC.i801
  %6091 = add i64 %6090, -42995
  %6092 = load i64, i64* %PC.i801
  %6093 = add i64 %6092, 5
  %6094 = load i64, i64* %PC.i801
  %6095 = add i64 %6094, 5
  store i64 %6095, i64* %PC.i801
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6097 = load i64, i64* %6096, align 8
  %6098 = add i64 %6097, -8
  %6099 = inttoptr i64 %6098 to i64*
  store i64 %6093, i64* %6099
  store i64 %6098, i64* %6096, align 8
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6091, i64* %6100, align 8
  store %struct.Memory* %loadMem1_40cdd3, %struct.Memory** %MEMORY
  %loadMem2_40cdd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40cdd3 = load i64, i64* %3
  %call2_40cdd3 = call %struct.Memory* @sub_4025e0.removeHolding(%struct.State* %0, i64 %loadPC_40cdd3, %struct.Memory* %loadMem2_40cdd3)
  store %struct.Memory* %call2_40cdd3, %struct.Memory** %MEMORY
  %loadMem_40cdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6102 = getelementptr inbounds %struct.GPR, %struct.GPR* %6101, i32 0, i32 33
  %6103 = getelementptr inbounds %struct.Reg, %struct.Reg* %6102, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %6103 to i64*
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6105 = getelementptr inbounds %struct.GPR, %struct.GPR* %6104, i32 0, i32 1
  %6106 = getelementptr inbounds %struct.Reg, %struct.Reg* %6105, i32 0, i32 0
  %RAX.i800 = bitcast %union.anon* %6106 to i64*
  %6107 = load i64, i64* %PC.i799
  %6108 = add i64 %6107, 10
  store i64 %6108, i64* %PC.i799
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX.i800, align 8
  store %struct.Memory* %loadMem_40cdd8, %struct.Memory** %MEMORY
  %loadMem_40cde2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6110 = getelementptr inbounds %struct.GPR, %struct.GPR* %6109, i32 0, i32 33
  %6111 = getelementptr inbounds %struct.Reg, %struct.Reg* %6110, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %6111 to i64*
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 5
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %RCX.i798 = bitcast %union.anon* %6114 to i64*
  %6115 = load i64, i64* %PC.i797
  %6116 = add i64 %6115, 7
  store i64 %6116, i64* %PC.i797
  %6117 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %6118 = zext i32 %6117 to i64
  store i64 %6118, i64* %RCX.i798, align 8
  store %struct.Memory* %loadMem_40cde2, %struct.Memory** %MEMORY
  %loadMem_40cde9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6120 = getelementptr inbounds %struct.GPR, %struct.GPR* %6119, i32 0, i32 33
  %6121 = getelementptr inbounds %struct.Reg, %struct.Reg* %6120, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %6121 to i64*
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6123 = getelementptr inbounds %struct.GPR, %struct.GPR* %6122, i32 0, i32 5
  %6124 = getelementptr inbounds %struct.Reg, %struct.Reg* %6123, i32 0, i32 0
  %RCX.i796 = bitcast %union.anon* %6124 to i64*
  %6125 = load i64, i64* %RCX.i796
  %6126 = load i64, i64* %PC.i795
  %6127 = add i64 %6126, 3
  store i64 %6127, i64* %PC.i795
  %6128 = trunc i64 %6125 to i32
  %6129 = add i32 1, %6128
  %6130 = zext i32 %6129 to i64
  store i64 %6130, i64* %RCX.i796, align 8
  %6131 = icmp ult i32 %6129, %6128
  %6132 = icmp ult i32 %6129, 1
  %6133 = or i1 %6131, %6132
  %6134 = zext i1 %6133 to i8
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6134, i8* %6135, align 1
  %6136 = and i32 %6129, 255
  %6137 = call i32 @llvm.ctpop.i32(i32 %6136)
  %6138 = trunc i32 %6137 to i8
  %6139 = and i8 %6138, 1
  %6140 = xor i8 %6139, 1
  %6141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6140, i8* %6141, align 1
  %6142 = xor i64 1, %6125
  %6143 = trunc i64 %6142 to i32
  %6144 = xor i32 %6143, %6129
  %6145 = lshr i32 %6144, 4
  %6146 = trunc i32 %6145 to i8
  %6147 = and i8 %6146, 1
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6147, i8* %6148, align 1
  %6149 = icmp eq i32 %6129, 0
  %6150 = zext i1 %6149 to i8
  %6151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6150, i8* %6151, align 1
  %6152 = lshr i32 %6129, 31
  %6153 = trunc i32 %6152 to i8
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6153, i8* %6154, align 1
  %6155 = lshr i32 %6128, 31
  %6156 = xor i32 %6152, %6155
  %6157 = add i32 %6156, %6152
  %6158 = icmp eq i32 %6157, 2
  %6159 = zext i1 %6158 to i8
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6159, i8* %6160, align 1
  store %struct.Memory* %loadMem_40cde9, %struct.Memory** %MEMORY
  %loadMem_40cdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6162 = getelementptr inbounds %struct.GPR, %struct.GPR* %6161, i32 0, i32 33
  %6163 = getelementptr inbounds %struct.Reg, %struct.Reg* %6162, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %6163 to i64*
  %6164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6165 = getelementptr inbounds %struct.GPR, %struct.GPR* %6164, i32 0, i32 5
  %6166 = getelementptr inbounds %struct.Reg, %struct.Reg* %6165, i32 0, i32 0
  %ECX.i794 = bitcast %union.anon* %6166 to i32*
  %6167 = load i32, i32* %ECX.i794
  %6168 = zext i32 %6167 to i64
  %6169 = load i64, i64* %PC.i793
  %6170 = add i64 %6169, 7
  store i64 %6170, i64* %PC.i793
  store i32 %6167, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  store %struct.Memory* %loadMem_40cdec, %struct.Memory** %MEMORY
  %loadMem_40cdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 33
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6175 = getelementptr inbounds %struct.GPR, %struct.GPR* %6174, i32 0, i32 5
  %6176 = getelementptr inbounds %struct.Reg, %struct.Reg* %6175, i32 0, i32 0
  %RCX.i791 = bitcast %union.anon* %6176 to i64*
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 15
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %RBP.i792 = bitcast %union.anon* %6179 to i64*
  %6180 = load i64, i64* %RBP.i792
  %6181 = sub i64 %6180, 24
  %6182 = load i64, i64* %PC.i790
  %6183 = add i64 %6182, 3
  store i64 %6183, i64* %PC.i790
  %6184 = inttoptr i64 %6181 to i32*
  %6185 = load i32, i32* %6184
  %6186 = zext i32 %6185 to i64
  store i64 %6186, i64* %RCX.i791, align 8
  store %struct.Memory* %loadMem_40cdf3, %struct.Memory** %MEMORY
  %loadMem_40cdf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 33
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %6189 to i64*
  %6190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6191 = getelementptr inbounds %struct.GPR, %struct.GPR* %6190, i32 0, i32 5
  %6192 = getelementptr inbounds %struct.Reg, %struct.Reg* %6191, i32 0, i32 0
  %RCX.i789 = bitcast %union.anon* %6192 to i64*
  %6193 = load i64, i64* %RCX.i789
  %6194 = load i64, i64* %PC.i788
  %6195 = add i64 %6194, 3
  store i64 %6195, i64* %PC.i788
  %6196 = trunc i64 %6193 to i32
  %6197 = add i32 12, %6196
  %6198 = zext i32 %6197 to i64
  store i64 %6198, i64* %RCX.i789, align 8
  %6199 = icmp ult i32 %6197, %6196
  %6200 = icmp ult i32 %6197, 12
  %6201 = or i1 %6199, %6200
  %6202 = zext i1 %6201 to i8
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6202, i8* %6203, align 1
  %6204 = and i32 %6197, 255
  %6205 = call i32 @llvm.ctpop.i32(i32 %6204)
  %6206 = trunc i32 %6205 to i8
  %6207 = and i8 %6206, 1
  %6208 = xor i8 %6207, 1
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6208, i8* %6209, align 1
  %6210 = xor i64 12, %6193
  %6211 = trunc i64 %6210 to i32
  %6212 = xor i32 %6211, %6197
  %6213 = lshr i32 %6212, 4
  %6214 = trunc i32 %6213 to i8
  %6215 = and i8 %6214, 1
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6215, i8* %6216, align 1
  %6217 = icmp eq i32 %6197, 0
  %6218 = zext i1 %6217 to i8
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6218, i8* %6219, align 1
  %6220 = lshr i32 %6197, 31
  %6221 = trunc i32 %6220 to i8
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6221, i8* %6222, align 1
  %6223 = lshr i32 %6196, 31
  %6224 = xor i32 %6220, %6223
  %6225 = add i32 %6224, %6220
  %6226 = icmp eq i32 %6225, 2
  %6227 = zext i1 %6226 to i8
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6227, i8* %6228, align 1
  store %struct.Memory* %loadMem_40cdf6, %struct.Memory** %MEMORY
  %loadMem_40cdf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6230 = getelementptr inbounds %struct.GPR, %struct.GPR* %6229, i32 0, i32 33
  %6231 = getelementptr inbounds %struct.Reg, %struct.Reg* %6230, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %6231 to i64*
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6233 = getelementptr inbounds %struct.GPR, %struct.GPR* %6232, i32 0, i32 5
  %6234 = getelementptr inbounds %struct.Reg, %struct.Reg* %6233, i32 0, i32 0
  %ECX.i786 = bitcast %union.anon* %6234 to i32*
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6236 = getelementptr inbounds %struct.GPR, %struct.GPR* %6235, i32 0, i32 7
  %6237 = getelementptr inbounds %struct.Reg, %struct.Reg* %6236, i32 0, i32 0
  %RDX.i787 = bitcast %union.anon* %6237 to i64*
  %6238 = load i32, i32* %ECX.i786
  %6239 = zext i32 %6238 to i64
  %6240 = load i64, i64* %PC.i785
  %6241 = add i64 %6240, 3
  store i64 %6241, i64* %PC.i785
  %6242 = shl i64 %6239, 32
  %6243 = ashr exact i64 %6242, 32
  store i64 %6243, i64* %RDX.i787, align 8
  store %struct.Memory* %loadMem_40cdf9, %struct.Memory** %MEMORY
  %loadMem_40cdfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6245 = getelementptr inbounds %struct.GPR, %struct.GPR* %6244, i32 0, i32 33
  %6246 = getelementptr inbounds %struct.Reg, %struct.Reg* %6245, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %6246 to i64*
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6248 = getelementptr inbounds %struct.GPR, %struct.GPR* %6247, i32 0, i32 7
  %6249 = getelementptr inbounds %struct.Reg, %struct.Reg* %6248, i32 0, i32 0
  %RDX.i784 = bitcast %union.anon* %6249 to i64*
  %6250 = load i64, i64* %RDX.i784
  %6251 = mul i64 %6250, 4
  %6252 = add i64 %6251, 8807744
  %6253 = load i64, i64* %PC.i783
  %6254 = add i64 %6253, 11
  store i64 %6254, i64* %PC.i783
  %6255 = inttoptr i64 %6252 to i32*
  store i32 1, i32* %6255
  store %struct.Memory* %loadMem_40cdfc, %struct.Memory** %MEMORY
  %loadMem_40ce07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6257 = getelementptr inbounds %struct.GPR, %struct.GPR* %6256, i32 0, i32 33
  %6258 = getelementptr inbounds %struct.Reg, %struct.Reg* %6257, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %6258 to i64*
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6260 = getelementptr inbounds %struct.GPR, %struct.GPR* %6259, i32 0, i32 7
  %6261 = getelementptr inbounds %struct.Reg, %struct.Reg* %6260, i32 0, i32 0
  %RDX.i781 = bitcast %union.anon* %6261 to i64*
  %6262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6263 = getelementptr inbounds %struct.GPR, %struct.GPR* %6262, i32 0, i32 15
  %6264 = getelementptr inbounds %struct.Reg, %struct.Reg* %6263, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %6264 to i64*
  %6265 = load i64, i64* %RBP.i782
  %6266 = sub i64 %6265, 24
  %6267 = load i64, i64* %PC.i780
  %6268 = add i64 %6267, 4
  store i64 %6268, i64* %PC.i780
  %6269 = inttoptr i64 %6266 to i32*
  %6270 = load i32, i32* %6269
  %6271 = sext i32 %6270 to i64
  store i64 %6271, i64* %RDX.i781, align 8
  store %struct.Memory* %loadMem_40ce07, %struct.Memory** %MEMORY
  %loadMem_40ce0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6273 = getelementptr inbounds %struct.GPR, %struct.GPR* %6272, i32 0, i32 33
  %6274 = getelementptr inbounds %struct.Reg, %struct.Reg* %6273, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %6274 to i64*
  %6275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6276 = getelementptr inbounds %struct.GPR, %struct.GPR* %6275, i32 0, i32 5
  %6277 = getelementptr inbounds %struct.Reg, %struct.Reg* %6276, i32 0, i32 0
  %RCX.i778 = bitcast %union.anon* %6277 to i64*
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6279 = getelementptr inbounds %struct.GPR, %struct.GPR* %6278, i32 0, i32 7
  %6280 = getelementptr inbounds %struct.Reg, %struct.Reg* %6279, i32 0, i32 0
  %RDX.i779 = bitcast %union.anon* %6280 to i64*
  %6281 = load i64, i64* %RDX.i779
  %6282 = mul i64 %6281, 4
  %6283 = add i64 %6282, 8922032
  %6284 = load i64, i64* %PC.i777
  %6285 = add i64 %6284, 7
  store i64 %6285, i64* %PC.i777
  %6286 = inttoptr i64 %6283 to i32*
  %6287 = load i32, i32* %6286
  %6288 = zext i32 %6287 to i64
  store i64 %6288, i64* %RCX.i778, align 8
  store %struct.Memory* %loadMem_40ce0b, %struct.Memory** %MEMORY
  %loadMem_40ce12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6290 = getelementptr inbounds %struct.GPR, %struct.GPR* %6289, i32 0, i32 33
  %6291 = getelementptr inbounds %struct.Reg, %struct.Reg* %6290, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %6291 to i64*
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 5
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %RCX.i776 = bitcast %union.anon* %6294 to i64*
  %6295 = load i64, i64* %RCX.i776
  %6296 = load i64, i64* %PC.i775
  %6297 = add i64 %6296, 3
  store i64 %6297, i64* %PC.i775
  %6298 = trunc i64 %6295 to i32
  %6299 = add i32 -1, %6298
  %6300 = zext i32 %6299 to i64
  store i64 %6300, i64* %RCX.i776, align 8
  %6301 = icmp ult i32 %6299, %6298
  %6302 = icmp ult i32 %6299, -1
  %6303 = or i1 %6301, %6302
  %6304 = zext i1 %6303 to i8
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6304, i8* %6305, align 1
  %6306 = and i32 %6299, 255
  %6307 = call i32 @llvm.ctpop.i32(i32 %6306)
  %6308 = trunc i32 %6307 to i8
  %6309 = and i8 %6308, 1
  %6310 = xor i8 %6309, 1
  %6311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6310, i8* %6311, align 1
  %6312 = xor i64 -1, %6295
  %6313 = trunc i64 %6312 to i32
  %6314 = xor i32 %6313, %6299
  %6315 = lshr i32 %6314, 4
  %6316 = trunc i32 %6315 to i8
  %6317 = and i8 %6316, 1
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6317, i8* %6318, align 1
  %6319 = icmp eq i32 %6299, 0
  %6320 = zext i1 %6319 to i8
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6320, i8* %6321, align 1
  %6322 = lshr i32 %6299, 31
  %6323 = trunc i32 %6322 to i8
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6323, i8* %6324, align 1
  %6325 = lshr i32 %6298, 31
  %6326 = xor i32 %6322, %6325
  %6327 = xor i32 %6322, 1
  %6328 = add i32 %6326, %6327
  %6329 = icmp eq i32 %6328, 2
  %6330 = zext i1 %6329 to i8
  %6331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6330, i8* %6331, align 1
  store %struct.Memory* %loadMem_40ce12, %struct.Memory** %MEMORY
  %loadMem_40ce15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 33
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %6334 to i64*
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6336 = getelementptr inbounds %struct.GPR, %struct.GPR* %6335, i32 0, i32 5
  %6337 = getelementptr inbounds %struct.Reg, %struct.Reg* %6336, i32 0, i32 0
  %ECX.i773 = bitcast %union.anon* %6337 to i32*
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 7
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %RDX.i774 = bitcast %union.anon* %6340 to i64*
  %6341 = load i64, i64* %RDX.i774
  %6342 = mul i64 %6341, 4
  %6343 = add i64 %6342, 8922032
  %6344 = load i32, i32* %ECX.i773
  %6345 = zext i32 %6344 to i64
  %6346 = load i64, i64* %PC.i772
  %6347 = add i64 %6346, 7
  store i64 %6347, i64* %PC.i772
  %6348 = inttoptr i64 %6343 to i32*
  store i32 %6344, i32* %6348
  store %struct.Memory* %loadMem_40ce15, %struct.Memory** %MEMORY
  %loadMem_40ce1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 33
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %6351 to i64*
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6353 = getelementptr inbounds %struct.GPR, %struct.GPR* %6352, i32 0, i32 7
  %6354 = getelementptr inbounds %struct.Reg, %struct.Reg* %6353, i32 0, i32 0
  %RDX.i770 = bitcast %union.anon* %6354 to i64*
  %6355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6356 = getelementptr inbounds %struct.GPR, %struct.GPR* %6355, i32 0, i32 15
  %6357 = getelementptr inbounds %struct.Reg, %struct.Reg* %6356, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %6357 to i64*
  %6358 = load i64, i64* %RBP.i771
  %6359 = sub i64 %6358, 20
  %6360 = load i64, i64* %PC.i769
  %6361 = add i64 %6360, 4
  store i64 %6361, i64* %PC.i769
  %6362 = inttoptr i64 %6359 to i32*
  %6363 = load i32, i32* %6362
  %6364 = sext i32 %6363 to i64
  store i64 %6364, i64* %RDX.i770, align 8
  store %struct.Memory* %loadMem_40ce1c, %struct.Memory** %MEMORY
  %loadMem_40ce20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 33
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %6367 to i64*
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 5
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %RCX.i767 = bitcast %union.anon* %6370 to i64*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 7
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %RDX.i768 = bitcast %union.anon* %6373 to i64*
  %6374 = load i64, i64* %RDX.i768
  %6375 = mul i64 %6374, 4
  %6376 = add i64 %6375, 8922032
  %6377 = load i64, i64* %PC.i766
  %6378 = add i64 %6377, 7
  store i64 %6378, i64* %PC.i766
  %6379 = inttoptr i64 %6376 to i32*
  %6380 = load i32, i32* %6379
  %6381 = zext i32 %6380 to i64
  store i64 %6381, i64* %RCX.i767, align 8
  store %struct.Memory* %loadMem_40ce20, %struct.Memory** %MEMORY
  %loadMem_40ce27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 33
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %6384 to i64*
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6386 = getelementptr inbounds %struct.GPR, %struct.GPR* %6385, i32 0, i32 5
  %6387 = getelementptr inbounds %struct.Reg, %struct.Reg* %6386, i32 0, i32 0
  %RCX.i765 = bitcast %union.anon* %6387 to i64*
  %6388 = load i64, i64* %RCX.i765
  %6389 = load i64, i64* %PC.i764
  %6390 = add i64 %6389, 3
  store i64 %6390, i64* %PC.i764
  %6391 = trunc i64 %6388 to i32
  %6392 = add i32 -1, %6391
  %6393 = zext i32 %6392 to i64
  store i64 %6393, i64* %RCX.i765, align 8
  %6394 = icmp ult i32 %6392, %6391
  %6395 = icmp ult i32 %6392, -1
  %6396 = or i1 %6394, %6395
  %6397 = zext i1 %6396 to i8
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6397, i8* %6398, align 1
  %6399 = and i32 %6392, 255
  %6400 = call i32 @llvm.ctpop.i32(i32 %6399)
  %6401 = trunc i32 %6400 to i8
  %6402 = and i8 %6401, 1
  %6403 = xor i8 %6402, 1
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6403, i8* %6404, align 1
  %6405 = xor i64 -1, %6388
  %6406 = trunc i64 %6405 to i32
  %6407 = xor i32 %6406, %6392
  %6408 = lshr i32 %6407, 4
  %6409 = trunc i32 %6408 to i8
  %6410 = and i8 %6409, 1
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6410, i8* %6411, align 1
  %6412 = icmp eq i32 %6392, 0
  %6413 = zext i1 %6412 to i8
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6413, i8* %6414, align 1
  %6415 = lshr i32 %6392, 31
  %6416 = trunc i32 %6415 to i8
  %6417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6416, i8* %6417, align 1
  %6418 = lshr i32 %6391, 31
  %6419 = xor i32 %6415, %6418
  %6420 = xor i32 %6415, 1
  %6421 = add i32 %6419, %6420
  %6422 = icmp eq i32 %6421, 2
  %6423 = zext i1 %6422 to i8
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6423, i8* %6424, align 1
  store %struct.Memory* %loadMem_40ce27, %struct.Memory** %MEMORY
  %loadMem_40ce2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6426 = getelementptr inbounds %struct.GPR, %struct.GPR* %6425, i32 0, i32 33
  %6427 = getelementptr inbounds %struct.Reg, %struct.Reg* %6426, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %6427 to i64*
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 5
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %ECX.i762 = bitcast %union.anon* %6430 to i32*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 7
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RDX.i763 = bitcast %union.anon* %6433 to i64*
  %6434 = load i64, i64* %RDX.i763
  %6435 = mul i64 %6434, 4
  %6436 = add i64 %6435, 8922032
  %6437 = load i32, i32* %ECX.i762
  %6438 = zext i32 %6437 to i64
  %6439 = load i64, i64* %PC.i761
  %6440 = add i64 %6439, 7
  store i64 %6440, i64* %PC.i761
  %6441 = inttoptr i64 %6436 to i32*
  store i32 %6437, i32* %6441
  store %struct.Memory* %loadMem_40ce2a, %struct.Memory** %MEMORY
  %loadMem_40ce31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6443 = getelementptr inbounds %struct.GPR, %struct.GPR* %6442, i32 0, i32 33
  %6444 = getelementptr inbounds %struct.Reg, %struct.Reg* %6443, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %6444 to i64*
  %6445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6446 = getelementptr inbounds %struct.GPR, %struct.GPR* %6445, i32 0, i32 5
  %6447 = getelementptr inbounds %struct.Reg, %struct.Reg* %6446, i32 0, i32 0
  %RCX.i759 = bitcast %union.anon* %6447 to i64*
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6449 = getelementptr inbounds %struct.GPR, %struct.GPR* %6448, i32 0, i32 15
  %6450 = getelementptr inbounds %struct.Reg, %struct.Reg* %6449, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %6450 to i64*
  %6451 = load i64, i64* %RBP.i760
  %6452 = sub i64 %6451, 24
  %6453 = load i64, i64* %PC.i758
  %6454 = add i64 %6453, 3
  store i64 %6454, i64* %PC.i758
  %6455 = inttoptr i64 %6452 to i32*
  %6456 = load i32, i32* %6455
  %6457 = zext i32 %6456 to i64
  store i64 %6457, i64* %RCX.i759, align 8
  store %struct.Memory* %loadMem_40ce31, %struct.Memory** %MEMORY
  %loadMem_40ce34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 33
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %6460 to i64*
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 5
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %RCX.i757 = bitcast %union.anon* %6463 to i64*
  %6464 = load i64, i64* %RCX.i757
  %6465 = load i64, i64* %PC.i756
  %6466 = add i64 %6465, 3
  store i64 %6466, i64* %PC.i756
  %6467 = trunc i64 %6464 to i32
  %6468 = add i32 12, %6467
  %6469 = zext i32 %6468 to i64
  store i64 %6469, i64* %RCX.i757, align 8
  %6470 = icmp ult i32 %6468, %6467
  %6471 = icmp ult i32 %6468, 12
  %6472 = or i1 %6470, %6471
  %6473 = zext i1 %6472 to i8
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6473, i8* %6474, align 1
  %6475 = and i32 %6468, 255
  %6476 = call i32 @llvm.ctpop.i32(i32 %6475)
  %6477 = trunc i32 %6476 to i8
  %6478 = and i8 %6477, 1
  %6479 = xor i8 %6478, 1
  %6480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6479, i8* %6480, align 1
  %6481 = xor i64 12, %6464
  %6482 = trunc i64 %6481 to i32
  %6483 = xor i32 %6482, %6468
  %6484 = lshr i32 %6483, 4
  %6485 = trunc i32 %6484 to i8
  %6486 = and i8 %6485, 1
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6486, i8* %6487, align 1
  %6488 = icmp eq i32 %6468, 0
  %6489 = zext i1 %6488 to i8
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6489, i8* %6490, align 1
  %6491 = lshr i32 %6468, 31
  %6492 = trunc i32 %6491 to i8
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6492, i8* %6493, align 1
  %6494 = lshr i32 %6467, 31
  %6495 = xor i32 %6491, %6494
  %6496 = add i32 %6495, %6491
  %6497 = icmp eq i32 %6496, 2
  %6498 = zext i1 %6497 to i8
  %6499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6498, i8* %6499, align 1
  store %struct.Memory* %loadMem_40ce34, %struct.Memory** %MEMORY
  %loadMem_40ce37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 33
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 5
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %ECX.i754 = bitcast %union.anon* %6505 to i32*
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 7
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %RDX.i755 = bitcast %union.anon* %6508 to i64*
  %6509 = load i32, i32* %ECX.i754
  %6510 = zext i32 %6509 to i64
  %6511 = load i64, i64* %PC.i753
  %6512 = add i64 %6511, 3
  store i64 %6512, i64* %PC.i753
  %6513 = shl i64 %6510, 32
  %6514 = ashr exact i64 %6513, 32
  store i64 %6514, i64* %RDX.i755, align 8
  store %struct.Memory* %loadMem_40ce37, %struct.Memory** %MEMORY
  %loadMem_40ce3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6516 = getelementptr inbounds %struct.GPR, %struct.GPR* %6515, i32 0, i32 33
  %6517 = getelementptr inbounds %struct.Reg, %struct.Reg* %6516, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %6517 to i64*
  %6518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6519 = getelementptr inbounds %struct.GPR, %struct.GPR* %6518, i32 0, i32 5
  %6520 = getelementptr inbounds %struct.Reg, %struct.Reg* %6519, i32 0, i32 0
  %RCX.i751 = bitcast %union.anon* %6520 to i64*
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 7
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %RDX.i752 = bitcast %union.anon* %6523 to i64*
  %6524 = load i64, i64* %RDX.i752
  %6525 = mul i64 %6524, 4
  %6526 = add i64 %6525, 8922032
  %6527 = load i64, i64* %PC.i750
  %6528 = add i64 %6527, 7
  store i64 %6528, i64* %PC.i750
  %6529 = inttoptr i64 %6526 to i32*
  %6530 = load i32, i32* %6529
  %6531 = zext i32 %6530 to i64
  store i64 %6531, i64* %RCX.i751, align 8
  store %struct.Memory* %loadMem_40ce3a, %struct.Memory** %MEMORY
  %loadMem_40ce41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6533 = getelementptr inbounds %struct.GPR, %struct.GPR* %6532, i32 0, i32 33
  %6534 = getelementptr inbounds %struct.Reg, %struct.Reg* %6533, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %6534 to i64*
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6536 = getelementptr inbounds %struct.GPR, %struct.GPR* %6535, i32 0, i32 5
  %6537 = getelementptr inbounds %struct.Reg, %struct.Reg* %6536, i32 0, i32 0
  %RCX.i749 = bitcast %union.anon* %6537 to i64*
  %6538 = load i64, i64* %RCX.i749
  %6539 = load i64, i64* %PC.i748
  %6540 = add i64 %6539, 3
  store i64 %6540, i64* %PC.i748
  %6541 = trunc i64 %6538 to i32
  %6542 = add i32 -1, %6541
  %6543 = zext i32 %6542 to i64
  store i64 %6543, i64* %RCX.i749, align 8
  %6544 = icmp ult i32 %6542, %6541
  %6545 = icmp ult i32 %6542, -1
  %6546 = or i1 %6544, %6545
  %6547 = zext i1 %6546 to i8
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6547, i8* %6548, align 1
  %6549 = and i32 %6542, 255
  %6550 = call i32 @llvm.ctpop.i32(i32 %6549)
  %6551 = trunc i32 %6550 to i8
  %6552 = and i8 %6551, 1
  %6553 = xor i8 %6552, 1
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6553, i8* %6554, align 1
  %6555 = xor i64 -1, %6538
  %6556 = trunc i64 %6555 to i32
  %6557 = xor i32 %6556, %6542
  %6558 = lshr i32 %6557, 4
  %6559 = trunc i32 %6558 to i8
  %6560 = and i8 %6559, 1
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6560, i8* %6561, align 1
  %6562 = icmp eq i32 %6542, 0
  %6563 = zext i1 %6562 to i8
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6563, i8* %6564, align 1
  %6565 = lshr i32 %6542, 31
  %6566 = trunc i32 %6565 to i8
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6566, i8* %6567, align 1
  %6568 = lshr i32 %6541, 31
  %6569 = xor i32 %6565, %6568
  %6570 = xor i32 %6565, 1
  %6571 = add i32 %6569, %6570
  %6572 = icmp eq i32 %6571, 2
  %6573 = zext i1 %6572 to i8
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6573, i8* %6574, align 1
  store %struct.Memory* %loadMem_40ce41, %struct.Memory** %MEMORY
  %loadMem_40ce44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 33
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %6577 to i64*
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6579 = getelementptr inbounds %struct.GPR, %struct.GPR* %6578, i32 0, i32 5
  %6580 = getelementptr inbounds %struct.Reg, %struct.Reg* %6579, i32 0, i32 0
  %ECX.i746 = bitcast %union.anon* %6580 to i32*
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6582 = getelementptr inbounds %struct.GPR, %struct.GPR* %6581, i32 0, i32 7
  %6583 = getelementptr inbounds %struct.Reg, %struct.Reg* %6582, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %6583 to i64*
  %6584 = load i64, i64* %RDX.i747
  %6585 = mul i64 %6584, 4
  %6586 = add i64 %6585, 8922032
  %6587 = load i32, i32* %ECX.i746
  %6588 = zext i32 %6587 to i64
  %6589 = load i64, i64* %PC.i745
  %6590 = add i64 %6589, 7
  store i64 %6590, i64* %PC.i745
  %6591 = inttoptr i64 %6586 to i32*
  store i32 %6587, i32* %6591
  store %struct.Memory* %loadMem_40ce44, %struct.Memory** %MEMORY
  %loadMem_40ce4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6593 = getelementptr inbounds %struct.GPR, %struct.GPR* %6592, i32 0, i32 33
  %6594 = getelementptr inbounds %struct.Reg, %struct.Reg* %6593, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %6594 to i64*
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6596 = getelementptr inbounds %struct.GPR, %struct.GPR* %6595, i32 0, i32 5
  %6597 = getelementptr inbounds %struct.Reg, %struct.Reg* %6596, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %6597 to i64*
  %6598 = load i64, i64* %PC.i743
  %6599 = add i64 %6598, 7
  store i64 %6599, i64* %PC.i743
  %6600 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %6601 = zext i32 %6600 to i64
  store i64 %6601, i64* %RCX.i744, align 8
  store %struct.Memory* %loadMem_40ce4b, %struct.Memory** %MEMORY
  %loadMem_40ce52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6603 = getelementptr inbounds %struct.GPR, %struct.GPR* %6602, i32 0, i32 33
  %6604 = getelementptr inbounds %struct.Reg, %struct.Reg* %6603, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %6604 to i64*
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6606 = getelementptr inbounds %struct.GPR, %struct.GPR* %6605, i32 0, i32 5
  %6607 = getelementptr inbounds %struct.Reg, %struct.Reg* %6606, i32 0, i32 0
  %RCX.i742 = bitcast %union.anon* %6607 to i64*
  %6608 = load i64, i64* %RCX.i742
  %6609 = load i64, i64* %PC.i741
  %6610 = add i64 %6609, 3
  store i64 %6610, i64* %PC.i741
  %6611 = xor i64 1, %6608
  %6612 = trunc i64 %6611 to i32
  %6613 = and i64 %6611, 4294967295
  store i64 %6613, i64* %RCX.i742, align 8
  %6614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6614, align 1
  %6615 = and i32 %6612, 255
  %6616 = call i32 @llvm.ctpop.i32(i32 %6615)
  %6617 = trunc i32 %6616 to i8
  %6618 = and i8 %6617, 1
  %6619 = xor i8 %6618, 1
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6619, i8* %6620, align 1
  %6621 = icmp eq i32 %6612, 0
  %6622 = zext i1 %6621 to i8
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6622, i8* %6623, align 1
  %6624 = lshr i32 %6612, 31
  %6625 = trunc i32 %6624 to i8
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6625, i8* %6626, align 1
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6627, align 1
  %6628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6628, align 1
  store %struct.Memory* %loadMem_40ce52, %struct.Memory** %MEMORY
  %loadMem_40ce55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6630 = getelementptr inbounds %struct.GPR, %struct.GPR* %6629, i32 0, i32 33
  %6631 = getelementptr inbounds %struct.Reg, %struct.Reg* %6630, i32 0, i32 0
  %PC.i739 = bitcast %union.anon* %6631 to i64*
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 5
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %ECX.i740 = bitcast %union.anon* %6634 to i32*
  %6635 = load i32, i32* %ECX.i740
  %6636 = zext i32 %6635 to i64
  %6637 = load i64, i64* %PC.i739
  %6638 = add i64 %6637, 7
  store i64 %6638, i64* %PC.i739
  store i32 %6635, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40ce55, %struct.Memory** %MEMORY
  %loadMem_40ce5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6640 = getelementptr inbounds %struct.GPR, %struct.GPR* %6639, i32 0, i32 33
  %6641 = getelementptr inbounds %struct.Reg, %struct.Reg* %6640, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %6641 to i64*
  %6642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6643 = getelementptr inbounds %struct.GPR, %struct.GPR* %6642, i32 0, i32 7
  %6644 = getelementptr inbounds %struct.Reg, %struct.Reg* %6643, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %6644 to i64*
  %6645 = load i64, i64* %PC.i737
  %6646 = add i64 %6645, 8
  store i64 %6646, i64* %PC.i737
  %6647 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %6648 = sext i32 %6647 to i64
  store i64 %6648, i64* %RDX.i738, align 8
  store %struct.Memory* %loadMem_40ce5c, %struct.Memory** %MEMORY
  %loadMem_40ce64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 7
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %RDX.i736 = bitcast %union.anon* %6654 to i64*
  %6655 = load i64, i64* %RDX.i736
  %6656 = load i64, i64* %PC.i735
  %6657 = add i64 %6656, 4
  store i64 %6657, i64* %PC.i735
  %6658 = shl i64 %6655, 3
  %6659 = icmp slt i64 %6658, 0
  %6660 = shl i64 %6658, 1
  store i64 %6660, i64* %RDX.i736, align 8
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6662 = zext i1 %6659 to i8
  store i8 %6662, i8* %6661, align 1
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6664 = trunc i64 %6660 to i32
  %6665 = and i32 %6664, 254
  %6666 = call i32 @llvm.ctpop.i32(i32 %6665)
  %6667 = trunc i32 %6666 to i8
  %6668 = and i8 %6667, 1
  %6669 = xor i8 %6668, 1
  store i8 %6669, i8* %6663, align 1
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6670, align 1
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6672 = icmp eq i64 %6660, 0
  %6673 = zext i1 %6672 to i8
  store i8 %6673, i8* %6671, align 1
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6675 = lshr i64 %6660, 63
  %6676 = trunc i64 %6675 to i8
  store i8 %6676, i8* %6674, align 1
  %6677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6677, align 1
  store %struct.Memory* %loadMem_40ce64, %struct.Memory** %MEMORY
  %loadMem_40ce68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6679 = getelementptr inbounds %struct.GPR, %struct.GPR* %6678, i32 0, i32 33
  %6680 = getelementptr inbounds %struct.Reg, %struct.Reg* %6679, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %6680 to i64*
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6682 = getelementptr inbounds %struct.GPR, %struct.GPR* %6681, i32 0, i32 1
  %6683 = getelementptr inbounds %struct.Reg, %struct.Reg* %6682, i32 0, i32 0
  %RAX.i733 = bitcast %union.anon* %6683 to i64*
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 17
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %R8.i734 = bitcast %union.anon* %6686 to i64*
  %6687 = load i64, i64* %RAX.i733
  %6688 = load i64, i64* %PC.i732
  %6689 = add i64 %6688, 3
  store i64 %6689, i64* %PC.i732
  store i64 %6687, i64* %R8.i734, align 8
  store %struct.Memory* %loadMem_40ce68, %struct.Memory** %MEMORY
  %loadMem_40ce6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6691 = getelementptr inbounds %struct.GPR, %struct.GPR* %6690, i32 0, i32 33
  %6692 = getelementptr inbounds %struct.Reg, %struct.Reg* %6691, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %6692 to i64*
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6694 = getelementptr inbounds %struct.GPR, %struct.GPR* %6693, i32 0, i32 7
  %6695 = getelementptr inbounds %struct.Reg, %struct.Reg* %6694, i32 0, i32 0
  %RDX.i730 = bitcast %union.anon* %6695 to i64*
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6697 = getelementptr inbounds %struct.GPR, %struct.GPR* %6696, i32 0, i32 17
  %6698 = getelementptr inbounds %struct.Reg, %struct.Reg* %6697, i32 0, i32 0
  %R8.i731 = bitcast %union.anon* %6698 to i64*
  %6699 = load i64, i64* %R8.i731
  %6700 = load i64, i64* %RDX.i730
  %6701 = load i64, i64* %PC.i729
  %6702 = add i64 %6701, 3
  store i64 %6702, i64* %PC.i729
  %6703 = add i64 %6700, %6699
  store i64 %6703, i64* %R8.i731, align 8
  %6704 = icmp ult i64 %6703, %6699
  %6705 = icmp ult i64 %6703, %6700
  %6706 = or i1 %6704, %6705
  %6707 = zext i1 %6706 to i8
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6707, i8* %6708, align 1
  %6709 = trunc i64 %6703 to i32
  %6710 = and i32 %6709, 255
  %6711 = call i32 @llvm.ctpop.i32(i32 %6710)
  %6712 = trunc i32 %6711 to i8
  %6713 = and i8 %6712, 1
  %6714 = xor i8 %6713, 1
  %6715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6714, i8* %6715, align 1
  %6716 = xor i64 %6700, %6699
  %6717 = xor i64 %6716, %6703
  %6718 = lshr i64 %6717, 4
  %6719 = trunc i64 %6718 to i8
  %6720 = and i8 %6719, 1
  %6721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6720, i8* %6721, align 1
  %6722 = icmp eq i64 %6703, 0
  %6723 = zext i1 %6722 to i8
  %6724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6723, i8* %6724, align 1
  %6725 = lshr i64 %6703, 63
  %6726 = trunc i64 %6725 to i8
  %6727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6726, i8* %6727, align 1
  %6728 = lshr i64 %6699, 63
  %6729 = lshr i64 %6700, 63
  %6730 = xor i64 %6725, %6728
  %6731 = xor i64 %6725, %6729
  %6732 = add i64 %6730, %6731
  %6733 = icmp eq i64 %6732, 2
  %6734 = zext i1 %6733 to i8
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6734, i8* %6735, align 1
  store %struct.Memory* %loadMem_40ce6b, %struct.Memory** %MEMORY
  %loadMem_40ce6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 33
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %6738 to i64*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 5
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %RCX.i728 = bitcast %union.anon* %6741 to i64*
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6743 = getelementptr inbounds %struct.GPR, %struct.GPR* %6742, i32 0, i32 17
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %R8.i = bitcast %union.anon* %6744 to i64*
  %6745 = load i64, i64* %R8.i
  %6746 = load i64, i64* %PC.i727
  %6747 = add i64 %6746, 3
  store i64 %6747, i64* %PC.i727
  %6748 = inttoptr i64 %6745 to i32*
  %6749 = load i32, i32* %6748
  %6750 = zext i32 %6749 to i64
  store i64 %6750, i64* %RCX.i728, align 8
  store %struct.Memory* %loadMem_40ce6e, %struct.Memory** %MEMORY
  %loadMem_40ce71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6752 = getelementptr inbounds %struct.GPR, %struct.GPR* %6751, i32 0, i32 33
  %6753 = getelementptr inbounds %struct.Reg, %struct.Reg* %6752, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %6753 to i64*
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 9
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %RSI.i725 = bitcast %union.anon* %6756 to i64*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 15
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %6759 to i64*
  %6760 = load i64, i64* %RBP.i726
  %6761 = sub i64 %6760, 24
  %6762 = load i64, i64* %PC.i724
  %6763 = add i64 %6762, 3
  store i64 %6763, i64* %PC.i724
  %6764 = inttoptr i64 %6761 to i32*
  %6765 = load i32, i32* %6764
  %6766 = zext i32 %6765 to i64
  store i64 %6766, i64* %RSI.i725, align 8
  store %struct.Memory* %loadMem_40ce71, %struct.Memory** %MEMORY
  %loadMem_40ce74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6768 = getelementptr inbounds %struct.GPR, %struct.GPR* %6767, i32 0, i32 33
  %6769 = getelementptr inbounds %struct.Reg, %struct.Reg* %6768, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %6769 to i64*
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 9
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %RSI.i723 = bitcast %union.anon* %6772 to i64*
  %6773 = load i64, i64* %RSI.i723
  %6774 = load i64, i64* %PC.i722
  %6775 = add i64 %6774, 3
  store i64 %6775, i64* %PC.i722
  %6776 = trunc i64 %6773 to i32
  %6777 = add i32 12, %6776
  %6778 = zext i32 %6777 to i64
  store i64 %6778, i64* %RSI.i723, align 8
  %6779 = icmp ult i32 %6777, %6776
  %6780 = icmp ult i32 %6777, 12
  %6781 = or i1 %6779, %6780
  %6782 = zext i1 %6781 to i8
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6782, i8* %6783, align 1
  %6784 = and i32 %6777, 255
  %6785 = call i32 @llvm.ctpop.i32(i32 %6784)
  %6786 = trunc i32 %6785 to i8
  %6787 = and i8 %6786, 1
  %6788 = xor i8 %6787, 1
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6788, i8* %6789, align 1
  %6790 = xor i64 12, %6773
  %6791 = trunc i64 %6790 to i32
  %6792 = xor i32 %6791, %6777
  %6793 = lshr i32 %6792, 4
  %6794 = trunc i32 %6793 to i8
  %6795 = and i8 %6794, 1
  %6796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6795, i8* %6796, align 1
  %6797 = icmp eq i32 %6777, 0
  %6798 = zext i1 %6797 to i8
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6798, i8* %6799, align 1
  %6800 = lshr i32 %6777, 31
  %6801 = trunc i32 %6800 to i8
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6801, i8* %6802, align 1
  %6803 = lshr i32 %6776, 31
  %6804 = xor i32 %6800, %6803
  %6805 = add i32 %6804, %6800
  %6806 = icmp eq i32 %6805, 2
  %6807 = zext i1 %6806 to i8
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6807, i8* %6808, align 1
  store %struct.Memory* %loadMem_40ce74, %struct.Memory** %MEMORY
  %loadMem_40ce77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6810 = getelementptr inbounds %struct.GPR, %struct.GPR* %6809, i32 0, i32 33
  %6811 = getelementptr inbounds %struct.Reg, %struct.Reg* %6810, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %6811 to i64*
  %6812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6813 = getelementptr inbounds %struct.GPR, %struct.GPR* %6812, i32 0, i32 9
  %6814 = getelementptr inbounds %struct.Reg, %struct.Reg* %6813, i32 0, i32 0
  %ESI.i720 = bitcast %union.anon* %6814 to i32*
  %6815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6816 = getelementptr inbounds %struct.GPR, %struct.GPR* %6815, i32 0, i32 7
  %6817 = getelementptr inbounds %struct.Reg, %struct.Reg* %6816, i32 0, i32 0
  %RDX.i721 = bitcast %union.anon* %6817 to i64*
  %6818 = load i32, i32* %ESI.i720
  %6819 = zext i32 %6818 to i64
  %6820 = load i64, i64* %PC.i719
  %6821 = add i64 %6820, 3
  store i64 %6821, i64* %PC.i719
  %6822 = shl i64 %6819, 32
  %6823 = ashr exact i64 %6822, 32
  store i64 %6823, i64* %RDX.i721, align 8
  store %struct.Memory* %loadMem_40ce77, %struct.Memory** %MEMORY
  %loadMem_40ce7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6825 = getelementptr inbounds %struct.GPR, %struct.GPR* %6824, i32 0, i32 33
  %6826 = getelementptr inbounds %struct.Reg, %struct.Reg* %6825, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %6826 to i64*
  %6827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6828 = getelementptr inbounds %struct.GPR, %struct.GPR* %6827, i32 0, i32 5
  %6829 = getelementptr inbounds %struct.Reg, %struct.Reg* %6828, i32 0, i32 0
  %ECX.i717 = bitcast %union.anon* %6829 to i32*
  %6830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6831 = getelementptr inbounds %struct.GPR, %struct.GPR* %6830, i32 0, i32 7
  %6832 = getelementptr inbounds %struct.Reg, %struct.Reg* %6831, i32 0, i32 0
  %RDX.i718 = bitcast %union.anon* %6832 to i64*
  %6833 = load i64, i64* %RDX.i718
  %6834 = mul i64 %6833, 4
  %6835 = add i64 %6834, 8807152
  %6836 = load i32, i32* %ECX.i717
  %6837 = zext i32 %6836 to i64
  %6838 = load i64, i64* %PC.i716
  %6839 = add i64 %6838, 7
  store i64 %6839, i64* %PC.i716
  %6840 = inttoptr i64 %6835 to i32*
  store i32 %6836, i32* %6840
  store %struct.Memory* %loadMem_40ce7a, %struct.Memory** %MEMORY
  %loadMem_40ce81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6842 = getelementptr inbounds %struct.GPR, %struct.GPR* %6841, i32 0, i32 33
  %6843 = getelementptr inbounds %struct.Reg, %struct.Reg* %6842, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %6843 to i64*
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6845 = getelementptr inbounds %struct.GPR, %struct.GPR* %6844, i32 0, i32 5
  %6846 = getelementptr inbounds %struct.Reg, %struct.Reg* %6845, i32 0, i32 0
  %RCX.i714 = bitcast %union.anon* %6846 to i64*
  %6847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6848 = getelementptr inbounds %struct.GPR, %struct.GPR* %6847, i32 0, i32 15
  %6849 = getelementptr inbounds %struct.Reg, %struct.Reg* %6848, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %6849 to i64*
  %6850 = load i64, i64* %RBP.i715
  %6851 = sub i64 %6850, 24
  %6852 = load i64, i64* %PC.i713
  %6853 = add i64 %6852, 3
  store i64 %6853, i64* %PC.i713
  %6854 = inttoptr i64 %6851 to i32*
  %6855 = load i32, i32* %6854
  %6856 = zext i32 %6855 to i64
  store i64 %6856, i64* %RCX.i714, align 8
  store %struct.Memory* %loadMem_40ce81, %struct.Memory** %MEMORY
  %loadMem_40ce84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 33
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %6859 to i64*
  %6860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6861 = getelementptr inbounds %struct.GPR, %struct.GPR* %6860, i32 0, i32 5
  %6862 = getelementptr inbounds %struct.Reg, %struct.Reg* %6861, i32 0, i32 0
  %RCX.i712 = bitcast %union.anon* %6862 to i64*
  %6863 = load i64, i64* %RCX.i712
  %6864 = load i64, i64* %PC.i711
  %6865 = add i64 %6864, 3
  store i64 %6865, i64* %PC.i711
  %6866 = trunc i64 %6863 to i32
  %6867 = add i32 12, %6866
  %6868 = zext i32 %6867 to i64
  store i64 %6868, i64* %RCX.i712, align 8
  %6869 = icmp ult i32 %6867, %6866
  %6870 = icmp ult i32 %6867, 12
  %6871 = or i1 %6869, %6870
  %6872 = zext i1 %6871 to i8
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6872, i8* %6873, align 1
  %6874 = and i32 %6867, 255
  %6875 = call i32 @llvm.ctpop.i32(i32 %6874)
  %6876 = trunc i32 %6875 to i8
  %6877 = and i8 %6876, 1
  %6878 = xor i8 %6877, 1
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6878, i8* %6879, align 1
  %6880 = xor i64 12, %6863
  %6881 = trunc i64 %6880 to i32
  %6882 = xor i32 %6881, %6867
  %6883 = lshr i32 %6882, 4
  %6884 = trunc i32 %6883 to i8
  %6885 = and i8 %6884, 1
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6885, i8* %6886, align 1
  %6887 = icmp eq i32 %6867, 0
  %6888 = zext i1 %6887 to i8
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6888, i8* %6889, align 1
  %6890 = lshr i32 %6867, 31
  %6891 = trunc i32 %6890 to i8
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6891, i8* %6892, align 1
  %6893 = lshr i32 %6866, 31
  %6894 = xor i32 %6890, %6893
  %6895 = add i32 %6894, %6890
  %6896 = icmp eq i32 %6895, 2
  %6897 = zext i1 %6896 to i8
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6897, i8* %6898, align 1
  store %struct.Memory* %loadMem_40ce84, %struct.Memory** %MEMORY
  %loadMem_40ce87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 33
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6903 = getelementptr inbounds %struct.GPR, %struct.GPR* %6902, i32 0, i32 7
  %6904 = getelementptr inbounds %struct.Reg, %struct.Reg* %6903, i32 0, i32 0
  %RDX.i710 = bitcast %union.anon* %6904 to i64*
  %6905 = load i64, i64* %PC.i709
  %6906 = add i64 %6905, 8
  store i64 %6906, i64* %PC.i709
  %6907 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %6908 = sext i32 %6907 to i64
  store i64 %6908, i64* %RDX.i710, align 8
  store %struct.Memory* %loadMem_40ce87, %struct.Memory** %MEMORY
  %loadMem_40ce8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 33
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %6911 to i64*
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 7
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %6914 to i64*
  %6915 = load i64, i64* %RDX.i708
  %6916 = load i64, i64* %PC.i707
  %6917 = add i64 %6916, 4
  store i64 %6917, i64* %PC.i707
  %6918 = shl i64 %6915, 3
  %6919 = icmp slt i64 %6918, 0
  %6920 = shl i64 %6918, 1
  store i64 %6920, i64* %RDX.i708, align 8
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6922 = zext i1 %6919 to i8
  store i8 %6922, i8* %6921, align 1
  %6923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %6924 = trunc i64 %6920 to i32
  %6925 = and i32 %6924, 254
  %6926 = call i32 @llvm.ctpop.i32(i32 %6925)
  %6927 = trunc i32 %6926 to i8
  %6928 = and i8 %6927, 1
  %6929 = xor i8 %6928, 1
  store i8 %6929, i8* %6923, align 1
  %6930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6930, align 1
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6932 = icmp eq i64 %6920, 0
  %6933 = zext i1 %6932 to i8
  store i8 %6933, i8* %6931, align 1
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6935 = lshr i64 %6920, 63
  %6936 = trunc i64 %6935 to i8
  store i8 %6936, i8* %6934, align 1
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6937, align 1
  store %struct.Memory* %loadMem_40ce8f, %struct.Memory** %MEMORY
  %loadMem_40ce93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 33
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %6940 to i64*
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6942 = getelementptr inbounds %struct.GPR, %struct.GPR* %6941, i32 0, i32 1
  %6943 = getelementptr inbounds %struct.Reg, %struct.Reg* %6942, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %6943 to i64*
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 7
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %RDX.i706 = bitcast %union.anon* %6946 to i64*
  %6947 = load i64, i64* %RAX.i705
  %6948 = load i64, i64* %RDX.i706
  %6949 = load i64, i64* %PC.i704
  %6950 = add i64 %6949, 3
  store i64 %6950, i64* %PC.i704
  %6951 = add i64 %6948, %6947
  store i64 %6951, i64* %RAX.i705, align 8
  %6952 = icmp ult i64 %6951, %6947
  %6953 = icmp ult i64 %6951, %6948
  %6954 = or i1 %6952, %6953
  %6955 = zext i1 %6954 to i8
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6955, i8* %6956, align 1
  %6957 = trunc i64 %6951 to i32
  %6958 = and i32 %6957, 255
  %6959 = call i32 @llvm.ctpop.i32(i32 %6958)
  %6960 = trunc i32 %6959 to i8
  %6961 = and i8 %6960, 1
  %6962 = xor i8 %6961, 1
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6962, i8* %6963, align 1
  %6964 = xor i64 %6948, %6947
  %6965 = xor i64 %6964, %6951
  %6966 = lshr i64 %6965, 4
  %6967 = trunc i64 %6966 to i8
  %6968 = and i8 %6967, 1
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6968, i8* %6969, align 1
  %6970 = icmp eq i64 %6951, 0
  %6971 = zext i1 %6970 to i8
  %6972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6971, i8* %6972, align 1
  %6973 = lshr i64 %6951, 63
  %6974 = trunc i64 %6973 to i8
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6974, i8* %6975, align 1
  %6976 = lshr i64 %6947, 63
  %6977 = lshr i64 %6948, 63
  %6978 = xor i64 %6973, %6976
  %6979 = xor i64 %6973, %6977
  %6980 = add i64 %6978, %6979
  %6981 = icmp eq i64 %6980, 2
  %6982 = zext i1 %6981 to i8
  %6983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6982, i8* %6983, align 1
  store %struct.Memory* %loadMem_40ce93, %struct.Memory** %MEMORY
  %loadMem_40ce96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 33
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %6986 to i64*
  %6987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6988 = getelementptr inbounds %struct.GPR, %struct.GPR* %6987, i32 0, i32 1
  %6989 = getelementptr inbounds %struct.Reg, %struct.Reg* %6988, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %6989 to i64*
  %6990 = load i64, i64* %RAX.i703
  %6991 = load i64, i64* %PC.i702
  %6992 = add i64 %6991, 3
  store i64 %6992, i64* %PC.i702
  %6993 = inttoptr i64 %6990 to i32*
  %6994 = load i32, i32* %6993
  %6995 = sext i32 %6994 to i64
  store i64 %6995, i64* %RAX.i703, align 8
  store %struct.Memory* %loadMem_40ce96, %struct.Memory** %MEMORY
  %loadMem_40ce99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 33
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7000 = getelementptr inbounds %struct.GPR, %struct.GPR* %6999, i32 0, i32 5
  %7001 = getelementptr inbounds %struct.Reg, %struct.Reg* %7000, i32 0, i32 0
  %ECX.i700 = bitcast %union.anon* %7001 to i32*
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7003 = getelementptr inbounds %struct.GPR, %struct.GPR* %7002, i32 0, i32 1
  %7004 = getelementptr inbounds %struct.Reg, %struct.Reg* %7003, i32 0, i32 0
  %RAX.i701 = bitcast %union.anon* %7004 to i64*
  %7005 = load i64, i64* %RAX.i701
  %7006 = mul i64 %7005, 4
  %7007 = add i64 %7006, 8778480
  %7008 = load i32, i32* %ECX.i700
  %7009 = zext i32 %7008 to i64
  %7010 = load i64, i64* %PC.i699
  %7011 = add i64 %7010, 7
  store i64 %7011, i64* %PC.i699
  %7012 = inttoptr i64 %7007 to i32*
  store i32 %7008, i32* %7012
  store %struct.Memory* %loadMem_40ce99, %struct.Memory** %MEMORY
  %loadMem_40cea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7014 = getelementptr inbounds %struct.GPR, %struct.GPR* %7013, i32 0, i32 33
  %7015 = getelementptr inbounds %struct.Reg, %struct.Reg* %7014, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %7015 to i64*
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7017 = getelementptr inbounds %struct.GPR, %struct.GPR* %7016, i32 0, i32 1
  %7018 = getelementptr inbounds %struct.Reg, %struct.Reg* %7017, i32 0, i32 0
  %RAX.i697 = bitcast %union.anon* %7018 to i64*
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 15
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %RBP.i698 = bitcast %union.anon* %7021 to i64*
  %7022 = load i64, i64* %RBP.i698
  %7023 = sub i64 %7022, 24
  %7024 = load i64, i64* %PC.i696
  %7025 = add i64 %7024, 4
  store i64 %7025, i64* %PC.i696
  %7026 = inttoptr i64 %7023 to i32*
  %7027 = load i32, i32* %7026
  %7028 = sext i32 %7027 to i64
  store i64 %7028, i64* %RAX.i697, align 8
  store %struct.Memory* %loadMem_40cea0, %struct.Memory** %MEMORY
  %loadMem_40cea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7030 = getelementptr inbounds %struct.GPR, %struct.GPR* %7029, i32 0, i32 33
  %7031 = getelementptr inbounds %struct.Reg, %struct.Reg* %7030, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %7031 to i64*
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 1
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %7034 to i64*
  %7035 = load i64, i64* %RAX.i695
  %7036 = mul i64 %7035, 4
  %7037 = add i64 %7036, 8807152
  %7038 = load i64, i64* %PC.i694
  %7039 = add i64 %7038, 11
  store i64 %7039, i64* %PC.i694
  %7040 = inttoptr i64 %7037 to i32*
  store i32 0, i32* %7040
  store %struct.Memory* %loadMem_40cea4, %struct.Memory** %MEMORY
  %loadMem_40ceaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 33
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %7043 to i64*
  %7044 = load i64, i64* %PC.i693
  %7045 = add i64 %7044, 1877
  %7046 = load i64, i64* %PC.i693
  %7047 = add i64 %7046, 5
  store i64 %7047, i64* %PC.i693
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7045, i64* %7048, align 8
  store %struct.Memory* %loadMem_40ceaf, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40ceb4:                                  ; preds = %block_40cd3c
  %loadMem_40ceb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7050 = getelementptr inbounds %struct.GPR, %struct.GPR* %7049, i32 0, i32 33
  %7051 = getelementptr inbounds %struct.Reg, %struct.Reg* %7050, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %7051 to i64*
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 1
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %7054 to i64*
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7056 = getelementptr inbounds %struct.GPR, %struct.GPR* %7055, i32 0, i32 15
  %7057 = getelementptr inbounds %struct.Reg, %struct.Reg* %7056, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %7057 to i64*
  %7058 = load i64, i64* %RBP.i692
  %7059 = sub i64 %7058, 20
  %7060 = load i64, i64* %PC.i690
  %7061 = add i64 %7060, 4
  store i64 %7061, i64* %PC.i690
  %7062 = inttoptr i64 %7059 to i32*
  %7063 = load i32, i32* %7062
  %7064 = sext i32 %7063 to i64
  store i64 %7064, i64* %RAX.i691, align 8
  store %struct.Memory* %loadMem_40ceb4, %struct.Memory** %MEMORY
  %loadMem_40ceb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7066 = getelementptr inbounds %struct.GPR, %struct.GPR* %7065, i32 0, i32 33
  %7067 = getelementptr inbounds %struct.Reg, %struct.Reg* %7066, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %7067 to i64*
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7069 = getelementptr inbounds %struct.GPR, %struct.GPR* %7068, i32 0, i32 1
  %7070 = getelementptr inbounds %struct.Reg, %struct.Reg* %7069, i32 0, i32 0
  %RAX.i688 = bitcast %union.anon* %7070 to i64*
  %7071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7072 = getelementptr inbounds %struct.GPR, %struct.GPR* %7071, i32 0, i32 5
  %7073 = getelementptr inbounds %struct.Reg, %struct.Reg* %7072, i32 0, i32 0
  %RCX.i689 = bitcast %union.anon* %7073 to i64*
  %7074 = load i64, i64* %RAX.i688
  %7075 = mul i64 %7074, 4
  %7076 = add i64 %7075, 9047808
  %7077 = load i64, i64* %PC.i687
  %7078 = add i64 %7077, 7
  store i64 %7078, i64* %PC.i687
  %7079 = inttoptr i64 %7076 to i32*
  %7080 = load i32, i32* %7079
  %7081 = zext i32 %7080 to i64
  store i64 %7081, i64* %RCX.i689, align 8
  store %struct.Memory* %loadMem_40ceb8, %struct.Memory** %MEMORY
  %loadMem_40cebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7083 = getelementptr inbounds %struct.GPR, %struct.GPR* %7082, i32 0, i32 33
  %7084 = getelementptr inbounds %struct.Reg, %struct.Reg* %7083, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %7084 to i64*
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 5
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %RCX.i686 = bitcast %union.anon* %7087 to i64*
  %7088 = load i64, i64* %RCX.i686
  %7089 = load i64, i64* %PC.i685
  %7090 = add i64 %7089, 7
  store i64 %7090, i64* %PC.i685
  %7091 = trunc i64 %7088 to i32
  %7092 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %7093 = xor i32 %7092, %7091
  %7094 = zext i32 %7093 to i64
  store i64 %7094, i64* %RCX.i686, align 8
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7095, align 1
  %7096 = and i32 %7093, 255
  %7097 = call i32 @llvm.ctpop.i32(i32 %7096)
  %7098 = trunc i32 %7097 to i8
  %7099 = and i8 %7098, 1
  %7100 = xor i8 %7099, 1
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7100, i8* %7101, align 1
  %7102 = icmp eq i32 %7093, 0
  %7103 = zext i1 %7102 to i8
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7103, i8* %7104, align 1
  %7105 = lshr i32 %7093, 31
  %7106 = trunc i32 %7105 to i8
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7106, i8* %7107, align 1
  %7108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7108, align 1
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7109, align 1
  store %struct.Memory* %loadMem_40cebf, %struct.Memory** %MEMORY
  %loadMem_40cec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 33
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %7112 to i64*
  %7113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7114 = getelementptr inbounds %struct.GPR, %struct.GPR* %7113, i32 0, i32 5
  %7115 = getelementptr inbounds %struct.Reg, %struct.Reg* %7114, i32 0, i32 0
  %ECX.i684 = bitcast %union.anon* %7115 to i32*
  %7116 = load i32, i32* %ECX.i684
  %7117 = zext i32 %7116 to i64
  %7118 = load i64, i64* %PC.i683
  %7119 = add i64 %7118, 7
  store i64 %7119, i64* %PC.i683
  store i32 %7116, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cec6, %struct.Memory** %MEMORY
  %loadMem_40cecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 33
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %7122 to i64*
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7124 = getelementptr inbounds %struct.GPR, %struct.GPR* %7123, i32 0, i32 1
  %7125 = getelementptr inbounds %struct.Reg, %struct.Reg* %7124, i32 0, i32 0
  %RAX.i681 = bitcast %union.anon* %7125 to i64*
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7127 = getelementptr inbounds %struct.GPR, %struct.GPR* %7126, i32 0, i32 15
  %7128 = getelementptr inbounds %struct.Reg, %struct.Reg* %7127, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %7128 to i64*
  %7129 = load i64, i64* %RBP.i682
  %7130 = sub i64 %7129, 24
  %7131 = load i64, i64* %PC.i680
  %7132 = add i64 %7131, 4
  store i64 %7132, i64* %PC.i680
  %7133 = inttoptr i64 %7130 to i32*
  %7134 = load i32, i32* %7133
  %7135 = sext i32 %7134 to i64
  store i64 %7135, i64* %RAX.i681, align 8
  store %struct.Memory* %loadMem_40cecd, %struct.Memory** %MEMORY
  %loadMem_40ced1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7137 = getelementptr inbounds %struct.GPR, %struct.GPR* %7136, i32 0, i32 33
  %7138 = getelementptr inbounds %struct.Reg, %struct.Reg* %7137, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %7138 to i64*
  %7139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7140 = getelementptr inbounds %struct.GPR, %struct.GPR* %7139, i32 0, i32 1
  %7141 = getelementptr inbounds %struct.Reg, %struct.Reg* %7140, i32 0, i32 0
  %RAX.i678 = bitcast %union.anon* %7141 to i64*
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7143 = getelementptr inbounds %struct.GPR, %struct.GPR* %7142, i32 0, i32 5
  %7144 = getelementptr inbounds %struct.Reg, %struct.Reg* %7143, i32 0, i32 0
  %RCX.i679 = bitcast %union.anon* %7144 to i64*
  %7145 = load i64, i64* %RAX.i678
  %7146 = mul i64 %7145, 4
  %7147 = add i64 %7146, 9047808
  %7148 = load i64, i64* %PC.i677
  %7149 = add i64 %7148, 7
  store i64 %7149, i64* %PC.i677
  %7150 = inttoptr i64 %7147 to i32*
  %7151 = load i32, i32* %7150
  %7152 = zext i32 %7151 to i64
  store i64 %7152, i64* %RCX.i679, align 8
  store %struct.Memory* %loadMem_40ced1, %struct.Memory** %MEMORY
  %loadMem_40ced8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 33
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %7155 to i64*
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7157 = getelementptr inbounds %struct.GPR, %struct.GPR* %7156, i32 0, i32 5
  %7158 = getelementptr inbounds %struct.Reg, %struct.Reg* %7157, i32 0, i32 0
  %RCX.i676 = bitcast %union.anon* %7158 to i64*
  %7159 = load i64, i64* %RCX.i676
  %7160 = load i64, i64* %PC.i675
  %7161 = add i64 %7160, 7
  store i64 %7161, i64* %PC.i675
  %7162 = trunc i64 %7159 to i32
  %7163 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %7164 = xor i32 %7163, %7162
  %7165 = zext i32 %7164 to i64
  store i64 %7165, i64* %RCX.i676, align 8
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7166, align 1
  %7167 = and i32 %7164, 255
  %7168 = call i32 @llvm.ctpop.i32(i32 %7167)
  %7169 = trunc i32 %7168 to i8
  %7170 = and i8 %7169, 1
  %7171 = xor i8 %7170, 1
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7171, i8* %7172, align 1
  %7173 = icmp eq i32 %7164, 0
  %7174 = zext i1 %7173 to i8
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7174, i8* %7175, align 1
  %7176 = lshr i32 %7164, 31
  %7177 = trunc i32 %7176 to i8
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7177, i8* %7178, align 1
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7179, align 1
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7180, align 1
  store %struct.Memory* %loadMem_40ced8, %struct.Memory** %MEMORY
  %loadMem_40cedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 33
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %7183 to i64*
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7185 = getelementptr inbounds %struct.GPR, %struct.GPR* %7184, i32 0, i32 5
  %7186 = getelementptr inbounds %struct.Reg, %struct.Reg* %7185, i32 0, i32 0
  %ECX.i674 = bitcast %union.anon* %7186 to i32*
  %7187 = load i32, i32* %ECX.i674
  %7188 = zext i32 %7187 to i64
  %7189 = load i64, i64* %PC.i673
  %7190 = add i64 %7189, 7
  store i64 %7190, i64* %PC.i673
  store i32 %7187, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40cedf, %struct.Memory** %MEMORY
  %loadMem_40cee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7192 = getelementptr inbounds %struct.GPR, %struct.GPR* %7191, i32 0, i32 33
  %7193 = getelementptr inbounds %struct.Reg, %struct.Reg* %7192, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %7193 to i64*
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7195 = getelementptr inbounds %struct.GPR, %struct.GPR* %7194, i32 0, i32 5
  %7196 = getelementptr inbounds %struct.Reg, %struct.Reg* %7195, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %7196 to i64*
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 15
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %RBP.i672 = bitcast %union.anon* %7199 to i64*
  %7200 = load i64, i64* %RBP.i672
  %7201 = sub i64 %7200, 28
  %7202 = load i64, i64* %PC.i670
  %7203 = add i64 %7202, 3
  store i64 %7203, i64* %PC.i670
  %7204 = inttoptr i64 %7201 to i32*
  %7205 = load i32, i32* %7204
  %7206 = zext i32 %7205 to i64
  store i64 %7206, i64* %RCX.i671, align 8
  store %struct.Memory* %loadMem_40cee6, %struct.Memory** %MEMORY
  %loadMem_40cee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7208 = getelementptr inbounds %struct.GPR, %struct.GPR* %7207, i32 0, i32 33
  %7209 = getelementptr inbounds %struct.Reg, %struct.Reg* %7208, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %7209 to i64*
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 1
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %RAX.i668 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 15
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %7215 to i64*
  %7216 = load i64, i64* %RBP.i669
  %7217 = sub i64 %7216, 24
  %7218 = load i64, i64* %PC.i667
  %7219 = add i64 %7218, 4
  store i64 %7219, i64* %PC.i667
  %7220 = inttoptr i64 %7217 to i32*
  %7221 = load i32, i32* %7220
  %7222 = sext i32 %7221 to i64
  store i64 %7222, i64* %RAX.i668, align 8
  store %struct.Memory* %loadMem_40cee9, %struct.Memory** %MEMORY
  %loadMem_40ceed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 33
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %7225 to i64*
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 5
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %ECX.i665 = bitcast %union.anon* %7228 to i32*
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 1
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %RAX.i666 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %RAX.i666
  %7233 = mul i64 %7232, 4
  %7234 = add i64 %7233, 8807744
  %7235 = load i32, i32* %ECX.i665
  %7236 = zext i32 %7235 to i64
  %7237 = load i64, i64* %PC.i664
  %7238 = add i64 %7237, 7
  store i64 %7238, i64* %PC.i664
  %7239 = inttoptr i64 %7234 to i32*
  store i32 %7235, i32* %7239
  store %struct.Memory* %loadMem_40ceed, %struct.Memory** %MEMORY
  %loadMem_40cef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7241 = getelementptr inbounds %struct.GPR, %struct.GPR* %7240, i32 0, i32 33
  %7242 = getelementptr inbounds %struct.Reg, %struct.Reg* %7241, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %7242 to i64*
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7244 = getelementptr inbounds %struct.GPR, %struct.GPR* %7243, i32 0, i32 1
  %7245 = getelementptr inbounds %struct.Reg, %struct.Reg* %7244, i32 0, i32 0
  %RAX.i662 = bitcast %union.anon* %7245 to i64*
  %7246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7247 = getelementptr inbounds %struct.GPR, %struct.GPR* %7246, i32 0, i32 15
  %7248 = getelementptr inbounds %struct.Reg, %struct.Reg* %7247, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %7248 to i64*
  %7249 = load i64, i64* %RBP.i663
  %7250 = sub i64 %7249, 20
  %7251 = load i64, i64* %PC.i661
  %7252 = add i64 %7251, 4
  store i64 %7252, i64* %PC.i661
  %7253 = inttoptr i64 %7250 to i32*
  %7254 = load i32, i32* %7253
  %7255 = sext i32 %7254 to i64
  store i64 %7255, i64* %RAX.i662, align 8
  store %struct.Memory* %loadMem_40cef4, %struct.Memory** %MEMORY
  %loadMem_40cef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7257 = getelementptr inbounds %struct.GPR, %struct.GPR* %7256, i32 0, i32 33
  %7258 = getelementptr inbounds %struct.Reg, %struct.Reg* %7257, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %7258 to i64*
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7260 = getelementptr inbounds %struct.GPR, %struct.GPR* %7259, i32 0, i32 1
  %7261 = getelementptr inbounds %struct.Reg, %struct.Reg* %7260, i32 0, i32 0
  %RAX.i660 = bitcast %union.anon* %7261 to i64*
  %7262 = load i64, i64* %RAX.i660
  %7263 = mul i64 %7262, 4
  %7264 = add i64 %7263, 8807744
  %7265 = load i64, i64* %PC.i659
  %7266 = add i64 %7265, 11
  store i64 %7266, i64* %PC.i659
  %7267 = inttoptr i64 %7264 to i32*
  store i32 2, i32* %7267
  store %struct.Memory* %loadMem_40cef8, %struct.Memory** %MEMORY
  %loadMem_40cf03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 33
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %7270 to i64*
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 1
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %7273 to i64*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 15
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RBP.i658 = bitcast %union.anon* %7276 to i64*
  %7277 = load i64, i64* %RBP.i658
  %7278 = sub i64 %7277, 24
  %7279 = load i64, i64* %PC.i656
  %7280 = add i64 %7279, 4
  store i64 %7280, i64* %PC.i656
  %7281 = inttoptr i64 %7278 to i32*
  %7282 = load i32, i32* %7281
  %7283 = sext i32 %7282 to i64
  store i64 %7283, i64* %RAX.i657, align 8
  store %struct.Memory* %loadMem_40cf03, %struct.Memory** %MEMORY
  %loadMem_40cf07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 1
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RAX.i654 = bitcast %union.anon* %7289 to i64*
  %7290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7291 = getelementptr inbounds %struct.GPR, %struct.GPR* %7290, i32 0, i32 5
  %7292 = getelementptr inbounds %struct.Reg, %struct.Reg* %7291, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %7292 to i64*
  %7293 = load i64, i64* %RAX.i654
  %7294 = mul i64 %7293, 4
  %7295 = add i64 %7294, 8922032
  %7296 = load i64, i64* %PC.i653
  %7297 = add i64 %7296, 7
  store i64 %7297, i64* %PC.i653
  %7298 = inttoptr i64 %7295 to i32*
  %7299 = load i32, i32* %7298
  %7300 = zext i32 %7299 to i64
  store i64 %7300, i64* %RCX.i655, align 8
  store %struct.Memory* %loadMem_40cf07, %struct.Memory** %MEMORY
  %loadMem_40cf0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7302 = getelementptr inbounds %struct.GPR, %struct.GPR* %7301, i32 0, i32 33
  %7303 = getelementptr inbounds %struct.Reg, %struct.Reg* %7302, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %7303 to i64*
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 5
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %7306 to i64*
  %7307 = load i64, i64* %RCX.i652
  %7308 = load i64, i64* %PC.i651
  %7309 = add i64 %7308, 3
  store i64 %7309, i64* %PC.i651
  %7310 = trunc i64 %7307 to i32
  %7311 = add i32 -1, %7310
  %7312 = zext i32 %7311 to i64
  store i64 %7312, i64* %RCX.i652, align 8
  %7313 = icmp ult i32 %7311, %7310
  %7314 = icmp ult i32 %7311, -1
  %7315 = or i1 %7313, %7314
  %7316 = zext i1 %7315 to i8
  %7317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7316, i8* %7317, align 1
  %7318 = and i32 %7311, 255
  %7319 = call i32 @llvm.ctpop.i32(i32 %7318)
  %7320 = trunc i32 %7319 to i8
  %7321 = and i8 %7320, 1
  %7322 = xor i8 %7321, 1
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7322, i8* %7323, align 1
  %7324 = xor i64 -1, %7307
  %7325 = trunc i64 %7324 to i32
  %7326 = xor i32 %7325, %7311
  %7327 = lshr i32 %7326, 4
  %7328 = trunc i32 %7327 to i8
  %7329 = and i8 %7328, 1
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7329, i8* %7330, align 1
  %7331 = icmp eq i32 %7311, 0
  %7332 = zext i1 %7331 to i8
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7332, i8* %7333, align 1
  %7334 = lshr i32 %7311, 31
  %7335 = trunc i32 %7334 to i8
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7335, i8* %7336, align 1
  %7337 = lshr i32 %7310, 31
  %7338 = xor i32 %7334, %7337
  %7339 = xor i32 %7334, 1
  %7340 = add i32 %7338, %7339
  %7341 = icmp eq i32 %7340, 2
  %7342 = zext i1 %7341 to i8
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7342, i8* %7343, align 1
  store %struct.Memory* %loadMem_40cf0e, %struct.Memory** %MEMORY
  %loadMem_40cf11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 5
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %ECX.i649 = bitcast %union.anon* %7349 to i32*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 1
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %RAX.i650 = bitcast %union.anon* %7352 to i64*
  %7353 = load i64, i64* %RAX.i650
  %7354 = mul i64 %7353, 4
  %7355 = add i64 %7354, 8922032
  %7356 = load i32, i32* %ECX.i649
  %7357 = zext i32 %7356 to i64
  %7358 = load i64, i64* %PC.i648
  %7359 = add i64 %7358, 7
  store i64 %7359, i64* %PC.i648
  %7360 = inttoptr i64 %7355 to i32*
  store i32 %7356, i32* %7360
  store %struct.Memory* %loadMem_40cf11, %struct.Memory** %MEMORY
  %loadMem_40cf18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7362 = getelementptr inbounds %struct.GPR, %struct.GPR* %7361, i32 0, i32 33
  %7363 = getelementptr inbounds %struct.Reg, %struct.Reg* %7362, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %7363 to i64*
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7365 = getelementptr inbounds %struct.GPR, %struct.GPR* %7364, i32 0, i32 1
  %7366 = getelementptr inbounds %struct.Reg, %struct.Reg* %7365, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %7366 to i64*
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7368 = getelementptr inbounds %struct.GPR, %struct.GPR* %7367, i32 0, i32 15
  %7369 = getelementptr inbounds %struct.Reg, %struct.Reg* %7368, i32 0, i32 0
  %RBP.i647 = bitcast %union.anon* %7369 to i64*
  %7370 = load i64, i64* %RBP.i647
  %7371 = sub i64 %7370, 20
  %7372 = load i64, i64* %PC.i645
  %7373 = add i64 %7372, 4
  store i64 %7373, i64* %PC.i645
  %7374 = inttoptr i64 %7371 to i32*
  %7375 = load i32, i32* %7374
  %7376 = sext i32 %7375 to i64
  store i64 %7376, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_40cf18, %struct.Memory** %MEMORY
  %loadMem_40cf1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7378 = getelementptr inbounds %struct.GPR, %struct.GPR* %7377, i32 0, i32 33
  %7379 = getelementptr inbounds %struct.Reg, %struct.Reg* %7378, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %7379 to i64*
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 1
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %RAX.i643 = bitcast %union.anon* %7382 to i64*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 5
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %7385 to i64*
  %7386 = load i64, i64* %RAX.i643
  %7387 = mul i64 %7386, 4
  %7388 = add i64 %7387, 8922032
  %7389 = load i64, i64* %PC.i642
  %7390 = add i64 %7389, 7
  store i64 %7390, i64* %PC.i642
  %7391 = inttoptr i64 %7388 to i32*
  %7392 = load i32, i32* %7391
  %7393 = zext i32 %7392 to i64
  store i64 %7393, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_40cf1c, %struct.Memory** %MEMORY
  %loadMem_40cf23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 33
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %7396 to i64*
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7398 = getelementptr inbounds %struct.GPR, %struct.GPR* %7397, i32 0, i32 5
  %7399 = getelementptr inbounds %struct.Reg, %struct.Reg* %7398, i32 0, i32 0
  %RCX.i641 = bitcast %union.anon* %7399 to i64*
  %7400 = load i64, i64* %RCX.i641
  %7401 = load i64, i64* %PC.i640
  %7402 = add i64 %7401, 3
  store i64 %7402, i64* %PC.i640
  %7403 = trunc i64 %7400 to i32
  %7404 = add i32 -1, %7403
  %7405 = zext i32 %7404 to i64
  store i64 %7405, i64* %RCX.i641, align 8
  %7406 = icmp ult i32 %7404, %7403
  %7407 = icmp ult i32 %7404, -1
  %7408 = or i1 %7406, %7407
  %7409 = zext i1 %7408 to i8
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7409, i8* %7410, align 1
  %7411 = and i32 %7404, 255
  %7412 = call i32 @llvm.ctpop.i32(i32 %7411)
  %7413 = trunc i32 %7412 to i8
  %7414 = and i8 %7413, 1
  %7415 = xor i8 %7414, 1
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7415, i8* %7416, align 1
  %7417 = xor i64 -1, %7400
  %7418 = trunc i64 %7417 to i32
  %7419 = xor i32 %7418, %7404
  %7420 = lshr i32 %7419, 4
  %7421 = trunc i32 %7420 to i8
  %7422 = and i8 %7421, 1
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7422, i8* %7423, align 1
  %7424 = icmp eq i32 %7404, 0
  %7425 = zext i1 %7424 to i8
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7425, i8* %7426, align 1
  %7427 = lshr i32 %7404, 31
  %7428 = trunc i32 %7427 to i8
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7428, i8* %7429, align 1
  %7430 = lshr i32 %7403, 31
  %7431 = xor i32 %7427, %7430
  %7432 = xor i32 %7427, 1
  %7433 = add i32 %7431, %7432
  %7434 = icmp eq i32 %7433, 2
  %7435 = zext i1 %7434 to i8
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7435, i8* %7436, align 1
  store %struct.Memory* %loadMem_40cf23, %struct.Memory** %MEMORY
  %loadMem_40cf26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7438 = getelementptr inbounds %struct.GPR, %struct.GPR* %7437, i32 0, i32 33
  %7439 = getelementptr inbounds %struct.Reg, %struct.Reg* %7438, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %7439 to i64*
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7441 = getelementptr inbounds %struct.GPR, %struct.GPR* %7440, i32 0, i32 5
  %7442 = getelementptr inbounds %struct.Reg, %struct.Reg* %7441, i32 0, i32 0
  %ECX.i638 = bitcast %union.anon* %7442 to i32*
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7444 = getelementptr inbounds %struct.GPR, %struct.GPR* %7443, i32 0, i32 1
  %7445 = getelementptr inbounds %struct.Reg, %struct.Reg* %7444, i32 0, i32 0
  %RAX.i639 = bitcast %union.anon* %7445 to i64*
  %7446 = load i64, i64* %RAX.i639
  %7447 = mul i64 %7446, 4
  %7448 = add i64 %7447, 8922032
  %7449 = load i32, i32* %ECX.i638
  %7450 = zext i32 %7449 to i64
  %7451 = load i64, i64* %PC.i637
  %7452 = add i64 %7451, 7
  store i64 %7452, i64* %PC.i637
  %7453 = inttoptr i64 %7448 to i32*
  store i32 %7449, i32* %7453
  store %struct.Memory* %loadMem_40cf26, %struct.Memory** %MEMORY
  %loadMem_40cf2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 33
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %7456 to i64*
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 5
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %RCX.i636 = bitcast %union.anon* %7459 to i64*
  %7460 = load i64, i64* %PC.i635
  %7461 = add i64 %7460, 7
  store i64 %7461, i64* %PC.i635
  %7462 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %7463 = zext i32 %7462 to i64
  store i64 %7463, i64* %RCX.i636, align 8
  store %struct.Memory* %loadMem_40cf2d, %struct.Memory** %MEMORY
  %loadMem_40cf34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7465 = getelementptr inbounds %struct.GPR, %struct.GPR* %7464, i32 0, i32 33
  %7466 = getelementptr inbounds %struct.Reg, %struct.Reg* %7465, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %7466 to i64*
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7468 = getelementptr inbounds %struct.GPR, %struct.GPR* %7467, i32 0, i32 5
  %7469 = getelementptr inbounds %struct.Reg, %struct.Reg* %7468, i32 0, i32 0
  %RCX.i634 = bitcast %union.anon* %7469 to i64*
  %7470 = load i64, i64* %RCX.i634
  %7471 = load i64, i64* %PC.i633
  %7472 = add i64 %7471, 3
  store i64 %7472, i64* %PC.i633
  %7473 = xor i64 1, %7470
  %7474 = trunc i64 %7473 to i32
  %7475 = and i64 %7473, 4294967295
  store i64 %7475, i64* %RCX.i634, align 8
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7476, align 1
  %7477 = and i32 %7474, 255
  %7478 = call i32 @llvm.ctpop.i32(i32 %7477)
  %7479 = trunc i32 %7478 to i8
  %7480 = and i8 %7479, 1
  %7481 = xor i8 %7480, 1
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7481, i8* %7482, align 1
  %7483 = icmp eq i32 %7474, 0
  %7484 = zext i1 %7483 to i8
  %7485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7484, i8* %7485, align 1
  %7486 = lshr i32 %7474, 31
  %7487 = trunc i32 %7486 to i8
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7487, i8* %7488, align 1
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7489, align 1
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7490, align 1
  store %struct.Memory* %loadMem_40cf34, %struct.Memory** %MEMORY
  %loadMem_40cf37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 33
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %7493 to i64*
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7495 = getelementptr inbounds %struct.GPR, %struct.GPR* %7494, i32 0, i32 5
  %7496 = getelementptr inbounds %struct.Reg, %struct.Reg* %7495, i32 0, i32 0
  %ECX.i632 = bitcast %union.anon* %7496 to i32*
  %7497 = load i32, i32* %ECX.i632
  %7498 = zext i32 %7497 to i64
  %7499 = load i64, i64* %PC.i631
  %7500 = add i64 %7499, 7
  store i64 %7500, i64* %PC.i631
  store i32 %7497, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40cf37, %struct.Memory** %MEMORY
  %loadMem_40cf3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7502 = getelementptr inbounds %struct.GPR, %struct.GPR* %7501, i32 0, i32 33
  %7503 = getelementptr inbounds %struct.Reg, %struct.Reg* %7502, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %7503 to i64*
  %7504 = load i64, i64* %PC.i630
  %7505 = add i64 %7504, 1734
  %7506 = load i64, i64* %PC.i630
  %7507 = add i64 %7506, 5
  store i64 %7507, i64* %PC.i630
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7505, i64* %7508, align 8
  store %struct.Memory* %loadMem_40cf3e, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40cf43:                                  ; preds = %block_.L_40cd2a
  %loadMem_40cf43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7510 = getelementptr inbounds %struct.GPR, %struct.GPR* %7509, i32 0, i32 33
  %7511 = getelementptr inbounds %struct.Reg, %struct.Reg* %7510, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %7511 to i64*
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7513 = getelementptr inbounds %struct.GPR, %struct.GPR* %7512, i32 0, i32 1
  %7514 = getelementptr inbounds %struct.Reg, %struct.Reg* %7513, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %7514 to i64*
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7516 = getelementptr inbounds %struct.GPR, %struct.GPR* %7515, i32 0, i32 15
  %7517 = getelementptr inbounds %struct.Reg, %struct.Reg* %7516, i32 0, i32 0
  %RBP.i629 = bitcast %union.anon* %7517 to i64*
  %7518 = load i64, i64* %RBP.i629
  %7519 = sub i64 %7518, 24
  %7520 = load i64, i64* %PC.i627
  %7521 = add i64 %7520, 4
  store i64 %7521, i64* %PC.i627
  %7522 = inttoptr i64 %7519 to i32*
  %7523 = load i32, i32* %7522
  %7524 = sext i32 %7523 to i64
  store i64 %7524, i64* %RAX.i628, align 8
  store %struct.Memory* %loadMem_40cf43, %struct.Memory** %MEMORY
  %loadMem_40cf47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7526 = getelementptr inbounds %struct.GPR, %struct.GPR* %7525, i32 0, i32 33
  %7527 = getelementptr inbounds %struct.Reg, %struct.Reg* %7526, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %7527 to i64*
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7529 = getelementptr inbounds %struct.GPR, %struct.GPR* %7528, i32 0, i32 1
  %7530 = getelementptr inbounds %struct.Reg, %struct.Reg* %7529, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %7530 to i64*
  %7531 = load i64, i64* %RAX.i626
  %7532 = mul i64 %7531, 4
  %7533 = add i64 %7532, 8807744
  %7534 = load i64, i64* %PC.i625
  %7535 = add i64 %7534, 8
  store i64 %7535, i64* %PC.i625
  %7536 = inttoptr i64 %7533 to i32*
  %7537 = load i32, i32* %7536
  %7538 = sub i32 %7537, 5
  %7539 = icmp ult i32 %7537, 5
  %7540 = zext i1 %7539 to i8
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7540, i8* %7541, align 1
  %7542 = and i32 %7538, 255
  %7543 = call i32 @llvm.ctpop.i32(i32 %7542)
  %7544 = trunc i32 %7543 to i8
  %7545 = and i8 %7544, 1
  %7546 = xor i8 %7545, 1
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7546, i8* %7547, align 1
  %7548 = xor i32 %7537, 5
  %7549 = xor i32 %7548, %7538
  %7550 = lshr i32 %7549, 4
  %7551 = trunc i32 %7550 to i8
  %7552 = and i8 %7551, 1
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7552, i8* %7553, align 1
  %7554 = icmp eq i32 %7538, 0
  %7555 = zext i1 %7554 to i8
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7555, i8* %7556, align 1
  %7557 = lshr i32 %7538, 31
  %7558 = trunc i32 %7557 to i8
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7558, i8* %7559, align 1
  %7560 = lshr i32 %7537, 31
  %7561 = xor i32 %7557, %7560
  %7562 = add i32 %7561, %7560
  %7563 = icmp eq i32 %7562, 2
  %7564 = zext i1 %7563 to i8
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7564, i8* %7565, align 1
  store %struct.Memory* %loadMem_40cf47, %struct.Memory** %MEMORY
  %loadMem_40cf4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 33
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %7568 to i64*
  %7569 = load i64, i64* %PC.i624
  %7570 = add i64 %7569, 233
  %7571 = load i64, i64* %PC.i624
  %7572 = add i64 %7571, 6
  %7573 = load i64, i64* %PC.i624
  %7574 = add i64 %7573, 6
  store i64 %7574, i64* %PC.i624
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7576 = load i8, i8* %7575, align 1
  store i8 %7576, i8* %BRANCH_TAKEN, align 1
  %7577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7578 = icmp ne i8 %7576, 0
  %7579 = select i1 %7578, i64 %7570, i64 %7572
  store i64 %7579, i64* %7577, align 8
  store %struct.Memory* %loadMem_40cf4f, %struct.Memory** %MEMORY
  %loadBr_40cf4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cf4f = icmp eq i8 %loadBr_40cf4f, 1
  br i1 %cmpBr_40cf4f, label %block_.L_40d038, label %block_40cf55

block_40cf55:                                     ; preds = %block_.L_40cf43
  %loadMem_40cf55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7581 = getelementptr inbounds %struct.GPR, %struct.GPR* %7580, i32 0, i32 33
  %7582 = getelementptr inbounds %struct.Reg, %struct.Reg* %7581, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %7582 to i64*
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7584 = getelementptr inbounds %struct.GPR, %struct.GPR* %7583, i32 0, i32 1
  %7585 = getelementptr inbounds %struct.Reg, %struct.Reg* %7584, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %7585 to i64*
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7587 = getelementptr inbounds %struct.GPR, %struct.GPR* %7586, i32 0, i32 15
  %7588 = getelementptr inbounds %struct.Reg, %struct.Reg* %7587, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %7588 to i64*
  %7589 = load i64, i64* %RBP.i623
  %7590 = sub i64 %7589, 24
  %7591 = load i64, i64* %PC.i621
  %7592 = add i64 %7591, 4
  store i64 %7592, i64* %PC.i621
  %7593 = inttoptr i64 %7590 to i32*
  %7594 = load i32, i32* %7593
  %7595 = sext i32 %7594 to i64
  store i64 %7595, i64* %RAX.i622, align 8
  store %struct.Memory* %loadMem_40cf55, %struct.Memory** %MEMORY
  %loadMem_40cf59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7597 = getelementptr inbounds %struct.GPR, %struct.GPR* %7596, i32 0, i32 33
  %7598 = getelementptr inbounds %struct.Reg, %struct.Reg* %7597, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %7598 to i64*
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7600 = getelementptr inbounds %struct.GPR, %struct.GPR* %7599, i32 0, i32 1
  %7601 = getelementptr inbounds %struct.Reg, %struct.Reg* %7600, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %7601 to i64*
  %7602 = load i64, i64* %RAX.i620
  %7603 = mul i64 %7602, 4
  %7604 = add i64 %7603, 8807744
  %7605 = load i64, i64* %PC.i619
  %7606 = add i64 %7605, 8
  store i64 %7606, i64* %PC.i619
  %7607 = inttoptr i64 %7604 to i32*
  %7608 = load i32, i32* %7607
  %7609 = sub i32 %7608, 6
  %7610 = icmp ult i32 %7608, 6
  %7611 = zext i1 %7610 to i8
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7611, i8* %7612, align 1
  %7613 = and i32 %7609, 255
  %7614 = call i32 @llvm.ctpop.i32(i32 %7613)
  %7615 = trunc i32 %7614 to i8
  %7616 = and i8 %7615, 1
  %7617 = xor i8 %7616, 1
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7617, i8* %7618, align 1
  %7619 = xor i32 %7608, 6
  %7620 = xor i32 %7619, %7609
  %7621 = lshr i32 %7620, 4
  %7622 = trunc i32 %7621 to i8
  %7623 = and i8 %7622, 1
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7623, i8* %7624, align 1
  %7625 = icmp eq i32 %7609, 0
  %7626 = zext i1 %7625 to i8
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7626, i8* %7627, align 1
  %7628 = lshr i32 %7609, 31
  %7629 = trunc i32 %7628 to i8
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7629, i8* %7630, align 1
  %7631 = lshr i32 %7608, 31
  %7632 = xor i32 %7628, %7631
  %7633 = add i32 %7632, %7631
  %7634 = icmp eq i32 %7633, 2
  %7635 = zext i1 %7634 to i8
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7635, i8* %7636, align 1
  store %struct.Memory* %loadMem_40cf59, %struct.Memory** %MEMORY
  %loadMem_40cf61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7638 = getelementptr inbounds %struct.GPR, %struct.GPR* %7637, i32 0, i32 33
  %7639 = getelementptr inbounds %struct.Reg, %struct.Reg* %7638, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %7639 to i64*
  %7640 = load i64, i64* %PC.i618
  %7641 = add i64 %7640, 215
  %7642 = load i64, i64* %PC.i618
  %7643 = add i64 %7642, 6
  %7644 = load i64, i64* %PC.i618
  %7645 = add i64 %7644, 6
  store i64 %7645, i64* %PC.i618
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7647 = load i8, i8* %7646, align 1
  store i8 %7647, i8* %BRANCH_TAKEN, align 1
  %7648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7649 = icmp ne i8 %7647, 0
  %7650 = select i1 %7649, i64 %7641, i64 %7643
  store i64 %7650, i64* %7648, align 8
  store %struct.Memory* %loadMem_40cf61, %struct.Memory** %MEMORY
  %loadBr_40cf61 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cf61 = icmp eq i8 %loadBr_40cf61, 1
  br i1 %cmpBr_40cf61, label %block_.L_40d038, label %block_40cf67

block_40cf67:                                     ; preds = %block_40cf55
  %loadMem_40cf67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 33
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %7653 to i64*
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 15
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %RBP.i617 = bitcast %union.anon* %7656 to i64*
  %7657 = load i64, i64* %RBP.i617
  %7658 = sub i64 %7657, 32
  %7659 = load i64, i64* %PC.i616
  %7660 = add i64 %7659, 4
  store i64 %7660, i64* %PC.i616
  %7661 = inttoptr i64 %7658 to i32*
  %7662 = load i32, i32* %7661
  %7663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7663, align 1
  %7664 = and i32 %7662, 255
  %7665 = call i32 @llvm.ctpop.i32(i32 %7664)
  %7666 = trunc i32 %7665 to i8
  %7667 = and i8 %7666, 1
  %7668 = xor i8 %7667, 1
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7668, i8* %7669, align 1
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7670, align 1
  %7671 = icmp eq i32 %7662, 0
  %7672 = zext i1 %7671 to i8
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7672, i8* %7673, align 1
  %7674 = lshr i32 %7662, 31
  %7675 = trunc i32 %7674 to i8
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7675, i8* %7676, align 1
  %7677 = lshr i32 %7662, 31
  %7678 = xor i32 %7674, %7677
  %7679 = add i32 %7678, %7677
  %7680 = icmp eq i32 %7679, 2
  %7681 = zext i1 %7680 to i8
  %7682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7681, i8* %7682, align 1
  store %struct.Memory* %loadMem_40cf67, %struct.Memory** %MEMORY
  %loadMem_40cf6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7684 = getelementptr inbounds %struct.GPR, %struct.GPR* %7683, i32 0, i32 33
  %7685 = getelementptr inbounds %struct.Reg, %struct.Reg* %7684, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %7685 to i64*
  %7686 = load i64, i64* %PC.i615
  %7687 = add i64 %7686, 205
  %7688 = load i64, i64* %PC.i615
  %7689 = add i64 %7688, 6
  %7690 = load i64, i64* %PC.i615
  %7691 = add i64 %7690, 6
  store i64 %7691, i64* %PC.i615
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7693 = load i8, i8* %7692, align 1
  %7694 = icmp eq i8 %7693, 0
  %7695 = zext i1 %7694 to i8
  store i8 %7695, i8* %BRANCH_TAKEN, align 1
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7697 = select i1 %7694, i64 %7687, i64 %7689
  store i64 %7697, i64* %7696, align 8
  store %struct.Memory* %loadMem_40cf6b, %struct.Memory** %MEMORY
  %loadBr_40cf6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40cf6b = icmp eq i8 %loadBr_40cf6b, 1
  br i1 %cmpBr_40cf6b, label %block_.L_40d038, label %block_40cf71

block_40cf71:                                     ; preds = %block_40cf67
  %loadMem_40cf71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 33
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 1
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %RAX.i614 = bitcast %union.anon* %7703 to i64*
  %7704 = load i64, i64* %PC.i613
  %7705 = add i64 %7704, 10
  store i64 %7705, i64* %PC.i613
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i614, align 8
  store %struct.Memory* %loadMem_40cf71, %struct.Memory** %MEMORY
  %loadMem_40cf7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7707 = getelementptr inbounds %struct.GPR, %struct.GPR* %7706, i32 0, i32 33
  %7708 = getelementptr inbounds %struct.Reg, %struct.Reg* %7707, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %7708 to i64*
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7710 = getelementptr inbounds %struct.GPR, %struct.GPR* %7709, i32 0, i32 5
  %7711 = getelementptr inbounds %struct.Reg, %struct.Reg* %7710, i32 0, i32 0
  %RCX.i611 = bitcast %union.anon* %7711 to i64*
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 15
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %RBP.i612 = bitcast %union.anon* %7714 to i64*
  %7715 = load i64, i64* %RBP.i612
  %7716 = sub i64 %7715, 24
  %7717 = load i64, i64* %PC.i610
  %7718 = add i64 %7717, 4
  store i64 %7718, i64* %PC.i610
  %7719 = inttoptr i64 %7716 to i32*
  %7720 = load i32, i32* %7719
  %7721 = sext i32 %7720 to i64
  store i64 %7721, i64* %RCX.i611, align 8
  store %struct.Memory* %loadMem_40cf7b, %struct.Memory** %MEMORY
  %loadMem_40cf7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7723 = getelementptr inbounds %struct.GPR, %struct.GPR* %7722, i32 0, i32 33
  %7724 = getelementptr inbounds %struct.Reg, %struct.Reg* %7723, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %7724 to i64*
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7726 = getelementptr inbounds %struct.GPR, %struct.GPR* %7725, i32 0, i32 5
  %7727 = getelementptr inbounds %struct.Reg, %struct.Reg* %7726, i32 0, i32 0
  %RCX.i608 = bitcast %union.anon* %7727 to i64*
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7729 = getelementptr inbounds %struct.GPR, %struct.GPR* %7728, i32 0, i32 7
  %7730 = getelementptr inbounds %struct.Reg, %struct.Reg* %7729, i32 0, i32 0
  %RDX.i609 = bitcast %union.anon* %7730 to i64*
  %7731 = load i64, i64* %RCX.i608
  %7732 = mul i64 %7731, 4
  %7733 = add i64 %7732, 8807744
  %7734 = load i64, i64* %PC.i607
  %7735 = add i64 %7734, 7
  store i64 %7735, i64* %PC.i607
  %7736 = inttoptr i64 %7733 to i32*
  %7737 = load i32, i32* %7736
  %7738 = zext i32 %7737 to i64
  store i64 %7738, i64* %RDX.i609, align 8
  store %struct.Memory* %loadMem_40cf7f, %struct.Memory** %MEMORY
  %loadMem_40cf86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7740 = getelementptr inbounds %struct.GPR, %struct.GPR* %7739, i32 0, i32 33
  %7741 = getelementptr inbounds %struct.Reg, %struct.Reg* %7740, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %7741 to i64*
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 5
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %RCX.i605 = bitcast %union.anon* %7744 to i64*
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7746 = getelementptr inbounds %struct.GPR, %struct.GPR* %7745, i32 0, i32 15
  %7747 = getelementptr inbounds %struct.Reg, %struct.Reg* %7746, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %7747 to i64*
  %7748 = load i64, i64* %RBP.i606
  %7749 = sub i64 %7748, 20
  %7750 = load i64, i64* %PC.i604
  %7751 = add i64 %7750, 4
  store i64 %7751, i64* %PC.i604
  %7752 = inttoptr i64 %7749 to i32*
  %7753 = load i32, i32* %7752
  %7754 = sext i32 %7753 to i64
  store i64 %7754, i64* %RCX.i605, align 8
  store %struct.Memory* %loadMem_40cf86, %struct.Memory** %MEMORY
  %loadMem_40cf8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7756 = getelementptr inbounds %struct.GPR, %struct.GPR* %7755, i32 0, i32 33
  %7757 = getelementptr inbounds %struct.Reg, %struct.Reg* %7756, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %7757 to i64*
  %7758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7759 = getelementptr inbounds %struct.GPR, %struct.GPR* %7758, i32 0, i32 7
  %7760 = getelementptr inbounds %struct.Reg, %struct.Reg* %7759, i32 0, i32 0
  %EDX.i602 = bitcast %union.anon* %7760 to i32*
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7762 = getelementptr inbounds %struct.GPR, %struct.GPR* %7761, i32 0, i32 5
  %7763 = getelementptr inbounds %struct.Reg, %struct.Reg* %7762, i32 0, i32 0
  %RCX.i603 = bitcast %union.anon* %7763 to i64*
  %7764 = load i64, i64* %RCX.i603
  %7765 = mul i64 %7764, 4
  %7766 = add i64 %7765, 8807744
  %7767 = load i32, i32* %EDX.i602
  %7768 = zext i32 %7767 to i64
  %7769 = load i64, i64* %PC.i601
  %7770 = add i64 %7769, 7
  store i64 %7770, i64* %PC.i601
  %7771 = inttoptr i64 %7766 to i32*
  store i32 %7767, i32* %7771
  store %struct.Memory* %loadMem_40cf8a, %struct.Memory** %MEMORY
  %loadMem_40cf91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 33
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %7774 to i64*
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 7
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %RDX.i599 = bitcast %union.anon* %7777 to i64*
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 15
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %7780 to i64*
  %7781 = load i64, i64* %RBP.i600
  %7782 = sub i64 %7781, 28
  %7783 = load i64, i64* %PC.i598
  %7784 = add i64 %7783, 3
  store i64 %7784, i64* %PC.i598
  %7785 = inttoptr i64 %7782 to i32*
  %7786 = load i32, i32* %7785
  %7787 = zext i32 %7786 to i64
  store i64 %7787, i64* %RDX.i599, align 8
  store %struct.Memory* %loadMem_40cf91, %struct.Memory** %MEMORY
  %loadMem_40cf94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7789 = getelementptr inbounds %struct.GPR, %struct.GPR* %7788, i32 0, i32 33
  %7790 = getelementptr inbounds %struct.Reg, %struct.Reg* %7789, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %7790 to i64*
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 5
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %7793 to i64*
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7795 = getelementptr inbounds %struct.GPR, %struct.GPR* %7794, i32 0, i32 15
  %7796 = getelementptr inbounds %struct.Reg, %struct.Reg* %7795, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %7796 to i64*
  %7797 = load i64, i64* %RBP.i597
  %7798 = sub i64 %7797, 24
  %7799 = load i64, i64* %PC.i595
  %7800 = add i64 %7799, 4
  store i64 %7800, i64* %PC.i595
  %7801 = inttoptr i64 %7798 to i32*
  %7802 = load i32, i32* %7801
  %7803 = sext i32 %7802 to i64
  store i64 %7803, i64* %RCX.i596, align 8
  store %struct.Memory* %loadMem_40cf94, %struct.Memory** %MEMORY
  %loadMem_40cf98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7805 = getelementptr inbounds %struct.GPR, %struct.GPR* %7804, i32 0, i32 33
  %7806 = getelementptr inbounds %struct.Reg, %struct.Reg* %7805, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %7806 to i64*
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7808 = getelementptr inbounds %struct.GPR, %struct.GPR* %7807, i32 0, i32 7
  %7809 = getelementptr inbounds %struct.Reg, %struct.Reg* %7808, i32 0, i32 0
  %EDX.i593 = bitcast %union.anon* %7809 to i32*
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 5
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %7812 to i64*
  %7813 = load i64, i64* %RCX.i594
  %7814 = mul i64 %7813, 4
  %7815 = add i64 %7814, 8807744
  %7816 = load i32, i32* %EDX.i593
  %7817 = zext i32 %7816 to i64
  %7818 = load i64, i64* %PC.i592
  %7819 = add i64 %7818, 7
  store i64 %7819, i64* %PC.i592
  %7820 = inttoptr i64 %7815 to i32*
  store i32 %7816, i32* %7820
  store %struct.Memory* %loadMem_40cf98, %struct.Memory** %MEMORY
  %loadMem_40cf9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7822 = getelementptr inbounds %struct.GPR, %struct.GPR* %7821, i32 0, i32 33
  %7823 = getelementptr inbounds %struct.Reg, %struct.Reg* %7822, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %7823 to i64*
  %7824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7825 = getelementptr inbounds %struct.GPR, %struct.GPR* %7824, i32 0, i32 5
  %7826 = getelementptr inbounds %struct.Reg, %struct.Reg* %7825, i32 0, i32 0
  %RCX.i590 = bitcast %union.anon* %7826 to i64*
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 15
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %RBP.i591 = bitcast %union.anon* %7829 to i64*
  %7830 = load i64, i64* %RBP.i591
  %7831 = sub i64 %7830, 24
  %7832 = load i64, i64* %PC.i589
  %7833 = add i64 %7832, 4
  store i64 %7833, i64* %PC.i589
  %7834 = inttoptr i64 %7831 to i32*
  %7835 = load i32, i32* %7834
  %7836 = sext i32 %7835 to i64
  store i64 %7836, i64* %RCX.i590, align 8
  store %struct.Memory* %loadMem_40cf9f, %struct.Memory** %MEMORY
  %loadMem_40cfa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7838 = getelementptr inbounds %struct.GPR, %struct.GPR* %7837, i32 0, i32 33
  %7839 = getelementptr inbounds %struct.Reg, %struct.Reg* %7838, i32 0, i32 0
  %PC.i586 = bitcast %union.anon* %7839 to i64*
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7841 = getelementptr inbounds %struct.GPR, %struct.GPR* %7840, i32 0, i32 5
  %7842 = getelementptr inbounds %struct.Reg, %struct.Reg* %7841, i32 0, i32 0
  %RCX.i587 = bitcast %union.anon* %7842 to i64*
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 7
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %RDX.i588 = bitcast %union.anon* %7845 to i64*
  %7846 = load i64, i64* %RCX.i587
  %7847 = mul i64 %7846, 4
  %7848 = add i64 %7847, 8922032
  %7849 = load i64, i64* %PC.i586
  %7850 = add i64 %7849, 7
  store i64 %7850, i64* %PC.i586
  %7851 = inttoptr i64 %7848 to i32*
  %7852 = load i32, i32* %7851
  %7853 = zext i32 %7852 to i64
  store i64 %7853, i64* %RDX.i588, align 8
  store %struct.Memory* %loadMem_40cfa3, %struct.Memory** %MEMORY
  %loadMem_40cfaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7855 = getelementptr inbounds %struct.GPR, %struct.GPR* %7854, i32 0, i32 33
  %7856 = getelementptr inbounds %struct.Reg, %struct.Reg* %7855, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %7856 to i64*
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 7
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %RDX.i585 = bitcast %union.anon* %7859 to i64*
  %7860 = load i64, i64* %RDX.i585
  %7861 = load i64, i64* %PC.i584
  %7862 = add i64 %7861, 3
  store i64 %7862, i64* %PC.i584
  %7863 = trunc i64 %7860 to i32
  %7864 = add i32 -1, %7863
  %7865 = zext i32 %7864 to i64
  store i64 %7865, i64* %RDX.i585, align 8
  %7866 = icmp ult i32 %7864, %7863
  %7867 = icmp ult i32 %7864, -1
  %7868 = or i1 %7866, %7867
  %7869 = zext i1 %7868 to i8
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7869, i8* %7870, align 1
  %7871 = and i32 %7864, 255
  %7872 = call i32 @llvm.ctpop.i32(i32 %7871)
  %7873 = trunc i32 %7872 to i8
  %7874 = and i8 %7873, 1
  %7875 = xor i8 %7874, 1
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7875, i8* %7876, align 1
  %7877 = xor i64 -1, %7860
  %7878 = trunc i64 %7877 to i32
  %7879 = xor i32 %7878, %7864
  %7880 = lshr i32 %7879, 4
  %7881 = trunc i32 %7880 to i8
  %7882 = and i8 %7881, 1
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7882, i8* %7883, align 1
  %7884 = icmp eq i32 %7864, 0
  %7885 = zext i1 %7884 to i8
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7885, i8* %7886, align 1
  %7887 = lshr i32 %7864, 31
  %7888 = trunc i32 %7887 to i8
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7888, i8* %7889, align 1
  %7890 = lshr i32 %7863, 31
  %7891 = xor i32 %7887, %7890
  %7892 = xor i32 %7887, 1
  %7893 = add i32 %7891, %7892
  %7894 = icmp eq i32 %7893, 2
  %7895 = zext i1 %7894 to i8
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7895, i8* %7896, align 1
  store %struct.Memory* %loadMem_40cfaa, %struct.Memory** %MEMORY
  %loadMem_40cfad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7898 = getelementptr inbounds %struct.GPR, %struct.GPR* %7897, i32 0, i32 33
  %7899 = getelementptr inbounds %struct.Reg, %struct.Reg* %7898, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %7899 to i64*
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7901 = getelementptr inbounds %struct.GPR, %struct.GPR* %7900, i32 0, i32 7
  %7902 = getelementptr inbounds %struct.Reg, %struct.Reg* %7901, i32 0, i32 0
  %EDX.i582 = bitcast %union.anon* %7902 to i32*
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 5
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %RCX.i583 = bitcast %union.anon* %7905 to i64*
  %7906 = load i64, i64* %RCX.i583
  %7907 = mul i64 %7906, 4
  %7908 = add i64 %7907, 8922032
  %7909 = load i32, i32* %EDX.i582
  %7910 = zext i32 %7909 to i64
  %7911 = load i64, i64* %PC.i581
  %7912 = add i64 %7911, 7
  store i64 %7912, i64* %PC.i581
  %7913 = inttoptr i64 %7908 to i32*
  store i32 %7909, i32* %7913
  store %struct.Memory* %loadMem_40cfad, %struct.Memory** %MEMORY
  %loadMem_40cfb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7915 = getelementptr inbounds %struct.GPR, %struct.GPR* %7914, i32 0, i32 33
  %7916 = getelementptr inbounds %struct.Reg, %struct.Reg* %7915, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %7916 to i64*
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7918 = getelementptr inbounds %struct.GPR, %struct.GPR* %7917, i32 0, i32 5
  %7919 = getelementptr inbounds %struct.Reg, %struct.Reg* %7918, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %7919 to i64*
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7921 = getelementptr inbounds %struct.GPR, %struct.GPR* %7920, i32 0, i32 15
  %7922 = getelementptr inbounds %struct.Reg, %struct.Reg* %7921, i32 0, i32 0
  %RBP.i580 = bitcast %union.anon* %7922 to i64*
  %7923 = load i64, i64* %RBP.i580
  %7924 = sub i64 %7923, 20
  %7925 = load i64, i64* %PC.i578
  %7926 = add i64 %7925, 4
  store i64 %7926, i64* %PC.i578
  %7927 = inttoptr i64 %7924 to i32*
  %7928 = load i32, i32* %7927
  %7929 = sext i32 %7928 to i64
  store i64 %7929, i64* %RCX.i579, align 8
  store %struct.Memory* %loadMem_40cfb4, %struct.Memory** %MEMORY
  %loadMem_40cfb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7931 = getelementptr inbounds %struct.GPR, %struct.GPR* %7930, i32 0, i32 33
  %7932 = getelementptr inbounds %struct.Reg, %struct.Reg* %7931, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %7932 to i64*
  %7933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7934 = getelementptr inbounds %struct.GPR, %struct.GPR* %7933, i32 0, i32 5
  %7935 = getelementptr inbounds %struct.Reg, %struct.Reg* %7934, i32 0, i32 0
  %RCX.i576 = bitcast %union.anon* %7935 to i64*
  %7936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7937 = getelementptr inbounds %struct.GPR, %struct.GPR* %7936, i32 0, i32 7
  %7938 = getelementptr inbounds %struct.Reg, %struct.Reg* %7937, i32 0, i32 0
  %RDX.i577 = bitcast %union.anon* %7938 to i64*
  %7939 = load i64, i64* %RCX.i576
  %7940 = mul i64 %7939, 4
  %7941 = add i64 %7940, 8922032
  %7942 = load i64, i64* %PC.i575
  %7943 = add i64 %7942, 7
  store i64 %7943, i64* %PC.i575
  %7944 = inttoptr i64 %7941 to i32*
  %7945 = load i32, i32* %7944
  %7946 = zext i32 %7945 to i64
  store i64 %7946, i64* %RDX.i577, align 8
  store %struct.Memory* %loadMem_40cfb8, %struct.Memory** %MEMORY
  %loadMem_40cfbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7948 = getelementptr inbounds %struct.GPR, %struct.GPR* %7947, i32 0, i32 33
  %7949 = getelementptr inbounds %struct.Reg, %struct.Reg* %7948, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %7949 to i64*
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 7
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %7952 to i64*
  %7953 = load i64, i64* %RDX.i574
  %7954 = load i64, i64* %PC.i573
  %7955 = add i64 %7954, 3
  store i64 %7955, i64* %PC.i573
  %7956 = trunc i64 %7953 to i32
  %7957 = add i32 -1, %7956
  %7958 = zext i32 %7957 to i64
  store i64 %7958, i64* %RDX.i574, align 8
  %7959 = icmp ult i32 %7957, %7956
  %7960 = icmp ult i32 %7957, -1
  %7961 = or i1 %7959, %7960
  %7962 = zext i1 %7961 to i8
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7962, i8* %7963, align 1
  %7964 = and i32 %7957, 255
  %7965 = call i32 @llvm.ctpop.i32(i32 %7964)
  %7966 = trunc i32 %7965 to i8
  %7967 = and i8 %7966, 1
  %7968 = xor i8 %7967, 1
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7968, i8* %7969, align 1
  %7970 = xor i64 -1, %7953
  %7971 = trunc i64 %7970 to i32
  %7972 = xor i32 %7971, %7957
  %7973 = lshr i32 %7972, 4
  %7974 = trunc i32 %7973 to i8
  %7975 = and i8 %7974, 1
  %7976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7975, i8* %7976, align 1
  %7977 = icmp eq i32 %7957, 0
  %7978 = zext i1 %7977 to i8
  %7979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7978, i8* %7979, align 1
  %7980 = lshr i32 %7957, 31
  %7981 = trunc i32 %7980 to i8
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7981, i8* %7982, align 1
  %7983 = lshr i32 %7956, 31
  %7984 = xor i32 %7980, %7983
  %7985 = xor i32 %7980, 1
  %7986 = add i32 %7984, %7985
  %7987 = icmp eq i32 %7986, 2
  %7988 = zext i1 %7987 to i8
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7988, i8* %7989, align 1
  store %struct.Memory* %loadMem_40cfbf, %struct.Memory** %MEMORY
  %loadMem_40cfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7991 = getelementptr inbounds %struct.GPR, %struct.GPR* %7990, i32 0, i32 33
  %7992 = getelementptr inbounds %struct.Reg, %struct.Reg* %7991, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %7992 to i64*
  %7993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7994 = getelementptr inbounds %struct.GPR, %struct.GPR* %7993, i32 0, i32 7
  %7995 = getelementptr inbounds %struct.Reg, %struct.Reg* %7994, i32 0, i32 0
  %EDX.i571 = bitcast %union.anon* %7995 to i32*
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7997 = getelementptr inbounds %struct.GPR, %struct.GPR* %7996, i32 0, i32 5
  %7998 = getelementptr inbounds %struct.Reg, %struct.Reg* %7997, i32 0, i32 0
  %RCX.i572 = bitcast %union.anon* %7998 to i64*
  %7999 = load i64, i64* %RCX.i572
  %8000 = mul i64 %7999, 4
  %8001 = add i64 %8000, 8922032
  %8002 = load i32, i32* %EDX.i571
  %8003 = zext i32 %8002 to i64
  %8004 = load i64, i64* %PC.i570
  %8005 = add i64 %8004, 7
  store i64 %8005, i64* %PC.i570
  %8006 = inttoptr i64 %8001 to i32*
  store i32 %8002, i32* %8006
  store %struct.Memory* %loadMem_40cfc2, %struct.Memory** %MEMORY
  %loadMem_40cfc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 33
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %8009 to i64*
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8011 = getelementptr inbounds %struct.GPR, %struct.GPR* %8010, i32 0, i32 7
  %8012 = getelementptr inbounds %struct.Reg, %struct.Reg* %8011, i32 0, i32 0
  %RDX.i569 = bitcast %union.anon* %8012 to i64*
  %8013 = load i64, i64* %PC.i568
  %8014 = add i64 %8013, 7
  store i64 %8014, i64* %PC.i568
  %8015 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %8016 = zext i32 %8015 to i64
  store i64 %8016, i64* %RDX.i569, align 8
  store %struct.Memory* %loadMem_40cfc9, %struct.Memory** %MEMORY
  %loadMem_40cfd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 33
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %8019 to i64*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 7
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RDX.i567 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RDX.i567
  %8024 = load i64, i64* %PC.i566
  %8025 = add i64 %8024, 3
  store i64 %8025, i64* %PC.i566
  %8026 = xor i64 1, %8023
  %8027 = trunc i64 %8026 to i32
  %8028 = and i64 %8026, 4294967295
  store i64 %8028, i64* %RDX.i567, align 8
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8029, align 1
  %8030 = and i32 %8027, 255
  %8031 = call i32 @llvm.ctpop.i32(i32 %8030)
  %8032 = trunc i32 %8031 to i8
  %8033 = and i8 %8032, 1
  %8034 = xor i8 %8033, 1
  %8035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8034, i8* %8035, align 1
  %8036 = icmp eq i32 %8027, 0
  %8037 = zext i1 %8036 to i8
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8037, i8* %8038, align 1
  %8039 = lshr i32 %8027, 31
  %8040 = trunc i32 %8039 to i8
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8040, i8* %8041, align 1
  %8042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8042, align 1
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8043, align 1
  store %struct.Memory* %loadMem_40cfd0, %struct.Memory** %MEMORY
  %loadMem_40cfd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8045 = getelementptr inbounds %struct.GPR, %struct.GPR* %8044, i32 0, i32 33
  %8046 = getelementptr inbounds %struct.Reg, %struct.Reg* %8045, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %8046 to i64*
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8048 = getelementptr inbounds %struct.GPR, %struct.GPR* %8047, i32 0, i32 7
  %8049 = getelementptr inbounds %struct.Reg, %struct.Reg* %8048, i32 0, i32 0
  %EDX.i565 = bitcast %union.anon* %8049 to i32*
  %8050 = load i32, i32* %EDX.i565
  %8051 = zext i32 %8050 to i64
  %8052 = load i64, i64* %PC.i564
  %8053 = add i64 %8052, 7
  store i64 %8053, i64* %PC.i564
  store i32 %8050, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40cfd3, %struct.Memory** %MEMORY
  %loadMem_40cfda = load %struct.Memory*, %struct.Memory** %MEMORY
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 33
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %8056 to i64*
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8058 = getelementptr inbounds %struct.GPR, %struct.GPR* %8057, i32 0, i32 5
  %8059 = getelementptr inbounds %struct.Reg, %struct.Reg* %8058, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %8059 to i64*
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 15
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %RBP.i563 = bitcast %union.anon* %8062 to i64*
  %8063 = load i64, i64* %RBP.i563
  %8064 = sub i64 %8063, 20
  %8065 = load i64, i64* %PC.i561
  %8066 = add i64 %8065, 4
  store i64 %8066, i64* %PC.i561
  %8067 = inttoptr i64 %8064 to i32*
  %8068 = load i32, i32* %8067
  %8069 = sext i32 %8068 to i64
  store i64 %8069, i64* %RCX.i562, align 8
  store %struct.Memory* %loadMem_40cfda, %struct.Memory** %MEMORY
  %loadMem_40cfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8071 = getelementptr inbounds %struct.GPR, %struct.GPR* %8070, i32 0, i32 33
  %8072 = getelementptr inbounds %struct.Reg, %struct.Reg* %8071, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %8072 to i64*
  %8073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8074 = getelementptr inbounds %struct.GPR, %struct.GPR* %8073, i32 0, i32 5
  %8075 = getelementptr inbounds %struct.Reg, %struct.Reg* %8074, i32 0, i32 0
  %RCX.i560 = bitcast %union.anon* %8075 to i64*
  %8076 = load i64, i64* %RCX.i560
  %8077 = mul i64 %8076, 4
  %8078 = add i64 %8077, 8807744
  %8079 = load i64, i64* %PC.i559
  %8080 = add i64 %8079, 8
  store i64 %8080, i64* %PC.i559
  %8081 = inttoptr i64 %8078 to i32*
  %8082 = load i32, i32* %8081
  %8083 = sext i32 %8082 to i64
  store i64 %8083, i64* %RCX.i560, align 8
  store %struct.Memory* %loadMem_40cfde, %struct.Memory** %MEMORY
  %loadMem_40cfe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8085 = getelementptr inbounds %struct.GPR, %struct.GPR* %8084, i32 0, i32 33
  %8086 = getelementptr inbounds %struct.Reg, %struct.Reg* %8085, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %8086 to i64*
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8088 = getelementptr inbounds %struct.GPR, %struct.GPR* %8087, i32 0, i32 5
  %8089 = getelementptr inbounds %struct.Reg, %struct.Reg* %8088, i32 0, i32 0
  %RCX.i558 = bitcast %union.anon* %8089 to i64*
  %8090 = load i64, i64* %RCX.i558
  %8091 = load i64, i64* %PC.i557
  %8092 = add i64 %8091, 7
  store i64 %8092, i64* %PC.i557
  %8093 = sext i64 %8090 to i128
  %8094 = and i128 %8093, -18446744073709551616
  %8095 = zext i64 %8090 to i128
  %8096 = or i128 %8094, %8095
  %8097 = mul i128 576, %8096
  %8098 = trunc i128 %8097 to i64
  store i64 %8098, i64* %RCX.i558, align 8
  %8099 = sext i64 %8098 to i128
  %8100 = icmp ne i128 %8099, %8097
  %8101 = zext i1 %8100 to i8
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8101, i8* %8102, align 1
  %8103 = trunc i128 %8097 to i32
  %8104 = and i32 %8103, 255
  %8105 = call i32 @llvm.ctpop.i32(i32 %8104)
  %8106 = trunc i32 %8105 to i8
  %8107 = and i8 %8106, 1
  %8108 = xor i8 %8107, 1
  %8109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8108, i8* %8109, align 1
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8110, align 1
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8111, align 1
  %8112 = lshr i64 %8098, 63
  %8113 = trunc i64 %8112 to i8
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8113, i8* %8114, align 1
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8101, i8* %8115, align 1
  store %struct.Memory* %loadMem_40cfe6, %struct.Memory** %MEMORY
  %loadMem_40cfed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 33
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %8118 to i64*
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8120 = getelementptr inbounds %struct.GPR, %struct.GPR* %8119, i32 0, i32 1
  %8121 = getelementptr inbounds %struct.Reg, %struct.Reg* %8120, i32 0, i32 0
  %RAX.i555 = bitcast %union.anon* %8121 to i64*
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 9
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %RSI.i556 = bitcast %union.anon* %8124 to i64*
  %8125 = load i64, i64* %RAX.i555
  %8126 = load i64, i64* %PC.i554
  %8127 = add i64 %8126, 3
  store i64 %8127, i64* %PC.i554
  store i64 %8125, i64* %RSI.i556, align 8
  store %struct.Memory* %loadMem_40cfed, %struct.Memory** %MEMORY
  %loadMem_40cff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8129 = getelementptr inbounds %struct.GPR, %struct.GPR* %8128, i32 0, i32 33
  %8130 = getelementptr inbounds %struct.Reg, %struct.Reg* %8129, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %8130 to i64*
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 5
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %RCX.i552 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 9
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RSI.i553 = bitcast %union.anon* %8136 to i64*
  %8137 = load i64, i64* %RSI.i553
  %8138 = load i64, i64* %RCX.i552
  %8139 = load i64, i64* %PC.i551
  %8140 = add i64 %8139, 3
  store i64 %8140, i64* %PC.i551
  %8141 = add i64 %8138, %8137
  store i64 %8141, i64* %RSI.i553, align 8
  %8142 = icmp ult i64 %8141, %8137
  %8143 = icmp ult i64 %8141, %8138
  %8144 = or i1 %8142, %8143
  %8145 = zext i1 %8144 to i8
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8145, i8* %8146, align 1
  %8147 = trunc i64 %8141 to i32
  %8148 = and i32 %8147, 255
  %8149 = call i32 @llvm.ctpop.i32(i32 %8148)
  %8150 = trunc i32 %8149 to i8
  %8151 = and i8 %8150, 1
  %8152 = xor i8 %8151, 1
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8152, i8* %8153, align 1
  %8154 = xor i64 %8138, %8137
  %8155 = xor i64 %8154, %8141
  %8156 = lshr i64 %8155, 4
  %8157 = trunc i64 %8156 to i8
  %8158 = and i8 %8157, 1
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8158, i8* %8159, align 1
  %8160 = icmp eq i64 %8141, 0
  %8161 = zext i1 %8160 to i8
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8161, i8* %8162, align 1
  %8163 = lshr i64 %8141, 63
  %8164 = trunc i64 %8163 to i8
  %8165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8164, i8* %8165, align 1
  %8166 = lshr i64 %8137, 63
  %8167 = lshr i64 %8138, 63
  %8168 = xor i64 %8163, %8166
  %8169 = xor i64 %8163, %8167
  %8170 = add i64 %8168, %8169
  %8171 = icmp eq i64 %8170, 2
  %8172 = zext i1 %8171 to i8
  %8173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8172, i8* %8173, align 1
  store %struct.Memory* %loadMem_40cff0, %struct.Memory** %MEMORY
  %loadMem_40cff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8175 = getelementptr inbounds %struct.GPR, %struct.GPR* %8174, i32 0, i32 33
  %8176 = getelementptr inbounds %struct.Reg, %struct.Reg* %8175, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %8176 to i64*
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8178 = getelementptr inbounds %struct.GPR, %struct.GPR* %8177, i32 0, i32 5
  %8179 = getelementptr inbounds %struct.Reg, %struct.Reg* %8178, i32 0, i32 0
  %RCX.i549 = bitcast %union.anon* %8179 to i64*
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8181 = getelementptr inbounds %struct.GPR, %struct.GPR* %8180, i32 0, i32 15
  %8182 = getelementptr inbounds %struct.Reg, %struct.Reg* %8181, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %8182 to i64*
  %8183 = load i64, i64* %RBP.i550
  %8184 = sub i64 %8183, 24
  %8185 = load i64, i64* %PC.i548
  %8186 = add i64 %8185, 4
  store i64 %8186, i64* %PC.i548
  %8187 = inttoptr i64 %8184 to i32*
  %8188 = load i32, i32* %8187
  %8189 = sext i32 %8188 to i64
  store i64 %8189, i64* %RCX.i549, align 8
  store %struct.Memory* %loadMem_40cff3, %struct.Memory** %MEMORY
  %loadMem_40cff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 33
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %8192 to i64*
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8194 = getelementptr inbounds %struct.GPR, %struct.GPR* %8193, i32 0, i32 5
  %8195 = getelementptr inbounds %struct.Reg, %struct.Reg* %8194, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %8195 to i64*
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 7
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %RDX.i546 = bitcast %union.anon* %8198 to i64*
  %8199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8200 = getelementptr inbounds %struct.GPR, %struct.GPR* %8199, i32 0, i32 9
  %8201 = getelementptr inbounds %struct.Reg, %struct.Reg* %8200, i32 0, i32 0
  %RSI.i547 = bitcast %union.anon* %8201 to i64*
  %8202 = load i64, i64* %RSI.i547
  %8203 = load i64, i64* %RCX.i545
  %8204 = mul i64 %8203, 4
  %8205 = add i64 %8204, %8202
  %8206 = load i64, i64* %PC.i544
  %8207 = add i64 %8206, 3
  store i64 %8207, i64* %PC.i544
  %8208 = inttoptr i64 %8205 to i32*
  %8209 = load i32, i32* %8208
  %8210 = zext i32 %8209 to i64
  store i64 %8210, i64* %RDX.i546, align 8
  store %struct.Memory* %loadMem_40cff7, %struct.Memory** %MEMORY
  %loadMem_40cffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8212 = getelementptr inbounds %struct.GPR, %struct.GPR* %8211, i32 0, i32 33
  %8213 = getelementptr inbounds %struct.Reg, %struct.Reg* %8212, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %8213 to i64*
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8215 = getelementptr inbounds %struct.GPR, %struct.GPR* %8214, i32 0, i32 7
  %8216 = getelementptr inbounds %struct.Reg, %struct.Reg* %8215, i32 0, i32 0
  %RDX.i543 = bitcast %union.anon* %8216 to i64*
  %8217 = load i64, i64* %RDX.i543
  %8218 = load i64, i64* %PC.i542
  %8219 = add i64 %8218, 7
  store i64 %8219, i64* %PC.i542
  %8220 = trunc i64 %8217 to i32
  %8221 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %8222 = xor i32 %8221, %8220
  %8223 = zext i32 %8222 to i64
  store i64 %8223, i64* %RDX.i543, align 8
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8224, align 1
  %8225 = and i32 %8222, 255
  %8226 = call i32 @llvm.ctpop.i32(i32 %8225)
  %8227 = trunc i32 %8226 to i8
  %8228 = and i8 %8227, 1
  %8229 = xor i8 %8228, 1
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8229, i8* %8230, align 1
  %8231 = icmp eq i32 %8222, 0
  %8232 = zext i1 %8231 to i8
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8232, i8* %8233, align 1
  %8234 = lshr i32 %8222, 31
  %8235 = trunc i32 %8234 to i8
  %8236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8235, i8* %8236, align 1
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8237, align 1
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8238, align 1
  store %struct.Memory* %loadMem_40cffa, %struct.Memory** %MEMORY
  %loadMem_40d001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %8241 to i64*
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 7
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %EDX.i541 = bitcast %union.anon* %8244 to i32*
  %8245 = load i32, i32* %EDX.i541
  %8246 = zext i32 %8245 to i64
  %8247 = load i64, i64* %PC.i540
  %8248 = add i64 %8247, 7
  store i64 %8248, i64* %PC.i540
  store i32 %8245, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d001, %struct.Memory** %MEMORY
  %loadMem_40d008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8250 = getelementptr inbounds %struct.GPR, %struct.GPR* %8249, i32 0, i32 33
  %8251 = getelementptr inbounds %struct.Reg, %struct.Reg* %8250, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %8251 to i64*
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8253 = getelementptr inbounds %struct.GPR, %struct.GPR* %8252, i32 0, i32 5
  %8254 = getelementptr inbounds %struct.Reg, %struct.Reg* %8253, i32 0, i32 0
  %RCX.i538 = bitcast %union.anon* %8254 to i64*
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 15
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %8257 to i64*
  %8258 = load i64, i64* %RBP.i539
  %8259 = sub i64 %8258, 20
  %8260 = load i64, i64* %PC.i537
  %8261 = add i64 %8260, 4
  store i64 %8261, i64* %PC.i537
  %8262 = inttoptr i64 %8259 to i32*
  %8263 = load i32, i32* %8262
  %8264 = sext i32 %8263 to i64
  store i64 %8264, i64* %RCX.i538, align 8
  store %struct.Memory* %loadMem_40d008, %struct.Memory** %MEMORY
  %loadMem_40d00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8266 = getelementptr inbounds %struct.GPR, %struct.GPR* %8265, i32 0, i32 33
  %8267 = getelementptr inbounds %struct.Reg, %struct.Reg* %8266, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %8267 to i64*
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8269 = getelementptr inbounds %struct.GPR, %struct.GPR* %8268, i32 0, i32 5
  %8270 = getelementptr inbounds %struct.Reg, %struct.Reg* %8269, i32 0, i32 0
  %RCX.i536 = bitcast %union.anon* %8270 to i64*
  %8271 = load i64, i64* %RCX.i536
  %8272 = mul i64 %8271, 4
  %8273 = add i64 %8272, 8807744
  %8274 = load i64, i64* %PC.i535
  %8275 = add i64 %8274, 8
  store i64 %8275, i64* %PC.i535
  %8276 = inttoptr i64 %8273 to i32*
  %8277 = load i32, i32* %8276
  %8278 = sext i32 %8277 to i64
  store i64 %8278, i64* %RCX.i536, align 8
  store %struct.Memory* %loadMem_40d00c, %struct.Memory** %MEMORY
  %loadMem_40d014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8280 = getelementptr inbounds %struct.GPR, %struct.GPR* %8279, i32 0, i32 33
  %8281 = getelementptr inbounds %struct.Reg, %struct.Reg* %8280, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %8281 to i64*
  %8282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8283 = getelementptr inbounds %struct.GPR, %struct.GPR* %8282, i32 0, i32 5
  %8284 = getelementptr inbounds %struct.Reg, %struct.Reg* %8283, i32 0, i32 0
  %RCX.i534 = bitcast %union.anon* %8284 to i64*
  %8285 = load i64, i64* %RCX.i534
  %8286 = load i64, i64* %PC.i533
  %8287 = add i64 %8286, 7
  store i64 %8287, i64* %PC.i533
  %8288 = sext i64 %8285 to i128
  %8289 = and i128 %8288, -18446744073709551616
  %8290 = zext i64 %8285 to i128
  %8291 = or i128 %8289, %8290
  %8292 = mul i128 576, %8291
  %8293 = trunc i128 %8292 to i64
  store i64 %8293, i64* %RCX.i534, align 8
  %8294 = sext i64 %8293 to i128
  %8295 = icmp ne i128 %8294, %8292
  %8296 = zext i1 %8295 to i8
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8296, i8* %8297, align 1
  %8298 = trunc i128 %8292 to i32
  %8299 = and i32 %8298, 255
  %8300 = call i32 @llvm.ctpop.i32(i32 %8299)
  %8301 = trunc i32 %8300 to i8
  %8302 = and i8 %8301, 1
  %8303 = xor i8 %8302, 1
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8303, i8* %8304, align 1
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8305, align 1
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8306, align 1
  %8307 = lshr i64 %8293, 63
  %8308 = trunc i64 %8307 to i8
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8308, i8* %8309, align 1
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8296, i8* %8310, align 1
  store %struct.Memory* %loadMem_40d014, %struct.Memory** %MEMORY
  %loadMem_40d01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8312 = getelementptr inbounds %struct.GPR, %struct.GPR* %8311, i32 0, i32 33
  %8313 = getelementptr inbounds %struct.Reg, %struct.Reg* %8312, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %8313 to i64*
  %8314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8315 = getelementptr inbounds %struct.GPR, %struct.GPR* %8314, i32 0, i32 1
  %8316 = getelementptr inbounds %struct.Reg, %struct.Reg* %8315, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %8316 to i64*
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8318 = getelementptr inbounds %struct.GPR, %struct.GPR* %8317, i32 0, i32 5
  %8319 = getelementptr inbounds %struct.Reg, %struct.Reg* %8318, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %8319 to i64*
  %8320 = load i64, i64* %RAX.i531
  %8321 = load i64, i64* %RCX.i532
  %8322 = load i64, i64* %PC.i530
  %8323 = add i64 %8322, 3
  store i64 %8323, i64* %PC.i530
  %8324 = add i64 %8321, %8320
  store i64 %8324, i64* %RAX.i531, align 8
  %8325 = icmp ult i64 %8324, %8320
  %8326 = icmp ult i64 %8324, %8321
  %8327 = or i1 %8325, %8326
  %8328 = zext i1 %8327 to i8
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8328, i8* %8329, align 1
  %8330 = trunc i64 %8324 to i32
  %8331 = and i32 %8330, 255
  %8332 = call i32 @llvm.ctpop.i32(i32 %8331)
  %8333 = trunc i32 %8332 to i8
  %8334 = and i8 %8333, 1
  %8335 = xor i8 %8334, 1
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8335, i8* %8336, align 1
  %8337 = xor i64 %8321, %8320
  %8338 = xor i64 %8337, %8324
  %8339 = lshr i64 %8338, 4
  %8340 = trunc i64 %8339 to i8
  %8341 = and i8 %8340, 1
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8341, i8* %8342, align 1
  %8343 = icmp eq i64 %8324, 0
  %8344 = zext i1 %8343 to i8
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8344, i8* %8345, align 1
  %8346 = lshr i64 %8324, 63
  %8347 = trunc i64 %8346 to i8
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8347, i8* %8348, align 1
  %8349 = lshr i64 %8320, 63
  %8350 = lshr i64 %8321, 63
  %8351 = xor i64 %8346, %8349
  %8352 = xor i64 %8346, %8350
  %8353 = add i64 %8351, %8352
  %8354 = icmp eq i64 %8353, 2
  %8355 = zext i1 %8354 to i8
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8355, i8* %8356, align 1
  store %struct.Memory* %loadMem_40d01b, %struct.Memory** %MEMORY
  %loadMem_40d01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8358 = getelementptr inbounds %struct.GPR, %struct.GPR* %8357, i32 0, i32 33
  %8359 = getelementptr inbounds %struct.Reg, %struct.Reg* %8358, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %8359 to i64*
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8361 = getelementptr inbounds %struct.GPR, %struct.GPR* %8360, i32 0, i32 5
  %8362 = getelementptr inbounds %struct.Reg, %struct.Reg* %8361, i32 0, i32 0
  %RCX.i528 = bitcast %union.anon* %8362 to i64*
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 15
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %RBP.i529 = bitcast %union.anon* %8365 to i64*
  %8366 = load i64, i64* %RBP.i529
  %8367 = sub i64 %8366, 20
  %8368 = load i64, i64* %PC.i527
  %8369 = add i64 %8368, 4
  store i64 %8369, i64* %PC.i527
  %8370 = inttoptr i64 %8367 to i32*
  %8371 = load i32, i32* %8370
  %8372 = sext i32 %8371 to i64
  store i64 %8372, i64* %RCX.i528, align 8
  store %struct.Memory* %loadMem_40d01e, %struct.Memory** %MEMORY
  %loadMem_40d022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 33
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %8375 to i64*
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 1
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %RAX.i524 = bitcast %union.anon* %8378 to i64*
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8380 = getelementptr inbounds %struct.GPR, %struct.GPR* %8379, i32 0, i32 5
  %8381 = getelementptr inbounds %struct.Reg, %struct.Reg* %8380, i32 0, i32 0
  %RCX.i525 = bitcast %union.anon* %8381 to i64*
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 7
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %RDX.i526 = bitcast %union.anon* %8384 to i64*
  %8385 = load i64, i64* %RAX.i524
  %8386 = load i64, i64* %RCX.i525
  %8387 = mul i64 %8386, 4
  %8388 = add i64 %8387, %8385
  %8389 = load i64, i64* %PC.i523
  %8390 = add i64 %8389, 3
  store i64 %8390, i64* %PC.i523
  %8391 = inttoptr i64 %8388 to i32*
  %8392 = load i32, i32* %8391
  %8393 = zext i32 %8392 to i64
  store i64 %8393, i64* %RDX.i526, align 8
  store %struct.Memory* %loadMem_40d022, %struct.Memory** %MEMORY
  %loadMem_40d025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 33
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %8396 to i64*
  %8397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8398 = getelementptr inbounds %struct.GPR, %struct.GPR* %8397, i32 0, i32 7
  %8399 = getelementptr inbounds %struct.Reg, %struct.Reg* %8398, i32 0, i32 0
  %RDX.i522 = bitcast %union.anon* %8399 to i64*
  %8400 = load i64, i64* %RDX.i522
  %8401 = load i64, i64* %PC.i521
  %8402 = add i64 %8401, 7
  store i64 %8402, i64* %PC.i521
  %8403 = trunc i64 %8400 to i32
  %8404 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %8405 = xor i32 %8404, %8403
  %8406 = zext i32 %8405 to i64
  store i64 %8406, i64* %RDX.i522, align 8
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8407, align 1
  %8408 = and i32 %8405, 255
  %8409 = call i32 @llvm.ctpop.i32(i32 %8408)
  %8410 = trunc i32 %8409 to i8
  %8411 = and i8 %8410, 1
  %8412 = xor i8 %8411, 1
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8412, i8* %8413, align 1
  %8414 = icmp eq i32 %8405, 0
  %8415 = zext i1 %8414 to i8
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8415, i8* %8416, align 1
  %8417 = lshr i32 %8405, 31
  %8418 = trunc i32 %8417 to i8
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8418, i8* %8419, align 1
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8420, align 1
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8421, align 1
  store %struct.Memory* %loadMem_40d025, %struct.Memory** %MEMORY
  %loadMem_40d02c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 7
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %EDX.i520 = bitcast %union.anon* %8427 to i32*
  %8428 = load i32, i32* %EDX.i520
  %8429 = zext i32 %8428 to i64
  %8430 = load i64, i64* %PC.i519
  %8431 = add i64 %8430, 7
  store i64 %8431, i64* %PC.i519
  store i32 %8428, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d02c, %struct.Memory** %MEMORY
  %loadMem_40d033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 33
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %8434 to i64*
  %8435 = load i64, i64* %PC.i518
  %8436 = add i64 %8435, 1489
  %8437 = load i64, i64* %PC.i518
  %8438 = add i64 %8437, 5
  store i64 %8438, i64* %PC.i518
  %8439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8436, i64* %8439, align 8
  store %struct.Memory* %loadMem_40d033, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d038:                                  ; preds = %block_40cf67, %block_40cf55, %block_.L_40cf43
  %loadMem_40d038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 33
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %8442 to i64*
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 15
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %8445 to i64*
  %8446 = load i64, i64* %RBP.i517
  %8447 = sub i64 %8446, 32
  %8448 = load i64, i64* %PC.i516
  %8449 = add i64 %8448, 4
  store i64 %8449, i64* %PC.i516
  %8450 = inttoptr i64 %8447 to i32*
  %8451 = load i32, i32* %8450
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8452, align 1
  %8453 = and i32 %8451, 255
  %8454 = call i32 @llvm.ctpop.i32(i32 %8453)
  %8455 = trunc i32 %8454 to i8
  %8456 = and i8 %8455, 1
  %8457 = xor i8 %8456, 1
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8457, i8* %8458, align 1
  %8459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8459, align 1
  %8460 = icmp eq i32 %8451, 0
  %8461 = zext i1 %8460 to i8
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8461, i8* %8462, align 1
  %8463 = lshr i32 %8451, 31
  %8464 = trunc i32 %8463 to i8
  %8465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8464, i8* %8465, align 1
  %8466 = lshr i32 %8451, 31
  %8467 = xor i32 %8463, %8466
  %8468 = add i32 %8467, %8466
  %8469 = icmp eq i32 %8468, 2
  %8470 = zext i1 %8469 to i8
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8470, i8* %8471, align 1
  store %struct.Memory* %loadMem_40d038, %struct.Memory** %MEMORY
  %loadMem_40d03c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 33
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %8474 to i64*
  %8475 = load i64, i64* %PC.i515
  %8476 = add i64 %8475, 464
  %8477 = load i64, i64* %PC.i515
  %8478 = add i64 %8477, 6
  %8479 = load i64, i64* %PC.i515
  %8480 = add i64 %8479, 6
  store i64 %8480, i64* %PC.i515
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8482 = load i8, i8* %8481, align 1
  store i8 %8482, i8* %BRANCH_TAKEN, align 1
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8484 = icmp ne i8 %8482, 0
  %8485 = select i1 %8484, i64 %8476, i64 %8478
  store i64 %8485, i64* %8483, align 8
  store %struct.Memory* %loadMem_40d03c, %struct.Memory** %MEMORY
  %loadBr_40d03c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d03c = icmp eq i8 %loadBr_40d03c, 1
  br i1 %cmpBr_40d03c, label %block_.L_40d20c, label %block_40d042

block_40d042:                                     ; preds = %block_.L_40d038
  %loadMem_40d042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8487 = getelementptr inbounds %struct.GPR, %struct.GPR* %8486, i32 0, i32 33
  %8488 = getelementptr inbounds %struct.Reg, %struct.Reg* %8487, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %8488 to i64*
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 1
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %8491 to i64*
  %8492 = load i64, i64* %PC.i513
  %8493 = add i64 %8492, 5
  store i64 %8493, i64* %PC.i513
  store i64 2, i64* %RAX.i514, align 8
  store %struct.Memory* %loadMem_40d042, %struct.Memory** %MEMORY
  %loadMem_40d047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8495 = getelementptr inbounds %struct.GPR, %struct.GPR* %8494, i32 0, i32 33
  %8496 = getelementptr inbounds %struct.Reg, %struct.Reg* %8495, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %8496 to i64*
  %8497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8498 = getelementptr inbounds %struct.GPR, %struct.GPR* %8497, i32 0, i32 5
  %8499 = getelementptr inbounds %struct.Reg, %struct.Reg* %8498, i32 0, i32 0
  %RCX.i511 = bitcast %union.anon* %8499 to i64*
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8501 = getelementptr inbounds %struct.GPR, %struct.GPR* %8500, i32 0, i32 15
  %8502 = getelementptr inbounds %struct.Reg, %struct.Reg* %8501, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %8502 to i64*
  %8503 = load i64, i64* %RBP.i512
  %8504 = sub i64 %8503, 24
  %8505 = load i64, i64* %PC.i510
  %8506 = add i64 %8505, 4
  store i64 %8506, i64* %PC.i510
  %8507 = inttoptr i64 %8504 to i32*
  %8508 = load i32, i32* %8507
  %8509 = sext i32 %8508 to i64
  store i64 %8509, i64* %RCX.i511, align 8
  store %struct.Memory* %loadMem_40d047, %struct.Memory** %MEMORY
  %loadMem_40d04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8511 = getelementptr inbounds %struct.GPR, %struct.GPR* %8510, i32 0, i32 33
  %8512 = getelementptr inbounds %struct.Reg, %struct.Reg* %8511, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %8512 to i64*
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8514 = getelementptr inbounds %struct.GPR, %struct.GPR* %8513, i32 0, i32 5
  %8515 = getelementptr inbounds %struct.Reg, %struct.Reg* %8514, i32 0, i32 0
  %RCX.i508 = bitcast %union.anon* %8515 to i64*
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8517 = getelementptr inbounds %struct.GPR, %struct.GPR* %8516, i32 0, i32 7
  %8518 = getelementptr inbounds %struct.Reg, %struct.Reg* %8517, i32 0, i32 0
  %RDX.i509 = bitcast %union.anon* %8518 to i64*
  %8519 = load i64, i64* %RCX.i508
  %8520 = mul i64 %8519, 4
  %8521 = add i64 %8520, 8807744
  %8522 = load i64, i64* %PC.i507
  %8523 = add i64 %8522, 7
  store i64 %8523, i64* %PC.i507
  %8524 = inttoptr i64 %8521 to i32*
  %8525 = load i32, i32* %8524
  %8526 = zext i32 %8525 to i64
  store i64 %8526, i64* %RDX.i509, align 8
  store %struct.Memory* %loadMem_40d04b, %struct.Memory** %MEMORY
  %loadMem_40d052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8528 = getelementptr inbounds %struct.GPR, %struct.GPR* %8527, i32 0, i32 33
  %8529 = getelementptr inbounds %struct.Reg, %struct.Reg* %8528, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %8529 to i64*
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 1
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %EAX.i505 = bitcast %union.anon* %8532 to i32*
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 15
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %8535 to i64*
  %8536 = load i64, i64* %RBP.i506
  %8537 = sub i64 %8536, 52
  %8538 = load i32, i32* %EAX.i505
  %8539 = zext i32 %8538 to i64
  %8540 = load i64, i64* %PC.i504
  %8541 = add i64 %8540, 3
  store i64 %8541, i64* %PC.i504
  %8542 = inttoptr i64 %8537 to i32*
  store i32 %8538, i32* %8542
  store %struct.Memory* %loadMem_40d052, %struct.Memory** %MEMORY
  %loadMem_40d055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 33
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %8545 to i64*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 7
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %EDX.i502 = bitcast %union.anon* %8548 to i32*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 1
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %8551 to i64*
  %8552 = load i32, i32* %EDX.i502
  %8553 = zext i32 %8552 to i64
  %8554 = load i64, i64* %PC.i501
  %8555 = add i64 %8554, 2
  store i64 %8555, i64* %PC.i501
  %8556 = and i64 %8553, 4294967295
  store i64 %8556, i64* %RAX.i503, align 8
  store %struct.Memory* %loadMem_40d055, %struct.Memory** %MEMORY
  %loadMem_40d057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 33
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %8559 to i64*
  %8560 = load i64, i64* %PC.i500
  %8561 = add i64 %8560, 1
  store i64 %8561, i64* %PC.i500
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8564 = bitcast %union.anon* %8563 to i32*
  %8565 = load i32, i32* %8564, align 8
  %8566 = sext i32 %8565 to i64
  %8567 = lshr i64 %8566, 32
  store i64 %8567, i64* %8562, align 8
  store %struct.Memory* %loadMem_40d057, %struct.Memory** %MEMORY
  %loadMem_40d058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8569 = getelementptr inbounds %struct.GPR, %struct.GPR* %8568, i32 0, i32 33
  %8570 = getelementptr inbounds %struct.Reg, %struct.Reg* %8569, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %8570 to i64*
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8572 = getelementptr inbounds %struct.GPR, %struct.GPR* %8571, i32 0, i32 9
  %8573 = getelementptr inbounds %struct.Reg, %struct.Reg* %8572, i32 0, i32 0
  %RSI.i498 = bitcast %union.anon* %8573 to i64*
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8575 = getelementptr inbounds %struct.GPR, %struct.GPR* %8574, i32 0, i32 15
  %8576 = getelementptr inbounds %struct.Reg, %struct.Reg* %8575, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %8576 to i64*
  %8577 = load i64, i64* %RBP.i499
  %8578 = sub i64 %8577, 52
  %8579 = load i64, i64* %PC.i497
  %8580 = add i64 %8579, 3
  store i64 %8580, i64* %PC.i497
  %8581 = inttoptr i64 %8578 to i32*
  %8582 = load i32, i32* %8581
  %8583 = zext i32 %8582 to i64
  store i64 %8583, i64* %RSI.i498, align 8
  store %struct.Memory* %loadMem_40d058, %struct.Memory** %MEMORY
  %loadMem_40d05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8585 = getelementptr inbounds %struct.GPR, %struct.GPR* %8584, i32 0, i32 33
  %8586 = getelementptr inbounds %struct.Reg, %struct.Reg* %8585, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %8586 to i64*
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8588 = getelementptr inbounds %struct.GPR, %struct.GPR* %8587, i32 0, i32 9
  %8589 = getelementptr inbounds %struct.Reg, %struct.Reg* %8588, i32 0, i32 0
  %ESI.i493 = bitcast %union.anon* %8589 to i32*
  %8590 = load i32, i32* %ESI.i493
  %8591 = zext i32 %8590 to i64
  %8592 = load i64, i64* %PC.i492
  %8593 = add i64 %8592, 2
  store i64 %8593, i64* %PC.i492
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8595 = bitcast %union.anon* %8594 to i32*
  %8596 = load i32, i32* %8595, align 8
  %8597 = zext i32 %8596 to i64
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %8599 = bitcast %union.anon* %8598 to i32*
  %8600 = load i32, i32* %8599, align 8
  %8601 = zext i32 %8600 to i64
  %8602 = shl i64 %8591, 32
  %8603 = ashr exact i64 %8602, 32
  %8604 = shl i64 %8601, 32
  %8605 = or i64 %8604, %8597
  %8606 = sdiv i64 %8605, %8603
  %8607 = shl i64 %8606, 32
  %8608 = ashr exact i64 %8607, 32
  %8609 = icmp eq i64 %8606, %8608
  br i1 %8609, label %8614, label %8610

; <label>:8610:                                   ; preds = %block_40d042
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8612 = load i64, i64* %8611, align 8
  %8613 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %8612, %struct.Memory* %loadMem_40d05b)
  br label %routine_idivl__esi.exit

; <label>:8614:                                   ; preds = %block_40d042
  %8615 = srem i64 %8605, %8603
  %8616 = getelementptr inbounds %union.anon, %union.anon* %8594, i64 0, i32 0
  %8617 = and i64 %8606, 4294967295
  store i64 %8617, i64* %8616, align 8
  %8618 = getelementptr inbounds %union.anon, %union.anon* %8598, i64 0, i32 0
  %8619 = and i64 %8615, 4294967295
  store i64 %8619, i64* %8618, align 8
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8620, align 1
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %8621, align 1
  %8622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8622, align 1
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8623, align 1
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8624, align 1
  %8625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8625, align 1
  br label %routine_idivl__esi.exit

routine_idivl__esi.exit:                          ; preds = %8610, %8614
  %8626 = phi %struct.Memory* [ %8613, %8610 ], [ %loadMem_40d05b, %8614 ]
  store %struct.Memory* %8626, %struct.Memory** %MEMORY
  %loadMem_40d05d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8628 = getelementptr inbounds %struct.GPR, %struct.GPR* %8627, i32 0, i32 33
  %8629 = getelementptr inbounds %struct.Reg, %struct.Reg* %8628, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %8629 to i64*
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8631 = getelementptr inbounds %struct.GPR, %struct.GPR* %8630, i32 0, i32 7
  %8632 = getelementptr inbounds %struct.Reg, %struct.Reg* %8631, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %8632 to i32*
  %8633 = load i32, i32* %EDX.i
  %8634 = zext i32 %8633 to i64
  %8635 = load i64, i64* %PC.i491
  %8636 = add i64 %8635, 3
  store i64 %8636, i64* %PC.i491
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8637, align 1
  %8638 = and i32 %8633, 255
  %8639 = call i32 @llvm.ctpop.i32(i32 %8638)
  %8640 = trunc i32 %8639 to i8
  %8641 = and i8 %8640, 1
  %8642 = xor i8 %8641, 1
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8642, i8* %8643, align 1
  %8644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8644, align 1
  %8645 = icmp eq i32 %8633, 0
  %8646 = zext i1 %8645 to i8
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8646, i8* %8647, align 1
  %8648 = lshr i32 %8633, 31
  %8649 = trunc i32 %8648 to i8
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8649, i8* %8650, align 1
  %8651 = lshr i32 %8633, 31
  %8652 = xor i32 %8648, %8651
  %8653 = add i32 %8652, %8651
  %8654 = icmp eq i32 %8653, 2
  %8655 = zext i1 %8654 to i8
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8655, i8* %8656, align 1
  store %struct.Memory* %loadMem_40d05d, %struct.Memory** %MEMORY
  %loadMem_40d060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 33
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %PC.i490 = bitcast %union.anon* %8659 to i64*
  %8660 = load i64, i64* %PC.i490
  %8661 = add i64 %8660, 217
  %8662 = load i64, i64* %PC.i490
  %8663 = add i64 %8662, 6
  %8664 = load i64, i64* %PC.i490
  %8665 = add i64 %8664, 6
  store i64 %8665, i64* %PC.i490
  %8666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8667 = load i8, i8* %8666, align 1
  store i8 %8667, i8* %BRANCH_TAKEN, align 1
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8669 = icmp ne i8 %8667, 0
  %8670 = select i1 %8669, i64 %8661, i64 %8663
  store i64 %8670, i64* %8668, align 8
  store %struct.Memory* %loadMem_40d060, %struct.Memory** %MEMORY
  %loadBr_40d060 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d060 = icmp eq i8 %loadBr_40d060, 1
  br i1 %cmpBr_40d060, label %block_.L_40d139, label %block_40d066

block_40d066:                                     ; preds = %routine_idivl__esi.exit
  %loadMem_40d066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8672 = getelementptr inbounds %struct.GPR, %struct.GPR* %8671, i32 0, i32 33
  %8673 = getelementptr inbounds %struct.Reg, %struct.Reg* %8672, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %8673 to i64*
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8675 = getelementptr inbounds %struct.GPR, %struct.GPR* %8674, i32 0, i32 1
  %8676 = getelementptr inbounds %struct.Reg, %struct.Reg* %8675, i32 0, i32 0
  %RAX.i489 = bitcast %union.anon* %8676 to i64*
  %8677 = load i64, i64* %PC.i488
  %8678 = add i64 %8677, 10
  store i64 %8678, i64* %PC.i488
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i489, align 8
  store %struct.Memory* %loadMem_40d066, %struct.Memory** %MEMORY
  %loadMem_40d070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8680 = getelementptr inbounds %struct.GPR, %struct.GPR* %8679, i32 0, i32 33
  %8681 = getelementptr inbounds %struct.Reg, %struct.Reg* %8680, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %8681 to i64*
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8683 = getelementptr inbounds %struct.GPR, %struct.GPR* %8682, i32 0, i32 5
  %8684 = getelementptr inbounds %struct.Reg, %struct.Reg* %8683, i32 0, i32 0
  %RCX.i486 = bitcast %union.anon* %8684 to i64*
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8686 = getelementptr inbounds %struct.GPR, %struct.GPR* %8685, i32 0, i32 15
  %8687 = getelementptr inbounds %struct.Reg, %struct.Reg* %8686, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %8687 to i64*
  %8688 = load i64, i64* %RBP.i487
  %8689 = sub i64 %8688, 28
  %8690 = load i64, i64* %PC.i485
  %8691 = add i64 %8690, 3
  store i64 %8691, i64* %PC.i485
  %8692 = inttoptr i64 %8689 to i32*
  %8693 = load i32, i32* %8692
  %8694 = zext i32 %8693 to i64
  store i64 %8694, i64* %RCX.i486, align 8
  store %struct.Memory* %loadMem_40d070, %struct.Memory** %MEMORY
  %loadMem_40d073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 7
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RDX.i483 = bitcast %union.anon* %8700 to i64*
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8702 = getelementptr inbounds %struct.GPR, %struct.GPR* %8701, i32 0, i32 15
  %8703 = getelementptr inbounds %struct.Reg, %struct.Reg* %8702, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %8703 to i64*
  %8704 = load i64, i64* %RBP.i484
  %8705 = sub i64 %8704, 24
  %8706 = load i64, i64* %PC.i482
  %8707 = add i64 %8706, 4
  store i64 %8707, i64* %PC.i482
  %8708 = inttoptr i64 %8705 to i32*
  %8709 = load i32, i32* %8708
  %8710 = sext i32 %8709 to i64
  store i64 %8710, i64* %RDX.i483, align 8
  store %struct.Memory* %loadMem_40d073, %struct.Memory** %MEMORY
  %loadMem_40d077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 33
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %8713 to i64*
  %8714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8715 = getelementptr inbounds %struct.GPR, %struct.GPR* %8714, i32 0, i32 5
  %8716 = getelementptr inbounds %struct.Reg, %struct.Reg* %8715, i32 0, i32 0
  %ECX.i480 = bitcast %union.anon* %8716 to i32*
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8718 = getelementptr inbounds %struct.GPR, %struct.GPR* %8717, i32 0, i32 7
  %8719 = getelementptr inbounds %struct.Reg, %struct.Reg* %8718, i32 0, i32 0
  %RDX.i481 = bitcast %union.anon* %8719 to i64*
  %8720 = load i64, i64* %RDX.i481
  %8721 = mul i64 %8720, 4
  %8722 = add i64 %8721, 8807744
  %8723 = load i32, i32* %ECX.i480
  %8724 = zext i32 %8723 to i64
  %8725 = load i64, i64* %PC.i479
  %8726 = add i64 %8725, 7
  store i64 %8726, i64* %PC.i479
  %8727 = inttoptr i64 %8722 to i32*
  store i32 %8723, i32* %8727
  store %struct.Memory* %loadMem_40d077, %struct.Memory** %MEMORY
  %loadMem_40d07e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8729 = getelementptr inbounds %struct.GPR, %struct.GPR* %8728, i32 0, i32 33
  %8730 = getelementptr inbounds %struct.Reg, %struct.Reg* %8729, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %8730 to i64*
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8732 = getelementptr inbounds %struct.GPR, %struct.GPR* %8731, i32 0, i32 7
  %8733 = getelementptr inbounds %struct.Reg, %struct.Reg* %8732, i32 0, i32 0
  %RDX.i477 = bitcast %union.anon* %8733 to i64*
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 15
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %RBP.i478 = bitcast %union.anon* %8736 to i64*
  %8737 = load i64, i64* %RBP.i478
  %8738 = sub i64 %8737, 20
  %8739 = load i64, i64* %PC.i476
  %8740 = add i64 %8739, 4
  store i64 %8740, i64* %PC.i476
  %8741 = inttoptr i64 %8738 to i32*
  %8742 = load i32, i32* %8741
  %8743 = sext i32 %8742 to i64
  store i64 %8743, i64* %RDX.i477, align 8
  store %struct.Memory* %loadMem_40d07e, %struct.Memory** %MEMORY
  %loadMem_40d082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8745 = getelementptr inbounds %struct.GPR, %struct.GPR* %8744, i32 0, i32 33
  %8746 = getelementptr inbounds %struct.Reg, %struct.Reg* %8745, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %8746 to i64*
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 7
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %RDX.i475 = bitcast %union.anon* %8749 to i64*
  %8750 = load i64, i64* %RDX.i475
  %8751 = mul i64 %8750, 4
  %8752 = add i64 %8751, 8807744
  %8753 = load i64, i64* %PC.i474
  %8754 = add i64 %8753, 11
  store i64 %8754, i64* %PC.i474
  %8755 = inttoptr i64 %8752 to i32*
  store i32 1, i32* %8755
  store %struct.Memory* %loadMem_40d082, %struct.Memory** %MEMORY
  %loadMem_40d08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8757 = getelementptr inbounds %struct.GPR, %struct.GPR* %8756, i32 0, i32 33
  %8758 = getelementptr inbounds %struct.Reg, %struct.Reg* %8757, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %8758 to i64*
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8760 = getelementptr inbounds %struct.GPR, %struct.GPR* %8759, i32 0, i32 7
  %8761 = getelementptr inbounds %struct.Reg, %struct.Reg* %8760, i32 0, i32 0
  %RDX.i472 = bitcast %union.anon* %8761 to i64*
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8763 = getelementptr inbounds %struct.GPR, %struct.GPR* %8762, i32 0, i32 15
  %8764 = getelementptr inbounds %struct.Reg, %struct.Reg* %8763, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %8764 to i64*
  %8765 = load i64, i64* %RBP.i473
  %8766 = sub i64 %8765, 24
  %8767 = load i64, i64* %PC.i471
  %8768 = add i64 %8767, 4
  store i64 %8768, i64* %PC.i471
  %8769 = inttoptr i64 %8766 to i32*
  %8770 = load i32, i32* %8769
  %8771 = sext i32 %8770 to i64
  store i64 %8771, i64* %RDX.i472, align 8
  store %struct.Memory* %loadMem_40d08d, %struct.Memory** %MEMORY
  %loadMem_40d091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8773 = getelementptr inbounds %struct.GPR, %struct.GPR* %8772, i32 0, i32 33
  %8774 = getelementptr inbounds %struct.Reg, %struct.Reg* %8773, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %8774 to i64*
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 5
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %RCX.i469 = bitcast %union.anon* %8777 to i64*
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 7
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %RDX.i470 = bitcast %union.anon* %8780 to i64*
  %8781 = load i64, i64* %RDX.i470
  %8782 = mul i64 %8781, 4
  %8783 = add i64 %8782, 8922032
  %8784 = load i64, i64* %PC.i468
  %8785 = add i64 %8784, 7
  store i64 %8785, i64* %PC.i468
  %8786 = inttoptr i64 %8783 to i32*
  %8787 = load i32, i32* %8786
  %8788 = zext i32 %8787 to i64
  store i64 %8788, i64* %RCX.i469, align 8
  store %struct.Memory* %loadMem_40d091, %struct.Memory** %MEMORY
  %loadMem_40d098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 33
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %8791 to i64*
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8793 = getelementptr inbounds %struct.GPR, %struct.GPR* %8792, i32 0, i32 5
  %8794 = getelementptr inbounds %struct.Reg, %struct.Reg* %8793, i32 0, i32 0
  %RCX.i467 = bitcast %union.anon* %8794 to i64*
  %8795 = load i64, i64* %RCX.i467
  %8796 = load i64, i64* %PC.i466
  %8797 = add i64 %8796, 3
  store i64 %8797, i64* %PC.i466
  %8798 = trunc i64 %8795 to i32
  %8799 = add i32 -1, %8798
  %8800 = zext i32 %8799 to i64
  store i64 %8800, i64* %RCX.i467, align 8
  %8801 = icmp ult i32 %8799, %8798
  %8802 = icmp ult i32 %8799, -1
  %8803 = or i1 %8801, %8802
  %8804 = zext i1 %8803 to i8
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8804, i8* %8805, align 1
  %8806 = and i32 %8799, 255
  %8807 = call i32 @llvm.ctpop.i32(i32 %8806)
  %8808 = trunc i32 %8807 to i8
  %8809 = and i8 %8808, 1
  %8810 = xor i8 %8809, 1
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8810, i8* %8811, align 1
  %8812 = xor i64 -1, %8795
  %8813 = trunc i64 %8812 to i32
  %8814 = xor i32 %8813, %8799
  %8815 = lshr i32 %8814, 4
  %8816 = trunc i32 %8815 to i8
  %8817 = and i8 %8816, 1
  %8818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8817, i8* %8818, align 1
  %8819 = icmp eq i32 %8799, 0
  %8820 = zext i1 %8819 to i8
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8820, i8* %8821, align 1
  %8822 = lshr i32 %8799, 31
  %8823 = trunc i32 %8822 to i8
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8823, i8* %8824, align 1
  %8825 = lshr i32 %8798, 31
  %8826 = xor i32 %8822, %8825
  %8827 = xor i32 %8822, 1
  %8828 = add i32 %8826, %8827
  %8829 = icmp eq i32 %8828, 2
  %8830 = zext i1 %8829 to i8
  %8831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8830, i8* %8831, align 1
  store %struct.Memory* %loadMem_40d098, %struct.Memory** %MEMORY
  %loadMem_40d09b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8833 = getelementptr inbounds %struct.GPR, %struct.GPR* %8832, i32 0, i32 33
  %8834 = getelementptr inbounds %struct.Reg, %struct.Reg* %8833, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %8834 to i64*
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8836 = getelementptr inbounds %struct.GPR, %struct.GPR* %8835, i32 0, i32 5
  %8837 = getelementptr inbounds %struct.Reg, %struct.Reg* %8836, i32 0, i32 0
  %ECX.i464 = bitcast %union.anon* %8837 to i32*
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 7
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %RDX.i465 = bitcast %union.anon* %8840 to i64*
  %8841 = load i64, i64* %RDX.i465
  %8842 = mul i64 %8841, 4
  %8843 = add i64 %8842, 8922032
  %8844 = load i32, i32* %ECX.i464
  %8845 = zext i32 %8844 to i64
  %8846 = load i64, i64* %PC.i463
  %8847 = add i64 %8846, 7
  store i64 %8847, i64* %PC.i463
  %8848 = inttoptr i64 %8843 to i32*
  store i32 %8844, i32* %8848
  store %struct.Memory* %loadMem_40d09b, %struct.Memory** %MEMORY
  %loadMem_40d0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 33
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %8851 to i64*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 7
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %RDX.i461 = bitcast %union.anon* %8854 to i64*
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 15
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %8857 to i64*
  %8858 = load i64, i64* %RBP.i462
  %8859 = sub i64 %8858, 20
  %8860 = load i64, i64* %PC.i460
  %8861 = add i64 %8860, 4
  store i64 %8861, i64* %PC.i460
  %8862 = inttoptr i64 %8859 to i32*
  %8863 = load i32, i32* %8862
  %8864 = sext i32 %8863 to i64
  store i64 %8864, i64* %RDX.i461, align 8
  store %struct.Memory* %loadMem_40d0a2, %struct.Memory** %MEMORY
  %loadMem_40d0a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8866 = getelementptr inbounds %struct.GPR, %struct.GPR* %8865, i32 0, i32 33
  %8867 = getelementptr inbounds %struct.Reg, %struct.Reg* %8866, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %8867 to i64*
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8869 = getelementptr inbounds %struct.GPR, %struct.GPR* %8868, i32 0, i32 5
  %8870 = getelementptr inbounds %struct.Reg, %struct.Reg* %8869, i32 0, i32 0
  %RCX.i458 = bitcast %union.anon* %8870 to i64*
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8872 = getelementptr inbounds %struct.GPR, %struct.GPR* %8871, i32 0, i32 7
  %8873 = getelementptr inbounds %struct.Reg, %struct.Reg* %8872, i32 0, i32 0
  %RDX.i459 = bitcast %union.anon* %8873 to i64*
  %8874 = load i64, i64* %RDX.i459
  %8875 = mul i64 %8874, 4
  %8876 = add i64 %8875, 8922032
  %8877 = load i64, i64* %PC.i457
  %8878 = add i64 %8877, 7
  store i64 %8878, i64* %PC.i457
  %8879 = inttoptr i64 %8876 to i32*
  %8880 = load i32, i32* %8879
  %8881 = zext i32 %8880 to i64
  store i64 %8881, i64* %RCX.i458, align 8
  store %struct.Memory* %loadMem_40d0a6, %struct.Memory** %MEMORY
  %loadMem_40d0ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8883 = getelementptr inbounds %struct.GPR, %struct.GPR* %8882, i32 0, i32 33
  %8884 = getelementptr inbounds %struct.Reg, %struct.Reg* %8883, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %8884 to i64*
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 5
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %RCX.i456 = bitcast %union.anon* %8887 to i64*
  %8888 = load i64, i64* %RCX.i456
  %8889 = load i64, i64* %PC.i455
  %8890 = add i64 %8889, 3
  store i64 %8890, i64* %PC.i455
  %8891 = trunc i64 %8888 to i32
  %8892 = add i32 -1, %8891
  %8893 = zext i32 %8892 to i64
  store i64 %8893, i64* %RCX.i456, align 8
  %8894 = icmp ult i32 %8892, %8891
  %8895 = icmp ult i32 %8892, -1
  %8896 = or i1 %8894, %8895
  %8897 = zext i1 %8896 to i8
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8897, i8* %8898, align 1
  %8899 = and i32 %8892, 255
  %8900 = call i32 @llvm.ctpop.i32(i32 %8899)
  %8901 = trunc i32 %8900 to i8
  %8902 = and i8 %8901, 1
  %8903 = xor i8 %8902, 1
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8903, i8* %8904, align 1
  %8905 = xor i64 -1, %8888
  %8906 = trunc i64 %8905 to i32
  %8907 = xor i32 %8906, %8892
  %8908 = lshr i32 %8907, 4
  %8909 = trunc i32 %8908 to i8
  %8910 = and i8 %8909, 1
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8910, i8* %8911, align 1
  %8912 = icmp eq i32 %8892, 0
  %8913 = zext i1 %8912 to i8
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8913, i8* %8914, align 1
  %8915 = lshr i32 %8892, 31
  %8916 = trunc i32 %8915 to i8
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8916, i8* %8917, align 1
  %8918 = lshr i32 %8891, 31
  %8919 = xor i32 %8915, %8918
  %8920 = xor i32 %8915, 1
  %8921 = add i32 %8919, %8920
  %8922 = icmp eq i32 %8921, 2
  %8923 = zext i1 %8922 to i8
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8923, i8* %8924, align 1
  store %struct.Memory* %loadMem_40d0ad, %struct.Memory** %MEMORY
  %loadMem_40d0b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8926 = getelementptr inbounds %struct.GPR, %struct.GPR* %8925, i32 0, i32 33
  %8927 = getelementptr inbounds %struct.Reg, %struct.Reg* %8926, i32 0, i32 0
  %PC.i452 = bitcast %union.anon* %8927 to i64*
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8929 = getelementptr inbounds %struct.GPR, %struct.GPR* %8928, i32 0, i32 5
  %8930 = getelementptr inbounds %struct.Reg, %struct.Reg* %8929, i32 0, i32 0
  %ECX.i453 = bitcast %union.anon* %8930 to i32*
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8932 = getelementptr inbounds %struct.GPR, %struct.GPR* %8931, i32 0, i32 7
  %8933 = getelementptr inbounds %struct.Reg, %struct.Reg* %8932, i32 0, i32 0
  %RDX.i454 = bitcast %union.anon* %8933 to i64*
  %8934 = load i64, i64* %RDX.i454
  %8935 = mul i64 %8934, 4
  %8936 = add i64 %8935, 8922032
  %8937 = load i32, i32* %ECX.i453
  %8938 = zext i32 %8937 to i64
  %8939 = load i64, i64* %PC.i452
  %8940 = add i64 %8939, 7
  store i64 %8940, i64* %PC.i452
  %8941 = inttoptr i64 %8936 to i32*
  store i32 %8937, i32* %8941
  store %struct.Memory* %loadMem_40d0b0, %struct.Memory** %MEMORY
  %loadMem_40d0b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8943 = getelementptr inbounds %struct.GPR, %struct.GPR* %8942, i32 0, i32 33
  %8944 = getelementptr inbounds %struct.Reg, %struct.Reg* %8943, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %8944 to i64*
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 5
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %RCX.i451 = bitcast %union.anon* %8947 to i64*
  %8948 = load i64, i64* %PC.i450
  %8949 = add i64 %8948, 7
  store i64 %8949, i64* %PC.i450
  %8950 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %8951 = zext i32 %8950 to i64
  store i64 %8951, i64* %RCX.i451, align 8
  store %struct.Memory* %loadMem_40d0b7, %struct.Memory** %MEMORY
  %loadMem_40d0be = load %struct.Memory*, %struct.Memory** %MEMORY
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8953 = getelementptr inbounds %struct.GPR, %struct.GPR* %8952, i32 0, i32 33
  %8954 = getelementptr inbounds %struct.Reg, %struct.Reg* %8953, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %8954 to i64*
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8956 = getelementptr inbounds %struct.GPR, %struct.GPR* %8955, i32 0, i32 5
  %8957 = getelementptr inbounds %struct.Reg, %struct.Reg* %8956, i32 0, i32 0
  %RCX.i449 = bitcast %union.anon* %8957 to i64*
  %8958 = load i64, i64* %RCX.i449
  %8959 = load i64, i64* %PC.i448
  %8960 = add i64 %8959, 3
  store i64 %8960, i64* %PC.i448
  %8961 = xor i64 1, %8958
  %8962 = trunc i64 %8961 to i32
  %8963 = and i64 %8961, 4294967295
  store i64 %8963, i64* %RCX.i449, align 8
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8964, align 1
  %8965 = and i32 %8962, 255
  %8966 = call i32 @llvm.ctpop.i32(i32 %8965)
  %8967 = trunc i32 %8966 to i8
  %8968 = and i8 %8967, 1
  %8969 = xor i8 %8968, 1
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8969, i8* %8970, align 1
  %8971 = icmp eq i32 %8962, 0
  %8972 = zext i1 %8971 to i8
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8972, i8* %8973, align 1
  %8974 = lshr i32 %8962, 31
  %8975 = trunc i32 %8974 to i8
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8975, i8* %8976, align 1
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %8977, align 1
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8978, align 1
  store %struct.Memory* %loadMem_40d0be, %struct.Memory** %MEMORY
  %loadMem_40d0c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 5
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %ECX.i447 = bitcast %union.anon* %8984 to i32*
  %8985 = load i32, i32* %ECX.i447
  %8986 = zext i32 %8985 to i64
  %8987 = load i64, i64* %PC.i446
  %8988 = add i64 %8987, 7
  store i64 %8988, i64* %PC.i446
  store i32 %8985, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40d0c1, %struct.Memory** %MEMORY
  %loadMem_40d0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8990 = getelementptr inbounds %struct.GPR, %struct.GPR* %8989, i32 0, i32 33
  %8991 = getelementptr inbounds %struct.Reg, %struct.Reg* %8990, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %8991 to i64*
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 7
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %RDX.i444 = bitcast %union.anon* %8994 to i64*
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8996 = getelementptr inbounds %struct.GPR, %struct.GPR* %8995, i32 0, i32 15
  %8997 = getelementptr inbounds %struct.Reg, %struct.Reg* %8996, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %8997 to i64*
  %8998 = load i64, i64* %RBP.i445
  %8999 = sub i64 %8998, 20
  %9000 = load i64, i64* %PC.i443
  %9001 = add i64 %9000, 4
  store i64 %9001, i64* %PC.i443
  %9002 = inttoptr i64 %8999 to i32*
  %9003 = load i32, i32* %9002
  %9004 = sext i32 %9003 to i64
  store i64 %9004, i64* %RDX.i444, align 8
  store %struct.Memory* %loadMem_40d0c8, %struct.Memory** %MEMORY
  %loadMem_40d0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9006 = getelementptr inbounds %struct.GPR, %struct.GPR* %9005, i32 0, i32 33
  %9007 = getelementptr inbounds %struct.Reg, %struct.Reg* %9006, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %9007 to i64*
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 5
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %RCX.i441 = bitcast %union.anon* %9010 to i64*
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9012 = getelementptr inbounds %struct.GPR, %struct.GPR* %9011, i32 0, i32 7
  %9013 = getelementptr inbounds %struct.Reg, %struct.Reg* %9012, i32 0, i32 0
  %RDX.i442 = bitcast %union.anon* %9013 to i64*
  %9014 = load i64, i64* %RDX.i442
  %9015 = mul i64 %9014, 4
  %9016 = add i64 %9015, 9047232
  %9017 = load i64, i64* %PC.i440
  %9018 = add i64 %9017, 7
  store i64 %9018, i64* %PC.i440
  %9019 = inttoptr i64 %9016 to i32*
  %9020 = load i32, i32* %9019
  %9021 = zext i32 %9020 to i64
  store i64 %9021, i64* %RCX.i441, align 8
  store %struct.Memory* %loadMem_40d0cc, %struct.Memory** %MEMORY
  %loadMem_40d0d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 33
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %9024 to i64*
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9026 = getelementptr inbounds %struct.GPR, %struct.GPR* %9025, i32 0, i32 5
  %9027 = getelementptr inbounds %struct.Reg, %struct.Reg* %9026, i32 0, i32 0
  %RCX.i439 = bitcast %union.anon* %9027 to i64*
  %9028 = load i64, i64* %RCX.i439
  %9029 = load i64, i64* %PC.i438
  %9030 = add i64 %9029, 7
  store i64 %9030, i64* %PC.i438
  %9031 = trunc i64 %9028 to i32
  %9032 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %9033 = xor i32 %9032, %9031
  %9034 = zext i32 %9033 to i64
  store i64 %9034, i64* %RCX.i439, align 8
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9035, align 1
  %9036 = and i32 %9033, 255
  %9037 = call i32 @llvm.ctpop.i32(i32 %9036)
  %9038 = trunc i32 %9037 to i8
  %9039 = and i8 %9038, 1
  %9040 = xor i8 %9039, 1
  %9041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9040, i8* %9041, align 1
  %9042 = icmp eq i32 %9033, 0
  %9043 = zext i1 %9042 to i8
  %9044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9043, i8* %9044, align 1
  %9045 = lshr i32 %9033, 31
  %9046 = trunc i32 %9045 to i8
  %9047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9046, i8* %9047, align 1
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9048, align 1
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9049, align 1
  store %struct.Memory* %loadMem_40d0d3, %struct.Memory** %MEMORY
  %loadMem_40d0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9051 = getelementptr inbounds %struct.GPR, %struct.GPR* %9050, i32 0, i32 33
  %9052 = getelementptr inbounds %struct.Reg, %struct.Reg* %9051, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %9052 to i64*
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 5
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %ECX.i437 = bitcast %union.anon* %9055 to i32*
  %9056 = load i32, i32* %ECX.i437
  %9057 = zext i32 %9056 to i64
  %9058 = load i64, i64* %PC.i436
  %9059 = add i64 %9058, 7
  store i64 %9059, i64* %PC.i436
  store i32 %9056, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d0da, %struct.Memory** %MEMORY
  %loadMem_40d0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9061 = getelementptr inbounds %struct.GPR, %struct.GPR* %9060, i32 0, i32 33
  %9062 = getelementptr inbounds %struct.Reg, %struct.Reg* %9061, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %9062 to i64*
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 7
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %RDX.i434 = bitcast %union.anon* %9065 to i64*
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 15
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %9068 to i64*
  %9069 = load i64, i64* %RBP.i435
  %9070 = sub i64 %9069, 32
  %9071 = load i64, i64* %PC.i433
  %9072 = add i64 %9071, 4
  store i64 %9072, i64* %PC.i433
  %9073 = inttoptr i64 %9070 to i32*
  %9074 = load i32, i32* %9073
  %9075 = sext i32 %9074 to i64
  store i64 %9075, i64* %RDX.i434, align 8
  store %struct.Memory* %loadMem_40d0e1, %struct.Memory** %MEMORY
  %loadMem_40d0e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 33
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9080 = getelementptr inbounds %struct.GPR, %struct.GPR* %9079, i32 0, i32 7
  %9081 = getelementptr inbounds %struct.Reg, %struct.Reg* %9080, i32 0, i32 0
  %RDX.i432 = bitcast %union.anon* %9081 to i64*
  %9082 = load i64, i64* %RDX.i432
  %9083 = load i64, i64* %PC.i431
  %9084 = add i64 %9083, 7
  store i64 %9084, i64* %PC.i431
  %9085 = sext i64 %9082 to i128
  %9086 = and i128 %9085, -18446744073709551616
  %9087 = zext i64 %9082 to i128
  %9088 = or i128 %9086, %9087
  %9089 = mul i128 576, %9088
  %9090 = trunc i128 %9089 to i64
  store i64 %9090, i64* %RDX.i432, align 8
  %9091 = sext i64 %9090 to i128
  %9092 = icmp ne i128 %9091, %9089
  %9093 = zext i1 %9092 to i8
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9093, i8* %9094, align 1
  %9095 = trunc i128 %9089 to i32
  %9096 = and i32 %9095, 255
  %9097 = call i32 @llvm.ctpop.i32(i32 %9096)
  %9098 = trunc i32 %9097 to i8
  %9099 = and i8 %9098, 1
  %9100 = xor i8 %9099, 1
  %9101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9100, i8* %9101, align 1
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9102, align 1
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9103, align 1
  %9104 = lshr i64 %9090, 63
  %9105 = trunc i64 %9104 to i8
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9105, i8* %9106, align 1
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9093, i8* %9107, align 1
  store %struct.Memory* %loadMem_40d0e5, %struct.Memory** %MEMORY
  %loadMem_40d0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9109 = getelementptr inbounds %struct.GPR, %struct.GPR* %9108, i32 0, i32 33
  %9110 = getelementptr inbounds %struct.Reg, %struct.Reg* %9109, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %9110 to i64*
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 1
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %9113 to i64*
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9115 = getelementptr inbounds %struct.GPR, %struct.GPR* %9114, i32 0, i32 7
  %9116 = getelementptr inbounds %struct.Reg, %struct.Reg* %9115, i32 0, i32 0
  %RDX.i430 = bitcast %union.anon* %9116 to i64*
  %9117 = load i64, i64* %RAX.i429
  %9118 = load i64, i64* %RDX.i430
  %9119 = load i64, i64* %PC.i428
  %9120 = add i64 %9119, 3
  store i64 %9120, i64* %PC.i428
  %9121 = add i64 %9118, %9117
  store i64 %9121, i64* %RAX.i429, align 8
  %9122 = icmp ult i64 %9121, %9117
  %9123 = icmp ult i64 %9121, %9118
  %9124 = or i1 %9122, %9123
  %9125 = zext i1 %9124 to i8
  %9126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9125, i8* %9126, align 1
  %9127 = trunc i64 %9121 to i32
  %9128 = and i32 %9127, 255
  %9129 = call i32 @llvm.ctpop.i32(i32 %9128)
  %9130 = trunc i32 %9129 to i8
  %9131 = and i8 %9130, 1
  %9132 = xor i8 %9131, 1
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9132, i8* %9133, align 1
  %9134 = xor i64 %9118, %9117
  %9135 = xor i64 %9134, %9121
  %9136 = lshr i64 %9135, 4
  %9137 = trunc i64 %9136 to i8
  %9138 = and i8 %9137, 1
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9138, i8* %9139, align 1
  %9140 = icmp eq i64 %9121, 0
  %9141 = zext i1 %9140 to i8
  %9142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9141, i8* %9142, align 1
  %9143 = lshr i64 %9121, 63
  %9144 = trunc i64 %9143 to i8
  %9145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9144, i8* %9145, align 1
  %9146 = lshr i64 %9117, 63
  %9147 = lshr i64 %9118, 63
  %9148 = xor i64 %9143, %9146
  %9149 = xor i64 %9143, %9147
  %9150 = add i64 %9148, %9149
  %9151 = icmp eq i64 %9150, 2
  %9152 = zext i1 %9151 to i8
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9152, i8* %9153, align 1
  store %struct.Memory* %loadMem_40d0ec, %struct.Memory** %MEMORY
  %loadMem_40d0ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 33
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %9156 to i64*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 7
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %RDX.i426 = bitcast %union.anon* %9159 to i64*
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 15
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %9162 to i64*
  %9163 = load i64, i64* %RBP.i427
  %9164 = sub i64 %9163, 24
  %9165 = load i64, i64* %PC.i425
  %9166 = add i64 %9165, 4
  store i64 %9166, i64* %PC.i425
  %9167 = inttoptr i64 %9164 to i32*
  %9168 = load i32, i32* %9167
  %9169 = sext i32 %9168 to i64
  store i64 %9169, i64* %RDX.i426, align 8
  store %struct.Memory* %loadMem_40d0ef, %struct.Memory** %MEMORY
  %loadMem_40d0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9171 = getelementptr inbounds %struct.GPR, %struct.GPR* %9170, i32 0, i32 33
  %9172 = getelementptr inbounds %struct.Reg, %struct.Reg* %9171, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %9172 to i64*
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9174 = getelementptr inbounds %struct.GPR, %struct.GPR* %9173, i32 0, i32 1
  %9175 = getelementptr inbounds %struct.Reg, %struct.Reg* %9174, i32 0, i32 0
  %RAX.i422 = bitcast %union.anon* %9175 to i64*
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 5
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %RCX.i423 = bitcast %union.anon* %9178 to i64*
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 7
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %RDX.i424 = bitcast %union.anon* %9181 to i64*
  %9182 = load i64, i64* %RAX.i422
  %9183 = load i64, i64* %RDX.i424
  %9184 = mul i64 %9183, 4
  %9185 = add i64 %9184, %9182
  %9186 = load i64, i64* %PC.i421
  %9187 = add i64 %9186, 3
  store i64 %9187, i64* %PC.i421
  %9188 = inttoptr i64 %9185 to i32*
  %9189 = load i32, i32* %9188
  %9190 = zext i32 %9189 to i64
  store i64 %9190, i64* %RCX.i423, align 8
  store %struct.Memory* %loadMem_40d0f3, %struct.Memory** %MEMORY
  %loadMem_40d0f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9192 = getelementptr inbounds %struct.GPR, %struct.GPR* %9191, i32 0, i32 33
  %9193 = getelementptr inbounds %struct.Reg, %struct.Reg* %9192, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %9193 to i64*
  %9194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9195 = getelementptr inbounds %struct.GPR, %struct.GPR* %9194, i32 0, i32 5
  %9196 = getelementptr inbounds %struct.Reg, %struct.Reg* %9195, i32 0, i32 0
  %RCX.i420 = bitcast %union.anon* %9196 to i64*
  %9197 = load i64, i64* %RCX.i420
  %9198 = load i64, i64* %PC.i419
  %9199 = add i64 %9198, 7
  store i64 %9199, i64* %PC.i419
  %9200 = trunc i64 %9197 to i32
  %9201 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %9202 = xor i32 %9201, %9200
  %9203 = zext i32 %9202 to i64
  store i64 %9203, i64* %RCX.i420, align 8
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9204, align 1
  %9205 = and i32 %9202, 255
  %9206 = call i32 @llvm.ctpop.i32(i32 %9205)
  %9207 = trunc i32 %9206 to i8
  %9208 = and i8 %9207, 1
  %9209 = xor i8 %9208, 1
  %9210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9209, i8* %9210, align 1
  %9211 = icmp eq i32 %9202, 0
  %9212 = zext i1 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9212, i8* %9213, align 1
  %9214 = lshr i32 %9202, 31
  %9215 = trunc i32 %9214 to i8
  %9216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9215, i8* %9216, align 1
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9217, align 1
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9218, align 1
  store %struct.Memory* %loadMem_40d0f6, %struct.Memory** %MEMORY
  %loadMem_40d0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9220 = getelementptr inbounds %struct.GPR, %struct.GPR* %9219, i32 0, i32 33
  %9221 = getelementptr inbounds %struct.Reg, %struct.Reg* %9220, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %9221 to i64*
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9223 = getelementptr inbounds %struct.GPR, %struct.GPR* %9222, i32 0, i32 5
  %9224 = getelementptr inbounds %struct.Reg, %struct.Reg* %9223, i32 0, i32 0
  %ECX.i418 = bitcast %union.anon* %9224 to i32*
  %9225 = load i32, i32* %ECX.i418
  %9226 = zext i32 %9225 to i64
  %9227 = load i64, i64* %PC.i417
  %9228 = add i64 %9227, 7
  store i64 %9228, i64* %PC.i417
  store i32 %9225, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d0fd, %struct.Memory** %MEMORY
  %loadMem_40d104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9230 = getelementptr inbounds %struct.GPR, %struct.GPR* %9229, i32 0, i32 33
  %9231 = getelementptr inbounds %struct.Reg, %struct.Reg* %9230, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %9231 to i64*
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9233 = getelementptr inbounds %struct.GPR, %struct.GPR* %9232, i32 0, i32 1
  %9234 = getelementptr inbounds %struct.Reg, %struct.Reg* %9233, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %9234 to i64*
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9236 = getelementptr inbounds %struct.GPR, %struct.GPR* %9235, i32 0, i32 15
  %9237 = getelementptr inbounds %struct.Reg, %struct.Reg* %9236, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %9237 to i64*
  %9238 = load i64, i64* %RBP.i416
  %9239 = sub i64 %9238, 32
  %9240 = load i64, i64* %PC.i414
  %9241 = add i64 %9240, 4
  store i64 %9241, i64* %PC.i414
  %9242 = inttoptr i64 %9239 to i32*
  %9243 = load i32, i32* %9242
  %9244 = sext i32 %9243 to i64
  store i64 %9244, i64* %RAX.i415, align 8
  store %struct.Memory* %loadMem_40d104, %struct.Memory** %MEMORY
  %loadMem_40d108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9246 = getelementptr inbounds %struct.GPR, %struct.GPR* %9245, i32 0, i32 33
  %9247 = getelementptr inbounds %struct.Reg, %struct.Reg* %9246, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %9247 to i64*
  %9248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9249 = getelementptr inbounds %struct.GPR, %struct.GPR* %9248, i32 0, i32 1
  %9250 = getelementptr inbounds %struct.Reg, %struct.Reg* %9249, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %9250 to i64*
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 5
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %RCX.i413 = bitcast %union.anon* %9253 to i64*
  %9254 = load i64, i64* %RAX.i412
  %9255 = mul i64 %9254, 4
  %9256 = add i64 %9255, 6478512
  %9257 = load i64, i64* %PC.i411
  %9258 = add i64 %9257, 7
  store i64 %9258, i64* %PC.i411
  %9259 = inttoptr i64 %9256 to i32*
  %9260 = load i32, i32* %9259
  %9261 = zext i32 %9260 to i64
  store i64 %9261, i64* %RCX.i413, align 8
  store %struct.Memory* %loadMem_40d108, %struct.Memory** %MEMORY
  %loadMem_40d10f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %9264 to i64*
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9266 = getelementptr inbounds %struct.GPR, %struct.GPR* %9265, i32 0, i32 9
  %9267 = getelementptr inbounds %struct.Reg, %struct.Reg* %9266, i32 0, i32 0
  %RSI.i410 = bitcast %union.anon* %9267 to i64*
  %9268 = load i64, i64* %PC.i409
  %9269 = add i64 %9268, 7
  store i64 %9269, i64* %PC.i409
  %9270 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %9271 = zext i32 %9270 to i64
  store i64 %9271, i64* %RSI.i410, align 8
  store %struct.Memory* %loadMem_40d10f, %struct.Memory** %MEMORY
  %loadMem_40d116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9273 = getelementptr inbounds %struct.GPR, %struct.GPR* %9272, i32 0, i32 33
  %9274 = getelementptr inbounds %struct.Reg, %struct.Reg* %9273, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %9274 to i64*
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9276 = getelementptr inbounds %struct.GPR, %struct.GPR* %9275, i32 0, i32 5
  %9277 = getelementptr inbounds %struct.Reg, %struct.Reg* %9276, i32 0, i32 0
  %ECX.i407 = bitcast %union.anon* %9277 to i32*
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9279 = getelementptr inbounds %struct.GPR, %struct.GPR* %9278, i32 0, i32 9
  %9280 = getelementptr inbounds %struct.Reg, %struct.Reg* %9279, i32 0, i32 0
  %RSI.i408 = bitcast %union.anon* %9280 to i64*
  %9281 = load i64, i64* %RSI.i408
  %9282 = load i32, i32* %ECX.i407
  %9283 = zext i32 %9282 to i64
  %9284 = load i64, i64* %PC.i406
  %9285 = add i64 %9284, 2
  store i64 %9285, i64* %PC.i406
  %9286 = trunc i64 %9281 to i32
  %9287 = sub i32 %9286, %9282
  %9288 = zext i32 %9287 to i64
  store i64 %9288, i64* %RSI.i408, align 8
  %9289 = icmp ult i32 %9286, %9282
  %9290 = zext i1 %9289 to i8
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9290, i8* %9291, align 1
  %9292 = and i32 %9287, 255
  %9293 = call i32 @llvm.ctpop.i32(i32 %9292)
  %9294 = trunc i32 %9293 to i8
  %9295 = and i8 %9294, 1
  %9296 = xor i8 %9295, 1
  %9297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9296, i8* %9297, align 1
  %9298 = xor i64 %9283, %9281
  %9299 = trunc i64 %9298 to i32
  %9300 = xor i32 %9299, %9287
  %9301 = lshr i32 %9300, 4
  %9302 = trunc i32 %9301 to i8
  %9303 = and i8 %9302, 1
  %9304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9303, i8* %9304, align 1
  %9305 = icmp eq i32 %9287, 0
  %9306 = zext i1 %9305 to i8
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9306, i8* %9307, align 1
  %9308 = lshr i32 %9287, 31
  %9309 = trunc i32 %9308 to i8
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9309, i8* %9310, align 1
  %9311 = lshr i32 %9286, 31
  %9312 = lshr i32 %9282, 31
  %9313 = xor i32 %9312, %9311
  %9314 = xor i32 %9308, %9311
  %9315 = add i32 %9314, %9313
  %9316 = icmp eq i32 %9315, 2
  %9317 = zext i1 %9316 to i8
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9317, i8* %9318, align 1
  store %struct.Memory* %loadMem_40d116, %struct.Memory** %MEMORY
  %loadMem_40d118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9320 = getelementptr inbounds %struct.GPR, %struct.GPR* %9319, i32 0, i32 33
  %9321 = getelementptr inbounds %struct.Reg, %struct.Reg* %9320, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %9321 to i64*
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9323 = getelementptr inbounds %struct.GPR, %struct.GPR* %9322, i32 0, i32 9
  %9324 = getelementptr inbounds %struct.Reg, %struct.Reg* %9323, i32 0, i32 0
  %ESI.i405 = bitcast %union.anon* %9324 to i32*
  %9325 = load i32, i32* %ESI.i405
  %9326 = zext i32 %9325 to i64
  %9327 = load i64, i64* %PC.i404
  %9328 = add i64 %9327, 7
  store i64 %9328, i64* %PC.i404
  store i32 %9325, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40d118, %struct.Memory** %MEMORY
  %loadMem_40d11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9330 = getelementptr inbounds %struct.GPR, %struct.GPR* %9329, i32 0, i32 33
  %9331 = getelementptr inbounds %struct.Reg, %struct.Reg* %9330, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %9331 to i64*
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9333 = getelementptr inbounds %struct.GPR, %struct.GPR* %9332, i32 0, i32 5
  %9334 = getelementptr inbounds %struct.Reg, %struct.Reg* %9333, i32 0, i32 0
  %RCX.i403 = bitcast %union.anon* %9334 to i64*
  %9335 = load i64, i64* %PC.i402
  %9336 = add i64 %9335, 7
  store i64 %9336, i64* %PC.i402
  %9337 = load i32, i32* bitcast (%G_0x62dab4_type* @G_0x62dab4 to i32*)
  %9338 = zext i32 %9337 to i64
  store i64 %9338, i64* %RCX.i403, align 8
  store %struct.Memory* %loadMem_40d11f, %struct.Memory** %MEMORY
  %loadMem_40d126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9340 = getelementptr inbounds %struct.GPR, %struct.GPR* %9339, i32 0, i32 33
  %9341 = getelementptr inbounds %struct.Reg, %struct.Reg* %9340, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %9341 to i64*
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9343 = getelementptr inbounds %struct.GPR, %struct.GPR* %9342, i32 0, i32 5
  %9344 = getelementptr inbounds %struct.Reg, %struct.Reg* %9343, i32 0, i32 0
  %RCX.i401 = bitcast %union.anon* %9344 to i64*
  %9345 = load i64, i64* %RCX.i401
  %9346 = load i64, i64* %PC.i400
  %9347 = add i64 %9346, 7
  store i64 %9347, i64* %PC.i400
  %9348 = trunc i64 %9345 to i32
  %9349 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %9350 = add i32 %9349, %9348
  %9351 = zext i32 %9350 to i64
  store i64 %9351, i64* %RCX.i401, align 8
  %9352 = icmp ult i32 %9350, %9348
  %9353 = icmp ult i32 %9350, %9349
  %9354 = or i1 %9352, %9353
  %9355 = zext i1 %9354 to i8
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9355, i8* %9356, align 1
  %9357 = and i32 %9350, 255
  %9358 = call i32 @llvm.ctpop.i32(i32 %9357)
  %9359 = trunc i32 %9358 to i8
  %9360 = and i8 %9359, 1
  %9361 = xor i8 %9360, 1
  %9362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9361, i8* %9362, align 1
  %9363 = xor i32 %9349, %9348
  %9364 = xor i32 %9363, %9350
  %9365 = lshr i32 %9364, 4
  %9366 = trunc i32 %9365 to i8
  %9367 = and i8 %9366, 1
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9367, i8* %9368, align 1
  %9369 = icmp eq i32 %9350, 0
  %9370 = zext i1 %9369 to i8
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9370, i8* %9371, align 1
  %9372 = lshr i32 %9350, 31
  %9373 = trunc i32 %9372 to i8
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9373, i8* %9374, align 1
  %9375 = lshr i32 %9348, 31
  %9376 = lshr i32 %9349, 31
  %9377 = xor i32 %9372, %9375
  %9378 = xor i32 %9372, %9376
  %9379 = add i32 %9377, %9378
  %9380 = icmp eq i32 %9379, 2
  %9381 = zext i1 %9380 to i8
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9381, i8* %9382, align 1
  store %struct.Memory* %loadMem_40d126, %struct.Memory** %MEMORY
  %loadMem_40d12d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9384 = getelementptr inbounds %struct.GPR, %struct.GPR* %9383, i32 0, i32 33
  %9385 = getelementptr inbounds %struct.Reg, %struct.Reg* %9384, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %9385 to i64*
  %9386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9387 = getelementptr inbounds %struct.GPR, %struct.GPR* %9386, i32 0, i32 5
  %9388 = getelementptr inbounds %struct.Reg, %struct.Reg* %9387, i32 0, i32 0
  %ECX.i399 = bitcast %union.anon* %9388 to i32*
  %9389 = load i32, i32* %ECX.i399
  %9390 = zext i32 %9389 to i64
  %9391 = load i64, i64* %PC.i398
  %9392 = add i64 %9391, 7
  store i64 %9392, i64* %PC.i398
  store i32 %9389, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40d12d, %struct.Memory** %MEMORY
  %loadMem_40d134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 33
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %PC.i397
  %9397 = add i64 %9396, 1232
  %9398 = load i64, i64* %PC.i397
  %9399 = add i64 %9398, 5
  store i64 %9399, i64* %PC.i397
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9397, i64* %9400, align 8
  store %struct.Memory* %loadMem_40d134, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d139:                                  ; preds = %routine_idivl__esi.exit
  %loadMem_40d139 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RAX.i396 = bitcast %union.anon* %9406 to i64*
  %9407 = load i64, i64* %PC.i395
  %9408 = add i64 %9407, 10
  store i64 %9408, i64* %PC.i395
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX.i396, align 8
  store %struct.Memory* %loadMem_40d139, %struct.Memory** %MEMORY
  %loadMem_40d143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9410 = getelementptr inbounds %struct.GPR, %struct.GPR* %9409, i32 0, i32 33
  %9411 = getelementptr inbounds %struct.Reg, %struct.Reg* %9410, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %9411 to i64*
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 5
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %RCX.i393 = bitcast %union.anon* %9414 to i64*
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 15
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %RBP.i394 = bitcast %union.anon* %9417 to i64*
  %9418 = load i64, i64* %RBP.i394
  %9419 = sub i64 %9418, 28
  %9420 = load i64, i64* %PC.i392
  %9421 = add i64 %9420, 3
  store i64 %9421, i64* %PC.i392
  %9422 = inttoptr i64 %9419 to i32*
  %9423 = load i32, i32* %9422
  %9424 = zext i32 %9423 to i64
  store i64 %9424, i64* %RCX.i393, align 8
  store %struct.Memory* %loadMem_40d143, %struct.Memory** %MEMORY
  %loadMem_40d146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9426 = getelementptr inbounds %struct.GPR, %struct.GPR* %9425, i32 0, i32 33
  %9427 = getelementptr inbounds %struct.Reg, %struct.Reg* %9426, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %9427 to i64*
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 7
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %RDX.i390 = bitcast %union.anon* %9430 to i64*
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9432 = getelementptr inbounds %struct.GPR, %struct.GPR* %9431, i32 0, i32 15
  %9433 = getelementptr inbounds %struct.Reg, %struct.Reg* %9432, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %9433 to i64*
  %9434 = load i64, i64* %RBP.i391
  %9435 = sub i64 %9434, 24
  %9436 = load i64, i64* %PC.i389
  %9437 = add i64 %9436, 4
  store i64 %9437, i64* %PC.i389
  %9438 = inttoptr i64 %9435 to i32*
  %9439 = load i32, i32* %9438
  %9440 = sext i32 %9439 to i64
  store i64 %9440, i64* %RDX.i390, align 8
  store %struct.Memory* %loadMem_40d146, %struct.Memory** %MEMORY
  %loadMem_40d14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9442 = getelementptr inbounds %struct.GPR, %struct.GPR* %9441, i32 0, i32 33
  %9443 = getelementptr inbounds %struct.Reg, %struct.Reg* %9442, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %9443 to i64*
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9445 = getelementptr inbounds %struct.GPR, %struct.GPR* %9444, i32 0, i32 5
  %9446 = getelementptr inbounds %struct.Reg, %struct.Reg* %9445, i32 0, i32 0
  %ECX.i387 = bitcast %union.anon* %9446 to i32*
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9448 = getelementptr inbounds %struct.GPR, %struct.GPR* %9447, i32 0, i32 7
  %9449 = getelementptr inbounds %struct.Reg, %struct.Reg* %9448, i32 0, i32 0
  %RDX.i388 = bitcast %union.anon* %9449 to i64*
  %9450 = load i64, i64* %RDX.i388
  %9451 = mul i64 %9450, 4
  %9452 = add i64 %9451, 8807744
  %9453 = load i32, i32* %ECX.i387
  %9454 = zext i32 %9453 to i64
  %9455 = load i64, i64* %PC.i386
  %9456 = add i64 %9455, 7
  store i64 %9456, i64* %PC.i386
  %9457 = inttoptr i64 %9452 to i32*
  store i32 %9453, i32* %9457
  store %struct.Memory* %loadMem_40d14a, %struct.Memory** %MEMORY
  %loadMem_40d151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9459 = getelementptr inbounds %struct.GPR, %struct.GPR* %9458, i32 0, i32 33
  %9460 = getelementptr inbounds %struct.Reg, %struct.Reg* %9459, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %9460 to i64*
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9462 = getelementptr inbounds %struct.GPR, %struct.GPR* %9461, i32 0, i32 7
  %9463 = getelementptr inbounds %struct.Reg, %struct.Reg* %9462, i32 0, i32 0
  %RDX.i384 = bitcast %union.anon* %9463 to i64*
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 15
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %9466 to i64*
  %9467 = load i64, i64* %RBP.i385
  %9468 = sub i64 %9467, 20
  %9469 = load i64, i64* %PC.i383
  %9470 = add i64 %9469, 4
  store i64 %9470, i64* %PC.i383
  %9471 = inttoptr i64 %9468 to i32*
  %9472 = load i32, i32* %9471
  %9473 = sext i32 %9472 to i64
  store i64 %9473, i64* %RDX.i384, align 8
  store %struct.Memory* %loadMem_40d151, %struct.Memory** %MEMORY
  %loadMem_40d155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9475 = getelementptr inbounds %struct.GPR, %struct.GPR* %9474, i32 0, i32 33
  %9476 = getelementptr inbounds %struct.Reg, %struct.Reg* %9475, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %9476 to i64*
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9478 = getelementptr inbounds %struct.GPR, %struct.GPR* %9477, i32 0, i32 7
  %9479 = getelementptr inbounds %struct.Reg, %struct.Reg* %9478, i32 0, i32 0
  %RDX.i382 = bitcast %union.anon* %9479 to i64*
  %9480 = load i64, i64* %RDX.i382
  %9481 = mul i64 %9480, 4
  %9482 = add i64 %9481, 8807744
  %9483 = load i64, i64* %PC.i381
  %9484 = add i64 %9483, 11
  store i64 %9484, i64* %PC.i381
  %9485 = inttoptr i64 %9482 to i32*
  store i32 2, i32* %9485
  store %struct.Memory* %loadMem_40d155, %struct.Memory** %MEMORY
  %loadMem_40d160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9487 = getelementptr inbounds %struct.GPR, %struct.GPR* %9486, i32 0, i32 33
  %9488 = getelementptr inbounds %struct.Reg, %struct.Reg* %9487, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %9488 to i64*
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9490 = getelementptr inbounds %struct.GPR, %struct.GPR* %9489, i32 0, i32 7
  %9491 = getelementptr inbounds %struct.Reg, %struct.Reg* %9490, i32 0, i32 0
  %RDX.i379 = bitcast %union.anon* %9491 to i64*
  %9492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9493 = getelementptr inbounds %struct.GPR, %struct.GPR* %9492, i32 0, i32 15
  %9494 = getelementptr inbounds %struct.Reg, %struct.Reg* %9493, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %9494 to i64*
  %9495 = load i64, i64* %RBP.i380
  %9496 = sub i64 %9495, 24
  %9497 = load i64, i64* %PC.i378
  %9498 = add i64 %9497, 4
  store i64 %9498, i64* %PC.i378
  %9499 = inttoptr i64 %9496 to i32*
  %9500 = load i32, i32* %9499
  %9501 = sext i32 %9500 to i64
  store i64 %9501, i64* %RDX.i379, align 8
  store %struct.Memory* %loadMem_40d160, %struct.Memory** %MEMORY
  %loadMem_40d164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9503 = getelementptr inbounds %struct.GPR, %struct.GPR* %9502, i32 0, i32 33
  %9504 = getelementptr inbounds %struct.Reg, %struct.Reg* %9503, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %9504 to i64*
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9506 = getelementptr inbounds %struct.GPR, %struct.GPR* %9505, i32 0, i32 5
  %9507 = getelementptr inbounds %struct.Reg, %struct.Reg* %9506, i32 0, i32 0
  %RCX.i376 = bitcast %union.anon* %9507 to i64*
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9509 = getelementptr inbounds %struct.GPR, %struct.GPR* %9508, i32 0, i32 7
  %9510 = getelementptr inbounds %struct.Reg, %struct.Reg* %9509, i32 0, i32 0
  %RDX.i377 = bitcast %union.anon* %9510 to i64*
  %9511 = load i64, i64* %RDX.i377
  %9512 = mul i64 %9511, 4
  %9513 = add i64 %9512, 8922032
  %9514 = load i64, i64* %PC.i375
  %9515 = add i64 %9514, 7
  store i64 %9515, i64* %PC.i375
  %9516 = inttoptr i64 %9513 to i32*
  %9517 = load i32, i32* %9516
  %9518 = zext i32 %9517 to i64
  store i64 %9518, i64* %RCX.i376, align 8
  store %struct.Memory* %loadMem_40d164, %struct.Memory** %MEMORY
  %loadMem_40d16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9520 = getelementptr inbounds %struct.GPR, %struct.GPR* %9519, i32 0, i32 33
  %9521 = getelementptr inbounds %struct.Reg, %struct.Reg* %9520, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %9521 to i64*
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 5
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %RCX.i374 = bitcast %union.anon* %9524 to i64*
  %9525 = load i64, i64* %RCX.i374
  %9526 = load i64, i64* %PC.i373
  %9527 = add i64 %9526, 3
  store i64 %9527, i64* %PC.i373
  %9528 = trunc i64 %9525 to i32
  %9529 = add i32 -1, %9528
  %9530 = zext i32 %9529 to i64
  store i64 %9530, i64* %RCX.i374, align 8
  %9531 = icmp ult i32 %9529, %9528
  %9532 = icmp ult i32 %9529, -1
  %9533 = or i1 %9531, %9532
  %9534 = zext i1 %9533 to i8
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9534, i8* %9535, align 1
  %9536 = and i32 %9529, 255
  %9537 = call i32 @llvm.ctpop.i32(i32 %9536)
  %9538 = trunc i32 %9537 to i8
  %9539 = and i8 %9538, 1
  %9540 = xor i8 %9539, 1
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9540, i8* %9541, align 1
  %9542 = xor i64 -1, %9525
  %9543 = trunc i64 %9542 to i32
  %9544 = xor i32 %9543, %9529
  %9545 = lshr i32 %9544, 4
  %9546 = trunc i32 %9545 to i8
  %9547 = and i8 %9546, 1
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9547, i8* %9548, align 1
  %9549 = icmp eq i32 %9529, 0
  %9550 = zext i1 %9549 to i8
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9550, i8* %9551, align 1
  %9552 = lshr i32 %9529, 31
  %9553 = trunc i32 %9552 to i8
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9553, i8* %9554, align 1
  %9555 = lshr i32 %9528, 31
  %9556 = xor i32 %9552, %9555
  %9557 = xor i32 %9552, 1
  %9558 = add i32 %9556, %9557
  %9559 = icmp eq i32 %9558, 2
  %9560 = zext i1 %9559 to i8
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9560, i8* %9561, align 1
  store %struct.Memory* %loadMem_40d16b, %struct.Memory** %MEMORY
  %loadMem_40d16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9563 = getelementptr inbounds %struct.GPR, %struct.GPR* %9562, i32 0, i32 33
  %9564 = getelementptr inbounds %struct.Reg, %struct.Reg* %9563, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %9564 to i64*
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9566 = getelementptr inbounds %struct.GPR, %struct.GPR* %9565, i32 0, i32 5
  %9567 = getelementptr inbounds %struct.Reg, %struct.Reg* %9566, i32 0, i32 0
  %ECX.i371 = bitcast %union.anon* %9567 to i32*
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9569 = getelementptr inbounds %struct.GPR, %struct.GPR* %9568, i32 0, i32 7
  %9570 = getelementptr inbounds %struct.Reg, %struct.Reg* %9569, i32 0, i32 0
  %RDX.i372 = bitcast %union.anon* %9570 to i64*
  %9571 = load i64, i64* %RDX.i372
  %9572 = mul i64 %9571, 4
  %9573 = add i64 %9572, 8922032
  %9574 = load i32, i32* %ECX.i371
  %9575 = zext i32 %9574 to i64
  %9576 = load i64, i64* %PC.i370
  %9577 = add i64 %9576, 7
  store i64 %9577, i64* %PC.i370
  %9578 = inttoptr i64 %9573 to i32*
  store i32 %9574, i32* %9578
  store %struct.Memory* %loadMem_40d16e, %struct.Memory** %MEMORY
  %loadMem_40d175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9580 = getelementptr inbounds %struct.GPR, %struct.GPR* %9579, i32 0, i32 33
  %9581 = getelementptr inbounds %struct.Reg, %struct.Reg* %9580, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %9581 to i64*
  %9582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9583 = getelementptr inbounds %struct.GPR, %struct.GPR* %9582, i32 0, i32 7
  %9584 = getelementptr inbounds %struct.Reg, %struct.Reg* %9583, i32 0, i32 0
  %RDX.i368 = bitcast %union.anon* %9584 to i64*
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 15
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %RBP.i369 = bitcast %union.anon* %9587 to i64*
  %9588 = load i64, i64* %RBP.i369
  %9589 = sub i64 %9588, 20
  %9590 = load i64, i64* %PC.i367
  %9591 = add i64 %9590, 4
  store i64 %9591, i64* %PC.i367
  %9592 = inttoptr i64 %9589 to i32*
  %9593 = load i32, i32* %9592
  %9594 = sext i32 %9593 to i64
  store i64 %9594, i64* %RDX.i368, align 8
  store %struct.Memory* %loadMem_40d175, %struct.Memory** %MEMORY
  %loadMem_40d179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9596 = getelementptr inbounds %struct.GPR, %struct.GPR* %9595, i32 0, i32 33
  %9597 = getelementptr inbounds %struct.Reg, %struct.Reg* %9596, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %9597 to i64*
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9599 = getelementptr inbounds %struct.GPR, %struct.GPR* %9598, i32 0, i32 5
  %9600 = getelementptr inbounds %struct.Reg, %struct.Reg* %9599, i32 0, i32 0
  %RCX.i365 = bitcast %union.anon* %9600 to i64*
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9602 = getelementptr inbounds %struct.GPR, %struct.GPR* %9601, i32 0, i32 7
  %9603 = getelementptr inbounds %struct.Reg, %struct.Reg* %9602, i32 0, i32 0
  %RDX.i366 = bitcast %union.anon* %9603 to i64*
  %9604 = load i64, i64* %RDX.i366
  %9605 = mul i64 %9604, 4
  %9606 = add i64 %9605, 8922032
  %9607 = load i64, i64* %PC.i364
  %9608 = add i64 %9607, 7
  store i64 %9608, i64* %PC.i364
  %9609 = inttoptr i64 %9606 to i32*
  %9610 = load i32, i32* %9609
  %9611 = zext i32 %9610 to i64
  store i64 %9611, i64* %RCX.i365, align 8
  store %struct.Memory* %loadMem_40d179, %struct.Memory** %MEMORY
  %loadMem_40d180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9613 = getelementptr inbounds %struct.GPR, %struct.GPR* %9612, i32 0, i32 33
  %9614 = getelementptr inbounds %struct.Reg, %struct.Reg* %9613, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %9614 to i64*
  %9615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9616 = getelementptr inbounds %struct.GPR, %struct.GPR* %9615, i32 0, i32 5
  %9617 = getelementptr inbounds %struct.Reg, %struct.Reg* %9616, i32 0, i32 0
  %RCX.i363 = bitcast %union.anon* %9617 to i64*
  %9618 = load i64, i64* %RCX.i363
  %9619 = load i64, i64* %PC.i362
  %9620 = add i64 %9619, 3
  store i64 %9620, i64* %PC.i362
  %9621 = trunc i64 %9618 to i32
  %9622 = add i32 -1, %9621
  %9623 = zext i32 %9622 to i64
  store i64 %9623, i64* %RCX.i363, align 8
  %9624 = icmp ult i32 %9622, %9621
  %9625 = icmp ult i32 %9622, -1
  %9626 = or i1 %9624, %9625
  %9627 = zext i1 %9626 to i8
  %9628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9627, i8* %9628, align 1
  %9629 = and i32 %9622, 255
  %9630 = call i32 @llvm.ctpop.i32(i32 %9629)
  %9631 = trunc i32 %9630 to i8
  %9632 = and i8 %9631, 1
  %9633 = xor i8 %9632, 1
  %9634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9633, i8* %9634, align 1
  %9635 = xor i64 -1, %9618
  %9636 = trunc i64 %9635 to i32
  %9637 = xor i32 %9636, %9622
  %9638 = lshr i32 %9637, 4
  %9639 = trunc i32 %9638 to i8
  %9640 = and i8 %9639, 1
  %9641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9640, i8* %9641, align 1
  %9642 = icmp eq i32 %9622, 0
  %9643 = zext i1 %9642 to i8
  %9644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9643, i8* %9644, align 1
  %9645 = lshr i32 %9622, 31
  %9646 = trunc i32 %9645 to i8
  %9647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9646, i8* %9647, align 1
  %9648 = lshr i32 %9621, 31
  %9649 = xor i32 %9645, %9648
  %9650 = xor i32 %9645, 1
  %9651 = add i32 %9649, %9650
  %9652 = icmp eq i32 %9651, 2
  %9653 = zext i1 %9652 to i8
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9653, i8* %9654, align 1
  store %struct.Memory* %loadMem_40d180, %struct.Memory** %MEMORY
  %loadMem_40d183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9656 = getelementptr inbounds %struct.GPR, %struct.GPR* %9655, i32 0, i32 33
  %9657 = getelementptr inbounds %struct.Reg, %struct.Reg* %9656, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %9657 to i64*
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9659 = getelementptr inbounds %struct.GPR, %struct.GPR* %9658, i32 0, i32 5
  %9660 = getelementptr inbounds %struct.Reg, %struct.Reg* %9659, i32 0, i32 0
  %ECX.i360 = bitcast %union.anon* %9660 to i32*
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 7
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %RDX.i361 = bitcast %union.anon* %9663 to i64*
  %9664 = load i64, i64* %RDX.i361
  %9665 = mul i64 %9664, 4
  %9666 = add i64 %9665, 8922032
  %9667 = load i32, i32* %ECX.i360
  %9668 = zext i32 %9667 to i64
  %9669 = load i64, i64* %PC.i359
  %9670 = add i64 %9669, 7
  store i64 %9670, i64* %PC.i359
  %9671 = inttoptr i64 %9666 to i32*
  store i32 %9667, i32* %9671
  store %struct.Memory* %loadMem_40d183, %struct.Memory** %MEMORY
  %loadMem_40d18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9673 = getelementptr inbounds %struct.GPR, %struct.GPR* %9672, i32 0, i32 33
  %9674 = getelementptr inbounds %struct.Reg, %struct.Reg* %9673, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %9674 to i64*
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9676 = getelementptr inbounds %struct.GPR, %struct.GPR* %9675, i32 0, i32 5
  %9677 = getelementptr inbounds %struct.Reg, %struct.Reg* %9676, i32 0, i32 0
  %RCX.i358 = bitcast %union.anon* %9677 to i64*
  %9678 = load i64, i64* %PC.i357
  %9679 = add i64 %9678, 7
  store i64 %9679, i64* %PC.i357
  %9680 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %9681 = zext i32 %9680 to i64
  store i64 %9681, i64* %RCX.i358, align 8
  store %struct.Memory* %loadMem_40d18a, %struct.Memory** %MEMORY
  %loadMem_40d191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9683 = getelementptr inbounds %struct.GPR, %struct.GPR* %9682, i32 0, i32 33
  %9684 = getelementptr inbounds %struct.Reg, %struct.Reg* %9683, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %9684 to i64*
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9686 = getelementptr inbounds %struct.GPR, %struct.GPR* %9685, i32 0, i32 5
  %9687 = getelementptr inbounds %struct.Reg, %struct.Reg* %9686, i32 0, i32 0
  %RCX.i356 = bitcast %union.anon* %9687 to i64*
  %9688 = load i64, i64* %RCX.i356
  %9689 = load i64, i64* %PC.i355
  %9690 = add i64 %9689, 3
  store i64 %9690, i64* %PC.i355
  %9691 = xor i64 1, %9688
  %9692 = trunc i64 %9691 to i32
  %9693 = and i64 %9691, 4294967295
  store i64 %9693, i64* %RCX.i356, align 8
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9694, align 1
  %9695 = and i32 %9692, 255
  %9696 = call i32 @llvm.ctpop.i32(i32 %9695)
  %9697 = trunc i32 %9696 to i8
  %9698 = and i8 %9697, 1
  %9699 = xor i8 %9698, 1
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9699, i8* %9700, align 1
  %9701 = icmp eq i32 %9692, 0
  %9702 = zext i1 %9701 to i8
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9702, i8* %9703, align 1
  %9704 = lshr i32 %9692, 31
  %9705 = trunc i32 %9704 to i8
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9705, i8* %9706, align 1
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9707, align 1
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9708, align 1
  store %struct.Memory* %loadMem_40d191, %struct.Memory** %MEMORY
  %loadMem_40d194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9710 = getelementptr inbounds %struct.GPR, %struct.GPR* %9709, i32 0, i32 33
  %9711 = getelementptr inbounds %struct.Reg, %struct.Reg* %9710, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %9711 to i64*
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9713 = getelementptr inbounds %struct.GPR, %struct.GPR* %9712, i32 0, i32 5
  %9714 = getelementptr inbounds %struct.Reg, %struct.Reg* %9713, i32 0, i32 0
  %ECX.i354 = bitcast %union.anon* %9714 to i32*
  %9715 = load i32, i32* %ECX.i354
  %9716 = zext i32 %9715 to i64
  %9717 = load i64, i64* %PC.i353
  %9718 = add i64 %9717, 7
  store i64 %9718, i64* %PC.i353
  store i32 %9715, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40d194, %struct.Memory** %MEMORY
  %loadMem_40d19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9720 = getelementptr inbounds %struct.GPR, %struct.GPR* %9719, i32 0, i32 33
  %9721 = getelementptr inbounds %struct.Reg, %struct.Reg* %9720, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %9721 to i64*
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 7
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %RDX.i351 = bitcast %union.anon* %9724 to i64*
  %9725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9726 = getelementptr inbounds %struct.GPR, %struct.GPR* %9725, i32 0, i32 15
  %9727 = getelementptr inbounds %struct.Reg, %struct.Reg* %9726, i32 0, i32 0
  %RBP.i352 = bitcast %union.anon* %9727 to i64*
  %9728 = load i64, i64* %RBP.i352
  %9729 = sub i64 %9728, 20
  %9730 = load i64, i64* %PC.i350
  %9731 = add i64 %9730, 4
  store i64 %9731, i64* %PC.i350
  %9732 = inttoptr i64 %9729 to i32*
  %9733 = load i32, i32* %9732
  %9734 = sext i32 %9733 to i64
  store i64 %9734, i64* %RDX.i351, align 8
  store %struct.Memory* %loadMem_40d19b, %struct.Memory** %MEMORY
  %loadMem_40d19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9736 = getelementptr inbounds %struct.GPR, %struct.GPR* %9735, i32 0, i32 33
  %9737 = getelementptr inbounds %struct.Reg, %struct.Reg* %9736, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %9737 to i64*
  %9738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9739 = getelementptr inbounds %struct.GPR, %struct.GPR* %9738, i32 0, i32 5
  %9740 = getelementptr inbounds %struct.Reg, %struct.Reg* %9739, i32 0, i32 0
  %RCX.i348 = bitcast %union.anon* %9740 to i64*
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9742 = getelementptr inbounds %struct.GPR, %struct.GPR* %9741, i32 0, i32 7
  %9743 = getelementptr inbounds %struct.Reg, %struct.Reg* %9742, i32 0, i32 0
  %RDX.i349 = bitcast %union.anon* %9743 to i64*
  %9744 = load i64, i64* %RDX.i349
  %9745 = mul i64 %9744, 4
  %9746 = add i64 %9745, 9047808
  %9747 = load i64, i64* %PC.i347
  %9748 = add i64 %9747, 7
  store i64 %9748, i64* %PC.i347
  %9749 = inttoptr i64 %9746 to i32*
  %9750 = load i32, i32* %9749
  %9751 = zext i32 %9750 to i64
  store i64 %9751, i64* %RCX.i348, align 8
  store %struct.Memory* %loadMem_40d19f, %struct.Memory** %MEMORY
  %loadMem_40d1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9753 = getelementptr inbounds %struct.GPR, %struct.GPR* %9752, i32 0, i32 33
  %9754 = getelementptr inbounds %struct.Reg, %struct.Reg* %9753, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %9754 to i64*
  %9755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9756 = getelementptr inbounds %struct.GPR, %struct.GPR* %9755, i32 0, i32 5
  %9757 = getelementptr inbounds %struct.Reg, %struct.Reg* %9756, i32 0, i32 0
  %RCX.i346 = bitcast %union.anon* %9757 to i64*
  %9758 = load i64, i64* %RCX.i346
  %9759 = load i64, i64* %PC.i345
  %9760 = add i64 %9759, 7
  store i64 %9760, i64* %PC.i345
  %9761 = trunc i64 %9758 to i32
  %9762 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %9763 = xor i32 %9762, %9761
  %9764 = zext i32 %9763 to i64
  store i64 %9764, i64* %RCX.i346, align 8
  %9765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9765, align 1
  %9766 = and i32 %9763, 255
  %9767 = call i32 @llvm.ctpop.i32(i32 %9766)
  %9768 = trunc i32 %9767 to i8
  %9769 = and i8 %9768, 1
  %9770 = xor i8 %9769, 1
  %9771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9770, i8* %9771, align 1
  %9772 = icmp eq i32 %9763, 0
  %9773 = zext i1 %9772 to i8
  %9774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9773, i8* %9774, align 1
  %9775 = lshr i32 %9763, 31
  %9776 = trunc i32 %9775 to i8
  %9777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9776, i8* %9777, align 1
  %9778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9778, align 1
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9779, align 1
  store %struct.Memory* %loadMem_40d1a6, %struct.Memory** %MEMORY
  %loadMem_40d1ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9781 = getelementptr inbounds %struct.GPR, %struct.GPR* %9780, i32 0, i32 33
  %9782 = getelementptr inbounds %struct.Reg, %struct.Reg* %9781, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %9782 to i64*
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 5
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %ECX.i344 = bitcast %union.anon* %9785 to i32*
  %9786 = load i32, i32* %ECX.i344
  %9787 = zext i32 %9786 to i64
  %9788 = load i64, i64* %PC.i343
  %9789 = add i64 %9788, 7
  store i64 %9789, i64* %PC.i343
  store i32 %9786, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d1ad, %struct.Memory** %MEMORY
  %loadMem_40d1b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9791 = getelementptr inbounds %struct.GPR, %struct.GPR* %9790, i32 0, i32 33
  %9792 = getelementptr inbounds %struct.Reg, %struct.Reg* %9791, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %9792 to i64*
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9794 = getelementptr inbounds %struct.GPR, %struct.GPR* %9793, i32 0, i32 7
  %9795 = getelementptr inbounds %struct.Reg, %struct.Reg* %9794, i32 0, i32 0
  %RDX.i341 = bitcast %union.anon* %9795 to i64*
  %9796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9797 = getelementptr inbounds %struct.GPR, %struct.GPR* %9796, i32 0, i32 15
  %9798 = getelementptr inbounds %struct.Reg, %struct.Reg* %9797, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %9798 to i64*
  %9799 = load i64, i64* %RBP.i342
  %9800 = sub i64 %9799, 32
  %9801 = load i64, i64* %PC.i340
  %9802 = add i64 %9801, 4
  store i64 %9802, i64* %PC.i340
  %9803 = inttoptr i64 %9800 to i32*
  %9804 = load i32, i32* %9803
  %9805 = sext i32 %9804 to i64
  store i64 %9805, i64* %RDX.i341, align 8
  store %struct.Memory* %loadMem_40d1b4, %struct.Memory** %MEMORY
  %loadMem_40d1b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9807 = getelementptr inbounds %struct.GPR, %struct.GPR* %9806, i32 0, i32 33
  %9808 = getelementptr inbounds %struct.Reg, %struct.Reg* %9807, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %9808 to i64*
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 7
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %RDX.i339 = bitcast %union.anon* %9811 to i64*
  %9812 = load i64, i64* %RDX.i339
  %9813 = load i64, i64* %PC.i338
  %9814 = add i64 %9813, 7
  store i64 %9814, i64* %PC.i338
  %9815 = sext i64 %9812 to i128
  %9816 = and i128 %9815, -18446744073709551616
  %9817 = zext i64 %9812 to i128
  %9818 = or i128 %9816, %9817
  %9819 = mul i128 576, %9818
  %9820 = trunc i128 %9819 to i64
  store i64 %9820, i64* %RDX.i339, align 8
  %9821 = sext i64 %9820 to i128
  %9822 = icmp ne i128 %9821, %9819
  %9823 = zext i1 %9822 to i8
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9823, i8* %9824, align 1
  %9825 = trunc i128 %9819 to i32
  %9826 = and i32 %9825, 255
  %9827 = call i32 @llvm.ctpop.i32(i32 %9826)
  %9828 = trunc i32 %9827 to i8
  %9829 = and i8 %9828, 1
  %9830 = xor i8 %9829, 1
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9830, i8* %9831, align 1
  %9832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9832, align 1
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9833, align 1
  %9834 = lshr i64 %9820, 63
  %9835 = trunc i64 %9834 to i8
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9835, i8* %9836, align 1
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9823, i8* %9837, align 1
  store %struct.Memory* %loadMem_40d1b8, %struct.Memory** %MEMORY
  %loadMem_40d1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 33
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %9840 to i64*
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9842 = getelementptr inbounds %struct.GPR, %struct.GPR* %9841, i32 0, i32 1
  %9843 = getelementptr inbounds %struct.Reg, %struct.Reg* %9842, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %9843 to i64*
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 7
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %RDX.i337 = bitcast %union.anon* %9846 to i64*
  %9847 = load i64, i64* %RAX.i336
  %9848 = load i64, i64* %RDX.i337
  %9849 = load i64, i64* %PC.i335
  %9850 = add i64 %9849, 3
  store i64 %9850, i64* %PC.i335
  %9851 = add i64 %9848, %9847
  store i64 %9851, i64* %RAX.i336, align 8
  %9852 = icmp ult i64 %9851, %9847
  %9853 = icmp ult i64 %9851, %9848
  %9854 = or i1 %9852, %9853
  %9855 = zext i1 %9854 to i8
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9855, i8* %9856, align 1
  %9857 = trunc i64 %9851 to i32
  %9858 = and i32 %9857, 255
  %9859 = call i32 @llvm.ctpop.i32(i32 %9858)
  %9860 = trunc i32 %9859 to i8
  %9861 = and i8 %9860, 1
  %9862 = xor i8 %9861, 1
  %9863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9862, i8* %9863, align 1
  %9864 = xor i64 %9848, %9847
  %9865 = xor i64 %9864, %9851
  %9866 = lshr i64 %9865, 4
  %9867 = trunc i64 %9866 to i8
  %9868 = and i8 %9867, 1
  %9869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9868, i8* %9869, align 1
  %9870 = icmp eq i64 %9851, 0
  %9871 = zext i1 %9870 to i8
  %9872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9871, i8* %9872, align 1
  %9873 = lshr i64 %9851, 63
  %9874 = trunc i64 %9873 to i8
  %9875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9874, i8* %9875, align 1
  %9876 = lshr i64 %9847, 63
  %9877 = lshr i64 %9848, 63
  %9878 = xor i64 %9873, %9876
  %9879 = xor i64 %9873, %9877
  %9880 = add i64 %9878, %9879
  %9881 = icmp eq i64 %9880, 2
  %9882 = zext i1 %9881 to i8
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9882, i8* %9883, align 1
  store %struct.Memory* %loadMem_40d1bf, %struct.Memory** %MEMORY
  %loadMem_40d1c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9885 = getelementptr inbounds %struct.GPR, %struct.GPR* %9884, i32 0, i32 33
  %9886 = getelementptr inbounds %struct.Reg, %struct.Reg* %9885, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %9886 to i64*
  %9887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9888 = getelementptr inbounds %struct.GPR, %struct.GPR* %9887, i32 0, i32 7
  %9889 = getelementptr inbounds %struct.Reg, %struct.Reg* %9888, i32 0, i32 0
  %RDX.i333 = bitcast %union.anon* %9889 to i64*
  %9890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9891 = getelementptr inbounds %struct.GPR, %struct.GPR* %9890, i32 0, i32 15
  %9892 = getelementptr inbounds %struct.Reg, %struct.Reg* %9891, i32 0, i32 0
  %RBP.i334 = bitcast %union.anon* %9892 to i64*
  %9893 = load i64, i64* %RBP.i334
  %9894 = sub i64 %9893, 24
  %9895 = load i64, i64* %PC.i332
  %9896 = add i64 %9895, 4
  store i64 %9896, i64* %PC.i332
  %9897 = inttoptr i64 %9894 to i32*
  %9898 = load i32, i32* %9897
  %9899 = sext i32 %9898 to i64
  store i64 %9899, i64* %RDX.i333, align 8
  store %struct.Memory* %loadMem_40d1c2, %struct.Memory** %MEMORY
  %loadMem_40d1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9901 = getelementptr inbounds %struct.GPR, %struct.GPR* %9900, i32 0, i32 33
  %9902 = getelementptr inbounds %struct.Reg, %struct.Reg* %9901, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %9902 to i64*
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9904 = getelementptr inbounds %struct.GPR, %struct.GPR* %9903, i32 0, i32 1
  %9905 = getelementptr inbounds %struct.Reg, %struct.Reg* %9904, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %9905 to i64*
  %9906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9907 = getelementptr inbounds %struct.GPR, %struct.GPR* %9906, i32 0, i32 5
  %9908 = getelementptr inbounds %struct.Reg, %struct.Reg* %9907, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %9908 to i64*
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9910 = getelementptr inbounds %struct.GPR, %struct.GPR* %9909, i32 0, i32 7
  %9911 = getelementptr inbounds %struct.Reg, %struct.Reg* %9910, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9911 to i64*
  %9912 = load i64, i64* %RAX.i330
  %9913 = load i64, i64* %RDX.i
  %9914 = mul i64 %9913, 4
  %9915 = add i64 %9914, %9912
  %9916 = load i64, i64* %PC.i329
  %9917 = add i64 %9916, 3
  store i64 %9917, i64* %PC.i329
  %9918 = inttoptr i64 %9915 to i32*
  %9919 = load i32, i32* %9918
  %9920 = zext i32 %9919 to i64
  store i64 %9920, i64* %RCX.i331, align 8
  store %struct.Memory* %loadMem_40d1c6, %struct.Memory** %MEMORY
  %loadMem_40d1c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9922 = getelementptr inbounds %struct.GPR, %struct.GPR* %9921, i32 0, i32 33
  %9923 = getelementptr inbounds %struct.Reg, %struct.Reg* %9922, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %9923 to i64*
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9925 = getelementptr inbounds %struct.GPR, %struct.GPR* %9924, i32 0, i32 5
  %9926 = getelementptr inbounds %struct.Reg, %struct.Reg* %9925, i32 0, i32 0
  %RCX.i328 = bitcast %union.anon* %9926 to i64*
  %9927 = load i64, i64* %RCX.i328
  %9928 = load i64, i64* %PC.i327
  %9929 = add i64 %9928, 7
  store i64 %9929, i64* %PC.i327
  %9930 = trunc i64 %9927 to i32
  %9931 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %9932 = xor i32 %9931, %9930
  %9933 = zext i32 %9932 to i64
  store i64 %9933, i64* %RCX.i328, align 8
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9934, align 1
  %9935 = and i32 %9932, 255
  %9936 = call i32 @llvm.ctpop.i32(i32 %9935)
  %9937 = trunc i32 %9936 to i8
  %9938 = and i8 %9937, 1
  %9939 = xor i8 %9938, 1
  %9940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9939, i8* %9940, align 1
  %9941 = icmp eq i32 %9932, 0
  %9942 = zext i1 %9941 to i8
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9942, i8* %9943, align 1
  %9944 = lshr i32 %9932, 31
  %9945 = trunc i32 %9944 to i8
  %9946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9945, i8* %9946, align 1
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9947, align 1
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9948, align 1
  store %struct.Memory* %loadMem_40d1c9, %struct.Memory** %MEMORY
  %loadMem_40d1d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9950 = getelementptr inbounds %struct.GPR, %struct.GPR* %9949, i32 0, i32 33
  %9951 = getelementptr inbounds %struct.Reg, %struct.Reg* %9950, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %9951 to i64*
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9953 = getelementptr inbounds %struct.GPR, %struct.GPR* %9952, i32 0, i32 5
  %9954 = getelementptr inbounds %struct.Reg, %struct.Reg* %9953, i32 0, i32 0
  %ECX.i326 = bitcast %union.anon* %9954 to i32*
  %9955 = load i32, i32* %ECX.i326
  %9956 = zext i32 %9955 to i64
  %9957 = load i64, i64* %PC.i325
  %9958 = add i64 %9957, 7
  store i64 %9958, i64* %PC.i325
  store i32 %9955, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d1d0, %struct.Memory** %MEMORY
  %loadMem_40d1d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9960 = getelementptr inbounds %struct.GPR, %struct.GPR* %9959, i32 0, i32 33
  %9961 = getelementptr inbounds %struct.Reg, %struct.Reg* %9960, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %9961 to i64*
  %9962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9963 = getelementptr inbounds %struct.GPR, %struct.GPR* %9962, i32 0, i32 1
  %9964 = getelementptr inbounds %struct.Reg, %struct.Reg* %9963, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %9964 to i64*
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 15
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %9967 to i64*
  %9968 = load i64, i64* %RBP.i324
  %9969 = sub i64 %9968, 32
  %9970 = load i64, i64* %PC.i322
  %9971 = add i64 %9970, 4
  store i64 %9971, i64* %PC.i322
  %9972 = inttoptr i64 %9969 to i32*
  %9973 = load i32, i32* %9972
  %9974 = sext i32 %9973 to i64
  store i64 %9974, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_40d1d7, %struct.Memory** %MEMORY
  %loadMem_40d1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9976 = getelementptr inbounds %struct.GPR, %struct.GPR* %9975, i32 0, i32 33
  %9977 = getelementptr inbounds %struct.Reg, %struct.Reg* %9976, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %9977 to i64*
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9979 = getelementptr inbounds %struct.GPR, %struct.GPR* %9978, i32 0, i32 1
  %9980 = getelementptr inbounds %struct.Reg, %struct.Reg* %9979, i32 0, i32 0
  %RAX.i320 = bitcast %union.anon* %9980 to i64*
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9982 = getelementptr inbounds %struct.GPR, %struct.GPR* %9981, i32 0, i32 5
  %9983 = getelementptr inbounds %struct.Reg, %struct.Reg* %9982, i32 0, i32 0
  %RCX.i321 = bitcast %union.anon* %9983 to i64*
  %9984 = load i64, i64* %RAX.i320
  %9985 = mul i64 %9984, 4
  %9986 = add i64 %9985, 6478512
  %9987 = load i64, i64* %PC.i319
  %9988 = add i64 %9987, 7
  store i64 %9988, i64* %PC.i319
  %9989 = inttoptr i64 %9986 to i32*
  %9990 = load i32, i32* %9989
  %9991 = zext i32 %9990 to i64
  store i64 %9991, i64* %RCX.i321, align 8
  store %struct.Memory* %loadMem_40d1db, %struct.Memory** %MEMORY
  %loadMem_40d1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9993 = getelementptr inbounds %struct.GPR, %struct.GPR* %9992, i32 0, i32 33
  %9994 = getelementptr inbounds %struct.Reg, %struct.Reg* %9993, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %9994 to i64*
  %9995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9996 = getelementptr inbounds %struct.GPR, %struct.GPR* %9995, i32 0, i32 9
  %9997 = getelementptr inbounds %struct.Reg, %struct.Reg* %9996, i32 0, i32 0
  %RSI.i318 = bitcast %union.anon* %9997 to i64*
  %9998 = load i64, i64* %PC.i317
  %9999 = add i64 %9998, 7
  store i64 %9999, i64* %PC.i317
  %10000 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %10001 = zext i32 %10000 to i64
  store i64 %10001, i64* %RSI.i318, align 8
  store %struct.Memory* %loadMem_40d1e2, %struct.Memory** %MEMORY
  %loadMem_40d1e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10003 = getelementptr inbounds %struct.GPR, %struct.GPR* %10002, i32 0, i32 33
  %10004 = getelementptr inbounds %struct.Reg, %struct.Reg* %10003, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %10004 to i64*
  %10005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10006 = getelementptr inbounds %struct.GPR, %struct.GPR* %10005, i32 0, i32 5
  %10007 = getelementptr inbounds %struct.Reg, %struct.Reg* %10006, i32 0, i32 0
  %ECX.i316 = bitcast %union.anon* %10007 to i32*
  %10008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10009 = getelementptr inbounds %struct.GPR, %struct.GPR* %10008, i32 0, i32 9
  %10010 = getelementptr inbounds %struct.Reg, %struct.Reg* %10009, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %10010 to i64*
  %10011 = load i64, i64* %RSI.i
  %10012 = load i32, i32* %ECX.i316
  %10013 = zext i32 %10012 to i64
  %10014 = load i64, i64* %PC.i315
  %10015 = add i64 %10014, 2
  store i64 %10015, i64* %PC.i315
  %10016 = trunc i64 %10011 to i32
  %10017 = sub i32 %10016, %10012
  %10018 = zext i32 %10017 to i64
  store i64 %10018, i64* %RSI.i, align 8
  %10019 = icmp ult i32 %10016, %10012
  %10020 = zext i1 %10019 to i8
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10020, i8* %10021, align 1
  %10022 = and i32 %10017, 255
  %10023 = call i32 @llvm.ctpop.i32(i32 %10022)
  %10024 = trunc i32 %10023 to i8
  %10025 = and i8 %10024, 1
  %10026 = xor i8 %10025, 1
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10026, i8* %10027, align 1
  %10028 = xor i64 %10013, %10011
  %10029 = trunc i64 %10028 to i32
  %10030 = xor i32 %10029, %10017
  %10031 = lshr i32 %10030, 4
  %10032 = trunc i32 %10031 to i8
  %10033 = and i8 %10032, 1
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10033, i8* %10034, align 1
  %10035 = icmp eq i32 %10017, 0
  %10036 = zext i1 %10035 to i8
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10036, i8* %10037, align 1
  %10038 = lshr i32 %10017, 31
  %10039 = trunc i32 %10038 to i8
  %10040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10039, i8* %10040, align 1
  %10041 = lshr i32 %10016, 31
  %10042 = lshr i32 %10012, 31
  %10043 = xor i32 %10042, %10041
  %10044 = xor i32 %10038, %10041
  %10045 = add i32 %10044, %10043
  %10046 = icmp eq i32 %10045, 2
  %10047 = zext i1 %10046 to i8
  %10048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10047, i8* %10048, align 1
  store %struct.Memory* %loadMem_40d1e9, %struct.Memory** %MEMORY
  %loadMem_40d1eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10050 = getelementptr inbounds %struct.GPR, %struct.GPR* %10049, i32 0, i32 33
  %10051 = getelementptr inbounds %struct.Reg, %struct.Reg* %10050, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %10051 to i64*
  %10052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10053 = getelementptr inbounds %struct.GPR, %struct.GPR* %10052, i32 0, i32 9
  %10054 = getelementptr inbounds %struct.Reg, %struct.Reg* %10053, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %10054 to i32*
  %10055 = load i32, i32* %ESI.i
  %10056 = zext i32 %10055 to i64
  %10057 = load i64, i64* %PC.i314
  %10058 = add i64 %10057, 7
  store i64 %10058, i64* %PC.i314
  store i32 %10055, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40d1eb, %struct.Memory** %MEMORY
  %loadMem_40d1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10060 = getelementptr inbounds %struct.GPR, %struct.GPR* %10059, i32 0, i32 33
  %10061 = getelementptr inbounds %struct.Reg, %struct.Reg* %10060, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %10061 to i64*
  %10062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10063 = getelementptr inbounds %struct.GPR, %struct.GPR* %10062, i32 0, i32 5
  %10064 = getelementptr inbounds %struct.Reg, %struct.Reg* %10063, i32 0, i32 0
  %RCX.i313 = bitcast %union.anon* %10064 to i64*
  %10065 = load i64, i64* %PC.i312
  %10066 = add i64 %10065, 7
  store i64 %10066, i64* %PC.i312
  %10067 = load i32, i32* bitcast (%G_0x62dab8_type* @G_0x62dab8 to i32*)
  %10068 = zext i32 %10067 to i64
  store i64 %10068, i64* %RCX.i313, align 8
  store %struct.Memory* %loadMem_40d1f2, %struct.Memory** %MEMORY
  %loadMem_40d1f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10070 = getelementptr inbounds %struct.GPR, %struct.GPR* %10069, i32 0, i32 33
  %10071 = getelementptr inbounds %struct.Reg, %struct.Reg* %10070, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %10071 to i64*
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10073 = getelementptr inbounds %struct.GPR, %struct.GPR* %10072, i32 0, i32 5
  %10074 = getelementptr inbounds %struct.Reg, %struct.Reg* %10073, i32 0, i32 0
  %RCX.i311 = bitcast %union.anon* %10074 to i64*
  %10075 = load i64, i64* %RCX.i311
  %10076 = load i64, i64* %PC.i310
  %10077 = add i64 %10076, 7
  store i64 %10077, i64* %PC.i310
  %10078 = trunc i64 %10075 to i32
  %10079 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %10080 = add i32 %10079, %10078
  %10081 = zext i32 %10080 to i64
  store i64 %10081, i64* %RCX.i311, align 8
  %10082 = icmp ult i32 %10080, %10078
  %10083 = icmp ult i32 %10080, %10079
  %10084 = or i1 %10082, %10083
  %10085 = zext i1 %10084 to i8
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10085, i8* %10086, align 1
  %10087 = and i32 %10080, 255
  %10088 = call i32 @llvm.ctpop.i32(i32 %10087)
  %10089 = trunc i32 %10088 to i8
  %10090 = and i8 %10089, 1
  %10091 = xor i8 %10090, 1
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10091, i8* %10092, align 1
  %10093 = xor i32 %10079, %10078
  %10094 = xor i32 %10093, %10080
  %10095 = lshr i32 %10094, 4
  %10096 = trunc i32 %10095 to i8
  %10097 = and i8 %10096, 1
  %10098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10097, i8* %10098, align 1
  %10099 = icmp eq i32 %10080, 0
  %10100 = zext i1 %10099 to i8
  %10101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10100, i8* %10101, align 1
  %10102 = lshr i32 %10080, 31
  %10103 = trunc i32 %10102 to i8
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10103, i8* %10104, align 1
  %10105 = lshr i32 %10078, 31
  %10106 = lshr i32 %10079, 31
  %10107 = xor i32 %10102, %10105
  %10108 = xor i32 %10102, %10106
  %10109 = add i32 %10107, %10108
  %10110 = icmp eq i32 %10109, 2
  %10111 = zext i1 %10110 to i8
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10111, i8* %10112, align 1
  store %struct.Memory* %loadMem_40d1f9, %struct.Memory** %MEMORY
  %loadMem_40d200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10114 = getelementptr inbounds %struct.GPR, %struct.GPR* %10113, i32 0, i32 33
  %10115 = getelementptr inbounds %struct.Reg, %struct.Reg* %10114, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %10115 to i64*
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10117 = getelementptr inbounds %struct.GPR, %struct.GPR* %10116, i32 0, i32 5
  %10118 = getelementptr inbounds %struct.Reg, %struct.Reg* %10117, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %10118 to i32*
  %10119 = load i32, i32* %ECX.i
  %10120 = zext i32 %10119 to i64
  %10121 = load i64, i64* %PC.i309
  %10122 = add i64 %10121, 7
  store i64 %10122, i64* %PC.i309
  store i32 %10119, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  store %struct.Memory* %loadMem_40d200, %struct.Memory** %MEMORY
  %loadMem_40d207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10124 = getelementptr inbounds %struct.GPR, %struct.GPR* %10123, i32 0, i32 33
  %10125 = getelementptr inbounds %struct.Reg, %struct.Reg* %10124, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %10125 to i64*
  %10126 = load i64, i64* %PC.i308
  %10127 = add i64 %10126, 1021
  %10128 = load i64, i64* %PC.i308
  %10129 = add i64 %10128, 5
  store i64 %10129, i64* %PC.i308
  %10130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10127, i64* %10130, align 8
  store %struct.Memory* %loadMem_40d207, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d20c:                                  ; preds = %block_.L_40d038
  %loadMem_40d20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10132 = getelementptr inbounds %struct.GPR, %struct.GPR* %10131, i32 0, i32 33
  %10133 = getelementptr inbounds %struct.Reg, %struct.Reg* %10132, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %10133 to i64*
  %10134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10135 = getelementptr inbounds %struct.GPR, %struct.GPR* %10134, i32 0, i32 1
  %10136 = getelementptr inbounds %struct.Reg, %struct.Reg* %10135, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %10136 to i64*
  %10137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10138 = getelementptr inbounds %struct.GPR, %struct.GPR* %10137, i32 0, i32 15
  %10139 = getelementptr inbounds %struct.Reg, %struct.Reg* %10138, i32 0, i32 0
  %RBP.i307 = bitcast %union.anon* %10139 to i64*
  %10140 = load i64, i64* %RBP.i307
  %10141 = sub i64 %10140, 24
  %10142 = load i64, i64* %PC.i305
  %10143 = add i64 %10142, 4
  store i64 %10143, i64* %PC.i305
  %10144 = inttoptr i64 %10141 to i32*
  %10145 = load i32, i32* %10144
  %10146 = sext i32 %10145 to i64
  store i64 %10146, i64* %RAX.i306, align 8
  store %struct.Memory* %loadMem_40d20c, %struct.Memory** %MEMORY
  %loadMem_40d210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10148 = getelementptr inbounds %struct.GPR, %struct.GPR* %10147, i32 0, i32 33
  %10149 = getelementptr inbounds %struct.Reg, %struct.Reg* %10148, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %10149 to i64*
  %10150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10151 = getelementptr inbounds %struct.GPR, %struct.GPR* %10150, i32 0, i32 1
  %10152 = getelementptr inbounds %struct.Reg, %struct.Reg* %10151, i32 0, i32 0
  %RAX.i304 = bitcast %union.anon* %10152 to i64*
  %10153 = load i64, i64* %RAX.i304
  %10154 = mul i64 %10153, 4
  %10155 = add i64 %10154, 8807744
  %10156 = load i64, i64* %PC.i303
  %10157 = add i64 %10156, 8
  store i64 %10157, i64* %PC.i303
  %10158 = inttoptr i64 %10155 to i32*
  %10159 = load i32, i32* %10158
  %10160 = sub i32 %10159, 5
  %10161 = icmp ult i32 %10159, 5
  %10162 = zext i1 %10161 to i8
  %10163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10162, i8* %10163, align 1
  %10164 = and i32 %10160, 255
  %10165 = call i32 @llvm.ctpop.i32(i32 %10164)
  %10166 = trunc i32 %10165 to i8
  %10167 = and i8 %10166, 1
  %10168 = xor i8 %10167, 1
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10168, i8* %10169, align 1
  %10170 = xor i32 %10159, 5
  %10171 = xor i32 %10170, %10160
  %10172 = lshr i32 %10171, 4
  %10173 = trunc i32 %10172 to i8
  %10174 = and i8 %10173, 1
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10174, i8* %10175, align 1
  %10176 = icmp eq i32 %10160, 0
  %10177 = zext i1 %10176 to i8
  %10178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10177, i8* %10178, align 1
  %10179 = lshr i32 %10160, 31
  %10180 = trunc i32 %10179 to i8
  %10181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10180, i8* %10181, align 1
  %10182 = lshr i32 %10159, 31
  %10183 = xor i32 %10179, %10182
  %10184 = add i32 %10183, %10182
  %10185 = icmp eq i32 %10184, 2
  %10186 = zext i1 %10185 to i8
  %10187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10186, i8* %10187, align 1
  store %struct.Memory* %loadMem_40d210, %struct.Memory** %MEMORY
  %loadMem_40d218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 33
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %10190 to i64*
  %10191 = load i64, i64* %PC.i302
  %10192 = add i64 %10191, 500
  %10193 = load i64, i64* %PC.i302
  %10194 = add i64 %10193, 6
  %10195 = load i64, i64* %PC.i302
  %10196 = add i64 %10195, 6
  store i64 %10196, i64* %PC.i302
  %10197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10198 = load i8, i8* %10197, align 1
  %10199 = icmp eq i8 %10198, 0
  %10200 = zext i1 %10199 to i8
  store i8 %10200, i8* %BRANCH_TAKEN, align 1
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10202 = select i1 %10199, i64 %10192, i64 %10194
  store i64 %10202, i64* %10201, align 8
  store %struct.Memory* %loadMem_40d218, %struct.Memory** %MEMORY
  %loadBr_40d218 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d218 = icmp eq i8 %loadBr_40d218, 1
  br i1 %cmpBr_40d218, label %block_.L_40d40c, label %block_40d21e

block_40d21e:                                     ; preds = %block_.L_40d20c
  %loadMem_40d21e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10204 = getelementptr inbounds %struct.GPR, %struct.GPR* %10203, i32 0, i32 33
  %10205 = getelementptr inbounds %struct.Reg, %struct.Reg* %10204, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %10205 to i64*
  %10206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10207 = getelementptr inbounds %struct.GPR, %struct.GPR* %10206, i32 0, i32 1
  %10208 = getelementptr inbounds %struct.Reg, %struct.Reg* %10207, i32 0, i32 0
  %RAX.i300 = bitcast %union.anon* %10208 to i64*
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 15
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %RBP.i301 = bitcast %union.anon* %10211 to i64*
  %10212 = load i64, i64* %RBP.i301
  %10213 = sub i64 %10212, 20
  %10214 = load i64, i64* %PC.i299
  %10215 = add i64 %10214, 3
  store i64 %10215, i64* %PC.i299
  %10216 = inttoptr i64 %10213 to i32*
  %10217 = load i32, i32* %10216
  %10218 = zext i32 %10217 to i64
  store i64 %10218, i64* %RAX.i300, align 8
  store %struct.Memory* %loadMem_40d21e, %struct.Memory** %MEMORY
  %loadMem_40d221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10220 = getelementptr inbounds %struct.GPR, %struct.GPR* %10219, i32 0, i32 33
  %10221 = getelementptr inbounds %struct.Reg, %struct.Reg* %10220, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %10221 to i64*
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10223 = getelementptr inbounds %struct.GPR, %struct.GPR* %10222, i32 0, i32 1
  %10224 = getelementptr inbounds %struct.Reg, %struct.Reg* %10223, i32 0, i32 0
  %EAX.i298 = bitcast %union.anon* %10224 to i32*
  %10225 = load i32, i32* %EAX.i298
  %10226 = zext i32 %10225 to i64
  %10227 = load i64, i64* %PC.i297
  %10228 = add i64 %10227, 7
  store i64 %10228, i64* %PC.i297
  store i32 %10225, i32* bitcast (%G_0x86bd7c_type* @G_0x86bd7c to i32*)
  store %struct.Memory* %loadMem_40d221, %struct.Memory** %MEMORY
  %loadMem_40d228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10230 = getelementptr inbounds %struct.GPR, %struct.GPR* %10229, i32 0, i32 33
  %10231 = getelementptr inbounds %struct.Reg, %struct.Reg* %10230, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %10231 to i64*
  %10232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10233 = getelementptr inbounds %struct.GPR, %struct.GPR* %10232, i32 0, i32 1
  %10234 = getelementptr inbounds %struct.Reg, %struct.Reg* %10233, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %10234 to i64*
  %10235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10236 = getelementptr inbounds %struct.GPR, %struct.GPR* %10235, i32 0, i32 15
  %10237 = getelementptr inbounds %struct.Reg, %struct.Reg* %10236, i32 0, i32 0
  %RBP.i296 = bitcast %union.anon* %10237 to i64*
  %10238 = load i64, i64* %RBP.i296
  %10239 = sub i64 %10238, 28
  %10240 = load i64, i64* %PC.i294
  %10241 = add i64 %10240, 3
  store i64 %10241, i64* %PC.i294
  %10242 = inttoptr i64 %10239 to i32*
  %10243 = load i32, i32* %10242
  %10244 = zext i32 %10243 to i64
  store i64 %10244, i64* %RAX.i295, align 8
  store %struct.Memory* %loadMem_40d228, %struct.Memory** %MEMORY
  %loadMem_40d22b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10246 = getelementptr inbounds %struct.GPR, %struct.GPR* %10245, i32 0, i32 33
  %10247 = getelementptr inbounds %struct.Reg, %struct.Reg* %10246, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %10247 to i64*
  %10248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10249 = getelementptr inbounds %struct.GPR, %struct.GPR* %10248, i32 0, i32 5
  %10250 = getelementptr inbounds %struct.Reg, %struct.Reg* %10249, i32 0, i32 0
  %RCX.i292 = bitcast %union.anon* %10250 to i64*
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10252 = getelementptr inbounds %struct.GPR, %struct.GPR* %10251, i32 0, i32 15
  %10253 = getelementptr inbounds %struct.Reg, %struct.Reg* %10252, i32 0, i32 0
  %RBP.i293 = bitcast %union.anon* %10253 to i64*
  %10254 = load i64, i64* %RBP.i293
  %10255 = sub i64 %10254, 24
  %10256 = load i64, i64* %PC.i291
  %10257 = add i64 %10256, 4
  store i64 %10257, i64* %PC.i291
  %10258 = inttoptr i64 %10255 to i32*
  %10259 = load i32, i32* %10258
  %10260 = sext i32 %10259 to i64
  store i64 %10260, i64* %RCX.i292, align 8
  store %struct.Memory* %loadMem_40d22b, %struct.Memory** %MEMORY
  %loadMem_40d22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10262 = getelementptr inbounds %struct.GPR, %struct.GPR* %10261, i32 0, i32 33
  %10263 = getelementptr inbounds %struct.Reg, %struct.Reg* %10262, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %10263 to i64*
  %10264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10265 = getelementptr inbounds %struct.GPR, %struct.GPR* %10264, i32 0, i32 1
  %10266 = getelementptr inbounds %struct.Reg, %struct.Reg* %10265, i32 0, i32 0
  %EAX.i289 = bitcast %union.anon* %10266 to i32*
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10268 = getelementptr inbounds %struct.GPR, %struct.GPR* %10267, i32 0, i32 5
  %10269 = getelementptr inbounds %struct.Reg, %struct.Reg* %10268, i32 0, i32 0
  %RCX.i290 = bitcast %union.anon* %10269 to i64*
  %10270 = load i64, i64* %RCX.i290
  %10271 = mul i64 %10270, 4
  %10272 = add i64 %10271, 8807744
  %10273 = load i32, i32* %EAX.i289
  %10274 = zext i32 %10273 to i64
  %10275 = load i64, i64* %PC.i288
  %10276 = add i64 %10275, 7
  store i64 %10276, i64* %PC.i288
  %10277 = inttoptr i64 %10272 to i32*
  store i32 %10273, i32* %10277
  store %struct.Memory* %loadMem_40d22f, %struct.Memory** %MEMORY
  %loadMem_40d236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10279 = getelementptr inbounds %struct.GPR, %struct.GPR* %10278, i32 0, i32 33
  %10280 = getelementptr inbounds %struct.Reg, %struct.Reg* %10279, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %10280 to i64*
  %10281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10282 = getelementptr inbounds %struct.GPR, %struct.GPR* %10281, i32 0, i32 5
  %10283 = getelementptr inbounds %struct.Reg, %struct.Reg* %10282, i32 0, i32 0
  %RCX.i286 = bitcast %union.anon* %10283 to i64*
  %10284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10285 = getelementptr inbounds %struct.GPR, %struct.GPR* %10284, i32 0, i32 15
  %10286 = getelementptr inbounds %struct.Reg, %struct.Reg* %10285, i32 0, i32 0
  %RBP.i287 = bitcast %union.anon* %10286 to i64*
  %10287 = load i64, i64* %RBP.i287
  %10288 = sub i64 %10287, 20
  %10289 = load i64, i64* %PC.i285
  %10290 = add i64 %10289, 4
  store i64 %10290, i64* %PC.i285
  %10291 = inttoptr i64 %10288 to i32*
  %10292 = load i32, i32* %10291
  %10293 = sext i32 %10292 to i64
  store i64 %10293, i64* %RCX.i286, align 8
  store %struct.Memory* %loadMem_40d236, %struct.Memory** %MEMORY
  %loadMem_40d23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10295 = getelementptr inbounds %struct.GPR, %struct.GPR* %10294, i32 0, i32 33
  %10296 = getelementptr inbounds %struct.Reg, %struct.Reg* %10295, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %10296 to i64*
  %10297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10298 = getelementptr inbounds %struct.GPR, %struct.GPR* %10297, i32 0, i32 5
  %10299 = getelementptr inbounds %struct.Reg, %struct.Reg* %10298, i32 0, i32 0
  %RCX.i284 = bitcast %union.anon* %10299 to i64*
  %10300 = load i64, i64* %RCX.i284
  %10301 = mul i64 %10300, 4
  %10302 = add i64 %10301, 8807744
  %10303 = load i64, i64* %PC.i283
  %10304 = add i64 %10303, 11
  store i64 %10304, i64* %PC.i283
  %10305 = inttoptr i64 %10302 to i32*
  store i32 5, i32* %10305
  store %struct.Memory* %loadMem_40d23a, %struct.Memory** %MEMORY
  %loadMem_40d245 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10307 = getelementptr inbounds %struct.GPR, %struct.GPR* %10306, i32 0, i32 33
  %10308 = getelementptr inbounds %struct.Reg, %struct.Reg* %10307, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %10308 to i64*
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10310 = getelementptr inbounds %struct.GPR, %struct.GPR* %10309, i32 0, i32 5
  %10311 = getelementptr inbounds %struct.Reg, %struct.Reg* %10310, i32 0, i32 0
  %RCX.i281 = bitcast %union.anon* %10311 to i64*
  %10312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10313 = getelementptr inbounds %struct.GPR, %struct.GPR* %10312, i32 0, i32 15
  %10314 = getelementptr inbounds %struct.Reg, %struct.Reg* %10313, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %10314 to i64*
  %10315 = load i64, i64* %RBP.i282
  %10316 = sub i64 %10315, 24
  %10317 = load i64, i64* %PC.i280
  %10318 = add i64 %10317, 4
  store i64 %10318, i64* %PC.i280
  %10319 = inttoptr i64 %10316 to i32*
  %10320 = load i32, i32* %10319
  %10321 = sext i32 %10320 to i64
  store i64 %10321, i64* %RCX.i281, align 8
  store %struct.Memory* %loadMem_40d245, %struct.Memory** %MEMORY
  %loadMem_40d249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10323 = getelementptr inbounds %struct.GPR, %struct.GPR* %10322, i32 0, i32 33
  %10324 = getelementptr inbounds %struct.Reg, %struct.Reg* %10323, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %10324 to i64*
  %10325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10326 = getelementptr inbounds %struct.GPR, %struct.GPR* %10325, i32 0, i32 1
  %10327 = getelementptr inbounds %struct.Reg, %struct.Reg* %10326, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %10327 to i64*
  %10328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10329 = getelementptr inbounds %struct.GPR, %struct.GPR* %10328, i32 0, i32 5
  %10330 = getelementptr inbounds %struct.Reg, %struct.Reg* %10329, i32 0, i32 0
  %RCX.i279 = bitcast %union.anon* %10330 to i64*
  %10331 = load i64, i64* %RCX.i279
  %10332 = mul i64 %10331, 4
  %10333 = add i64 %10332, 8922032
  %10334 = load i64, i64* %PC.i277
  %10335 = add i64 %10334, 7
  store i64 %10335, i64* %PC.i277
  %10336 = inttoptr i64 %10333 to i32*
  %10337 = load i32, i32* %10336
  %10338 = zext i32 %10337 to i64
  store i64 %10338, i64* %RAX.i278, align 8
  store %struct.Memory* %loadMem_40d249, %struct.Memory** %MEMORY
  %loadMem_40d250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10340 = getelementptr inbounds %struct.GPR, %struct.GPR* %10339, i32 0, i32 33
  %10341 = getelementptr inbounds %struct.Reg, %struct.Reg* %10340, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %10341 to i64*
  %10342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10343 = getelementptr inbounds %struct.GPR, %struct.GPR* %10342, i32 0, i32 1
  %10344 = getelementptr inbounds %struct.Reg, %struct.Reg* %10343, i32 0, i32 0
  %RAX.i276 = bitcast %union.anon* %10344 to i64*
  %10345 = load i64, i64* %RAX.i276
  %10346 = load i64, i64* %PC.i275
  %10347 = add i64 %10346, 3
  store i64 %10347, i64* %PC.i275
  %10348 = trunc i64 %10345 to i32
  %10349 = add i32 -1, %10348
  %10350 = zext i32 %10349 to i64
  store i64 %10350, i64* %RAX.i276, align 8
  %10351 = icmp ult i32 %10349, %10348
  %10352 = icmp ult i32 %10349, -1
  %10353 = or i1 %10351, %10352
  %10354 = zext i1 %10353 to i8
  %10355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10354, i8* %10355, align 1
  %10356 = and i32 %10349, 255
  %10357 = call i32 @llvm.ctpop.i32(i32 %10356)
  %10358 = trunc i32 %10357 to i8
  %10359 = and i8 %10358, 1
  %10360 = xor i8 %10359, 1
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10360, i8* %10361, align 1
  %10362 = xor i64 -1, %10345
  %10363 = trunc i64 %10362 to i32
  %10364 = xor i32 %10363, %10349
  %10365 = lshr i32 %10364, 4
  %10366 = trunc i32 %10365 to i8
  %10367 = and i8 %10366, 1
  %10368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10367, i8* %10368, align 1
  %10369 = icmp eq i32 %10349, 0
  %10370 = zext i1 %10369 to i8
  %10371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10370, i8* %10371, align 1
  %10372 = lshr i32 %10349, 31
  %10373 = trunc i32 %10372 to i8
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10373, i8* %10374, align 1
  %10375 = lshr i32 %10348, 31
  %10376 = xor i32 %10372, %10375
  %10377 = xor i32 %10372, 1
  %10378 = add i32 %10376, %10377
  %10379 = icmp eq i32 %10378, 2
  %10380 = zext i1 %10379 to i8
  %10381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10380, i8* %10381, align 1
  store %struct.Memory* %loadMem_40d250, %struct.Memory** %MEMORY
  %loadMem_40d253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10383 = getelementptr inbounds %struct.GPR, %struct.GPR* %10382, i32 0, i32 33
  %10384 = getelementptr inbounds %struct.Reg, %struct.Reg* %10383, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %10384 to i64*
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10386 = getelementptr inbounds %struct.GPR, %struct.GPR* %10385, i32 0, i32 1
  %10387 = getelementptr inbounds %struct.Reg, %struct.Reg* %10386, i32 0, i32 0
  %EAX.i273 = bitcast %union.anon* %10387 to i32*
  %10388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10389 = getelementptr inbounds %struct.GPR, %struct.GPR* %10388, i32 0, i32 5
  %10390 = getelementptr inbounds %struct.Reg, %struct.Reg* %10389, i32 0, i32 0
  %RCX.i274 = bitcast %union.anon* %10390 to i64*
  %10391 = load i64, i64* %RCX.i274
  %10392 = mul i64 %10391, 4
  %10393 = add i64 %10392, 8922032
  %10394 = load i32, i32* %EAX.i273
  %10395 = zext i32 %10394 to i64
  %10396 = load i64, i64* %PC.i272
  %10397 = add i64 %10396, 7
  store i64 %10397, i64* %PC.i272
  %10398 = inttoptr i64 %10393 to i32*
  store i32 %10394, i32* %10398
  store %struct.Memory* %loadMem_40d253, %struct.Memory** %MEMORY
  %loadMem_40d25a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 33
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %10401 to i64*
  %10402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10403 = getelementptr inbounds %struct.GPR, %struct.GPR* %10402, i32 0, i32 5
  %10404 = getelementptr inbounds %struct.Reg, %struct.Reg* %10403, i32 0, i32 0
  %RCX.i270 = bitcast %union.anon* %10404 to i64*
  %10405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10406 = getelementptr inbounds %struct.GPR, %struct.GPR* %10405, i32 0, i32 15
  %10407 = getelementptr inbounds %struct.Reg, %struct.Reg* %10406, i32 0, i32 0
  %RBP.i271 = bitcast %union.anon* %10407 to i64*
  %10408 = load i64, i64* %RBP.i271
  %10409 = sub i64 %10408, 20
  %10410 = load i64, i64* %PC.i269
  %10411 = add i64 %10410, 4
  store i64 %10411, i64* %PC.i269
  %10412 = inttoptr i64 %10409 to i32*
  %10413 = load i32, i32* %10412
  %10414 = sext i32 %10413 to i64
  store i64 %10414, i64* %RCX.i270, align 8
  store %struct.Memory* %loadMem_40d25a, %struct.Memory** %MEMORY
  %loadMem_40d25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 33
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %10417 to i64*
  %10418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10419 = getelementptr inbounds %struct.GPR, %struct.GPR* %10418, i32 0, i32 1
  %10420 = getelementptr inbounds %struct.Reg, %struct.Reg* %10419, i32 0, i32 0
  %RAX.i267 = bitcast %union.anon* %10420 to i64*
  %10421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10422 = getelementptr inbounds %struct.GPR, %struct.GPR* %10421, i32 0, i32 5
  %10423 = getelementptr inbounds %struct.Reg, %struct.Reg* %10422, i32 0, i32 0
  %RCX.i268 = bitcast %union.anon* %10423 to i64*
  %10424 = load i64, i64* %RCX.i268
  %10425 = mul i64 %10424, 4
  %10426 = add i64 %10425, 8922032
  %10427 = load i64, i64* %PC.i266
  %10428 = add i64 %10427, 7
  store i64 %10428, i64* %PC.i266
  %10429 = inttoptr i64 %10426 to i32*
  %10430 = load i32, i32* %10429
  %10431 = zext i32 %10430 to i64
  store i64 %10431, i64* %RAX.i267, align 8
  store %struct.Memory* %loadMem_40d25e, %struct.Memory** %MEMORY
  %loadMem_40d265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10433 = getelementptr inbounds %struct.GPR, %struct.GPR* %10432, i32 0, i32 33
  %10434 = getelementptr inbounds %struct.Reg, %struct.Reg* %10433, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %10434 to i64*
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10436 = getelementptr inbounds %struct.GPR, %struct.GPR* %10435, i32 0, i32 1
  %10437 = getelementptr inbounds %struct.Reg, %struct.Reg* %10436, i32 0, i32 0
  %RAX.i265 = bitcast %union.anon* %10437 to i64*
  %10438 = load i64, i64* %RAX.i265
  %10439 = load i64, i64* %PC.i264
  %10440 = add i64 %10439, 3
  store i64 %10440, i64* %PC.i264
  %10441 = trunc i64 %10438 to i32
  %10442 = add i32 -1, %10441
  %10443 = zext i32 %10442 to i64
  store i64 %10443, i64* %RAX.i265, align 8
  %10444 = icmp ult i32 %10442, %10441
  %10445 = icmp ult i32 %10442, -1
  %10446 = or i1 %10444, %10445
  %10447 = zext i1 %10446 to i8
  %10448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10447, i8* %10448, align 1
  %10449 = and i32 %10442, 255
  %10450 = call i32 @llvm.ctpop.i32(i32 %10449)
  %10451 = trunc i32 %10450 to i8
  %10452 = and i8 %10451, 1
  %10453 = xor i8 %10452, 1
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10453, i8* %10454, align 1
  %10455 = xor i64 -1, %10438
  %10456 = trunc i64 %10455 to i32
  %10457 = xor i32 %10456, %10442
  %10458 = lshr i32 %10457, 4
  %10459 = trunc i32 %10458 to i8
  %10460 = and i8 %10459, 1
  %10461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10460, i8* %10461, align 1
  %10462 = icmp eq i32 %10442, 0
  %10463 = zext i1 %10462 to i8
  %10464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10463, i8* %10464, align 1
  %10465 = lshr i32 %10442, 31
  %10466 = trunc i32 %10465 to i8
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10466, i8* %10467, align 1
  %10468 = lshr i32 %10441, 31
  %10469 = xor i32 %10465, %10468
  %10470 = xor i32 %10465, 1
  %10471 = add i32 %10469, %10470
  %10472 = icmp eq i32 %10471, 2
  %10473 = zext i1 %10472 to i8
  %10474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10473, i8* %10474, align 1
  store %struct.Memory* %loadMem_40d265, %struct.Memory** %MEMORY
  %loadMem_40d268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10476 = getelementptr inbounds %struct.GPR, %struct.GPR* %10475, i32 0, i32 33
  %10477 = getelementptr inbounds %struct.Reg, %struct.Reg* %10476, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %10477 to i64*
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10479 = getelementptr inbounds %struct.GPR, %struct.GPR* %10478, i32 0, i32 1
  %10480 = getelementptr inbounds %struct.Reg, %struct.Reg* %10479, i32 0, i32 0
  %EAX.i262 = bitcast %union.anon* %10480 to i32*
  %10481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10482 = getelementptr inbounds %struct.GPR, %struct.GPR* %10481, i32 0, i32 5
  %10483 = getelementptr inbounds %struct.Reg, %struct.Reg* %10482, i32 0, i32 0
  %RCX.i263 = bitcast %union.anon* %10483 to i64*
  %10484 = load i64, i64* %RCX.i263
  %10485 = mul i64 %10484, 4
  %10486 = add i64 %10485, 8922032
  %10487 = load i32, i32* %EAX.i262
  %10488 = zext i32 %10487 to i64
  %10489 = load i64, i64* %PC.i261
  %10490 = add i64 %10489, 7
  store i64 %10490, i64* %PC.i261
  %10491 = inttoptr i64 %10486 to i32*
  store i32 %10487, i32* %10491
  store %struct.Memory* %loadMem_40d268, %struct.Memory** %MEMORY
  %loadMem_40d26f = load %struct.Memory*, %struct.Memory** %MEMORY
  %10492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10493 = getelementptr inbounds %struct.GPR, %struct.GPR* %10492, i32 0, i32 33
  %10494 = getelementptr inbounds %struct.Reg, %struct.Reg* %10493, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %10494 to i64*
  %10495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10496 = getelementptr inbounds %struct.GPR, %struct.GPR* %10495, i32 0, i32 1
  %10497 = getelementptr inbounds %struct.Reg, %struct.Reg* %10496, i32 0, i32 0
  %RAX.i260 = bitcast %union.anon* %10497 to i64*
  %10498 = load i64, i64* %PC.i259
  %10499 = add i64 %10498, 7
  store i64 %10499, i64* %PC.i259
  %10500 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %10501 = zext i32 %10500 to i64
  store i64 %10501, i64* %RAX.i260, align 8
  store %struct.Memory* %loadMem_40d26f, %struct.Memory** %MEMORY
  %loadMem_40d276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10503 = getelementptr inbounds %struct.GPR, %struct.GPR* %10502, i32 0, i32 33
  %10504 = getelementptr inbounds %struct.Reg, %struct.Reg* %10503, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %10504 to i64*
  %10505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10506 = getelementptr inbounds %struct.GPR, %struct.GPR* %10505, i32 0, i32 1
  %10507 = getelementptr inbounds %struct.Reg, %struct.Reg* %10506, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %10507 to i64*
  %10508 = load i64, i64* %RAX.i258
  %10509 = load i64, i64* %PC.i257
  %10510 = add i64 %10509, 3
  store i64 %10510, i64* %PC.i257
  %10511 = xor i64 1, %10508
  %10512 = trunc i64 %10511 to i32
  %10513 = and i64 %10511, 4294967295
  store i64 %10513, i64* %RAX.i258, align 8
  %10514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10514, align 1
  %10515 = and i32 %10512, 255
  %10516 = call i32 @llvm.ctpop.i32(i32 %10515)
  %10517 = trunc i32 %10516 to i8
  %10518 = and i8 %10517, 1
  %10519 = xor i8 %10518, 1
  %10520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10519, i8* %10520, align 1
  %10521 = icmp eq i32 %10512, 0
  %10522 = zext i1 %10521 to i8
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10522, i8* %10523, align 1
  %10524 = lshr i32 %10512, 31
  %10525 = trunc i32 %10524 to i8
  %10526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10525, i8* %10526, align 1
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10527, align 1
  %10528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10528, align 1
  store %struct.Memory* %loadMem_40d276, %struct.Memory** %MEMORY
  %loadMem_40d279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10530 = getelementptr inbounds %struct.GPR, %struct.GPR* %10529, i32 0, i32 33
  %10531 = getelementptr inbounds %struct.Reg, %struct.Reg* %10530, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %10531 to i64*
  %10532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10533 = getelementptr inbounds %struct.GPR, %struct.GPR* %10532, i32 0, i32 1
  %10534 = getelementptr inbounds %struct.Reg, %struct.Reg* %10533, i32 0, i32 0
  %EAX.i256 = bitcast %union.anon* %10534 to i32*
  %10535 = load i32, i32* %EAX.i256
  %10536 = zext i32 %10535 to i64
  %10537 = load i64, i64* %PC.i255
  %10538 = add i64 %10537, 7
  store i64 %10538, i64* %PC.i255
  store i32 %10535, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40d279, %struct.Memory** %MEMORY
  %loadMem_40d280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10540 = getelementptr inbounds %struct.GPR, %struct.GPR* %10539, i32 0, i32 33
  %10541 = getelementptr inbounds %struct.Reg, %struct.Reg* %10540, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %10541 to i64*
  %10542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10543 = getelementptr inbounds %struct.GPR, %struct.GPR* %10542, i32 0, i32 5
  %10544 = getelementptr inbounds %struct.Reg, %struct.Reg* %10543, i32 0, i32 0
  %RCX.i253 = bitcast %union.anon* %10544 to i64*
  %10545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10546 = getelementptr inbounds %struct.GPR, %struct.GPR* %10545, i32 0, i32 15
  %10547 = getelementptr inbounds %struct.Reg, %struct.Reg* %10546, i32 0, i32 0
  %RBP.i254 = bitcast %union.anon* %10547 to i64*
  %10548 = load i64, i64* %RBP.i254
  %10549 = sub i64 %10548, 20
  %10550 = load i64, i64* %PC.i252
  %10551 = add i64 %10550, 4
  store i64 %10551, i64* %PC.i252
  %10552 = inttoptr i64 %10549 to i32*
  %10553 = load i32, i32* %10552
  %10554 = sext i32 %10553 to i64
  store i64 %10554, i64* %RCX.i253, align 8
  store %struct.Memory* %loadMem_40d280, %struct.Memory** %MEMORY
  %loadMem_40d284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10556 = getelementptr inbounds %struct.GPR, %struct.GPR* %10555, i32 0, i32 33
  %10557 = getelementptr inbounds %struct.Reg, %struct.Reg* %10556, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %10557 to i64*
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 1
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %RAX.i250 = bitcast %union.anon* %10560 to i64*
  %10561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10562 = getelementptr inbounds %struct.GPR, %struct.GPR* %10561, i32 0, i32 5
  %10563 = getelementptr inbounds %struct.Reg, %struct.Reg* %10562, i32 0, i32 0
  %RCX.i251 = bitcast %union.anon* %10563 to i64*
  %10564 = load i64, i64* %RCX.i251
  %10565 = mul i64 %10564, 4
  %10566 = add i64 %10565, 9049536
  %10567 = load i64, i64* %PC.i249
  %10568 = add i64 %10567, 7
  store i64 %10568, i64* %PC.i249
  %10569 = inttoptr i64 %10566 to i32*
  %10570 = load i32, i32* %10569
  %10571 = zext i32 %10570 to i64
  store i64 %10571, i64* %RAX.i250, align 8
  store %struct.Memory* %loadMem_40d284, %struct.Memory** %MEMORY
  %loadMem_40d28b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10573 = getelementptr inbounds %struct.GPR, %struct.GPR* %10572, i32 0, i32 33
  %10574 = getelementptr inbounds %struct.Reg, %struct.Reg* %10573, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %10574 to i64*
  %10575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10576 = getelementptr inbounds %struct.GPR, %struct.GPR* %10575, i32 0, i32 1
  %10577 = getelementptr inbounds %struct.Reg, %struct.Reg* %10576, i32 0, i32 0
  %RAX.i248 = bitcast %union.anon* %10577 to i64*
  %10578 = load i64, i64* %RAX.i248
  %10579 = load i64, i64* %PC.i247
  %10580 = add i64 %10579, 7
  store i64 %10580, i64* %PC.i247
  %10581 = trunc i64 %10578 to i32
  %10582 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10583 = xor i32 %10582, %10581
  %10584 = zext i32 %10583 to i64
  store i64 %10584, i64* %RAX.i248, align 8
  %10585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10585, align 1
  %10586 = and i32 %10583, 255
  %10587 = call i32 @llvm.ctpop.i32(i32 %10586)
  %10588 = trunc i32 %10587 to i8
  %10589 = and i8 %10588, 1
  %10590 = xor i8 %10589, 1
  %10591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10590, i8* %10591, align 1
  %10592 = icmp eq i32 %10583, 0
  %10593 = zext i1 %10592 to i8
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10593, i8* %10594, align 1
  %10595 = lshr i32 %10583, 31
  %10596 = trunc i32 %10595 to i8
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10596, i8* %10597, align 1
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10598, align 1
  %10599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10599, align 1
  store %struct.Memory* %loadMem_40d28b, %struct.Memory** %MEMORY
  %loadMem_40d292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10601 = getelementptr inbounds %struct.GPR, %struct.GPR* %10600, i32 0, i32 33
  %10602 = getelementptr inbounds %struct.Reg, %struct.Reg* %10601, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %10602 to i64*
  %10603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10604 = getelementptr inbounds %struct.GPR, %struct.GPR* %10603, i32 0, i32 1
  %10605 = getelementptr inbounds %struct.Reg, %struct.Reg* %10604, i32 0, i32 0
  %EAX.i246 = bitcast %union.anon* %10605 to i32*
  %10606 = load i32, i32* %EAX.i246
  %10607 = zext i32 %10606 to i64
  %10608 = load i64, i64* %PC.i245
  %10609 = add i64 %10608, 7
  store i64 %10609, i64* %PC.i245
  store i32 %10606, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d292, %struct.Memory** %MEMORY
  %loadMem_40d299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10611 = getelementptr inbounds %struct.GPR, %struct.GPR* %10610, i32 0, i32 33
  %10612 = getelementptr inbounds %struct.Reg, %struct.Reg* %10611, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %10612 to i64*
  %10613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10614 = getelementptr inbounds %struct.GPR, %struct.GPR* %10613, i32 0, i32 5
  %10615 = getelementptr inbounds %struct.Reg, %struct.Reg* %10614, i32 0, i32 0
  %RCX.i243 = bitcast %union.anon* %10615 to i64*
  %10616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10617 = getelementptr inbounds %struct.GPR, %struct.GPR* %10616, i32 0, i32 15
  %10618 = getelementptr inbounds %struct.Reg, %struct.Reg* %10617, i32 0, i32 0
  %RBP.i244 = bitcast %union.anon* %10618 to i64*
  %10619 = load i64, i64* %RBP.i244
  %10620 = sub i64 %10619, 24
  %10621 = load i64, i64* %PC.i242
  %10622 = add i64 %10621, 4
  store i64 %10622, i64* %PC.i242
  %10623 = inttoptr i64 %10620 to i32*
  %10624 = load i32, i32* %10623
  %10625 = sext i32 %10624 to i64
  store i64 %10625, i64* %RCX.i243, align 8
  store %struct.Memory* %loadMem_40d299, %struct.Memory** %MEMORY
  %loadMem_40d29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10627 = getelementptr inbounds %struct.GPR, %struct.GPR* %10626, i32 0, i32 33
  %10628 = getelementptr inbounds %struct.Reg, %struct.Reg* %10627, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %10628 to i64*
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 1
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %RAX.i240 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 5
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %10634 to i64*
  %10635 = load i64, i64* %RCX.i241
  %10636 = mul i64 %10635, 4
  %10637 = add i64 %10636, 9049536
  %10638 = load i64, i64* %PC.i239
  %10639 = add i64 %10638, 7
  store i64 %10639, i64* %PC.i239
  %10640 = inttoptr i64 %10637 to i32*
  %10641 = load i32, i32* %10640
  %10642 = zext i32 %10641 to i64
  store i64 %10642, i64* %RAX.i240, align 8
  store %struct.Memory* %loadMem_40d29d, %struct.Memory** %MEMORY
  %loadMem_40d2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10644 = getelementptr inbounds %struct.GPR, %struct.GPR* %10643, i32 0, i32 33
  %10645 = getelementptr inbounds %struct.Reg, %struct.Reg* %10644, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %10645 to i64*
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10647 = getelementptr inbounds %struct.GPR, %struct.GPR* %10646, i32 0, i32 1
  %10648 = getelementptr inbounds %struct.Reg, %struct.Reg* %10647, i32 0, i32 0
  %RAX.i238 = bitcast %union.anon* %10648 to i64*
  %10649 = load i64, i64* %RAX.i238
  %10650 = load i64, i64* %PC.i237
  %10651 = add i64 %10650, 7
  store i64 %10651, i64* %PC.i237
  %10652 = trunc i64 %10649 to i32
  %10653 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10654 = xor i32 %10653, %10652
  %10655 = zext i32 %10654 to i64
  store i64 %10655, i64* %RAX.i238, align 8
  %10656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10656, align 1
  %10657 = and i32 %10654, 255
  %10658 = call i32 @llvm.ctpop.i32(i32 %10657)
  %10659 = trunc i32 %10658 to i8
  %10660 = and i8 %10659, 1
  %10661 = xor i8 %10660, 1
  %10662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10661, i8* %10662, align 1
  %10663 = icmp eq i32 %10654, 0
  %10664 = zext i1 %10663 to i8
  %10665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10664, i8* %10665, align 1
  %10666 = lshr i32 %10654, 31
  %10667 = trunc i32 %10666 to i8
  %10668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10667, i8* %10668, align 1
  %10669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10669, align 1
  %10670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10670, align 1
  store %struct.Memory* %loadMem_40d2a4, %struct.Memory** %MEMORY
  %loadMem_40d2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10672 = getelementptr inbounds %struct.GPR, %struct.GPR* %10671, i32 0, i32 33
  %10673 = getelementptr inbounds %struct.Reg, %struct.Reg* %10672, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %10673 to i64*
  %10674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10675 = getelementptr inbounds %struct.GPR, %struct.GPR* %10674, i32 0, i32 1
  %10676 = getelementptr inbounds %struct.Reg, %struct.Reg* %10675, i32 0, i32 0
  %EAX.i236 = bitcast %union.anon* %10676 to i32*
  %10677 = load i32, i32* %EAX.i236
  %10678 = zext i32 %10677 to i64
  %10679 = load i64, i64* %PC.i235
  %10680 = add i64 %10679, 7
  store i64 %10680, i64* %PC.i235
  store i32 %10677, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d2ab, %struct.Memory** %MEMORY
  %loadMem_40d2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10682 = getelementptr inbounds %struct.GPR, %struct.GPR* %10681, i32 0, i32 33
  %10683 = getelementptr inbounds %struct.Reg, %struct.Reg* %10682, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %10683 to i64*
  %10684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10685 = getelementptr inbounds %struct.GPR, %struct.GPR* %10684, i32 0, i32 15
  %10686 = getelementptr inbounds %struct.Reg, %struct.Reg* %10685, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %10686 to i64*
  %10687 = load i64, i64* %RBP.i234
  %10688 = sub i64 %10687, 36
  %10689 = load i64, i64* %PC.i233
  %10690 = add i64 %10689, 4
  store i64 %10690, i64* %PC.i233
  %10691 = inttoptr i64 %10688 to i32*
  %10692 = load i32, i32* %10691
  %10693 = sub i32 %10692, 1
  %10694 = icmp ult i32 %10692, 1
  %10695 = zext i1 %10694 to i8
  %10696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10695, i8* %10696, align 1
  %10697 = and i32 %10693, 255
  %10698 = call i32 @llvm.ctpop.i32(i32 %10697)
  %10699 = trunc i32 %10698 to i8
  %10700 = and i8 %10699, 1
  %10701 = xor i8 %10700, 1
  %10702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10701, i8* %10702, align 1
  %10703 = xor i32 %10692, 1
  %10704 = xor i32 %10703, %10693
  %10705 = lshr i32 %10704, 4
  %10706 = trunc i32 %10705 to i8
  %10707 = and i8 %10706, 1
  %10708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10707, i8* %10708, align 1
  %10709 = icmp eq i32 %10693, 0
  %10710 = zext i1 %10709 to i8
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10710, i8* %10711, align 1
  %10712 = lshr i32 %10693, 31
  %10713 = trunc i32 %10712 to i8
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10713, i8* %10714, align 1
  %10715 = lshr i32 %10692, 31
  %10716 = xor i32 %10712, %10715
  %10717 = add i32 %10716, %10715
  %10718 = icmp eq i32 %10717, 2
  %10719 = zext i1 %10718 to i8
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10719, i8* %10720, align 1
  store %struct.Memory* %loadMem_40d2b2, %struct.Memory** %MEMORY
  %loadMem_40d2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10722 = getelementptr inbounds %struct.GPR, %struct.GPR* %10721, i32 0, i32 33
  %10723 = getelementptr inbounds %struct.Reg, %struct.Reg* %10722, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %10723 to i64*
  %10724 = load i64, i64* %PC.i232
  %10725 = add i64 %10724, 164
  %10726 = load i64, i64* %PC.i232
  %10727 = add i64 %10726, 6
  %10728 = load i64, i64* %PC.i232
  %10729 = add i64 %10728, 6
  store i64 %10729, i64* %PC.i232
  %10730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10731 = load i8, i8* %10730, align 1
  %10732 = icmp eq i8 %10731, 0
  %10733 = zext i1 %10732 to i8
  store i8 %10733, i8* %BRANCH_TAKEN, align 1
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10735 = select i1 %10732, i64 %10725, i64 %10727
  store i64 %10735, i64* %10734, align 8
  store %struct.Memory* %loadMem_40d2b6, %struct.Memory** %MEMORY
  %loadBr_40d2b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d2b6 = icmp eq i8 %loadBr_40d2b6, 1
  br i1 %cmpBr_40d2b6, label %block_.L_40d35a, label %block_40d2bc

block_40d2bc:                                     ; preds = %block_40d21e
  %loadMem_40d2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10737 = getelementptr inbounds %struct.GPR, %struct.GPR* %10736, i32 0, i32 33
  %10738 = getelementptr inbounds %struct.Reg, %struct.Reg* %10737, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %10738 to i64*
  %10739 = load i64, i64* %PC.i231
  %10740 = add i64 %10739, 11
  store i64 %10740, i64* %PC.i231
  store i32 7, i32* bitcast (%G_0x8665c4_type* @G_0x8665c4 to i32*)
  store %struct.Memory* %loadMem_40d2bc, %struct.Memory** %MEMORY
  %loadMem_40d2c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10742 = getelementptr inbounds %struct.GPR, %struct.GPR* %10741, i32 0, i32 33
  %10743 = getelementptr inbounds %struct.Reg, %struct.Reg* %10742, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %10743 to i64*
  %10744 = load i64, i64* %PC.i230
  %10745 = add i64 %10744, 11
  store i64 %10745, i64* %PC.i230
  store i32 13, i32* bitcast (%G_0x8665bc_type* @G_0x8665bc to i32*)
  store %struct.Memory* %loadMem_40d2c7, %struct.Memory** %MEMORY
  %loadMem_40d2d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10747 = getelementptr inbounds %struct.GPR, %struct.GPR* %10746, i32 0, i32 33
  %10748 = getelementptr inbounds %struct.Reg, %struct.Reg* %10747, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %10748 to i64*
  %10749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10750 = getelementptr inbounds %struct.GPR, %struct.GPR* %10749, i32 0, i32 1
  %10751 = getelementptr inbounds %struct.Reg, %struct.Reg* %10750, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %10751 to i64*
  %10752 = load i64, i64* %PC.i228
  %10753 = add i64 %10752, 7
  store i64 %10753, i64* %PC.i228
  %10754 = load i32, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  %10755 = zext i32 %10754 to i64
  store i64 %10755, i64* %RAX.i229, align 8
  store %struct.Memory* %loadMem_40d2d2, %struct.Memory** %MEMORY
  %loadMem_40d2d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10757 = getelementptr inbounds %struct.GPR, %struct.GPR* %10756, i32 0, i32 33
  %10758 = getelementptr inbounds %struct.Reg, %struct.Reg* %10757, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %10758 to i64*
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10760 = getelementptr inbounds %struct.GPR, %struct.GPR* %10759, i32 0, i32 1
  %10761 = getelementptr inbounds %struct.Reg, %struct.Reg* %10760, i32 0, i32 0
  %RAX.i227 = bitcast %union.anon* %10761 to i64*
  %10762 = load i64, i64* %RAX.i227
  %10763 = load i64, i64* %PC.i226
  %10764 = add i64 %10763, 3
  store i64 %10764, i64* %PC.i226
  %10765 = trunc i64 %10762 to i32
  %10766 = add i32 -1, %10765
  %10767 = zext i32 %10766 to i64
  store i64 %10767, i64* %RAX.i227, align 8
  %10768 = icmp ult i32 %10766, %10765
  %10769 = icmp ult i32 %10766, -1
  %10770 = or i1 %10768, %10769
  %10771 = zext i1 %10770 to i8
  %10772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10771, i8* %10772, align 1
  %10773 = and i32 %10766, 255
  %10774 = call i32 @llvm.ctpop.i32(i32 %10773)
  %10775 = trunc i32 %10774 to i8
  %10776 = and i8 %10775, 1
  %10777 = xor i8 %10776, 1
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10777, i8* %10778, align 1
  %10779 = xor i64 -1, %10762
  %10780 = trunc i64 %10779 to i32
  %10781 = xor i32 %10780, %10766
  %10782 = lshr i32 %10781, 4
  %10783 = trunc i32 %10782 to i8
  %10784 = and i8 %10783, 1
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10784, i8* %10785, align 1
  %10786 = icmp eq i32 %10766, 0
  %10787 = zext i1 %10786 to i8
  %10788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10787, i8* %10788, align 1
  %10789 = lshr i32 %10766, 31
  %10790 = trunc i32 %10789 to i8
  %10791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10790, i8* %10791, align 1
  %10792 = lshr i32 %10765, 31
  %10793 = xor i32 %10789, %10792
  %10794 = xor i32 %10789, 1
  %10795 = add i32 %10793, %10794
  %10796 = icmp eq i32 %10795, 2
  %10797 = zext i1 %10796 to i8
  %10798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10797, i8* %10798, align 1
  store %struct.Memory* %loadMem_40d2d9, %struct.Memory** %MEMORY
  %loadMem_40d2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10800 = getelementptr inbounds %struct.GPR, %struct.GPR* %10799, i32 0, i32 33
  %10801 = getelementptr inbounds %struct.Reg, %struct.Reg* %10800, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %10801 to i64*
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10803 = getelementptr inbounds %struct.GPR, %struct.GPR* %10802, i32 0, i32 1
  %10804 = getelementptr inbounds %struct.Reg, %struct.Reg* %10803, i32 0, i32 0
  %EAX.i225 = bitcast %union.anon* %10804 to i32*
  %10805 = load i32, i32* %EAX.i225
  %10806 = zext i32 %10805 to i64
  %10807 = load i64, i64* %PC.i224
  %10808 = add i64 %10807, 7
  store i64 %10808, i64* %PC.i224
  store i32 %10805, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  store %struct.Memory* %loadMem_40d2dc, %struct.Memory** %MEMORY
  %loadMem_40d2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10810 = getelementptr inbounds %struct.GPR, %struct.GPR* %10809, i32 0, i32 33
  %10811 = getelementptr inbounds %struct.Reg, %struct.Reg* %10810, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %10811 to i64*
  %10812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10813 = getelementptr inbounds %struct.GPR, %struct.GPR* %10812, i32 0, i32 1
  %10814 = getelementptr inbounds %struct.Reg, %struct.Reg* %10813, i32 0, i32 0
  %RAX.i223 = bitcast %union.anon* %10814 to i64*
  %10815 = load i64, i64* %PC.i222
  %10816 = add i64 %10815, 7
  store i64 %10816, i64* %PC.i222
  %10817 = load i32, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  %10818 = zext i32 %10817 to i64
  store i64 %10818, i64* %RAX.i223, align 8
  store %struct.Memory* %loadMem_40d2e3, %struct.Memory** %MEMORY
  %loadMem_40d2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10820 = getelementptr inbounds %struct.GPR, %struct.GPR* %10819, i32 0, i32 33
  %10821 = getelementptr inbounds %struct.Reg, %struct.Reg* %10820, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %10821 to i64*
  %10822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10823 = getelementptr inbounds %struct.GPR, %struct.GPR* %10822, i32 0, i32 1
  %10824 = getelementptr inbounds %struct.Reg, %struct.Reg* %10823, i32 0, i32 0
  %RAX.i221 = bitcast %union.anon* %10824 to i64*
  %10825 = load i64, i64* %RAX.i221
  %10826 = load i64, i64* %PC.i220
  %10827 = add i64 %10826, 3
  store i64 %10827, i64* %PC.i220
  %10828 = trunc i64 %10825 to i32
  %10829 = add i32 -1, %10828
  %10830 = zext i32 %10829 to i64
  store i64 %10830, i64* %RAX.i221, align 8
  %10831 = icmp ult i32 %10829, %10828
  %10832 = icmp ult i32 %10829, -1
  %10833 = or i1 %10831, %10832
  %10834 = zext i1 %10833 to i8
  %10835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10834, i8* %10835, align 1
  %10836 = and i32 %10829, 255
  %10837 = call i32 @llvm.ctpop.i32(i32 %10836)
  %10838 = trunc i32 %10837 to i8
  %10839 = and i8 %10838, 1
  %10840 = xor i8 %10839, 1
  %10841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10840, i8* %10841, align 1
  %10842 = xor i64 -1, %10825
  %10843 = trunc i64 %10842 to i32
  %10844 = xor i32 %10843, %10829
  %10845 = lshr i32 %10844, 4
  %10846 = trunc i32 %10845 to i8
  %10847 = and i8 %10846, 1
  %10848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10847, i8* %10848, align 1
  %10849 = icmp eq i32 %10829, 0
  %10850 = zext i1 %10849 to i8
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10850, i8* %10851, align 1
  %10852 = lshr i32 %10829, 31
  %10853 = trunc i32 %10852 to i8
  %10854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10853, i8* %10854, align 1
  %10855 = lshr i32 %10828, 31
  %10856 = xor i32 %10852, %10855
  %10857 = xor i32 %10852, 1
  %10858 = add i32 %10856, %10857
  %10859 = icmp eq i32 %10858, 2
  %10860 = zext i1 %10859 to i8
  %10861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10860, i8* %10861, align 1
  store %struct.Memory* %loadMem_40d2ea, %struct.Memory** %MEMORY
  %loadMem_40d2ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %10862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10863 = getelementptr inbounds %struct.GPR, %struct.GPR* %10862, i32 0, i32 33
  %10864 = getelementptr inbounds %struct.Reg, %struct.Reg* %10863, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %10864 to i64*
  %10865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10866 = getelementptr inbounds %struct.GPR, %struct.GPR* %10865, i32 0, i32 1
  %10867 = getelementptr inbounds %struct.Reg, %struct.Reg* %10866, i32 0, i32 0
  %EAX.i219 = bitcast %union.anon* %10867 to i32*
  %10868 = load i32, i32* %EAX.i219
  %10869 = zext i32 %10868 to i64
  %10870 = load i64, i64* %PC.i218
  %10871 = add i64 %10870, 7
  store i64 %10871, i64* %PC.i218
  store i32 %10868, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  store %struct.Memory* %loadMem_40d2ed, %struct.Memory** %MEMORY
  %loadMem_40d2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10873 = getelementptr inbounds %struct.GPR, %struct.GPR* %10872, i32 0, i32 33
  %10874 = getelementptr inbounds %struct.Reg, %struct.Reg* %10873, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %10874 to i64*
  %10875 = load i64, i64* %PC.i217
  %10876 = add i64 %10875, 11
  store i64 %10876, i64* %PC.i217
  store i32 0, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  store %struct.Memory* %loadMem_40d2f4, %struct.Memory** %MEMORY
  %loadMem_40d2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10878 = getelementptr inbounds %struct.GPR, %struct.GPR* %10877, i32 0, i32 33
  %10879 = getelementptr inbounds %struct.Reg, %struct.Reg* %10878, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %10879 to i64*
  %10880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10881 = getelementptr inbounds %struct.GPR, %struct.GPR* %10880, i32 0, i32 1
  %10882 = getelementptr inbounds %struct.Reg, %struct.Reg* %10881, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %10882 to i64*
  %10883 = load i64, i64* %PC.i215
  %10884 = add i64 %10883, 7
  store i64 %10884, i64* %PC.i215
  %10885 = load i32, i32* bitcast (%G_0x86636c_type* @G_0x86636c to i32*)
  %10886 = zext i32 %10885 to i64
  store i64 %10886, i64* %RAX.i216, align 8
  store %struct.Memory* %loadMem_40d2ff, %struct.Memory** %MEMORY
  %loadMem_40d306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10888 = getelementptr inbounds %struct.GPR, %struct.GPR* %10887, i32 0, i32 33
  %10889 = getelementptr inbounds %struct.Reg, %struct.Reg* %10888, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %10889 to i64*
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10891 = getelementptr inbounds %struct.GPR, %struct.GPR* %10890, i32 0, i32 1
  %10892 = getelementptr inbounds %struct.Reg, %struct.Reg* %10891, i32 0, i32 0
  %EAX.i214 = bitcast %union.anon* %10892 to i32*
  %10893 = load i32, i32* %EAX.i214
  %10894 = zext i32 %10893 to i64
  %10895 = load i64, i64* %PC.i213
  %10896 = add i64 %10895, 7
  store i64 %10896, i64* %PC.i213
  store i32 %10893, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  store %struct.Memory* %loadMem_40d306, %struct.Memory** %MEMORY
  %loadMem_40d30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10898 = getelementptr inbounds %struct.GPR, %struct.GPR* %10897, i32 0, i32 33
  %10899 = getelementptr inbounds %struct.Reg, %struct.Reg* %10898, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %10899 to i64*
  %10900 = load i64, i64* %PC.i212
  %10901 = add i64 %10900, 11
  store i64 %10901, i64* %PC.i212
  store i32 0, i32* bitcast (%G_0x86636c_type* @G_0x86636c to i32*)
  store %struct.Memory* %loadMem_40d30d, %struct.Memory** %MEMORY
  %loadMem_40d318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10903 = getelementptr inbounds %struct.GPR, %struct.GPR* %10902, i32 0, i32 33
  %10904 = getelementptr inbounds %struct.Reg, %struct.Reg* %10903, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %10904 to i64*
  %10905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10906 = getelementptr inbounds %struct.GPR, %struct.GPR* %10905, i32 0, i32 5
  %10907 = getelementptr inbounds %struct.Reg, %struct.Reg* %10906, i32 0, i32 0
  %RCX.i211 = bitcast %union.anon* %10907 to i64*
  %10908 = load i64, i64* %PC.i210
  %10909 = add i64 %10908, 8
  store i64 %10909, i64* %PC.i210
  %10910 = load i32, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  %10911 = sext i32 %10910 to i64
  store i64 %10911, i64* %RCX.i211, align 8
  store %struct.Memory* %loadMem_40d318, %struct.Memory** %MEMORY
  %loadMem_40d320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10913 = getelementptr inbounds %struct.GPR, %struct.GPR* %10912, i32 0, i32 33
  %10914 = getelementptr inbounds %struct.Reg, %struct.Reg* %10913, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %10914 to i64*
  %10915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10916 = getelementptr inbounds %struct.GPR, %struct.GPR* %10915, i32 0, i32 5
  %10917 = getelementptr inbounds %struct.Reg, %struct.Reg* %10916, i32 0, i32 0
  %RCX.i209 = bitcast %union.anon* %10917 to i64*
  %10918 = load i64, i64* %RCX.i209
  %10919 = mul i64 %10918, 4
  %10920 = add i64 %10919, 8778480
  %10921 = load i64, i64* %PC.i208
  %10922 = add i64 %10921, 11
  store i64 %10922, i64* %PC.i208
  %10923 = inttoptr i64 %10920 to i32*
  store i32 33, i32* %10923
  store %struct.Memory* %loadMem_40d320, %struct.Memory** %MEMORY
  %loadMem_40d32b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10925 = getelementptr inbounds %struct.GPR, %struct.GPR* %10924, i32 0, i32 33
  %10926 = getelementptr inbounds %struct.Reg, %struct.Reg* %10925, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %10926 to i64*
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10928 = getelementptr inbounds %struct.GPR, %struct.GPR* %10927, i32 0, i32 1
  %10929 = getelementptr inbounds %struct.Reg, %struct.Reg* %10928, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %10929 to i64*
  %10930 = load i64, i64* %PC.i206
  %10931 = add i64 %10930, 7
  store i64 %10931, i64* %PC.i206
  %10932 = load i32, i32* bitcast (%G_0x8a1ac4_type* @G_0x8a1ac4 to i32*)
  %10933 = zext i32 %10932 to i64
  store i64 %10933, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_40d32b, %struct.Memory** %MEMORY
  %loadMem_40d332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 33
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 1
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %10939 to i64*
  %10940 = load i64, i64* %RAX.i205
  %10941 = load i64, i64* %PC.i204
  %10942 = add i64 %10941, 7
  store i64 %10942, i64* %PC.i204
  %10943 = trunc i64 %10940 to i32
  %10944 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10945 = xor i32 %10944, %10943
  %10946 = zext i32 %10945 to i64
  store i64 %10946, i64* %RAX.i205, align 8
  %10947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10947, align 1
  %10948 = and i32 %10945, 255
  %10949 = call i32 @llvm.ctpop.i32(i32 %10948)
  %10950 = trunc i32 %10949 to i8
  %10951 = and i8 %10950, 1
  %10952 = xor i8 %10951, 1
  %10953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10952, i8* %10953, align 1
  %10954 = icmp eq i32 %10945, 0
  %10955 = zext i1 %10954 to i8
  %10956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10955, i8* %10956, align 1
  %10957 = lshr i32 %10945, 31
  %10958 = trunc i32 %10957 to i8
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10958, i8* %10959, align 1
  %10960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10960, align 1
  %10961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10961, align 1
  store %struct.Memory* %loadMem_40d332, %struct.Memory** %MEMORY
  %loadMem_40d339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10963 = getelementptr inbounds %struct.GPR, %struct.GPR* %10962, i32 0, i32 33
  %10964 = getelementptr inbounds %struct.Reg, %struct.Reg* %10963, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %10964 to i64*
  %10965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10966 = getelementptr inbounds %struct.GPR, %struct.GPR* %10965, i32 0, i32 1
  %10967 = getelementptr inbounds %struct.Reg, %struct.Reg* %10966, i32 0, i32 0
  %EAX.i203 = bitcast %union.anon* %10967 to i32*
  %10968 = load i32, i32* %EAX.i203
  %10969 = zext i32 %10968 to i64
  %10970 = load i64, i64* %PC.i202
  %10971 = add i64 %10970, 7
  store i64 %10971, i64* %PC.i202
  store i32 %10968, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d339, %struct.Memory** %MEMORY
  %loadMem_40d340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10973 = getelementptr inbounds %struct.GPR, %struct.GPR* %10972, i32 0, i32 33
  %10974 = getelementptr inbounds %struct.Reg, %struct.Reg* %10973, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %10974 to i64*
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10976 = getelementptr inbounds %struct.GPR, %struct.GPR* %10975, i32 0, i32 1
  %10977 = getelementptr inbounds %struct.Reg, %struct.Reg* %10976, i32 0, i32 0
  %RAX.i201 = bitcast %union.anon* %10977 to i64*
  %10978 = load i64, i64* %PC.i200
  %10979 = add i64 %10978, 7
  store i64 %10979, i64* %PC.i200
  %10980 = load i32, i32* bitcast (%G_0x8a1abc_type* @G_0x8a1abc to i32*)
  %10981 = zext i32 %10980 to i64
  store i64 %10981, i64* %RAX.i201, align 8
  store %struct.Memory* %loadMem_40d340, %struct.Memory** %MEMORY
  %loadMem_40d347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10983 = getelementptr inbounds %struct.GPR, %struct.GPR* %10982, i32 0, i32 33
  %10984 = getelementptr inbounds %struct.Reg, %struct.Reg* %10983, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %10984 to i64*
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10986 = getelementptr inbounds %struct.GPR, %struct.GPR* %10985, i32 0, i32 1
  %10987 = getelementptr inbounds %struct.Reg, %struct.Reg* %10986, i32 0, i32 0
  %RAX.i199 = bitcast %union.anon* %10987 to i64*
  %10988 = load i64, i64* %RAX.i199
  %10989 = load i64, i64* %PC.i198
  %10990 = add i64 %10989, 7
  store i64 %10990, i64* %PC.i198
  %10991 = trunc i64 %10988 to i32
  %10992 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %10993 = xor i32 %10992, %10991
  %10994 = zext i32 %10993 to i64
  store i64 %10994, i64* %RAX.i199, align 8
  %10995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10995, align 1
  %10996 = and i32 %10993, 255
  %10997 = call i32 @llvm.ctpop.i32(i32 %10996)
  %10998 = trunc i32 %10997 to i8
  %10999 = and i8 %10998, 1
  %11000 = xor i8 %10999, 1
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11000, i8* %11001, align 1
  %11002 = icmp eq i32 %10993, 0
  %11003 = zext i1 %11002 to i8
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11003, i8* %11004, align 1
  %11005 = lshr i32 %10993, 31
  %11006 = trunc i32 %11005 to i8
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11006, i8* %11007, align 1
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11008, align 1
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11009, align 1
  store %struct.Memory* %loadMem_40d347, %struct.Memory** %MEMORY
  %loadMem_40d34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11011 = getelementptr inbounds %struct.GPR, %struct.GPR* %11010, i32 0, i32 33
  %11012 = getelementptr inbounds %struct.Reg, %struct.Reg* %11011, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %11012 to i64*
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11014 = getelementptr inbounds %struct.GPR, %struct.GPR* %11013, i32 0, i32 1
  %11015 = getelementptr inbounds %struct.Reg, %struct.Reg* %11014, i32 0, i32 0
  %EAX.i197 = bitcast %union.anon* %11015 to i32*
  %11016 = load i32, i32* %EAX.i197
  %11017 = zext i32 %11016 to i64
  %11018 = load i64, i64* %PC.i196
  %11019 = add i64 %11018, 7
  store i64 %11019, i64* %PC.i196
  store i32 %11016, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d34e, %struct.Memory** %MEMORY
  %loadMem_40d355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11021 = getelementptr inbounds %struct.GPR, %struct.GPR* %11020, i32 0, i32 33
  %11022 = getelementptr inbounds %struct.Reg, %struct.Reg* %11021, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %11022 to i64*
  %11023 = load i64, i64* %PC.i195
  %11024 = add i64 %11023, 687
  %11025 = load i64, i64* %PC.i195
  %11026 = add i64 %11025, 5
  store i64 %11026, i64* %PC.i195
  %11027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11024, i64* %11027, align 8
  store %struct.Memory* %loadMem_40d355, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d35a:                                  ; preds = %block_40d21e
  %loadMem_40d35a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11029 = getelementptr inbounds %struct.GPR, %struct.GPR* %11028, i32 0, i32 33
  %11030 = getelementptr inbounds %struct.Reg, %struct.Reg* %11029, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %11030 to i64*
  %11031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11032 = getelementptr inbounds %struct.GPR, %struct.GPR* %11031, i32 0, i32 15
  %11033 = getelementptr inbounds %struct.Reg, %struct.Reg* %11032, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %11033 to i64*
  %11034 = load i64, i64* %RBP.i194
  %11035 = sub i64 %11034, 36
  %11036 = load i64, i64* %PC.i193
  %11037 = add i64 %11036, 4
  store i64 %11037, i64* %PC.i193
  %11038 = inttoptr i64 %11035 to i32*
  %11039 = load i32, i32* %11038
  %11040 = sub i32 %11039, 2
  %11041 = icmp ult i32 %11039, 2
  %11042 = zext i1 %11041 to i8
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11042, i8* %11043, align 1
  %11044 = and i32 %11040, 255
  %11045 = call i32 @llvm.ctpop.i32(i32 %11044)
  %11046 = trunc i32 %11045 to i8
  %11047 = and i8 %11046, 1
  %11048 = xor i8 %11047, 1
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11048, i8* %11049, align 1
  %11050 = xor i32 %11039, 2
  %11051 = xor i32 %11050, %11040
  %11052 = lshr i32 %11051, 4
  %11053 = trunc i32 %11052 to i8
  %11054 = and i8 %11053, 1
  %11055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11054, i8* %11055, align 1
  %11056 = icmp eq i32 %11040, 0
  %11057 = zext i1 %11056 to i8
  %11058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11057, i8* %11058, align 1
  %11059 = lshr i32 %11040, 31
  %11060 = trunc i32 %11059 to i8
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11060, i8* %11061, align 1
  %11062 = lshr i32 %11039, 31
  %11063 = xor i32 %11059, %11062
  %11064 = add i32 %11063, %11062
  %11065 = icmp eq i32 %11064, 2
  %11066 = zext i1 %11065 to i8
  %11067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11066, i8* %11067, align 1
  store %struct.Memory* %loadMem_40d35a, %struct.Memory** %MEMORY
  %loadMem_40d35e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11069 = getelementptr inbounds %struct.GPR, %struct.GPR* %11068, i32 0, i32 33
  %11070 = getelementptr inbounds %struct.Reg, %struct.Reg* %11069, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %11070 to i64*
  %11071 = load i64, i64* %PC.i192
  %11072 = add i64 %11071, 164
  %11073 = load i64, i64* %PC.i192
  %11074 = add i64 %11073, 6
  %11075 = load i64, i64* %PC.i192
  %11076 = add i64 %11075, 6
  store i64 %11076, i64* %PC.i192
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11078 = load i8, i8* %11077, align 1
  %11079 = icmp eq i8 %11078, 0
  %11080 = zext i1 %11079 to i8
  store i8 %11080, i8* %BRANCH_TAKEN, align 1
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11082 = select i1 %11079, i64 %11072, i64 %11074
  store i64 %11082, i64* %11081, align 8
  store %struct.Memory* %loadMem_40d35e, %struct.Memory** %MEMORY
  %loadBr_40d35e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d35e = icmp eq i8 %loadBr_40d35e, 1
  br i1 %cmpBr_40d35e, label %block_.L_40d402, label %block_40d364

block_40d364:                                     ; preds = %block_.L_40d35a
  %loadMem_40d364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 33
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %11085 to i64*
  %11086 = load i64, i64* %PC.i191
  %11087 = add i64 %11086, 11
  store i64 %11087, i64* %PC.i191
  store i32 7, i32* bitcast (%G_0x8665a8_type* @G_0x8665a8 to i32*)
  store %struct.Memory* %loadMem_40d364, %struct.Memory** %MEMORY
  %loadMem_40d36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11089 = getelementptr inbounds %struct.GPR, %struct.GPR* %11088, i32 0, i32 33
  %11090 = getelementptr inbounds %struct.Reg, %struct.Reg* %11089, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %11090 to i64*
  %11091 = load i64, i64* %PC.i190
  %11092 = add i64 %11091, 11
  store i64 %11092, i64* %PC.i190
  store i32 13, i32* bitcast (%G_0x8665b4_type* @G_0x8665b4 to i32*)
  store %struct.Memory* %loadMem_40d36f, %struct.Memory** %MEMORY
  %loadMem_40d37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11094 = getelementptr inbounds %struct.GPR, %struct.GPR* %11093, i32 0, i32 33
  %11095 = getelementptr inbounds %struct.Reg, %struct.Reg* %11094, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %11095 to i64*
  %11096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11097 = getelementptr inbounds %struct.GPR, %struct.GPR* %11096, i32 0, i32 1
  %11098 = getelementptr inbounds %struct.Reg, %struct.Reg* %11097, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %11098 to i64*
  %11099 = load i64, i64* %PC.i188
  %11100 = add i64 %11099, 7
  store i64 %11100, i64* %PC.i188
  %11101 = load i32, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  %11102 = zext i32 %11101 to i64
  store i64 %11102, i64* %RAX.i189, align 8
  store %struct.Memory* %loadMem_40d37a, %struct.Memory** %MEMORY
  %loadMem_40d381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11104 = getelementptr inbounds %struct.GPR, %struct.GPR* %11103, i32 0, i32 33
  %11105 = getelementptr inbounds %struct.Reg, %struct.Reg* %11104, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %11105 to i64*
  %11106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11107 = getelementptr inbounds %struct.GPR, %struct.GPR* %11106, i32 0, i32 1
  %11108 = getelementptr inbounds %struct.Reg, %struct.Reg* %11107, i32 0, i32 0
  %RAX.i187 = bitcast %union.anon* %11108 to i64*
  %11109 = load i64, i64* %RAX.i187
  %11110 = load i64, i64* %PC.i186
  %11111 = add i64 %11110, 3
  store i64 %11111, i64* %PC.i186
  %11112 = trunc i64 %11109 to i32
  %11113 = add i32 -1, %11112
  %11114 = zext i32 %11113 to i64
  store i64 %11114, i64* %RAX.i187, align 8
  %11115 = icmp ult i32 %11113, %11112
  %11116 = icmp ult i32 %11113, -1
  %11117 = or i1 %11115, %11116
  %11118 = zext i1 %11117 to i8
  %11119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11118, i8* %11119, align 1
  %11120 = and i32 %11113, 255
  %11121 = call i32 @llvm.ctpop.i32(i32 %11120)
  %11122 = trunc i32 %11121 to i8
  %11123 = and i8 %11122, 1
  %11124 = xor i8 %11123, 1
  %11125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11124, i8* %11125, align 1
  %11126 = xor i64 -1, %11109
  %11127 = trunc i64 %11126 to i32
  %11128 = xor i32 %11127, %11113
  %11129 = lshr i32 %11128, 4
  %11130 = trunc i32 %11129 to i8
  %11131 = and i8 %11130, 1
  %11132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11131, i8* %11132, align 1
  %11133 = icmp eq i32 %11113, 0
  %11134 = zext i1 %11133 to i8
  %11135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11134, i8* %11135, align 1
  %11136 = lshr i32 %11113, 31
  %11137 = trunc i32 %11136 to i8
  %11138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11137, i8* %11138, align 1
  %11139 = lshr i32 %11112, 31
  %11140 = xor i32 %11136, %11139
  %11141 = xor i32 %11136, 1
  %11142 = add i32 %11140, %11141
  %11143 = icmp eq i32 %11142, 2
  %11144 = zext i1 %11143 to i8
  %11145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11144, i8* %11145, align 1
  store %struct.Memory* %loadMem_40d381, %struct.Memory** %MEMORY
  %loadMem_40d384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11147 = getelementptr inbounds %struct.GPR, %struct.GPR* %11146, i32 0, i32 33
  %11148 = getelementptr inbounds %struct.Reg, %struct.Reg* %11147, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %11148 to i64*
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11150 = getelementptr inbounds %struct.GPR, %struct.GPR* %11149, i32 0, i32 1
  %11151 = getelementptr inbounds %struct.Reg, %struct.Reg* %11150, i32 0, i32 0
  %EAX.i185 = bitcast %union.anon* %11151 to i32*
  %11152 = load i32, i32* %EAX.i185
  %11153 = zext i32 %11152 to i64
  %11154 = load i64, i64* %PC.i184
  %11155 = add i64 %11154, 7
  store i64 %11155, i64* %PC.i184
  store i32 %11152, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  store %struct.Memory* %loadMem_40d384, %struct.Memory** %MEMORY
  %loadMem_40d38b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11157 = getelementptr inbounds %struct.GPR, %struct.GPR* %11156, i32 0, i32 33
  %11158 = getelementptr inbounds %struct.Reg, %struct.Reg* %11157, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %11158 to i64*
  %11159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11160 = getelementptr inbounds %struct.GPR, %struct.GPR* %11159, i32 0, i32 1
  %11161 = getelementptr inbounds %struct.Reg, %struct.Reg* %11160, i32 0, i32 0
  %RAX.i183 = bitcast %union.anon* %11161 to i64*
  %11162 = load i64, i64* %PC.i182
  %11163 = add i64 %11162, 7
  store i64 %11163, i64* %PC.i182
  %11164 = load i32, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  %11165 = zext i32 %11164 to i64
  store i64 %11165, i64* %RAX.i183, align 8
  store %struct.Memory* %loadMem_40d38b, %struct.Memory** %MEMORY
  %loadMem_40d392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11167 = getelementptr inbounds %struct.GPR, %struct.GPR* %11166, i32 0, i32 33
  %11168 = getelementptr inbounds %struct.Reg, %struct.Reg* %11167, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %11168 to i64*
  %11169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11170 = getelementptr inbounds %struct.GPR, %struct.GPR* %11169, i32 0, i32 1
  %11171 = getelementptr inbounds %struct.Reg, %struct.Reg* %11170, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %11171 to i64*
  %11172 = load i64, i64* %RAX.i181
  %11173 = load i64, i64* %PC.i180
  %11174 = add i64 %11173, 3
  store i64 %11174, i64* %PC.i180
  %11175 = trunc i64 %11172 to i32
  %11176 = add i32 -1, %11175
  %11177 = zext i32 %11176 to i64
  store i64 %11177, i64* %RAX.i181, align 8
  %11178 = icmp ult i32 %11176, %11175
  %11179 = icmp ult i32 %11176, -1
  %11180 = or i1 %11178, %11179
  %11181 = zext i1 %11180 to i8
  %11182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11181, i8* %11182, align 1
  %11183 = and i32 %11176, 255
  %11184 = call i32 @llvm.ctpop.i32(i32 %11183)
  %11185 = trunc i32 %11184 to i8
  %11186 = and i8 %11185, 1
  %11187 = xor i8 %11186, 1
  %11188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11187, i8* %11188, align 1
  %11189 = xor i64 -1, %11172
  %11190 = trunc i64 %11189 to i32
  %11191 = xor i32 %11190, %11176
  %11192 = lshr i32 %11191, 4
  %11193 = trunc i32 %11192 to i8
  %11194 = and i8 %11193, 1
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11194, i8* %11195, align 1
  %11196 = icmp eq i32 %11176, 0
  %11197 = zext i1 %11196 to i8
  %11198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11197, i8* %11198, align 1
  %11199 = lshr i32 %11176, 31
  %11200 = trunc i32 %11199 to i8
  %11201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11200, i8* %11201, align 1
  %11202 = lshr i32 %11175, 31
  %11203 = xor i32 %11199, %11202
  %11204 = xor i32 %11199, 1
  %11205 = add i32 %11203, %11204
  %11206 = icmp eq i32 %11205, 2
  %11207 = zext i1 %11206 to i8
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11207, i8* %11208, align 1
  store %struct.Memory* %loadMem_40d392, %struct.Memory** %MEMORY
  %loadMem_40d395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11210 = getelementptr inbounds %struct.GPR, %struct.GPR* %11209, i32 0, i32 33
  %11211 = getelementptr inbounds %struct.Reg, %struct.Reg* %11210, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %11211 to i64*
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11213 = getelementptr inbounds %struct.GPR, %struct.GPR* %11212, i32 0, i32 1
  %11214 = getelementptr inbounds %struct.Reg, %struct.Reg* %11213, i32 0, i32 0
  %EAX.i179 = bitcast %union.anon* %11214 to i32*
  %11215 = load i32, i32* %EAX.i179
  %11216 = zext i32 %11215 to i64
  %11217 = load i64, i64* %PC.i178
  %11218 = add i64 %11217, 7
  store i64 %11218, i64* %PC.i178
  store i32 %11215, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  store %struct.Memory* %loadMem_40d395, %struct.Memory** %MEMORY
  %loadMem_40d39c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11220 = getelementptr inbounds %struct.GPR, %struct.GPR* %11219, i32 0, i32 33
  %11221 = getelementptr inbounds %struct.Reg, %struct.Reg* %11220, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %11221 to i64*
  %11222 = load i64, i64* %PC.i177
  %11223 = add i64 %11222, 11
  store i64 %11223, i64* %PC.i177
  store i32 0, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  store %struct.Memory* %loadMem_40d39c, %struct.Memory** %MEMORY
  %loadMem_40d3a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11225 = getelementptr inbounds %struct.GPR, %struct.GPR* %11224, i32 0, i32 33
  %11226 = getelementptr inbounds %struct.Reg, %struct.Reg* %11225, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %11226 to i64*
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11228 = getelementptr inbounds %struct.GPR, %struct.GPR* %11227, i32 0, i32 1
  %11229 = getelementptr inbounds %struct.Reg, %struct.Reg* %11228, i32 0, i32 0
  %RAX.i176 = bitcast %union.anon* %11229 to i64*
  %11230 = load i64, i64* %PC.i175
  %11231 = add i64 %11230, 7
  store i64 %11231, i64* %PC.i175
  %11232 = load i32, i32* bitcast (%G_0x866364_type* @G_0x866364 to i32*)
  %11233 = zext i32 %11232 to i64
  store i64 %11233, i64* %RAX.i176, align 8
  store %struct.Memory* %loadMem_40d3a7, %struct.Memory** %MEMORY
  %loadMem_40d3ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %11234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11235 = getelementptr inbounds %struct.GPR, %struct.GPR* %11234, i32 0, i32 33
  %11236 = getelementptr inbounds %struct.Reg, %struct.Reg* %11235, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %11236 to i64*
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 1
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %EAX.i174 = bitcast %union.anon* %11239 to i32*
  %11240 = load i32, i32* %EAX.i174
  %11241 = zext i32 %11240 to i64
  %11242 = load i64, i64* %PC.i173
  %11243 = add i64 %11242, 7
  store i64 %11243, i64* %PC.i173
  store i32 %11240, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  store %struct.Memory* %loadMem_40d3ae, %struct.Memory** %MEMORY
  %loadMem_40d3b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11245 = getelementptr inbounds %struct.GPR, %struct.GPR* %11244, i32 0, i32 33
  %11246 = getelementptr inbounds %struct.Reg, %struct.Reg* %11245, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %11246 to i64*
  %11247 = load i64, i64* %PC.i172
  %11248 = add i64 %11247, 11
  store i64 %11248, i64* %PC.i172
  store i32 0, i32* bitcast (%G_0x866364_type* @G_0x866364 to i32*)
  store %struct.Memory* %loadMem_40d3b5, %struct.Memory** %MEMORY
  %loadMem_40d3c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11250 = getelementptr inbounds %struct.GPR, %struct.GPR* %11249, i32 0, i32 33
  %11251 = getelementptr inbounds %struct.Reg, %struct.Reg* %11250, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %11251 to i64*
  %11252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11253 = getelementptr inbounds %struct.GPR, %struct.GPR* %11252, i32 0, i32 5
  %11254 = getelementptr inbounds %struct.Reg, %struct.Reg* %11253, i32 0, i32 0
  %RCX.i171 = bitcast %union.anon* %11254 to i64*
  %11255 = load i64, i64* %PC.i170
  %11256 = add i64 %11255, 8
  store i64 %11256, i64* %PC.i170
  %11257 = load i32, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  %11258 = sext i32 %11257 to i64
  store i64 %11258, i64* %RCX.i171, align 8
  store %struct.Memory* %loadMem_40d3c0, %struct.Memory** %MEMORY
  %loadMem_40d3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11260 = getelementptr inbounds %struct.GPR, %struct.GPR* %11259, i32 0, i32 33
  %11261 = getelementptr inbounds %struct.Reg, %struct.Reg* %11260, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %11261 to i64*
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11263 = getelementptr inbounds %struct.GPR, %struct.GPR* %11262, i32 0, i32 5
  %11264 = getelementptr inbounds %struct.Reg, %struct.Reg* %11263, i32 0, i32 0
  %RCX.i169 = bitcast %union.anon* %11264 to i64*
  %11265 = load i64, i64* %RCX.i169
  %11266 = mul i64 %11265, 4
  %11267 = add i64 %11266, 8778480
  %11268 = load i64, i64* %PC.i168
  %11269 = add i64 %11268, 11
  store i64 %11269, i64* %PC.i168
  %11270 = inttoptr i64 %11267 to i32*
  store i32 26, i32* %11270
  store %struct.Memory* %loadMem_40d3c8, %struct.Memory** %MEMORY
  %loadMem_40d3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11272 = getelementptr inbounds %struct.GPR, %struct.GPR* %11271, i32 0, i32 33
  %11273 = getelementptr inbounds %struct.Reg, %struct.Reg* %11272, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %11273 to i64*
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11275 = getelementptr inbounds %struct.GPR, %struct.GPR* %11274, i32 0, i32 1
  %11276 = getelementptr inbounds %struct.Reg, %struct.Reg* %11275, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %11276 to i64*
  %11277 = load i64, i64* %PC.i166
  %11278 = add i64 %11277, 7
  store i64 %11278, i64* %PC.i166
  %11279 = load i32, i32* bitcast (%G_0x8a1ab4_type* @G_0x8a1ab4 to i32*)
  %11280 = zext i32 %11279 to i64
  store i64 %11280, i64* %RAX.i167, align 8
  store %struct.Memory* %loadMem_40d3d3, %struct.Memory** %MEMORY
  %loadMem_40d3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11282 = getelementptr inbounds %struct.GPR, %struct.GPR* %11281, i32 0, i32 33
  %11283 = getelementptr inbounds %struct.Reg, %struct.Reg* %11282, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %11283 to i64*
  %11284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11285 = getelementptr inbounds %struct.GPR, %struct.GPR* %11284, i32 0, i32 1
  %11286 = getelementptr inbounds %struct.Reg, %struct.Reg* %11285, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %11286 to i64*
  %11287 = load i64, i64* %RAX.i165
  %11288 = load i64, i64* %PC.i164
  %11289 = add i64 %11288, 7
  store i64 %11289, i64* %PC.i164
  %11290 = trunc i64 %11287 to i32
  %11291 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %11292 = xor i32 %11291, %11290
  %11293 = zext i32 %11292 to i64
  store i64 %11293, i64* %RAX.i165, align 8
  %11294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11294, align 1
  %11295 = and i32 %11292, 255
  %11296 = call i32 @llvm.ctpop.i32(i32 %11295)
  %11297 = trunc i32 %11296 to i8
  %11298 = and i8 %11297, 1
  %11299 = xor i8 %11298, 1
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11299, i8* %11300, align 1
  %11301 = icmp eq i32 %11292, 0
  %11302 = zext i1 %11301 to i8
  %11303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11302, i8* %11303, align 1
  %11304 = lshr i32 %11292, 31
  %11305 = trunc i32 %11304 to i8
  %11306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11305, i8* %11306, align 1
  %11307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11307, align 1
  %11308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11308, align 1
  store %struct.Memory* %loadMem_40d3da, %struct.Memory** %MEMORY
  %loadMem_40d3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11310 = getelementptr inbounds %struct.GPR, %struct.GPR* %11309, i32 0, i32 33
  %11311 = getelementptr inbounds %struct.Reg, %struct.Reg* %11310, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %11311 to i64*
  %11312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11313 = getelementptr inbounds %struct.GPR, %struct.GPR* %11312, i32 0, i32 1
  %11314 = getelementptr inbounds %struct.Reg, %struct.Reg* %11313, i32 0, i32 0
  %EAX.i163 = bitcast %union.anon* %11314 to i32*
  %11315 = load i32, i32* %EAX.i163
  %11316 = zext i32 %11315 to i64
  %11317 = load i64, i64* %PC.i162
  %11318 = add i64 %11317, 7
  store i64 %11318, i64* %PC.i162
  store i32 %11315, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d3e1, %struct.Memory** %MEMORY
  %loadMem_40d3e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11320 = getelementptr inbounds %struct.GPR, %struct.GPR* %11319, i32 0, i32 33
  %11321 = getelementptr inbounds %struct.Reg, %struct.Reg* %11320, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %11321 to i64*
  %11322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11323 = getelementptr inbounds %struct.GPR, %struct.GPR* %11322, i32 0, i32 1
  %11324 = getelementptr inbounds %struct.Reg, %struct.Reg* %11323, i32 0, i32 0
  %RAX.i161 = bitcast %union.anon* %11324 to i64*
  %11325 = load i64, i64* %PC.i160
  %11326 = add i64 %11325, 7
  store i64 %11326, i64* %PC.i160
  %11327 = load i32, i32* bitcast (%G_0x8a1aa8_type* @G_0x8a1aa8 to i32*)
  %11328 = zext i32 %11327 to i64
  store i64 %11328, i64* %RAX.i161, align 8
  store %struct.Memory* %loadMem_40d3e8, %struct.Memory** %MEMORY
  %loadMem_40d3ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11330 = getelementptr inbounds %struct.GPR, %struct.GPR* %11329, i32 0, i32 33
  %11331 = getelementptr inbounds %struct.Reg, %struct.Reg* %11330, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %11331 to i64*
  %11332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11333 = getelementptr inbounds %struct.GPR, %struct.GPR* %11332, i32 0, i32 1
  %11334 = getelementptr inbounds %struct.Reg, %struct.Reg* %11333, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %11334 to i64*
  %11335 = load i64, i64* %RAX.i159
  %11336 = load i64, i64* %PC.i158
  %11337 = add i64 %11336, 7
  store i64 %11337, i64* %PC.i158
  %11338 = trunc i64 %11335 to i32
  %11339 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %11340 = xor i32 %11339, %11338
  %11341 = zext i32 %11340 to i64
  store i64 %11341, i64* %RAX.i159, align 8
  %11342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11342, align 1
  %11343 = and i32 %11340, 255
  %11344 = call i32 @llvm.ctpop.i32(i32 %11343)
  %11345 = trunc i32 %11344 to i8
  %11346 = and i8 %11345, 1
  %11347 = xor i8 %11346, 1
  %11348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11347, i8* %11348, align 1
  %11349 = icmp eq i32 %11340, 0
  %11350 = zext i1 %11349 to i8
  %11351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11350, i8* %11351, align 1
  %11352 = lshr i32 %11340, 31
  %11353 = trunc i32 %11352 to i8
  %11354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11353, i8* %11354, align 1
  %11355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11355, align 1
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11356, align 1
  store %struct.Memory* %loadMem_40d3ef, %struct.Memory** %MEMORY
  %loadMem_40d3f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11358 = getelementptr inbounds %struct.GPR, %struct.GPR* %11357, i32 0, i32 33
  %11359 = getelementptr inbounds %struct.Reg, %struct.Reg* %11358, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %11359 to i64*
  %11360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11361 = getelementptr inbounds %struct.GPR, %struct.GPR* %11360, i32 0, i32 1
  %11362 = getelementptr inbounds %struct.Reg, %struct.Reg* %11361, i32 0, i32 0
  %EAX.i157 = bitcast %union.anon* %11362 to i32*
  %11363 = load i32, i32* %EAX.i157
  %11364 = zext i32 %11363 to i64
  %11365 = load i64, i64* %PC.i156
  %11366 = add i64 %11365, 7
  store i64 %11366, i64* %PC.i156
  store i32 %11363, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d3f6, %struct.Memory** %MEMORY
  %loadMem_40d3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11368 = getelementptr inbounds %struct.GPR, %struct.GPR* %11367, i32 0, i32 33
  %11369 = getelementptr inbounds %struct.Reg, %struct.Reg* %11368, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %11369 to i64*
  %11370 = load i64, i64* %PC.i155
  %11371 = add i64 %11370, 519
  %11372 = load i64, i64* %PC.i155
  %11373 = add i64 %11372, 5
  store i64 %11373, i64* %PC.i155
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11371, i64* %11374, align 8
  store %struct.Memory* %loadMem_40d3fd, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d402:                                  ; preds = %block_.L_40d35a
  %loadMem_40d402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11376 = getelementptr inbounds %struct.GPR, %struct.GPR* %11375, i32 0, i32 33
  %11377 = getelementptr inbounds %struct.Reg, %struct.Reg* %11376, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %11377 to i64*
  %11378 = load i64, i64* %PC.i154
  %11379 = add i64 %11378, 5
  %11380 = load i64, i64* %PC.i154
  %11381 = add i64 %11380, 5
  store i64 %11381, i64* %PC.i154
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11379, i64* %11382, align 8
  store %struct.Memory* %loadMem_40d402, %struct.Memory** %MEMORY
  br label %block_.L_40d407

block_.L_40d407:                                  ; preds = %block_.L_40d402
  %loadMem_40d407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 33
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %11385 to i64*
  %11386 = load i64, i64* %PC.i153
  %11387 = add i64 %11386, 509
  %11388 = load i64, i64* %PC.i153
  %11389 = add i64 %11388, 5
  store i64 %11389, i64* %PC.i153
  %11390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11387, i64* %11390, align 8
  store %struct.Memory* %loadMem_40d407, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d40c:                                  ; preds = %block_.L_40d20c
  %loadMem_40d40c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11392 = getelementptr inbounds %struct.GPR, %struct.GPR* %11391, i32 0, i32 33
  %11393 = getelementptr inbounds %struct.Reg, %struct.Reg* %11392, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %11393 to i64*
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11395 = getelementptr inbounds %struct.GPR, %struct.GPR* %11394, i32 0, i32 1
  %11396 = getelementptr inbounds %struct.Reg, %struct.Reg* %11395, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %11396 to i64*
  %11397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11398 = getelementptr inbounds %struct.GPR, %struct.GPR* %11397, i32 0, i32 15
  %11399 = getelementptr inbounds %struct.Reg, %struct.Reg* %11398, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %11399 to i64*
  %11400 = load i64, i64* %RBP.i152
  %11401 = sub i64 %11400, 20
  %11402 = load i64, i64* %PC.i150
  %11403 = add i64 %11402, 3
  store i64 %11403, i64* %PC.i150
  %11404 = inttoptr i64 %11401 to i32*
  %11405 = load i32, i32* %11404
  %11406 = zext i32 %11405 to i64
  store i64 %11406, i64* %RAX.i151, align 8
  store %struct.Memory* %loadMem_40d40c, %struct.Memory** %MEMORY
  %loadMem_40d40f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11408 = getelementptr inbounds %struct.GPR, %struct.GPR* %11407, i32 0, i32 33
  %11409 = getelementptr inbounds %struct.Reg, %struct.Reg* %11408, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %11409 to i64*
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11411 = getelementptr inbounds %struct.GPR, %struct.GPR* %11410, i32 0, i32 1
  %11412 = getelementptr inbounds %struct.Reg, %struct.Reg* %11411, i32 0, i32 0
  %EAX.i149 = bitcast %union.anon* %11412 to i32*
  %11413 = load i32, i32* %EAX.i149
  %11414 = zext i32 %11413 to i64
  %11415 = load i64, i64* %PC.i148
  %11416 = add i64 %11415, 7
  store i64 %11416, i64* %PC.i148
  store i32 %11413, i32* bitcast (%G_0x8661d0_type* @G_0x8661d0 to i32*)
  store %struct.Memory* %loadMem_40d40f, %struct.Memory** %MEMORY
  %loadMem_40d416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11418 = getelementptr inbounds %struct.GPR, %struct.GPR* %11417, i32 0, i32 33
  %11419 = getelementptr inbounds %struct.Reg, %struct.Reg* %11418, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %11419 to i64*
  %11420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11421 = getelementptr inbounds %struct.GPR, %struct.GPR* %11420, i32 0, i32 1
  %11422 = getelementptr inbounds %struct.Reg, %struct.Reg* %11421, i32 0, i32 0
  %RAX.i146 = bitcast %union.anon* %11422 to i64*
  %11423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11424 = getelementptr inbounds %struct.GPR, %struct.GPR* %11423, i32 0, i32 15
  %11425 = getelementptr inbounds %struct.Reg, %struct.Reg* %11424, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %11425 to i64*
  %11426 = load i64, i64* %RBP.i147
  %11427 = sub i64 %11426, 28
  %11428 = load i64, i64* %PC.i145
  %11429 = add i64 %11428, 3
  store i64 %11429, i64* %PC.i145
  %11430 = inttoptr i64 %11427 to i32*
  %11431 = load i32, i32* %11430
  %11432 = zext i32 %11431 to i64
  store i64 %11432, i64* %RAX.i146, align 8
  store %struct.Memory* %loadMem_40d416, %struct.Memory** %MEMORY
  %loadMem_40d419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11434 = getelementptr inbounds %struct.GPR, %struct.GPR* %11433, i32 0, i32 33
  %11435 = getelementptr inbounds %struct.Reg, %struct.Reg* %11434, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %11435 to i64*
  %11436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11437 = getelementptr inbounds %struct.GPR, %struct.GPR* %11436, i32 0, i32 5
  %11438 = getelementptr inbounds %struct.Reg, %struct.Reg* %11437, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %11438 to i64*
  %11439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11440 = getelementptr inbounds %struct.GPR, %struct.GPR* %11439, i32 0, i32 15
  %11441 = getelementptr inbounds %struct.Reg, %struct.Reg* %11440, i32 0, i32 0
  %RBP.i144 = bitcast %union.anon* %11441 to i64*
  %11442 = load i64, i64* %RBP.i144
  %11443 = sub i64 %11442, 24
  %11444 = load i64, i64* %PC.i142
  %11445 = add i64 %11444, 4
  store i64 %11445, i64* %PC.i142
  %11446 = inttoptr i64 %11443 to i32*
  %11447 = load i32, i32* %11446
  %11448 = sext i32 %11447 to i64
  store i64 %11448, i64* %RCX.i143, align 8
  store %struct.Memory* %loadMem_40d419, %struct.Memory** %MEMORY
  %loadMem_40d41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11450 = getelementptr inbounds %struct.GPR, %struct.GPR* %11449, i32 0, i32 33
  %11451 = getelementptr inbounds %struct.Reg, %struct.Reg* %11450, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %11451 to i64*
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11453 = getelementptr inbounds %struct.GPR, %struct.GPR* %11452, i32 0, i32 1
  %11454 = getelementptr inbounds %struct.Reg, %struct.Reg* %11453, i32 0, i32 0
  %EAX.i140 = bitcast %union.anon* %11454 to i32*
  %11455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11456 = getelementptr inbounds %struct.GPR, %struct.GPR* %11455, i32 0, i32 5
  %11457 = getelementptr inbounds %struct.Reg, %struct.Reg* %11456, i32 0, i32 0
  %RCX.i141 = bitcast %union.anon* %11457 to i64*
  %11458 = load i64, i64* %RCX.i141
  %11459 = mul i64 %11458, 4
  %11460 = add i64 %11459, 8807744
  %11461 = load i32, i32* %EAX.i140
  %11462 = zext i32 %11461 to i64
  %11463 = load i64, i64* %PC.i139
  %11464 = add i64 %11463, 7
  store i64 %11464, i64* %PC.i139
  %11465 = inttoptr i64 %11460 to i32*
  store i32 %11461, i32* %11465
  store %struct.Memory* %loadMem_40d41d, %struct.Memory** %MEMORY
  %loadMem_40d424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11467 = getelementptr inbounds %struct.GPR, %struct.GPR* %11466, i32 0, i32 33
  %11468 = getelementptr inbounds %struct.Reg, %struct.Reg* %11467, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %11468 to i64*
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11470 = getelementptr inbounds %struct.GPR, %struct.GPR* %11469, i32 0, i32 5
  %11471 = getelementptr inbounds %struct.Reg, %struct.Reg* %11470, i32 0, i32 0
  %RCX.i137 = bitcast %union.anon* %11471 to i64*
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11473 = getelementptr inbounds %struct.GPR, %struct.GPR* %11472, i32 0, i32 15
  %11474 = getelementptr inbounds %struct.Reg, %struct.Reg* %11473, i32 0, i32 0
  %RBP.i138 = bitcast %union.anon* %11474 to i64*
  %11475 = load i64, i64* %RBP.i138
  %11476 = sub i64 %11475, 20
  %11477 = load i64, i64* %PC.i136
  %11478 = add i64 %11477, 4
  store i64 %11478, i64* %PC.i136
  %11479 = inttoptr i64 %11476 to i32*
  %11480 = load i32, i32* %11479
  %11481 = sext i32 %11480 to i64
  store i64 %11481, i64* %RCX.i137, align 8
  store %struct.Memory* %loadMem_40d424, %struct.Memory** %MEMORY
  %loadMem_40d428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11483 = getelementptr inbounds %struct.GPR, %struct.GPR* %11482, i32 0, i32 33
  %11484 = getelementptr inbounds %struct.Reg, %struct.Reg* %11483, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %11484 to i64*
  %11485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11486 = getelementptr inbounds %struct.GPR, %struct.GPR* %11485, i32 0, i32 5
  %11487 = getelementptr inbounds %struct.Reg, %struct.Reg* %11486, i32 0, i32 0
  %RCX.i135 = bitcast %union.anon* %11487 to i64*
  %11488 = load i64, i64* %RCX.i135
  %11489 = mul i64 %11488, 4
  %11490 = add i64 %11489, 8807744
  %11491 = load i64, i64* %PC.i134
  %11492 = add i64 %11491, 11
  store i64 %11492, i64* %PC.i134
  %11493 = inttoptr i64 %11490 to i32*
  store i32 6, i32* %11493
  store %struct.Memory* %loadMem_40d428, %struct.Memory** %MEMORY
  %loadMem_40d433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11495 = getelementptr inbounds %struct.GPR, %struct.GPR* %11494, i32 0, i32 33
  %11496 = getelementptr inbounds %struct.Reg, %struct.Reg* %11495, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %11496 to i64*
  %11497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11498 = getelementptr inbounds %struct.GPR, %struct.GPR* %11497, i32 0, i32 5
  %11499 = getelementptr inbounds %struct.Reg, %struct.Reg* %11498, i32 0, i32 0
  %RCX.i132 = bitcast %union.anon* %11499 to i64*
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11501 = getelementptr inbounds %struct.GPR, %struct.GPR* %11500, i32 0, i32 15
  %11502 = getelementptr inbounds %struct.Reg, %struct.Reg* %11501, i32 0, i32 0
  %RBP.i133 = bitcast %union.anon* %11502 to i64*
  %11503 = load i64, i64* %RBP.i133
  %11504 = sub i64 %11503, 24
  %11505 = load i64, i64* %PC.i131
  %11506 = add i64 %11505, 4
  store i64 %11506, i64* %PC.i131
  %11507 = inttoptr i64 %11504 to i32*
  %11508 = load i32, i32* %11507
  %11509 = sext i32 %11508 to i64
  store i64 %11509, i64* %RCX.i132, align 8
  store %struct.Memory* %loadMem_40d433, %struct.Memory** %MEMORY
  %loadMem_40d437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11511 = getelementptr inbounds %struct.GPR, %struct.GPR* %11510, i32 0, i32 33
  %11512 = getelementptr inbounds %struct.Reg, %struct.Reg* %11511, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %11512 to i64*
  %11513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11514 = getelementptr inbounds %struct.GPR, %struct.GPR* %11513, i32 0, i32 1
  %11515 = getelementptr inbounds %struct.Reg, %struct.Reg* %11514, i32 0, i32 0
  %RAX.i129 = bitcast %union.anon* %11515 to i64*
  %11516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11517 = getelementptr inbounds %struct.GPR, %struct.GPR* %11516, i32 0, i32 5
  %11518 = getelementptr inbounds %struct.Reg, %struct.Reg* %11517, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %11518 to i64*
  %11519 = load i64, i64* %RCX.i130
  %11520 = mul i64 %11519, 4
  %11521 = add i64 %11520, 8922032
  %11522 = load i64, i64* %PC.i128
  %11523 = add i64 %11522, 7
  store i64 %11523, i64* %PC.i128
  %11524 = inttoptr i64 %11521 to i32*
  %11525 = load i32, i32* %11524
  %11526 = zext i32 %11525 to i64
  store i64 %11526, i64* %RAX.i129, align 8
  store %struct.Memory* %loadMem_40d437, %struct.Memory** %MEMORY
  %loadMem_40d43e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11528 = getelementptr inbounds %struct.GPR, %struct.GPR* %11527, i32 0, i32 33
  %11529 = getelementptr inbounds %struct.Reg, %struct.Reg* %11528, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %11529 to i64*
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11531 = getelementptr inbounds %struct.GPR, %struct.GPR* %11530, i32 0, i32 1
  %11532 = getelementptr inbounds %struct.Reg, %struct.Reg* %11531, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %11532 to i64*
  %11533 = load i64, i64* %RAX.i127
  %11534 = load i64, i64* %PC.i126
  %11535 = add i64 %11534, 3
  store i64 %11535, i64* %PC.i126
  %11536 = trunc i64 %11533 to i32
  %11537 = add i32 -1, %11536
  %11538 = zext i32 %11537 to i64
  store i64 %11538, i64* %RAX.i127, align 8
  %11539 = icmp ult i32 %11537, %11536
  %11540 = icmp ult i32 %11537, -1
  %11541 = or i1 %11539, %11540
  %11542 = zext i1 %11541 to i8
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11542, i8* %11543, align 1
  %11544 = and i32 %11537, 255
  %11545 = call i32 @llvm.ctpop.i32(i32 %11544)
  %11546 = trunc i32 %11545 to i8
  %11547 = and i8 %11546, 1
  %11548 = xor i8 %11547, 1
  %11549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11548, i8* %11549, align 1
  %11550 = xor i64 -1, %11533
  %11551 = trunc i64 %11550 to i32
  %11552 = xor i32 %11551, %11537
  %11553 = lshr i32 %11552, 4
  %11554 = trunc i32 %11553 to i8
  %11555 = and i8 %11554, 1
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11555, i8* %11556, align 1
  %11557 = icmp eq i32 %11537, 0
  %11558 = zext i1 %11557 to i8
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11558, i8* %11559, align 1
  %11560 = lshr i32 %11537, 31
  %11561 = trunc i32 %11560 to i8
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11561, i8* %11562, align 1
  %11563 = lshr i32 %11536, 31
  %11564 = xor i32 %11560, %11563
  %11565 = xor i32 %11560, 1
  %11566 = add i32 %11564, %11565
  %11567 = icmp eq i32 %11566, 2
  %11568 = zext i1 %11567 to i8
  %11569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11568, i8* %11569, align 1
  store %struct.Memory* %loadMem_40d43e, %struct.Memory** %MEMORY
  %loadMem_40d441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 33
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %11572 to i64*
  %11573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11574 = getelementptr inbounds %struct.GPR, %struct.GPR* %11573, i32 0, i32 1
  %11575 = getelementptr inbounds %struct.Reg, %struct.Reg* %11574, i32 0, i32 0
  %EAX.i124 = bitcast %union.anon* %11575 to i32*
  %11576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11577 = getelementptr inbounds %struct.GPR, %struct.GPR* %11576, i32 0, i32 5
  %11578 = getelementptr inbounds %struct.Reg, %struct.Reg* %11577, i32 0, i32 0
  %RCX.i125 = bitcast %union.anon* %11578 to i64*
  %11579 = load i64, i64* %RCX.i125
  %11580 = mul i64 %11579, 4
  %11581 = add i64 %11580, 8922032
  %11582 = load i32, i32* %EAX.i124
  %11583 = zext i32 %11582 to i64
  %11584 = load i64, i64* %PC.i123
  %11585 = add i64 %11584, 7
  store i64 %11585, i64* %PC.i123
  %11586 = inttoptr i64 %11581 to i32*
  store i32 %11582, i32* %11586
  store %struct.Memory* %loadMem_40d441, %struct.Memory** %MEMORY
  %loadMem_40d448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11588 = getelementptr inbounds %struct.GPR, %struct.GPR* %11587, i32 0, i32 33
  %11589 = getelementptr inbounds %struct.Reg, %struct.Reg* %11588, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %11589 to i64*
  %11590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11591 = getelementptr inbounds %struct.GPR, %struct.GPR* %11590, i32 0, i32 5
  %11592 = getelementptr inbounds %struct.Reg, %struct.Reg* %11591, i32 0, i32 0
  %RCX.i121 = bitcast %union.anon* %11592 to i64*
  %11593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11594 = getelementptr inbounds %struct.GPR, %struct.GPR* %11593, i32 0, i32 15
  %11595 = getelementptr inbounds %struct.Reg, %struct.Reg* %11594, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %11595 to i64*
  %11596 = load i64, i64* %RBP.i122
  %11597 = sub i64 %11596, 20
  %11598 = load i64, i64* %PC.i120
  %11599 = add i64 %11598, 4
  store i64 %11599, i64* %PC.i120
  %11600 = inttoptr i64 %11597 to i32*
  %11601 = load i32, i32* %11600
  %11602 = sext i32 %11601 to i64
  store i64 %11602, i64* %RCX.i121, align 8
  store %struct.Memory* %loadMem_40d448, %struct.Memory** %MEMORY
  %loadMem_40d44c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11604 = getelementptr inbounds %struct.GPR, %struct.GPR* %11603, i32 0, i32 33
  %11605 = getelementptr inbounds %struct.Reg, %struct.Reg* %11604, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %11605 to i64*
  %11606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11607 = getelementptr inbounds %struct.GPR, %struct.GPR* %11606, i32 0, i32 1
  %11608 = getelementptr inbounds %struct.Reg, %struct.Reg* %11607, i32 0, i32 0
  %RAX.i118 = bitcast %union.anon* %11608 to i64*
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11610 = getelementptr inbounds %struct.GPR, %struct.GPR* %11609, i32 0, i32 5
  %11611 = getelementptr inbounds %struct.Reg, %struct.Reg* %11610, i32 0, i32 0
  %RCX.i119 = bitcast %union.anon* %11611 to i64*
  %11612 = load i64, i64* %RCX.i119
  %11613 = mul i64 %11612, 4
  %11614 = add i64 %11613, 8922032
  %11615 = load i64, i64* %PC.i117
  %11616 = add i64 %11615, 7
  store i64 %11616, i64* %PC.i117
  %11617 = inttoptr i64 %11614 to i32*
  %11618 = load i32, i32* %11617
  %11619 = zext i32 %11618 to i64
  store i64 %11619, i64* %RAX.i118, align 8
  store %struct.Memory* %loadMem_40d44c, %struct.Memory** %MEMORY
  %loadMem_40d453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11621 = getelementptr inbounds %struct.GPR, %struct.GPR* %11620, i32 0, i32 33
  %11622 = getelementptr inbounds %struct.Reg, %struct.Reg* %11621, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %11622 to i64*
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11624 = getelementptr inbounds %struct.GPR, %struct.GPR* %11623, i32 0, i32 1
  %11625 = getelementptr inbounds %struct.Reg, %struct.Reg* %11624, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %11625 to i64*
  %11626 = load i64, i64* %RAX.i116
  %11627 = load i64, i64* %PC.i115
  %11628 = add i64 %11627, 3
  store i64 %11628, i64* %PC.i115
  %11629 = trunc i64 %11626 to i32
  %11630 = add i32 -1, %11629
  %11631 = zext i32 %11630 to i64
  store i64 %11631, i64* %RAX.i116, align 8
  %11632 = icmp ult i32 %11630, %11629
  %11633 = icmp ult i32 %11630, -1
  %11634 = or i1 %11632, %11633
  %11635 = zext i1 %11634 to i8
  %11636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11635, i8* %11636, align 1
  %11637 = and i32 %11630, 255
  %11638 = call i32 @llvm.ctpop.i32(i32 %11637)
  %11639 = trunc i32 %11638 to i8
  %11640 = and i8 %11639, 1
  %11641 = xor i8 %11640, 1
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11641, i8* %11642, align 1
  %11643 = xor i64 -1, %11626
  %11644 = trunc i64 %11643 to i32
  %11645 = xor i32 %11644, %11630
  %11646 = lshr i32 %11645, 4
  %11647 = trunc i32 %11646 to i8
  %11648 = and i8 %11647, 1
  %11649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11648, i8* %11649, align 1
  %11650 = icmp eq i32 %11630, 0
  %11651 = zext i1 %11650 to i8
  %11652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11651, i8* %11652, align 1
  %11653 = lshr i32 %11630, 31
  %11654 = trunc i32 %11653 to i8
  %11655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11654, i8* %11655, align 1
  %11656 = lshr i32 %11629, 31
  %11657 = xor i32 %11653, %11656
  %11658 = xor i32 %11653, 1
  %11659 = add i32 %11657, %11658
  %11660 = icmp eq i32 %11659, 2
  %11661 = zext i1 %11660 to i8
  %11662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11661, i8* %11662, align 1
  store %struct.Memory* %loadMem_40d453, %struct.Memory** %MEMORY
  %loadMem_40d456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11664 = getelementptr inbounds %struct.GPR, %struct.GPR* %11663, i32 0, i32 33
  %11665 = getelementptr inbounds %struct.Reg, %struct.Reg* %11664, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %11665 to i64*
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 1
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %EAX.i113 = bitcast %union.anon* %11668 to i32*
  %11669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11670 = getelementptr inbounds %struct.GPR, %struct.GPR* %11669, i32 0, i32 5
  %11671 = getelementptr inbounds %struct.Reg, %struct.Reg* %11670, i32 0, i32 0
  %RCX.i114 = bitcast %union.anon* %11671 to i64*
  %11672 = load i64, i64* %RCX.i114
  %11673 = mul i64 %11672, 4
  %11674 = add i64 %11673, 8922032
  %11675 = load i32, i32* %EAX.i113
  %11676 = zext i32 %11675 to i64
  %11677 = load i64, i64* %PC.i112
  %11678 = add i64 %11677, 7
  store i64 %11678, i64* %PC.i112
  %11679 = inttoptr i64 %11674 to i32*
  store i32 %11675, i32* %11679
  store %struct.Memory* %loadMem_40d456, %struct.Memory** %MEMORY
  %loadMem_40d45d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 33
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %11682 to i64*
  %11683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11684 = getelementptr inbounds %struct.GPR, %struct.GPR* %11683, i32 0, i32 1
  %11685 = getelementptr inbounds %struct.Reg, %struct.Reg* %11684, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %11685 to i64*
  %11686 = load i64, i64* %PC.i110
  %11687 = add i64 %11686, 7
  store i64 %11687, i64* %PC.i110
  %11688 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %11689 = zext i32 %11688 to i64
  store i64 %11689, i64* %RAX.i111, align 8
  store %struct.Memory* %loadMem_40d45d, %struct.Memory** %MEMORY
  %loadMem_40d464 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11691 = getelementptr inbounds %struct.GPR, %struct.GPR* %11690, i32 0, i32 33
  %11692 = getelementptr inbounds %struct.Reg, %struct.Reg* %11691, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %11692 to i64*
  %11693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11694 = getelementptr inbounds %struct.GPR, %struct.GPR* %11693, i32 0, i32 1
  %11695 = getelementptr inbounds %struct.Reg, %struct.Reg* %11694, i32 0, i32 0
  %RAX.i109 = bitcast %union.anon* %11695 to i64*
  %11696 = load i64, i64* %RAX.i109
  %11697 = load i64, i64* %PC.i108
  %11698 = add i64 %11697, 3
  store i64 %11698, i64* %PC.i108
  %11699 = xor i64 1, %11696
  %11700 = trunc i64 %11699 to i32
  %11701 = and i64 %11699, 4294967295
  store i64 %11701, i64* %RAX.i109, align 8
  %11702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11702, align 1
  %11703 = and i32 %11700, 255
  %11704 = call i32 @llvm.ctpop.i32(i32 %11703)
  %11705 = trunc i32 %11704 to i8
  %11706 = and i8 %11705, 1
  %11707 = xor i8 %11706, 1
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11707, i8* %11708, align 1
  %11709 = icmp eq i32 %11700, 0
  %11710 = zext i1 %11709 to i8
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11710, i8* %11711, align 1
  %11712 = lshr i32 %11700, 31
  %11713 = trunc i32 %11712 to i8
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11713, i8* %11714, align 1
  %11715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11715, align 1
  %11716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11716, align 1
  store %struct.Memory* %loadMem_40d464, %struct.Memory** %MEMORY
  %loadMem_40d467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11718 = getelementptr inbounds %struct.GPR, %struct.GPR* %11717, i32 0, i32 33
  %11719 = getelementptr inbounds %struct.Reg, %struct.Reg* %11718, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %11719 to i64*
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11721 = getelementptr inbounds %struct.GPR, %struct.GPR* %11720, i32 0, i32 1
  %11722 = getelementptr inbounds %struct.Reg, %struct.Reg* %11721, i32 0, i32 0
  %EAX.i107 = bitcast %union.anon* %11722 to i32*
  %11723 = load i32, i32* %EAX.i107
  %11724 = zext i32 %11723 to i64
  %11725 = load i64, i64* %PC.i106
  %11726 = add i64 %11725, 7
  store i64 %11726, i64* %PC.i106
  store i32 %11723, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  store %struct.Memory* %loadMem_40d467, %struct.Memory** %MEMORY
  %loadMem_40d46e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11728 = getelementptr inbounds %struct.GPR, %struct.GPR* %11727, i32 0, i32 33
  %11729 = getelementptr inbounds %struct.Reg, %struct.Reg* %11728, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %11729 to i64*
  %11730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11731 = getelementptr inbounds %struct.GPR, %struct.GPR* %11730, i32 0, i32 5
  %11732 = getelementptr inbounds %struct.Reg, %struct.Reg* %11731, i32 0, i32 0
  %RCX.i104 = bitcast %union.anon* %11732 to i64*
  %11733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11734 = getelementptr inbounds %struct.GPR, %struct.GPR* %11733, i32 0, i32 15
  %11735 = getelementptr inbounds %struct.Reg, %struct.Reg* %11734, i32 0, i32 0
  %RBP.i105 = bitcast %union.anon* %11735 to i64*
  %11736 = load i64, i64* %RBP.i105
  %11737 = sub i64 %11736, 20
  %11738 = load i64, i64* %PC.i103
  %11739 = add i64 %11738, 4
  store i64 %11739, i64* %PC.i103
  %11740 = inttoptr i64 %11737 to i32*
  %11741 = load i32, i32* %11740
  %11742 = sext i32 %11741 to i64
  store i64 %11742, i64* %RCX.i104, align 8
  store %struct.Memory* %loadMem_40d46e, %struct.Memory** %MEMORY
  %loadMem_40d472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11744 = getelementptr inbounds %struct.GPR, %struct.GPR* %11743, i32 0, i32 33
  %11745 = getelementptr inbounds %struct.Reg, %struct.Reg* %11744, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %11745 to i64*
  %11746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11747 = getelementptr inbounds %struct.GPR, %struct.GPR* %11746, i32 0, i32 1
  %11748 = getelementptr inbounds %struct.Reg, %struct.Reg* %11747, i32 0, i32 0
  %RAX.i101 = bitcast %union.anon* %11748 to i64*
  %11749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11750 = getelementptr inbounds %struct.GPR, %struct.GPR* %11749, i32 0, i32 5
  %11751 = getelementptr inbounds %struct.Reg, %struct.Reg* %11750, i32 0, i32 0
  %RCX.i102 = bitcast %union.anon* %11751 to i64*
  %11752 = load i64, i64* %RCX.i102
  %11753 = mul i64 %11752, 4
  %11754 = add i64 %11753, 9050112
  %11755 = load i64, i64* %PC.i100
  %11756 = add i64 %11755, 7
  store i64 %11756, i64* %PC.i100
  %11757 = inttoptr i64 %11754 to i32*
  %11758 = load i32, i32* %11757
  %11759 = zext i32 %11758 to i64
  store i64 %11759, i64* %RAX.i101, align 8
  store %struct.Memory* %loadMem_40d472, %struct.Memory** %MEMORY
  %loadMem_40d479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11761 = getelementptr inbounds %struct.GPR, %struct.GPR* %11760, i32 0, i32 33
  %11762 = getelementptr inbounds %struct.Reg, %struct.Reg* %11761, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %11762 to i64*
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11764 = getelementptr inbounds %struct.GPR, %struct.GPR* %11763, i32 0, i32 1
  %11765 = getelementptr inbounds %struct.Reg, %struct.Reg* %11764, i32 0, i32 0
  %RAX.i99 = bitcast %union.anon* %11765 to i64*
  %11766 = load i64, i64* %RAX.i99
  %11767 = load i64, i64* %PC.i98
  %11768 = add i64 %11767, 7
  store i64 %11768, i64* %PC.i98
  %11769 = trunc i64 %11766 to i32
  %11770 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %11771 = xor i32 %11770, %11769
  %11772 = zext i32 %11771 to i64
  store i64 %11772, i64* %RAX.i99, align 8
  %11773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11773, align 1
  %11774 = and i32 %11771, 255
  %11775 = call i32 @llvm.ctpop.i32(i32 %11774)
  %11776 = trunc i32 %11775 to i8
  %11777 = and i8 %11776, 1
  %11778 = xor i8 %11777, 1
  %11779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11778, i8* %11779, align 1
  %11780 = icmp eq i32 %11771, 0
  %11781 = zext i1 %11780 to i8
  %11782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11781, i8* %11782, align 1
  %11783 = lshr i32 %11771, 31
  %11784 = trunc i32 %11783 to i8
  %11785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11784, i8* %11785, align 1
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11786, align 1
  %11787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11787, align 1
  store %struct.Memory* %loadMem_40d479, %struct.Memory** %MEMORY
  %loadMem_40d480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11789 = getelementptr inbounds %struct.GPR, %struct.GPR* %11788, i32 0, i32 33
  %11790 = getelementptr inbounds %struct.Reg, %struct.Reg* %11789, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %11790 to i64*
  %11791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11792 = getelementptr inbounds %struct.GPR, %struct.GPR* %11791, i32 0, i32 1
  %11793 = getelementptr inbounds %struct.Reg, %struct.Reg* %11792, i32 0, i32 0
  %EAX.i97 = bitcast %union.anon* %11793 to i32*
  %11794 = load i32, i32* %EAX.i97
  %11795 = zext i32 %11794 to i64
  %11796 = load i64, i64* %PC.i96
  %11797 = add i64 %11796, 7
  store i64 %11797, i64* %PC.i96
  store i32 %11794, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d480, %struct.Memory** %MEMORY
  %loadMem_40d487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11799 = getelementptr inbounds %struct.GPR, %struct.GPR* %11798, i32 0, i32 33
  %11800 = getelementptr inbounds %struct.Reg, %struct.Reg* %11799, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %11800 to i64*
  %11801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11802 = getelementptr inbounds %struct.GPR, %struct.GPR* %11801, i32 0, i32 5
  %11803 = getelementptr inbounds %struct.Reg, %struct.Reg* %11802, i32 0, i32 0
  %RCX.i94 = bitcast %union.anon* %11803 to i64*
  %11804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11805 = getelementptr inbounds %struct.GPR, %struct.GPR* %11804, i32 0, i32 15
  %11806 = getelementptr inbounds %struct.Reg, %struct.Reg* %11805, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %11806 to i64*
  %11807 = load i64, i64* %RBP.i95
  %11808 = sub i64 %11807, 24
  %11809 = load i64, i64* %PC.i93
  %11810 = add i64 %11809, 4
  store i64 %11810, i64* %PC.i93
  %11811 = inttoptr i64 %11808 to i32*
  %11812 = load i32, i32* %11811
  %11813 = sext i32 %11812 to i64
  store i64 %11813, i64* %RCX.i94, align 8
  store %struct.Memory* %loadMem_40d487, %struct.Memory** %MEMORY
  %loadMem_40d48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11815 = getelementptr inbounds %struct.GPR, %struct.GPR* %11814, i32 0, i32 33
  %11816 = getelementptr inbounds %struct.Reg, %struct.Reg* %11815, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %11816 to i64*
  %11817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11818 = getelementptr inbounds %struct.GPR, %struct.GPR* %11817, i32 0, i32 1
  %11819 = getelementptr inbounds %struct.Reg, %struct.Reg* %11818, i32 0, i32 0
  %RAX.i91 = bitcast %union.anon* %11819 to i64*
  %11820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11821 = getelementptr inbounds %struct.GPR, %struct.GPR* %11820, i32 0, i32 5
  %11822 = getelementptr inbounds %struct.Reg, %struct.Reg* %11821, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %11822 to i64*
  %11823 = load i64, i64* %RCX.i92
  %11824 = mul i64 %11823, 4
  %11825 = add i64 %11824, 9050112
  %11826 = load i64, i64* %PC.i90
  %11827 = add i64 %11826, 7
  store i64 %11827, i64* %PC.i90
  %11828 = inttoptr i64 %11825 to i32*
  %11829 = load i32, i32* %11828
  %11830 = zext i32 %11829 to i64
  store i64 %11830, i64* %RAX.i91, align 8
  store %struct.Memory* %loadMem_40d48b, %struct.Memory** %MEMORY
  %loadMem_40d492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11832 = getelementptr inbounds %struct.GPR, %struct.GPR* %11831, i32 0, i32 33
  %11833 = getelementptr inbounds %struct.Reg, %struct.Reg* %11832, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %11833 to i64*
  %11834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11835 = getelementptr inbounds %struct.GPR, %struct.GPR* %11834, i32 0, i32 1
  %11836 = getelementptr inbounds %struct.Reg, %struct.Reg* %11835, i32 0, i32 0
  %RAX.i89 = bitcast %union.anon* %11836 to i64*
  %11837 = load i64, i64* %RAX.i89
  %11838 = load i64, i64* %PC.i88
  %11839 = add i64 %11838, 7
  store i64 %11839, i64* %PC.i88
  %11840 = trunc i64 %11837 to i32
  %11841 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %11842 = xor i32 %11841, %11840
  %11843 = zext i32 %11842 to i64
  store i64 %11843, i64* %RAX.i89, align 8
  %11844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11844, align 1
  %11845 = and i32 %11842, 255
  %11846 = call i32 @llvm.ctpop.i32(i32 %11845)
  %11847 = trunc i32 %11846 to i8
  %11848 = and i8 %11847, 1
  %11849 = xor i8 %11848, 1
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11849, i8* %11850, align 1
  %11851 = icmp eq i32 %11842, 0
  %11852 = zext i1 %11851 to i8
  %11853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11852, i8* %11853, align 1
  %11854 = lshr i32 %11842, 31
  %11855 = trunc i32 %11854 to i8
  %11856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11855, i8* %11856, align 1
  %11857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %11857, align 1
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11858, align 1
  store %struct.Memory* %loadMem_40d492, %struct.Memory** %MEMORY
  %loadMem_40d499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11860 = getelementptr inbounds %struct.GPR, %struct.GPR* %11859, i32 0, i32 33
  %11861 = getelementptr inbounds %struct.Reg, %struct.Reg* %11860, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %11861 to i64*
  %11862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11863 = getelementptr inbounds %struct.GPR, %struct.GPR* %11862, i32 0, i32 1
  %11864 = getelementptr inbounds %struct.Reg, %struct.Reg* %11863, i32 0, i32 0
  %EAX.i87 = bitcast %union.anon* %11864 to i32*
  %11865 = load i32, i32* %EAX.i87
  %11866 = zext i32 %11865 to i64
  %11867 = load i64, i64* %PC.i86
  %11868 = add i64 %11867, 7
  store i64 %11868, i64* %PC.i86
  store i32 %11865, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d499, %struct.Memory** %MEMORY
  %loadMem_40d4a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 33
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %11871 to i64*
  %11872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11873 = getelementptr inbounds %struct.GPR, %struct.GPR* %11872, i32 0, i32 15
  %11874 = getelementptr inbounds %struct.Reg, %struct.Reg* %11873, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %11874 to i64*
  %11875 = load i64, i64* %RBP.i85
  %11876 = sub i64 %11875, 36
  %11877 = load i64, i64* %PC.i84
  %11878 = add i64 %11877, 4
  store i64 %11878, i64* %PC.i84
  %11879 = inttoptr i64 %11876 to i32*
  %11880 = load i32, i32* %11879
  %11881 = sub i32 %11880, 3
  %11882 = icmp ult i32 %11880, 3
  %11883 = zext i1 %11882 to i8
  %11884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11883, i8* %11884, align 1
  %11885 = and i32 %11881, 255
  %11886 = call i32 @llvm.ctpop.i32(i32 %11885)
  %11887 = trunc i32 %11886 to i8
  %11888 = and i8 %11887, 1
  %11889 = xor i8 %11888, 1
  %11890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11889, i8* %11890, align 1
  %11891 = xor i32 %11880, 3
  %11892 = xor i32 %11891, %11881
  %11893 = lshr i32 %11892, 4
  %11894 = trunc i32 %11893 to i8
  %11895 = and i8 %11894, 1
  %11896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11895, i8* %11896, align 1
  %11897 = icmp eq i32 %11881, 0
  %11898 = zext i1 %11897 to i8
  %11899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11898, i8* %11899, align 1
  %11900 = lshr i32 %11881, 31
  %11901 = trunc i32 %11900 to i8
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11901, i8* %11902, align 1
  %11903 = lshr i32 %11880, 31
  %11904 = xor i32 %11900, %11903
  %11905 = add i32 %11904, %11903
  %11906 = icmp eq i32 %11905, 2
  %11907 = zext i1 %11906 to i8
  %11908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11907, i8* %11908, align 1
  store %struct.Memory* %loadMem_40d4a0, %struct.Memory** %MEMORY
  %loadMem_40d4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11910 = getelementptr inbounds %struct.GPR, %struct.GPR* %11909, i32 0, i32 33
  %11911 = getelementptr inbounds %struct.Reg, %struct.Reg* %11910, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %11911 to i64*
  %11912 = load i64, i64* %PC.i83
  %11913 = add i64 %11912, 164
  %11914 = load i64, i64* %PC.i83
  %11915 = add i64 %11914, 6
  %11916 = load i64, i64* %PC.i83
  %11917 = add i64 %11916, 6
  store i64 %11917, i64* %PC.i83
  %11918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11919 = load i8, i8* %11918, align 1
  %11920 = icmp eq i8 %11919, 0
  %11921 = zext i1 %11920 to i8
  store i8 %11921, i8* %BRANCH_TAKEN, align 1
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11923 = select i1 %11920, i64 %11913, i64 %11915
  store i64 %11923, i64* %11922, align 8
  store %struct.Memory* %loadMem_40d4a4, %struct.Memory** %MEMORY
  %loadBr_40d4a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d4a4 = icmp eq i8 %loadBr_40d4a4, 1
  br i1 %cmpBr_40d4a4, label %block_.L_40d548, label %block_40d4aa

block_40d4aa:                                     ; preds = %block_.L_40d40c
  %loadMem_40d4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %11924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11925 = getelementptr inbounds %struct.GPR, %struct.GPR* %11924, i32 0, i32 33
  %11926 = getelementptr inbounds %struct.Reg, %struct.Reg* %11925, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %11926 to i64*
  %11927 = load i64, i64* %PC.i82
  %11928 = add i64 %11927, 11
  store i64 %11928, i64* %PC.i82
  store i32 8, i32* bitcast (%G_0x866714_type* @G_0x866714 to i32*)
  store %struct.Memory* %loadMem_40d4aa, %struct.Memory** %MEMORY
  %loadMem_40d4b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11930 = getelementptr inbounds %struct.GPR, %struct.GPR* %11929, i32 0, i32 33
  %11931 = getelementptr inbounds %struct.Reg, %struct.Reg* %11930, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %11931 to i64*
  %11932 = load i64, i64* %PC.i81
  %11933 = add i64 %11932, 11
  store i64 %11933, i64* %PC.i81
  store i32 13, i32* bitcast (%G_0x86670c_type* @G_0x86670c to i32*)
  store %struct.Memory* %loadMem_40d4b5, %struct.Memory** %MEMORY
  %loadMem_40d4c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11935 = getelementptr inbounds %struct.GPR, %struct.GPR* %11934, i32 0, i32 33
  %11936 = getelementptr inbounds %struct.Reg, %struct.Reg* %11935, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %11936 to i64*
  %11937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11938 = getelementptr inbounds %struct.GPR, %struct.GPR* %11937, i32 0, i32 1
  %11939 = getelementptr inbounds %struct.Reg, %struct.Reg* %11938, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %11939 to i64*
  %11940 = load i64, i64* %PC.i79
  %11941 = add i64 %11940, 7
  store i64 %11941, i64* %PC.i79
  %11942 = load i32, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  %11943 = zext i32 %11942 to i64
  store i64 %11943, i64* %RAX.i80, align 8
  store %struct.Memory* %loadMem_40d4c0, %struct.Memory** %MEMORY
  %loadMem_40d4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11945 = getelementptr inbounds %struct.GPR, %struct.GPR* %11944, i32 0, i32 33
  %11946 = getelementptr inbounds %struct.Reg, %struct.Reg* %11945, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %11946 to i64*
  %11947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11948 = getelementptr inbounds %struct.GPR, %struct.GPR* %11947, i32 0, i32 1
  %11949 = getelementptr inbounds %struct.Reg, %struct.Reg* %11948, i32 0, i32 0
  %RAX.i78 = bitcast %union.anon* %11949 to i64*
  %11950 = load i64, i64* %RAX.i78
  %11951 = load i64, i64* %PC.i77
  %11952 = add i64 %11951, 3
  store i64 %11952, i64* %PC.i77
  %11953 = trunc i64 %11950 to i32
  %11954 = add i32 -1, %11953
  %11955 = zext i32 %11954 to i64
  store i64 %11955, i64* %RAX.i78, align 8
  %11956 = icmp ult i32 %11954, %11953
  %11957 = icmp ult i32 %11954, -1
  %11958 = or i1 %11956, %11957
  %11959 = zext i1 %11958 to i8
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11959, i8* %11960, align 1
  %11961 = and i32 %11954, 255
  %11962 = call i32 @llvm.ctpop.i32(i32 %11961)
  %11963 = trunc i32 %11962 to i8
  %11964 = and i8 %11963, 1
  %11965 = xor i8 %11964, 1
  %11966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11965, i8* %11966, align 1
  %11967 = xor i64 -1, %11950
  %11968 = trunc i64 %11967 to i32
  %11969 = xor i32 %11968, %11954
  %11970 = lshr i32 %11969, 4
  %11971 = trunc i32 %11970 to i8
  %11972 = and i8 %11971, 1
  %11973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11972, i8* %11973, align 1
  %11974 = icmp eq i32 %11954, 0
  %11975 = zext i1 %11974 to i8
  %11976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11975, i8* %11976, align 1
  %11977 = lshr i32 %11954, 31
  %11978 = trunc i32 %11977 to i8
  %11979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11978, i8* %11979, align 1
  %11980 = lshr i32 %11953, 31
  %11981 = xor i32 %11977, %11980
  %11982 = xor i32 %11977, 1
  %11983 = add i32 %11981, %11982
  %11984 = icmp eq i32 %11983, 2
  %11985 = zext i1 %11984 to i8
  %11986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11985, i8* %11986, align 1
  store %struct.Memory* %loadMem_40d4c7, %struct.Memory** %MEMORY
  %loadMem_40d4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11988 = getelementptr inbounds %struct.GPR, %struct.GPR* %11987, i32 0, i32 33
  %11989 = getelementptr inbounds %struct.Reg, %struct.Reg* %11988, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %11989 to i64*
  %11990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11991 = getelementptr inbounds %struct.GPR, %struct.GPR* %11990, i32 0, i32 1
  %11992 = getelementptr inbounds %struct.Reg, %struct.Reg* %11991, i32 0, i32 0
  %EAX.i76 = bitcast %union.anon* %11992 to i32*
  %11993 = load i32, i32* %EAX.i76
  %11994 = zext i32 %11993 to i64
  %11995 = load i64, i64* %PC.i75
  %11996 = add i64 %11995, 7
  store i64 %11996, i64* %PC.i75
  store i32 %11993, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  store %struct.Memory* %loadMem_40d4ca, %struct.Memory** %MEMORY
  %loadMem_40d4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11998 = getelementptr inbounds %struct.GPR, %struct.GPR* %11997, i32 0, i32 33
  %11999 = getelementptr inbounds %struct.Reg, %struct.Reg* %11998, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %11999 to i64*
  %12000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12001 = getelementptr inbounds %struct.GPR, %struct.GPR* %12000, i32 0, i32 1
  %12002 = getelementptr inbounds %struct.Reg, %struct.Reg* %12001, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %12002 to i64*
  %12003 = load i64, i64* %PC.i73
  %12004 = add i64 %12003, 7
  store i64 %12004, i64* %PC.i73
  %12005 = load i32, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  %12006 = zext i32 %12005 to i64
  store i64 %12006, i64* %RAX.i74, align 8
  store %struct.Memory* %loadMem_40d4d1, %struct.Memory** %MEMORY
  %loadMem_40d4d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12008 = getelementptr inbounds %struct.GPR, %struct.GPR* %12007, i32 0, i32 33
  %12009 = getelementptr inbounds %struct.Reg, %struct.Reg* %12008, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %12009 to i64*
  %12010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12011 = getelementptr inbounds %struct.GPR, %struct.GPR* %12010, i32 0, i32 1
  %12012 = getelementptr inbounds %struct.Reg, %struct.Reg* %12011, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %12012 to i64*
  %12013 = load i64, i64* %RAX.i72
  %12014 = load i64, i64* %PC.i71
  %12015 = add i64 %12014, 3
  store i64 %12015, i64* %PC.i71
  %12016 = trunc i64 %12013 to i32
  %12017 = add i32 -1, %12016
  %12018 = zext i32 %12017 to i64
  store i64 %12018, i64* %RAX.i72, align 8
  %12019 = icmp ult i32 %12017, %12016
  %12020 = icmp ult i32 %12017, -1
  %12021 = or i1 %12019, %12020
  %12022 = zext i1 %12021 to i8
  %12023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12022, i8* %12023, align 1
  %12024 = and i32 %12017, 255
  %12025 = call i32 @llvm.ctpop.i32(i32 %12024)
  %12026 = trunc i32 %12025 to i8
  %12027 = and i8 %12026, 1
  %12028 = xor i8 %12027, 1
  %12029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12028, i8* %12029, align 1
  %12030 = xor i64 -1, %12013
  %12031 = trunc i64 %12030 to i32
  %12032 = xor i32 %12031, %12017
  %12033 = lshr i32 %12032, 4
  %12034 = trunc i32 %12033 to i8
  %12035 = and i8 %12034, 1
  %12036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12035, i8* %12036, align 1
  %12037 = icmp eq i32 %12017, 0
  %12038 = zext i1 %12037 to i8
  %12039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12038, i8* %12039, align 1
  %12040 = lshr i32 %12017, 31
  %12041 = trunc i32 %12040 to i8
  %12042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12041, i8* %12042, align 1
  %12043 = lshr i32 %12016, 31
  %12044 = xor i32 %12040, %12043
  %12045 = xor i32 %12040, 1
  %12046 = add i32 %12044, %12045
  %12047 = icmp eq i32 %12046, 2
  %12048 = zext i1 %12047 to i8
  %12049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12048, i8* %12049, align 1
  store %struct.Memory* %loadMem_40d4d8, %struct.Memory** %MEMORY
  %loadMem_40d4db = load %struct.Memory*, %struct.Memory** %MEMORY
  %12050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12051 = getelementptr inbounds %struct.GPR, %struct.GPR* %12050, i32 0, i32 33
  %12052 = getelementptr inbounds %struct.Reg, %struct.Reg* %12051, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %12052 to i64*
  %12053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12054 = getelementptr inbounds %struct.GPR, %struct.GPR* %12053, i32 0, i32 1
  %12055 = getelementptr inbounds %struct.Reg, %struct.Reg* %12054, i32 0, i32 0
  %EAX.i70 = bitcast %union.anon* %12055 to i32*
  %12056 = load i32, i32* %EAX.i70
  %12057 = zext i32 %12056 to i64
  %12058 = load i64, i64* %PC.i69
  %12059 = add i64 %12058, 7
  store i64 %12059, i64* %PC.i69
  store i32 %12056, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  store %struct.Memory* %loadMem_40d4db, %struct.Memory** %MEMORY
  %loadMem_40d4e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12061 = getelementptr inbounds %struct.GPR, %struct.GPR* %12060, i32 0, i32 33
  %12062 = getelementptr inbounds %struct.Reg, %struct.Reg* %12061, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %12062 to i64*
  %12063 = load i64, i64* %PC.i68
  %12064 = add i64 %12063, 11
  store i64 %12064, i64* %PC.i68
  store i32 0, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  store %struct.Memory* %loadMem_40d4e2, %struct.Memory** %MEMORY
  %loadMem_40d4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %12065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12066 = getelementptr inbounds %struct.GPR, %struct.GPR* %12065, i32 0, i32 33
  %12067 = getelementptr inbounds %struct.Reg, %struct.Reg* %12066, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %12067 to i64*
  %12068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12069 = getelementptr inbounds %struct.GPR, %struct.GPR* %12068, i32 0, i32 1
  %12070 = getelementptr inbounds %struct.Reg, %struct.Reg* %12069, i32 0, i32 0
  %RAX.i67 = bitcast %union.anon* %12070 to i64*
  %12071 = load i64, i64* %PC.i66
  %12072 = add i64 %12071, 7
  store i64 %12072, i64* %PC.i66
  %12073 = load i32, i32* bitcast (%G_0x8664bc_type* @G_0x8664bc to i32*)
  %12074 = zext i32 %12073 to i64
  store i64 %12074, i64* %RAX.i67, align 8
  store %struct.Memory* %loadMem_40d4ed, %struct.Memory** %MEMORY
  %loadMem_40d4f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12076 = getelementptr inbounds %struct.GPR, %struct.GPR* %12075, i32 0, i32 33
  %12077 = getelementptr inbounds %struct.Reg, %struct.Reg* %12076, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %12077 to i64*
  %12078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12079 = getelementptr inbounds %struct.GPR, %struct.GPR* %12078, i32 0, i32 1
  %12080 = getelementptr inbounds %struct.Reg, %struct.Reg* %12079, i32 0, i32 0
  %EAX.i65 = bitcast %union.anon* %12080 to i32*
  %12081 = load i32, i32* %EAX.i65
  %12082 = zext i32 %12081 to i64
  %12083 = load i64, i64* %PC.i64
  %12084 = add i64 %12083, 7
  store i64 %12084, i64* %PC.i64
  store i32 %12081, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  store %struct.Memory* %loadMem_40d4f4, %struct.Memory** %MEMORY
  %loadMem_40d4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12086 = getelementptr inbounds %struct.GPR, %struct.GPR* %12085, i32 0, i32 33
  %12087 = getelementptr inbounds %struct.Reg, %struct.Reg* %12086, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %12087 to i64*
  %12088 = load i64, i64* %PC.i63
  %12089 = add i64 %12088, 11
  store i64 %12089, i64* %PC.i63
  store i32 0, i32* bitcast (%G_0x8664bc_type* @G_0x8664bc to i32*)
  store %struct.Memory* %loadMem_40d4fb, %struct.Memory** %MEMORY
  %loadMem_40d506 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12091 = getelementptr inbounds %struct.GPR, %struct.GPR* %12090, i32 0, i32 33
  %12092 = getelementptr inbounds %struct.Reg, %struct.Reg* %12091, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %12092 to i64*
  %12093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12094 = getelementptr inbounds %struct.GPR, %struct.GPR* %12093, i32 0, i32 5
  %12095 = getelementptr inbounds %struct.Reg, %struct.Reg* %12094, i32 0, i32 0
  %RCX.i62 = bitcast %union.anon* %12095 to i64*
  %12096 = load i64, i64* %PC.i61
  %12097 = add i64 %12096, 8
  store i64 %12097, i64* %PC.i61
  %12098 = load i32, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  %12099 = sext i32 %12098 to i64
  store i64 %12099, i64* %RCX.i62, align 8
  store %struct.Memory* %loadMem_40d506, %struct.Memory** %MEMORY
  %loadMem_40d50e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12101 = getelementptr inbounds %struct.GPR, %struct.GPR* %12100, i32 0, i32 33
  %12102 = getelementptr inbounds %struct.Reg, %struct.Reg* %12101, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %12102 to i64*
  %12103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12104 = getelementptr inbounds %struct.GPR, %struct.GPR* %12103, i32 0, i32 5
  %12105 = getelementptr inbounds %struct.Reg, %struct.Reg* %12104, i32 0, i32 0
  %RCX.i60 = bitcast %union.anon* %12105 to i64*
  %12106 = load i64, i64* %RCX.i60
  %12107 = mul i64 %12106, 4
  %12108 = add i64 %12107, 8778480
  %12109 = load i64, i64* %PC.i59
  %12110 = add i64 %12109, 11
  store i64 %12110, i64* %PC.i59
  %12111 = inttoptr i64 %12108 to i32*
  store i32 117, i32* %12111
  store %struct.Memory* %loadMem_40d50e, %struct.Memory** %MEMORY
  %loadMem_40d519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12113 = getelementptr inbounds %struct.GPR, %struct.GPR* %12112, i32 0, i32 33
  %12114 = getelementptr inbounds %struct.Reg, %struct.Reg* %12113, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %12114 to i64*
  %12115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12116 = getelementptr inbounds %struct.GPR, %struct.GPR* %12115, i32 0, i32 1
  %12117 = getelementptr inbounds %struct.Reg, %struct.Reg* %12116, i32 0, i32 0
  %RAX.i58 = bitcast %union.anon* %12117 to i64*
  %12118 = load i64, i64* %PC.i57
  %12119 = add i64 %12118, 7
  store i64 %12119, i64* %PC.i57
  %12120 = load i32, i32* bitcast (%G_0x8a1e54_type* @G_0x8a1e54 to i32*)
  %12121 = zext i32 %12120 to i64
  store i64 %12121, i64* %RAX.i58, align 8
  store %struct.Memory* %loadMem_40d519, %struct.Memory** %MEMORY
  %loadMem_40d520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12123 = getelementptr inbounds %struct.GPR, %struct.GPR* %12122, i32 0, i32 33
  %12124 = getelementptr inbounds %struct.Reg, %struct.Reg* %12123, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %12124 to i64*
  %12125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12126 = getelementptr inbounds %struct.GPR, %struct.GPR* %12125, i32 0, i32 1
  %12127 = getelementptr inbounds %struct.Reg, %struct.Reg* %12126, i32 0, i32 0
  %RAX.i56 = bitcast %union.anon* %12127 to i64*
  %12128 = load i64, i64* %RAX.i56
  %12129 = load i64, i64* %PC.i55
  %12130 = add i64 %12129, 7
  store i64 %12130, i64* %PC.i55
  %12131 = trunc i64 %12128 to i32
  %12132 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12133 = xor i32 %12132, %12131
  %12134 = zext i32 %12133 to i64
  store i64 %12134, i64* %RAX.i56, align 8
  %12135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12135, align 1
  %12136 = and i32 %12133, 255
  %12137 = call i32 @llvm.ctpop.i32(i32 %12136)
  %12138 = trunc i32 %12137 to i8
  %12139 = and i8 %12138, 1
  %12140 = xor i8 %12139, 1
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12140, i8* %12141, align 1
  %12142 = icmp eq i32 %12133, 0
  %12143 = zext i1 %12142 to i8
  %12144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12143, i8* %12144, align 1
  %12145 = lshr i32 %12133, 31
  %12146 = trunc i32 %12145 to i8
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12146, i8* %12147, align 1
  %12148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12148, align 1
  %12149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12149, align 1
  store %struct.Memory* %loadMem_40d520, %struct.Memory** %MEMORY
  %loadMem_40d527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12151 = getelementptr inbounds %struct.GPR, %struct.GPR* %12150, i32 0, i32 33
  %12152 = getelementptr inbounds %struct.Reg, %struct.Reg* %12151, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %12152 to i64*
  %12153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12154 = getelementptr inbounds %struct.GPR, %struct.GPR* %12153, i32 0, i32 1
  %12155 = getelementptr inbounds %struct.Reg, %struct.Reg* %12154, i32 0, i32 0
  %EAX.i54 = bitcast %union.anon* %12155 to i32*
  %12156 = load i32, i32* %EAX.i54
  %12157 = zext i32 %12156 to i64
  %12158 = load i64, i64* %PC.i53
  %12159 = add i64 %12158, 7
  store i64 %12159, i64* %PC.i53
  store i32 %12156, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d527, %struct.Memory** %MEMORY
  %loadMem_40d52e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12161 = getelementptr inbounds %struct.GPR, %struct.GPR* %12160, i32 0, i32 33
  %12162 = getelementptr inbounds %struct.Reg, %struct.Reg* %12161, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %12162 to i64*
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12164 = getelementptr inbounds %struct.GPR, %struct.GPR* %12163, i32 0, i32 1
  %12165 = getelementptr inbounds %struct.Reg, %struct.Reg* %12164, i32 0, i32 0
  %RAX.i52 = bitcast %union.anon* %12165 to i64*
  %12166 = load i64, i64* %PC.i51
  %12167 = add i64 %12166, 7
  store i64 %12167, i64* %PC.i51
  %12168 = load i32, i32* bitcast (%G_0x8a1e4c_type* @G_0x8a1e4c to i32*)
  %12169 = zext i32 %12168 to i64
  store i64 %12169, i64* %RAX.i52, align 8
  store %struct.Memory* %loadMem_40d52e, %struct.Memory** %MEMORY
  %loadMem_40d535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12171 = getelementptr inbounds %struct.GPR, %struct.GPR* %12170, i32 0, i32 33
  %12172 = getelementptr inbounds %struct.Reg, %struct.Reg* %12171, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %12172 to i64*
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12174 = getelementptr inbounds %struct.GPR, %struct.GPR* %12173, i32 0, i32 1
  %12175 = getelementptr inbounds %struct.Reg, %struct.Reg* %12174, i32 0, i32 0
  %RAX.i50 = bitcast %union.anon* %12175 to i64*
  %12176 = load i64, i64* %RAX.i50
  %12177 = load i64, i64* %PC.i49
  %12178 = add i64 %12177, 7
  store i64 %12178, i64* %PC.i49
  %12179 = trunc i64 %12176 to i32
  %12180 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12181 = xor i32 %12180, %12179
  %12182 = zext i32 %12181 to i64
  store i64 %12182, i64* %RAX.i50, align 8
  %12183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12183, align 1
  %12184 = and i32 %12181, 255
  %12185 = call i32 @llvm.ctpop.i32(i32 %12184)
  %12186 = trunc i32 %12185 to i8
  %12187 = and i8 %12186, 1
  %12188 = xor i8 %12187, 1
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12188, i8* %12189, align 1
  %12190 = icmp eq i32 %12181, 0
  %12191 = zext i1 %12190 to i8
  %12192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12191, i8* %12192, align 1
  %12193 = lshr i32 %12181, 31
  %12194 = trunc i32 %12193 to i8
  %12195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12194, i8* %12195, align 1
  %12196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12196, align 1
  %12197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12197, align 1
  store %struct.Memory* %loadMem_40d535, %struct.Memory** %MEMORY
  %loadMem_40d53c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12199 = getelementptr inbounds %struct.GPR, %struct.GPR* %12198, i32 0, i32 33
  %12200 = getelementptr inbounds %struct.Reg, %struct.Reg* %12199, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %12200 to i64*
  %12201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12202 = getelementptr inbounds %struct.GPR, %struct.GPR* %12201, i32 0, i32 1
  %12203 = getelementptr inbounds %struct.Reg, %struct.Reg* %12202, i32 0, i32 0
  %EAX.i48 = bitcast %union.anon* %12203 to i32*
  %12204 = load i32, i32* %EAX.i48
  %12205 = zext i32 %12204 to i64
  %12206 = load i64, i64* %PC.i47
  %12207 = add i64 %12206, 7
  store i64 %12207, i64* %PC.i47
  store i32 %12204, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d53c, %struct.Memory** %MEMORY
  %loadMem_40d543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 33
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %12210 to i64*
  %12211 = load i64, i64* %PC.i46
  %12212 = add i64 %12211, 193
  %12213 = load i64, i64* %PC.i46
  %12214 = add i64 %12213, 5
  store i64 %12214, i64* %PC.i46
  %12215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12212, i64* %12215, align 8
  store %struct.Memory* %loadMem_40d543, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d548:                                  ; preds = %block_.L_40d40c
  %loadMem_40d548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12217 = getelementptr inbounds %struct.GPR, %struct.GPR* %12216, i32 0, i32 33
  %12218 = getelementptr inbounds %struct.Reg, %struct.Reg* %12217, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %12218 to i64*
  %12219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12220 = getelementptr inbounds %struct.GPR, %struct.GPR* %12219, i32 0, i32 15
  %12221 = getelementptr inbounds %struct.Reg, %struct.Reg* %12220, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %12221 to i64*
  %12222 = load i64, i64* %RBP.i45
  %12223 = sub i64 %12222, 36
  %12224 = load i64, i64* %PC.i44
  %12225 = add i64 %12224, 4
  store i64 %12225, i64* %PC.i44
  %12226 = inttoptr i64 %12223 to i32*
  %12227 = load i32, i32* %12226
  %12228 = sub i32 %12227, 4
  %12229 = icmp ult i32 %12227, 4
  %12230 = zext i1 %12229 to i8
  %12231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12230, i8* %12231, align 1
  %12232 = and i32 %12228, 255
  %12233 = call i32 @llvm.ctpop.i32(i32 %12232)
  %12234 = trunc i32 %12233 to i8
  %12235 = and i8 %12234, 1
  %12236 = xor i8 %12235, 1
  %12237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12236, i8* %12237, align 1
  %12238 = xor i32 %12227, 4
  %12239 = xor i32 %12238, %12228
  %12240 = lshr i32 %12239, 4
  %12241 = trunc i32 %12240 to i8
  %12242 = and i8 %12241, 1
  %12243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12242, i8* %12243, align 1
  %12244 = icmp eq i32 %12228, 0
  %12245 = zext i1 %12244 to i8
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12245, i8* %12246, align 1
  %12247 = lshr i32 %12228, 31
  %12248 = trunc i32 %12247 to i8
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12248, i8* %12249, align 1
  %12250 = lshr i32 %12227, 31
  %12251 = xor i32 %12247, %12250
  %12252 = add i32 %12251, %12250
  %12253 = icmp eq i32 %12252, 2
  %12254 = zext i1 %12253 to i8
  %12255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12254, i8* %12255, align 1
  store %struct.Memory* %loadMem_40d548, %struct.Memory** %MEMORY
  %loadMem_40d54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12257 = getelementptr inbounds %struct.GPR, %struct.GPR* %12256, i32 0, i32 33
  %12258 = getelementptr inbounds %struct.Reg, %struct.Reg* %12257, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %12258 to i64*
  %12259 = load i64, i64* %PC.i43
  %12260 = add i64 %12259, 164
  %12261 = load i64, i64* %PC.i43
  %12262 = add i64 %12261, 6
  %12263 = load i64, i64* %PC.i43
  %12264 = add i64 %12263, 6
  store i64 %12264, i64* %PC.i43
  %12265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12266 = load i8, i8* %12265, align 1
  %12267 = icmp eq i8 %12266, 0
  %12268 = zext i1 %12267 to i8
  store i8 %12268, i8* %BRANCH_TAKEN, align 1
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12270 = select i1 %12267, i64 %12260, i64 %12262
  store i64 %12270, i64* %12269, align 8
  store %struct.Memory* %loadMem_40d54c, %struct.Memory** %MEMORY
  %loadBr_40d54c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40d54c = icmp eq i8 %loadBr_40d54c, 1
  br i1 %cmpBr_40d54c, label %block_.L_40d5f0, label %block_40d552

block_40d552:                                     ; preds = %block_.L_40d548
  %loadMem_40d552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12272 = getelementptr inbounds %struct.GPR, %struct.GPR* %12271, i32 0, i32 33
  %12273 = getelementptr inbounds %struct.Reg, %struct.Reg* %12272, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %12273 to i64*
  %12274 = load i64, i64* %PC.i42
  %12275 = add i64 %12274, 11
  store i64 %12275, i64* %PC.i42
  store i32 8, i32* bitcast (%G_0x8666f8_type* @G_0x8666f8 to i32*)
  store %struct.Memory* %loadMem_40d552, %struct.Memory** %MEMORY
  %loadMem_40d55d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12277 = getelementptr inbounds %struct.GPR, %struct.GPR* %12276, i32 0, i32 33
  %12278 = getelementptr inbounds %struct.Reg, %struct.Reg* %12277, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %12278 to i64*
  %12279 = load i64, i64* %PC.i41
  %12280 = add i64 %12279, 11
  store i64 %12280, i64* %PC.i41
  store i32 13, i32* bitcast (%G_0x866704_type* @G_0x866704 to i32*)
  store %struct.Memory* %loadMem_40d55d, %struct.Memory** %MEMORY
  %loadMem_40d568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12282 = getelementptr inbounds %struct.GPR, %struct.GPR* %12281, i32 0, i32 33
  %12283 = getelementptr inbounds %struct.Reg, %struct.Reg* %12282, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %12283 to i64*
  %12284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12285 = getelementptr inbounds %struct.GPR, %struct.GPR* %12284, i32 0, i32 1
  %12286 = getelementptr inbounds %struct.Reg, %struct.Reg* %12285, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %12286 to i64*
  %12287 = load i64, i64* %PC.i39
  %12288 = add i64 %12287, 7
  store i64 %12288, i64* %PC.i39
  %12289 = load i32, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  %12290 = zext i32 %12289 to i64
  store i64 %12290, i64* %RAX.i40, align 8
  store %struct.Memory* %loadMem_40d568, %struct.Memory** %MEMORY
  %loadMem_40d56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12292 = getelementptr inbounds %struct.GPR, %struct.GPR* %12291, i32 0, i32 33
  %12293 = getelementptr inbounds %struct.Reg, %struct.Reg* %12292, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %12293 to i64*
  %12294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12295 = getelementptr inbounds %struct.GPR, %struct.GPR* %12294, i32 0, i32 1
  %12296 = getelementptr inbounds %struct.Reg, %struct.Reg* %12295, i32 0, i32 0
  %RAX.i38 = bitcast %union.anon* %12296 to i64*
  %12297 = load i64, i64* %RAX.i38
  %12298 = load i64, i64* %PC.i37
  %12299 = add i64 %12298, 3
  store i64 %12299, i64* %PC.i37
  %12300 = trunc i64 %12297 to i32
  %12301 = add i32 -1, %12300
  %12302 = zext i32 %12301 to i64
  store i64 %12302, i64* %RAX.i38, align 8
  %12303 = icmp ult i32 %12301, %12300
  %12304 = icmp ult i32 %12301, -1
  %12305 = or i1 %12303, %12304
  %12306 = zext i1 %12305 to i8
  %12307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12306, i8* %12307, align 1
  %12308 = and i32 %12301, 255
  %12309 = call i32 @llvm.ctpop.i32(i32 %12308)
  %12310 = trunc i32 %12309 to i8
  %12311 = and i8 %12310, 1
  %12312 = xor i8 %12311, 1
  %12313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12312, i8* %12313, align 1
  %12314 = xor i64 -1, %12297
  %12315 = trunc i64 %12314 to i32
  %12316 = xor i32 %12315, %12301
  %12317 = lshr i32 %12316, 4
  %12318 = trunc i32 %12317 to i8
  %12319 = and i8 %12318, 1
  %12320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12319, i8* %12320, align 1
  %12321 = icmp eq i32 %12301, 0
  %12322 = zext i1 %12321 to i8
  %12323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12322, i8* %12323, align 1
  %12324 = lshr i32 %12301, 31
  %12325 = trunc i32 %12324 to i8
  %12326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12325, i8* %12326, align 1
  %12327 = lshr i32 %12300, 31
  %12328 = xor i32 %12324, %12327
  %12329 = xor i32 %12324, 1
  %12330 = add i32 %12328, %12329
  %12331 = icmp eq i32 %12330, 2
  %12332 = zext i1 %12331 to i8
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12332, i8* %12333, align 1
  store %struct.Memory* %loadMem_40d56f, %struct.Memory** %MEMORY
  %loadMem_40d572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12335 = getelementptr inbounds %struct.GPR, %struct.GPR* %12334, i32 0, i32 33
  %12336 = getelementptr inbounds %struct.Reg, %struct.Reg* %12335, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %12336 to i64*
  %12337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12338 = getelementptr inbounds %struct.GPR, %struct.GPR* %12337, i32 0, i32 1
  %12339 = getelementptr inbounds %struct.Reg, %struct.Reg* %12338, i32 0, i32 0
  %EAX.i36 = bitcast %union.anon* %12339 to i32*
  %12340 = load i32, i32* %EAX.i36
  %12341 = zext i32 %12340 to i64
  %12342 = load i64, i64* %PC.i35
  %12343 = add i64 %12342, 7
  store i64 %12343, i64* %PC.i35
  store i32 %12340, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  store %struct.Memory* %loadMem_40d572, %struct.Memory** %MEMORY
  %loadMem_40d579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12345 = getelementptr inbounds %struct.GPR, %struct.GPR* %12344, i32 0, i32 33
  %12346 = getelementptr inbounds %struct.Reg, %struct.Reg* %12345, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %12346 to i64*
  %12347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12348 = getelementptr inbounds %struct.GPR, %struct.GPR* %12347, i32 0, i32 1
  %12349 = getelementptr inbounds %struct.Reg, %struct.Reg* %12348, i32 0, i32 0
  %RAX.i34 = bitcast %union.anon* %12349 to i64*
  %12350 = load i64, i64* %PC.i33
  %12351 = add i64 %12350, 7
  store i64 %12351, i64* %PC.i33
  %12352 = load i32, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  %12353 = zext i32 %12352 to i64
  store i64 %12353, i64* %RAX.i34, align 8
  store %struct.Memory* %loadMem_40d579, %struct.Memory** %MEMORY
  %loadMem_40d580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12355 = getelementptr inbounds %struct.GPR, %struct.GPR* %12354, i32 0, i32 33
  %12356 = getelementptr inbounds %struct.Reg, %struct.Reg* %12355, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %12356 to i64*
  %12357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12358 = getelementptr inbounds %struct.GPR, %struct.GPR* %12357, i32 0, i32 1
  %12359 = getelementptr inbounds %struct.Reg, %struct.Reg* %12358, i32 0, i32 0
  %RAX.i32 = bitcast %union.anon* %12359 to i64*
  %12360 = load i64, i64* %RAX.i32
  %12361 = load i64, i64* %PC.i31
  %12362 = add i64 %12361, 3
  store i64 %12362, i64* %PC.i31
  %12363 = trunc i64 %12360 to i32
  %12364 = add i32 -1, %12363
  %12365 = zext i32 %12364 to i64
  store i64 %12365, i64* %RAX.i32, align 8
  %12366 = icmp ult i32 %12364, %12363
  %12367 = icmp ult i32 %12364, -1
  %12368 = or i1 %12366, %12367
  %12369 = zext i1 %12368 to i8
  %12370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12369, i8* %12370, align 1
  %12371 = and i32 %12364, 255
  %12372 = call i32 @llvm.ctpop.i32(i32 %12371)
  %12373 = trunc i32 %12372 to i8
  %12374 = and i8 %12373, 1
  %12375 = xor i8 %12374, 1
  %12376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12375, i8* %12376, align 1
  %12377 = xor i64 -1, %12360
  %12378 = trunc i64 %12377 to i32
  %12379 = xor i32 %12378, %12364
  %12380 = lshr i32 %12379, 4
  %12381 = trunc i32 %12380 to i8
  %12382 = and i8 %12381, 1
  %12383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12382, i8* %12383, align 1
  %12384 = icmp eq i32 %12364, 0
  %12385 = zext i1 %12384 to i8
  %12386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12385, i8* %12386, align 1
  %12387 = lshr i32 %12364, 31
  %12388 = trunc i32 %12387 to i8
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12388, i8* %12389, align 1
  %12390 = lshr i32 %12363, 31
  %12391 = xor i32 %12387, %12390
  %12392 = xor i32 %12387, 1
  %12393 = add i32 %12391, %12392
  %12394 = icmp eq i32 %12393, 2
  %12395 = zext i1 %12394 to i8
  %12396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12395, i8* %12396, align 1
  store %struct.Memory* %loadMem_40d580, %struct.Memory** %MEMORY
  %loadMem_40d583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12398 = getelementptr inbounds %struct.GPR, %struct.GPR* %12397, i32 0, i32 33
  %12399 = getelementptr inbounds %struct.Reg, %struct.Reg* %12398, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %12399 to i64*
  %12400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12401 = getelementptr inbounds %struct.GPR, %struct.GPR* %12400, i32 0, i32 1
  %12402 = getelementptr inbounds %struct.Reg, %struct.Reg* %12401, i32 0, i32 0
  %EAX.i30 = bitcast %union.anon* %12402 to i32*
  %12403 = load i32, i32* %EAX.i30
  %12404 = zext i32 %12403 to i64
  %12405 = load i64, i64* %PC.i29
  %12406 = add i64 %12405, 7
  store i64 %12406, i64* %PC.i29
  store i32 %12403, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  store %struct.Memory* %loadMem_40d583, %struct.Memory** %MEMORY
  %loadMem_40d58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12408 = getelementptr inbounds %struct.GPR, %struct.GPR* %12407, i32 0, i32 33
  %12409 = getelementptr inbounds %struct.Reg, %struct.Reg* %12408, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %12409 to i64*
  %12410 = load i64, i64* %PC.i28
  %12411 = add i64 %12410, 11
  store i64 %12411, i64* %PC.i28
  store i32 0, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  store %struct.Memory* %loadMem_40d58a, %struct.Memory** %MEMORY
  %loadMem_40d595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12413 = getelementptr inbounds %struct.GPR, %struct.GPR* %12412, i32 0, i32 33
  %12414 = getelementptr inbounds %struct.Reg, %struct.Reg* %12413, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %12414 to i64*
  %12415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12416 = getelementptr inbounds %struct.GPR, %struct.GPR* %12415, i32 0, i32 1
  %12417 = getelementptr inbounds %struct.Reg, %struct.Reg* %12416, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %12417 to i64*
  %12418 = load i64, i64* %PC.i26
  %12419 = add i64 %12418, 7
  store i64 %12419, i64* %PC.i26
  %12420 = load i32, i32* bitcast (%G_0x8664b4_type* @G_0x8664b4 to i32*)
  %12421 = zext i32 %12420 to i64
  store i64 %12421, i64* %RAX.i27, align 8
  store %struct.Memory* %loadMem_40d595, %struct.Memory** %MEMORY
  %loadMem_40d59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12423 = getelementptr inbounds %struct.GPR, %struct.GPR* %12422, i32 0, i32 33
  %12424 = getelementptr inbounds %struct.Reg, %struct.Reg* %12423, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %12424 to i64*
  %12425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12426 = getelementptr inbounds %struct.GPR, %struct.GPR* %12425, i32 0, i32 1
  %12427 = getelementptr inbounds %struct.Reg, %struct.Reg* %12426, i32 0, i32 0
  %EAX.i25 = bitcast %union.anon* %12427 to i32*
  %12428 = load i32, i32* %EAX.i25
  %12429 = zext i32 %12428 to i64
  %12430 = load i64, i64* %PC.i24
  %12431 = add i64 %12430, 7
  store i64 %12431, i64* %PC.i24
  store i32 %12428, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  store %struct.Memory* %loadMem_40d59c, %struct.Memory** %MEMORY
  %loadMem_40d5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12433 = getelementptr inbounds %struct.GPR, %struct.GPR* %12432, i32 0, i32 33
  %12434 = getelementptr inbounds %struct.Reg, %struct.Reg* %12433, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %12434 to i64*
  %12435 = load i64, i64* %PC.i23
  %12436 = add i64 %12435, 11
  store i64 %12436, i64* %PC.i23
  store i32 0, i32* bitcast (%G_0x8664b4_type* @G_0x8664b4 to i32*)
  store %struct.Memory* %loadMem_40d5a3, %struct.Memory** %MEMORY
  %loadMem_40d5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %12437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12438 = getelementptr inbounds %struct.GPR, %struct.GPR* %12437, i32 0, i32 33
  %12439 = getelementptr inbounds %struct.Reg, %struct.Reg* %12438, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %12439 to i64*
  %12440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12441 = getelementptr inbounds %struct.GPR, %struct.GPR* %12440, i32 0, i32 5
  %12442 = getelementptr inbounds %struct.Reg, %struct.Reg* %12441, i32 0, i32 0
  %RCX.i22 = bitcast %union.anon* %12442 to i64*
  %12443 = load i64, i64* %PC.i21
  %12444 = add i64 %12443, 8
  store i64 %12444, i64* %PC.i21
  %12445 = load i32, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  %12446 = sext i32 %12445 to i64
  store i64 %12446, i64* %RCX.i22, align 8
  store %struct.Memory* %loadMem_40d5ae, %struct.Memory** %MEMORY
  %loadMem_40d5b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12448 = getelementptr inbounds %struct.GPR, %struct.GPR* %12447, i32 0, i32 33
  %12449 = getelementptr inbounds %struct.Reg, %struct.Reg* %12448, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %12449 to i64*
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12451 = getelementptr inbounds %struct.GPR, %struct.GPR* %12450, i32 0, i32 5
  %12452 = getelementptr inbounds %struct.Reg, %struct.Reg* %12451, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %12452 to i64*
  %12453 = load i64, i64* %RCX.i
  %12454 = mul i64 %12453, 4
  %12455 = add i64 %12454, 8778480
  %12456 = load i64, i64* %PC.i20
  %12457 = add i64 %12456, 11
  store i64 %12457, i64* %PC.i20
  %12458 = inttoptr i64 %12455 to i32*
  store i32 110, i32* %12458
  store %struct.Memory* %loadMem_40d5b6, %struct.Memory** %MEMORY
  %loadMem_40d5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12460 = getelementptr inbounds %struct.GPR, %struct.GPR* %12459, i32 0, i32 33
  %12461 = getelementptr inbounds %struct.Reg, %struct.Reg* %12460, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %12461 to i64*
  %12462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12463 = getelementptr inbounds %struct.GPR, %struct.GPR* %12462, i32 0, i32 1
  %12464 = getelementptr inbounds %struct.Reg, %struct.Reg* %12463, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %12464 to i64*
  %12465 = load i64, i64* %PC.i18
  %12466 = add i64 %12465, 7
  store i64 %12466, i64* %PC.i18
  %12467 = load i32, i32* bitcast (%G_0x8a1e38_type* @G_0x8a1e38 to i32*)
  %12468 = zext i32 %12467 to i64
  store i64 %12468, i64* %RAX.i19, align 8
  store %struct.Memory* %loadMem_40d5c1, %struct.Memory** %MEMORY
  %loadMem_40d5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12470 = getelementptr inbounds %struct.GPR, %struct.GPR* %12469, i32 0, i32 33
  %12471 = getelementptr inbounds %struct.Reg, %struct.Reg* %12470, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %12471 to i64*
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12473 = getelementptr inbounds %struct.GPR, %struct.GPR* %12472, i32 0, i32 1
  %12474 = getelementptr inbounds %struct.Reg, %struct.Reg* %12473, i32 0, i32 0
  %RAX.i17 = bitcast %union.anon* %12474 to i64*
  %12475 = load i64, i64* %RAX.i17
  %12476 = load i64, i64* %PC.i16
  %12477 = add i64 %12476, 7
  store i64 %12477, i64* %PC.i16
  %12478 = trunc i64 %12475 to i32
  %12479 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12480 = xor i32 %12479, %12478
  %12481 = zext i32 %12480 to i64
  store i64 %12481, i64* %RAX.i17, align 8
  %12482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12482, align 1
  %12483 = and i32 %12480, 255
  %12484 = call i32 @llvm.ctpop.i32(i32 %12483)
  %12485 = trunc i32 %12484 to i8
  %12486 = and i8 %12485, 1
  %12487 = xor i8 %12486, 1
  %12488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12487, i8* %12488, align 1
  %12489 = icmp eq i32 %12480, 0
  %12490 = zext i1 %12489 to i8
  %12491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12490, i8* %12491, align 1
  %12492 = lshr i32 %12480, 31
  %12493 = trunc i32 %12492 to i8
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12493, i8* %12494, align 1
  %12495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12495, align 1
  %12496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12496, align 1
  store %struct.Memory* %loadMem_40d5c8, %struct.Memory** %MEMORY
  %loadMem_40d5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12498 = getelementptr inbounds %struct.GPR, %struct.GPR* %12497, i32 0, i32 33
  %12499 = getelementptr inbounds %struct.Reg, %struct.Reg* %12498, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %12499 to i64*
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12501 = getelementptr inbounds %struct.GPR, %struct.GPR* %12500, i32 0, i32 1
  %12502 = getelementptr inbounds %struct.Reg, %struct.Reg* %12501, i32 0, i32 0
  %EAX.i15 = bitcast %union.anon* %12502 to i32*
  %12503 = load i32, i32* %EAX.i15
  %12504 = zext i32 %12503 to i64
  %12505 = load i64, i64* %PC.i14
  %12506 = add i64 %12505, 7
  store i64 %12506, i64* %PC.i14
  store i32 %12503, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d5cf, %struct.Memory** %MEMORY
  %loadMem_40d5d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12508 = getelementptr inbounds %struct.GPR, %struct.GPR* %12507, i32 0, i32 33
  %12509 = getelementptr inbounds %struct.Reg, %struct.Reg* %12508, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %12509 to i64*
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12511 = getelementptr inbounds %struct.GPR, %struct.GPR* %12510, i32 0, i32 1
  %12512 = getelementptr inbounds %struct.Reg, %struct.Reg* %12511, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %12512 to i64*
  %12513 = load i64, i64* %PC.i12
  %12514 = add i64 %12513, 7
  store i64 %12514, i64* %PC.i12
  %12515 = load i32, i32* bitcast (%G_0x8a1e44_type* @G_0x8a1e44 to i32*)
  %12516 = zext i32 %12515 to i64
  store i64 %12516, i64* %RAX.i13, align 8
  store %struct.Memory* %loadMem_40d5d6, %struct.Memory** %MEMORY
  %loadMem_40d5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12518 = getelementptr inbounds %struct.GPR, %struct.GPR* %12517, i32 0, i32 33
  %12519 = getelementptr inbounds %struct.Reg, %struct.Reg* %12518, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %12519 to i64*
  %12520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12521 = getelementptr inbounds %struct.GPR, %struct.GPR* %12520, i32 0, i32 1
  %12522 = getelementptr inbounds %struct.Reg, %struct.Reg* %12521, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %12522 to i64*
  %12523 = load i64, i64* %RAX.i
  %12524 = load i64, i64* %PC.i11
  %12525 = add i64 %12524, 7
  store i64 %12525, i64* %PC.i11
  %12526 = trunc i64 %12523 to i32
  %12527 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %12528 = xor i32 %12527, %12526
  %12529 = zext i32 %12528 to i64
  store i64 %12529, i64* %RAX.i, align 8
  %12530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12530, align 1
  %12531 = and i32 %12528, 255
  %12532 = call i32 @llvm.ctpop.i32(i32 %12531)
  %12533 = trunc i32 %12532 to i8
  %12534 = and i8 %12533, 1
  %12535 = xor i8 %12534, 1
  %12536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12535, i8* %12536, align 1
  %12537 = icmp eq i32 %12528, 0
  %12538 = zext i1 %12537 to i8
  %12539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12538, i8* %12539, align 1
  %12540 = lshr i32 %12528, 31
  %12541 = trunc i32 %12540 to i8
  %12542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12541, i8* %12542, align 1
  %12543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %12543, align 1
  %12544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12544, align 1
  store %struct.Memory* %loadMem_40d5dd, %struct.Memory** %MEMORY
  %loadMem_40d5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12546 = getelementptr inbounds %struct.GPR, %struct.GPR* %12545, i32 0, i32 33
  %12547 = getelementptr inbounds %struct.Reg, %struct.Reg* %12546, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %12547 to i64*
  %12548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12549 = getelementptr inbounds %struct.GPR, %struct.GPR* %12548, i32 0, i32 1
  %12550 = getelementptr inbounds %struct.Reg, %struct.Reg* %12549, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %12550 to i32*
  %12551 = load i32, i32* %EAX.i
  %12552 = zext i32 %12551 to i64
  %12553 = load i64, i64* %PC.i10
  %12554 = add i64 %12553, 7
  store i64 %12554, i64* %PC.i10
  store i32 %12551, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  store %struct.Memory* %loadMem_40d5e4, %struct.Memory** %MEMORY
  %loadMem_40d5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12556 = getelementptr inbounds %struct.GPR, %struct.GPR* %12555, i32 0, i32 33
  %12557 = getelementptr inbounds %struct.Reg, %struct.Reg* %12556, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %12557 to i64*
  %12558 = load i64, i64* %PC.i9
  %12559 = add i64 %12558, 25
  %12560 = load i64, i64* %PC.i9
  %12561 = add i64 %12560, 5
  store i64 %12561, i64* %PC.i9
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12559, i64* %12562, align 8
  store %struct.Memory* %loadMem_40d5eb, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d5f0:                                  ; preds = %block_.L_40d548
  %loadMem_40d5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12564 = getelementptr inbounds %struct.GPR, %struct.GPR* %12563, i32 0, i32 33
  %12565 = getelementptr inbounds %struct.Reg, %struct.Reg* %12564, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %12565 to i64*
  %12566 = load i64, i64* %PC.i8
  %12567 = add i64 %12566, 5
  %12568 = load i64, i64* %PC.i8
  %12569 = add i64 %12568, 5
  store i64 %12569, i64* %PC.i8
  %12570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12567, i64* %12570, align 8
  store %struct.Memory* %loadMem_40d5f0, %struct.Memory** %MEMORY
  br label %block_.L_40d5f5

block_.L_40d5f5:                                  ; preds = %block_.L_40d5f0
  %loadMem_40d5f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12572 = getelementptr inbounds %struct.GPR, %struct.GPR* %12571, i32 0, i32 33
  %12573 = getelementptr inbounds %struct.Reg, %struct.Reg* %12572, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %12573 to i64*
  %12574 = load i64, i64* %PC.i7
  %12575 = add i64 %12574, 5
  %12576 = load i64, i64* %PC.i7
  %12577 = add i64 %12576, 5
  store i64 %12577, i64* %PC.i7
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12575, i64* %12578, align 8
  store %struct.Memory* %loadMem_40d5f5, %struct.Memory** %MEMORY
  br label %block_.L_40d5fa

block_.L_40d5fa:                                  ; preds = %block_.L_40d5f5
  %loadMem_40d5fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12580 = getelementptr inbounds %struct.GPR, %struct.GPR* %12579, i32 0, i32 33
  %12581 = getelementptr inbounds %struct.Reg, %struct.Reg* %12580, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %12581 to i64*
  %12582 = load i64, i64* %PC.i6
  %12583 = add i64 %12582, 5
  %12584 = load i64, i64* %PC.i6
  %12585 = add i64 %12584, 5
  store i64 %12585, i64* %PC.i6
  %12586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12583, i64* %12586, align 8
  store %struct.Memory* %loadMem_40d5fa, %struct.Memory** %MEMORY
  br label %block_.L_40d5ff

block_.L_40d5ff:                                  ; preds = %block_.L_40d5fa
  %loadMem_40d5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12588 = getelementptr inbounds %struct.GPR, %struct.GPR* %12587, i32 0, i32 33
  %12589 = getelementptr inbounds %struct.Reg, %struct.Reg* %12588, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %12589 to i64*
  %12590 = load i64, i64* %PC.i5
  %12591 = add i64 %12590, 5
  %12592 = load i64, i64* %PC.i5
  %12593 = add i64 %12592, 5
  store i64 %12593, i64* %PC.i5
  %12594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12591, i64* %12594, align 8
  store %struct.Memory* %loadMem_40d5ff, %struct.Memory** %MEMORY
  br label %block_.L_40d604

block_.L_40d604:                                  ; preds = %block_.L_40d5ff, %block_40d552, %block_40d4aa, %block_.L_40d407, %block_40d364, %block_40d2bc, %block_.L_40d139, %block_40d066, %block_40cf71, %block_.L_40ceb4, %block_40cd46, %block_.L_40cc9b, %block_40cb30, %block_40c886
  %loadMem_40d604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12596 = getelementptr inbounds %struct.GPR, %struct.GPR* %12595, i32 0, i32 33
  %12597 = getelementptr inbounds %struct.Reg, %struct.Reg* %12596, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %12597 to i64*
  %12598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12599 = getelementptr inbounds %struct.GPR, %struct.GPR* %12598, i32 0, i32 13
  %12600 = getelementptr inbounds %struct.Reg, %struct.Reg* %12599, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %12600 to i64*
  %12601 = load i64, i64* %RSP.i
  %12602 = load i64, i64* %PC.i4
  %12603 = add i64 %12602, 4
  store i64 %12603, i64* %PC.i4
  %12604 = add i64 64, %12601
  store i64 %12604, i64* %RSP.i, align 8
  %12605 = icmp ult i64 %12604, %12601
  %12606 = icmp ult i64 %12604, 64
  %12607 = or i1 %12605, %12606
  %12608 = zext i1 %12607 to i8
  %12609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12608, i8* %12609, align 1
  %12610 = trunc i64 %12604 to i32
  %12611 = and i32 %12610, 255
  %12612 = call i32 @llvm.ctpop.i32(i32 %12611)
  %12613 = trunc i32 %12612 to i8
  %12614 = and i8 %12613, 1
  %12615 = xor i8 %12614, 1
  %12616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12615, i8* %12616, align 1
  %12617 = xor i64 64, %12601
  %12618 = xor i64 %12617, %12604
  %12619 = lshr i64 %12618, 4
  %12620 = trunc i64 %12619 to i8
  %12621 = and i8 %12620, 1
  %12622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12621, i8* %12622, align 1
  %12623 = icmp eq i64 %12604, 0
  %12624 = zext i1 %12623 to i8
  %12625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12624, i8* %12625, align 1
  %12626 = lshr i64 %12604, 63
  %12627 = trunc i64 %12626 to i8
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12627, i8* %12628, align 1
  %12629 = lshr i64 %12601, 63
  %12630 = xor i64 %12626, %12629
  %12631 = add i64 %12630, %12626
  %12632 = icmp eq i64 %12631, 2
  %12633 = zext i1 %12632 to i8
  %12634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12633, i8* %12634, align 1
  store %struct.Memory* %loadMem_40d604, %struct.Memory** %MEMORY
  %loadMem_40d608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12636 = getelementptr inbounds %struct.GPR, %struct.GPR* %12635, i32 0, i32 33
  %12637 = getelementptr inbounds %struct.Reg, %struct.Reg* %12636, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %12637 to i64*
  %12638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12639 = getelementptr inbounds %struct.GPR, %struct.GPR* %12638, i32 0, i32 15
  %12640 = getelementptr inbounds %struct.Reg, %struct.Reg* %12639, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %12640 to i64*
  %12641 = load i64, i64* %PC.i2
  %12642 = add i64 %12641, 1
  store i64 %12642, i64* %PC.i2
  %12643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12644 = load i64, i64* %12643, align 8
  %12645 = add i64 %12644, 8
  %12646 = inttoptr i64 %12644 to i64*
  %12647 = load i64, i64* %12646
  store i64 %12647, i64* %RBP.i3, align 8
  store i64 %12645, i64* %12643, align 8
  store %struct.Memory* %loadMem_40d608, %struct.Memory** %MEMORY
  %loadMem_40d609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12649 = getelementptr inbounds %struct.GPR, %struct.GPR* %12648, i32 0, i32 33
  %12650 = getelementptr inbounds %struct.Reg, %struct.Reg* %12649, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %12650 to i64*
  %12651 = load i64, i64* %PC.i1
  %12652 = add i64 %12651, 1
  store i64 %12652, i64* %PC.i1
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12655 = load i64, i64* %12654, align 8
  %12656 = inttoptr i64 %12655 to i64*
  %12657 = load i64, i64* %12656
  store i64 %12657, i64* %12653, align 8
  %12658 = add i64 %12655, 8
  store i64 %12658, i64* %12654, align 8
  store %struct.Memory* %loadMem_40d609, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40d609
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x40___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 64
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 64
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 64, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x880b20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0xc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xc__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rdi___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x886bc0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x886bc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x886bc0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8__rdi____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x881de4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x866790(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40c977(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x880b20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x880b20_type* @G__0x880b20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rsi_4____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x85f2f0___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x886bc0___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RSI, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rdx____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x639120___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6525216
  %15 = load i32, i32* %EDI
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8662f0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x63ae48___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.DropaddHolding(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8a0a80___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab0___r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6478512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661c0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866540___r8_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x240___r8___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 576, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %R8, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__r8___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rdx__r8_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %R8
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661bc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d604(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8662f0___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8662f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RSI, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8778480
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8662f0___rax_4____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x639120___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6525216
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cb14(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xd___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 13
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 13, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40ca2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40ca25(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cb0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ca46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cab8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x639120___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6525216
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %15, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i32 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %15, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %15, 31
  %31 = xor i32 %27, %30
  %32 = add i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ca8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SwitchPromoted(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__edi___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RDI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovnel__ecx___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  %19 = load i64, i64* %RDI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x2c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.removeHolding(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cab3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.SwitchColor(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x30__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cab8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8a0a80___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x8a0a80_type* @G__0x8a0a80 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x240___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 576, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab0___rax_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6478512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8661c0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RDX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x63ae48___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40cb14(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 1
  %17 = icmp ult i32 %15, 1
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 1
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cd2a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40cc9b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0cc0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047232
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl_0x633b40___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  %14 = xor i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %14, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x633b40(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xc___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 12
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 12, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0f00___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047808
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 13, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x62dab8_type* @G_0x62dab8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8661c0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x63ae48___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x866540___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 2, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8823b0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x14__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661bc___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RCX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x886bc0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x4___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 3
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %R8, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___r8____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0xc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %12, 12
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 12, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8662f0___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807152
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = sext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x85f2f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8778480
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8662f0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807152
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8823b0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 2
  %17 = icmp ult i32 %15, 2
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 2
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40cf43(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40ceb4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xc___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 12, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 12
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 12, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 2, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x62dab4_type* @G_0x62dab4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x866540___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xc___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 12, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RSI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 12
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 12, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 5
  %17 = icmp ult i32 %15, 5
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 5
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40d038(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x6__0x866540___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sub i32 %15, 6
  %17 = icmp ult i32 %15, 6
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i32 %15, 6
  %27 = xor i32 %26, %16
  %28 = lshr i32 %27, 4
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1
  %32 = icmp eq i32 %16, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %16, 31
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %15, 31
  %39 = xor i32 %35, %38
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40d038(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866540___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8823b0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661bc___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = xor i64 1, %9
  %13 = trunc i64 %12 to i32
  %14 = and i64 %12, 4294967295
  store i64 %14, i64* %RDX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %13, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x866540___rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rsi__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RSI
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40d20c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_40d139(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x866540___rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0cc0___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047232
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x240___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 576, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62dab0___rax_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 6478512
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8661c0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RSI, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x8661c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a0f00___rdx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9047808
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40d40c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x86bd7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x86bd7c_type* @G_0x86bd7c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8807744
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x5__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 5, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8823b0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8823b0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8922032
  %15 = load i32, i32* %EAX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %14 to i32*
  store i32 %15, i32* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a15c0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9049536
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40d35a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7__0x8665c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 7, i32* bitcast (%G_0x8665c4_type* @G_0x8665c4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x8665bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x8665bc_type* @G_0x8665bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882434___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882434(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882434_type* @G_0x882434 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x88242c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x88242c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x88242c_type* @G_0x88242c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e4fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x86636c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x86636c_type* @G_0x86636c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866374(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x86636c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x86636c_type* @G_0x86636c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x866374___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866374_type* @G_0x866374 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x21__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 33, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1ac4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1ac4_type* @G_0x8a1ac4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1abc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1abc_type* @G_0x8a1abc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40d402(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x7__0x8665a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 7, i32* bitcast (%G_0x8665a8_type* @G_0x8665a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x8665b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x8665b4_type* @G_0x8665b4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882418___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882418(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882418_type* @G_0x882418 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882424___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882424(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882424_type* @G_0x882424 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x866364___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866364_type* @G_0x866364 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x866358(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866364(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866364_type* @G_0x866364 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x866358___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x866358_type* @G_0x866358 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1a__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 26, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1ab4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1ab4_type* @G_0x8a1ab4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1aa8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1aa8_type* @G_0x8a1aa8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d407(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8661d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8661d0_type* @G_0x8661d0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6__0x866540___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8807744
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 6, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1800___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 9050112
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 3
  %16 = icmp ult i32 %14, 3
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 3
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40d548(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8__0x866714(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 8, i32* bitcast (%G_0x866714_type* @G_0x866714 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x86670c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x86670c_type* @G_0x86670c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882584___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882584(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882584_type* @G_0x882584 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x88257c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x88257c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x88257c_type* @G_0x88257c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e500(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8664bc___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664bc_type* @G_0x8664bc to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8664c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8664bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8664bc_type* @G_0x8664bc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8664c4___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664c4_type* @G_0x8664c4 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x75__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 117, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e54___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e54_type* @G_0x8a1e54 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e4c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e4c_type* @G_0x8a1e4c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 36
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 4
  %16 = icmp ult i32 %14, 4
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 4
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40d5f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x8__0x8666f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 8, i32* bitcast (%G_0x8666f8_type* @G_0x8666f8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xd__0x866704(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 13, i32* bitcast (%G_0x866704_type* @G_0x866704 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882568___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882568(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882568_type* @G_0x882568 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x882574___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x882574(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x882574_type* @G_0x882574 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8664b4___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664b4_type* @G_0x8664b4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x8664a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8664b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8664b4_type* @G_0x8664b4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x8664a8___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8664a8_type* @G_0x8664a8 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x6e__0x85f2f0___rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8778480
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 110, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e38___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e38_type* @G_0x8a1e38 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a1e44___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a1e44_type* @G_0x8a1e44 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d5f5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d5fa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40d5ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x40___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 64, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 64
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 64, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
