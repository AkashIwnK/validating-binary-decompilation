; ModuleID = 'mcsema/test.proposed.inline.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%__bss_start_type = type <{ [8 x i8] }>
%G_0x2102a0__rip__type = type <{ [4 x i8] }>
%G_0x210654__rip__type = type <{ [4 x i8] }>
%G_0x21074e__rip__type = type <{ [4 x i8] }>
%G_0x21cc4c__rip__type = type <{ [4 x i8] }>
%G_0x441202__rip__type = type <{ [4 x i8] }>
%G_0x44120a__rip__type = type <{ [4 x i8] }>
%G_0x44615a__rip__type = type <{ [4 x i8] }>
%G_0x446248__rip__type = type <{ [4 x i8] }>
%G_0x446310__rip__type = type <{ [4 x i8] }>
%G_0x447f0d__rip__type = type <{ [4 x i8] }>
%G_0x4484d4__rip__type = type <{ [4 x i8] }>
%G_0x44da30__rip__type = type <{ [4 x i8] }>
%G_0x4628ca__rip__type = type <{ [4 x i8] }>
%G_0x4686f6__rip__type = type <{ [4 x i8] }>
%G_0x468cf0__rip__type = type <{ [4 x i8] }>
%G_0x468d72__rip__type = type <{ [4 x i8] }>
%G_0x482684__rip__type = type <{ [4 x i8] }>
%G_0x62da80_type = type <{ [8 x i8] }>
%G_0x62da90_type = type <{ [8 x i8] }>
%G_0x62db08_type = type <{ [4 x i8] }>
%G_0x62db0c_type = type <{ [4 x i8] }>
%G_0x62e4f0_type = type <{ [4 x i8] }>
%G_0x62e4fc_type = type <{ [4 x i8] }>
%G_0x62e500_type = type <{ [4 x i8] }>
%G_0x62e510_type = type <{ [4 x i8] }>
%G_0x62e514_type = type <{ [4 x i8] }>
%G_0x62e524_type = type <{ [4 x i8] }>
%G_0x62e9e4_type = type <{ [4 x i8] }>
%G_0x62ea00_type = type <{ [1 x i8] }>
%G_0x62ea14_type = type <{ [4 x i8] }>
%G_0x62ea18_type = type <{ [4 x i8] }>
%G_0x62ea38_type = type <{ [4 x i8] }>
%G_0x633b40_type = type <{ [4 x i8] }>
%G_0x633b44_type = type <{ [4 x i8] }>
%G_0x633b4c_type = type <{ [4 x i8] }>
%G_0x633b54_type = type <{ [4 x i8] }>
%G_0x63ae44_type = type <{ [4 x i8] }>
%G_0x85f154_type = type <{ [4 x i8] }>
%G_0x85f168_type = type <{ [4 x i8] }>
%G_0x85f3ec_type = type <{ [4 x i8] }>
%G_0x864500_type = type <{ [4 x i8] }>
%G_0x864508_type = type <{ [4 x i8] }>
%G_0x8661bc_type = type <{ [4 x i8] }>
%G_0x8661c0_type = type <{ [4 x i8] }>
%G_0x8661d0_type = type <{ [1 x i8] }>
%G_0x8661d8_type = type <{ [4 x i8] }>
%G_0x8662e8_type = type <{ [8 x i8] }>
%G_0x866530_type = type <{ [4 x i8] }>
%G_0x866790_type = type <{ [1 x i8] }>
%G_0x86679c_type = type <{ [4 x i8] }>
%G_0x8667a0_type = type <{ [4 x i8] }>
%G_0x8667a4_type = type <{ [4 x i8] }>
%G_0x86bd60_type = type <{ [4 x i8] }>
%G_0x86bd64_type = type <{ [4 x i8] }>
%G_0x86bd70_type = type <{ [4 x i8] }>
%G_0x86bd74_type = type <{ [4 x i8] }>
%G_0x86bd78_type = type <{ [4 x i8] }>
%G_0x86bd7c_type = type <{ [1 x i8] }>
%G_0x86bd84_type = type <{ [4 x i8] }>
%G_0x86bd88_type = type <{ [4 x i8] }>
%G_0x86bd90_type = type <{ [4 x i8] }>
%G_0x880654_type = type <{ [4 x i8] }>
%G_0x880b10_type = type <{ [4 x i8] }>
%G_0x880b14_type = type <{ [4 x i8] }>
%G_0x880b18_type = type <{ [4 x i8] }>
%G_0x880b20_type = type <{ [8 x i8] }>
%G_0x880b28_type = type <{ [8 x i8] }>
%G_0x881de4_type = type <{ [4 x i8] }>
%G_0x881df4_type = type <{ [4 x i8] }>
%G_0x886a60_type = type <{ [4 x i8] }>
%G_0x886a78_type = type <{ [4 x i8] }>
%G_0x886a7c_type = type <{ [4 x i8] }>
%G_0x886b80_type = type <{ [4 x i8] }>
%G_0x886b84_type = type <{ [4 x i8] }>
%G_0x886b88_type = type <{ [4 x i8] }>
%G_0x886bb8_type = type <{ [4 x i8] }>
%G_0x886bbc_type = type <{ [4 x i8] }>
%G_0x886bc0_type = type <{ [4 x i8] }>
%G_0x886bc4_type = type <{ [4 x i8] }>
%G_0x886be4_type = type <{ [4 x i8] }>
%G_0x8a05b4_type = type <{ [4 x i8] }>
%G_0x8a2a04_type = type <{ [4 x i8] }>
%G_0x946e__rip__type = type <{ [8 x i8] }>
%G_0x96d3__rip__type = type <{ [8 x i8] }>
%G_0xa11e__rip__type = type <{ [4 x i8] }>
%G_0xa12a__rip__type = type <{ [4 x i8] }>
%G_0xa19c__rip__type = type <{ [8 x i8] }>
%G__0x4284ed_type = type <{ [4 x i8] }>
%G__0x42850a_type = type <{ [4 x i8] }>
%G__0x428540_type = type <{ [4 x i8] }>
%G__0x42857c_type = type <{ [4 x i8] }>
%G__0x4285af_type = type <{ [4 x i8] }>
%G__0x4285ec_type = type <{ [8 x i8] }>
%G__0x428764_type = type <{ [8 x i8] }>
%G__0x428778_type = type <{ [4 x i8] }>
%G__0x42888d_type = type <{ [4 x i8] }>
%G__0x4288b1_type = type <{ [8 x i8] }>
%G__0x4288b4_type = type <{ [8 x i8] }>
%G__0x42925b_type = type <{ [8 x i8] }>
%G__0x42926a_type = type <{ [8 x i8] }>
%G__0x4292bb_type = type <{ [8 x i8] }>
%G__0x4292d5_type = type <{ [8 x i8] }>
%G__0x4292de_type = type <{ [8 x i8] }>
%G__0x4292e3_type = type <{ [8 x i8] }>
%G__0x4292f6_type = type <{ [8 x i8] }>
%G__0x429309_type = type <{ [8 x i8] }>
%G__0x429324_type = type <{ [8 x i8] }>
%G__0x429341_type = type <{ [8 x i8] }>
%G__0x429351_type = type <{ [8 x i8] }>
%G__0x429359_type = type <{ [8 x i8] }>
%G__0x42936b_type = type <{ [8 x i8] }>
%G__0x429374_type = type <{ [4 x i8] }>
%G__0x429379_type = type <{ [4 x i8] }>
%G__0x42937e_type = type <{ [4 x i8] }>
%G__0x429386_type = type <{ [8 x i8] }>
%G__0x42938c_type = type <{ [8 x i8] }>
%G__0x4293a8_type = type <{ [8 x i8] }>
%G__0x4293b5_type = type <{ [4 x i8] }>
%G__0x4293b9_type = type <{ [8 x i8] }>
%G__0x4293e1_type = type <{ [4 x i8] }>
%G__0x4293e8_type = type <{ [4 x i8] }>
%G__0x4293ee_type = type <{ [8 x i8] }>
%G__0x429414_type = type <{ [4 x i8] }>
%G__0x429416_type = type <{ [4 x i8] }>
%G__0x42941b_type = type <{ [4 x i8] }>
%G__0x429422_type = type <{ [4 x i8] }>
%G__0x429427_type = type <{ [4 x i8] }>
%G__0x42942c_type = type <{ [4 x i8] }>
%G__0x429432_type = type <{ [4 x i8] }>
%G__0x429438_type = type <{ [4 x i8] }>
%G__0x42943e_type = type <{ [4 x i8] }>
%G__0x429443_type = type <{ [8 x i8] }>
%G__0x42944d_type = type <{ [8 x i8] }>
%G__0x429452_type = type <{ [8 x i8] }>
%G__0x429458_type = type <{ [8 x i8] }>
%G__0x42945a_type = type <{ [8 x i8] }>
%G__0x429466_type = type <{ [8 x i8] }>
%G__0x429469_type = type <{ [8 x i8] }>
%G__0x42946c_type = type <{ [8 x i8] }>
%G__0x42946f_type = type <{ [8 x i8] }>
%G__0x429476_type = type <{ [8 x i8] }>
%G__0x42947e_type = type <{ [8 x i8] }>
%G__0x429486_type = type <{ [8 x i8] }>
%G__0x42948d_type = type <{ [8 x i8] }>
%G__0x429498_type = type <{ [8 x i8] }>
%G__0x4294a1_type = type <{ [8 x i8] }>
%G__0x4294a9_type = type <{ [8 x i8] }>
%G__0x4294b2_type = type <{ [8 x i8] }>
%G__0x4294b9_type = type <{ [8 x i8] }>
%G__0x4294c1_type = type <{ [8 x i8] }>
%G__0x4294c6_type = type <{ [8 x i8] }>
%G__0x4294d8_type = type <{ [8 x i8] }>
%G__0x4294df_type = type <{ [8 x i8] }>
%G__0x4294e4_type = type <{ [8 x i8] }>
%G__0x4294e6_type = type <{ [8 x i8] }>
%G__0x4294e8_type = type <{ [8 x i8] }>
%G__0x4294e9_type = type <{ [8 x i8] }>
%G__0x4294f1_type = type <{ [8 x i8] }>
%G__0x4294f7_type = type <{ [8 x i8] }>
%G__0x4294fc_type = type <{ [8 x i8] }>
%G__0x429503_type = type <{ [8 x i8] }>
%G__0x429509_type = type <{ [8 x i8] }>
%G__0x429523_type = type <{ [8 x i8] }>
%G__0x429528_type = type <{ [8 x i8] }>
%G__0x429531_type = type <{ [8 x i8] }>
%G__0x429537_type = type <{ [8 x i8] }>
%G__0x42953d_type = type <{ [8 x i8] }>
%G__0x429540_type = type <{ [8 x i8] }>
%G__0x42955a_type = type <{ [8 x i8] }>
%G__0x42955f_type = type <{ [8 x i8] }>
%G__0x429568_type = type <{ [8 x i8] }>
%G__0x4295a7_type = type <{ [8 x i8] }>
%G__0x4295dc_type = type <{ [8 x i8] }>
%G__0x4295fd_type = type <{ [8 x i8] }>
%G__0x429644_type = type <{ [8 x i8] }>
%G__0x429672_type = type <{ [8 x i8] }>
%G__0x42967b_type = type <{ [8 x i8] }>
%G__0x429684_type = type <{ [8 x i8] }>
%G__0x4296c5_type = type <{ [8 x i8] }>
%G__0x4296ee_type = type <{ [8 x i8] }>
%G__0x429710_type = type <{ [8 x i8] }>
%G__0x429743_type = type <{ [8 x i8] }>
%G__0x429766_type = type <{ [8 x i8] }>
%G__0x42979d_type = type <{ [8 x i8] }>
%G__0x4297ce_type = type <{ [8 x i8] }>
%G__0x4297ff_type = type <{ [8 x i8] }>
%G__0x429818_type = type <{ [8 x i8] }>
%G__0x429835_type = type <{ [8 x i8] }>
%G__0x42986c_type = type <{ [8 x i8] }>
%G__0x42989b_type = type <{ [8 x i8] }>
%G__0x4298c5_type = type <{ [8 x i8] }>
%G__0x4298f2_type = type <{ [8 x i8] }>
%G__0x429919_type = type <{ [8 x i8] }>
%G__0x42994d_type = type <{ [8 x i8] }>
%G__0x429988_type = type <{ [8 x i8] }>
%G__0x4299b4_type = type <{ [8 x i8] }>
%G__0x4299e7_type = type <{ [8 x i8] }>
%G__0x429a1d_type = type <{ [8 x i8] }>
%G__0x429a43_type = type <{ [8 x i8] }>
%G__0x429a69_type = type <{ [8 x i8] }>
%G__0x429a93_type = type <{ [8 x i8] }>
%G__0x429aea_type = type <{ [8 x i8] }>
%G__0x429aeb_type = type <{ [4 x i8] }>
%G__0x429af6_type = type <{ [8 x i8] }>
%G__0x429bef_type = type <{ [8 x i8] }>
%G__0x429cf6_type = type <{ [4 x i8] }>
%G__0x429f1f_type = type <{ [8 x i8] }>
%G__0x62c130_type = type <{ [8 x i8] }>
%G__0x62c170_type = type <{ [8 x i8] }>
%G__0x62c1b0_type = type <{ [8 x i8] }>
%G__0x62c1f0_type = type <{ [8 x i8] }>
%G__0x62da40_type = type <{ [8 x i8] }>
%G__0x62dab0_type = type <{ [8 x i8] }>
%G__0x62ea00_type = type <{ [8 x i8] }>
%G__0x84ad30_type = type <{ [8 x i8] }>
%G__0x8661d8_type = type <{ [8 x i8] }>
%G__0x86679c_type = type <{ [8 x i8] }>
%G__0x86bd64_type = type <{ [8 x i8] }>
%G__0x86bd70_type = type <{ [8 x i8] }>
%G__0x880b14_type = type <{ [8 x i8] }>
%G__0x880b18_type = type <{ [8 x i8] }>
%G__0x886740_type = type <{ [8 x i8] }>
%G__0x886b80_type = type <{ [8 x i8] }>
%G__0x886bc4_type = type <{ [8 x i8] }>
%G__0x8a05b4_type = type <{ [8 x i8] }>
%G__0x8a0a78_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.anon = type { i64 }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@__bss_start = local_unnamed_addr global %__bss_start_type zeroinitializer
@G_0x2102a0__rip_ = global %G_0x2102a0__rip__type zeroinitializer
@G_0x210654__rip_ = global %G_0x210654__rip__type zeroinitializer
@G_0x21074e__rip_ = global %G_0x21074e__rip__type zeroinitializer
@G_0x21cc4c__rip_ = global %G_0x21cc4c__rip__type zeroinitializer
@G_0x441202__rip_ = global %G_0x441202__rip__type zeroinitializer
@G_0x44120a__rip_ = global %G_0x44120a__rip__type zeroinitializer
@G_0x44615a__rip_ = global %G_0x44615a__rip__type zeroinitializer
@G_0x446248__rip_ = global %G_0x446248__rip__type zeroinitializer
@G_0x446310__rip_ = global %G_0x446310__rip__type zeroinitializer
@G_0x447f0d__rip_ = global %G_0x447f0d__rip__type zeroinitializer
@G_0x4484d4__rip_ = global %G_0x4484d4__rip__type zeroinitializer
@G_0x44da30__rip_ = global %G_0x44da30__rip__type zeroinitializer
@G_0x4628ca__rip_ = global %G_0x4628ca__rip__type zeroinitializer
@G_0x4686f6__rip_ = global %G_0x4686f6__rip__type zeroinitializer
@G_0x468cf0__rip_ = global %G_0x468cf0__rip__type zeroinitializer
@G_0x468d72__rip_ = global %G_0x468d72__rip__type zeroinitializer
@G_0x482684__rip_ = global %G_0x482684__rip__type zeroinitializer
@G_0x62da80 = local_unnamed_addr global %G_0x62da80_type zeroinitializer
@G_0x62da90 = local_unnamed_addr global %G_0x62da90_type zeroinitializer
@G_0x62db08 = local_unnamed_addr global %G_0x62db08_type zeroinitializer
@G_0x62db0c = local_unnamed_addr global %G_0x62db0c_type zeroinitializer
@G_0x62e4f0 = local_unnamed_addr global %G_0x62e4f0_type zeroinitializer
@G_0x62e4fc = local_unnamed_addr global %G_0x62e4fc_type zeroinitializer
@G_0x62e500 = local_unnamed_addr global %G_0x62e500_type zeroinitializer
@G_0x62e510 = local_unnamed_addr global %G_0x62e510_type zeroinitializer
@G_0x62e514 = local_unnamed_addr global %G_0x62e514_type zeroinitializer
@G_0x62e524 = local_unnamed_addr global %G_0x62e524_type zeroinitializer
@G_0x62e9e4 = local_unnamed_addr global %G_0x62e9e4_type zeroinitializer
@G_0x62ea00 = local_unnamed_addr global %G_0x62ea00_type zeroinitializer
@G_0x62ea14 = local_unnamed_addr global %G_0x62ea14_type zeroinitializer
@G_0x62ea18 = local_unnamed_addr global %G_0x62ea18_type zeroinitializer
@G_0x62ea38 = local_unnamed_addr global %G_0x62ea38_type zeroinitializer
@G_0x633b40 = local_unnamed_addr global %G_0x633b40_type zeroinitializer
@G_0x633b44 = local_unnamed_addr global %G_0x633b44_type zeroinitializer
@G_0x633b4c = local_unnamed_addr global %G_0x633b4c_type zeroinitializer
@G_0x633b54 = local_unnamed_addr global %G_0x633b54_type zeroinitializer
@G_0x63ae44 = local_unnamed_addr global %G_0x63ae44_type zeroinitializer
@G_0x85f154 = local_unnamed_addr global %G_0x85f154_type zeroinitializer
@G_0x85f168 = local_unnamed_addr global %G_0x85f168_type zeroinitializer
@G_0x85f3ec = local_unnamed_addr global %G_0x85f3ec_type zeroinitializer
@G_0x864500 = local_unnamed_addr global %G_0x864500_type zeroinitializer
@G_0x864508 = local_unnamed_addr global %G_0x864508_type zeroinitializer
@G_0x8661bc = local_unnamed_addr global %G_0x8661bc_type zeroinitializer
@G_0x8661c0 = local_unnamed_addr global %G_0x8661c0_type zeroinitializer
@G_0x8661d0 = local_unnamed_addr global %G_0x8661d0_type zeroinitializer
@G_0x8661d8 = local_unnamed_addr global %G_0x8661d8_type zeroinitializer
@G_0x8662e8 = local_unnamed_addr global %G_0x8662e8_type zeroinitializer
@G_0x866530 = local_unnamed_addr global %G_0x866530_type zeroinitializer
@G_0x866790 = local_unnamed_addr global %G_0x866790_type zeroinitializer
@G_0x86679c = local_unnamed_addr global %G_0x86679c_type zeroinitializer
@G_0x8667a0 = local_unnamed_addr global %G_0x8667a0_type zeroinitializer
@G_0x8667a4 = local_unnamed_addr global %G_0x8667a4_type zeroinitializer
@G_0x86bd60 = local_unnamed_addr global %G_0x86bd60_type zeroinitializer
@G_0x86bd64 = local_unnamed_addr global %G_0x86bd64_type zeroinitializer
@G_0x86bd70 = local_unnamed_addr global %G_0x86bd70_type zeroinitializer
@G_0x86bd74 = local_unnamed_addr global %G_0x86bd74_type zeroinitializer
@G_0x86bd78 = local_unnamed_addr global %G_0x86bd78_type zeroinitializer
@G_0x86bd7c = local_unnamed_addr global %G_0x86bd7c_type zeroinitializer
@G_0x86bd84 = local_unnamed_addr global %G_0x86bd84_type zeroinitializer
@G_0x86bd88 = local_unnamed_addr global %G_0x86bd88_type zeroinitializer
@G_0x86bd90 = local_unnamed_addr global %G_0x86bd90_type zeroinitializer
@G_0x880654 = local_unnamed_addr global %G_0x880654_type zeroinitializer
@G_0x880b10 = local_unnamed_addr global %G_0x880b10_type zeroinitializer
@G_0x880b14 = local_unnamed_addr global %G_0x880b14_type zeroinitializer
@G_0x880b18 = local_unnamed_addr global %G_0x880b18_type zeroinitializer
@G_0x880b20 = local_unnamed_addr global %G_0x880b20_type zeroinitializer
@G_0x880b28 = local_unnamed_addr global %G_0x880b28_type zeroinitializer
@G_0x881de4 = local_unnamed_addr global %G_0x881de4_type zeroinitializer
@G_0x881df4 = local_unnamed_addr global %G_0x881df4_type zeroinitializer
@G_0x886a60 = local_unnamed_addr global %G_0x886a60_type zeroinitializer
@G_0x886a78 = local_unnamed_addr global %G_0x886a78_type zeroinitializer
@G_0x886a7c = local_unnamed_addr global %G_0x886a7c_type zeroinitializer
@G_0x886b80 = local_unnamed_addr global %G_0x886b80_type zeroinitializer
@G_0x886b84 = local_unnamed_addr global %G_0x886b84_type zeroinitializer
@G_0x886b88 = local_unnamed_addr global %G_0x886b88_type zeroinitializer
@G_0x886bb8 = local_unnamed_addr global %G_0x886bb8_type zeroinitializer
@G_0x886bbc = local_unnamed_addr global %G_0x886bbc_type zeroinitializer
@G_0x886bc0 = local_unnamed_addr global %G_0x886bc0_type zeroinitializer
@G_0x886bc4 = local_unnamed_addr global %G_0x886bc4_type zeroinitializer
@G_0x886be4 = local_unnamed_addr global %G_0x886be4_type zeroinitializer
@G_0x8a05b4 = local_unnamed_addr global %G_0x8a05b4_type zeroinitializer
@G_0x8a2a04 = local_unnamed_addr global %G_0x8a2a04_type zeroinitializer
@G_0x946e__rip_ = global %G_0x946e__rip__type zeroinitializer
@G_0x96d3__rip_ = global %G_0x96d3__rip__type zeroinitializer
@G_0xa11e__rip_ = global %G_0xa11e__rip__type zeroinitializer
@G_0xa12a__rip_ = global %G_0xa12a__rip__type zeroinitializer
@G_0xa19c__rip_ = global %G_0xa19c__rip__type zeroinitializer
@G__0x4284ed = global %G__0x4284ed_type zeroinitializer
@G__0x42850a = global %G__0x42850a_type zeroinitializer
@G__0x428540 = global %G__0x428540_type zeroinitializer
@G__0x42857c = global %G__0x42857c_type zeroinitializer
@G__0x4285af = global %G__0x4285af_type zeroinitializer
@G__0x4285ec = global %G__0x4285ec_type zeroinitializer
@G__0x428764 = global %G__0x428764_type zeroinitializer
@G__0x428778 = global %G__0x428778_type zeroinitializer
@G__0x42888d = global %G__0x42888d_type zeroinitializer
@G__0x4288b1 = global %G__0x4288b1_type zeroinitializer
@G__0x4288b4 = global %G__0x4288b4_type zeroinitializer
@G__0x42925b = global %G__0x42925b_type zeroinitializer
@G__0x42926a = global %G__0x42926a_type zeroinitializer
@G__0x4292bb = global %G__0x4292bb_type zeroinitializer
@G__0x4292d5 = global %G__0x4292d5_type zeroinitializer
@G__0x4292de = global %G__0x4292de_type zeroinitializer
@G__0x4292e3 = global %G__0x4292e3_type zeroinitializer
@G__0x4292f6 = global %G__0x4292f6_type zeroinitializer
@G__0x429309 = global %G__0x429309_type zeroinitializer
@G__0x429324 = global %G__0x429324_type zeroinitializer
@G__0x429341 = global %G__0x429341_type zeroinitializer
@G__0x429351 = global %G__0x429351_type zeroinitializer
@G__0x429359 = global %G__0x429359_type zeroinitializer
@G__0x42936b = global %G__0x42936b_type zeroinitializer
@G__0x429374 = global %G__0x429374_type zeroinitializer
@G__0x429379 = global %G__0x429379_type zeroinitializer
@G__0x42937e = global %G__0x42937e_type zeroinitializer
@G__0x429386 = global %G__0x429386_type zeroinitializer
@G__0x42938c = global %G__0x42938c_type zeroinitializer
@G__0x4293a8 = global %G__0x4293a8_type zeroinitializer
@G__0x4293b5 = global %G__0x4293b5_type zeroinitializer
@G__0x4293b9 = global %G__0x4293b9_type zeroinitializer
@G__0x4293e1 = global %G__0x4293e1_type zeroinitializer
@G__0x4293e8 = global %G__0x4293e8_type zeroinitializer
@G__0x4293ee = global %G__0x4293ee_type zeroinitializer
@G__0x429414 = global %G__0x429414_type zeroinitializer
@G__0x429416 = global %G__0x429416_type zeroinitializer
@G__0x42941b = global %G__0x42941b_type zeroinitializer
@G__0x429422 = global %G__0x429422_type zeroinitializer
@G__0x429427 = global %G__0x429427_type zeroinitializer
@G__0x42942c = global %G__0x42942c_type zeroinitializer
@G__0x429432 = global %G__0x429432_type zeroinitializer
@G__0x429438 = global %G__0x429438_type zeroinitializer
@G__0x42943e = global %G__0x42943e_type zeroinitializer
@G__0x429443 = global %G__0x429443_type zeroinitializer
@G__0x42944d = global %G__0x42944d_type zeroinitializer
@G__0x429452 = global %G__0x429452_type zeroinitializer
@G__0x429458 = global %G__0x429458_type zeroinitializer
@G__0x42945a = global %G__0x42945a_type zeroinitializer
@G__0x429466 = global %G__0x429466_type zeroinitializer
@G__0x429469 = global %G__0x429469_type zeroinitializer
@G__0x42946c = global %G__0x42946c_type zeroinitializer
@G__0x42946f = global %G__0x42946f_type zeroinitializer
@G__0x429476 = global %G__0x429476_type zeroinitializer
@G__0x42947e = global %G__0x42947e_type zeroinitializer
@G__0x429486 = global %G__0x429486_type zeroinitializer
@G__0x42948d = global %G__0x42948d_type zeroinitializer
@G__0x429498 = global %G__0x429498_type zeroinitializer
@G__0x4294a1 = global %G__0x4294a1_type zeroinitializer
@G__0x4294a9 = global %G__0x4294a9_type zeroinitializer
@G__0x4294b2 = global %G__0x4294b2_type zeroinitializer
@G__0x4294b9 = global %G__0x4294b9_type zeroinitializer
@G__0x4294c1 = global %G__0x4294c1_type zeroinitializer
@G__0x4294c6 = global %G__0x4294c6_type zeroinitializer
@G__0x4294d8 = global %G__0x4294d8_type zeroinitializer
@G__0x4294df = global %G__0x4294df_type zeroinitializer
@G__0x4294e4 = global %G__0x4294e4_type zeroinitializer
@G__0x4294e6 = global %G__0x4294e6_type zeroinitializer
@G__0x4294e8 = global %G__0x4294e8_type zeroinitializer
@G__0x4294e9 = global %G__0x4294e9_type zeroinitializer
@G__0x4294f1 = global %G__0x4294f1_type zeroinitializer
@G__0x4294f7 = global %G__0x4294f7_type zeroinitializer
@G__0x4294fc = global %G__0x4294fc_type zeroinitializer
@G__0x429503 = global %G__0x429503_type zeroinitializer
@G__0x429509 = global %G__0x429509_type zeroinitializer
@G__0x429523 = global %G__0x429523_type zeroinitializer
@G__0x429528 = global %G__0x429528_type zeroinitializer
@G__0x429531 = global %G__0x429531_type zeroinitializer
@G__0x429537 = global %G__0x429537_type zeroinitializer
@G__0x42953d = global %G__0x42953d_type zeroinitializer
@G__0x429540 = global %G__0x429540_type zeroinitializer
@G__0x42955a = global %G__0x42955a_type zeroinitializer
@G__0x42955f = global %G__0x42955f_type zeroinitializer
@G__0x429568 = global %G__0x429568_type zeroinitializer
@G__0x4295a7 = global %G__0x4295a7_type zeroinitializer
@G__0x4295dc = global %G__0x4295dc_type zeroinitializer
@G__0x4295fd = global %G__0x4295fd_type zeroinitializer
@G__0x429644 = global %G__0x429644_type zeroinitializer
@G__0x429672 = global %G__0x429672_type zeroinitializer
@G__0x42967b = global %G__0x42967b_type zeroinitializer
@G__0x429684 = global %G__0x429684_type zeroinitializer
@G__0x4296c5 = global %G__0x4296c5_type zeroinitializer
@G__0x4296ee = global %G__0x4296ee_type zeroinitializer
@G__0x429710 = global %G__0x429710_type zeroinitializer
@G__0x429743 = global %G__0x429743_type zeroinitializer
@G__0x429766 = global %G__0x429766_type zeroinitializer
@G__0x42979d = global %G__0x42979d_type zeroinitializer
@G__0x4297ce = global %G__0x4297ce_type zeroinitializer
@G__0x4297ff = global %G__0x4297ff_type zeroinitializer
@G__0x429818 = global %G__0x429818_type zeroinitializer
@G__0x429835 = global %G__0x429835_type zeroinitializer
@G__0x42986c = global %G__0x42986c_type zeroinitializer
@G__0x42989b = global %G__0x42989b_type zeroinitializer
@G__0x4298c5 = global %G__0x4298c5_type zeroinitializer
@G__0x4298f2 = global %G__0x4298f2_type zeroinitializer
@G__0x429919 = global %G__0x429919_type zeroinitializer
@G__0x42994d = global %G__0x42994d_type zeroinitializer
@G__0x429988 = global %G__0x429988_type zeroinitializer
@G__0x4299b4 = global %G__0x4299b4_type zeroinitializer
@G__0x4299e7 = global %G__0x4299e7_type zeroinitializer
@G__0x429a1d = global %G__0x429a1d_type zeroinitializer
@G__0x429a43 = global %G__0x429a43_type zeroinitializer
@G__0x429a69 = global %G__0x429a69_type zeroinitializer
@G__0x429a93 = global %G__0x429a93_type zeroinitializer
@G__0x429aea = global %G__0x429aea_type zeroinitializer
@G__0x429aeb = global %G__0x429aeb_type zeroinitializer
@G__0x429af6 = global %G__0x429af6_type zeroinitializer
@G__0x429bef = global %G__0x429bef_type zeroinitializer
@G__0x429cf6 = global %G__0x429cf6_type zeroinitializer
@G__0x429f1f = global %G__0x429f1f_type zeroinitializer
@G__0x62c130 = global %G__0x62c130_type zeroinitializer
@G__0x62c170 = global %G__0x62c170_type zeroinitializer
@G__0x62c1b0 = global %G__0x62c1b0_type zeroinitializer
@G__0x62c1f0 = global %G__0x62c1f0_type zeroinitializer
@G__0x62da40 = global %G__0x62da40_type zeroinitializer
@G__0x62dab0 = global %G__0x62dab0_type zeroinitializer
@G__0x62ea00 = global %G__0x62ea00_type zeroinitializer
@G__0x84ad30 = global %G__0x84ad30_type zeroinitializer
@G__0x8661d8 = global %G__0x8661d8_type zeroinitializer
@G__0x86679c = global %G__0x86679c_type zeroinitializer
@G__0x86bd64 = global %G__0x86bd64_type zeroinitializer
@G__0x86bd70 = global %G__0x86bd70_type zeroinitializer
@G__0x880b14 = global %G__0x880b14_type zeroinitializer
@G__0x880b18 = global %G__0x880b18_type zeroinitializer
@G__0x886740 = global %G__0x886740_type zeroinitializer
@G__0x886b80 = global %G__0x886b80_type zeroinitializer
@G__0x886bc4 = global %G__0x886bc4_type zeroinitializer
@G__0x8a05b4 = global %G__0x8a05b4_type zeroinitializer
@G__0x8a0a78 = global %G__0x8a0a78_type zeroinitializer

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #0

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

declare %struct.Memory* @sub_415dd0.read_rcfile(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_420560.initialize_zobrist(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4226a0.init_game(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_420600.initialize_hash(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4204c0.clear_tt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402c10.reset_ecache(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_400ca0.setbuf_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4241d0.start_up(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4039c0.run_autotest(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_41a940.think(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_422190.comp_to_coord(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b730.make(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402920.is_draw(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_422890.reset_piece_square(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404070.eval(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_411880.CheckBadFlow(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4223c0.display_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_422e30.rinput(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_422a60.is_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_422ed0.verify_coord(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_400df0.strstr_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_400d50.tolower_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_421480.free_hash(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402ca0.free_ecache(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_424200.toggle_bool(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_423760.rtime(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_416d20.perft(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_423770.rdifftime(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_410160.ResetHandValue(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_400d20.signal_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_410190.BegForPartner(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40d610.check_phase(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_401be0.ProcessHoldings(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40c7a0.unmake(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4245c0.reset_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4243f0.PutPiece(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4101f0.HandlePartner(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4102d0.HandlePtell(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403490.run_epd_testsuite(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_414ff0.proofnumbersearch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_402cc0.setup_epd_line(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

; Function Attrs: alwaysinline noreturn
define noalias nonnull %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) local_unnamed_addr #1 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP.i, align 8
  %5 = add i64 %1, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = load i64, i64* %3, align 8
  store i64 %8, i64* %RBP.i, align 8
  %11 = add i64 %7, -25448
  store i64 %11, i64* %6, align 8
  %12 = icmp ult i64 %8, 25440
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = trunc i64 %11 to i32
  %16 = and i32 %15, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i64 %8, %11
  %23 = lshr i64 %22, 4
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i64 %11, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %11, 63
  %31 = trunc i64 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = lshr i64 %8, 63
  %34 = xor i64 %30, %33
  %35 = add nuw nsw i64 %34, %33
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  %39 = add i64 %7, -12
  %40 = add i64 %10, 17
  store i64 %40, i64* %3, align 8
  %41 = inttoptr i64 %39 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI.i = bitcast %union.anon* %42 to i32*
  %43 = load i64, i64* %RBP.i, align 8
  %44 = add i64 %43, -8
  %45 = load i32, i32* %EDI.i, align 4
  %46 = load i64, i64* %3, align 8
  %47 = add i64 %46, 3
  store i64 %47, i64* %3, align 8
  %48 = inttoptr i64 %44 to i32*
  store i32 %45, i32* %48, align 4
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %RSI.i118 = getelementptr inbounds %union.anon, %union.anon* %49, i64 0, i32 0
  %50 = load i64, i64* %RBP.i, align 8
  %51 = add i64 %50, -16
  %52 = load i64, i64* %RSI.i118, align 8
  %53 = load i64, i64* %3, align 8
  %54 = add i64 %53, 4
  store i64 %54, i64* %3, align 8
  %55 = inttoptr i64 %51 to i64*
  store i64 %52, i64* %55, align 8
  %56 = load i64, i64* %RBP.i, align 8
  %57 = add i64 %56, -852
  %58 = load i64, i64* %3, align 8
  %59 = add i64 %58, 10
  store i64 %59, i64* %3, align 8
  %60 = inttoptr i64 %57 to i32*
  store i32 4, i32* %60, align 4
  %61 = load i64, i64* %3, align 8
  %62 = add i64 %61, -32307
  %63 = add i64 %61, 5
  %64 = load i64, i64* %6, align 8
  %65 = add i64 %64, -8
  %66 = inttoptr i64 %65 to i64*
  store i64 %63, i64* %66, align 8
  store i64 %65, i64* %6, align 8
  store i64 %62, i64* %3, align 8
  %call2_41dc03 = tail call %struct.Memory* @sub_415dd0.read_rcfile(%struct.State* %0, i64 %62, %struct.Memory* %2)
  %67 = load i64, i64* %3, align 8
  %68 = add i64 %67, 10584
  %69 = add i64 %67, 5
  %70 = load i64, i64* %6, align 8
  %71 = add i64 %70, -8
  %72 = inttoptr i64 %71 to i64*
  store i64 %69, i64* %72, align 8
  store i64 %71, i64* %6, align 8
  store i64 %68, i64* %3, align 8
  %call2_41dc08 = tail call %struct.Memory* @sub_420560.initialize_zobrist(%struct.State* %0, i64 %68, %struct.Memory* %call2_41dc03)
  %73 = load i64, i64* %3, align 8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %RAX.i = getelementptr inbounds %union.anon, %union.anon* %74, i64 0, i32 0
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RAX.i, align 8
  %RDI.i176 = getelementptr inbounds %union.anon, %union.anon* %42, i64 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %RDX.i = getelementptr inbounds %union.anon, %union.anon* %75, i64 0, i32 0
  store i64 56, i64* %RDX.i, align 8
  store i32 2, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RSI.i118, align 8
  %76 = add i64 %73, -118477
  %77 = add i64 %73, 49
  %78 = load i64, i64* %6, align 8
  %79 = add i64 %78, -8
  %80 = inttoptr i64 %79 to i64*
  store i64 %77, i64* %80, align 8
  store i64 %79, i64* %6, align 8
  store i64 %76, i64* %3, align 8
  %81 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41dc08)
  %82 = load i64, i64* %3, align 8
  %83 = add i64 %82, 19042
  %84 = add i64 %82, 5
  %85 = load i64, i64* %6, align 8
  %86 = add i64 %85, -8
  %87 = inttoptr i64 %86 to i64*
  store i64 %84, i64* %87, align 8
  store i64 %86, i64* %6, align 8
  store i64 %83, i64* %3, align 8
  %call2_41dc3e = tail call %struct.Memory* @sub_4226a0.init_game(%struct.State* %0, i64 %83, %struct.Memory* %81)
  %88 = load i64, i64* %3, align 8
  %89 = add i64 %88, 10685
  %90 = add i64 %88, 5
  %91 = load i64, i64* %6, align 8
  %92 = add i64 %91, -8
  %93 = inttoptr i64 %92 to i64*
  store i64 %90, i64* %93, align 8
  store i64 %92, i64* %6, align 8
  store i64 %89, i64* %3, align 8
  %call2_41dc43 = tail call %struct.Memory* @sub_420600.initialize_hash(%struct.State* %0, i64 %89, %struct.Memory* %call2_41dc3e)
  %94 = load i64, i64* %3, align 8
  %95 = add i64 %94, 10360
  %96 = add i64 %94, 5
  %97 = load i64, i64* %6, align 8
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %96, i64* %99, align 8
  store i64 %98, i64* %6, align 8
  store i64 %95, i64* %3, align 8
  %call2_41dc48 = tail call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64 %95, %struct.Memory* %call2_41dc43)
  %100 = load i64, i64* %3, align 8
  %101 = add i64 %100, -110653
  %102 = add i64 %100, 5
  %103 = load i64, i64* %6, align 8
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %102, i64* %105, align 8
  store i64 %104, i64* %6, align 8
  store i64 %101, i64* %3, align 8
  %call2_41dc4d = tail call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* %0, i64 %101, %struct.Memory* %call2_41dc48)
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX.i = bitcast %union.anon* %106 to i32*
  %RCX.i = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %107 = load i64, i64* %3, align 8
  store i64 0, i64* %RSI.i118, align 8
  store i64 0, i64* %RCX.i, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D.i = bitcast %union.anon* %108 to i32*
  %109 = getelementptr inbounds %union.anon, %union.anon* %108, i64 0, i32 0
  store i64 9600, i64* %RDX.i, align 8
  %110 = load i64, i64* %RBP.i, align 8
  %111 = add i64 %110, -24864
  store i64 %111, i64* %RAX.i, align 8
  store i64 14400, i64* %109, align 8
  store i64 14400, i64* %RDI.i176, align 8
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9.i = getelementptr inbounds %union.anon, %union.anon* %112, i64 0, i32 0
  %113 = add i64 %110, -15264
  store i64 %113, i64* %R9.i, align 8
  store i32 0, i32* bitcast (%G_0x880b10_type* @G_0x880b10 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62e4f0_type* @G_0x62e4f0 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62ea14_type* @G_0x62ea14 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x864508_type* @G_0x864508 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x8667a4_type* @G_0x8667a4 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886be4_type* @G_0x886be4 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62e510_type* @G_0x62e510 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*), align 8
  %114 = add i64 %110, -24880
  %115 = add i64 %107, 136
  store i64 %115, i64* %3, align 8
  %116 = inttoptr i64 %114 to i32*
  store i32 0, i32* %116, align 4
  %117 = load i64, i64* %3, align 8
  store i32 40, i32* bitcast (%G_0x8661d8_type* @G_0x8661d8 to i32*), align 8
  store i32 5, i32* bitcast (%G_0x86bd70_type* @G_0x86bd70 to i32*), align 8
  store i32 30000, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  store i32 2000, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  store i32 2000, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  store i32 40, i32* bitcast (%G_0x880b18_type* @G_0x880b18 to i32*), align 8
  store i32 200, i32* bitcast (%G_0x62ea18_type* @G_0x62ea18 to i32*), align 8
  store i32 1, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  store i32 1, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*), align 8
  %118 = load i64, i64* %RBP.i, align 8
  %119 = add i64 %118, -24884
  %120 = add i64 %117, 109
  store i64 %120, i64* %3, align 8
  %121 = inttoptr i64 %119 to i32*
  store i32 0, i32* %121, align 4
  %122 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  %123 = load i64, i64* %RBP.i, align 8
  %124 = add i64 %123, -856
  %125 = add i64 %122, 21
  store i64 %125, i64* %3, align 8
  %126 = inttoptr i64 %124 to i32*
  store i32 0, i32* %126, align 4
  %127 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %128 = load i64, i64* %RBP.i, align 8
  %129 = add i64 %128, -24872
  %130 = add i64 %127, 21
  store i64 %130, i64* %3, align 8
  %131 = inttoptr i64 %129 to i32*
  store i32 0, i32* %131, align 4
  %132 = load i64, i64* %RBP.i, align 8
  %133 = add i64 %132, -860
  %134 = load i64, i64* %3, align 8
  %135 = add i64 %134, 10
  store i64 %135, i64* %3, align 8
  %136 = inttoptr i64 %133 to i32*
  store i32 1, i32* %136, align 4
  %137 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  store i32 1, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  %138 = load i64, i64* %RBP.i, align 8
  %139 = add i64 %138, -24868
  %140 = add i64 %137, 43
  store i64 %140, i64* %3, align 8
  %141 = inttoptr i64 %139 to i32*
  store i32 0, i32* %141, align 4
  %142 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886a7c_type* @G_0x886a7c to i32*), align 8
  store i32 0, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886a60_type* @G_0x886a60 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886a78_type* @G_0x886a78 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x880654_type* @G_0x880654 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %143 = load i64, i64* %RBP.i, align 8
  %144 = add i64 %143, -24976
  %145 = load i64, i64* %RDI.i176, align 8
  %146 = add i64 %142, 95
  store i64 %146, i64* %3, align 8
  %147 = inttoptr i64 %144 to i64*
  store i64 %145, i64* %147, align 8
  %148 = load i64, i64* %R9.i, align 8
  %149 = load i64, i64* %3, align 8
  store i64 %148, i64* %RDI.i176, align 8
  %150 = load i64, i64* %RBP.i, align 8
  %151 = add i64 %150, -24984
  %152 = load i64, i64* %RSI.i118, align 8
  %153 = add i64 %149, 10
  store i64 %153, i64* %3, align 8
  %154 = inttoptr i64 %151 to i64*
  store i64 %152, i64* %154, align 8
  %155 = load i32, i32* %ECX.i, align 4
  %156 = zext i32 %155 to i64
  %157 = load i64, i64* %3, align 8
  store i64 %156, i64* %RSI.i118, align 8
  %158 = load i64, i64* %RBP.i, align 8
  %159 = add i64 %158, -24976
  %160 = add i64 %157, 9
  store i64 %160, i64* %3, align 8
  %161 = inttoptr i64 %159 to i64*
  %162 = load i64, i64* %161, align 8
  store i64 %162, i64* %R9.i, align 8
  %163 = add i64 %158, -24992
  %164 = load i64, i64* %RDX.i, align 8
  %165 = add i64 %157, 16
  store i64 %165, i64* %3, align 8
  %166 = inttoptr i64 %163 to i64*
  store i64 %164, i64* %166, align 8
  %167 = load i64, i64* %R9.i, align 8
  %168 = load i64, i64* %3, align 8
  store i64 %167, i64* %RDX.i, align 8
  %169 = load i64, i64* %RBP.i, align 8
  %170 = add i64 %169, -25000
  %171 = load i64, i64* %RAX.i, align 8
  %172 = add i64 %168, 10
  store i64 %172, i64* %3, align 8
  %173 = inttoptr i64 %170 to i64*
  store i64 %171, i64* %173, align 8
  %174 = load i64, i64* %RBP.i, align 8
  %175 = add i64 %174, -25004
  %176 = load i32, i32* %ECX.i, align 4
  %177 = load i64, i64* %3, align 8
  %178 = add i64 %177, 6
  store i64 %178, i64* %3, align 8
  %179 = inttoptr i64 %175 to i32*
  store i32 %176, i32* %179, align 4
  %180 = load i64, i64* %3, align 8
  %181 = add i64 %180, -119135
  %182 = add i64 %180, 5
  %183 = load i64, i64* %6, align 8
  %184 = add i64 %183, -8
  %185 = inttoptr i64 %184 to i64*
  store i64 %182, i64* %185, align 8
  store i64 %184, i64* %6, align 8
  store i64 %181, i64* %3, align 8
  %186 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %call2_41dc4d)
  %187 = load i64, i64* %RBP.i, align 8
  %188 = add i64 %187, -25000
  %189 = load i64, i64* %3, align 8
  %190 = add i64 %189, 7
  store i64 %190, i64* %3, align 8
  %191 = inttoptr i64 %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %RAX.i, align 8
  store i64 %192, i64* %RDI.i176, align 8
  %193 = add i64 %187, -25004
  %194 = add i64 %189, 16
  store i64 %194, i64* %3, align 8
  %195 = inttoptr i64 %193 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  store i64 %197, i64* %RSI.i118, align 8
  %198 = add i64 %187, -24992
  %199 = add i64 %189, 23
  store i64 %199, i64* %3, align 8
  %200 = inttoptr i64 %198 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %RDX.i, align 8
  %202 = add i64 %189, -119140
  %203 = add i64 %189, 28
  %204 = load i64, i64* %6, align 8
  %205 = add i64 %204, -8
  %206 = inttoptr i64 %205 to i64*
  store i64 %203, i64* %206, align 8
  store i64 %205, i64* %6, align 8
  store i64 %202, i64* %3, align 8
  %207 = tail call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %186)
  %208 = load i64, i64* %3, align 8
  %209 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %210 = zext i32 %209 to i64
  store i64 %210, i64* %RCX.i, align 8
  %211 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %212 = sext i32 %211 to i64
  store i64 %212, i64* %RAX.i, align 8
  %213 = shl nsw i64 %212, 2
  %214 = add nsw i64 %213, 8692688
  %215 = add i64 %208, 22
  store i64 %215, i64* %3, align 8
  %216 = inttoptr i64 %214 to i32*
  store i32 %209, i32* %216, align 4
  %217 = load i64, i64* %3, align 8
  %218 = load i64, i64* bitcast (%G_0x62da80_type* @G_0x62da80 to i64*), align 8
  store i64 %218, i64* %RDI.i176, align 8
  %219 = load i64, i64* %RBP.i, align 8
  %220 = add i64 %219, -24984
  %221 = add i64 %217, 15
  store i64 %221, i64* %3, align 8
  %222 = inttoptr i64 %220 to i64*
  %223 = load i64, i64* %222, align 8
  store i64 %223, i64* %RSI.i118, align 8
  %224 = add i64 %217, -119238
  %225 = add i64 %217, 20
  %226 = load i64, i64* %6, align 8
  %227 = add i64 %226, -8
  %228 = inttoptr i64 %227 to i64*
  store i64 %225, i64* %228, align 8
  store i64 %227, i64* %6, align 8
  store i64 %224, i64* %3, align 8
  %call2_41de75 = tail call %struct.Memory* @sub_400ca0.setbuf_plt(%struct.State* %0, i64 %224, %struct.Memory* %207)
  %229 = load i64, i64* %3, align 8
  store i64 0, i64* %RCX.i, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  store i64 0, i64* %RSI.i118, align 8
  %230 = load i64, i64* bitcast (%G_0x62da90_type* @G_0x62da90 to i64*), align 8
  store i64 %230, i64* %RDI.i176, align 8
  %231 = add i64 %229, -119258
  %232 = add i64 %229, 17
  %233 = load i64, i64* %6, align 8
  %234 = add i64 %233, -8
  %235 = inttoptr i64 %234 to i64*
  store i64 %232, i64* %235, align 8
  store i64 %234, i64* %6, align 8
  store i64 %231, i64* %3, align 8
  %call2_41de86 = tail call %struct.Memory* @sub_400ca0.setbuf_plt(%struct.State* %0, i64 %231, %struct.Memory* %call2_41de75)
  %236 = load i64, i64* %3, align 8
  %237 = add i64 %236, 25413
  %238 = add i64 %236, 5
  %239 = load i64, i64* %6, align 8
  %240 = add i64 %239, -8
  %241 = inttoptr i64 %240 to i64*
  store i64 %238, i64* %241, align 8
  store i64 %240, i64* %6, align 8
  store i64 %237, i64* %3, align 8
  %call2_41de8b = tail call %struct.Memory* @sub_4241d0.start_up(%struct.State* %0, i64 %237, %struct.Memory* %call2_41de86)
  %242 = load i64, i64* %RBP.i, align 8
  %243 = add i64 %242, -8
  %244 = load i64, i64* %3, align 8
  %245 = add i64 %244, 4
  store i64 %245, i64* %3, align 8
  %246 = inttoptr i64 %243 to i32*
  %247 = load i32, i32* %246, align 4
  %248 = add i32 %247, -2
  %249 = icmp ult i32 %247, 2
  %250 = zext i1 %249 to i8
  store i8 %250, i8* %14, align 1
  %251 = and i32 %248, 255
  %252 = tail call i32 @llvm.ctpop.i32(i32 %251)
  %253 = trunc i32 %252 to i8
  %254 = and i8 %253, 1
  %255 = xor i8 %254, 1
  store i8 %255, i8* %21, align 1
  %256 = xor i32 %248, %247
  %257 = lshr i32 %256, 4
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  store i8 %259, i8* %26, align 1
  %260 = icmp eq i32 %248, 0
  %261 = zext i1 %260 to i8
  store i8 %261, i8* %29, align 1
  %262 = lshr i32 %248, 31
  %263 = trunc i32 %262 to i8
  store i8 %263, i8* %32, align 1
  %264 = lshr i32 %247, 31
  %265 = xor i32 %262, %264
  %266 = add nuw nsw i32 %265, %264
  %267 = icmp eq i32 %266, 2
  %268 = zext i1 %267 to i8
  store i8 %268, i8* %38, align 1
  %.v251 = select i1 %260, i64 10, i64 46
  %269 = add i64 %244, %.v251
  store i64 %269, i64* %3, align 8
  br i1 %260, label %block_41de9a, label %entry.block_.L_41debe_crit_edge

entry.block_.L_41debe_crit_edge:                  ; preds = %entry
  %.pre246 = bitcast %union.anon* %74 to i32*
  %.pre247 = bitcast %union.anon* %74 to i8*
  br label %block_.L_41debe

block_41de9a:                                     ; preds = %entry
  store i64 ptrtoint (%G__0x42925b_type* @G__0x42925b to i64), i64* %RDI.i176, align 8
  %AL.i1874 = bitcast %union.anon* %74 to i8*
  store i8 0, i8* %AL.i1874, align 1
  %270 = add i64 %269, -119274
  %271 = add i64 %269, 17
  %272 = load i64, i64* %6, align 8
  %273 = add i64 %272, -8
  %274 = inttoptr i64 %273 to i64*
  store i64 %271, i64* %274, align 8
  store i64 %273, i64* %6, align 8
  store i64 %270, i64* %3, align 8
  %275 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41de8b)
  %276 = load i64, i64* %RBP.i, align 8
  %277 = add i64 %276, -16
  %278 = load i64, i64* %3, align 8
  %279 = add i64 %278, 4
  store i64 %279, i64* %3, align 8
  %280 = inttoptr i64 %277 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %RDI.i176, align 8
  %282 = add i64 %281, 8
  %283 = add i64 %278, 8
  store i64 %283, i64* %3, align 8
  %284 = inttoptr i64 %282 to i64*
  %285 = load i64, i64* %284, align 8
  store i64 %285, i64* %RDI.i176, align 8
  %EAX.i1953 = bitcast %union.anon* %74 to i32*
  %286 = add i64 %276, -25008
  %287 = load i32, i32* %EAX.i1953, align 4
  %288 = add i64 %278, 14
  store i64 %288, i64* %3, align 8
  %289 = inttoptr i64 %286 to i32*
  store i32 %287, i32* %289, align 4
  %290 = load i64, i64* %3, align 8
  %291 = add i64 %290, -107769
  %292 = add i64 %290, 5
  %293 = load i64, i64* %6, align 8
  %294 = add i64 %293, -8
  %295 = inttoptr i64 %294 to i64*
  store i64 %292, i64* %295, align 8
  store i64 %294, i64* %6, align 8
  store i64 %291, i64* %3, align 8
  %call2_41deb9 = tail call %struct.Memory* @sub_4039c0.run_autotest(%struct.State* nonnull %0, i64 %291, %struct.Memory* %275)
  %.pre = load i64, i64* %3, align 8
  br label %block_.L_41debe

block_.L_41debe:                                  ; preds = %entry.block_.L_41debe_crit_edge, %block_41de9a
  %AL.i.pre-phi = phi i8* [ %.pre247, %entry.block_.L_41debe_crit_edge ], [ %AL.i1874, %block_41de9a ]
  %EAX.i2261.pre-phi = phi i32* [ %.pre246, %entry.block_.L_41debe_crit_edge ], [ %EAX.i1953, %block_41de9a ]
  %296 = phi i64 [ %269, %entry.block_.L_41debe_crit_edge ], [ %.pre, %block_41de9a ]
  %MEMORY.0 = phi %struct.Memory* [ %call2_41de8b, %entry.block_.L_41debe_crit_edge ], [ %call2_41deb9, %block_41de9a ]
  %297 = add i64 %296, 5
  %ESI.i = bitcast %union.anon* %49 to i32*
  %298 = bitcast %union.anon* %74 to i64**
  %CL.i891 = bitcast %union.anon* %106 to i8*
  %EDX.i = bitcast %union.anon* %75 to i32*
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0, i32 0
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %302 = bitcast [32 x %union.VectorReg]* %301 to i8*
  %303 = bitcast [32 x %union.VectorReg]* %301 to double*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %306 = bitcast %union.VectorReg* %305 to i8*
  %307 = bitcast %union.VectorReg* %305 to <2 x i32>*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %309 = bitcast i64* %308 to <2 x i32>*
  %310 = bitcast %union.VectorReg* %305 to float*
  %311 = getelementptr inbounds i8, i8* %306, i64 4
  %312 = bitcast i8* %311 to i32*
  %313 = bitcast i64* %308 to i32*
  %314 = getelementptr inbounds i8, i8* %306, i64 12
  %315 = bitcast i8* %314 to i32*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %317 = bitcast %union.VectorReg* %316 to i8*
  %318 = bitcast %union.VectorReg* %316 to <2 x i32>*
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %320 = bitcast i64* %319 to <2 x i32>*
  %321 = bitcast %union.VectorReg* %316 to float*
  %322 = getelementptr inbounds i8, i8* %317, i64 4
  %323 = bitcast i8* %322 to i32*
  %324 = bitcast i64* %319 to i32*
  %325 = getelementptr inbounds i8, i8* %317, i64 12
  %326 = bitcast i8* %325 to i32*
  %327 = bitcast %union.VectorReg* %305 to <2 x float>*
  %328 = bitcast %union.VectorReg* %316 to <2 x float>*
  %329 = bitcast %union.VectorReg* %305 to double*
  %330 = bitcast i64* %304 to <2 x i32>*
  %331 = bitcast [32 x %union.VectorReg]* %301 to float*
  %332 = getelementptr inbounds i8, i8* %302, i64 4
  %333 = bitcast i8* %332 to i32*
  %334 = bitcast i64* %304 to i32*
  %335 = getelementptr inbounds i8, i8* %302, i64 12
  %336 = bitcast i8* %335 to i32*
  %337 = bitcast [32 x %union.VectorReg]* %301 to <2 x float>*
  %338 = bitcast [32 x %union.VectorReg]* %301 to i32*
  %339 = bitcast i64* %6 to i64**
  %340 = bitcast [32 x %union.VectorReg]* %301 to <2 x i32>*
  %341 = getelementptr inbounds %union.VectorReg, %union.VectorReg* %305, i64 0, i32 0, i32 0, i32 0, i64 0
  %342 = bitcast i64* %308 to double*
  %SIL.i3146 = bitcast %union.anon* %49 to i8*
  %343 = bitcast %union.VectorReg* %316 to i32*
  %344 = bitcast i8* %322 to float*
  %345 = bitcast i64* %319 to float*
  %346 = bitcast i8* %325 to float*
  %347 = bitcast %union.VectorReg* %305 to i32*
  %348 = bitcast i8* %311 to float*
  %349 = bitcast i64* %308 to float*
  %350 = bitcast i8* %314 to float*
  %R9B.i3075 = bitcast %union.anon* %112 to i8*
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3
  %352 = bitcast %union.VectorReg* %351 to i8*
  %353 = bitcast %union.VectorReg* %351 to i32*
  %354 = getelementptr inbounds i8, i8* %352, i64 4
  %355 = bitcast i8* %354 to float*
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3, i32 0, i32 0, i32 0, i64 1
  %357 = bitcast i64* %356 to float*
  %358 = getelementptr inbounds i8, i8* %352, i64 12
  %359 = bitcast i8* %358 to float*
  %360 = bitcast %union.VectorReg* %351 to <2 x float>*
  %361 = bitcast i64* %304 to <2 x i32>*
  %362 = bitcast i64* %308 to <2 x i32>*
  br label %block_.L_41dec3

block_.L_41dec3:                                  ; preds = %block_.L_41dec3.backedge, %block_.L_41debe
  %.sink = phi i64 [ %297, %block_.L_41debe ], [ %.sink.be, %block_.L_41dec3.backedge ]
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.0, %block_.L_41debe ], [ %MEMORY.1.be, %block_.L_41dec3.backedge ]
  %363 = load i64, i64* %RBP.i, align 8
  %364 = add i64 %363, -24868
  %365 = add i64 %.sink, 7
  store i64 %365, i64* %3, align 8
  %366 = inttoptr i64 %364 to i32*
  %367 = load i32, i32* %366, align 4
  store i8 0, i8* %14, align 1
  %368 = and i32 %367, 255
  %369 = tail call i32 @llvm.ctpop.i32(i32 %368)
  %370 = trunc i32 %369 to i8
  %371 = and i8 %370, 1
  %372 = xor i8 %371, 1
  store i8 %372, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %373 = icmp eq i32 %367, 0
  %374 = zext i1 %373 to i8
  store i8 %374, i8* %29, align 1
  %375 = lshr i32 %367, 31
  %376 = trunc i32 %375 to i8
  store i8 %376, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v252 = select i1 %373, i64 13, i64 2290
  %377 = add i64 %.sink, %.v252
  store i64 %377, i64* %3, align 8
  br i1 %373, label %block_41ded0, label %block_.L_41e7b5

block_41ded0:                                     ; preds = %block_.L_41dec3
  %378 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %379 = zext i32 %378 to i64
  store i64 %379, i64* %RAX.i, align 8
  %380 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  %381 = sub i32 %378, %380
  %382 = icmp ult i32 %378, %380
  %383 = zext i1 %382 to i8
  store i8 %383, i8* %14, align 1
  %384 = and i32 %381, 255
  %385 = tail call i32 @llvm.ctpop.i32(i32 %384)
  %386 = trunc i32 %385 to i8
  %387 = and i8 %386, 1
  %388 = xor i8 %387, 1
  store i8 %388, i8* %21, align 1
  %389 = xor i32 %380, %378
  %390 = xor i32 %389, %381
  %391 = lshr i32 %390, 4
  %392 = trunc i32 %391 to i8
  %393 = and i8 %392, 1
  store i8 %393, i8* %26, align 1
  %394 = icmp eq i32 %381, 0
  %395 = zext i1 %394 to i8
  store i8 %395, i8* %29, align 1
  %396 = lshr i32 %381, 31
  %397 = trunc i32 %396 to i8
  store i8 %397, i8* %32, align 1
  %398 = lshr i32 %378, 31
  %399 = lshr i32 %380, 31
  %400 = xor i32 %399, %398
  %401 = xor i32 %396, %398
  %402 = add nuw nsw i32 %401, %400
  %403 = icmp eq i32 %402, 2
  %404 = zext i1 %403 to i8
  store i8 %404, i8* %38, align 1
  %.v346 = select i1 %394, i64 33, i64 20
  %405 = add i64 %377, %.v346
  store i64 %405, i64* %3, align 8
  br i1 %394, label %block_.L_41def1, label %block_41dee4

block_41dee4:                                     ; preds = %block_41ded0
  %406 = add i64 %363, -24884
  %407 = add i64 %405, 7
  store i64 %407, i64* %3, align 8
  %408 = inttoptr i64 %406 to i32*
  %409 = load i32, i32* %408, align 4
  store i8 0, i8* %14, align 1
  %410 = and i32 %409, 255
  %411 = tail call i32 @llvm.ctpop.i32(i32 %410)
  %412 = trunc i32 %411 to i8
  %413 = and i8 %412, 1
  %414 = xor i8 %413, 1
  store i8 %414, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %415 = icmp eq i32 %409, 0
  %416 = zext i1 %415 to i8
  store i8 %416, i8* %29, align 1
  %417 = lshr i32 %409, 31
  %418 = trunc i32 %417 to i8
  store i8 %418, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v347 = select i1 %415, i64 2257, i64 13
  %419 = add i64 %405, %.v347
  store i64 %419, i64* %3, align 8
  br i1 %415, label %block_.L_41e7b5, label %block_.L_41def1

block_.L_41def1:                                  ; preds = %block_41dee4, %block_41ded0
  %420 = phi i64 [ %419, %block_41dee4 ], [ %405, %block_41ded0 ]
  %421 = add i64 %363, -856
  %422 = add i64 %420, 7
  store i64 %422, i64* %3, align 8
  %423 = inttoptr i64 %421 to i32*
  %424 = load i32, i32* %423, align 4
  store i8 0, i8* %14, align 1
  %425 = and i32 %424, 255
  %426 = tail call i32 @llvm.ctpop.i32(i32 %425)
  %427 = trunc i32 %426 to i8
  %428 = and i8 %427, 1
  %429 = xor i8 %428, 1
  store i8 %429, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %430 = icmp eq i32 %424, 0
  %431 = zext i1 %430 to i8
  store i8 %431, i8* %29, align 1
  %432 = lshr i32 %424, 31
  %433 = trunc i32 %432 to i8
  store i8 %433, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v348 = select i1 %430, i64 13, i64 2244
  %434 = add i64 %420, %.v348
  store i64 %434, i64* %3, align 8
  br i1 %430, label %block_41defe, label %block_.L_41e7b5

block_41defe:                                     ; preds = %block_.L_41def1
  %435 = load i32, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  store i8 0, i8* %14, align 1
  %436 = and i32 %435, 255
  %437 = tail call i32 @llvm.ctpop.i32(i32 %436)
  %438 = trunc i32 %437 to i8
  %439 = and i8 %438, 1
  %440 = xor i8 %439, 1
  store i8 %440, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %441 = icmp eq i32 %435, 0
  %442 = zext i1 %441 to i8
  store i8 %442, i8* %29, align 1
  %443 = lshr i32 %435, 31
  %444 = trunc i32 %443 to i8
  store i8 %444, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v349 = select i1 %441, i64 14, i64 2231
  %445 = add i64 %434, %.v349
  store i64 %445, i64* %3, align 8
  br i1 %441, label %block_41df0c, label %block_.L_41e7b5

block_41df0c:                                     ; preds = %block_41defe
  %446 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  store i8 0, i8* %14, align 1
  %447 = and i32 %446, 255
  %448 = tail call i32 @llvm.ctpop.i32(i32 %447)
  %449 = trunc i32 %448 to i8
  %450 = and i8 %449, 1
  %451 = xor i8 %450, 1
  store i8 %451, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %452 = icmp eq i32 %446, 0
  %453 = zext i1 %452 to i8
  store i8 %453, i8* %29, align 1
  %454 = lshr i32 %446, 31
  %455 = trunc i32 %454 to i8
  store i8 %455, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v350 = select i1 %452, i64 14, i64 2217
  %456 = add i64 %445, %.v350
  store i64 %456, i64* %3, align 8
  br i1 %452, label %block_41df1a, label %block_.L_41e7b5

block_41df1a:                                     ; preds = %block_41df0c
  %457 = add i64 %363, -24920
  store i64 %457, i64* %RDI.i176, align 8
  store i32 0, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  %458 = add i64 %456, -13786
  %459 = add i64 %456, 23
  %460 = load i64, i64* %6, align 8
  %461 = add i64 %460, -8
  %462 = inttoptr i64 %461 to i64*
  store i64 %459, i64* %462, align 8
  store i64 %461, i64* %6, align 8
  store i64 %458, i64* %3, align 8
  %call2_41df2c = tail call %struct.Memory* @sub_41a940.think(%struct.State* nonnull %0, i64 %458, %struct.Memory* %MEMORY.1)
  %463 = load i64, i64* %RBP.i, align 8
  %464 = add i64 %463, -24920
  %465 = load i64, i64* %3, align 8
  %466 = add i64 %465, 7
  store i64 %466, i64* %3, align 8
  %467 = inttoptr i64 %464 to i64*
  %468 = load i64, i64* %467, align 8
  store i64 %468, i64* %RDI.i176, align 8
  %469 = add i64 %463, -848
  %470 = add i64 %465, 14
  store i64 %470, i64* %3, align 8
  %471 = inttoptr i64 %469 to i64*
  store i64 %468, i64* %471, align 8
  %472 = load i64, i64* %RBP.i, align 8
  %473 = add i64 %472, -24912
  %474 = load i64, i64* %3, align 8
  %475 = add i64 %474, 7
  store i64 %475, i64* %3, align 8
  %476 = inttoptr i64 %473 to i64*
  %477 = load i64, i64* %476, align 8
  store i64 %477, i64* %RDI.i176, align 8
  %478 = add i64 %472, -840
  %479 = add i64 %474, 14
  store i64 %479, i64* %3, align 8
  %480 = inttoptr i64 %478 to i64*
  store i64 %477, i64* %480, align 8
  %481 = load i64, i64* %RBP.i, align 8
  %482 = add i64 %481, -24904
  %483 = load i64, i64* %3, align 8
  %484 = add i64 %483, 7
  store i64 %484, i64* %3, align 8
  %485 = inttoptr i64 %482 to i64*
  %486 = load i64, i64* %485, align 8
  store i64 %486, i64* %RDI.i176, align 8
  %487 = add i64 %481, -832
  %488 = add i64 %483, 14
  store i64 %488, i64* %3, align 8
  %489 = inttoptr i64 %487 to i64*
  store i64 %486, i64* %489, align 8
  %490 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*), align 8
  %491 = load i32, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  store i8 0, i8* %14, align 1
  %492 = and i32 %491, 255
  %493 = tail call i32 @llvm.ctpop.i32(i32 %492)
  %494 = trunc i32 %493 to i8
  %495 = and i8 %494, 1
  %496 = xor i8 %495, 1
  store i8 %496, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %497 = icmp eq i32 %491, 0
  %498 = zext i1 %497 to i8
  store i8 %498, i8* %29, align 1
  %499 = lshr i32 %491, 31
  %500 = trunc i32 %499 to i8
  store i8 %500, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v351 = select i1 %497, i64 39, i64 25
  %501 = add i64 %490, %.v351
  store i64 %501, i64* %3, align 8
  br i1 %497, label %block_.L_41df82, label %block_41df74

block_41df74:                                     ; preds = %block_41df1a
  %502 = load i32, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  store i8 0, i8* %14, align 1
  %503 = and i32 %502, 255
  %504 = tail call i32 @llvm.ctpop.i32(i32 %503)
  %505 = trunc i32 %504 to i8
  %506 = and i8 %505, 1
  %507 = xor i8 %506, 1
  store i8 %507, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %508 = icmp eq i32 %502, 0
  %509 = zext i1 %508 to i8
  store i8 %509, i8* %29, align 1
  %510 = lshr i32 %502, 31
  %511 = trunc i32 %510 to i8
  store i8 %511, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v352 = select i1 %508, i64 2108, i64 14
  %512 = add i64 %501, %.v352
  store i64 %512, i64* %3, align 8
  br i1 %508, label %block_.L_41e7b0, label %block_.L_41df82

block_.L_41df82:                                  ; preds = %block_41df74, %block_41df1a
  %513 = phi i64 [ %512, %block_41df74 ], [ %501, %block_41df1a ]
  %514 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %515 = add i32 %514, -4
  %516 = icmp ult i32 %514, 4
  %517 = zext i1 %516 to i8
  store i8 %517, i8* %14, align 1
  %518 = and i32 %515, 255
  %519 = tail call i32 @llvm.ctpop.i32(i32 %518)
  %520 = trunc i32 %519 to i8
  %521 = and i8 %520, 1
  %522 = xor i8 %521, 1
  store i8 %522, i8* %21, align 1
  %523 = xor i32 %515, %514
  %524 = lshr i32 %523, 4
  %525 = trunc i32 %524 to i8
  %526 = and i8 %525, 1
  store i8 %526, i8* %26, align 1
  %527 = icmp eq i32 %515, 0
  %528 = zext i1 %527 to i8
  store i8 %528, i8* %29, align 1
  %529 = lshr i32 %515, 31
  %530 = trunc i32 %529 to i8
  store i8 %530, i8* %32, align 1
  %531 = lshr i32 %514, 31
  %532 = xor i32 %529, %531
  %533 = add nuw nsw i32 %532, %531
  %534 = icmp eq i32 %533, 2
  %535 = zext i1 %534 to i8
  store i8 %535, i8* %38, align 1
  %.v353 = select i1 %527, i64 28, i64 14
  %536 = add i64 %513, %.v353
  store i64 %536, i64* %3, align 8
  br i1 %527, label %block_.L_41df9e, label %block_41df90

block_41df90:                                     ; preds = %block_.L_41df82
  %537 = add i32 %514, -3
  %538 = icmp ult i32 %514, 3
  %539 = zext i1 %538 to i8
  store i8 %539, i8* %14, align 1
  %540 = and i32 %537, 255
  %541 = tail call i32 @llvm.ctpop.i32(i32 %540)
  %542 = trunc i32 %541 to i8
  %543 = and i8 %542, 1
  %544 = xor i8 %543, 1
  store i8 %544, i8* %21, align 1
  %545 = xor i32 %537, %514
  %546 = lshr i32 %545, 4
  %547 = trunc i32 %546 to i8
  %548 = and i8 %547, 1
  store i8 %548, i8* %26, align 1
  %549 = icmp eq i32 %537, 0
  %550 = zext i1 %549 to i8
  store i8 %550, i8* %29, align 1
  %551 = lshr i32 %537, 31
  %552 = trunc i32 %551 to i8
  store i8 %552, i8* %32, align 1
  %553 = xor i32 %551, %531
  %554 = add nuw nsw i32 %553, %531
  %555 = icmp eq i32 %554, 2
  %556 = zext i1 %555 to i8
  store i8 %556, i8* %38, align 1
  %.v354 = select i1 %549, i64 14, i64 42
  %557 = add i64 %536, %.v354
  store i64 %557, i64* %3, align 8
  br i1 %549, label %block_.L_41df9e, label %block_.L_41dfba

block_.L_41df9e:                                  ; preds = %block_41df90, %block_.L_41df82
  %558 = phi i64 [ %557, %block_41df90 ], [ %536, %block_.L_41df82 ]
  %559 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %560 = add i32 %559, -2
  %561 = icmp ult i32 %559, 2
  %562 = zext i1 %561 to i8
  store i8 %562, i8* %14, align 1
  %563 = and i32 %560, 255
  %564 = tail call i32 @llvm.ctpop.i32(i32 %563)
  %565 = trunc i32 %564 to i8
  %566 = and i8 %565, 1
  %567 = xor i8 %566, 1
  store i8 %567, i8* %21, align 1
  %568 = xor i32 %560, %559
  %569 = lshr i32 %568, 4
  %570 = trunc i32 %569 to i8
  %571 = and i8 %570, 1
  store i8 %571, i8* %26, align 1
  %572 = icmp eq i32 %560, 0
  %573 = zext i1 %572 to i8
  store i8 %573, i8* %29, align 1
  %574 = lshr i32 %560, 31
  %575 = trunc i32 %574 to i8
  store i8 %575, i8* %32, align 1
  %576 = lshr i32 %559, 31
  %577 = xor i32 %574, %576
  %578 = add nuw nsw i32 %577, %576
  %579 = icmp eq i32 %578, 2
  %580 = zext i1 %579 to i8
  store i8 %580, i8* %38, align 1
  %.v386 = select i1 %572, i64 28, i64 14
  %581 = add i64 %558, %.v386
  store i64 %581, i64* %3, align 8
  br i1 %572, label %block_.L_41dfba, label %block_41dfac

block_41dfac:                                     ; preds = %block_.L_41df9e
  %582 = add i32 %559, -3
  %583 = icmp ult i32 %559, 3
  %584 = zext i1 %583 to i8
  store i8 %584, i8* %14, align 1
  %585 = and i32 %582, 255
  %586 = tail call i32 @llvm.ctpop.i32(i32 %585)
  %587 = trunc i32 %586 to i8
  %588 = and i8 %587, 1
  %589 = xor i8 %588, 1
  store i8 %589, i8* %21, align 1
  %590 = xor i32 %582, %559
  %591 = lshr i32 %590, 4
  %592 = trunc i32 %591 to i8
  %593 = and i8 %592, 1
  store i8 %593, i8* %26, align 1
  %594 = icmp eq i32 %582, 0
  %595 = zext i1 %594 to i8
  store i8 %595, i8* %29, align 1
  %596 = lshr i32 %582, 31
  %597 = trunc i32 %596 to i8
  store i8 %597, i8* %32, align 1
  %598 = xor i32 %596, %576
  %599 = add nuw nsw i32 %598, %576
  %600 = icmp eq i32 %599, 2
  %601 = zext i1 %600 to i8
  store i8 %601, i8* %38, align 1
  %.v387 = select i1 %594, i64 14, i64 112
  %602 = add i64 %581, %.v387
  store i64 %602, i64* %3, align 8
  br i1 %594, label %block_.L_41dfba, label %block_.L_41e01c

block_.L_41dfba:                                  ; preds = %block_41dfac, %block_41df90, %block_.L_41df9e
  %603 = phi i64 [ %602, %block_41dfac ], [ %581, %block_.L_41df9e ], [ %557, %block_41df90 ]
  %604 = add i32 %514, -2
  %605 = icmp ult i32 %514, 2
  %606 = zext i1 %605 to i8
  store i8 %606, i8* %14, align 1
  %607 = and i32 %604, 255
  %608 = tail call i32 @llvm.ctpop.i32(i32 %607)
  %609 = trunc i32 %608 to i8
  %610 = and i8 %609, 1
  %611 = xor i8 %610, 1
  store i8 %611, i8* %21, align 1
  %612 = xor i32 %604, %514
  %613 = lshr i32 %612, 4
  %614 = trunc i32 %613 to i8
  %615 = and i8 %614, 1
  store i8 %615, i8* %26, align 1
  %616 = icmp eq i32 %604, 0
  %617 = zext i1 %616 to i8
  store i8 %617, i8* %29, align 1
  %618 = lshr i32 %604, 31
  %619 = trunc i32 %618 to i8
  store i8 %619, i8* %32, align 1
  %620 = xor i32 %618, %531
  %621 = add nuw nsw i32 %620, %531
  %622 = icmp eq i32 %621, 2
  %623 = zext i1 %622 to i8
  store i8 %623, i8* %38, align 1
  %.v355 = select i1 %616, i64 42, i64 14
  %624 = add i64 %603, %.v355
  store i64 %624, i64* %3, align 8
  br i1 %616, label %block_.L_41dfe4, label %block_41dfc8

block_41dfc8:                                     ; preds = %block_.L_41dfba
  store i8 0, i8* %14, align 1
  %625 = and i32 %514, 255
  %626 = tail call i32 @llvm.ctpop.i32(i32 %625)
  %627 = trunc i32 %626 to i8
  %628 = and i8 %627, 1
  %629 = xor i8 %628, 1
  store i8 %629, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %630 = icmp eq i32 %514, 0
  %631 = zext i1 %630 to i8
  store i8 %631, i8* %29, align 1
  %632 = trunc i32 %531 to i8
  store i8 %632, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v356 = select i1 %630, i64 28, i64 14
  %633 = add i64 %624, %.v356
  store i64 %633, i64* %3, align 8
  br i1 %630, label %block_.L_41dfe4, label %block_41dfd6

block_41dfd6:                                     ; preds = %block_41dfc8
  %634 = add i32 %514, -1
  store i8 0, i8* %14, align 1
  %635 = and i32 %634, 255
  %636 = tail call i32 @llvm.ctpop.i32(i32 %635)
  %637 = trunc i32 %636 to i8
  %638 = and i8 %637, 1
  %639 = xor i8 %638, 1
  store i8 %639, i8* %21, align 1
  %640 = xor i32 %634, %514
  %641 = lshr i32 %640, 4
  %642 = trunc i32 %641 to i8
  %643 = and i8 %642, 1
  store i8 %643, i8* %26, align 1
  %644 = icmp eq i32 %634, 0
  %645 = zext i1 %644 to i8
  store i8 %645, i8* %29, align 1
  %646 = lshr i32 %634, 31
  %647 = trunc i32 %646 to i8
  store i8 %647, i8* %32, align 1
  %648 = xor i32 %646, %531
  %649 = add nuw nsw i32 %648, %531
  %650 = icmp eq i32 %649, 2
  %651 = zext i1 %650 to i8
  store i8 %651, i8* %38, align 1
  %.v357 = select i1 %644, i64 14, i64 1789
  %652 = add i64 %633, %.v357
  store i64 %652, i64* %3, align 8
  br i1 %644, label %block_.L_41dfe4, label %block_.L_41e6d3

block_.L_41dfe4:                                  ; preds = %block_41dfd6, %block_41dfc8, %block_.L_41dfba
  %653 = phi i64 [ %652, %block_41dfd6 ], [ %633, %block_41dfc8 ], [ %624, %block_.L_41dfba ]
  %654 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %655 = add i32 %654, -1
  %656 = icmp eq i32 %654, 0
  %657 = zext i1 %656 to i8
  store i8 %657, i8* %14, align 1
  %658 = and i32 %655, 255
  %659 = tail call i32 @llvm.ctpop.i32(i32 %658)
  %660 = trunc i32 %659 to i8
  %661 = and i8 %660, 1
  %662 = xor i8 %661, 1
  store i8 %662, i8* %21, align 1
  %663 = xor i32 %655, %654
  %664 = lshr i32 %663, 4
  %665 = trunc i32 %664 to i8
  %666 = and i8 %665, 1
  store i8 %666, i8* %26, align 1
  %667 = icmp eq i32 %655, 0
  %668 = zext i1 %667 to i8
  store i8 %668, i8* %29, align 1
  %669 = lshr i32 %655, 31
  %670 = trunc i32 %669 to i8
  store i8 %670, i8* %32, align 1
  %671 = lshr i32 %654, 31
  %672 = xor i32 %669, %671
  %673 = add nuw nsw i32 %672, %671
  %674 = icmp eq i32 %673, 2
  %675 = zext i1 %674 to i8
  store i8 %675, i8* %38, align 1
  %.v362 = select i1 %667, i64 14, i64 28
  %676 = add i64 %653, %.v362
  store i64 %676, i64* %3, align 8
  br i1 %667, label %block_41dff2, label %block_.L_41e000

block_41dff2:                                     ; preds = %block_.L_41dfe4
  %677 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %678 = add i32 %677, -2
  %679 = icmp ult i32 %677, 2
  %680 = zext i1 %679 to i8
  store i8 %680, i8* %14, align 1
  %681 = and i32 %678, 255
  %682 = tail call i32 @llvm.ctpop.i32(i32 %681)
  %683 = trunc i32 %682 to i8
  %684 = and i8 %683, 1
  %685 = xor i8 %684, 1
  store i8 %685, i8* %21, align 1
  %686 = xor i32 %678, %677
  %687 = lshr i32 %686, 4
  %688 = trunc i32 %687 to i8
  %689 = and i8 %688, 1
  store i8 %689, i8* %26, align 1
  %690 = icmp eq i32 %678, 0
  %691 = zext i1 %690 to i8
  store i8 %691, i8* %29, align 1
  %692 = lshr i32 %678, 31
  %693 = trunc i32 %692 to i8
  store i8 %693, i8* %32, align 1
  %694 = lshr i32 %677, 31
  %695 = xor i32 %692, %694
  %696 = add nuw nsw i32 %695, %694
  %697 = icmp eq i32 %696, 2
  %698 = zext i1 %697 to i8
  store i8 %698, i8* %38, align 1
  %.v385 = select i1 %690, i64 14, i64 42
  %699 = add i64 %676, %.v385
  store i64 %699, i64* %3, align 8
  br i1 %690, label %block_.L_41e000, label %block_.L_41e01c

block_.L_41e000:                                  ; preds = %block_41dff2, %block_.L_41dfe4
  %700 = phi i64 [ %699, %block_41dff2 ], [ %676, %block_.L_41dfe4 ]
  store i8 0, i8* %14, align 1
  %701 = and i32 %654, 255
  %702 = tail call i32 @llvm.ctpop.i32(i32 %701)
  %703 = trunc i32 %702 to i8
  %704 = and i8 %703, 1
  %705 = xor i8 %704, 1
  store i8 %705, i8* %21, align 1
  store i8 0, i8* %26, align 1
  store i8 %657, i8* %29, align 1
  %706 = trunc i32 %671 to i8
  store i8 %706, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v363 = select i1 %656, i64 14, i64 1747
  %707 = add i64 %700, %.v363
  store i64 %707, i64* %3, align 8
  br i1 %656, label %block_41e00e, label %block_.L_41e6d3

block_41e00e:                                     ; preds = %block_.L_41e000
  %708 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %709 = add i32 %708, -3
  %710 = icmp ult i32 %708, 3
  %711 = zext i1 %710 to i8
  store i8 %711, i8* %14, align 1
  %712 = and i32 %709, 255
  %713 = tail call i32 @llvm.ctpop.i32(i32 %712)
  %714 = trunc i32 %713 to i8
  %715 = and i8 %714, 1
  %716 = xor i8 %715, 1
  store i8 %716, i8* %21, align 1
  %717 = xor i32 %709, %708
  %718 = lshr i32 %717, 4
  %719 = trunc i32 %718 to i8
  %720 = and i8 %719, 1
  store i8 %720, i8* %26, align 1
  %721 = icmp eq i32 %709, 0
  %722 = zext i1 %721 to i8
  store i8 %722, i8* %29, align 1
  %723 = lshr i32 %709, 31
  %724 = trunc i32 %723 to i8
  store i8 %724, i8* %32, align 1
  %725 = lshr i32 %708, 31
  %726 = xor i32 %723, %725
  %727 = add nuw nsw i32 %726, %725
  %728 = icmp eq i32 %727, 2
  %729 = zext i1 %728 to i8
  store i8 %729, i8* %38, align 1
  %.v364 = select i1 %721, i64 1733, i64 14
  %730 = add i64 %707, %.v364
  store i64 %730, i64* %3, align 8
  br i1 %721, label %block_.L_41e6d3, label %block_.L_41e01c

block_.L_41e01c:                                  ; preds = %block_41dff2, %block_41dfac, %block_41e00e
  %731 = phi i32 [ %708, %block_41e00e ], [ %677, %block_41dff2 ], [ %559, %block_41dfac ]
  %732 = phi i64 [ %730, %block_41e00e ], [ %699, %block_41dff2 ], [ %602, %block_41dfac ]
  %733 = add i32 %731, -1
  %734 = icmp eq i32 %731, 0
  %735 = zext i1 %734 to i8
  store i8 %735, i8* %14, align 1
  %736 = and i32 %733, 255
  %737 = tail call i32 @llvm.ctpop.i32(i32 %736)
  %738 = trunc i32 %737 to i8
  %739 = and i8 %738, 1
  %740 = xor i8 %739, 1
  store i8 %740, i8* %21, align 1
  %741 = xor i32 %733, %731
  %742 = lshr i32 %741, 4
  %743 = trunc i32 %742 to i8
  %744 = and i8 %743, 1
  store i8 %744, i8* %26, align 1
  %745 = icmp eq i32 %733, 0
  %746 = zext i1 %745 to i8
  store i8 %746, i8* %29, align 1
  %747 = lshr i32 %733, 31
  %748 = trunc i32 %747 to i8
  store i8 %748, i8* %32, align 1
  %749 = lshr i32 %731, 31
  %750 = xor i32 %747, %749
  %751 = add nuw nsw i32 %750, %749
  %752 = icmp eq i32 %751, 2
  %753 = zext i1 %752 to i8
  store i8 %753, i8* %38, align 1
  %.v365 = select i1 %745, i64 1719, i64 14
  %754 = add i64 %732, %.v365
  store i64 %754, i64* %3, align 8
  br i1 %745, label %block_.L_41e6d3, label %block_41e02a

block_41e02a:                                     ; preds = %block_.L_41e01c
  %755 = add i32 %731, -4
  %756 = icmp ult i32 %731, 4
  %757 = zext i1 %756 to i8
  store i8 %757, i8* %14, align 1
  %758 = and i32 %755, 255
  %759 = tail call i32 @llvm.ctpop.i32(i32 %758)
  %760 = trunc i32 %759 to i8
  %761 = and i8 %760, 1
  %762 = xor i8 %761, 1
  store i8 %762, i8* %21, align 1
  %763 = xor i32 %755, %731
  %764 = lshr i32 %763, 4
  %765 = trunc i32 %764 to i8
  %766 = and i8 %765, 1
  store i8 %766, i8* %26, align 1
  %767 = icmp eq i32 %755, 0
  %768 = zext i1 %767 to i8
  store i8 %768, i8* %29, align 1
  %769 = lshr i32 %755, 31
  %770 = trunc i32 %769 to i8
  store i8 %770, i8* %32, align 1
  %771 = xor i32 %769, %749
  %772 = add nuw nsw i32 %771, %749
  %773 = icmp eq i32 %772, 2
  %774 = zext i1 %773 to i8
  store i8 %774, i8* %38, align 1
  %.v366 = select i1 %767, i64 1705, i64 14
  %775 = add i64 %754, %.v366
  store i64 %775, i64* %3, align 8
  br i1 %767, label %block_.L_41e6d3, label %block_41e038

block_41e038:                                     ; preds = %block_41e02a
  %776 = add i32 %731, -5
  %777 = icmp ult i32 %731, 5
  %778 = zext i1 %777 to i8
  store i8 %778, i8* %14, align 1
  %779 = and i32 %776, 255
  %780 = tail call i32 @llvm.ctpop.i32(i32 %779)
  %781 = trunc i32 %780 to i8
  %782 = and i8 %781, 1
  %783 = xor i8 %782, 1
  store i8 %783, i8* %21, align 1
  %784 = xor i32 %776, %731
  %785 = lshr i32 %784, 4
  %786 = trunc i32 %785 to i8
  %787 = and i8 %786, 1
  store i8 %787, i8* %26, align 1
  %788 = icmp eq i32 %776, 0
  %789 = zext i1 %788 to i8
  store i8 %789, i8* %29, align 1
  %790 = lshr i32 %776, 31
  %791 = trunc i32 %790 to i8
  store i8 %791, i8* %32, align 1
  %792 = xor i32 %790, %749
  %793 = add nuw nsw i32 %792, %749
  %794 = icmp eq i32 %793, 2
  %795 = zext i1 %794 to i8
  store i8 %795, i8* %38, align 1
  %.v367 = select i1 %788, i64 1691, i64 14
  %796 = add i64 %775, %.v367
  store i64 %796, i64* %3, align 8
  br i1 %788, label %block_.L_41e6d3, label %block_41e046

block_41e046:                                     ; preds = %block_41e038
  %797 = load i64, i64* %RBP.i, align 8
  %798 = add i64 %797, -848
  store i64 %798, i64* %RAX.i, align 8
  %799 = add i64 %797, -544
  store i64 %799, i64* %RDI.i176, align 8
  %.cast = inttoptr i64 %798 to i64*
  %800 = add i64 %796, 17
  store i64 %800, i64* %3, align 8
  %801 = load i64, i64* %.cast, align 8
  store i64 %801, i64* %RCX.i, align 8
  %802 = load i64*, i64** %339, align 8
  %803 = add i64 %796, 21
  store i64 %803, i64* %3, align 8
  store i64 %801, i64* %802, align 8
  %804 = load i64, i64* %RAX.i, align 8
  %805 = add i64 %804, 8
  %806 = load i64, i64* %3, align 8
  %807 = add i64 %806, 4
  store i64 %807, i64* %3, align 8
  %808 = inttoptr i64 %805 to i64*
  %809 = load i64, i64* %808, align 8
  store i64 %809, i64* %RCX.i, align 8
  %810 = load i64, i64* %6, align 8
  %811 = add i64 %810, 8
  %812 = add i64 %806, 9
  store i64 %812, i64* %3, align 8
  %813 = inttoptr i64 %811 to i64*
  store i64 %809, i64* %813, align 8
  %814 = load i64, i64* %RAX.i, align 8
  %815 = add i64 %814, 16
  %816 = load i64, i64* %3, align 8
  %817 = add i64 %816, 4
  store i64 %817, i64* %3, align 8
  %818 = inttoptr i64 %815 to i64*
  %819 = load i64, i64* %818, align 8
  store i64 %819, i64* %RAX.i, align 8
  %820 = load i64, i64* %6, align 8
  %821 = add i64 %820, 16
  %822 = add i64 %816, 9
  store i64 %822, i64* %3, align 8
  %823 = inttoptr i64 %821 to i64*
  store i64 %819, i64* %823, align 8
  %824 = load i64, i64* %3, align 8
  %825 = add i64 %824, 16675
  %826 = add i64 %824, 5
  %827 = load i64, i64* %6, align 8
  %828 = add i64 %827, -8
  %829 = inttoptr i64 %828 to i64*
  store i64 %826, i64* %829, align 8
  store i64 %828, i64* %6, align 8
  store i64 %825, i64* %3, align 8
  %call2_41e06d = tail call %struct.Memory* @sub_422190.comp_to_coord(%struct.State* nonnull %0, i64 %825, %struct.Memory* %MEMORY.1)
  %830 = load i64, i64* %RBP.i, align 8
  %831 = add i64 %830, -848
  %832 = load i64, i64* %3, align 8
  store i64 %831, i64* %RDI.i176, align 8
  store i64 0, i64* %RSI.i118, align 8
  %833 = add i64 %830, -15264
  store i64 %833, i64* %RAX.i, align 8
  %834 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %835 = zext i32 %834 to i64
  store i64 %835, i64* %RDX.i, align 8
  %836 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %837 = sext i32 %836 to i64
  %838 = shl nsw i64 %837, 2
  %839 = add nsw i64 %838, 8692688
  %840 = add i64 %832, 38
  store i64 %840, i64* %3, align 8
  %841 = inttoptr i64 %839 to i32*
  store i32 %834, i32* %841, align 4
  %842 = load i64, i64* %3, align 8
  %843 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %844 = sext i32 %843 to i64
  %845 = mul nsw i64 %844, 24
  store i64 %845, i64* %RCX.i, align 8
  %846 = lshr i64 %845, 63
  %847 = load i64, i64* %RAX.i, align 8
  %848 = add i64 %845, %847
  store i64 %848, i64* %RAX.i, align 8
  %849 = icmp ult i64 %848, %847
  %850 = icmp ult i64 %848, %845
  %851 = or i1 %849, %850
  %852 = zext i1 %851 to i8
  store i8 %852, i8* %14, align 1
  %853 = trunc i64 %848 to i32
  %854 = and i32 %853, 255
  %855 = tail call i32 @llvm.ctpop.i32(i32 %854)
  %856 = trunc i32 %855 to i8
  %857 = and i8 %856, 1
  %858 = xor i8 %857, 1
  store i8 %858, i8* %21, align 1
  %859 = xor i64 %845, %847
  %860 = xor i64 %859, %848
  %861 = lshr i64 %860, 4
  %862 = trunc i64 %861 to i8
  %863 = and i8 %862, 1
  store i8 %863, i8* %26, align 1
  %864 = icmp eq i64 %848, 0
  %865 = zext i1 %864 to i8
  store i8 %865, i8* %29, align 1
  %866 = lshr i64 %848, 63
  %867 = trunc i64 %866 to i8
  store i8 %867, i8* %32, align 1
  %868 = lshr i64 %847, 63
  %869 = xor i64 %866, %868
  %870 = xor i64 %866, %846
  %871 = add nuw nsw i64 %869, %870
  %872 = icmp eq i64 %871, 2
  %873 = zext i1 %872 to i8
  store i8 %873, i8* %38, align 1
  %874 = load i64, i64* %RBP.i, align 8
  %875 = add i64 %874, -848
  %876 = add i64 %842, 22
  store i64 %876, i64* %3, align 8
  %877 = inttoptr i64 %875 to i64*
  %878 = load i64, i64* %877, align 8
  store i64 %878, i64* %RCX.i, align 8
  %879 = inttoptr i64 %848 to i64*
  %880 = add i64 %842, 25
  store i64 %880, i64* %3, align 8
  store i64 %878, i64* %879, align 8
  %881 = load i64, i64* %RBP.i, align 8
  %882 = add i64 %881, -840
  %883 = load i64, i64* %3, align 8
  %884 = add i64 %883, 7
  store i64 %884, i64* %3, align 8
  %885 = inttoptr i64 %882 to i64*
  %886 = load i64, i64* %885, align 8
  store i64 %886, i64* %RCX.i, align 8
  %887 = load i64, i64* %RAX.i, align 8
  %888 = add i64 %887, 8
  %889 = add i64 %883, 11
  store i64 %889, i64* %3, align 8
  %890 = inttoptr i64 %888 to i64*
  store i64 %886, i64* %890, align 8
  %891 = load i64, i64* %RBP.i, align 8
  %892 = add i64 %891, -832
  %893 = load i64, i64* %3, align 8
  %894 = add i64 %893, 7
  store i64 %894, i64* %3, align 8
  %895 = inttoptr i64 %892 to i64*
  %896 = load i64, i64* %895, align 8
  store i64 %896, i64* %RCX.i, align 8
  %897 = load i64, i64* %RAX.i, align 8
  %898 = add i64 %897, 16
  %899 = add i64 %893, 11
  store i64 %899, i64* %3, align 8
  %900 = inttoptr i64 %898 to i64*
  store i64 %896, i64* %900, align 8
  %901 = load i64, i64* %3, align 8
  %902 = add i64 %901, -76183
  %903 = add i64 %901, 5
  %904 = load i64, i64* %6, align 8
  %905 = add i64 %904, -8
  %906 = inttoptr i64 %905 to i64*
  store i64 %903, i64* %906, align 8
  store i64 %905, i64* %6, align 8
  store i64 %902, i64* %3, align 8
  %call2_41e0c7 = tail call %struct.Memory* @sub_40b730.make(%struct.State* nonnull %0, i64 %902, %struct.Memory* %MEMORY.1)
  %907 = load i64, i64* %RBP.i, align 8
  %908 = add i64 %907, -24864
  %909 = load i64, i64* %3, align 8
  %910 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %911 = add i32 %910, 1
  %912 = zext i32 %911 to i64
  store i64 %912, i64* %RSI.i118, align 8
  store i32 %911, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %913 = sext i32 %910 to i64
  %914 = shl nsw i64 %913, 4
  %915 = add i64 %914, %908
  store i64 %915, i64* %RAX.i, align 8
  %916 = load i64, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  %917 = inttoptr i64 %915 to i64*
  %918 = add i64 %909, 47
  store i64 %918, i64* %3, align 8
  store i64 %916, i64* %917, align 8
  %919 = load i64, i64* %3, align 8
  %920 = load i64, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  store i64 %920, i64* %RCX.i, align 8
  %921 = load i64, i64* %RAX.i, align 8
  %922 = add i64 %921, 8
  %923 = add i64 %919, 12
  store i64 %923, i64* %3, align 8
  %924 = inttoptr i64 %922 to i64*
  store i64 %920, i64* %924, align 8
  %925 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*), align 8
  %926 = load i32, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  %927 = add i32 %926, -1
  %928 = zext i32 %927 to i64
  store i64 %928, i64* %RDX.i, align 8
  %929 = icmp ne i32 %926, 0
  %930 = zext i1 %929 to i8
  store i8 %930, i8* %14, align 1
  %931 = and i32 %927, 255
  %932 = tail call i32 @llvm.ctpop.i32(i32 %931)
  %933 = trunc i32 %932 to i8
  %934 = and i8 %933, 1
  %935 = xor i8 %934, 1
  store i8 %935, i8* %21, align 1
  %936 = xor i32 %926, 16
  %937 = xor i32 %936, %927
  %938 = lshr i32 %937, 4
  %939 = trunc i32 %938 to i8
  %940 = and i8 %939, 1
  store i8 %940, i8* %26, align 1
  %941 = icmp eq i32 %927, 0
  %942 = zext i1 %941 to i8
  store i8 %942, i8* %29, align 1
  %943 = lshr i32 %927, 31
  %944 = trunc i32 %943 to i8
  store i8 %944, i8* %32, align 1
  %945 = lshr i32 %926, 31
  %946 = xor i32 %943, %945
  %947 = xor i32 %943, 1
  %948 = add nuw nsw i32 %946, %947
  %949 = icmp eq i32 %948, 2
  %950 = zext i1 %949 to i8
  store i8 %950, i8* %38, align 1
  store i32 %927, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  %951 = add i64 %925, -112615
  %952 = add i64 %925, 33
  %953 = load i64, i64* %6, align 8
  %954 = add i64 %953, -8
  %955 = inttoptr i64 %954 to i64*
  store i64 %952, i64* %955, align 8
  store i64 %954, i64* %6, align 8
  store i64 %951, i64* %3, align 8
  %call2_41e123 = tail call %struct.Memory* @sub_402920.is_draw(%struct.State* nonnull %0, i64 %951, %struct.Memory* %MEMORY.1)
  %956 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %957 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %958 = and i32 %956, 255
  %959 = tail call i32 @llvm.ctpop.i32(i32 %958)
  %960 = trunc i32 %959 to i8
  %961 = and i8 %960, 1
  %962 = xor i8 %961, 1
  store i8 %962, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %963 = icmp eq i32 %956, 0
  %964 = zext i1 %963 to i8
  store i8 %964, i8* %29, align 1
  %965 = lshr i32 %956, 31
  %966 = trunc i32 %965 to i8
  store i8 %966, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v368 = select i1 %963, i64 25, i64 9
  %967 = add i64 %957, %.v368
  store i64 %967, i64* %3, align 8
  br i1 %963, label %block_.L_41e141, label %block_41e131

block_41e131:                                     ; preds = %block_41e046
  %968 = add i64 %967, 11
  store i64 %968, i64* %3, align 8
  store i32 5, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %969 = add i64 %967, 46
  br label %block_.L_41e15f

block_.L_41e141:                                  ; preds = %block_41e046
  %970 = load i32, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*), align 8
  %971 = add i32 %970, -100
  %972 = icmp ult i32 %970, 100
  %973 = zext i1 %972 to i8
  store i8 %973, i8* %14, align 1
  %974 = and i32 %971, 255
  %975 = tail call i32 @llvm.ctpop.i32(i32 %974)
  %976 = trunc i32 %975 to i8
  %977 = and i8 %976, 1
  %978 = xor i8 %977, 1
  store i8 %978, i8* %21, align 1
  %979 = xor i32 %971, %970
  %980 = lshr i32 %979, 4
  %981 = trunc i32 %980 to i8
  %982 = and i8 %981, 1
  store i8 %982, i8* %26, align 1
  %983 = icmp eq i32 %971, 0
  %984 = zext i1 %983 to i8
  store i8 %984, i8* %29, align 1
  %985 = lshr i32 %971, 31
  %986 = trunc i32 %985 to i8
  store i8 %986, i8* %32, align 1
  %987 = lshr i32 %970, 31
  %988 = xor i32 %985, %987
  %989 = add nuw nsw i32 %988, %987
  %990 = icmp eq i32 %989, 2
  %991 = zext i1 %990 to i8
  store i8 %991, i8* %38, align 1
  %992 = icmp ne i8 %986, 0
  %993 = xor i1 %992, %990
  %994 = or i1 %983, %993
  %.v384 = select i1 %994, i64 25, i64 14
  %995 = add i64 %967, %.v384
  store i64 %995, i64* %3, align 8
  br i1 %994, label %block_.L_41e15a, label %block_41e14f

block_41e14f:                                     ; preds = %block_.L_41e141
  %996 = add i64 %995, 11
  store i64 %996, i64* %3, align 8
  store i32 4, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  br label %block_.L_41e15a

block_.L_41e15a:                                  ; preds = %block_41e14f, %block_.L_41e141
  %997 = phi i64 [ %996, %block_41e14f ], [ %995, %block_.L_41e141 ]
  %998 = add i64 %997, 5
  store i64 %998, i64* %3, align 8
  br label %block_.L_41e15f

block_.L_41e15f:                                  ; preds = %block_.L_41e15a, %block_41e131
  %storemerge = phi i64 [ %969, %block_41e131 ], [ %998, %block_.L_41e15a ]
  %999 = load i32, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %1000 = xor i32 %999, 1
  %1001 = zext i32 %1000 to i64
  store i64 %1001, i64* %RAX.i, align 8
  store i8 0, i8* %14, align 1
  %1002 = and i32 %1000, 255
  %1003 = tail call i32 @llvm.ctpop.i32(i32 %1002)
  %1004 = trunc i32 %1003 to i8
  %1005 = and i8 %1004, 1
  %1006 = xor i8 %1005, 1
  store i8 %1006, i8* %21, align 1
  %1007 = icmp eq i32 %1000, 0
  %1008 = zext i1 %1007 to i8
  store i8 %1008, i8* %29, align 1
  %1009 = lshr i32 %999, 31
  %1010 = trunc i32 %1009 to i8
  store i8 %1010, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  store i32 %1000, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %1011 = add i64 %storemerge, 18225
  %1012 = add i64 %storemerge, 22
  %1013 = load i64, i64* %6, align 8
  %1014 = add i64 %1013, -8
  %1015 = inttoptr i64 %1014 to i64*
  store i64 %1012, i64* %1015, align 8
  store i64 %1014, i64* %6, align 8
  store i64 %1011, i64* %3, align 8
  %call2_41e170 = tail call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* nonnull %0, i64 %1011, %struct.Memory* %MEMORY.1)
  %1016 = load i64, i64* %3, align 8
  %1017 = load i32, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  %1018 = add i32 %1017, -40
  %1019 = icmp ult i32 %1017, 40
  %1020 = zext i1 %1019 to i8
  store i8 %1020, i8* %14, align 1
  %1021 = and i32 %1018, 255
  %1022 = tail call i32 @llvm.ctpop.i32(i32 %1021)
  %1023 = trunc i32 %1022 to i8
  %1024 = and i8 %1023, 1
  %1025 = xor i8 %1024, 1
  store i8 %1025, i8* %21, align 1
  %1026 = xor i32 %1018, %1017
  %1027 = lshr i32 %1026, 4
  %1028 = trunc i32 %1027 to i8
  %1029 = and i8 %1028, 1
  store i8 %1029, i8* %26, align 1
  %1030 = icmp eq i32 %1018, 0
  %1031 = zext i1 %1030 to i8
  store i8 %1031, i8* %29, align 1
  %1032 = lshr i32 %1018, 31
  %1033 = trunc i32 %1032 to i8
  store i8 %1033, i8* %32, align 1
  %1034 = lshr i32 %1017, 31
  %1035 = xor i32 %1032, %1034
  %1036 = add nuw nsw i32 %1035, %1034
  %1037 = icmp eq i32 %1036, 2
  %1038 = zext i1 %1037 to i8
  store i8 %1038, i8* %38, align 1
  %1039 = icmp ne i8 %1033, 0
  %1040 = xor i1 %1039, %1037
  %.v369 = select i1 %1040, i64 14, i64 93
  %1041 = add i64 %1016, %.v369
  store i64 %1041, i64* %3, align 8
  br i1 %1040, label %block_41e183, label %block_.L_41e1d2

block_41e183:                                     ; preds = %block_.L_41e15f
  store i8 0, i8* %14, align 1
  %1042 = and i32 %1017, 255
  %1043 = tail call i32 @llvm.ctpop.i32(i32 %1042)
  %1044 = trunc i32 %1043 to i8
  %1045 = and i8 %1044, 1
  %1046 = xor i8 %1045, 1
  store i8 %1046, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %1047 = icmp eq i32 %1017, 0
  %1048 = zext i1 %1047 to i8
  store i8 %1048, i8* %29, align 1
  %1049 = trunc i32 %1034 to i8
  store i8 %1049, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v383 = select i1 %1047, i64 14, i64 45
  %1050 = add i64 %1041, %.v383
  store i64 %1050, i64* %3, align 8
  br i1 %1047, label %block_41e191, label %block_.L_41e1b0

block_41e191:                                     ; preds = %block_41e183
  %1051 = load i64, i64* %RBP.i, align 8
  %1052 = add i64 %1051, -544
  store i64 %1052, i64* %RSI.i118, align 8
  store i64 and (i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i176, align 8
  %1053 = add i64 %1050, -120097
  %1054 = add i64 %1050, 19
  %1055 = load i64, i64* %6, align 8
  %1056 = add i64 %1055, -8
  %1057 = inttoptr i64 %1056 to i64*
  store i64 %1054, i64* %1057, align 8
  store i64 %1056, i64* %6, align 8
  store i64 %1053, i64* %3, align 8
  %1058 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %MEMORY.1)
  %1059 = load i64, i64* %RBP.i, align 8
  %1060 = add i64 %1059, -25016
  %1061 = load i64, i64* %RAX.i, align 8
  %1062 = load i64, i64* %3, align 8
  %1063 = add i64 %1062, 7
  store i64 %1063, i64* %3, align 8
  %1064 = inttoptr i64 %1060 to i64*
  store i64 %1061, i64* %1064, align 8
  %1065 = load i64, i64* %3, align 8
  %1066 = add i64 %1065, 34
  store i64 %1066, i64* %3, align 8
  br label %block_.L_41e1cd

block_.L_41e1b0:                                  ; preds = %block_41e183
  store i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64* %RDI.i176, align 8
  %1067 = load i64, i64* %RBP.i, align 8
  %1068 = add i64 %1067, -544
  store i64 %1068, i64* %RSI.i118, align 8
  %1069 = add i64 %1050, -119792
  %1070 = add i64 %1050, 22
  %1071 = load i64, i64* %6, align 8
  %1072 = add i64 %1071, -8
  %1073 = inttoptr i64 %1072 to i64*
  store i64 %1070, i64* %1073, align 8
  store i64 %1072, i64* %6, align 8
  store i64 %1069, i64* %3, align 8
  %1074 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %MEMORY.1)
  %1075 = load i64, i64* %RBP.i, align 8
  %1076 = add i64 %1075, -25024
  %1077 = load i64, i64* %RAX.i, align 8
  %1078 = load i64, i64* %3, align 8
  %1079 = add i64 %1078, 7
  store i64 %1079, i64* %3, align 8
  %1080 = inttoptr i64 %1076 to i64*
  store i64 %1077, i64* %1080, align 8
  %.pre212 = load i64, i64* %3, align 8
  br label %block_.L_41e1cd

block_.L_41e1cd:                                  ; preds = %block_.L_41e1b0, %block_41e191
  %1081 = phi i64 [ %.pre212, %block_.L_41e1b0 ], [ %1066, %block_41e191 ]
  %MEMORY.11 = phi %struct.Memory* [ %1074, %block_.L_41e1b0 ], [ %1058, %block_41e191 ]
  %1082 = add i64 %1081, 5
  store i64 %1082, i64* %3, align 8
  br label %block_.L_41e1d2

block_.L_41e1d2:                                  ; preds = %block_.L_41e15f, %block_.L_41e1cd
  %1083 = phi i64 [ %1041, %block_.L_41e15f ], [ %1082, %block_.L_41e1cd ]
  %MEMORY.12 = phi %struct.Memory* [ %MEMORY.1, %block_.L_41e15f ], [ %MEMORY.11, %block_.L_41e1cd ]
  store i64 ptrtoint (%G__0x4285ec_type* @G__0x4285ec to i64), i64* %RDI.i176, align 8
  %1084 = add i64 %1083, add (i64 ptrtoint (%G_0x44120a__rip__type* @G_0x44120a__rip_ to i64), i64 10)
  %1085 = add i64 %1083, 16
  store i64 %1085, i64* %3, align 8
  %1086 = inttoptr i64 %1084 to i32*
  %1087 = load i32, i32* %1086, align 4
  %1088 = add i32 %1087, 1
  %1089 = zext i32 %1088 to i64
  store i64 %1089, i64* %RAX.i, align 8
  %1090 = and i32 %1088, 255
  %1091 = tail call i32 @llvm.ctpop.i32(i32 %1090)
  %1092 = trunc i32 %1091 to i8
  %1093 = and i8 %1092, 1
  %1094 = xor i8 %1093, 1
  store i8 %1094, i8* %21, align 1
  %1095 = xor i32 %1088, %1087
  %1096 = lshr i32 %1095, 4
  %1097 = trunc i32 %1096 to i8
  %1098 = and i8 %1097, 1
  store i8 %1098, i8* %26, align 1
  %1099 = icmp eq i32 %1088, 0
  %1100 = zext i1 %1099 to i8
  store i8 %1100, i8* %29, align 1
  %1101 = lshr i32 %1088, 31
  %1102 = trunc i32 %1101 to i8
  store i8 %1102, i8* %32, align 1
  %1103 = lshr i32 %1087, 31
  %1104 = xor i32 %1101, %1103
  %1105 = add nuw nsw i32 %1104, %1101
  %1106 = icmp eq i32 %1105, 2
  %1107 = zext i1 %1106 to i8
  store i8 %1107, i8* %38, align 1
  %1108 = add i64 %1083, add (i64 ptrtoint (%G_0x441202__rip__type* @G_0x441202__rip_ to i64), i64 18)
  %1109 = add i64 %1083, 24
  store i64 %1109, i64* %3, align 8
  %1110 = inttoptr i64 %1108 to i32*
  store i32 %1088, i32* %1110, align 4
  %1111 = load i64, i64* %3, align 8
  %1112 = add i64 %1111, ptrtoint (%G_0x446310__rip__type* @G_0x446310__rip_ to i64)
  %1113 = add i64 %1111, 6
  store i64 %1113, i64* %3, align 8
  %1114 = inttoptr i64 %1112 to i32*
  %1115 = load i32, i32* %1114, align 4
  %1116 = zext i32 %1115 to i64
  store i64 %1116, i64* %RAX.i, align 8
  %1117 = add i64 %1111, add (i64 ptrtoint (%G_0x21cc4c__rip__type* @G_0x21cc4c__rip_ to i64), i64 6)
  %1118 = add i64 %1111, 14
  store i64 %1118, i64* %3, align 8
  %1119 = load <2 x i32>, <2 x i32>* %340, align 1
  %1120 = load <2 x i32>, <2 x i32>* %330, align 1
  %1121 = inttoptr i64 %1117 to i32*
  %1122 = load i32, i32* %1121, align 4
  %1123 = sitofp i32 %1122 to float
  store float %1123, float* %331, align 1
  %1124 = extractelement <2 x i32> %1119, i32 1
  store i32 %1124, i32* %333, align 1
  %1125 = extractelement <2 x i32> %1120, i32 0
  store i32 %1125, i32* %334, align 1
  %1126 = extractelement <2 x i32> %1120, i32 1
  store i32 %1126, i32* %336, align 1
  %1127 = load <2 x i32>, <2 x i32>* %307, align 1
  %1128 = load <2 x i32>, <2 x i32>* %309, align 1
  %1129 = sitofp i32 %1115 to float
  store float %1129, float* %310, align 1
  %1130 = extractelement <2 x i32> %1127, i32 1
  store i32 %1130, i32* %312, align 1
  %1131 = extractelement <2 x i32> %1128, i32 0
  store i32 %1131, i32* %313, align 1
  %1132 = extractelement <2 x i32> %1128, i32 1
  store i32 %1132, i32* %315, align 1
  %1133 = load <2 x float>, <2 x float>* %337, align 1
  %1134 = load <2 x i32>, <2 x i32>* %330, align 1
  %1135 = load <2 x float>, <2 x float>* %327, align 1
  %1136 = extractelement <2 x float> %1133, i32 0
  %1137 = extractelement <2 x float> %1135, i32 0
  %1138 = fdiv float %1136, %1137
  store float %1138, float* %331, align 1
  %1139 = bitcast <2 x float> %1133 to <2 x i32>
  %1140 = extractelement <2 x i32> %1139, i32 1
  store i32 %1140, i32* %333, align 1
  %1141 = extractelement <2 x i32> %1134, i32 0
  store i32 %1141, i32* %334, align 1
  %1142 = extractelement <2 x i32> %1134, i32 1
  store i32 %1142, i32* %336, align 1
  %1143 = load <2 x float>, <2 x float>* %337, align 1
  %1144 = extractelement <2 x float> %1143, i32 0
  %1145 = fpext float %1144 to double
  store double %1145, double* %303, align 1
  %1146 = add i64 %1111, add (i64 ptrtoint (%G_0xa19c__rip__type* @G_0xa19c__rip_ to i64), i64 26)
  %1147 = add i64 %1111, 34
  store i64 %1147, i64* %3, align 8
  %1148 = inttoptr i64 %1146 to i64*
  %1149 = load i64, i64* %1148, align 8
  store i64 %1149, i64* %341, align 1
  store double 0.000000e+00, double* %342, align 1
  %1150 = load <2 x i32>, <2 x i32>* %361, align 1
  %.cast210 = bitcast i64 %1149 to double
  %1151 = fmul double %1145, %.cast210
  %.cast142 = bitcast double %1151 to <2 x i32>
  %1152 = fptrunc double %1151 to float
  store float %1152, float* %331, align 1
  %1153 = extractelement <2 x i32> %.cast142, i32 1
  store i32 %1153, i32* %333, align 1
  %1154 = extractelement <2 x i32> %1150, i32 0
  store i32 %1154, i32* %334, align 1
  %1155 = extractelement <2 x i32> %1150, i32 1
  store i32 %1155, i32* %336, align 1
  %1156 = load <2 x float>, <2 x float>* %337, align 1
  %1157 = extractelement <2 x float> %1156, i32 0
  %1158 = fpext float %1157 to double
  store double %1158, double* %303, align 1
  store i64 and (i64 ptrtoint (%G__0x4284ed_type* @G__0x4284ed to i64), i64 4294967295), i64* %RCX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4284ed_type* @G__0x4284ed to i64), i64 4294967295) to i32) to i64), i64* %RDX.i, align 8
  store i8 1, i8* %SIL.i3146, align 1
  %1159 = load i64, i64* %RBP.i, align 8
  %1160 = add i64 %1159, -25032
  %1161 = load i64, i64* %RDI.i176, align 8
  %1162 = add i64 %1111, 63
  store i64 %1162, i64* %3, align 8
  %1163 = inttoptr i64 %1160 to i64*
  store i64 %1161, i64* %1163, align 8
  %1164 = load i64, i64* %RDX.i, align 8
  %1165 = load i64, i64* %3, align 8
  store i64 %1164, i64* %RDI.i176, align 8
  %1166 = load i64, i64* %RBP.i, align 8
  %1167 = add i64 %1166, -25033
  %1168 = load i8, i8* %SIL.i3146, align 1
  %1169 = add i64 %1165, 10
  store i64 %1169, i64* %3, align 8
  %1170 = inttoptr i64 %1167 to i8*
  store i8 %1168, i8* %1170, align 1
  %1171 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1172 = zext i32 %1171 to i64
  %1173 = load i64, i64* %3, align 8
  store i64 %1172, i64* %RSI.i118, align 8
  %1174 = load i64, i64* %RBP.i, align 8
  %1175 = add i64 %1174, -25033
  %1176 = add i64 %1173, 8
  store i64 %1176, i64* %3, align 8
  %1177 = inttoptr i64 %1175 to i8*
  %1178 = load i8, i8* %1177, align 1
  store i8 %1178, i8* %AL.i.pre-phi, align 1
  %1179 = add i64 %1173, -120195
  %1180 = add i64 %1173, 13
  %1181 = load i64, i64* %6, align 8
  %1182 = add i64 %1181, -8
  %1183 = inttoptr i64 %1182 to i64*
  store i64 %1180, i64* %1183, align 8
  store i64 %1182, i64* %6, align 8
  store i64 %1179, i64* %3, align 8
  %1184 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.12)
  %1185 = load i64, i64* %3, align 8
  %1186 = add i64 %1185, ptrtoint (%G_0x4628ca__rip__type* @G_0x4628ca__rip_ to i64)
  %1187 = add i64 %1185, 6
  store i64 %1187, i64* %3, align 8
  %1188 = inttoptr i64 %1186 to i32*
  %1189 = load i32, i32* %1188, align 4
  %1190 = zext i32 %1189 to i64
  store i64 %1190, i64* %RDX.i, align 8
  store i64 %1190, i64* %RCX.i, align 8
  %1191 = add i64 %1185, add (i64 ptrtoint (%G_0x2102a0__rip__type* @G_0x2102a0__rip_ to i64), i64 10)
  %1192 = add i64 %1185, 16
  store i64 %1192, i64* %3, align 8
  %1193 = inttoptr i64 %1191 to i32*
  %1194 = load i32, i32* %1193, align 4
  %1195 = zext i32 %1194 to i64
  store i64 %1195, i64* %RDI.i176, align 8
  store i64 %1195, i64* %RSI.i118, align 8
  %1196 = load <2 x i32>, <2 x i32>* %340, align 1
  %1197 = load <2 x i32>, <2 x i32>* %330, align 1
  %1198 = uitofp i32 %1194 to float
  store float %1198, float* %331, align 1
  %1199 = extractelement <2 x i32> %1196, i32 1
  store i32 %1199, i32* %333, align 1
  %1200 = extractelement <2 x i32> %1197, i32 0
  store i32 %1200, i32* %334, align 1
  %1201 = extractelement <2 x i32> %1197, i32 1
  store i32 %1201, i32* %336, align 1
  %1202 = load <2 x i32>, <2 x i32>* %307, align 1
  %1203 = load <2 x i32>, <2 x i32>* %309, align 1
  %1204 = uitofp i32 %1189 to float
  store float %1204, float* %310, align 1
  %1205 = extractelement <2 x i32> %1202, i32 1
  store i32 %1205, i32* %312, align 1
  %1206 = extractelement <2 x i32> %1203, i32 0
  store i32 %1206, i32* %313, align 1
  %1207 = extractelement <2 x i32> %1203, i32 1
  store i32 %1207, i32* %315, align 1
  %1208 = add i64 %1185, add (i64 ptrtoint (%G_0xa12a__rip__type* @G_0xa12a__rip_ to i64), i64 30)
  %1209 = add i64 %1185, 38
  store i64 %1209, i64* %3, align 8
  %1210 = inttoptr i64 %1208 to i32*
  %1211 = load i32, i32* %1210, align 4
  store i32 %1211, i32* %343, align 1
  store float 0.000000e+00, float* %344, align 1
  store float 0.000000e+00, float* %345, align 1
  store float 0.000000e+00, float* %346, align 1
  %1212 = load <2 x float>, <2 x float>* %327, align 1
  %1213 = load <2 x i32>, <2 x i32>* %309, align 1
  %1214 = load <2 x float>, <2 x float>* %328, align 1
  %1215 = extractelement <2 x float> %1212, i32 0
  %1216 = extractelement <2 x float> %1214, i32 0
  %1217 = fadd float %1215, %1216
  store float %1217, float* %310, align 1
  %1218 = bitcast <2 x float> %1212 to <2 x i32>
  %1219 = extractelement <2 x i32> %1218, i32 1
  store i32 %1219, i32* %312, align 1
  %1220 = extractelement <2 x i32> %1213, i32 0
  store i32 %1220, i32* %313, align 1
  %1221 = extractelement <2 x i32> %1213, i32 1
  store i32 %1221, i32* %315, align 1
  %1222 = load <2 x float>, <2 x float>* %337, align 1
  %1223 = load <2 x i32>, <2 x i32>* %330, align 1
  %1224 = load <2 x float>, <2 x float>* %327, align 1
  %1225 = extractelement <2 x float> %1222, i32 0
  %1226 = extractelement <2 x float> %1224, i32 0
  %1227 = fdiv float %1225, %1226
  store float %1227, float* %331, align 1
  %1228 = bitcast <2 x float> %1222 to <2 x i32>
  %1229 = extractelement <2 x i32> %1228, i32 1
  store i32 %1229, i32* %333, align 1
  %1230 = extractelement <2 x i32> %1223, i32 0
  store i32 %1230, i32* %334, align 1
  %1231 = extractelement <2 x i32> %1223, i32 1
  store i32 %1231, i32* %336, align 1
  %1232 = add i64 %1185, add (i64 ptrtoint (%G_0xa11e__rip__type* @G_0xa11e__rip_ to i64), i64 46)
  %1233 = add i64 %1185, 54
  store i64 %1233, i64* %3, align 8
  %1234 = inttoptr i64 %1232 to i32*
  %1235 = load i32, i32* %1234, align 4
  store i32 %1235, i32* %347, align 1
  store float 0.000000e+00, float* %348, align 1
  store float 0.000000e+00, float* %349, align 1
  store float 0.000000e+00, float* %350, align 1
  %1236 = load <2 x float>, <2 x float>* %337, align 1
  %1237 = load <2 x i32>, <2 x i32>* %330, align 1
  %1238 = load <2 x float>, <2 x float>* %327, align 1
  %1239 = extractelement <2 x float> %1236, i32 0
  %1240 = extractelement <2 x float> %1238, i32 0
  %1241 = fmul float %1239, %1240
  store float %1241, float* %331, align 1
  %1242 = bitcast <2 x float> %1236 to <2 x i32>
  %1243 = extractelement <2 x i32> %1242, i32 1
  store i32 %1243, i32* %333, align 1
  %1244 = extractelement <2 x i32> %1237, i32 0
  store i32 %1244, i32* %334, align 1
  %1245 = extractelement <2 x i32> %1237, i32 1
  store i32 %1245, i32* %336, align 1
  %1246 = load <2 x float>, <2 x float>* %337, align 1
  %1247 = extractelement <2 x float> %1246, i32 0
  %1248 = fpext float %1247 to double
  store double %1248, double* %303, align 1
  store i64 and (i64 ptrtoint (%G__0x42850a_type* @G__0x42850a to i64), i64 4294967295), i64* %109, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42850a_type* @G__0x42850a to i64), i64 4294967295) to i32) to i64), i64* %RDI.i176, align 8
  %1249 = load i64, i64* %RBP.i, align 8
  %1250 = add i64 %1249, -25040
  %1251 = load i32, i32* %ESI.i, align 4
  %1252 = add i64 %1185, 77
  store i64 %1252, i64* %3, align 8
  %1253 = inttoptr i64 %1250 to i32*
  store i32 %1251, i32* %1253, align 4
  %1254 = load i32, i32* %ECX.i, align 4
  %1255 = zext i32 %1254 to i64
  %1256 = load i64, i64* %3, align 8
  store i64 %1255, i64* %RSI.i118, align 8
  %1257 = load i64, i64* %RBP.i, align 8
  %1258 = add i64 %1257, -25040
  %1259 = add i64 %1256, 8
  store i64 %1259, i64* %3, align 8
  %1260 = inttoptr i64 %1258 to i32*
  %1261 = load i32, i32* %1260, align 4
  %1262 = zext i32 %1261 to i64
  store i64 %1262, i64* %RDX.i, align 8
  %1263 = add i64 %1257, -25033
  %1264 = add i64 %1256, 15
  store i64 %1264, i64* %3, align 8
  %1265 = inttoptr i64 %1263 to i8*
  %1266 = load i8, i8* %1265, align 1
  store i8 %1266, i8* %R9B.i3075, align 1
  %1267 = add i64 %1257, -25044
  %1268 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1269 = add i64 %1256, 21
  store i64 %1269, i64* %3, align 8
  %1270 = inttoptr i64 %1267 to i32*
  store i32 %1268, i32* %1270, align 4
  %1271 = load i8, i8* %R9B.i3075, align 1
  %1272 = load i64, i64* %3, align 8
  store i8 %1271, i8* %AL.i.pre-phi, align 1
  %1273 = load i64, i64* %RBP.i, align 8
  %1274 = add i64 %1273, -25048
  %1275 = add i64 %1272, 11
  store i64 %1275, i64* %3, align 8
  %1276 = load <2 x float>, <2 x float>* %327, align 1
  %1277 = extractelement <2 x float> %1276, i32 0
  %1278 = inttoptr i64 %1274 to float*
  store float %1277, float* %1278, align 4
  %1279 = load i64, i64* %RBP.i, align 8
  %1280 = add i64 %1279, -25052
  %1281 = load i64, i64* %3, align 8
  %1282 = add i64 %1281, 8
  store i64 %1282, i64* %3, align 8
  %1283 = load <2 x float>, <2 x float>* %328, align 1
  %1284 = extractelement <2 x float> %1283, i32 0
  %1285 = inttoptr i64 %1280 to float*
  store float %1284, float* %1285, align 4
  %1286 = load i64, i64* %3, align 8
  %1287 = add i64 %1286, -120325
  %1288 = add i64 %1286, 5
  %1289 = load i64, i64* %6, align 8
  %1290 = add i64 %1289, -8
  %1291 = inttoptr i64 %1290 to i64*
  store i64 %1288, i64* %1291, align 8
  store i64 %1290, i64* %6, align 8
  store i64 %1287, i64* %3, align 8
  %1292 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1184)
  %1293 = load i64, i64* %3, align 8
  %1294 = add i64 %1293, ptrtoint (%G_0x446248__rip__type* @G_0x446248__rip_ to i64)
  %1295 = add i64 %1293, 6
  store i64 %1295, i64* %3, align 8
  %1296 = inttoptr i64 %1294 to i32*
  %1297 = load i32, i32* %1296, align 4
  %1298 = zext i32 %1297 to i64
  store i64 %1298, i64* %RSI.i118, align 8
  %1299 = add i64 %1293, add (i64 ptrtoint (%G_0x21074e__rip__type* @G_0x21074e__rip_ to i64), i64 6)
  %1300 = add i64 %1293, 12
  store i64 %1300, i64* %3, align 8
  %1301 = inttoptr i64 %1299 to i32*
  %1302 = load i32, i32* %1301, align 4
  %1303 = zext i32 %1302 to i64
  store i64 %1303, i64* %RDI.i176, align 8
  store i64 %1303, i64* %RCX.i, align 8
  %1304 = add i64 %1293, add (i64 ptrtoint (%G_0x4484d4__rip__type* @G_0x4484d4__rip_ to i64), i64 16)
  %1305 = add i64 %1293, 22
  store i64 %1305, i64* %3, align 8
  %1306 = inttoptr i64 %1304 to i32*
  %1307 = load i32, i32* %1306, align 4
  %1308 = zext i32 %1307 to i64
  store i64 %1308, i64* %299, align 8
  store i64 %1308, i64* %RDX.i, align 8
  %1309 = load <2 x i32>, <2 x i32>* %340, align 1
  %1310 = load <2 x i32>, <2 x i32>* %330, align 1
  %1311 = uitofp i32 %1307 to float
  store float %1311, float* %331, align 1
  %1312 = extractelement <2 x i32> %1309, i32 1
  store i32 %1312, i32* %333, align 1
  %1313 = extractelement <2 x i32> %1310, i32 0
  store i32 %1313, i32* %334, align 1
  %1314 = extractelement <2 x i32> %1310, i32 1
  store i32 %1314, i32* %336, align 1
  %1315 = load <2 x i32>, <2 x i32>* %307, align 1
  %1316 = load <2 x i32>, <2 x i32>* %309, align 1
  %1317 = uitofp i32 %1302 to float
  store float %1317, float* %310, align 1
  %1318 = extractelement <2 x i32> %1315, i32 1
  store i32 %1318, i32* %312, align 1
  %1319 = extractelement <2 x i32> %1316, i32 0
  store i32 %1319, i32* %313, align 1
  %1320 = extractelement <2 x i32> %1316, i32 1
  store i32 %1320, i32* %315, align 1
  %1321 = load i64, i64* %RBP.i, align 8
  %1322 = add i64 %1321, -25052
  %1323 = add i64 %1293, 46
  store i64 %1323, i64* %3, align 8
  %1324 = inttoptr i64 %1322 to i32*
  %1325 = load i32, i32* %1324, align 4
  store i32 %1325, i32* %343, align 1
  store float 0.000000e+00, float* %344, align 1
  store float 0.000000e+00, float* %345, align 1
  store float 0.000000e+00, float* %346, align 1
  %1326 = load <2 x float>, <2 x float>* %327, align 1
  %1327 = load <2 x i32>, <2 x i32>* %309, align 1
  %1328 = load <2 x float>, <2 x float>* %328, align 1
  %1329 = extractelement <2 x float> %1326, i32 0
  %1330 = extractelement <2 x float> %1328, i32 0
  %1331 = fadd float %1329, %1330
  store float %1331, float* %310, align 1
  %1332 = bitcast <2 x float> %1326 to <2 x i32>
  %1333 = extractelement <2 x i32> %1332, i32 1
  store i32 %1333, i32* %312, align 1
  %1334 = extractelement <2 x i32> %1327, i32 0
  store i32 %1334, i32* %313, align 1
  %1335 = extractelement <2 x i32> %1327, i32 1
  store i32 %1335, i32* %315, align 1
  %1336 = load <2 x float>, <2 x float>* %337, align 1
  %1337 = load <2 x i32>, <2 x i32>* %330, align 1
  %1338 = load <2 x float>, <2 x float>* %327, align 1
  %1339 = extractelement <2 x float> %1336, i32 0
  %1340 = extractelement <2 x float> %1338, i32 0
  %1341 = fdiv float %1339, %1340
  store float %1341, float* %331, align 1
  %1342 = bitcast <2 x float> %1336 to <2 x i32>
  %1343 = extractelement <2 x i32> %1342, i32 1
  store i32 %1343, i32* %333, align 1
  %1344 = extractelement <2 x i32> %1337, i32 0
  store i32 %1344, i32* %334, align 1
  %1345 = extractelement <2 x i32> %1337, i32 1
  store i32 %1345, i32* %336, align 1
  %1346 = add i64 %1321, -25048
  %1347 = add i64 %1293, 62
  store i64 %1347, i64* %3, align 8
  %1348 = inttoptr i64 %1346 to i32*
  %1349 = load i32, i32* %1348, align 4
  store i32 %1349, i32* %347, align 1
  store float 0.000000e+00, float* %348, align 1
  store float 0.000000e+00, float* %349, align 1
  store float 0.000000e+00, float* %350, align 1
  %1350 = load <2 x float>, <2 x float>* %337, align 1
  %1351 = load <2 x i32>, <2 x i32>* %330, align 1
  %1352 = load <2 x float>, <2 x float>* %327, align 1
  %1353 = extractelement <2 x float> %1350, i32 0
  %1354 = extractelement <2 x float> %1352, i32 0
  %1355 = fmul float %1353, %1354
  store float %1355, float* %331, align 1
  %1356 = bitcast <2 x float> %1350 to <2 x i32>
  %1357 = extractelement <2 x i32> %1356, i32 1
  store i32 %1357, i32* %333, align 1
  %1358 = extractelement <2 x i32> %1351, i32 0
  store i32 %1358, i32* %334, align 1
  %1359 = extractelement <2 x i32> %1351, i32 1
  store i32 %1359, i32* %336, align 1
  %1360 = load <2 x float>, <2 x float>* %337, align 1
  %1361 = extractelement <2 x float> %1360, i32 0
  %1362 = fpext float %1361 to double
  store double %1362, double* %303, align 1
  store i64 and (i64 ptrtoint (%G__0x428540_type* @G__0x428540 to i64), i64 4294967295), i64* %109, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x428540_type* @G__0x428540 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i176, align 8
  %1363 = add i64 %1321, -25056
  %1364 = load i32, i32* %EDX.i, align 4
  %1365 = add i64 %1293, 85
  store i64 %1365, i64* %3, align 8
  %1366 = inttoptr i64 %1363 to i32*
  store i32 %1364, i32* %1366, align 4
  %1367 = load i32, i32* %ECX.i, align 4
  %1368 = zext i32 %1367 to i64
  %1369 = load i64, i64* %3, align 8
  store i64 %1368, i64* %RDX.i, align 8
  %1370 = load i64, i64* %RBP.i, align 8
  %1371 = add i64 %1370, -25056
  %1372 = add i64 %1369, 8
  store i64 %1372, i64* %3, align 8
  %1373 = inttoptr i64 %1371 to i32*
  %1374 = load i32, i32* %1373, align 4
  %1375 = zext i32 %1374 to i64
  store i64 %1375, i64* %RCX.i, align 8
  %1376 = add i64 %1370, -25033
  %1377 = add i64 %1369, 15
  store i64 %1377, i64* %3, align 8
  %1378 = inttoptr i64 %1376 to i8*
  %1379 = load i8, i8* %1378, align 1
  store i8 %1379, i8* %R9B.i3075, align 1
  %1380 = add i64 %1370, -25060
  %1381 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1382 = add i64 %1369, 21
  store i64 %1382, i64* %3, align 8
  %1383 = inttoptr i64 %1380 to i32*
  store i32 %1381, i32* %1383, align 4
  %1384 = load i8, i8* %R9B.i3075, align 1
  %1385 = load i64, i64* %3, align 8
  store i8 %1384, i8* %AL.i.pre-phi, align 1
  %1386 = add i64 %1385, -120436
  %1387 = add i64 %1385, 8
  %1388 = load i64, i64* %6, align 8
  %1389 = add i64 %1388, -8
  %1390 = inttoptr i64 %1389 to i64*
  store i64 %1387, i64* %1390, align 8
  store i64 %1389, i64* %6, align 8
  store i64 %1386, i64* %3, align 8
  %1391 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1292)
  %1392 = load i64, i64* %3, align 8
  %1393 = add i64 %1392, ptrtoint (%G_0x468d72__rip__type* @G_0x468d72__rip_ to i64)
  %1394 = add i64 %1392, 6
  store i64 %1394, i64* %3, align 8
  %1395 = inttoptr i64 %1393 to i32*
  %1396 = load i32, i32* %1395, align 4
  %1397 = zext i32 %1396 to i64
  store i64 %1397, i64* %RDI.i176, align 8
  store i64 %1397, i64* %RCX.i, align 8
  %1398 = add i64 %1392, add (i64 ptrtoint (%G_0x44da30__rip__type* @G_0x44da30__rip_ to i64), i64 10)
  %1399 = add i64 %1392, 16
  store i64 %1399, i64* %3, align 8
  %1400 = inttoptr i64 %1398 to i32*
  %1401 = load i32, i32* %1400, align 4
  %1402 = zext i32 %1401 to i64
  store i64 %1402, i64* %299, align 8
  store i64 %1402, i64* %RDX.i, align 8
  %1403 = load <2 x i32>, <2 x i32>* %340, align 1
  %1404 = load <2 x i32>, <2 x i32>* %330, align 1
  %1405 = uitofp i32 %1401 to float
  store float %1405, float* %331, align 1
  %1406 = extractelement <2 x i32> %1403, i32 1
  store i32 %1406, i32* %333, align 1
  %1407 = extractelement <2 x i32> %1404, i32 0
  store i32 %1407, i32* %334, align 1
  %1408 = extractelement <2 x i32> %1404, i32 1
  store i32 %1408, i32* %336, align 1
  %1409 = load i64, i64* %RBP.i, align 8
  %1410 = add i64 %1409, -25048
  %1411 = add i64 %1392, 35
  store i64 %1411, i64* %3, align 8
  %1412 = inttoptr i64 %1410 to i32*
  %1413 = load i32, i32* %1412, align 4
  store i32 %1413, i32* %347, align 1
  store float 0.000000e+00, float* %348, align 1
  store float 0.000000e+00, float* %349, align 1
  store float 0.000000e+00, float* %350, align 1
  %1414 = load <2 x float>, <2 x float>* %337, align 1
  %1415 = load <2 x i32>, <2 x i32>* %330, align 1
  %1416 = load <2 x float>, <2 x float>* %327, align 1
  %1417 = extractelement <2 x float> %1414, i32 0
  %1418 = extractelement <2 x float> %1416, i32 0
  %1419 = fmul float %1417, %1418
  store float %1419, float* %331, align 1
  %1420 = bitcast <2 x float> %1414 to <2 x i32>
  %1421 = extractelement <2 x i32> %1420, i32 1
  store i32 %1421, i32* %333, align 1
  %1422 = extractelement <2 x i32> %1415, i32 0
  store i32 %1422, i32* %334, align 1
  %1423 = extractelement <2 x i32> %1415, i32 1
  store i32 %1423, i32* %336, align 1
  %1424 = load <2 x i32>, <2 x i32>* %318, align 1
  %1425 = load <2 x i32>, <2 x i32>* %320, align 1
  %1426 = uitofp i32 %1396 to float
  store float %1426, float* %321, align 1
  %1427 = extractelement <2 x i32> %1424, i32 1
  store i32 %1427, i32* %323, align 1
  %1428 = extractelement <2 x i32> %1425, i32 0
  store i32 %1428, i32* %324, align 1
  %1429 = extractelement <2 x i32> %1425, i32 1
  store i32 %1429, i32* %326, align 1
  %1430 = add i64 %1409, -25052
  %1431 = add i64 %1392, 52
  store i64 %1431, i64* %3, align 8
  %1432 = inttoptr i64 %1430 to i32*
  %1433 = load i32, i32* %1432, align 4
  store i32 %1433, i32* %353, align 1
  store float 0.000000e+00, float* %355, align 1
  store float 0.000000e+00, float* %357, align 1
  store float 0.000000e+00, float* %359, align 1
  %1434 = load <2 x float>, <2 x float>* %328, align 1
  %1435 = load <2 x i32>, <2 x i32>* %320, align 1
  %1436 = load <2 x float>, <2 x float>* %360, align 1
  %1437 = extractelement <2 x float> %1434, i32 0
  %1438 = extractelement <2 x float> %1436, i32 0
  %1439 = fadd float %1437, %1438
  store float %1439, float* %321, align 1
  %1440 = bitcast <2 x float> %1434 to <2 x i32>
  %1441 = extractelement <2 x i32> %1440, i32 1
  store i32 %1441, i32* %323, align 1
  %1442 = extractelement <2 x i32> %1435, i32 0
  store i32 %1442, i32* %324, align 1
  %1443 = extractelement <2 x i32> %1435, i32 1
  store i32 %1443, i32* %326, align 1
  %1444 = load <2 x float>, <2 x float>* %337, align 1
  %1445 = load <2 x i32>, <2 x i32>* %330, align 1
  %1446 = load <2 x float>, <2 x float>* %328, align 1
  %1447 = extractelement <2 x float> %1444, i32 0
  %1448 = extractelement <2 x float> %1446, i32 0
  %1449 = fdiv float %1447, %1448
  store float %1449, float* %331, align 1
  %1450 = bitcast <2 x float> %1444 to <2 x i32>
  %1451 = extractelement <2 x i32> %1450, i32 1
  store i32 %1451, i32* %333, align 1
  %1452 = extractelement <2 x i32> %1445, i32 0
  store i32 %1452, i32* %334, align 1
  %1453 = extractelement <2 x i32> %1445, i32 1
  store i32 %1453, i32* %336, align 1
  %1454 = load <2 x float>, <2 x float>* %337, align 1
  %1455 = extractelement <2 x float> %1454, i32 0
  %1456 = fpext float %1455 to double
  store double %1456, double* %303, align 1
  %1457 = add i64 %1392, add (i64 ptrtoint (%G_0x4686f6__rip__type* @G_0x4686f6__rip_ to i64), i64 64)
  %1458 = add i64 %1392, 70
  store i64 %1458, i64* %3, align 8
  %1459 = inttoptr i64 %1457 to i32*
  %1460 = load i32, i32* %1459, align 4
  store i64 and (i64 ptrtoint (%G__0x42857c_type* @G__0x42857c to i64), i64 4294967295), i64* %109, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42857c_type* @G__0x42857c to i64), i64 4294967295) to i32) to i64), i64* %RDI.i176, align 8
  %1461 = add i64 %1409, -25064
  %1462 = add i64 %1392, 85
  store i64 %1462, i64* %3, align 8
  %1463 = inttoptr i64 %1461 to i32*
  store i32 %1460, i32* %1463, align 4
  %1464 = load i32, i32* %ECX.i, align 4
  %1465 = zext i32 %1464 to i64
  %1466 = load i64, i64* %3, align 8
  store i64 %1465, i64* %RSI.i118, align 8
  %1467 = load i64, i64* %RBP.i, align 8
  %1468 = add i64 %1467, -25064
  %1469 = add i64 %1466, 8
  store i64 %1469, i64* %3, align 8
  %1470 = inttoptr i64 %1468 to i32*
  %1471 = load i32, i32* %1470, align 4
  %1472 = zext i32 %1471 to i64
  store i64 %1472, i64* %RCX.i, align 8
  %1473 = add i64 %1467, -25033
  %1474 = add i64 %1466, 15
  store i64 %1474, i64* %3, align 8
  %1475 = inttoptr i64 %1473 to i8*
  %1476 = load i8, i8* %1475, align 1
  store i8 %1476, i8* %R9B.i3075, align 1
  %1477 = add i64 %1467, -25068
  %1478 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1479 = add i64 %1466, 21
  store i64 %1479, i64* %3, align 8
  %1480 = inttoptr i64 %1477 to i32*
  store i32 %1478, i32* %1480, align 4
  %1481 = load i8, i8* %R9B.i3075, align 1
  %1482 = load i64, i64* %3, align 8
  store i8 %1481, i8* %AL.i.pre-phi, align 1
  %1483 = add i64 %1482, -120550
  %1484 = add i64 %1482, 8
  %1485 = load i64, i64* %6, align 8
  %1486 = add i64 %1485, -8
  %1487 = inttoptr i64 %1486 to i64*
  store i64 %1484, i64* %1487, align 8
  store i64 %1486, i64* %6, align 8
  store i64 %1483, i64* %3, align 8
  %1488 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1391)
  %1489 = load i64, i64* %3, align 8
  %1490 = add i64 %1489, ptrtoint (%G_0x210654__rip__type* @G_0x210654__rip_ to i64)
  %1491 = add i64 %1489, 6
  store i64 %1491, i64* %3, align 8
  %1492 = inttoptr i64 %1490 to i32*
  %1493 = load i32, i32* %1492, align 4
  %1494 = zext i32 %1493 to i64
  store i64 %1494, i64* %RSI.i118, align 8
  %1495 = add i64 %1489, add (i64 ptrtoint (%G_0x44615a__rip__type* @G_0x44615a__rip_ to i64), i64 6)
  %1496 = add i64 %1489, 12
  store i64 %1496, i64* %3, align 8
  %1497 = inttoptr i64 %1495 to i32*
  %1498 = load i32, i32* %1497, align 4
  %1499 = zext i32 %1498 to i64
  store i64 %1499, i64* %RDX.i, align 8
  %1500 = add i64 %1489, add (i64 ptrtoint (%G_0x468cf0__rip__type* @G_0x468cf0__rip_ to i64), i64 12)
  %1501 = add i64 %1489, 18
  store i64 %1501, i64* %3, align 8
  %1502 = inttoptr i64 %1500 to i32*
  %1503 = load i32, i32* %1502, align 4
  %1504 = zext i32 %1503 to i64
  store i64 %1504, i64* %RCX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4285af_type* @G__0x4285af to i64), i64 4294967295) to i32) to i64), i64* %RDI.i176, align 8
  store i64 0, i64* %109, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  store i8 0, i8* %R9B.i3075, align 1
  %1505 = load i64, i64* %RBP.i, align 8
  %1506 = add i64 %1505, -25072
  %1507 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1508 = add i64 %1489, 39
  store i64 %1508, i64* %3, align 8
  %1509 = inttoptr i64 %1506 to i32*
  store i32 %1507, i32* %1509, align 4
  %1510 = load i8, i8* %R9B.i3075, align 1
  %1511 = load i64, i64* %3, align 8
  store i8 %1510, i8* %AL.i.pre-phi, align 1
  %1512 = add i64 %1511, -120597
  %1513 = add i64 %1511, 8
  %1514 = load i64, i64* %6, align 8
  %1515 = add i64 %1514, -8
  %1516 = inttoptr i64 %1515 to i64*
  store i64 %1513, i64* %1516, align 8
  store i64 %1515, i64* %6, align 8
  store i64 %1512, i64* %3, align 8
  %1517 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1488)
  %1518 = load i64, i64* %3, align 8
  %1519 = add i64 %1518, ptrtoint (%G_0x447f0d__rip__type* @G_0x447f0d__rip_ to i64)
  %1520 = add i64 %1518, 6
  store i64 %1520, i64* %3, align 8
  %1521 = inttoptr i64 %1519 to i32*
  %1522 = load i32, i32* %1521, align 4
  %1523 = zext i32 %1522 to i64
  store i64 %1523, i64* %RCX.i, align 8
  store i64 %1523, i64* %RDI.i176, align 8
  %1524 = load <2 x i32>, <2 x i32>* %340, align 1
  %1525 = load <2 x i32>, <2 x i32>* %330, align 1
  %1526 = uitofp i32 %1522 to float
  store float %1526, float* %331, align 1
  %1527 = extractelement <2 x i32> %1524, i32 1
  store i32 %1527, i32* %333, align 1
  %1528 = extractelement <2 x i32> %1525, i32 0
  store i32 %1528, i32* %334, align 1
  %1529 = extractelement <2 x i32> %1525, i32 1
  store i32 %1529, i32* %336, align 1
  %1530 = load i64, i64* %RBP.i, align 8
  %1531 = add i64 %1530, -25048
  %1532 = add i64 %1518, 21
  store i64 %1532, i64* %3, align 8
  %1533 = inttoptr i64 %1531 to i32*
  %1534 = load i32, i32* %1533, align 4
  store i32 %1534, i32* %347, align 1
  store float 0.000000e+00, float* %348, align 1
  store float 0.000000e+00, float* %349, align 1
  store float 0.000000e+00, float* %350, align 1
  %1535 = load <2 x float>, <2 x float>* %337, align 1
  %1536 = load <2 x i32>, <2 x i32>* %330, align 1
  %1537 = load <2 x float>, <2 x float>* %327, align 1
  %1538 = extractelement <2 x float> %1535, i32 0
  %1539 = extractelement <2 x float> %1537, i32 0
  %1540 = fmul float %1538, %1539
  store float %1540, float* %331, align 1
  %1541 = bitcast <2 x float> %1535 to <2 x i32>
  %1542 = extractelement <2 x i32> %1541, i32 1
  store i32 %1542, i32* %333, align 1
  %1543 = extractelement <2 x i32> %1536, i32 0
  store i32 %1543, i32* %334, align 1
  %1544 = extractelement <2 x i32> %1536, i32 1
  store i32 %1544, i32* %336, align 1
  %1545 = add i64 %1518, add (i64 ptrtoint (%G_0x482684__rip__type* @G_0x482684__rip_ to i64), i64 25)
  %1546 = add i64 %1518, 31
  store i64 %1546, i64* %3, align 8
  %1547 = inttoptr i64 %1545 to i32*
  %1548 = load i32, i32* %1547, align 4
  %1549 = add i32 %1548, 1
  %1550 = zext i32 %1549 to i64
  store i64 %1550, i64* %RCX.i, align 8
  %1551 = and i32 %1549, 255
  %1552 = tail call i32 @llvm.ctpop.i32(i32 %1551)
  %1553 = trunc i32 %1552 to i8
  %1554 = and i8 %1553, 1
  %1555 = xor i8 %1554, 1
  store i8 %1555, i8* %21, align 1
  %1556 = xor i32 %1549, %1548
  %1557 = lshr i32 %1556, 4
  %1558 = trunc i32 %1557 to i8
  %1559 = and i8 %1558, 1
  store i8 %1559, i8* %26, align 1
  %1560 = icmp eq i32 %1549, 0
  %1561 = zext i1 %1560 to i8
  store i8 %1561, i8* %29, align 1
  %1562 = lshr i32 %1549, 31
  %1563 = trunc i32 %1562 to i8
  store i8 %1563, i8* %32, align 1
  %1564 = lshr i32 %1548, 31
  %1565 = xor i32 %1562, %1564
  %1566 = add nuw nsw i32 %1565, %1562
  %1567 = icmp eq i32 %1566, 2
  %1568 = zext i1 %1567 to i8
  store i8 %1568, i8* %38, align 1
  store i64 %1550, i64* %RDI.i176, align 8
  %1569 = load <2 x i32>, <2 x i32>* %318, align 1
  %1570 = load <2 x i32>, <2 x i32>* %320, align 1
  %1571 = uitofp i32 %1549 to float
  store float %1571, float* %321, align 1
  %1572 = extractelement <2 x i32> %1569, i32 1
  store i32 %1572, i32* %323, align 1
  %1573 = extractelement <2 x i32> %1570, i32 0
  store i32 %1573, i32* %324, align 1
  %1574 = extractelement <2 x i32> %1570, i32 1
  store i32 %1574, i32* %326, align 1
  %1575 = load <2 x float>, <2 x float>* %337, align 1
  %1576 = load <2 x i32>, <2 x i32>* %330, align 1
  %1577 = load <2 x float>, <2 x float>* %328, align 1
  %1578 = extractelement <2 x float> %1575, i32 0
  %1579 = extractelement <2 x float> %1577, i32 0
  %1580 = fdiv float %1578, %1579
  store float %1580, float* %331, align 1
  %1581 = bitcast <2 x float> %1575 to <2 x i32>
  %1582 = extractelement <2 x i32> %1581, i32 1
  store i32 %1582, i32* %333, align 1
  %1583 = extractelement <2 x i32> %1576, i32 0
  store i32 %1583, i32* %334, align 1
  %1584 = extractelement <2 x i32> %1576, i32 1
  store i32 %1584, i32* %336, align 1
  %1585 = load <2 x float>, <2 x float>* %337, align 1
  %1586 = extractelement <2 x float> %1585, i32 0
  %1587 = fpext float %1586 to double
  store double %1587, double* %303, align 1
  %1588 = load i64, i64* %RBP.i, align 8
  %1589 = add i64 %1588, -25032
  %1590 = add i64 %1518, 55
  store i64 %1590, i64* %3, align 8
  %1591 = inttoptr i64 %1589 to i64*
  %1592 = load i64, i64* %1591, align 8
  store i64 %1592, i64* %RDI.i176, align 8
  %1593 = add i64 %1588, -25076
  %1594 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1595 = add i64 %1518, 61
  store i64 %1595, i64* %3, align 8
  %1596 = inttoptr i64 %1593 to i32*
  store i32 %1594, i32* %1596, align 4
  %1597 = load i64, i64* %3, align 8
  store i8 1, i8* %AL.i.pre-phi, align 1
  %1598 = add i64 %1597, -120666
  %1599 = add i64 %1597, 7
  %1600 = load i64, i64* %6, align 8
  %1601 = add i64 %1600, -8
  %1602 = inttoptr i64 %1601 to i64*
  store i64 %1599, i64* %1602, align 8
  store i64 %1601, i64* %6, align 8
  store i64 %1598, i64* %3, align 8
  %1603 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1517)
  %1604 = load i64, i64* %3, align 8
  store i64 4293967296, i64* %RDI.i176, align 8
  store i64 1000000, i64* %RSI.i118, align 8
  %1605 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*), align 8
  %1606 = zext i32 %1605 to i64
  store i64 %1606, i64* %RCX.i, align 8
  %1607 = load i64, i64* %RBP.i, align 8
  %1608 = add i64 %1607, -25080
  %1609 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1610 = add i64 %1604, 23
  store i64 %1610, i64* %3, align 8
  %1611 = inttoptr i64 %1608 to i32*
  store i32 %1609, i32* %1611, align 4
  %1612 = load i64, i64* %RBP.i, align 8
  %1613 = add i64 %1612, -25084
  %1614 = load i32, i32* %ECX.i, align 4
  %1615 = load i64, i64* %3, align 8
  %1616 = add i64 %1615, 6
  store i64 %1616, i64* %3, align 8
  %1617 = inttoptr i64 %1613 to i32*
  store i32 %1614, i32* %1617, align 4
  %1618 = load i64, i64* %3, align 8
  %1619 = add i64 %1618, -107454
  %1620 = add i64 %1618, 5
  %1621 = load i64, i64* %6, align 8
  %1622 = add i64 %1621, -8
  %1623 = inttoptr i64 %1622 to i64*
  store i64 %1620, i64* %1623, align 8
  store i64 %1622, i64* %6, align 8
  store i64 %1619, i64* %3, align 8
  %call2_41e42e = tail call %struct.Memory* @sub_404070.eval(%struct.State* nonnull %0, i64 %1619, %struct.Memory* %1603)
  %1624 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x42926a_type* @G__0x42926a to i64), i64* %RDI.i176, align 8
  %1625 = load i32, i32* bitcast (%G_0x62ea18_type* @G_0x62ea18 to i32*), align 8
  %1626 = zext i32 %1625 to i64
  store i64 %1626, i64* %RCX.i, align 8
  %1627 = load i32, i32* bitcast (%G_0x886bb8_type* @G_0x886bb8 to i32*), align 8
  %1628 = zext i32 %1627 to i64
  store i64 %1628, i64* %109, align 8
  %1629 = load i32, i32* bitcast (%G_0x8667a0_type* @G_0x8667a0 to i32*), align 8
  %1630 = zext i32 %1629 to i64
  store i64 %1630, i64* %R9.i, align 8
  %1631 = load i64, i64* %RBP.i, align 8
  %1632 = add i64 %1631, -25084
  %1633 = add i64 %1624, 39
  store i64 %1633, i64* %3, align 8
  %1634 = inttoptr i64 %1632 to i32*
  %1635 = load i32, i32* %1634, align 4
  %1636 = zext i32 %1635 to i64
  store i64 %1636, i64* %RSI.i118, align 8
  %1637 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1638 = zext i32 %1637 to i64
  store i64 %1638, i64* %RDX.i, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1639 = add i64 %1624, -120707
  %1640 = add i64 %1624, 48
  %1641 = load i64, i64* %6, align 8
  %1642 = add i64 %1641, -8
  %1643 = inttoptr i64 %1642 to i64*
  store i64 %1640, i64* %1643, align 8
  store i64 %1642, i64* %6, align 8
  store i64 %1639, i64* %3, align 8
  %1644 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41e42e)
  %1645 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4292bb_type* @G__0x4292bb to i64), i64* %RDI.i176, align 8
  %1646 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %1647 = zext i32 %1646 to i64
  store i64 %1647, i64* %RSI.i118, align 8
  %1648 = load i32, i32* bitcast (%G_0x881df4_type* @G_0x881df4 to i32*), align 8
  %1649 = zext i32 %1648 to i64
  store i64 %1649, i64* %RDX.i, align 8
  %1650 = load i64, i64* %RBP.i, align 8
  %1651 = add i64 %1650, -25088
  %1652 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1653 = add i64 %1645, 30
  store i64 %1653, i64* %3, align 8
  %1654 = inttoptr i64 %1651 to i32*
  store i32 %1652, i32* %1654, align 4
  %1655 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1656 = add i64 %1655, -120785
  %1657 = add i64 %1655, 7
  %1658 = load i64, i64* %6, align 8
  %1659 = add i64 %1658, -8
  %1660 = inttoptr i64 %1659 to i64*
  store i64 %1657, i64* %1660, align 8
  store i64 %1659, i64* %6, align 8
  store i64 %1656, i64* %3, align 8
  %1661 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1644)
  %1662 = load i64, i64* %3, align 8
  %1663 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %1664 = icmp eq i32 %1663, 0
  %1665 = zext i1 %1664 to i8
  store i8 %1665, i8* %29, align 1
  %1666 = load i64, i64* %RBP.i, align 8
  %1667 = add i64 %1666, -25092
  %1668 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1669 = add i64 %1662, 14
  store i64 %1669, i64* %3, align 8
  %1670 = inttoptr i64 %1667 to i32*
  store i32 %1668, i32* %1670, align 4
  %1671 = load i64, i64* %3, align 8
  %1672 = load i8, i8* %29, align 1
  %1673 = icmp eq i8 %1672, 0
  %.v389 = select i1 %1673, i64 192, i64 6
  %1674 = add i64 %1671, %.v389
  %1675 = add i64 %1674, 8
  store i64 %1675, i64* %3, align 8
  %1676 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  store i8 0, i8* %14, align 1
  %1677 = and i32 %1676, 255
  %1678 = tail call i32 @llvm.ctpop.i32(i32 %1677)
  %1679 = trunc i32 %1678 to i8
  %1680 = and i8 %1679, 1
  %1681 = xor i8 %1680, 1
  store i8 %1681, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %1682 = icmp eq i32 %1676, 0
  %1683 = zext i1 %1682 to i8
  store i8 %1683, i8* %29, align 1
  %1684 = lshr i32 %1676, 31
  %1685 = trunc i32 %1684 to i8
  store i8 %1685, i8* %32, align 1
  store i8 0, i8* %38, align 1
  br i1 %1673, label %block_.L_41e556, label %block_41e49c

block_41e49c:                                     ; preds = %block_.L_41e1d2
  %.v370 = select i1 %1682, i64 108, i64 14
  %1686 = add i64 %1674, %.v370
  %1687 = load i64, i64* %RBP.i, align 8
  %1688 = add i64 %1687, -848
  %1689 = add i64 %1686, 6
  store i64 %1689, i64* %3, align 8
  %1690 = inttoptr i64 %1688 to i32*
  %1691 = load i32, i32* %1690, align 4
  %1692 = zext i32 %1691 to i64
  store i64 %1692, i64* %RAX.i, align 8
  %1693 = load i32, i32* bitcast (%G_0x62db08_type* @G_0x62db08 to i32*), align 8
  %1694 = sub i32 %1691, %1693
  %1695 = icmp ult i32 %1691, %1693
  %1696 = zext i1 %1695 to i8
  store i8 %1696, i8* %14, align 1
  %1697 = and i32 %1694, 255
  %1698 = tail call i32 @llvm.ctpop.i32(i32 %1697)
  %1699 = trunc i32 %1698 to i8
  %1700 = and i8 %1699, 1
  %1701 = xor i8 %1700, 1
  store i8 %1701, i8* %21, align 1
  %1702 = xor i32 %1693, %1691
  %1703 = xor i32 %1702, %1694
  %1704 = lshr i32 %1703, 4
  %1705 = trunc i32 %1704 to i8
  %1706 = and i8 %1705, 1
  store i8 %1706, i8* %26, align 1
  %1707 = icmp eq i32 %1694, 0
  %1708 = zext i1 %1707 to i8
  store i8 %1708, i8* %29, align 1
  %1709 = lshr i32 %1694, 31
  %1710 = trunc i32 %1709 to i8
  store i8 %1710, i8* %32, align 1
  %1711 = lshr i32 %1691, 31
  %1712 = lshr i32 %1693, 31
  %1713 = xor i32 %1712, %1711
  %1714 = xor i32 %1709, %1711
  %1715 = add nuw nsw i32 %1714, %1713
  %1716 = icmp eq i32 %1715, 2
  %1717 = zext i1 %1716 to i8
  store i8 %1717, i8* %38, align 1
  %.v371 = select i1 %1707, i64 19, i64 38
  %1718 = add i64 %1686, %.v371
  store i64 %1718, i64* %3, align 8
  br i1 %1682, label %block_.L_41e508, label %block_41e4aa

block_41e4aa:                                     ; preds = %block_41e49c
  br i1 %1707, label %block_41e4bd, label %block_.L_41e4d0

block_41e4bd:                                     ; preds = %block_41e4aa
  %1719 = add i64 %1687, -844
  %1720 = add i64 %1718, 6
  store i64 %1720, i64* %3, align 8
  %1721 = inttoptr i64 %1719 to i32*
  %1722 = load i32, i32* %1721, align 4
  %1723 = zext i32 %1722 to i64
  store i64 %1723, i64* %RAX.i, align 8
  %1724 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*), align 8
  %1725 = sub i32 %1722, %1724
  %1726 = icmp ult i32 %1722, %1724
  %1727 = zext i1 %1726 to i8
  store i8 %1727, i8* %14, align 1
  %1728 = and i32 %1725, 255
  %1729 = tail call i32 @llvm.ctpop.i32(i32 %1728)
  %1730 = trunc i32 %1729 to i8
  %1731 = and i8 %1730, 1
  %1732 = xor i8 %1731, 1
  store i8 %1732, i8* %21, align 1
  %1733 = xor i32 %1724, %1722
  %1734 = xor i32 %1733, %1725
  %1735 = lshr i32 %1734, 4
  %1736 = trunc i32 %1735 to i8
  %1737 = and i8 %1736, 1
  store i8 %1737, i8* %26, align 1
  %1738 = icmp eq i32 %1725, 0
  %1739 = zext i1 %1738 to i8
  store i8 %1739, i8* %29, align 1
  %1740 = lshr i32 %1725, 31
  %1741 = trunc i32 %1740 to i8
  store i8 %1741, i8* %32, align 1
  %1742 = lshr i32 %1722, 31
  %1743 = lshr i32 %1724, 31
  %1744 = xor i32 %1743, %1742
  %1745 = xor i32 %1740, %1742
  %1746 = add nuw nsw i32 %1745, %1744
  %1747 = icmp eq i32 %1746, 2
  %1748 = zext i1 %1747 to i8
  store i8 %1748, i8* %38, align 1
  %.v373 = select i1 %1738, i64 49, i64 19
  %1749 = add i64 %1718, %.v373
  store i64 %1749, i64* %3, align 8
  br i1 %1738, label %block_.L_41e4ee, label %block_.L_41e4d0

block_.L_41e4d0:                                  ; preds = %block_41e4aa, %block_41e4bd
  %1750 = phi i64 [ %1749, %block_41e4bd ], [ %1718, %block_41e4aa ]
  store i64 ptrtoint (%G__0x4292d5_type* @G__0x4292d5 to i64), i64* %RDI.i176, align 8
  %1751 = add i64 %1687, -544
  store i64 %1751, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1752 = add i64 %1750, -120864
  %1753 = add i64 %1750, 24
  %1754 = load i64, i64* %6, align 8
  %1755 = add i64 %1754, -8
  %1756 = inttoptr i64 %1755 to i64*
  store i64 %1753, i64* %1756, align 8
  store i64 %1755, i64* %6, align 8
  store i64 %1752, i64* %3, align 8
  %1757 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1661)
  %1758 = load i64, i64* %RBP.i, align 8
  %1759 = add i64 %1758, -25096
  %1760 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1761 = load i64, i64* %3, align 8
  %1762 = add i64 %1761, 6
  store i64 %1762, i64* %3, align 8
  %1763 = inttoptr i64 %1759 to i32*
  store i32 %1760, i32* %1763, align 4
  %.pre213 = load i64, i64* %3, align 8
  br label %block_.L_41e4ee

block_.L_41e4ee:                                  ; preds = %block_.L_41e4d0, %block_41e4bd
  %1764 = phi i64 [ %.pre213, %block_.L_41e4d0 ], [ %1749, %block_41e4bd ]
  %MEMORY.14 = phi %struct.Memory* [ %1757, %block_.L_41e4d0 ], [ %1661, %block_41e4bd ]
  %1765 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %1766 = add i32 %1765, -1
  %1767 = icmp eq i32 %1765, 0
  %1768 = zext i1 %1767 to i8
  store i8 %1768, i8* %14, align 1
  %1769 = and i32 %1766, 255
  %1770 = tail call i32 @llvm.ctpop.i32(i32 %1769)
  %1771 = trunc i32 %1770 to i8
  %1772 = and i8 %1771, 1
  %1773 = xor i8 %1772, 1
  store i8 %1773, i8* %21, align 1
  %1774 = xor i32 %1766, %1765
  %1775 = lshr i32 %1774, 4
  %1776 = trunc i32 %1775 to i8
  %1777 = and i8 %1776, 1
  store i8 %1777, i8* %26, align 1
  %1778 = icmp eq i32 %1766, 0
  %1779 = zext i1 %1778 to i8
  store i8 %1779, i8* %29, align 1
  %1780 = lshr i32 %1766, 31
  %1781 = trunc i32 %1780 to i8
  store i8 %1781, i8* %32, align 1
  %1782 = lshr i32 %1765, 31
  %1783 = xor i32 %1780, %1782
  %1784 = add nuw nsw i32 %1783, %1782
  %1785 = icmp eq i32 %1784, 2
  %1786 = zext i1 %1785 to i8
  store i8 %1786, i8* %38, align 1
  %.v372 = select i1 %1778, i64 14, i64 21
  %1787 = add i64 %1764, %.v372
  store i64 %1787, i64* %3, align 8
  br i1 %1778, label %block_41e4fc, label %block_.L_41e503

block_41e4fc:                                     ; preds = %block_.L_41e4ee
  store i64 0, i64* %RDI.i176, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  %1788 = add i64 %1787, -52348
  %1789 = add i64 %1787, 7
  %1790 = load i64, i64* %6, align 8
  %1791 = add i64 %1790, -8
  %1792 = inttoptr i64 %1791 to i64*
  store i64 %1789, i64* %1792, align 8
  store i64 %1791, i64* %6, align 8
  store i64 %1788, i64* %3, align 8
  %call2_41e4fe = tail call %struct.Memory* @sub_411880.CheckBadFlow(%struct.State* nonnull %0, i64 %1788, %struct.Memory* %MEMORY.14)
  %.pre214 = load i64, i64* %3, align 8
  br label %block_.L_41e503

block_.L_41e503:                                  ; preds = %block_.L_41e4ee, %block_41e4fc
  %1793 = phi i64 [ %1787, %block_.L_41e4ee ], [ %.pre214, %block_41e4fc ]
  %MEMORY.15 = phi %struct.Memory* [ %MEMORY.14, %block_.L_41e4ee ], [ %call2_41e4fe, %block_41e4fc ]
  %1794 = add i64 %1793, 78
  br label %block_.L_41e551

block_.L_41e508:                                  ; preds = %block_41e49c
  br i1 %1707, label %block_41e51b, label %block_.L_41e52e

block_41e51b:                                     ; preds = %block_.L_41e508
  %1795 = add i64 %1687, -844
  %1796 = add i64 %1718, 6
  store i64 %1796, i64* %3, align 8
  %1797 = inttoptr i64 %1795 to i32*
  %1798 = load i32, i32* %1797, align 4
  %1799 = zext i32 %1798 to i64
  store i64 %1799, i64* %RAX.i, align 8
  %1800 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*), align 8
  %1801 = sub i32 %1798, %1800
  %1802 = icmp ult i32 %1798, %1800
  %1803 = zext i1 %1802 to i8
  store i8 %1803, i8* %14, align 1
  %1804 = and i32 %1801, 255
  %1805 = tail call i32 @llvm.ctpop.i32(i32 %1804)
  %1806 = trunc i32 %1805 to i8
  %1807 = and i8 %1806, 1
  %1808 = xor i8 %1807, 1
  store i8 %1808, i8* %21, align 1
  %1809 = xor i32 %1800, %1798
  %1810 = xor i32 %1809, %1801
  %1811 = lshr i32 %1810, 4
  %1812 = trunc i32 %1811 to i8
  %1813 = and i8 %1812, 1
  store i8 %1813, i8* %26, align 1
  %1814 = icmp eq i32 %1801, 0
  %1815 = zext i1 %1814 to i8
  store i8 %1815, i8* %29, align 1
  %1816 = lshr i32 %1801, 31
  %1817 = trunc i32 %1816 to i8
  store i8 %1817, i8* %32, align 1
  %1818 = lshr i32 %1798, 31
  %1819 = lshr i32 %1800, 31
  %1820 = xor i32 %1819, %1818
  %1821 = xor i32 %1816, %1818
  %1822 = add nuw nsw i32 %1821, %1820
  %1823 = icmp eq i32 %1822, 2
  %1824 = zext i1 %1823 to i8
  store i8 %1824, i8* %38, align 1
  %.v374 = select i1 %1814, i64 49, i64 19
  %1825 = add i64 %1718, %.v374
  store i64 %1825, i64* %3, align 8
  br i1 %1814, label %block_.L_41e54c, label %block_.L_41e52e

block_.L_41e52e:                                  ; preds = %block_.L_41e508, %block_41e51b
  %1826 = phi i64 [ %1825, %block_41e51b ], [ %1718, %block_.L_41e508 ]
  store i64 ptrtoint (%G__0x4292de_type* @G__0x4292de to i64), i64* %RDI.i176, align 8
  %1827 = add i64 %1687, -544
  store i64 %1827, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1828 = add i64 %1826, -120958
  %1829 = add i64 %1826, 24
  %1830 = load i64, i64* %6, align 8
  %1831 = add i64 %1830, -8
  %1832 = inttoptr i64 %1831 to i64*
  store i64 %1829, i64* %1832, align 8
  store i64 %1831, i64* %6, align 8
  store i64 %1828, i64* %3, align 8
  %1833 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1661)
  %1834 = load i64, i64* %RBP.i, align 8
  %1835 = add i64 %1834, -25100
  %1836 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1837 = load i64, i64* %3, align 8
  %1838 = add i64 %1837, 6
  store i64 %1838, i64* %3, align 8
  %1839 = inttoptr i64 %1835 to i32*
  store i32 %1836, i32* %1839, align 4
  %.pre215 = load i64, i64* %3, align 8
  br label %block_.L_41e54c

block_.L_41e54c:                                  ; preds = %block_.L_41e52e, %block_41e51b
  %1840 = phi i64 [ %.pre215, %block_.L_41e52e ], [ %1825, %block_41e51b ]
  %MEMORY.17 = phi %struct.Memory* [ %1833, %block_.L_41e52e ], [ %1661, %block_41e51b ]
  %1841 = add i64 %1840, 5
  store i64 %1841, i64* %3, align 8
  br label %block_.L_41e551

block_.L_41e551:                                  ; preds = %block_.L_41e54c, %block_.L_41e503
  %storemerge144 = phi i64 [ %1794, %block_.L_41e503 ], [ %1841, %block_.L_41e54c ]
  %MEMORY.18 = phi %struct.Memory* [ %MEMORY.15, %block_.L_41e503 ], [ %MEMORY.17, %block_.L_41e54c ]
  %1842 = add i64 %storemerge144, 381
  store i64 %1842, i64* %3, align 8
  br label %block_.L_41e6ce

block_.L_41e556:                                  ; preds = %block_.L_41e1d2
  %.v375 = select i1 %1682, i64 87, i64 14
  %1843 = add i64 %1674, %.v375
  %1844 = load i64, i64* %RBP.i, align 8
  %1845 = add i64 %1844, -848
  %1846 = add i64 %1843, 6
  store i64 %1846, i64* %3, align 8
  %1847 = inttoptr i64 %1845 to i32*
  %1848 = load i32, i32* %1847, align 4
  %1849 = zext i32 %1848 to i64
  store i64 %1849, i64* %RAX.i, align 8
  %1850 = load i32, i32* bitcast (%G_0x62db08_type* @G_0x62db08 to i32*), align 8
  %1851 = sub i32 %1848, %1850
  %1852 = icmp ult i32 %1848, %1850
  %1853 = zext i1 %1852 to i8
  store i8 %1853, i8* %14, align 1
  %1854 = and i32 %1851, 255
  %1855 = tail call i32 @llvm.ctpop.i32(i32 %1854)
  %1856 = trunc i32 %1855 to i8
  %1857 = and i8 %1856, 1
  %1858 = xor i8 %1857, 1
  store i8 %1858, i8* %21, align 1
  %1859 = xor i32 %1850, %1848
  %1860 = xor i32 %1859, %1851
  %1861 = lshr i32 %1860, 4
  %1862 = trunc i32 %1861 to i8
  %1863 = and i8 %1862, 1
  store i8 %1863, i8* %26, align 1
  %1864 = icmp eq i32 %1851, 0
  %1865 = zext i1 %1864 to i8
  store i8 %1865, i8* %29, align 1
  %1866 = lshr i32 %1851, 31
  %1867 = trunc i32 %1866 to i8
  store i8 %1867, i8* %32, align 1
  %1868 = lshr i32 %1848, 31
  %1869 = lshr i32 %1850, 31
  %1870 = xor i32 %1869, %1868
  %1871 = xor i32 %1866, %1868
  %1872 = add nuw nsw i32 %1871, %1870
  %1873 = icmp eq i32 %1872, 2
  %1874 = zext i1 %1873 to i8
  store i8 %1874, i8* %38, align 1
  %.v376 = select i1 %1864, i64 19, i64 38
  %1875 = add i64 %1843, %.v376
  store i64 %1875, i64* %3, align 8
  br i1 %1682, label %block_.L_41e5ad, label %block_41e564

block_41e564:                                     ; preds = %block_.L_41e556
  br i1 %1864, label %block_41e577, label %block_.L_41e58a

block_41e577:                                     ; preds = %block_41e564
  %1876 = add i64 %1844, -844
  %1877 = add i64 %1875, 6
  store i64 %1877, i64* %3, align 8
  %1878 = inttoptr i64 %1876 to i32*
  %1879 = load i32, i32* %1878, align 4
  %1880 = zext i32 %1879 to i64
  store i64 %1880, i64* %RAX.i, align 8
  %1881 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*), align 8
  %1882 = sub i32 %1879, %1881
  %1883 = icmp ult i32 %1879, %1881
  %1884 = zext i1 %1883 to i8
  store i8 %1884, i8* %14, align 1
  %1885 = and i32 %1882, 255
  %1886 = tail call i32 @llvm.ctpop.i32(i32 %1885)
  %1887 = trunc i32 %1886 to i8
  %1888 = and i8 %1887, 1
  %1889 = xor i8 %1888, 1
  store i8 %1889, i8* %21, align 1
  %1890 = xor i32 %1881, %1879
  %1891 = xor i32 %1890, %1882
  %1892 = lshr i32 %1891, 4
  %1893 = trunc i32 %1892 to i8
  %1894 = and i8 %1893, 1
  store i8 %1894, i8* %26, align 1
  %1895 = icmp eq i32 %1882, 0
  %1896 = zext i1 %1895 to i8
  store i8 %1896, i8* %29, align 1
  %1897 = lshr i32 %1882, 31
  %1898 = trunc i32 %1897 to i8
  store i8 %1898, i8* %32, align 1
  %1899 = lshr i32 %1879, 31
  %1900 = lshr i32 %1881, 31
  %1901 = xor i32 %1900, %1899
  %1902 = xor i32 %1897, %1899
  %1903 = add nuw nsw i32 %1902, %1901
  %1904 = icmp eq i32 %1903, 2
  %1905 = zext i1 %1904 to i8
  store i8 %1905, i8* %38, align 1
  %.v381 = select i1 %1895, i64 49, i64 19
  %1906 = add i64 %1875, %.v381
  store i64 %1906, i64* %3, align 8
  br i1 %1895, label %block_.L_41e5a8, label %block_.L_41e58a

block_.L_41e58a:                                  ; preds = %block_41e564, %block_41e577
  %1907 = phi i64 [ %1906, %block_41e577 ], [ %1875, %block_41e564 ]
  store i64 ptrtoint (%G__0x4292d5_type* @G__0x4292d5 to i64), i64* %RDI.i176, align 8
  %1908 = add i64 %1844, -544
  store i64 %1908, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1909 = add i64 %1907, -121050
  %1910 = add i64 %1907, 24
  %1911 = load i64, i64* %6, align 8
  %1912 = add i64 %1911, -8
  %1913 = inttoptr i64 %1912 to i64*
  store i64 %1910, i64* %1913, align 8
  store i64 %1912, i64* %6, align 8
  store i64 %1909, i64* %3, align 8
  %1914 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1661)
  %1915 = load i64, i64* %RBP.i, align 8
  %1916 = add i64 %1915, -25104
  %1917 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1918 = load i64, i64* %3, align 8
  %1919 = add i64 %1918, 6
  store i64 %1919, i64* %3, align 8
  %1920 = inttoptr i64 %1916 to i32*
  store i32 %1917, i32* %1920, align 4
  %.pre216 = load i64, i64* %3, align 8
  br label %block_.L_41e5a8

block_.L_41e5a8:                                  ; preds = %block_.L_41e58a, %block_41e577
  %1921 = phi i64 [ %.pre216, %block_.L_41e58a ], [ %1906, %block_41e577 ]
  %MEMORY.20 = phi %struct.Memory* [ %1914, %block_.L_41e58a ], [ %1661, %block_41e577 ]
  %1922 = add i64 %1921, 78
  br label %block_.L_41e5f6

block_.L_41e5ad:                                  ; preds = %block_.L_41e556
  br i1 %1864, label %block_41e5c0, label %block_.L_41e5d3

block_41e5c0:                                     ; preds = %block_.L_41e5ad
  %1923 = add i64 %1844, -844
  %1924 = add i64 %1875, 6
  store i64 %1924, i64* %3, align 8
  %1925 = inttoptr i64 %1923 to i32*
  %1926 = load i32, i32* %1925, align 4
  %1927 = zext i32 %1926 to i64
  store i64 %1927, i64* %RAX.i, align 8
  %1928 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*), align 8
  %1929 = sub i32 %1926, %1928
  %1930 = icmp ult i32 %1926, %1928
  %1931 = zext i1 %1930 to i8
  store i8 %1931, i8* %14, align 1
  %1932 = and i32 %1929, 255
  %1933 = tail call i32 @llvm.ctpop.i32(i32 %1932)
  %1934 = trunc i32 %1933 to i8
  %1935 = and i8 %1934, 1
  %1936 = xor i8 %1935, 1
  store i8 %1936, i8* %21, align 1
  %1937 = xor i32 %1928, %1926
  %1938 = xor i32 %1937, %1929
  %1939 = lshr i32 %1938, 4
  %1940 = trunc i32 %1939 to i8
  %1941 = and i8 %1940, 1
  store i8 %1941, i8* %26, align 1
  %1942 = icmp eq i32 %1929, 0
  %1943 = zext i1 %1942 to i8
  store i8 %1943, i8* %29, align 1
  %1944 = lshr i32 %1929, 31
  %1945 = trunc i32 %1944 to i8
  store i8 %1945, i8* %32, align 1
  %1946 = lshr i32 %1926, 31
  %1947 = lshr i32 %1928, 31
  %1948 = xor i32 %1947, %1946
  %1949 = xor i32 %1944, %1946
  %1950 = add nuw nsw i32 %1949, %1948
  %1951 = icmp eq i32 %1950, 2
  %1952 = zext i1 %1951 to i8
  store i8 %1952, i8* %38, align 1
  %.v382 = select i1 %1942, i64 49, i64 19
  %1953 = add i64 %1875, %.v382
  store i64 %1953, i64* %3, align 8
  br i1 %1942, label %block_.L_41e5f1, label %block_.L_41e5d3

block_.L_41e5d3:                                  ; preds = %block_.L_41e5ad, %block_41e5c0
  %1954 = phi i64 [ %1953, %block_41e5c0 ], [ %1875, %block_.L_41e5ad ]
  store i64 ptrtoint (%G__0x4292de_type* @G__0x4292de to i64), i64* %RDI.i176, align 8
  %1955 = add i64 %1844, -544
  store i64 %1955, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1956 = add i64 %1954, -121123
  %1957 = add i64 %1954, 24
  %1958 = load i64, i64* %6, align 8
  %1959 = add i64 %1958, -8
  %1960 = inttoptr i64 %1959 to i64*
  store i64 %1957, i64* %1960, align 8
  store i64 %1959, i64* %6, align 8
  store i64 %1956, i64* %3, align 8
  %1961 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %1661)
  %1962 = load i64, i64* %RBP.i, align 8
  %1963 = add i64 %1962, -25108
  %1964 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %1965 = load i64, i64* %3, align 8
  %1966 = add i64 %1965, 6
  store i64 %1966, i64* %3, align 8
  %1967 = inttoptr i64 %1963 to i32*
  store i32 %1964, i32* %1967, align 4
  %.pre217 = load i64, i64* %3, align 8
  br label %block_.L_41e5f1

block_.L_41e5f1:                                  ; preds = %block_.L_41e5d3, %block_41e5c0
  %1968 = phi i64 [ %.pre217, %block_.L_41e5d3 ], [ %1953, %block_41e5c0 ]
  %MEMORY.22 = phi %struct.Memory* [ %1961, %block_.L_41e5d3 ], [ %1661, %block_41e5c0 ]
  %1969 = add i64 %1968, 5
  store i64 %1969, i64* %3, align 8
  br label %block_.L_41e5f6

block_.L_41e5f6:                                  ; preds = %block_.L_41e5f1, %block_.L_41e5a8
  %storemerge202 = phi i64 [ %1922, %block_.L_41e5a8 ], [ %1969, %block_.L_41e5f1 ]
  %MEMORY.23 = phi %struct.Memory* [ %MEMORY.20, %block_.L_41e5a8 ], [ %MEMORY.22, %block_.L_41e5f1 ]
  %1970 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %1971 = add i32 %1970, -2
  %1972 = icmp ult i32 %1970, 2
  %1973 = zext i1 %1972 to i8
  store i8 %1973, i8* %14, align 1
  %1974 = and i32 %1971, 255
  %1975 = tail call i32 @llvm.ctpop.i32(i32 %1974)
  %1976 = trunc i32 %1975 to i8
  %1977 = and i8 %1976, 1
  %1978 = xor i8 %1977, 1
  store i8 %1978, i8* %21, align 1
  %1979 = xor i32 %1971, %1970
  %1980 = lshr i32 %1979, 4
  %1981 = trunc i32 %1980 to i8
  %1982 = and i8 %1981, 1
  store i8 %1982, i8* %26, align 1
  %1983 = icmp eq i32 %1971, 0
  %1984 = zext i1 %1983 to i8
  store i8 %1984, i8* %29, align 1
  %1985 = lshr i32 %1971, 31
  %1986 = trunc i32 %1985 to i8
  store i8 %1986, i8* %32, align 1
  %1987 = lshr i32 %1970, 31
  %1988 = xor i32 %1985, %1987
  %1989 = add nuw nsw i32 %1988, %1987
  %1990 = icmp eq i32 %1989, 2
  %1991 = zext i1 %1990 to i8
  store i8 %1991, i8* %38, align 1
  %.v377 = select i1 %1983, i64 14, i64 42
  %1992 = add i64 %storemerge202, %.v377
  store i64 %1992, i64* %3, align 8
  br i1 %1983, label %block_41e604, label %block_.L_41e620

block_41e604:                                     ; preds = %block_.L_41e5f6
  store i64 ptrtoint (%G__0x4292e3_type* @G__0x4292e3 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %1993 = add i64 %1992, -121172
  %1994 = add i64 %1992, 17
  %1995 = load i64, i64* %6, align 8
  %1996 = add i64 %1995, -8
  %1997 = inttoptr i64 %1996 to i64*
  store i64 %1994, i64* %1997, align 8
  store i64 %1996, i64* %6, align 8
  store i64 %1993, i64* %3, align 8
  %1998 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.23)
  %1999 = load i64, i64* %RBP.i, align 8
  %2000 = add i64 %1999, -25112
  %2001 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2002 = load i64, i64* %3, align 8
  %2003 = add i64 %2002, 6
  store i64 %2003, i64* %3, align 8
  %2004 = inttoptr i64 %2000 to i32*
  store i32 %2001, i32* %2004, align 4
  %2005 = load i64, i64* %3, align 8
  %2006 = add i64 %2005, 169
  br label %block_.L_41e6c4

block_.L_41e620:                                  ; preds = %block_.L_41e5f6
  %2007 = add i32 %1970, -3
  %2008 = icmp ult i32 %1970, 3
  %2009 = zext i1 %2008 to i8
  store i8 %2009, i8* %14, align 1
  %2010 = and i32 %2007, 255
  %2011 = tail call i32 @llvm.ctpop.i32(i32 %2010)
  %2012 = trunc i32 %2011 to i8
  %2013 = and i8 %2012, 1
  %2014 = xor i8 %2013, 1
  store i8 %2014, i8* %21, align 1
  %2015 = xor i32 %2007, %1970
  %2016 = lshr i32 %2015, 4
  %2017 = trunc i32 %2016 to i8
  %2018 = and i8 %2017, 1
  store i8 %2018, i8* %26, align 1
  %2019 = icmp eq i32 %2007, 0
  %2020 = zext i1 %2019 to i8
  store i8 %2020, i8* %29, align 1
  %2021 = lshr i32 %2007, 31
  %2022 = trunc i32 %2021 to i8
  store i8 %2022, i8* %32, align 1
  %2023 = xor i32 %2021, %1987
  %2024 = add nuw nsw i32 %2023, %1987
  %2025 = icmp eq i32 %2024, 2
  %2026 = zext i1 %2025 to i8
  store i8 %2026, i8* %38, align 1
  %.v378 = select i1 %2019, i64 14, i64 42
  %2027 = add i64 %1992, %.v378
  store i64 %2027, i64* %3, align 8
  br i1 %2019, label %block_41e62e, label %block_.L_41e64a

block_41e62e:                                     ; preds = %block_.L_41e620
  store i64 ptrtoint (%G__0x4292f6_type* @G__0x4292f6 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2028 = add i64 %2027, -121214
  %2029 = add i64 %2027, 17
  %2030 = load i64, i64* %6, align 8
  %2031 = add i64 %2030, -8
  %2032 = inttoptr i64 %2031 to i64*
  store i64 %2029, i64* %2032, align 8
  store i64 %2031, i64* %6, align 8
  store i64 %2028, i64* %3, align 8
  %2033 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.23)
  %2034 = load i64, i64* %RBP.i, align 8
  %2035 = add i64 %2034, -25116
  %2036 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2037 = load i64, i64* %3, align 8
  %2038 = add i64 %2037, 6
  store i64 %2038, i64* %3, align 8
  %2039 = inttoptr i64 %2035 to i32*
  store i32 %2036, i32* %2039, align 4
  %2040 = load i64, i64* %3, align 8
  %2041 = add i64 %2040, 122
  br label %block_.L_41e6bf

block_.L_41e64a:                                  ; preds = %block_.L_41e620
  %2042 = add i32 %1970, -4
  %2043 = icmp ult i32 %1970, 4
  %2044 = zext i1 %2043 to i8
  store i8 %2044, i8* %14, align 1
  %2045 = and i32 %2042, 255
  %2046 = tail call i32 @llvm.ctpop.i32(i32 %2045)
  %2047 = trunc i32 %2046 to i8
  %2048 = and i8 %2047, 1
  %2049 = xor i8 %2048, 1
  store i8 %2049, i8* %21, align 1
  %2050 = xor i32 %2042, %1970
  %2051 = lshr i32 %2050, 4
  %2052 = trunc i32 %2051 to i8
  %2053 = and i8 %2052, 1
  store i8 %2053, i8* %26, align 1
  %2054 = icmp eq i32 %2042, 0
  %2055 = zext i1 %2054 to i8
  store i8 %2055, i8* %29, align 1
  %2056 = lshr i32 %2042, 31
  %2057 = trunc i32 %2056 to i8
  store i8 %2057, i8* %32, align 1
  %2058 = xor i32 %2056, %1987
  %2059 = add nuw nsw i32 %2058, %1987
  %2060 = icmp eq i32 %2059, 2
  %2061 = zext i1 %2060 to i8
  store i8 %2061, i8* %38, align 1
  %.v379 = select i1 %2054, i64 14, i64 42
  %2062 = add i64 %2027, %.v379
  store i64 %2062, i64* %3, align 8
  br i1 %2054, label %block_41e658, label %block_.L_41e674

block_41e658:                                     ; preds = %block_.L_41e64a
  store i64 ptrtoint (%G__0x429309_type* @G__0x429309 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2063 = add i64 %2062, -121256
  %2064 = add i64 %2062, 17
  %2065 = load i64, i64* %6, align 8
  %2066 = add i64 %2065, -8
  %2067 = inttoptr i64 %2066 to i64*
  store i64 %2064, i64* %2067, align 8
  store i64 %2066, i64* %6, align 8
  store i64 %2063, i64* %3, align 8
  %2068 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.23)
  %2069 = load i64, i64* %RBP.i, align 8
  %2070 = add i64 %2069, -25120
  %2071 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2072 = load i64, i64* %3, align 8
  %2073 = add i64 %2072, 6
  store i64 %2073, i64* %3, align 8
  %2074 = inttoptr i64 %2070 to i32*
  store i32 %2071, i32* %2074, align 4
  %2075 = load i64, i64* %3, align 8
  %2076 = add i64 %2075, 75
  br label %block_.L_41e6ba

block_.L_41e674:                                  ; preds = %block_.L_41e64a
  %2077 = add i32 %1970, -5
  %2078 = icmp ult i32 %1970, 5
  %2079 = zext i1 %2078 to i8
  store i8 %2079, i8* %14, align 1
  %2080 = and i32 %2077, 255
  %2081 = tail call i32 @llvm.ctpop.i32(i32 %2080)
  %2082 = trunc i32 %2081 to i8
  %2083 = and i8 %2082, 1
  %2084 = xor i8 %2083, 1
  store i8 %2084, i8* %21, align 1
  %2085 = xor i32 %2077, %1970
  %2086 = lshr i32 %2085, 4
  %2087 = trunc i32 %2086 to i8
  %2088 = and i8 %2087, 1
  store i8 %2088, i8* %26, align 1
  %2089 = icmp eq i32 %2077, 0
  %2090 = zext i1 %2089 to i8
  store i8 %2090, i8* %29, align 1
  %2091 = lshr i32 %2077, 31
  %2092 = trunc i32 %2091 to i8
  store i8 %2092, i8* %32, align 1
  %2093 = xor i32 %2091, %1987
  %2094 = add nuw nsw i32 %2093, %1987
  %2095 = icmp eq i32 %2094, 2
  %2096 = zext i1 %2095 to i8
  store i8 %2096, i8* %38, align 1
  %.v380 = select i1 %2089, i64 14, i64 42
  %2097 = add i64 %2062, %.v380
  %2098 = add i64 %2097, 10
  store i64 %2098, i64* %3, align 8
  br i1 %2089, label %block_41e682, label %block_.L_41e69e

block_41e682:                                     ; preds = %block_.L_41e674
  store i64 ptrtoint (%G__0x429324_type* @G__0x429324 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2099 = add i64 %2097, -121298
  %2100 = add i64 %2097, 17
  %2101 = load i64, i64* %6, align 8
  %2102 = add i64 %2101, -8
  %2103 = inttoptr i64 %2102 to i64*
  store i64 %2100, i64* %2103, align 8
  store i64 %2102, i64* %6, align 8
  store i64 %2099, i64* %3, align 8
  %2104 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.23)
  %2105 = load i64, i64* %RBP.i, align 8
  %2106 = add i64 %2105, -25124
  %2107 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2108 = load i64, i64* %3, align 8
  %2109 = add i64 %2108, 6
  store i64 %2109, i64* %3, align 8
  %2110 = inttoptr i64 %2106 to i32*
  store i32 %2107, i32* %2110, align 4
  %2111 = load i64, i64* %3, align 8
  %2112 = add i64 %2111, 28
  store i64 %2112, i64* %3, align 8
  br label %block_.L_41e6b5

block_.L_41e69e:                                  ; preds = %block_.L_41e674
  store i64 ptrtoint (%G__0x429341_type* @G__0x429341 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2113 = add i64 %2097, -121326
  %2114 = add i64 %2097, 17
  %2115 = load i64, i64* %6, align 8
  %2116 = add i64 %2115, -8
  %2117 = inttoptr i64 %2116 to i64*
  store i64 %2114, i64* %2117, align 8
  store i64 %2116, i64* %6, align 8
  store i64 %2113, i64* %3, align 8
  %2118 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.23)
  %2119 = load i64, i64* %RBP.i, align 8
  %2120 = add i64 %2119, -25128
  %2121 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2122 = load i64, i64* %3, align 8
  %2123 = add i64 %2122, 6
  store i64 %2123, i64* %3, align 8
  %2124 = inttoptr i64 %2120 to i32*
  store i32 %2121, i32* %2124, align 4
  %.pre218 = load i64, i64* %3, align 8
  br label %block_.L_41e6b5

block_.L_41e6b5:                                  ; preds = %block_.L_41e69e, %block_41e682
  %2125 = phi i64 [ %.pre218, %block_.L_41e69e ], [ %2112, %block_41e682 ]
  %MEMORY.24 = phi %struct.Memory* [ %2118, %block_.L_41e69e ], [ %2104, %block_41e682 ]
  %2126 = add i64 %2125, 5
  store i64 %2126, i64* %3, align 8
  br label %block_.L_41e6ba

block_.L_41e6ba:                                  ; preds = %block_.L_41e6b5, %block_41e658
  %storemerge205 = phi i64 [ %2076, %block_41e658 ], [ %2126, %block_.L_41e6b5 ]
  %MEMORY.25 = phi %struct.Memory* [ %2068, %block_41e658 ], [ %MEMORY.24, %block_.L_41e6b5 ]
  %2127 = add i64 %storemerge205, 5
  store i64 %2127, i64* %3, align 8
  br label %block_.L_41e6bf

block_.L_41e6bf:                                  ; preds = %block_.L_41e6ba, %block_41e62e
  %storemerge204 = phi i64 [ %2041, %block_41e62e ], [ %2127, %block_.L_41e6ba ]
  %MEMORY.26 = phi %struct.Memory* [ %2033, %block_41e62e ], [ %MEMORY.25, %block_.L_41e6ba ]
  %2128 = add i64 %storemerge204, 5
  store i64 %2128, i64* %3, align 8
  br label %block_.L_41e6c4

block_.L_41e6c4:                                  ; preds = %block_.L_41e6bf, %block_41e604
  %storemerge203 = phi i64 [ %2006, %block_41e604 ], [ %2128, %block_.L_41e6bf ]
  %MEMORY.27 = phi %struct.Memory* [ %1998, %block_41e604 ], [ %MEMORY.26, %block_.L_41e6bf ]
  %2129 = load i64, i64* %RBP.i, align 8
  %2130 = add i64 %2129, -24884
  %2131 = add i64 %storemerge203, 10
  store i64 %2131, i64* %3, align 8
  %2132 = inttoptr i64 %2130 to i32*
  store i32 0, i32* %2132, align 4
  %.pre219 = load i64, i64* %3, align 8
  br label %block_.L_41e6ce

block_.L_41e6ce:                                  ; preds = %block_.L_41e6c4, %block_.L_41e551
  %2133 = phi i64 [ %.pre219, %block_.L_41e6c4 ], [ %1842, %block_.L_41e551 ]
  %MEMORY.28 = phi %struct.Memory* [ %MEMORY.27, %block_.L_41e6c4 ], [ %MEMORY.18, %block_.L_41e551 ]
  %2134 = add i64 %2133, 221
  store i64 %2134, i64* %3, align 8
  br label %block_.L_41e7ab

block_.L_41e6d3:                                  ; preds = %block_.L_41e000, %block_41dfd6, %block_41e038, %block_41e02a, %block_.L_41e01c, %block_41e00e
  %2135 = phi i64 [ %796, %block_41e038 ], [ %775, %block_41e02a ], [ %754, %block_.L_41e01c ], [ %730, %block_41e00e ], [ %707, %block_.L_41e000 ], [ %652, %block_41dfd6 ]
  %2136 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %2137 = add i32 %2136, -2
  %2138 = icmp ult i32 %2136, 2
  %2139 = zext i1 %2138 to i8
  store i8 %2139, i8* %14, align 1
  %2140 = and i32 %2137, 255
  %2141 = tail call i32 @llvm.ctpop.i32(i32 %2140)
  %2142 = trunc i32 %2141 to i8
  %2143 = and i8 %2142, 1
  %2144 = xor i8 %2143, 1
  store i8 %2144, i8* %21, align 1
  %2145 = xor i32 %2137, %2136
  %2146 = lshr i32 %2145, 4
  %2147 = trunc i32 %2146 to i8
  %2148 = and i8 %2147, 1
  store i8 %2148, i8* %26, align 1
  %2149 = icmp eq i32 %2137, 0
  %2150 = zext i1 %2149 to i8
  store i8 %2150, i8* %29, align 1
  %2151 = lshr i32 %2137, 31
  %2152 = trunc i32 %2151 to i8
  store i8 %2152, i8* %32, align 1
  %2153 = lshr i32 %2136, 31
  %2154 = xor i32 %2151, %2153
  %2155 = add nuw nsw i32 %2154, %2153
  %2156 = icmp eq i32 %2155, 2
  %2157 = zext i1 %2156 to i8
  store i8 %2157, i8* %38, align 1
  %.v358 = select i1 %2149, i64 14, i64 42
  %2158 = add i64 %2135, %.v358
  store i64 %2158, i64* %3, align 8
  br i1 %2149, label %block_41e6e1, label %block_.L_41e6fd

block_41e6e1:                                     ; preds = %block_.L_41e6d3
  store i64 ptrtoint (%G__0x4292e3_type* @G__0x4292e3 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2159 = add i64 %2158, -121393
  %2160 = add i64 %2158, 17
  %2161 = load i64, i64* %6, align 8
  %2162 = add i64 %2161, -8
  %2163 = inttoptr i64 %2162 to i64*
  store i64 %2160, i64* %2163, align 8
  store i64 %2162, i64* %6, align 8
  store i64 %2159, i64* %3, align 8
  %2164 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.1)
  %2165 = load i64, i64* %RBP.i, align 8
  %2166 = add i64 %2165, -25132
  %2167 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2168 = load i64, i64* %3, align 8
  %2169 = add i64 %2168, 6
  store i64 %2169, i64* %3, align 8
  %2170 = inttoptr i64 %2166 to i32*
  store i32 %2167, i32* %2170, align 4
  %2171 = load i64, i64* %3, align 8
  %2172 = add i64 %2171, 169
  br label %block_.L_41e7a1

block_.L_41e6fd:                                  ; preds = %block_.L_41e6d3
  %2173 = add i32 %2136, -3
  %2174 = icmp ult i32 %2136, 3
  %2175 = zext i1 %2174 to i8
  store i8 %2175, i8* %14, align 1
  %2176 = and i32 %2173, 255
  %2177 = tail call i32 @llvm.ctpop.i32(i32 %2176)
  %2178 = trunc i32 %2177 to i8
  %2179 = and i8 %2178, 1
  %2180 = xor i8 %2179, 1
  store i8 %2180, i8* %21, align 1
  %2181 = xor i32 %2173, %2136
  %2182 = lshr i32 %2181, 4
  %2183 = trunc i32 %2182 to i8
  %2184 = and i8 %2183, 1
  store i8 %2184, i8* %26, align 1
  %2185 = icmp eq i32 %2173, 0
  %2186 = zext i1 %2185 to i8
  store i8 %2186, i8* %29, align 1
  %2187 = lshr i32 %2173, 31
  %2188 = trunc i32 %2187 to i8
  store i8 %2188, i8* %32, align 1
  %2189 = xor i32 %2187, %2153
  %2190 = add nuw nsw i32 %2189, %2153
  %2191 = icmp eq i32 %2190, 2
  %2192 = zext i1 %2191 to i8
  store i8 %2192, i8* %38, align 1
  %.v359 = select i1 %2185, i64 14, i64 42
  %2193 = add i64 %2158, %.v359
  store i64 %2193, i64* %3, align 8
  br i1 %2185, label %block_41e70b, label %block_.L_41e727

block_41e70b:                                     ; preds = %block_.L_41e6fd
  store i64 ptrtoint (%G__0x4292f6_type* @G__0x4292f6 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2194 = add i64 %2193, -121435
  %2195 = add i64 %2193, 17
  %2196 = load i64, i64* %6, align 8
  %2197 = add i64 %2196, -8
  %2198 = inttoptr i64 %2197 to i64*
  store i64 %2195, i64* %2198, align 8
  store i64 %2197, i64* %6, align 8
  store i64 %2194, i64* %3, align 8
  %2199 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.1)
  %2200 = load i64, i64* %RBP.i, align 8
  %2201 = add i64 %2200, -25136
  %2202 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2203 = load i64, i64* %3, align 8
  %2204 = add i64 %2203, 6
  store i64 %2204, i64* %3, align 8
  %2205 = inttoptr i64 %2201 to i32*
  store i32 %2202, i32* %2205, align 4
  %2206 = load i64, i64* %3, align 8
  %2207 = add i64 %2206, 122
  br label %block_.L_41e79c

block_.L_41e727:                                  ; preds = %block_.L_41e6fd
  %2208 = add i32 %2136, -4
  %2209 = icmp ult i32 %2136, 4
  %2210 = zext i1 %2209 to i8
  store i8 %2210, i8* %14, align 1
  %2211 = and i32 %2208, 255
  %2212 = tail call i32 @llvm.ctpop.i32(i32 %2211)
  %2213 = trunc i32 %2212 to i8
  %2214 = and i8 %2213, 1
  %2215 = xor i8 %2214, 1
  store i8 %2215, i8* %21, align 1
  %2216 = xor i32 %2208, %2136
  %2217 = lshr i32 %2216, 4
  %2218 = trunc i32 %2217 to i8
  %2219 = and i8 %2218, 1
  store i8 %2219, i8* %26, align 1
  %2220 = icmp eq i32 %2208, 0
  %2221 = zext i1 %2220 to i8
  store i8 %2221, i8* %29, align 1
  %2222 = lshr i32 %2208, 31
  %2223 = trunc i32 %2222 to i8
  store i8 %2223, i8* %32, align 1
  %2224 = xor i32 %2222, %2153
  %2225 = add nuw nsw i32 %2224, %2153
  %2226 = icmp eq i32 %2225, 2
  %2227 = zext i1 %2226 to i8
  store i8 %2227, i8* %38, align 1
  %.v360 = select i1 %2220, i64 14, i64 42
  %2228 = add i64 %2193, %.v360
  store i64 %2228, i64* %3, align 8
  br i1 %2220, label %block_41e735, label %block_.L_41e751

block_41e735:                                     ; preds = %block_.L_41e727
  store i64 ptrtoint (%G__0x429309_type* @G__0x429309 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2229 = add i64 %2228, -121477
  %2230 = add i64 %2228, 17
  %2231 = load i64, i64* %6, align 8
  %2232 = add i64 %2231, -8
  %2233 = inttoptr i64 %2232 to i64*
  store i64 %2230, i64* %2233, align 8
  store i64 %2232, i64* %6, align 8
  store i64 %2229, i64* %3, align 8
  %2234 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.1)
  %2235 = load i64, i64* %RBP.i, align 8
  %2236 = add i64 %2235, -25140
  %2237 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2238 = load i64, i64* %3, align 8
  %2239 = add i64 %2238, 6
  store i64 %2239, i64* %3, align 8
  %2240 = inttoptr i64 %2236 to i32*
  store i32 %2237, i32* %2240, align 4
  %2241 = load i64, i64* %3, align 8
  %2242 = add i64 %2241, 75
  br label %block_.L_41e797

block_.L_41e751:                                  ; preds = %block_.L_41e727
  %2243 = add i32 %2136, -5
  %2244 = icmp ult i32 %2136, 5
  %2245 = zext i1 %2244 to i8
  store i8 %2245, i8* %14, align 1
  %2246 = and i32 %2243, 255
  %2247 = tail call i32 @llvm.ctpop.i32(i32 %2246)
  %2248 = trunc i32 %2247 to i8
  %2249 = and i8 %2248, 1
  %2250 = xor i8 %2249, 1
  store i8 %2250, i8* %21, align 1
  %2251 = xor i32 %2243, %2136
  %2252 = lshr i32 %2251, 4
  %2253 = trunc i32 %2252 to i8
  %2254 = and i8 %2253, 1
  store i8 %2254, i8* %26, align 1
  %2255 = icmp eq i32 %2243, 0
  %2256 = zext i1 %2255 to i8
  store i8 %2256, i8* %29, align 1
  %2257 = lshr i32 %2243, 31
  %2258 = trunc i32 %2257 to i8
  store i8 %2258, i8* %32, align 1
  %2259 = xor i32 %2257, %2153
  %2260 = add nuw nsw i32 %2259, %2153
  %2261 = icmp eq i32 %2260, 2
  %2262 = zext i1 %2261 to i8
  store i8 %2262, i8* %38, align 1
  %.v361 = select i1 %2255, i64 14, i64 42
  %2263 = add i64 %2228, %.v361
  %2264 = add i64 %2263, 10
  store i64 %2264, i64* %3, align 8
  br i1 %2255, label %block_41e75f, label %block_.L_41e77b

block_41e75f:                                     ; preds = %block_.L_41e751
  store i64 ptrtoint (%G__0x429324_type* @G__0x429324 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2265 = add i64 %2263, -121519
  %2266 = add i64 %2263, 17
  %2267 = load i64, i64* %6, align 8
  %2268 = add i64 %2267, -8
  %2269 = inttoptr i64 %2268 to i64*
  store i64 %2266, i64* %2269, align 8
  store i64 %2268, i64* %6, align 8
  store i64 %2265, i64* %3, align 8
  %2270 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.1)
  %2271 = load i64, i64* %RBP.i, align 8
  %2272 = add i64 %2271, -25144
  %2273 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2274 = load i64, i64* %3, align 8
  %2275 = add i64 %2274, 6
  store i64 %2275, i64* %3, align 8
  %2276 = inttoptr i64 %2272 to i32*
  store i32 %2273, i32* %2276, align 4
  %2277 = load i64, i64* %3, align 8
  %2278 = add i64 %2277, 28
  store i64 %2278, i64* %3, align 8
  br label %block_.L_41e792

block_.L_41e77b:                                  ; preds = %block_.L_41e751
  store i64 ptrtoint (%G__0x429341_type* @G__0x429341 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2279 = add i64 %2263, -121547
  %2280 = add i64 %2263, 17
  %2281 = load i64, i64* %6, align 8
  %2282 = add i64 %2281, -8
  %2283 = inttoptr i64 %2282 to i64*
  store i64 %2280, i64* %2283, align 8
  store i64 %2282, i64* %6, align 8
  store i64 %2279, i64* %3, align 8
  %2284 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.1)
  %2285 = load i64, i64* %RBP.i, align 8
  %2286 = add i64 %2285, -25148
  %2287 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2288 = load i64, i64* %3, align 8
  %2289 = add i64 %2288, 6
  store i64 %2289, i64* %3, align 8
  %2290 = inttoptr i64 %2286 to i32*
  store i32 %2287, i32* %2290, align 4
  %.pre220 = load i64, i64* %3, align 8
  br label %block_.L_41e792

block_.L_41e792:                                  ; preds = %block_.L_41e77b, %block_41e75f
  %2291 = phi i64 [ %.pre220, %block_.L_41e77b ], [ %2278, %block_41e75f ]
  %MEMORY.30 = phi %struct.Memory* [ %2284, %block_.L_41e77b ], [ %2270, %block_41e75f ]
  %2292 = add i64 %2291, 5
  store i64 %2292, i64* %3, align 8
  br label %block_.L_41e797

block_.L_41e797:                                  ; preds = %block_.L_41e792, %block_41e735
  %storemerge208 = phi i64 [ %2242, %block_41e735 ], [ %2292, %block_.L_41e792 ]
  %MEMORY.31 = phi %struct.Memory* [ %2234, %block_41e735 ], [ %MEMORY.30, %block_.L_41e792 ]
  %2293 = add i64 %storemerge208, 5
  store i64 %2293, i64* %3, align 8
  br label %block_.L_41e79c

block_.L_41e79c:                                  ; preds = %block_.L_41e797, %block_41e70b
  %storemerge207 = phi i64 [ %2207, %block_41e70b ], [ %2293, %block_.L_41e797 ]
  %MEMORY.32 = phi %struct.Memory* [ %2199, %block_41e70b ], [ %MEMORY.31, %block_.L_41e797 ]
  %2294 = add i64 %storemerge207, 5
  store i64 %2294, i64* %3, align 8
  br label %block_.L_41e7a1

block_.L_41e7a1:                                  ; preds = %block_.L_41e79c, %block_41e6e1
  %storemerge206 = phi i64 [ %2172, %block_41e6e1 ], [ %2294, %block_.L_41e79c ]
  %MEMORY.33 = phi %struct.Memory* [ %2164, %block_41e6e1 ], [ %MEMORY.32, %block_.L_41e79c ]
  %2295 = load i64, i64* %RBP.i, align 8
  %2296 = add i64 %2295, -24884
  %2297 = add i64 %storemerge206, 10
  store i64 %2297, i64* %3, align 8
  %2298 = inttoptr i64 %2296 to i32*
  store i32 0, i32* %2298, align 4
  %.pre221 = load i64, i64* %3, align 8
  br label %block_.L_41e7ab

block_.L_41e7ab:                                  ; preds = %block_.L_41e7a1, %block_.L_41e6ce
  %2299 = phi i64 [ %.pre221, %block_.L_41e7a1 ], [ %2134, %block_.L_41e6ce ]
  %MEMORY.34 = phi %struct.Memory* [ %MEMORY.33, %block_.L_41e7a1 ], [ %MEMORY.28, %block_.L_41e6ce ]
  %2300 = add i64 %2299, 5
  store i64 %2300, i64* %3, align 8
  br label %block_.L_41e7b0

block_.L_41e7b0:                                  ; preds = %block_.L_41e7ab, %block_41df74
  %2301 = phi i64 [ %2300, %block_.L_41e7ab ], [ %512, %block_41df74 ]
  %MEMORY.35 = phi %struct.Memory* [ %MEMORY.34, %block_.L_41e7ab ], [ %MEMORY.1, %block_41df74 ]
  %2302 = add i64 %2301, 5
  store i64 %2302, i64* %3, align 8
  br label %block_.L_41e7b5

block_.L_41e7b5:                                  ; preds = %block_41df0c, %block_41defe, %block_.L_41def1, %block_.L_41dec3, %block_.L_41e7b0, %block_41dee4
  %2303 = phi i64 [ %377, %block_.L_41dec3 ], [ %434, %block_.L_41def1 ], [ %445, %block_41defe ], [ %456, %block_41df0c ], [ %2302, %block_.L_41e7b0 ], [ %419, %block_41dee4 ]
  %MEMORY.36 = phi %struct.Memory* [ %MEMORY.1, %block_.L_41dec3 ], [ %MEMORY.1, %block_.L_41def1 ], [ %MEMORY.1, %block_41defe ], [ %MEMORY.1, %block_41df0c ], [ %MEMORY.35, %block_.L_41e7b0 ], [ %MEMORY.1, %block_41dee4 ]
  %2304 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  store i8 0, i8* %14, align 1
  %2305 = and i32 %2304, 255
  %2306 = tail call i32 @llvm.ctpop.i32(i32 %2305)
  %2307 = trunc i32 %2306 to i8
  %2308 = and i8 %2307, 1
  %2309 = xor i8 %2308, 1
  store i8 %2309, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2310 = icmp eq i32 %2304, 0
  %2311 = zext i1 %2310 to i8
  store i8 %2311, i8* %29, align 1
  %2312 = lshr i32 %2304, 31
  %2313 = trunc i32 %2312 to i8
  store i8 %2313, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v253 = select i1 %2310, i64 14, i64 143
  %2314 = add i64 %2303, %.v253
  store i64 %2314, i64* %3, align 8
  br i1 %2310, label %block_41e7c3, label %block_.L_41e844

block_41e7c3:                                     ; preds = %block_.L_41e7b5
  %2315 = load i64, i64* %RBP.i, align 8
  %2316 = add i64 %2315, -860
  %2317 = add i64 %2314, 7
  store i64 %2317, i64* %3, align 8
  %2318 = inttoptr i64 %2316 to i32*
  %2319 = load i32, i32* %2318, align 4
  store i8 0, i8* %14, align 1
  %2320 = and i32 %2319, 255
  %2321 = tail call i32 @llvm.ctpop.i32(i32 %2320)
  %2322 = trunc i32 %2321 to i8
  %2323 = and i8 %2322, 1
  %2324 = xor i8 %2323, 1
  store i8 %2324, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2325 = icmp eq i32 %2319, 0
  %2326 = zext i1 %2325 to i8
  store i8 %2326, i8* %29, align 1
  %2327 = lshr i32 %2319, 31
  %2328 = trunc i32 %2327 to i8
  store i8 %2328, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v344 = select i1 %2325, i64 63, i64 13
  %2329 = add i64 %2314, %.v344
  store i64 %2329, i64* %3, align 8
  br i1 %2325, label %block_.L_41e802, label %block_41e7d0

block_41e7d0:                                     ; preds = %block_41e7c3
  store i64 ptrtoint (%G__0x429bef_type* @G__0x429bef to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2330 = add i64 %2329, -121632
  %2331 = add i64 %2329, 17
  %2332 = load i64, i64* %6, align 8
  %2333 = add i64 %2332, -8
  %2334 = inttoptr i64 %2333 to i64*
  store i64 %2331, i64* %2334, align 8
  store i64 %2333, i64* %6, align 8
  store i64 %2330, i64* %3, align 8
  %2335 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.36)
  %2336 = load i64, i64* %3, align 8
  %2337 = load i64, i64* bitcast (%G_0x62da80_type* @G_0x62da80 to i64*), align 8
  store i64 %2337, i64* %RDI.i176, align 8
  %2338 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %2339 = sub i32 1, %2338
  %2340 = zext i32 %2339 to i64
  store i64 %2340, i64* %RCX.i, align 8
  %2341 = icmp ugt i32 %2338, 1
  %2342 = zext i1 %2341 to i8
  store i8 %2342, i8* %14, align 1
  %2343 = and i32 %2339, 255
  %2344 = tail call i32 @llvm.ctpop.i32(i32 %2343)
  %2345 = trunc i32 %2344 to i8
  %2346 = and i8 %2345, 1
  %2347 = xor i8 %2346, 1
  store i8 %2347, i8* %21, align 1
  %2348 = xor i32 %2339, %2338
  %2349 = lshr i32 %2348, 4
  %2350 = trunc i32 %2349 to i8
  %2351 = and i8 %2350, 1
  store i8 %2351, i8* %26, align 1
  %2352 = icmp eq i32 %2339, 0
  %2353 = zext i1 %2352 to i8
  store i8 %2353, i8* %29, align 1
  %2354 = lshr i32 %2339, 31
  %2355 = trunc i32 %2354 to i8
  store i8 %2355, i8* %32, align 1
  %2356 = lshr i32 %2338, 31
  %2357 = add nuw nsw i32 %2354, %2356
  %2358 = icmp eq i32 %2357, 2
  %2359 = zext i1 %2358 to i8
  store i8 %2359, i8* %38, align 1
  store i64 %2340, i64* %RSI.i118, align 8
  %2360 = load i64, i64* %RBP.i, align 8
  %2361 = add i64 %2360, -25152
  %2362 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2363 = add i64 %2336, 28
  store i64 %2363, i64* %3, align 8
  %2364 = inttoptr i64 %2361 to i32*
  store i32 %2362, i32* %2364, align 4
  %2365 = load i64, i64* %3, align 8
  %2366 = add i64 %2365, 15299
  %2367 = add i64 %2365, 5
  %2368 = load i64, i64* %6, align 8
  %2369 = add i64 %2368, -8
  %2370 = inttoptr i64 %2369 to i64*
  store i64 %2367, i64* %2370, align 8
  store i64 %2369, i64* %6, align 8
  store i64 %2366, i64* %3, align 8
  %call2_41e7fd = tail call %struct.Memory* @sub_4223c0.display_board(%struct.State* nonnull %0, i64 %2366, %struct.Memory* %2335)
  %.pre222 = load i64, i64* %RBP.i, align 8
  %.pre223 = load i64, i64* %3, align 8
  br label %block_.L_41e802

block_.L_41e802:                                  ; preds = %block_41e7d0, %block_41e7c3
  %2371 = phi i64 [ %2329, %block_41e7c3 ], [ %.pre223, %block_41e7d0 ]
  %2372 = phi i64 [ %2315, %block_41e7c3 ], [ %.pre222, %block_41e7d0 ]
  %MEMORY.37 = phi %struct.Memory* [ %MEMORY.36, %block_41e7c3 ], [ %call2_41e7fd, %block_41e7d0 ]
  %2373 = add i64 %2372, -24884
  %2374 = add i64 %2371, 7
  store i64 %2374, i64* %3, align 8
  %2375 = inttoptr i64 %2373 to i32*
  %2376 = load i32, i32* %2375, align 4
  store i8 0, i8* %14, align 1
  %2377 = and i32 %2376, 255
  %2378 = tail call i32 @llvm.ctpop.i32(i32 %2377)
  %2379 = trunc i32 %2378 to i8
  %2380 = and i8 %2379, 1
  %2381 = xor i8 %2380, 1
  store i8 %2381, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2382 = icmp eq i32 %2376, 0
  %2383 = zext i1 %2382 to i8
  store i8 %2383, i8* %29, align 1
  %2384 = lshr i32 %2376, 31
  %2385 = trunc i32 %2384 to i8
  store i8 %2385, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v345 = select i1 %2382, i64 13, i64 61
  %2386 = add i64 %2371, %.v345
  store i64 %2386, i64* %3, align 8
  br i1 %2382, label %block_41e80f, label %block_.L_41e83f

block_41e80f:                                     ; preds = %block_.L_41e802
  store i64 ptrtoint (%G__0x429351_type* @G__0x429351 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2387 = add i64 %2386, -121695
  %2388 = add i64 %2386, 17
  %2389 = load i64, i64* %6, align 8
  %2390 = add i64 %2389, -8
  %2391 = inttoptr i64 %2390 to i64*
  store i64 %2388, i64* %2391, align 8
  store i64 %2390, i64* %6, align 8
  store i64 %2387, i64* %3, align 8
  %2392 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.37)
  %2393 = load i64, i64* %3, align 8
  store i64 256, i64* %RSI.i118, align 8
  %2394 = load i64, i64* %RBP.i, align 8
  %2395 = add i64 %2394, -272
  store i64 %2395, i64* %RDI.i176, align 8
  %2396 = load i64, i64* bitcast (%G_0x62da90_type* @G_0x62da90 to i64*), align 8
  store i64 %2396, i64* %RDX.i, align 8
  %2397 = add i64 %2394, -25156
  %2398 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2399 = add i64 %2393, 26
  store i64 %2399, i64* %3, align 8
  %2400 = inttoptr i64 %2397 to i32*
  store i32 %2398, i32* %2400, align 4
  %2401 = load i64, i64* %3, align 8
  %2402 = add i64 %2401, 17910
  %2403 = add i64 %2401, 5
  %2404 = load i64, i64* %6, align 8
  %2405 = add i64 %2404, -8
  %2406 = inttoptr i64 %2405 to i64*
  store i64 %2403, i64* %2406, align 8
  store i64 %2405, i64* %6, align 8
  store i64 %2402, i64* %3, align 8
  %call2_41e83a = tail call %struct.Memory* @sub_422e30.rinput(%struct.State* nonnull %0, i64 %2402, %struct.Memory* %2392)
  %.pre224 = load i64, i64* %3, align 8
  br label %block_.L_41e83f

block_.L_41e83f:                                  ; preds = %block_.L_41e802, %block_41e80f
  %2407 = phi i64 [ %2386, %block_.L_41e802 ], [ %.pre224, %block_41e80f ]
  %MEMORY.38 = phi %struct.Memory* [ %MEMORY.37, %block_.L_41e802 ], [ %call2_41e83a, %block_41e80f ]
  %2408 = add i64 %2407, 202
  br label %block_.L_41e909

block_.L_41e844:                                  ; preds = %block_.L_41e7b5
  %2409 = load i32, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  store i8 0, i8* %14, align 1
  %2410 = and i32 %2409, 255
  %2411 = tail call i32 @llvm.ctpop.i32(i32 %2410)
  %2412 = trunc i32 %2411 to i8
  %2413 = and i8 %2412, 1
  %2414 = xor i8 %2413, 1
  store i8 %2414, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2415 = icmp eq i32 %2409, 0
  %2416 = zext i1 %2415 to i8
  store i8 %2416, i8* %29, align 1
  %2417 = lshr i32 %2409, 31
  %2418 = trunc i32 %2417 to i8
  store i8 %2418, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v254 = select i1 %2415, i64 14, i64 82
  %2419 = add i64 %2314, %.v254
  store i64 %2419, i64* %3, align 8
  br i1 %2415, label %block_41e852, label %block_.L_41e896

block_41e852:                                     ; preds = %block_.L_41e844
  %2420 = load i32, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  store i8 0, i8* %14, align 1
  %2421 = and i32 %2420, 255
  %2422 = tail call i32 @llvm.ctpop.i32(i32 %2421)
  %2423 = trunc i32 %2422 to i8
  %2424 = and i8 %2423, 1
  %2425 = xor i8 %2424, 1
  store i8 %2425, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2426 = icmp eq i32 %2420, 0
  %2427 = zext i1 %2426 to i8
  store i8 %2427, i8* %29, align 1
  %2428 = lshr i32 %2420, 31
  %2429 = trunc i32 %2428 to i8
  store i8 %2429, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v339 = select i1 %2426, i64 54, i64 14
  %2430 = add i64 %2419, %.v339
  store i64 %2430, i64* %3, align 8
  br i1 %2426, label %block_.L_41e888, label %block_41e860

block_41e860:                                     ; preds = %block_41e852
  %2431 = load i64, i64* %RBP.i, align 8
  %2432 = add i64 %2431, -24868
  %2433 = add i64 %2430, 7
  store i64 %2433, i64* %3, align 8
  %2434 = inttoptr i64 %2432 to i32*
  %2435 = load i32, i32* %2434, align 4
  store i8 0, i8* %14, align 1
  %2436 = and i32 %2435, 255
  %2437 = tail call i32 @llvm.ctpop.i32(i32 %2436)
  %2438 = trunc i32 %2437 to i8
  %2439 = and i8 %2438, 1
  %2440 = xor i8 %2439, 1
  store i8 %2440, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2441 = icmp eq i32 %2435, 0
  %2442 = zext i1 %2441 to i8
  store i8 %2442, i8* %29, align 1
  %2443 = lshr i32 %2435, 31
  %2444 = trunc i32 %2443 to i8
  store i8 %2444, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v340 = select i1 %2441, i64 13, i64 40
  %2445 = add i64 %2430, %.v340
  store i64 %2445, i64* %3, align 8
  br i1 %2441, label %block_41e86d, label %block_.L_41e888

block_41e86d:                                     ; preds = %block_41e860
  %2446 = add i64 %2431, -856
  %2447 = add i64 %2445, 7
  store i64 %2447, i64* %3, align 8
  %2448 = inttoptr i64 %2446 to i32*
  %2449 = load i32, i32* %2448, align 4
  store i8 0, i8* %14, align 1
  %2450 = and i32 %2449, 255
  %2451 = tail call i32 @llvm.ctpop.i32(i32 %2450)
  %2452 = trunc i32 %2451 to i8
  %2453 = and i8 %2452, 1
  %2454 = xor i8 %2453, 1
  store i8 %2454, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2455 = icmp eq i32 %2449, 0
  %2456 = zext i1 %2455 to i8
  store i8 %2456, i8* %29, align 1
  %2457 = lshr i32 %2449, 31
  %2458 = trunc i32 %2457 to i8
  store i8 %2458, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v342 = select i1 %2455, i64 13, i64 27
  %2459 = add i64 %2445, %.v342
  store i64 %2459, i64* %3, align 8
  br i1 %2455, label %block_41e87a, label %block_.L_41e888

block_41e87a:                                     ; preds = %block_41e86d
  %2460 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  store i8 0, i8* %14, align 1
  %2461 = and i32 %2460, 255
  %2462 = tail call i32 @llvm.ctpop.i32(i32 %2461)
  %2463 = trunc i32 %2462 to i8
  %2464 = and i8 %2463, 1
  %2465 = xor i8 %2464, 1
  store i8 %2465, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2466 = icmp eq i32 %2460, 0
  %2467 = zext i1 %2466 to i8
  store i8 %2467, i8* %29, align 1
  %2468 = lshr i32 %2460, 31
  %2469 = trunc i32 %2468 to i8
  store i8 %2469, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v343 = select i1 %2466, i64 14, i64 28
  %2470 = add i64 %2459, %.v343
  store i64 %2470, i64* %3, align 8
  br i1 %2466, label %block_.L_41e888, label %block_.L_41e896

block_.L_41e888:                                  ; preds = %block_41e87a, %block_41e86d, %block_41e860, %block_41e852
  %2471 = phi i64 [ %2470, %block_41e87a ], [ %2459, %block_41e86d ], [ %2445, %block_41e860 ], [ %2430, %block_41e852 ]
  %2472 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  store i8 0, i8* %14, align 1
  %2473 = and i32 %2472, 255
  %2474 = tail call i32 @llvm.ctpop.i32(i32 %2473)
  %2475 = trunc i32 %2474 to i8
  %2476 = and i8 %2475, 1
  %2477 = xor i8 %2476, 1
  store i8 %2477, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2478 = icmp eq i32 %2472, 0
  %2479 = zext i1 %2478 to i8
  store i8 %2479, i8* %29, align 1
  %2480 = lshr i32 %2472, 31
  %2481 = trunc i32 %2480 to i8
  store i8 %2481, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v341 = select i1 %2478, i64 86, i64 14
  %2482 = add i64 %2471, %.v341
  store i64 %2482, i64* %3, align 8
  br i1 %2478, label %block_.L_41e8de, label %block_.L_41e896

block_.L_41e896:                                  ; preds = %block_41e87a, %block_.L_41e844, %block_.L_41e888
  %2483 = phi i64 [ %2482, %block_.L_41e888 ], [ %2470, %block_41e87a ], [ %2419, %block_.L_41e844 ]
  %2484 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  store i8 0, i8* %14, align 1
  %2485 = and i32 %2484, 255
  %2486 = tail call i32 @llvm.ctpop.i32(i32 %2485)
  %2487 = trunc i32 %2486 to i8
  %2488 = and i8 %2487, 1
  %2489 = xor i8 %2488, 1
  store i8 %2489, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2490 = icmp eq i32 %2484, 0
  %2491 = zext i1 %2490 to i8
  store i8 %2491, i8* %29, align 1
  %2492 = lshr i32 %2484, 31
  %2493 = trunc i32 %2492 to i8
  store i8 %2493, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v255 = select i1 %2490, i64 14, i64 72
  %2494 = add i64 %2483, %.v255
  store i64 %2494, i64* %3, align 8
  br i1 %2490, label %block_41e8a4, label %block_.L_41e8de

block_41e8a4:                                     ; preds = %block_.L_41e896
  %2495 = load i64, i64* %RBP.i, align 8
  %2496 = add i64 %2495, -24884
  %2497 = add i64 %2494, 7
  store i64 %2497, i64* %3, align 8
  %2498 = inttoptr i64 %2496 to i32*
  %2499 = load i32, i32* %2498, align 4
  store i8 0, i8* %14, align 1
  %2500 = and i32 %2499, 255
  %2501 = tail call i32 @llvm.ctpop.i32(i32 %2500)
  %2502 = trunc i32 %2501 to i8
  %2503 = and i8 %2502, 1
  %2504 = xor i8 %2503, 1
  store i8 %2504, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2505 = icmp eq i32 %2499, 0
  %2506 = zext i1 %2505 to i8
  store i8 %2506, i8* %29, align 1
  %2507 = lshr i32 %2499, 31
  %2508 = trunc i32 %2507 to i8
  store i8 %2508, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v338 = select i1 %2505, i64 13, i64 58
  %2509 = add i64 %2494, %.v338
  store i64 %2509, i64* %3, align 8
  br i1 %2505, label %block_41e8b1, label %block_.L_41e8de

block_41e8b1:                                     ; preds = %block_41e8a4
  %2510 = add i64 %2495, -24944
  store i64 %2510, i64* %RDI.i176, align 8
  store i32 1, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  %2511 = add i64 %2509, -16241
  %2512 = add i64 %2509, 23
  %2513 = load i64, i64* %6, align 8
  %2514 = add i64 %2513, -8
  %2515 = inttoptr i64 %2514 to i64*
  store i64 %2512, i64* %2515, align 8
  store i64 %2514, i64* %6, align 8
  store i64 %2511, i64* %3, align 8
  %call2_41e8c3 = tail call %struct.Memory* @sub_41a940.think(%struct.State* nonnull %0, i64 %2511, %struct.Memory* %MEMORY.36)
  %2516 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  %2517 = add i64 %2516, 22
  store i64 %2517, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*), align 8
  br label %block_.L_41e8de

block_.L_41e8de:                                  ; preds = %block_41e8a4, %block_.L_41e896, %block_41e8b1, %block_.L_41e888
  %2518 = phi i64 [ %2494, %block_.L_41e896 ], [ %2509, %block_41e8a4 ], [ %2517, %block_41e8b1 ], [ %2482, %block_.L_41e888 ]
  %MEMORY.41 = phi %struct.Memory* [ %MEMORY.36, %block_.L_41e896 ], [ %MEMORY.36, %block_41e8a4 ], [ %call2_41e8c3, %block_41e8b1 ], [ %MEMORY.36, %block_.L_41e888 ]
  %2519 = load i64, i64* %RBP.i, align 8
  %2520 = add i64 %2519, -24884
  %2521 = add i64 %2518, 7
  store i64 %2521, i64* %3, align 8
  %2522 = inttoptr i64 %2520 to i32*
  %2523 = load i32, i32* %2522, align 4
  store i8 0, i8* %14, align 1
  %2524 = and i32 %2523, 255
  %2525 = tail call i32 @llvm.ctpop.i32(i32 %2524)
  %2526 = trunc i32 %2525 to i8
  %2527 = and i8 %2526, 1
  %2528 = xor i8 %2527, 1
  store i8 %2528, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2529 = icmp eq i32 %2523, 0
  %2530 = zext i1 %2529 to i8
  store i8 %2530, i8* %29, align 1
  %2531 = lshr i32 %2523, 31
  %2532 = trunc i32 %2531 to i8
  store i8 %2532, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v256 = select i1 %2529, i64 13, i64 38
  %2533 = add i64 %2518, %.v256
  store i64 %2533, i64* %3, align 8
  br i1 %2529, label %block_41e8eb, label %block_.L_41e904

block_41e8eb:                                     ; preds = %block_.L_41e8de
  store i64 256, i64* %RSI.i118, align 8
  %2534 = add i64 %2519, -272
  store i64 %2534, i64* %RDI.i176, align 8
  %2535 = load i64, i64* bitcast (%G_0x62da90_type* @G_0x62da90 to i64*), align 8
  store i64 %2535, i64* %RDX.i, align 8
  %2536 = add i64 %2533, 17733
  %2537 = add i64 %2533, 25
  %2538 = load i64, i64* %6, align 8
  %2539 = add i64 %2538, -8
  %2540 = inttoptr i64 %2539 to i64*
  store i64 %2537, i64* %2540, align 8
  store i64 %2539, i64* %6, align 8
  store i64 %2536, i64* %3, align 8
  %call2_41e8ff = tail call %struct.Memory* @sub_422e30.rinput(%struct.State* nonnull %0, i64 %2536, %struct.Memory* %MEMORY.41)
  %.pre225 = load i64, i64* %3, align 8
  br label %block_.L_41e904

block_.L_41e904:                                  ; preds = %block_.L_41e8de, %block_41e8eb
  %2541 = phi i64 [ %2533, %block_.L_41e8de ], [ %.pre225, %block_41e8eb ]
  %MEMORY.42 = phi %struct.Memory* [ %MEMORY.41, %block_.L_41e8de ], [ %call2_41e8ff, %block_41e8eb ]
  %2542 = add i64 %2541, 5
  store i64 %2542, i64* %3, align 8
  br label %block_.L_41e909

block_.L_41e909:                                  ; preds = %block_.L_41e904, %block_.L_41e83f
  %storemerge145 = phi i64 [ %2408, %block_.L_41e83f ], [ %2542, %block_.L_41e904 ]
  %MEMORY.43 = phi %struct.Memory* [ %MEMORY.38, %block_.L_41e83f ], [ %MEMORY.42, %block_.L_41e904 ]
  %2543 = load i64, i64* %RBP.i, align 8
  %2544 = add i64 %2543, -24868
  %2545 = add i64 %storemerge145, 7
  store i64 %2545, i64* %3, align 8
  %2546 = inttoptr i64 %2544 to i32*
  %2547 = load i32, i32* %2546, align 4
  store i8 0, i8* %14, align 1
  %2548 = and i32 %2547, 255
  %2549 = tail call i32 @llvm.ctpop.i32(i32 %2548)
  %2550 = trunc i32 %2549 to i8
  %2551 = and i8 %2550, 1
  %2552 = xor i8 %2551, 1
  store i8 %2552, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2553 = icmp eq i32 %2547, 0
  %2554 = zext i1 %2553 to i8
  store i8 %2554, i8* %29, align 1
  %2555 = lshr i32 %2547, 31
  %2556 = trunc i32 %2555 to i8
  store i8 %2556, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v257 = select i1 %2553, i64 13, i64 446
  %2557 = add i64 %storemerge145, %.v257
  store i64 %2557, i64* %3, align 8
  br i1 %2553, label %block_41e916, label %block_.L_41eac7

block_41e916:                                     ; preds = %block_.L_41e909
  %2558 = add i64 %2543, -272
  store i64 %2558, i64* %RDI.i176, align 8
  %2559 = add i64 %2557, 16714
  %2560 = add i64 %2557, 12
  %2561 = load i64, i64* %6, align 8
  %2562 = add i64 %2561, -8
  %2563 = inttoptr i64 %2562 to i64*
  store i64 %2560, i64* %2563, align 8
  store i64 %2562, i64* %6, align 8
  store i64 %2559, i64* %3, align 8
  %call2_41e91d = tail call %struct.Memory* @sub_422a60.is_move(%struct.State* nonnull %0, i64 %2559, %struct.Memory* %MEMORY.43)
  %2564 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2565 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %2566 = and i32 %2564, 255
  %2567 = tail call i32 @llvm.ctpop.i32(i32 %2566)
  %2568 = trunc i32 %2567 to i8
  %2569 = and i8 %2568, 1
  %2570 = xor i8 %2569, 1
  store i8 %2570, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2571 = icmp eq i32 %2564, 0
  %2572 = zext i1 %2571 to i8
  store i8 %2572, i8* %29, align 1
  %2573 = lshr i32 %2564, 31
  %2574 = trunc i32 %2573 to i8
  store i8 %2574, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v333 = select i1 %2571, i64 421, i64 9
  %2575 = add i64 %2565, %.v333
  store i64 %2575, i64* %3, align 8
  %.pre230 = load i64, i64* %RBP.i, align 8
  br i1 %2571, label %block_.L_41eac7, label %block_41e92b

block_41e92b:                                     ; preds = %block_41e916
  %2576 = add i64 %.pre230, -824
  store i64 %2576, i64* %RSI.i118, align 8
  %2577 = add i64 %.pre230, -272
  store i64 %2577, i64* %RDI.i176, align 8
  %2578 = add i64 %2575, 17829
  %2579 = add i64 %2575, 19
  %2580 = load i64, i64* %6, align 8
  %2581 = add i64 %2580, -8
  %2582 = inttoptr i64 %2581 to i64*
  store i64 %2579, i64* %2582, align 8
  store i64 %2581, i64* %6, align 8
  store i64 %2578, i64* %3, align 8
  %call2_41e939 = tail call %struct.Memory* @sub_422ed0.verify_coord(%struct.State* nonnull %0, i64 %2578, %struct.Memory* %call2_41e91d)
  %2583 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2584 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %2585 = and i32 %2583, 255
  %2586 = tail call i32 @llvm.ctpop.i32(i32 %2585)
  %2587 = trunc i32 %2586 to i8
  %2588 = and i8 %2587, 1
  %2589 = xor i8 %2588, 1
  store i8 %2589, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2590 = icmp eq i32 %2583, 0
  %2591 = zext i1 %2590 to i8
  store i8 %2591, i8* %29, align 1
  %2592 = lshr i32 %2583, 31
  %2593 = trunc i32 %2592 to i8
  store i8 %2593, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v334 = select i1 %2590, i64 358, i64 9
  %2594 = add i64 %2584, %.v334
  store i64 %2594, i64* %3, align 8
  br i1 %2590, label %block_.L_41eaa4, label %block_41e947

block_41e947:                                     ; preds = %block_41e92b
  %2595 = load i64, i64* %RBP.i, align 8
  %2596 = add i64 %2595, -824
  store i64 %2596, i64* %RDI.i176, align 8
  store i64 0, i64* %RSI.i118, align 8
  %2597 = add i64 %2595, -15264
  %2598 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %2599 = sext i32 %2598 to i64
  %2600 = mul nsw i64 %2599, 24
  store i64 %2600, i64* %RCX.i, align 8
  %2601 = lshr i64 %2600, 63
  %2602 = add i64 %2600, %2597
  store i64 %2602, i64* %RAX.i, align 8
  %2603 = icmp ult i64 %2602, %2597
  %2604 = icmp ult i64 %2602, %2600
  %2605 = or i1 %2603, %2604
  %2606 = zext i1 %2605 to i8
  store i8 %2606, i8* %14, align 1
  %2607 = trunc i64 %2602 to i32
  %2608 = and i32 %2607, 255
  %2609 = tail call i32 @llvm.ctpop.i32(i32 %2608)
  %2610 = trunc i32 %2609 to i8
  %2611 = and i8 %2610, 1
  %2612 = xor i8 %2611, 1
  store i8 %2612, i8* %21, align 1
  %2613 = xor i64 %2600, %2597
  %2614 = xor i64 %2613, %2602
  %2615 = lshr i64 %2614, 4
  %2616 = trunc i64 %2615 to i8
  %2617 = and i8 %2616, 1
  store i8 %2617, i8* %26, align 1
  %2618 = icmp eq i64 %2602, 0
  %2619 = zext i1 %2618 to i8
  store i8 %2619, i8* %29, align 1
  %2620 = lshr i64 %2602, 63
  %2621 = trunc i64 %2620 to i8
  store i8 %2621, i8* %32, align 1
  %2622 = lshr i64 %2597, 63
  %2623 = xor i64 %2620, %2622
  %2624 = xor i64 %2620, %2601
  %2625 = add nuw nsw i64 %2623, %2624
  %2626 = icmp eq i64 %2625, 2
  %2627 = zext i1 %2626 to i8
  store i8 %2627, i8* %38, align 1
  %2628 = add i64 %2594, 38
  store i64 %2628, i64* %3, align 8
  %2629 = inttoptr i64 %2596 to i64*
  %2630 = load i64, i64* %2629, align 8
  store i64 %2630, i64* %RCX.i, align 8
  %2631 = inttoptr i64 %2602 to i64*
  %2632 = add i64 %2594, 41
  store i64 %2632, i64* %3, align 8
  store i64 %2630, i64* %2631, align 8
  %2633 = load i64, i64* %RBP.i, align 8
  %2634 = add i64 %2633, -816
  %2635 = load i64, i64* %3, align 8
  %2636 = add i64 %2635, 7
  store i64 %2636, i64* %3, align 8
  %2637 = inttoptr i64 %2634 to i64*
  %2638 = load i64, i64* %2637, align 8
  store i64 %2638, i64* %RCX.i, align 8
  %2639 = load i64, i64* %RAX.i, align 8
  %2640 = add i64 %2639, 8
  %2641 = add i64 %2635, 11
  store i64 %2641, i64* %3, align 8
  %2642 = inttoptr i64 %2640 to i64*
  store i64 %2638, i64* %2642, align 8
  %2643 = load i64, i64* %RBP.i, align 8
  %2644 = add i64 %2643, -808
  %2645 = load i64, i64* %3, align 8
  %2646 = add i64 %2645, 7
  store i64 %2646, i64* %3, align 8
  %2647 = inttoptr i64 %2644 to i64*
  %2648 = load i64, i64* %2647, align 8
  store i64 %2648, i64* %RCX.i, align 8
  %2649 = load i64, i64* %RAX.i, align 8
  %2650 = add i64 %2649, 16
  %2651 = add i64 %2645, 11
  store i64 %2651, i64* %3, align 8
  %2652 = inttoptr i64 %2650 to i64*
  store i64 %2648, i64* %2652, align 8
  %2653 = load i64, i64* %3, align 8
  %2654 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %2655 = zext i32 %2654 to i64
  store i64 %2655, i64* %RDX.i, align 8
  %2656 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %2657 = sext i32 %2656 to i64
  store i64 %2657, i64* %RAX.i, align 8
  %2658 = shl nsw i64 %2657, 2
  %2659 = add nsw i64 %2658, 8692688
  %2660 = add i64 %2653, 22
  store i64 %2660, i64* %3, align 8
  %2661 = inttoptr i64 %2659 to i32*
  store i32 %2654, i32* %2661, align 4
  %2662 = load i64, i64* %3, align 8
  %2663 = add i64 %2662, -78444
  %2664 = add i64 %2662, 5
  %2665 = load i64, i64* %6, align 8
  %2666 = add i64 %2665, -8
  %2667 = inttoptr i64 %2666 to i64*
  store i64 %2664, i64* %2667, align 8
  store i64 %2666, i64* %6, align 8
  store i64 %2663, i64* %3, align 8
  %call2_41e99c = tail call %struct.Memory* @sub_40b730.make(%struct.State* nonnull %0, i64 %2663, %struct.Memory* %call2_41e939)
  %2668 = load i64, i64* %RBP.i, align 8
  %2669 = add i64 %2668, -24864
  %2670 = load i64, i64* %3, align 8
  %2671 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %2672 = zext i32 %2671 to i64
  store i64 %2672, i64* %RDX.i, align 8
  %2673 = add i32 %2671, 1
  %2674 = zext i32 %2673 to i64
  store i64 %2674, i64* %RSI.i118, align 8
  store i32 %2673, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %2675 = sext i32 %2671 to i64
  %2676 = shl nsw i64 %2675, 4
  %2677 = add i64 %2676, %2669
  store i64 %2677, i64* %RAX.i, align 8
  %2678 = icmp ult i64 %2677, %2669
  %2679 = icmp ult i64 %2677, %2676
  %2680 = or i1 %2678, %2679
  %2681 = zext i1 %2680 to i8
  store i8 %2681, i8* %14, align 1
  %2682 = trunc i64 %2677 to i32
  %2683 = and i32 %2682, 255
  %2684 = tail call i32 @llvm.ctpop.i32(i32 %2683)
  %2685 = trunc i32 %2684 to i8
  %2686 = and i8 %2685, 1
  %2687 = xor i8 %2686, 1
  store i8 %2687, i8* %21, align 1
  %2688 = xor i64 %2676, %2669
  %2689 = xor i64 %2688, %2677
  %2690 = lshr i64 %2689, 4
  %2691 = trunc i64 %2690 to i8
  %2692 = and i8 %2691, 1
  store i8 %2692, i8* %26, align 1
  %2693 = icmp eq i64 %2677, 0
  %2694 = zext i1 %2693 to i8
  store i8 %2694, i8* %29, align 1
  %2695 = lshr i64 %2677, 63
  %2696 = trunc i64 %2695 to i8
  store i8 %2696, i8* %32, align 1
  %2697 = lshr i64 %2669, 63
  %2698 = lshr i64 %2675, 59
  %2699 = and i64 %2698, 1
  %2700 = xor i64 %2695, %2697
  %2701 = xor i64 %2695, %2699
  %2702 = add nuw nsw i64 %2700, %2701
  %2703 = icmp eq i64 %2702, 2
  %2704 = zext i1 %2703 to i8
  store i8 %2704, i8* %38, align 1
  %2705 = load i64, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  %2706 = inttoptr i64 %2677 to i64*
  %2707 = add i64 %2670, 47
  store i64 %2707, i64* %3, align 8
  store i64 %2705, i64* %2706, align 8
  %2708 = load i64, i64* %3, align 8
  %2709 = load i64, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  store i64 %2709, i64* %RCX.i, align 8
  %2710 = load i64, i64* %RAX.i, align 8
  %2711 = add i64 %2710, 8
  %2712 = add i64 %2708, 12
  store i64 %2712, i64* %3, align 8
  %2713 = inttoptr i64 %2711 to i64*
  store i64 %2709, i64* %2713, align 8
  %2714 = load i64, i64* %3, align 8
  %2715 = add i64 %2714, 16052
  %2716 = add i64 %2714, 5
  %2717 = load i64, i64* %6, align 8
  %2718 = add i64 %2717, -8
  %2719 = inttoptr i64 %2718 to i64*
  store i64 %2716, i64* %2719, align 8
  store i64 %2718, i64* %6, align 8
  store i64 %2715, i64* %3, align 8
  %call2_41e9dc = tail call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* nonnull %0, i64 %2715, %struct.Memory* %call2_41e99c)
  %2720 = load i64, i64* %3, align 8
  %2721 = load i32, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %2722 = xor i32 %2721, 1
  %2723 = zext i32 %2722 to i64
  store i64 %2723, i64* %RDX.i, align 8
  store i32 %2722, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %2724 = load i32, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  %2725 = add i32 %2724, -40
  %2726 = icmp ult i32 %2724, 40
  %2727 = zext i1 %2726 to i8
  store i8 %2727, i8* %14, align 1
  %2728 = and i32 %2725, 255
  %2729 = tail call i32 @llvm.ctpop.i32(i32 %2728)
  %2730 = trunc i32 %2729 to i8
  %2731 = and i8 %2730, 1
  %2732 = xor i8 %2731, 1
  store i8 %2732, i8* %21, align 1
  %2733 = xor i32 %2725, %2724
  %2734 = lshr i32 %2733, 4
  %2735 = trunc i32 %2734 to i8
  %2736 = and i8 %2735, 1
  store i8 %2736, i8* %26, align 1
  %2737 = icmp eq i32 %2725, 0
  %2738 = zext i1 %2737 to i8
  store i8 %2738, i8* %29, align 1
  %2739 = lshr i32 %2725, 31
  %2740 = trunc i32 %2739 to i8
  store i8 %2740, i8* %32, align 1
  %2741 = lshr i32 %2724, 31
  %2742 = xor i32 %2739, %2741
  %2743 = add nuw nsw i32 %2742, %2741
  %2744 = icmp eq i32 %2743, 2
  %2745 = zext i1 %2744 to i8
  store i8 %2745, i8* %38, align 1
  %2746 = icmp ne i8 %2740, 0
  %2747 = xor i1 %2746, %2744
  %.v335 = select i1 %2747, i64 31, i64 110
  %2748 = add i64 %2720, %.v335
  store i64 %2748, i64* %3, align 8
  br i1 %2747, label %block_41ea00, label %block_.L_41ea4f

block_41ea00:                                     ; preds = %block_41e947
  store i8 0, i8* %14, align 1
  %2749 = and i32 %2724, 255
  %2750 = tail call i32 @llvm.ctpop.i32(i32 %2749)
  %2751 = trunc i32 %2750 to i8
  %2752 = and i8 %2751, 1
  %2753 = xor i8 %2752, 1
  store i8 %2753, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2754 = icmp eq i32 %2724, 0
  %2755 = zext i1 %2754 to i8
  store i8 %2755, i8* %29, align 1
  %2756 = trunc i32 %2741 to i8
  store i8 %2756, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v337 = select i1 %2754, i64 14, i64 45
  %2757 = add i64 %2748, %.v337
  store i64 %2757, i64* %3, align 8
  br i1 %2754, label %block_41ea0e, label %block_.L_41ea2d

block_41ea0e:                                     ; preds = %block_41ea00
  %2758 = load i64, i64* %RBP.i, align 8
  %2759 = add i64 %2758, -272
  store i64 %2759, i64* %RSI.i118, align 8
  store i64 and (i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i176, align 8
  %2760 = add i64 %2757, -122270
  %2761 = add i64 %2757, 19
  %2762 = load i64, i64* %6, align 8
  %2763 = add i64 %2762, -8
  %2764 = inttoptr i64 %2763 to i64*
  store i64 %2761, i64* %2764, align 8
  store i64 %2763, i64* %6, align 8
  store i64 %2760, i64* %3, align 8
  %2765 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %call2_41e9dc)
  %2766 = load i64, i64* %RBP.i, align 8
  %2767 = add i64 %2766, -25168
  %2768 = load i64, i64* %RAX.i, align 8
  %2769 = load i64, i64* %3, align 8
  %2770 = add i64 %2769, 7
  store i64 %2770, i64* %3, align 8
  %2771 = inttoptr i64 %2767 to i64*
  store i64 %2768, i64* %2771, align 8
  %2772 = load i64, i64* %3, align 8
  %2773 = add i64 %2772, 34
  store i64 %2773, i64* %3, align 8
  br label %block_.L_41ea4a

block_.L_41ea2d:                                  ; preds = %block_41ea00
  store i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64* %RDI.i176, align 8
  %2774 = load i64, i64* %RBP.i, align 8
  %2775 = add i64 %2774, -272
  store i64 %2775, i64* %RSI.i118, align 8
  %2776 = add i64 %2757, -121965
  %2777 = add i64 %2757, 22
  %2778 = load i64, i64* %6, align 8
  %2779 = add i64 %2778, -8
  %2780 = inttoptr i64 %2779 to i64*
  store i64 %2777, i64* %2780, align 8
  store i64 %2779, i64* %6, align 8
  store i64 %2776, i64* %3, align 8
  %2781 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %call2_41e9dc)
  %2782 = load i64, i64* %RBP.i, align 8
  %2783 = add i64 %2782, -25176
  %2784 = load i64, i64* %RAX.i, align 8
  %2785 = load i64, i64* %3, align 8
  %2786 = add i64 %2785, 7
  store i64 %2786, i64* %3, align 8
  %2787 = inttoptr i64 %2783 to i64*
  store i64 %2784, i64* %2787, align 8
  %.pre226 = load i64, i64* %3, align 8
  br label %block_.L_41ea4a

block_.L_41ea4a:                                  ; preds = %block_.L_41ea2d, %block_41ea0e
  %2788 = phi i64 [ %.pre226, %block_.L_41ea2d ], [ %2773, %block_41ea0e ]
  %MEMORY.44 = phi %struct.Memory* [ %2781, %block_.L_41ea2d ], [ %2765, %block_41ea0e ]
  %2789 = add i64 %2788, 5
  store i64 %2789, i64* %3, align 8
  %.pre227 = load i32, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  br label %block_.L_41ea4f

block_.L_41ea4f:                                  ; preds = %block_41e947, %block_.L_41ea4a
  %2790 = phi i32 [ %2724, %block_41e947 ], [ %.pre227, %block_.L_41ea4a ]
  %2791 = phi i64 [ %2748, %block_41e947 ], [ %2789, %block_.L_41ea4a ]
  %MEMORY.45 = phi %struct.Memory* [ %call2_41e9dc, %block_41e947 ], [ %MEMORY.44, %block_.L_41ea4a ]
  %2792 = add i32 %2790, 1
  %2793 = zext i32 %2792 to i64
  store i64 %2793, i64* %RAX.i, align 8
  %2794 = icmp eq i32 %2790, -1
  %2795 = icmp eq i32 %2792, 0
  %2796 = or i1 %2794, %2795
  %2797 = zext i1 %2796 to i8
  store i8 %2797, i8* %14, align 1
  %2798 = and i32 %2792, 255
  %2799 = tail call i32 @llvm.ctpop.i32(i32 %2798)
  %2800 = trunc i32 %2799 to i8
  %2801 = and i8 %2800, 1
  %2802 = xor i8 %2801, 1
  store i8 %2802, i8* %21, align 1
  %2803 = xor i32 %2792, %2790
  %2804 = lshr i32 %2803, 4
  %2805 = trunc i32 %2804 to i8
  %2806 = and i8 %2805, 1
  store i8 %2806, i8* %26, align 1
  %2807 = zext i1 %2795 to i8
  store i8 %2807, i8* %29, align 1
  %2808 = lshr i32 %2792, 31
  %2809 = trunc i32 %2808 to i8
  store i8 %2809, i8* %32, align 1
  %2810 = lshr i32 %2790, 31
  %2811 = xor i32 %2808, %2810
  %2812 = add nuw nsw i32 %2811, %2808
  %2813 = icmp eq i32 %2812, 2
  %2814 = zext i1 %2813 to i8
  store i8 %2814, i8* %38, align 1
  store i32 %2792, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  %2815 = load i64, i64* %RBP.i, align 8
  %2816 = add i64 %2815, -860
  %2817 = add i64 %2791, 24
  store i64 %2817, i64* %3, align 8
  %2818 = inttoptr i64 %2816 to i32*
  %2819 = load i32, i32* %2818, align 4
  store i8 0, i8* %14, align 1
  %2820 = and i32 %2819, 255
  %2821 = tail call i32 @llvm.ctpop.i32(i32 %2820)
  %2822 = trunc i32 %2821 to i8
  %2823 = and i8 %2822, 1
  %2824 = xor i8 %2823, 1
  store i8 %2824, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2825 = icmp eq i32 %2819, 0
  %2826 = zext i1 %2825 to i8
  store i8 %2826, i8* %29, align 1
  %2827 = lshr i32 %2819, 31
  %2828 = trunc i32 %2827 to i8
  store i8 %2828, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v336 = select i1 %2825, i64 80, i64 30
  %2829 = add i64 %2791, %.v336
  store i64 %2829, i64* %3, align 8
  br i1 %2825, label %block_.L_41ea9f, label %block_41ea6d

block_41ea6d:                                     ; preds = %block_.L_41ea4f
  store i64 ptrtoint (%G__0x429bef_type* @G__0x429bef to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2830 = add i64 %2829, -122301
  %2831 = add i64 %2829, 17
  %2832 = load i64, i64* %6, align 8
  %2833 = add i64 %2832, -8
  %2834 = inttoptr i64 %2833 to i64*
  store i64 %2831, i64* %2834, align 8
  store i64 %2833, i64* %6, align 8
  store i64 %2830, i64* %3, align 8
  %2835 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %MEMORY.45)
  %2836 = load i64, i64* %3, align 8
  %2837 = load i64, i64* bitcast (%G_0x62da80_type* @G_0x62da80 to i64*), align 8
  store i64 %2837, i64* %RDI.i176, align 8
  %2838 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %2839 = sub i32 1, %2838
  %2840 = zext i32 %2839 to i64
  store i64 %2840, i64* %RCX.i, align 8
  %2841 = icmp ugt i32 %2838, 1
  %2842 = zext i1 %2841 to i8
  store i8 %2842, i8* %14, align 1
  %2843 = and i32 %2839, 255
  %2844 = tail call i32 @llvm.ctpop.i32(i32 %2843)
  %2845 = trunc i32 %2844 to i8
  %2846 = and i8 %2845, 1
  %2847 = xor i8 %2846, 1
  store i8 %2847, i8* %21, align 1
  %2848 = xor i32 %2839, %2838
  %2849 = lshr i32 %2848, 4
  %2850 = trunc i32 %2849 to i8
  %2851 = and i8 %2850, 1
  store i8 %2851, i8* %26, align 1
  %2852 = icmp eq i32 %2839, 0
  %2853 = zext i1 %2852 to i8
  store i8 %2853, i8* %29, align 1
  %2854 = lshr i32 %2839, 31
  %2855 = trunc i32 %2854 to i8
  store i8 %2855, i8* %32, align 1
  %2856 = lshr i32 %2838, 31
  %2857 = add nuw nsw i32 %2854, %2856
  %2858 = icmp eq i32 %2857, 2
  %2859 = zext i1 %2858 to i8
  store i8 %2859, i8* %38, align 1
  store i64 %2840, i64* %RSI.i118, align 8
  %2860 = load i64, i64* %RBP.i, align 8
  %2861 = add i64 %2860, -25180
  %2862 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2863 = add i64 %2836, 28
  store i64 %2863, i64* %3, align 8
  %2864 = inttoptr i64 %2861 to i32*
  store i32 %2862, i32* %2864, align 4
  %2865 = load i64, i64* %3, align 8
  %2866 = add i64 %2865, 14630
  %2867 = add i64 %2865, 5
  %2868 = load i64, i64* %6, align 8
  %2869 = add i64 %2868, -8
  %2870 = inttoptr i64 %2869 to i64*
  store i64 %2867, i64* %2870, align 8
  store i64 %2869, i64* %6, align 8
  store i64 %2866, i64* %3, align 8
  %call2_41ea9a = tail call %struct.Memory* @sub_4223c0.display_board(%struct.State* nonnull %0, i64 %2866, %struct.Memory* %2835)
  %.pre228 = load i64, i64* %3, align 8
  br label %block_.L_41ea9f

block_.L_41ea9f:                                  ; preds = %block_41ea6d, %block_.L_41ea4f
  %2871 = phi i64 [ %2829, %block_.L_41ea4f ], [ %.pre228, %block_41ea6d ]
  %MEMORY.46 = phi %struct.Memory* [ %MEMORY.45, %block_.L_41ea4f ], [ %call2_41ea9a, %block_41ea6d ]
  %2872 = add i64 %2871, 35
  store i64 %2872, i64* %3, align 8
  br label %block_.L_41eac2

block_.L_41eaa4:                                  ; preds = %block_41e92b
  store i64 ptrtoint (%G__0x429359_type* @G__0x429359 to i64), i64* %RDI.i176, align 8
  %2873 = load i64, i64* %RBP.i, align 8
  %2874 = add i64 %2873, -272
  store i64 %2874, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %2875 = add i64 %2594, -122356
  %2876 = add i64 %2594, 24
  %2877 = load i64, i64* %6, align 8
  %2878 = add i64 %2877, -8
  %2879 = inttoptr i64 %2878 to i64*
  store i64 %2876, i64* %2879, align 8
  store i64 %2878, i64* %6, align 8
  store i64 %2875, i64* %3, align 8
  %2880 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41e939)
  %2881 = load i64, i64* %RBP.i, align 8
  %2882 = add i64 %2881, -25184
  %2883 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2884 = load i64, i64* %3, align 8
  %2885 = add i64 %2884, 6
  store i64 %2885, i64* %3, align 8
  %2886 = inttoptr i64 %2882 to i32*
  store i32 %2883, i32* %2886, align 4
  %.pre229 = load i64, i64* %3, align 8
  br label %block_.L_41eac2

block_.L_41eac2:                                  ; preds = %block_.L_41eaa4, %block_.L_41ea9f
  %2887 = phi i64 [ %.pre229, %block_.L_41eaa4 ], [ %2872, %block_.L_41ea9f ]
  %MEMORY.47 = phi %struct.Memory* [ %2880, %block_.L_41eaa4 ], [ %MEMORY.46, %block_.L_41ea9f ]
  %2888 = add i64 %2887, 6634
  br label %block_.L_4204ac

block_.L_41eac7:                                  ; preds = %block_41e916, %block_.L_41e909
  %2889 = phi i64 [ %2543, %block_.L_41e909 ], [ %.pre230, %block_41e916 ]
  %2890 = phi i64 [ %2557, %block_.L_41e909 ], [ %2575, %block_41e916 ]
  %MEMORY.48 = phi %struct.Memory* [ %MEMORY.43, %block_.L_41e909 ], [ %call2_41e91d, %block_41e916 ]
  store i64 ptrtoint (%G__0x42936b_type* @G__0x42936b to i64), i64* %RSI.i118, align 8
  %2891 = add i64 %2889, -272
  store i64 %2891, i64* %RDI.i176, align 8
  %2892 = add i64 %2890, -122071
  %2893 = add i64 %2890, 22
  %2894 = load i64, i64* %6, align 8
  %2895 = add i64 %2894, -8
  %2896 = inttoptr i64 %2895 to i64*
  store i64 %2893, i64* %2896, align 8
  store i64 %2895, i64* %6, align 8
  store i64 %2892, i64* %3, align 8
  %call2_41ead8 = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %2892, %struct.Memory* %MEMORY.48)
  %2897 = load i64, i64* %RAX.i, align 8
  %2898 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %2899 = trunc i64 %2897 to i32
  %2900 = and i32 %2899, 255
  %2901 = tail call i32 @llvm.ctpop.i32(i32 %2900)
  %2902 = trunc i32 %2901 to i8
  %2903 = and i8 %2902, 1
  %2904 = xor i8 %2903, 1
  store i8 %2904, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2905 = icmp eq i64 %2897, 0
  %2906 = zext i1 %2905 to i8
  store i8 %2906, i8* %29, align 1
  %2907 = lshr i64 %2897, 63
  %2908 = trunc i64 %2907 to i8
  store i8 %2908, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v258 = select i1 %2905, i64 10, i64 94
  %2909 = add i64 %2898, %.v258
  store i64 %2909, i64* %3, align 8
  %2910 = load i64, i64* %RBP.i, align 8
  br i1 %2905, label %block_41eae7, label %block_.L_41eb3b

block_41eae7:                                     ; preds = %block_.L_41eac7
  %2911 = add i64 %2910, -272
  store i64 %2911, i64* %RAX.i, align 8
  %2912 = add i64 %2910, -280
  %2913 = add i64 %2909, 14
  store i64 %2913, i64* %3, align 8
  %2914 = inttoptr i64 %2912 to i64*
  store i64 %2911, i64* %2914, align 8
  %.pre231 = load i64, i64* %3, align 8
  br label %block_.L_41eaf5

block_.L_41eaf5:                                  ; preds = %block_41eb05, %block_41eae7
  %2915 = phi i64 [ %2985, %block_41eb05 ], [ %.pre231, %block_41eae7 ]
  %2916 = load i64, i64* %RBP.i, align 8
  %2917 = add i64 %2916, -280
  %2918 = add i64 %2915, 7
  store i64 %2918, i64* %3, align 8
  %2919 = inttoptr i64 %2917 to i64*
  %2920 = load i64, i64* %2919, align 8
  store i64 %2920, i64* %RAX.i, align 8
  %2921 = add i64 %2915, 10
  store i64 %2921, i64* %3, align 8
  %2922 = inttoptr i64 %2920 to i8*
  %2923 = load i8, i8* %2922, align 1
  store i8 0, i8* %14, align 1
  %2924 = zext i8 %2923 to i32
  %2925 = tail call i32 @llvm.ctpop.i32(i32 %2924)
  %2926 = trunc i32 %2925 to i8
  %2927 = and i8 %2926, 1
  %2928 = xor i8 %2927, 1
  store i8 %2928, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %2929 = icmp eq i8 %2923, 0
  %2930 = zext i1 %2929 to i8
  store i8 %2930, i8* %29, align 1
  %2931 = lshr i8 %2923, 7
  store i8 %2931, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v332 = select i1 %2929, i64 65, i64 16
  %2932 = add i64 %2915, %.v332
  store i64 %2932, i64* %3, align 8
  br i1 %2929, label %block_.L_41eb36, label %block_41eb05

block_41eb05:                                     ; preds = %block_.L_41eaf5
  %2933 = add i64 %2932, 7
  store i64 %2933, i64* %3, align 8
  %2934 = load i64, i64* %2919, align 8
  store i64 %2934, i64* %RAX.i, align 8
  %2935 = add i64 %2932, 10
  store i64 %2935, i64* %3, align 8
  %2936 = inttoptr i64 %2934 to i8*
  %2937 = load i8, i8* %2936, align 1
  %2938 = sext i8 %2937 to i64
  %2939 = and i64 %2938, 4294967295
  store i64 %2939, i64* %RDI.i176, align 8
  %2940 = add i64 %2932, -122293
  %2941 = add i64 %2932, 15
  %2942 = load i64, i64* %6, align 8
  %2943 = add i64 %2942, -8
  %2944 = inttoptr i64 %2943 to i64*
  store i64 %2941, i64* %2944, align 8
  store i64 %2943, i64* %6, align 8
  store i64 %2940, i64* %3, align 8
  %call2_41eb0f = tail call %struct.Memory* @sub_400d50.tolower_plt(%struct.State* nonnull %0, i64 %2940, %struct.Memory* %call2_41ead8)
  %2945 = load i8, i8* %AL.i.pre-phi, align 1
  %2946 = load i64, i64* %3, align 8
  store i8 %2945, i8* %CL.i891, align 1
  %2947 = load i64, i64* %RBP.i, align 8
  %2948 = add i64 %2947, -280
  %2949 = add i64 %2946, 9
  store i64 %2949, i64* %3, align 8
  %2950 = inttoptr i64 %2948 to i64*
  %2951 = load i64, i64* %2950, align 8
  store i64 %2951, i64* %RDX.i, align 8
  %2952 = add i64 %2946, 11
  store i64 %2952, i64* %3, align 8
  %2953 = inttoptr i64 %2951 to i8*
  store i8 %2945, i8* %2953, align 1
  %2954 = load i64, i64* %RBP.i, align 8
  %2955 = add i64 %2954, -280
  %2956 = load i64, i64* %3, align 8
  %2957 = add i64 %2956, 7
  store i64 %2957, i64* %3, align 8
  %2958 = inttoptr i64 %2955 to i64*
  %2959 = load i64, i64* %2958, align 8
  %2960 = add i64 %2959, 1
  store i64 %2960, i64* %RAX.i, align 8
  %2961 = icmp eq i64 %2959, -1
  %2962 = icmp eq i64 %2960, 0
  %2963 = or i1 %2961, %2962
  %2964 = zext i1 %2963 to i8
  store i8 %2964, i8* %14, align 1
  %2965 = trunc i64 %2960 to i32
  %2966 = and i32 %2965, 255
  %2967 = tail call i32 @llvm.ctpop.i32(i32 %2966)
  %2968 = trunc i32 %2967 to i8
  %2969 = and i8 %2968, 1
  %2970 = xor i8 %2969, 1
  store i8 %2970, i8* %21, align 1
  %2971 = xor i64 %2960, %2959
  %2972 = lshr i64 %2971, 4
  %2973 = trunc i64 %2972 to i8
  %2974 = and i8 %2973, 1
  store i8 %2974, i8* %26, align 1
  %2975 = zext i1 %2962 to i8
  store i8 %2975, i8* %29, align 1
  %2976 = lshr i64 %2960, 63
  %2977 = trunc i64 %2976 to i8
  store i8 %2977, i8* %32, align 1
  %2978 = lshr i64 %2959, 63
  %2979 = xor i64 %2976, %2978
  %2980 = add nuw nsw i64 %2979, %2976
  %2981 = icmp eq i64 %2980, 2
  %2982 = zext i1 %2981 to i8
  store i8 %2982, i8* %38, align 1
  %2983 = add i64 %2956, 18
  store i64 %2983, i64* %3, align 8
  store i64 %2960, i64* %2958, align 8
  %2984 = load i64, i64* %3, align 8
  %2985 = add i64 %2984, -60
  store i64 %2985, i64* %3, align 8
  br label %block_.L_41eaf5

block_.L_41eb36:                                  ; preds = %block_.L_41eaf5
  %2986 = add i64 %2932, 5
  store i64 %2986, i64* %3, align 8
  br label %block_.L_41eb3b

block_.L_41eb3b:                                  ; preds = %block_.L_41eac7, %block_.L_41eb36
  %2987 = phi i64 [ %2986, %block_.L_41eb36 ], [ %2909, %block_.L_41eac7 ]
  %2988 = phi i64 [ %2916, %block_.L_41eb36 ], [ %2910, %block_.L_41eac7 ]
  %2989 = add i64 %2988, -272
  store i64 %2989, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429374_type* @G__0x429374 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429374_type* @G__0x429374 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %2990 = add i64 %2987, -122411
  %2991 = add i64 %2987, 19
  %2992 = load i64, i64* %6, align 8
  %2993 = add i64 %2992, -8
  %2994 = inttoptr i64 %2993 to i64*
  store i64 %2991, i64* %2994, align 8
  store i64 %2993, i64* %6, align 8
  store i64 %2990, i64* %3, align 8
  %2995 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %call2_41ead8)
  %2996 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %2997 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %2998 = and i32 %2996, 255
  %2999 = tail call i32 @llvm.ctpop.i32(i32 %2998)
  %3000 = trunc i32 %2999 to i8
  %3001 = and i8 %3000, 1
  %3002 = xor i8 %3001, 1
  store i8 %3002, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3003 = icmp eq i32 %2996, 0
  %3004 = zext i1 %3003 to i8
  store i8 %3004, i8* %29, align 1
  %3005 = lshr i32 %2996, 31
  %3006 = trunc i32 %3005 to i8
  store i8 %3006, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v259 = select i1 %3003, i64 9, i64 26
  %3007 = add i64 %2997, %.v259
  store i64 %3007, i64* %3, align 8
  br i1 %3003, label %block_41eb57, label %block_.L_41eb68

block_41eb57:                                     ; preds = %block_.L_41eb3b
  %3008 = add i64 %3007, 10537
  %3009 = add i64 %3007, 5
  %3010 = load i64, i64* %6, align 8
  %3011 = add i64 %3010, -8
  %3012 = inttoptr i64 %3011 to i64*
  store i64 %3009, i64* %3012, align 8
  store i64 %3011, i64* %6, align 8
  store i64 %3008, i64* %3, align 8
  %call2_41eb57 = tail call %struct.Memory* @sub_421480.free_hash(%struct.State* nonnull %0, i64 %3008, %struct.Memory* %2995)
  %3013 = load i64, i64* %3, align 8
  %3014 = add i64 %3013, -114364
  %3015 = add i64 %3013, 5
  %3016 = load i64, i64* %6, align 8
  %3017 = add i64 %3016, -8
  %3018 = inttoptr i64 %3017 to i64*
  store i64 %3015, i64* %3018, align 8
  store i64 %3017, i64* %6, align 8
  store i64 %3014, i64* %3, align 8
  %call2_41eb5c = tail call %struct.Memory* @sub_402ca0.free_ecache(%struct.State* nonnull %0, i64 %3014, %struct.Memory* %call2_41eb57)
  %3019 = load i64, i64* %3, align 8
  store i64 0, i64* %RDI.i176, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  %3020 = add i64 %3019, -122241
  %3021 = add i64 %3019, 7
  %3022 = load i64, i64* %6, align 8
  %3023 = add i64 %3022, -8
  %3024 = inttoptr i64 %3023 to i64*
  store i64 %3021, i64* %3024, align 8
  store i64 %3023, i64* %6, align 8
  store i64 %3020, i64* %3, align 8
  %3025 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %call2_41eb5c)
  %.pre233 = load i64, i64* %3, align 8
  br label %block_.L_41eb68

block_.L_41eb68:                                  ; preds = %block_.L_41eb3b, %block_41eb57
  %3026 = phi i64 [ %3007, %block_.L_41eb3b ], [ %.pre233, %block_41eb57 ]
  %MEMORY.51 = phi %struct.Memory* [ %2995, %block_.L_41eb3b ], [ %3025, %block_41eb57 ]
  %3027 = load i64, i64* %RBP.i, align 8
  %3028 = add i64 %3027, -272
  store i64 %3028, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429379_type* @G__0x429379 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429379_type* @G__0x429379 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3029 = add i64 %3026, -122456
  %3030 = add i64 %3026, 19
  %3031 = load i64, i64* %6, align 8
  %3032 = add i64 %3031, -8
  %3033 = inttoptr i64 %3032 to i64*
  store i64 %3030, i64* %3033, align 8
  store i64 %3032, i64* %6, align 8
  store i64 %3029, i64* %3, align 8
  %3034 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %MEMORY.51)
  %3035 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3036 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3037 = and i32 %3035, 255
  %3038 = tail call i32 @llvm.ctpop.i32(i32 %3037)
  %3039 = trunc i32 %3038 to i8
  %3040 = and i8 %3039, 1
  %3041 = xor i8 %3040, 1
  store i8 %3041, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3042 = icmp eq i32 %3035, 0
  %3043 = zext i1 %3042 to i8
  store i8 %3043, i8* %29, align 1
  %3044 = lshr i32 %3035, 31
  %3045 = trunc i32 %3044 to i8
  store i8 %3045, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v260 = select i1 %3042, i64 9, i64 83
  %3046 = add i64 %3036, %.v260
  store i64 %3046, i64* %3, align 8
  br i1 %3042, label %block_41eb84, label %block_.L_41ebce

block_41eb84:                                     ; preds = %block_.L_41eb68
  %3047 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  store i8 0, i8* %14, align 1
  %3048 = and i32 %3047, 255
  %3049 = tail call i32 @llvm.ctpop.i32(i32 %3048)
  %3050 = trunc i32 %3049 to i8
  %3051 = and i8 %3050, 1
  %3052 = xor i8 %3051, 1
  store i8 %3052, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3053 = icmp eq i32 %3047, 0
  %3054 = zext i1 %3053 to i8
  store i8 %3054, i8* %29, align 1
  %3055 = lshr i32 %3047, 31
  %3056 = trunc i32 %3055 to i8
  store i8 %3056, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v331 = select i1 %3053, i64 52, i64 14
  %3057 = add i64 %3046, %.v331
  store i64 %3057, i64* %3, align 8
  br i1 %3053, label %block_.L_41ebb8, label %block_41eb92

block_41eb92:                                     ; preds = %block_41eb84
  store i32 0, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  store i32 0, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*), align 8
  %3058 = add i64 %3057, 55
  store i64 %3058, i64* %3, align 8
  br label %block_.L_41ebc9

block_.L_41ebb8:                                  ; preds = %block_41eb84
  %3059 = add i64 %3057, 10440
  %3060 = add i64 %3057, 5
  %3061 = load i64, i64* %6, align 8
  %3062 = add i64 %3061, -8
  %3063 = inttoptr i64 %3062 to i64*
  store i64 %3060, i64* %3063, align 8
  store i64 %3062, i64* %6, align 8
  store i64 %3059, i64* %3, align 8
  %call2_41ebb8 = tail call %struct.Memory* @sub_421480.free_hash(%struct.State* nonnull %0, i64 %3059, %struct.Memory* %3034)
  %3064 = load i64, i64* %3, align 8
  %3065 = add i64 %3064, -114461
  %3066 = add i64 %3064, 5
  %3067 = load i64, i64* %6, align 8
  %3068 = add i64 %3067, -8
  %3069 = inttoptr i64 %3068 to i64*
  store i64 %3066, i64* %3069, align 8
  store i64 %3068, i64* %6, align 8
  store i64 %3065, i64* %3, align 8
  %call2_41ebbd = tail call %struct.Memory* @sub_402ca0.free_ecache(%struct.State* nonnull %0, i64 %3065, %struct.Memory* %call2_41ebb8)
  %3070 = load i64, i64* %3, align 8
  store i64 0, i64* %RDI.i176, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  %3071 = add i64 %3070, -122338
  %3072 = add i64 %3070, 7
  %3073 = load i64, i64* %6, align 8
  %3074 = add i64 %3073, -8
  %3075 = inttoptr i64 %3074 to i64*
  store i64 %3072, i64* %3075, align 8
  store i64 %3074, i64* %6, align 8
  store i64 %3071, i64* %3, align 8
  %3076 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %call2_41ebbd)
  %.pre234 = load i64, i64* %3, align 8
  br label %block_.L_41ebc9

block_.L_41ebc9:                                  ; preds = %block_.L_41ebb8, %block_41eb92
  %3077 = phi i64 [ %.pre234, %block_.L_41ebb8 ], [ %3058, %block_41eb92 ]
  %MEMORY.52 = phi %struct.Memory* [ %3076, %block_.L_41ebb8 ], [ %3034, %block_41eb92 ]
  %3078 = add i64 %3077, 6361
  br label %block_.L_4204a2

block_.L_41ebce:                                  ; preds = %block_.L_41eb68
  %3079 = load i64, i64* %RBP.i, align 8
  %3080 = add i64 %3079, -272
  store i64 %3080, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x42937e_type* @G__0x42937e to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42937e_type* @G__0x42937e to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3081 = add i64 %3046, -122558
  %3082 = add i64 %3046, 19
  %3083 = load i64, i64* %6, align 8
  %3084 = add i64 %3083, -8
  %3085 = inttoptr i64 %3084 to i64*
  store i64 %3082, i64* %3085, align 8
  store i64 %3084, i64* %6, align 8
  store i64 %3081, i64* %3, align 8
  %3086 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3034)
  %3087 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3088 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3089 = and i32 %3087, 255
  %3090 = tail call i32 @llvm.ctpop.i32(i32 %3089)
  %3091 = trunc i32 %3090 to i8
  %3092 = and i8 %3091, 1
  %3093 = xor i8 %3092, 1
  store i8 %3093, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3094 = icmp eq i32 %3087, 0
  %3095 = zext i1 %3094 to i8
  store i8 %3095, i8* %29, align 1
  %3096 = lshr i32 %3087, 31
  %3097 = trunc i32 %3096 to i8
  store i8 %3097, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v261 = select i1 %3094, i64 37, i64 9
  %3098 = add i64 %3088, %.v261
  store i64 %3098, i64* %3, align 8
  br i1 %3094, label %block_.L_41ec06, label %block_41ebea

block_41ebea:                                     ; preds = %block_.L_41ebce
  %3099 = load i64, i64* %RBP.i, align 8
  %3100 = add i64 %3099, -272
  store i64 %3100, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429aeb_type* @G__0x429aeb to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429aeb_type* @G__0x429aeb to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3101 = add i64 %3098, -122586
  %3102 = add i64 %3098, 19
  %3103 = load i64, i64* %6, align 8
  %3104 = add i64 %3103, -8
  %3105 = inttoptr i64 %3104 to i64*
  store i64 %3102, i64* %3105, align 8
  store i64 %3104, i64* %6, align 8
  store i64 %3101, i64* %3, align 8
  %3106 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3086)
  %3107 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3108 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3109 = and i32 %3107, 255
  %3110 = tail call i32 @llvm.ctpop.i32(i32 %3109)
  %3111 = trunc i32 %3110 to i8
  %3112 = and i8 %3111, 1
  %3113 = xor i8 %3112, 1
  store i8 %3113, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3114 = icmp eq i32 %3107, 0
  %3115 = zext i1 %3114 to i8
  store i8 %3115, i8* %29, align 1
  %3116 = lshr i32 %3107, 31
  %3117 = trunc i32 %3116 to i8
  store i8 %3117, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v262 = select i1 %3114, i64 9, i64 26
  %3118 = add i64 %3108, %.v262
  store i64 %3118, i64* %3, align 8
  br i1 %3114, label %block_.L_41ec06, label %block_.L_41ec17

block_.L_41ec06:                                  ; preds = %block_41ebea, %block_.L_41ebce
  %3119 = phi i64 [ %3098, %block_.L_41ebce ], [ %3118, %block_41ebea ]
  %MEMORY.53 = phi %struct.Memory* [ %3086, %block_.L_41ebce ], [ %3106, %block_41ebea ]
  %3120 = load i64, i64* %RBP.i, align 8
  %3121 = add i64 %3120, -860
  store i64 %3121, i64* %RDI.i176, align 8
  %3122 = add i64 %3119, 22010
  %3123 = add i64 %3119, 12
  %3124 = load i64, i64* %6, align 8
  %3125 = add i64 %3124, -8
  %3126 = inttoptr i64 %3125 to i64*
  store i64 %3123, i64* %3126, align 8
  store i64 %3125, i64* %6, align 8
  store i64 %3122, i64* %3, align 8
  %call2_41ec0d = tail call %struct.Memory* @sub_424200.toggle_bool(%struct.State* nonnull %0, i64 %3122, %struct.Memory* %MEMORY.53)
  %3127 = load i64, i64* %3, align 8
  %3128 = add i64 %3127, 6283
  br label %block_.L_42049d

block_.L_41ec17:                                  ; preds = %block_41ebea
  store i64 ptrtoint (%G__0x429386_type* @G__0x429386 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %3129 = load i64, i64* %RBP.i, align 8
  %3130 = add i64 %3129, -272
  store i64 %3130, i64* %RDI.i176, align 8
  %3131 = add i64 %3118, -122807
  %3132 = add i64 %3118, 29
  %3133 = load i64, i64* %6, align 8
  %3134 = add i64 %3133, -8
  %3135 = inttoptr i64 %3134 to i64*
  store i64 %3132, i64* %3135, align 8
  store i64 %3134, i64* %6, align 8
  store i64 %3131, i64* %3, align 8
  %3136 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %3106)
  %3137 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3138 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3139 = and i32 %3137, 255
  %3140 = tail call i32 @llvm.ctpop.i32(i32 %3139)
  %3141 = trunc i32 %3140 to i8
  %3142 = and i8 %3141, 1
  %3143 = xor i8 %3142, 1
  store i8 %3143, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3144 = icmp eq i32 %3137, 0
  %3145 = zext i1 %3144 to i8
  store i8 %3145, i8* %29, align 1
  %3146 = lshr i32 %3137, 31
  %3147 = trunc i32 %3146 to i8
  store i8 %3147, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v263 = select i1 %3144, i64 9, i64 194
  %3148 = add i64 %3138, %.v263
  store i64 %3148, i64* %3, align 8
  br i1 %3144, label %block_41ec3d, label %block_.L_41ecf6

block_41ec3d:                                     ; preds = %block_.L_41ec17
  store i64 ptrtoint (%G__0x429aea_type* @G__0x429aea to i64), i64* %RSI.i118, align 8
  %3149 = load i64, i64* %RBP.i, align 8
  %3150 = add i64 %3149, -852
  store i64 %3150, i64* %RDX.i, align 8
  %3151 = add i64 %3149, -272
  %3152 = add i64 %3149, -266
  store i64 %3152, i64* %RAX.i, align 8
  %3153 = icmp ult i64 %3152, %3151
  %3154 = icmp ult i64 %3152, 6
  %3155 = or i1 %3153, %3154
  %3156 = zext i1 %3155 to i8
  store i8 %3156, i8* %14, align 1
  %3157 = trunc i64 %3152 to i32
  %3158 = and i32 %3157, 255
  %3159 = tail call i32 @llvm.ctpop.i32(i32 %3158)
  %3160 = trunc i32 %3159 to i8
  %3161 = and i8 %3160, 1
  %3162 = xor i8 %3161, 1
  store i8 %3162, i8* %21, align 1
  %3163 = xor i64 %3151, %3152
  %3164 = lshr i64 %3163, 4
  %3165 = trunc i64 %3164 to i8
  %3166 = and i8 %3165, 1
  store i8 %3166, i8* %26, align 1
  %3167 = icmp eq i64 %3152, 0
  %3168 = zext i1 %3167 to i8
  store i8 %3168, i8* %29, align 1
  %3169 = lshr i64 %3152, 63
  %3170 = trunc i64 %3169 to i8
  store i8 %3170, i8* %32, align 1
  %3171 = lshr i64 %3151, 63
  %3172 = xor i64 %3169, %3171
  %3173 = add nuw nsw i64 %3172, %3169
  %3174 = icmp eq i64 %3173, 2
  %3175 = zext i1 %3174 to i8
  store i8 %3175, i8* %38, align 1
  store i64 %3152, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3176 = add i64 %3148, -122557
  %3177 = add i64 %3148, 38
  %3178 = load i64, i64* %6, align 8
  %3179 = add i64 %3178, -8
  %3180 = inttoptr i64 %3179 to i64*
  store i64 %3177, i64* %3180, align 8
  store i64 %3179, i64* %6, align 8
  store i64 %3176, i64* %3, align 8
  %3181 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %3136)
  %3182 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x633b4c_type* @G_0x633b4c to i32*), align 8
  %3183 = load i64, i64* %RBP.i, align 8
  %3184 = add i64 %3183, -25188
  %3185 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3186 = add i64 %3182, 17
  store i64 %3186, i64* %3, align 8
  %3187 = inttoptr i64 %3184 to i32*
  store i32 %3185, i32* %3187, align 4
  %3188 = load i64, i64* %3, align 8
  %3189 = add i64 %3188, 19180
  %3190 = add i64 %3188, 5
  %3191 = load i64, i64* %6, align 8
  %3192 = add i64 %3191, -8
  %3193 = inttoptr i64 %3192 to i64*
  store i64 %3190, i64* %3193, align 8
  store i64 %3192, i64* %6, align 8
  store i64 %3189, i64* %3, align 8
  %call2_41ec74 = tail call %struct.Memory* @sub_423760.rtime(%struct.State* nonnull %0, i64 %3189, %struct.Memory* %3181)
  %3194 = load i64, i64* %RBP.i, align 8
  %3195 = add i64 %3194, -24896
  %3196 = load i64, i64* %RAX.i, align 8
  %3197 = load i64, i64* %3, align 8
  %3198 = add i64 %3197, 7
  store i64 %3198, i64* %3, align 8
  %3199 = inttoptr i64 %3195 to i64*
  store i64 %3196, i64* %3199, align 8
  %3200 = load i64, i64* %RBP.i, align 8
  %3201 = add i64 %3200, -852
  %3202 = load i64, i64* %3, align 8
  %3203 = add i64 %3202, 6
  store i64 %3203, i64* %3, align 8
  %3204 = inttoptr i64 %3201 to i32*
  %3205 = load i32, i32* %3204, align 4
  %3206 = zext i32 %3205 to i64
  store i64 %3206, i64* %RDI.i176, align 8
  %3207 = add i64 %3202, -32608
  %3208 = add i64 %3202, 11
  %3209 = load i64, i64* %6, align 8
  %3210 = add i64 %3209, -8
  %3211 = inttoptr i64 %3210 to i64*
  store i64 %3208, i64* %3211, align 8
  store i64 %3210, i64* %6, align 8
  store i64 %3207, i64* %3, align 8
  %call2_41ec86 = tail call %struct.Memory* @sub_416d20.perft(%struct.State* nonnull %0, i64 %3207, %struct.Memory* %call2_41ec74)
  %3212 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x42938c_type* @G__0x42938c to i64), i64* %RDI.i176, align 8
  %3213 = load i64, i64* %RBP.i, align 8
  %3214 = add i64 %3213, -852
  %3215 = add i64 %3212, 16
  store i64 %3215, i64* %3, align 8
  %3216 = inttoptr i64 %3214 to i32*
  %3217 = load i32, i32* %3216, align 4
  %3218 = zext i32 %3217 to i64
  store i64 %3218, i64* %RSI.i118, align 8
  %3219 = load i32, i32* bitcast (%G_0x633b4c_type* @G_0x633b4c to i32*), align 8
  %3220 = zext i32 %3219 to i64
  store i64 %3220, i64* %RDX.i, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3221 = add i64 %3212, -122843
  %3222 = add i64 %3212, 30
  %3223 = load i64, i64* %6, align 8
  %3224 = add i64 %3223, -8
  %3225 = inttoptr i64 %3224 to i64*
  store i64 %3222, i64* %3225, align 8
  store i64 %3224, i64* %6, align 8
  store i64 %3221, i64* %3, align 8
  %3226 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41ec86)
  %3227 = load i64, i64* %RBP.i, align 8
  %3228 = add i64 %3227, -25192
  %3229 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3230 = load i64, i64* %3, align 8
  %3231 = add i64 %3230, 6
  store i64 %3231, i64* %3, align 8
  %3232 = inttoptr i64 %3228 to i32*
  store i32 %3229, i32* %3232, align 4
  %3233 = load i64, i64* %3, align 8
  %3234 = add i64 %3233, 19121
  %3235 = add i64 %3233, 5
  %3236 = load i64, i64* %6, align 8
  %3237 = add i64 %3236, -8
  %3238 = inttoptr i64 %3237 to i64*
  store i64 %3235, i64* %3238, align 8
  store i64 %3237, i64* %6, align 8
  store i64 %3234, i64* %3, align 8
  %call2_41ecaf = tail call %struct.Memory* @sub_423760.rtime(%struct.State* nonnull %0, i64 %3234, %struct.Memory* %3226)
  %3239 = load i64, i64* %RBP.i, align 8
  %3240 = add i64 %3239, -24896
  %3241 = load i64, i64* %3, align 8
  %3242 = add i64 %3241, 7
  store i64 %3242, i64* %3, align 8
  %3243 = inttoptr i64 %3240 to i64*
  %3244 = load i64, i64* %3243, align 8
  store i64 %3244, i64* %RSI.i118, align 8
  %3245 = load i64, i64* %RAX.i, align 8
  store i64 %3245, i64* %RDI.i176, align 8
  %3246 = add i64 %3241, 19132
  %3247 = add i64 %3241, 15
  %3248 = load i64, i64* %6, align 8
  %3249 = add i64 %3248, -8
  %3250 = inttoptr i64 %3249 to i64*
  store i64 %3247, i64* %3250, align 8
  store i64 %3249, i64* %6, align 8
  store i64 %3246, i64* %3, align 8
  %call2_41ecbe = tail call %struct.Memory* @sub_423770.rdifftime(%struct.State* nonnull %0, i64 %3246, %struct.Memory* %call2_41ecaf)
  %3251 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4293a8_type* @G__0x4293a8 to i64), i64* %RDI.i176, align 8
  %3252 = add i64 %3251, add (i64 ptrtoint (%G_0x96d3__rip__type* @G_0x96d3__rip_ to i64), i64 10)
  %3253 = add i64 %3251, 18
  store i64 %3253, i64* %3, align 8
  %3254 = inttoptr i64 %3252 to double*
  %3255 = load double, double* %3254, align 8
  %3256 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3257 = load <2 x i32>, <2 x i32>* %307, align 1
  %3258 = load <2 x i32>, <2 x i32>* %309, align 1
  %3259 = sitofp i32 %3256 to float
  store float %3259, float* %310, align 1
  %3260 = extractelement <2 x i32> %3257, i32 1
  store i32 %3260, i32* %312, align 1
  %3261 = extractelement <2 x i32> %3258, i32 0
  store i32 %3261, i32* %313, align 1
  %3262 = extractelement <2 x i32> %3258, i32 1
  store i32 %3262, i32* %315, align 1
  %3263 = load <2 x float>, <2 x float>* %327, align 1
  %3264 = extractelement <2 x float> %3263, i32 0
  %3265 = fpext float %3264 to double
  %3266 = load <2 x i32>, <2 x i32>* %362, align 1
  %3267 = fdiv double %3265, %3255
  store double %3267, double* %329, align 1
  %.cast150 = bitcast double %3267 to <2 x i32>
  %3268 = extractelement <2 x i32> %.cast150, i32 0
  store i32 %3268, i32* %338, align 1
  %3269 = extractelement <2 x i32> %.cast150, i32 1
  store i32 %3269, i32* %333, align 1
  %3270 = extractelement <2 x i32> %3266, i32 0
  store i32 %3270, i32* %334, align 1
  %3271 = extractelement <2 x i32> %3266, i32 1
  store i32 %3271, i32* %336, align 1
  store i8 1, i8* %AL.i.pre-phi, align 1
  %3272 = add i64 %3251, -122899
  %3273 = add i64 %3251, 40
  %3274 = load i64, i64* %6, align 8
  %3275 = add i64 %3274, -8
  %3276 = inttoptr i64 %3275 to i64*
  store i64 %3273, i64* %3276, align 8
  store i64 %3275, i64* %6, align 8
  store i64 %3272, i64* %3, align 8
  %3277 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41ecbe)
  %3278 = load i64, i64* %RBP.i, align 8
  %3279 = add i64 %3278, -25196
  %3280 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3281 = load i64, i64* %3, align 8
  %3282 = add i64 %3281, 6
  store i64 %3282, i64* %3, align 8
  %3283 = inttoptr i64 %3279 to i32*
  store i32 %3280, i32* %3283, align 4
  %3284 = load i64, i64* %3, align 8
  %3285 = add i64 %3284, 6055
  br label %block_.L_420498

block_.L_41ecf6:                                  ; preds = %block_.L_41ec17
  %3286 = load i64, i64* %RBP.i, align 8
  %3287 = add i64 %3286, -272
  store i64 %3287, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x4293b5_type* @G__0x4293b5 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4293b5_type* @G__0x4293b5 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3288 = add i64 %3148, -122854
  %3289 = add i64 %3148, 19
  %3290 = load i64, i64* %6, align 8
  %3291 = add i64 %3290, -8
  %3292 = inttoptr i64 %3291 to i64*
  store i64 %3289, i64* %3292, align 8
  store i64 %3291, i64* %6, align 8
  store i64 %3288, i64* %3, align 8
  %3293 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3136)
  %3294 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3295 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3296 = and i32 %3294, 255
  %3297 = tail call i32 @llvm.ctpop.i32(i32 %3296)
  %3298 = trunc i32 %3297 to i8
  %3299 = and i8 %3298, 1
  %3300 = xor i8 %3299, 1
  store i8 %3300, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3301 = icmp eq i32 %3294, 0
  %3302 = zext i1 %3301 to i8
  store i8 %3302, i8* %29, align 1
  %3303 = lshr i32 %3294, 31
  %3304 = trunc i32 %3303 to i8
  store i8 %3304, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v264 = select i1 %3301, i64 9, i64 384
  %3305 = add i64 %3295, %.v264
  store i64 %3305, i64* %3, align 8
  br i1 %3301, label %block_41ed12, label %block_.L_41ee89

block_41ed12:                                     ; preds = %block_.L_41ecf6
  %3306 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  store i8 0, i8* %14, align 1
  %3307 = and i32 %3306, 255
  %3308 = tail call i32 @llvm.ctpop.i32(i32 %3307)
  %3309 = trunc i32 %3308 to i8
  %3310 = and i8 %3309, 1
  %3311 = xor i8 %3310, 1
  store i8 %3311, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3312 = icmp eq i32 %3306, 0
  %3313 = zext i1 %3312 to i8
  store i8 %3313, i8* %29, align 1
  %3314 = lshr i32 %3306, 31
  %3315 = trunc i32 %3314 to i8
  store i8 %3315, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v328 = select i1 %3312, i64 47, i64 14
  %3316 = add i64 %3305, %.v328
  store i64 %3316, i64* %3, align 8
  br i1 %3312, label %block_.L_41ed41, label %block_41ed20

block_41ed20:                                     ; preds = %block_41ed12
  store i64 ptrtoint (%G__0x4293b9_type* @G__0x4293b9 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x84ad30_type* @G__0x84ad30 to i64), i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3317 = add i64 %3316, -122992
  %3318 = add i64 %3316, 27
  %3319 = load i64, i64* %6, align 8
  %3320 = add i64 %3319, -8
  %3321 = inttoptr i64 %3320 to i64*
  store i64 %3318, i64* %3321, align 8
  store i64 %3320, i64* %6, align 8
  store i64 %3317, i64* %3, align 8
  %3322 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %3293)
  %3323 = load i64, i64* %RBP.i, align 8
  %3324 = add i64 %3323, -25200
  %3325 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3326 = load i64, i64* %3, align 8
  %3327 = add i64 %3326, 6
  store i64 %3327, i64* %3, align 8
  %3328 = inttoptr i64 %3324 to i32*
  store i32 %3325, i32* %3328, align 4
  %.pre235 = load i64, i64* %3, align 8
  br label %block_.L_41ed41

block_.L_41ed41:                                  ; preds = %block_41ed20, %block_41ed12
  %3329 = phi i64 [ %3316, %block_41ed12 ], [ %.pre235, %block_41ed20 ]
  %MEMORY.54 = phi %struct.Memory* [ %3293, %block_41ed12 ], [ %3322, %block_41ed20 ]
  %3330 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  store i8 0, i8* %14, align 1
  %3331 = and i32 %3330, 255
  %3332 = tail call i32 @llvm.ctpop.i32(i32 %3331)
  %3333 = trunc i32 %3332 to i8
  %3334 = and i8 %3333, 1
  %3335 = xor i8 %3334, 1
  store i8 %3335, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3336 = icmp eq i32 %3330, 0
  %3337 = zext i1 %3336 to i8
  store i8 %3337, i8* %29, align 1
  %3338 = lshr i32 %3330, 31
  %3339 = trunc i32 %3338 to i8
  store i8 %3339, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v329 = select i1 %3336, i64 14, i64 307
  %3340 = add i64 %3329, %.v329
  store i64 %3340, i64* %3, align 8
  br i1 %3336, label %block_41ed4f, label %block_.L_41ee74

block_41ed4f:                                     ; preds = %block_.L_41ed41
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RSI.i118, align 8
  %3341 = add i64 %3340, -122895
  %3342 = add i64 %3340, 36
  %3343 = load i64, i64* %6, align 8
  %3344 = add i64 %3343, -8
  %3345 = inttoptr i64 %3344 to i64*
  store i64 %3342, i64* %3345, align 8
  store i64 %3344, i64* %6, align 8
  store i64 %3341, i64* %3, align 8
  %3346 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %MEMORY.54)
  %3347 = load i64, i64* %3, align 8
  store i32 2, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %3348 = add i64 %3347, 14637
  %3349 = add i64 %3347, 16
  %3350 = load i64, i64* %6, align 8
  %3351 = add i64 %3350, -8
  %3352 = inttoptr i64 %3351 to i64*
  store i64 %3349, i64* %3352, align 8
  store i64 %3351, i64* %6, align 8
  store i64 %3348, i64* %3, align 8
  %call2_41ed7e = tail call %struct.Memory* @sub_4226a0.init_game(%struct.State* nonnull %0, i64 %3348, %struct.Memory* %3346)
  %3353 = load i64, i64* %3, align 8
  %3354 = add i64 %3353, 6269
  %3355 = add i64 %3353, 5
  %3356 = load i64, i64* %6, align 8
  %3357 = add i64 %3356, -8
  %3358 = inttoptr i64 %3357 to i64*
  store i64 %3355, i64* %3358, align 8
  store i64 %3357, i64* %6, align 8
  store i64 %3354, i64* %3, align 8
  %call2_41ed83 = tail call %struct.Memory* @sub_420600.initialize_hash(%struct.State* nonnull %0, i64 %3354, %struct.Memory* %call2_41ed7e)
  %3359 = load i64, i64* %RBP.i, align 8
  %3360 = add i64 %3359, -24880
  %3361 = load i64, i64* %3, align 8
  %3362 = add i64 %3361, 7
  store i64 %3362, i64* %3, align 8
  %3363 = inttoptr i64 %3360 to i32*
  %3364 = load i32, i32* %3363, align 4
  store i8 0, i8* %14, align 1
  %3365 = and i32 %3364, 255
  %3366 = tail call i32 @llvm.ctpop.i32(i32 %3365)
  %3367 = trunc i32 %3366 to i8
  %3368 = and i8 %3367, 1
  %3369 = xor i8 %3368, 1
  store i8 %3369, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3370 = icmp eq i32 %3364, 0
  %3371 = zext i1 %3370 to i8
  store i8 %3371, i8* %29, align 1
  %3372 = lshr i32 %3364, 31
  %3373 = trunc i32 %3372 to i8
  store i8 %3373, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v330 = select i1 %3370, i64 13, i64 23
  %3374 = add i64 %3361, %.v330
  store i64 %3374, i64* %3, align 8
  br i1 %3370, label %block_41ed95, label %block_.L_41ed9f

block_41ed95:                                     ; preds = %block_41ed4f
  %3375 = add i64 %3374, 5931
  %3376 = add i64 %3374, 5
  %3377 = load i64, i64* %6, align 8
  %3378 = add i64 %3377, -8
  %3379 = inttoptr i64 %3378 to i64*
  store i64 %3376, i64* %3379, align 8
  store i64 %3378, i64* %6, align 8
  store i64 %3375, i64* %3, align 8
  %call2_41ed95 = tail call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* nonnull %0, i64 %3375, %struct.Memory* %call2_41ed83)
  %3380 = load i64, i64* %3, align 8
  %3381 = add i64 %3380, -115082
  %3382 = add i64 %3380, 5
  %3383 = load i64, i64* %6, align 8
  %3384 = add i64 %3383, -8
  %3385 = inttoptr i64 %3384 to i64*
  store i64 %3382, i64* %3385, align 8
  store i64 %3384, i64* %6, align 8
  store i64 %3381, i64* %3, align 8
  %call2_41ed9a = tail call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* nonnull %0, i64 %3381, %struct.Memory* %call2_41ed95)
  %.pre236 = load i64, i64* %3, align 8
  %.pre237 = load i64, i64* %RBP.i, align 8
  br label %block_.L_41ed9f

block_.L_41ed9f:                                  ; preds = %block_41ed4f, %block_41ed95
  %3386 = phi i64 [ %3359, %block_41ed4f ], [ %.pre237, %block_41ed95 ]
  %3387 = phi i64 [ %3374, %block_41ed4f ], [ %.pre236, %block_41ed95 ]
  %MEMORY.55 = phi %struct.Memory* [ %call2_41ed83, %block_41ed4f ], [ %call2_41ed9a, %block_41ed95 ]
  store i64 1, i64* %RDI.i176, align 8
  %3388 = add i64 %3386, -856
  %3389 = add i64 %3387, 15
  store i64 %3389, i64* %3, align 8
  %3390 = inttoptr i64 %3388 to i32*
  store i32 0, i32* %3390, align 4
  %3391 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886a60_type* @G_0x886a60 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x86bd74_type* @G_0x86bd74 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x86bd78_type* @G_0x86bd78 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x880654_type* @G_0x880654 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  store i64 0, i64* %RAX.i, align 8
  store i32 0, i32* inttoptr (i64 8692688 to i32*), align 16
  store i32 0, i32* bitcast (%G_0x886be4_type* @G_0x886be4 to i32*), align 8
  store i32 2000, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  store i32 2000, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  store i32 1, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*), align 8
  %3392 = load i64, i64* %RBP.i, align 8
  %3393 = add i64 %3392, -24884
  %3394 = add i64 %3391, 183
  store i64 %3394, i64* %3, align 8
  %3395 = inttoptr i64 %3393 to i32*
  store i32 0, i32* %3395, align 4
  %3396 = load i64, i64* %3, align 8
  %3397 = add i64 %3396, -54757
  %3398 = add i64 %3396, 5
  %3399 = load i64, i64* %6, align 8
  %3400 = add i64 %3399, -8
  %3401 = inttoptr i64 %3400 to i64*
  store i64 %3398, i64* %3401, align 8
  store i64 %3400, i64* %6, align 8
  store i64 %3397, i64* %3, align 8
  %call2_41ee65 = tail call %struct.Memory* @sub_411880.CheckBadFlow(%struct.State* nonnull %0, i64 %3397, %struct.Memory* %MEMORY.55)
  %3402 = load i64, i64* %3, align 8
  %3403 = add i64 %3402, -60682
  %3404 = add i64 %3402, 5
  %3405 = load i64, i64* %6, align 8
  %3406 = add i64 %3405, -8
  %3407 = inttoptr i64 %3406 to i64*
  store i64 %3404, i64* %3407, align 8
  store i64 %3406, i64* %6, align 8
  store i64 %3403, i64* %3, align 8
  %call2_41ee6a = tail call %struct.Memory* @sub_410160.ResetHandValue(%struct.State* nonnull %0, i64 %3403, %struct.Memory* %call2_41ee65)
  %3408 = load i64, i64* %3, align 8
  %3409 = add i64 %3408, 21
  store i64 %3409, i64* %3, align 8
  br label %block_.L_41ee84

block_.L_41ee74:                                  ; preds = %block_.L_41ed41
  %3410 = add i64 %3340, 14380
  %3411 = add i64 %3340, 5
  %3412 = load i64, i64* %6, align 8
  %3413 = add i64 %3412, -8
  %3414 = inttoptr i64 %3413 to i64*
  store i64 %3411, i64* %3414, align 8
  store i64 %3413, i64* %6, align 8
  store i64 %3410, i64* %3, align 8
  %call2_41ee74 = tail call %struct.Memory* @sub_4226a0.init_game(%struct.State* nonnull %0, i64 %3410, %struct.Memory* %MEMORY.54)
  %3415 = load i64, i64* %3, align 8
  %3416 = add i64 %3415, 11
  store i64 %3416, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  br label %block_.L_41ee84

block_.L_41ee84:                                  ; preds = %block_.L_41ee74, %block_.L_41ed9f
  %3417 = phi i64 [ %3416, %block_.L_41ee74 ], [ %3409, %block_.L_41ed9f ]
  %MEMORY.56 = phi %struct.Memory* [ %call2_41ee74, %block_.L_41ee74 ], [ %call2_41ee6a, %block_.L_41ed9f ]
  %3418 = add i64 %3417, 5647
  br label %block_.L_420493

block_.L_41ee89:                                  ; preds = %block_.L_41ecf6
  %3419 = load i64, i64* %RBP.i, align 8
  %3420 = add i64 %3419, -272
  store i64 %3420, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x4293e1_type* @G__0x4293e1 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4293e1_type* @G__0x4293e1 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3421 = add i64 %3305, -123257
  %3422 = add i64 %3305, 19
  %3423 = load i64, i64* %6, align 8
  %3424 = add i64 %3423, -8
  %3425 = inttoptr i64 %3424 to i64*
  store i64 %3422, i64* %3425, align 8
  store i64 %3424, i64* %6, align 8
  store i64 %3421, i64* %3, align 8
  %3426 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3293)
  %3427 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3428 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3429 = and i32 %3427, 255
  %3430 = tail call i32 @llvm.ctpop.i32(i32 %3429)
  %3431 = trunc i32 %3430 to i8
  %3432 = and i8 %3431, 1
  %3433 = xor i8 %3432, 1
  store i8 %3433, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3434 = icmp eq i32 %3427, 0
  %3435 = zext i1 %3434 to i8
  store i8 %3435, i8* %29, align 1
  %3436 = lshr i32 %3427, 31
  %3437 = trunc i32 %3436 to i8
  store i8 %3437, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v265 = select i1 %3434, i64 9, i64 112
  %3438 = add i64 %3428, %.v265
  store i64 %3438, i64* %3, align 8
  %3439 = load i64, i64* %RBP.i, align 8
  br i1 %3434, label %block_41eea5, label %block_.L_41ef0c

block_41eea5:                                     ; preds = %block_.L_41ee89
  %3440 = add i64 %3439, -860
  store i64 %3440, i64* %RDI.i176, align 8
  store i32 1, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  %3441 = add i64 %3438, 21339
  %3442 = add i64 %3438, 23
  %3443 = load i64, i64* %6, align 8
  %3444 = add i64 %3443, -8
  %3445 = inttoptr i64 %3444 to i64*
  store i64 %3442, i64* %3445, align 8
  store i64 %3444, i64* %6, align 8
  store i64 %3441, i64* %3, align 8
  %call2_41eeb7 = tail call %struct.Memory* @sub_424200.toggle_bool(%struct.State* nonnull %0, i64 %3441, %struct.Memory* %3426)
  %3446 = load i64, i64* %3, align 8
  store i64 2, i64* %RDI.i176, align 8
  store i64 1, i64* %RAX.i, align 8
  store i64 1, i64* %RSI.i118, align 8
  %3447 = add i64 %3446, -123292
  %3448 = add i64 %3446, 17
  %3449 = load i64, i64* %6, align 8
  %3450 = add i64 %3449, -8
  %3451 = inttoptr i64 %3450 to i64*
  store i64 %3448, i64* %3451, align 8
  store i64 %3450, i64* %6, align 8
  store i64 %3447, i64* %3, align 8
  %call2_41eec8 = tail call %struct.Memory* @sub_400d20.signal_plt(%struct.State* nonnull %0, i64 %3447, %struct.Memory* %call2_41eeb7)
  %3452 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429bef_type* @G__0x429bef to i64), i64* %RDI.i176, align 8
  %3453 = load i64, i64* %RBP.i, align 8
  %3454 = add i64 %3453, -25208
  %3455 = load i64, i64* %RAX.i, align 8
  %3456 = add i64 %3452, 17
  store i64 %3456, i64* %3, align 8
  %3457 = inttoptr i64 %3454 to i64*
  store i64 %3455, i64* %3457, align 8
  %3458 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3459 = add i64 %3458, -123438
  %3460 = add i64 %3458, 7
  %3461 = load i64, i64* %6, align 8
  %3462 = add i64 %3461, -8
  %3463 = inttoptr i64 %3462 to i64*
  store i64 %3460, i64* %3463, align 8
  store i64 %3462, i64* %6, align 8
  store i64 %3459, i64* %3, align 8
  %3464 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41eec8)
  %3465 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x428764_type* @G__0x428764 to i64), i64* %RDI.i176, align 8
  %3466 = load i64, i64* %RBP.i, align 8
  %3467 = add i64 %3466, -25212
  %3468 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3469 = add i64 %3465, 16
  store i64 %3469, i64* %3, align 8
  %3470 = inttoptr i64 %3467 to i32*
  store i32 %3468, i32* %3470, align 4
  %3471 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3472 = add i64 %3471, -123461
  %3473 = add i64 %3471, 7
  %3474 = load i64, i64* %6, align 8
  %3475 = add i64 %3474, -8
  %3476 = inttoptr i64 %3475 to i64*
  store i64 %3473, i64* %3476, align 8
  store i64 %3475, i64* %6, align 8
  store i64 %3472, i64* %3, align 8
  %3477 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %3464)
  %3478 = load i64, i64* %RBP.i, align 8
  %3479 = add i64 %3478, -25216
  %3480 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3481 = load i64, i64* %3, align 8
  %3482 = add i64 %3481, 6
  store i64 %3482, i64* %3, align 8
  %3483 = inttoptr i64 %3479 to i32*
  store i32 %3480, i32* %3483, align 4
  %3484 = load i64, i64* %3, align 8
  %3485 = add i64 %3484, -60786
  %3486 = add i64 %3484, 5
  %3487 = load i64, i64* %6, align 8
  %3488 = add i64 %3487, -8
  %3489 = inttoptr i64 %3488 to i64*
  store i64 %3486, i64* %3489, align 8
  store i64 %3488, i64* %6, align 8
  store i64 %3485, i64* %3, align 8
  %call2_41ef02 = tail call %struct.Memory* @sub_410190.BegForPartner(%struct.State* nonnull %0, i64 %3485, %struct.Memory* %3477)
  %3490 = load i64, i64* %3, align 8
  %3491 = add i64 %3490, 5511
  br label %block_.L_42048e

block_.L_41ef0c:                                  ; preds = %block_.L_41ee89
  %3492 = add i64 %3439, -272
  store i64 %3492, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x4293e8_type* @G__0x4293e8 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4293e8_type* @G__0x4293e8 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3493 = add i64 %3438, -123388
  %3494 = add i64 %3438, 19
  %3495 = load i64, i64* %6, align 8
  %3496 = add i64 %3495, -8
  %3497 = inttoptr i64 %3496 to i64*
  store i64 %3494, i64* %3497, align 8
  store i64 %3496, i64* %6, align 8
  store i64 %3493, i64* %3, align 8
  %3498 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3426)
  %3499 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3500 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3501 = and i32 %3499, 255
  %3502 = tail call i32 @llvm.ctpop.i32(i32 %3501)
  %3503 = trunc i32 %3502 to i8
  %3504 = and i8 %3503, 1
  %3505 = xor i8 %3504, 1
  store i8 %3505, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3506 = icmp eq i32 %3499, 0
  %3507 = zext i1 %3506 to i8
  store i8 %3507, i8* %29, align 1
  %3508 = lshr i32 %3499, 31
  %3509 = trunc i32 %3508 to i8
  store i8 %3509, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v266 = select i1 %3506, i64 9, i64 90
  %3510 = add i64 %3500, %.v266
  store i64 %3510, i64* %3, align 8
  br i1 %3506, label %block_41ef28, label %block_.L_41ef79

block_41ef28:                                     ; preds = %block_.L_41ef0c
  store i64 ptrtoint (%G__0x4293ee_type* @G__0x4293ee to i64), i64* %RDI.i176, align 8
  %3511 = add i64 %3510, add (i64 ptrtoint (%G_0x946e__rip__type* @G_0x946e__rip_ to i64), i64 10)
  %3512 = add i64 %3510, 18
  store i64 %3512, i64* %3, align 8
  %3513 = inttoptr i64 %3511 to i64*
  %3514 = load i64, i64* %3513, align 8
  %3515 = load i32, i32* bitcast (%G_0x864500_type* @G_0x864500 to i32*), align 8
  %3516 = zext i32 %3515 to i64
  store i64 %3516, i64* %RSI.i118, align 8
  %3517 = load <2 x i32>, <2 x i32>* %307, align 1
  %3518 = load <2 x i32>, <2 x i32>* %309, align 1
  %3519 = load i32, i32* bitcast (%G_0x63ae44_type* @G_0x63ae44 to i32*), align 8
  %3520 = sitofp i32 %3519 to float
  store float %3520, float* %310, align 1
  %3521 = extractelement <2 x i32> %3517, i32 1
  store i32 %3521, i32* %312, align 1
  %3522 = extractelement <2 x i32> %3518, i32 0
  store i32 %3522, i32* %313, align 1
  %3523 = extractelement <2 x i32> %3518, i32 1
  store i32 %3523, i32* %315, align 1
  %3524 = load <2 x i32>, <2 x i32>* %318, align 1
  %3525 = load <2 x i32>, <2 x i32>* %320, align 1
  %3526 = sitofp i32 %3515 to float
  store float %3526, float* %321, align 1
  %3527 = extractelement <2 x i32> %3524, i32 1
  store i32 %3527, i32* %323, align 1
  %3528 = extractelement <2 x i32> %3525, i32 0
  store i32 %3528, i32* %324, align 1
  %3529 = extractelement <2 x i32> %3525, i32 1
  store i32 %3529, i32* %326, align 1
  %3530 = load <2 x float>, <2 x float>* %327, align 1
  %3531 = load <2 x i32>, <2 x i32>* %309, align 1
  %3532 = load <2 x float>, <2 x float>* %328, align 1
  %3533 = extractelement <2 x float> %3530, i32 0
  %3534 = extractelement <2 x float> %3532, i32 0
  %3535 = fdiv float %3533, %3534
  store float %3535, float* %310, align 1
  %3536 = bitcast <2 x float> %3530 to <2 x i32>
  %3537 = extractelement <2 x i32> %3536, i32 1
  store i32 %3537, i32* %312, align 1
  %3538 = extractelement <2 x i32> %3531, i32 0
  store i32 %3538, i32* %313, align 1
  %3539 = extractelement <2 x i32> %3531, i32 1
  store i32 %3539, i32* %315, align 1
  %3540 = load <2 x float>, <2 x float>* %327, align 1
  %3541 = extractelement <2 x float> %3540, i32 0
  %3542 = fpext float %3541 to double
  %3543 = bitcast i64 %3514 to double
  %3544 = fmul double %3542, %3543
  store double %3544, double* %329, align 1
  %.cast211 = bitcast i64 %3514 to <2 x i32>
  %3545 = fptrunc double %3544 to float
  store float %3545, float* %331, align 1
  %3546 = extractelement <2 x i32> %.cast211, i32 1
  store i32 %3546, i32* %333, align 1
  store i32 0, i32* %334, align 1
  store i32 0, i32* %336, align 1
  %3547 = load <2 x float>, <2 x float>* %337, align 1
  %3548 = extractelement <2 x float> %3547, i32 0
  %3549 = fpext float %3548 to double
  store double %3549, double* %303, align 1
  store i8 1, i8* %AL.i.pre-phi, align 1
  %3550 = add i64 %3510, -123512
  %3551 = add i64 %3510, 70
  %3552 = load i64, i64* %6, align 8
  %3553 = add i64 %3552, -8
  %3554 = inttoptr i64 %3553 to i64*
  store i64 %3551, i64* %3554, align 8
  store i64 %3553, i64* %6, align 8
  store i64 %3550, i64* %3, align 8
  %3555 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %3498)
  %3556 = load i64, i64* %RBP.i, align 8
  %3557 = add i64 %3556, -25220
  %3558 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3559 = load i64, i64* %3, align 8
  %3560 = add i64 %3559, 6
  store i64 %3560, i64* %3, align 8
  %3561 = inttoptr i64 %3557 to i32*
  store i32 %3558, i32* %3561, align 4
  %3562 = load i64, i64* %3, align 8
  %3563 = add i64 %3562, 5397
  br label %block_.L_420489

block_.L_41ef79:                                  ; preds = %block_.L_41ef0c
  %3564 = load i64, i64* %RBP.i, align 8
  %3565 = add i64 %3564, -272
  store i64 %3565, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429416_type* @G__0x429416 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429416_type* @G__0x429416 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3566 = add i64 %3510, -123497
  %3567 = add i64 %3510, 19
  %3568 = load i64, i64* %6, align 8
  %3569 = add i64 %3568, -8
  %3570 = inttoptr i64 %3569 to i64*
  store i64 %3567, i64* %3570, align 8
  store i64 %3569, i64* %6, align 8
  store i64 %3566, i64* %3, align 8
  %3571 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3498)
  %3572 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3573 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3574 = and i32 %3572, 255
  %3575 = tail call i32 @llvm.ctpop.i32(i32 %3574)
  %3576 = trunc i32 %3575 to i8
  %3577 = and i8 %3576, 1
  %3578 = xor i8 %3577, 1
  store i8 %3578, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3579 = icmp eq i32 %3572, 0
  %3580 = zext i1 %3579 to i8
  store i8 %3580, i8* %29, align 1
  %3581 = lshr i32 %3572, 31
  %3582 = trunc i32 %3581 to i8
  store i8 %3582, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v267 = select i1 %3579, i64 9, i64 54
  %3583 = add i64 %3573, %.v267
  store i64 %3583, i64* %3, align 8
  br i1 %3579, label %block_41ef95, label %block_.L_41efc2

block_41ef95:                                     ; preds = %block_.L_41ef79
  store i64 ptrtoint (%G__0x86679c_type* @G__0x86679c to i64), i64* %RDI.i176, align 8
  %3584 = add i64 %3583, 21099
  %3585 = add i64 %3583, 15
  %3586 = load i64, i64* %6, align 8
  %3587 = add i64 %3586, -8
  %3588 = inttoptr i64 %3587 to i64*
  store i64 %3585, i64* %3588, align 8
  store i64 %3587, i64* %6, align 8
  store i64 %3584, i64* %3, align 8
  %call2_41ef9f = tail call %struct.Memory* @sub_424200.toggle_bool(%struct.State* nonnull %0, i64 %3584, %struct.Memory* %3571)
  %3589 = load i64, i64* %3, align 8
  %3590 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  store i8 0, i8* %14, align 1
  %3591 = and i32 %3590, 255
  %3592 = tail call i32 @llvm.ctpop.i32(i32 %3591)
  %3593 = trunc i32 %3592 to i8
  %3594 = and i8 %3593, 1
  %3595 = xor i8 %3594, 1
  store i8 %3595, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3596 = icmp eq i32 %3590, 0
  %3597 = zext i1 %3596 to i8
  store i8 %3597, i8* %29, align 1
  %3598 = lshr i32 %3590, 31
  %3599 = trunc i32 %3598 to i8
  store i8 %3599, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v327 = select i1 %3596, i64 25, i64 14
  %3600 = add i64 %3589, %.v327
  store i64 %3600, i64* %3, align 8
  br i1 %3596, label %block_.L_41efbd, label %block_41efb2

block_41efb2:                                     ; preds = %block_41ef95
  %3601 = add i64 %3600, 11
  store i64 %3601, i64* %3, align 8
  store i32 1, i32* bitcast (%G_0x86679c_type* @G_0x86679c to i32*), align 8
  br label %block_.L_41efbd

block_.L_41efbd:                                  ; preds = %block_41efb2, %block_41ef95
  %3602 = phi i64 [ %3601, %block_41efb2 ], [ %3600, %block_41ef95 ]
  %3603 = add i64 %3602, 5319
  br label %block_.L_420484

block_.L_41efc2:                                  ; preds = %block_.L_41ef79
  %3604 = load i64, i64* %RBP.i, align 8
  %3605 = add i64 %3604, -272
  store i64 %3605, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429414_type* @G__0x429414 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429414_type* @G__0x429414 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3606 = add i64 %3583, -123570
  %3607 = add i64 %3583, 19
  %3608 = load i64, i64* %6, align 8
  %3609 = add i64 %3608, -8
  %3610 = inttoptr i64 %3609 to i64*
  store i64 %3607, i64* %3610, align 8
  store i64 %3609, i64* %6, align 8
  store i64 %3606, i64* %3, align 8
  %3611 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3571)
  %3612 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3613 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3614 = and i32 %3612, 255
  %3615 = tail call i32 @llvm.ctpop.i32(i32 %3614)
  %3616 = trunc i32 %3615 to i8
  %3617 = and i8 %3616, 1
  %3618 = xor i8 %3617, 1
  store i8 %3618, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3619 = icmp eq i32 %3612, 0
  %3620 = zext i1 %3619 to i8
  store i8 %3620, i8* %29, align 1
  %3621 = lshr i32 %3612, 31
  %3622 = trunc i32 %3621 to i8
  store i8 %3622, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v268 = select i1 %3619, i64 9, i64 25
  %3623 = add i64 %3613, %.v268
  store i64 %3623, i64* %3, align 8
  br i1 %3619, label %block_41efde, label %block_.L_41efee

block_41efde:                                     ; preds = %block_.L_41efc2
  %3624 = add i64 %3623, 11
  store i64 %3624, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x86679c_type* @G_0x86679c to i32*), align 8
  %3625 = add i64 %3623, 5281
  br label %block_.L_42047f

block_.L_41efee:                                  ; preds = %block_.L_41efc2
  %3626 = load i64, i64* %RBP.i, align 8
  %3627 = add i64 %3626, -272
  store i64 %3627, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x42941b_type* @G__0x42941b to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42941b_type* @G__0x42941b to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3628 = add i64 %3623, -123614
  %3629 = add i64 %3623, 19
  %3630 = load i64, i64* %6, align 8
  %3631 = add i64 %3630, -8
  %3632 = inttoptr i64 %3631 to i64*
  store i64 %3629, i64* %3632, align 8
  store i64 %3631, i64* %6, align 8
  store i64 %3628, i64* %3, align 8
  %3633 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3611)
  %3634 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3635 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3636 = and i32 %3634, 255
  %3637 = tail call i32 @llvm.ctpop.i32(i32 %3636)
  %3638 = trunc i32 %3637 to i8
  %3639 = and i8 %3638, 1
  %3640 = xor i8 %3639, 1
  store i8 %3640, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3641 = icmp eq i32 %3634, 0
  %3642 = zext i1 %3641 to i8
  store i8 %3642, i8* %29, align 1
  %3643 = lshr i32 %3634, 31
  %3644 = trunc i32 %3643 to i8
  store i8 %3644, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v269 = select i1 %3641, i64 9, i64 14
  %3645 = add i64 %3635, %.v269
  store i64 %3645, i64* %3, align 8
  br i1 %3641, label %block_41f00a, label %block_.L_41f00f

block_41f00a:                                     ; preds = %block_.L_41efee
  %3646 = add i64 %3645, -4423
  br label %block_.L_41dec3.backedge

block_.L_41dec3.backedge:                         ; preds = %block_41f00a, %block_41f02b, %block_41f057, %block_41f083, %block_41ff3b, %block_41ff66, %block_41ffde, %block_.L_4204ac
  %.sink.be = phi i64 [ %6563, %block_.L_4204ac ], [ %6000, %block_41ffde ], [ %5974, %block_41ff66 ], [ %5898, %block_41ff3b ], [ %3711, %block_41f083 ], [ %3690, %block_41f057 ], [ %3668, %block_41f02b ], [ %3646, %block_41f00a ]
  %MEMORY.1.be = phi %struct.Memory* [ %MEMORY.119, %block_.L_4204ac ], [ %5982, %block_41ffde ], [ %5966, %block_41ff66 ], [ %5885, %block_41ff3b ], [ %3698, %block_41f083 ], [ %3676, %block_41f057 ], [ %3654, %block_41f02b ], [ %3633, %block_41f00a ]
  br label %block_.L_41dec3

block_.L_41f00f:                                  ; preds = %block_.L_41efee
  %3647 = load i64, i64* %RBP.i, align 8
  %3648 = add i64 %3647, -272
  store i64 %3648, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429422_type* @G__0x429422 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429422_type* @G__0x429422 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3649 = add i64 %3645, -123647
  %3650 = add i64 %3645, 19
  %3651 = load i64, i64* %6, align 8
  %3652 = add i64 %3651, -8
  %3653 = inttoptr i64 %3652 to i64*
  store i64 %3650, i64* %3653, align 8
  store i64 %3652, i64* %6, align 8
  store i64 %3649, i64* %3, align 8
  %3654 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3633)
  %3655 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3656 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3657 = and i32 %3655, 255
  %3658 = tail call i32 @llvm.ctpop.i32(i32 %3657)
  %3659 = trunc i32 %3658 to i8
  %3660 = and i8 %3659, 1
  %3661 = xor i8 %3660, 1
  store i8 %3661, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3662 = icmp eq i32 %3655, 0
  %3663 = zext i1 %3662 to i8
  store i8 %3663, i8* %29, align 1
  %3664 = lshr i32 %3655, 31
  %3665 = trunc i32 %3664 to i8
  store i8 %3665, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v270 = select i1 %3662, i64 9, i64 25
  %3666 = add i64 %3656, %.v270
  store i64 %3666, i64* %3, align 8
  br i1 %3662, label %block_41f02b, label %block_.L_41f03b

block_41f02b:                                     ; preds = %block_.L_41f00f
  %3667 = add i64 %3666, 11
  store i64 %3667, i64* %3, align 8
  store i32 1, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  %3668 = add i64 %3666, -4456
  br label %block_.L_41dec3.backedge

block_.L_41f03b:                                  ; preds = %block_.L_41f00f
  %3669 = load i64, i64* %RBP.i, align 8
  %3670 = add i64 %3669, -272
  store i64 %3670, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429427_type* @G__0x429427 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429427_type* @G__0x429427 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3671 = add i64 %3666, -123691
  %3672 = add i64 %3666, 19
  %3673 = load i64, i64* %6, align 8
  %3674 = add i64 %3673, -8
  %3675 = inttoptr i64 %3674 to i64*
  store i64 %3672, i64* %3675, align 8
  store i64 %3674, i64* %6, align 8
  store i64 %3671, i64* %3, align 8
  %3676 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3654)
  %3677 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3678 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3679 = and i32 %3677, 255
  %3680 = tail call i32 @llvm.ctpop.i32(i32 %3679)
  %3681 = trunc i32 %3680 to i8
  %3682 = and i8 %3681, 1
  %3683 = xor i8 %3682, 1
  store i8 %3683, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3684 = icmp eq i32 %3677, 0
  %3685 = zext i1 %3684 to i8
  store i8 %3685, i8* %29, align 1
  %3686 = lshr i32 %3677, 31
  %3687 = trunc i32 %3686 to i8
  store i8 %3687, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v271 = select i1 %3684, i64 9, i64 25
  %3688 = add i64 %3678, %.v271
  store i64 %3688, i64* %3, align 8
  br i1 %3684, label %block_41f057, label %block_.L_41f067

block_41f057:                                     ; preds = %block_.L_41f03b
  %3689 = add i64 %3688, 11
  store i64 %3689, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  %3690 = add i64 %3688, -4500
  br label %block_.L_41dec3.backedge

block_.L_41f067:                                  ; preds = %block_.L_41f03b
  %3691 = load i64, i64* %RBP.i, align 8
  %3692 = add i64 %3691, -272
  store i64 %3692, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429cf6_type* @G__0x429cf6 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429cf6_type* @G__0x429cf6 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3693 = add i64 %3688, -123735
  %3694 = add i64 %3688, 19
  %3695 = load i64, i64* %6, align 8
  %3696 = add i64 %3695, -8
  %3697 = inttoptr i64 %3696 to i64*
  store i64 %3694, i64* %3697, align 8
  store i64 %3696, i64* %6, align 8
  store i64 %3693, i64* %3, align 8
  %3698 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3676)
  %3699 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3700 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3701 = and i32 %3699, 255
  %3702 = tail call i32 @llvm.ctpop.i32(i32 %3701)
  %3703 = trunc i32 %3702 to i8
  %3704 = and i8 %3703, 1
  %3705 = xor i8 %3704, 1
  store i8 %3705, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3706 = icmp eq i32 %3699, 0
  %3707 = zext i1 %3706 to i8
  store i8 %3707, i8* %29, align 1
  %3708 = lshr i32 %3699, 31
  %3709 = trunc i32 %3708 to i8
  store i8 %3709, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v272 = select i1 %3706, i64 9, i64 14
  %3710 = add i64 %3700, %.v272
  store i64 %3710, i64* %3, align 8
  br i1 %3706, label %block_41f083, label %block_.L_41f088

block_41f083:                                     ; preds = %block_.L_41f067
  %3711 = add i64 %3710, -4544
  br label %block_.L_41dec3.backedge

block_.L_41f088:                                  ; preds = %block_.L_41f067
  %3712 = load i64, i64* %RBP.i, align 8
  %3713 = add i64 %3712, -272
  store i64 %3713, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x42942c_type* @G__0x42942c to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42942c_type* @G__0x42942c to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3714 = add i64 %3710, -123768
  %3715 = add i64 %3710, 19
  %3716 = load i64, i64* %6, align 8
  %3717 = add i64 %3716, -8
  %3718 = inttoptr i64 %3717 to i64*
  store i64 %3715, i64* %3718, align 8
  store i64 %3717, i64* %6, align 8
  store i64 %3714, i64* %3, align 8
  %3719 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3698)
  %3720 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3721 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3722 = and i32 %3720, 255
  %3723 = tail call i32 @llvm.ctpop.i32(i32 %3722)
  %3724 = trunc i32 %3723 to i8
  %3725 = and i8 %3724, 1
  %3726 = xor i8 %3725, 1
  store i8 %3726, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3727 = icmp eq i32 %3720, 0
  %3728 = zext i1 %3727 to i8
  store i8 %3728, i8* %29, align 1
  %3729 = lshr i32 %3720, 31
  %3730 = trunc i32 %3729 to i8
  store i8 %3730, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v273 = select i1 %3727, i64 9, i64 47
  %3731 = add i64 %3721, %.v273
  store i64 %3731, i64* %3, align 8
  br i1 %3727, label %block_41f0a4, label %block_.L_41f0ca

block_41f0a4:                                     ; preds = %block_.L_41f088
  store i32 1, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  store i32 0, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %3732 = add i64 %3731, 33
  store i64 %3732, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %3733 = add i64 %3731, 5058
  br label %block_.L_420466

block_.L_41f0ca:                                  ; preds = %block_.L_41f088
  %3734 = load i64, i64* %RBP.i, align 8
  %3735 = add i64 %3734, -272
  store i64 %3735, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429432_type* @G__0x429432 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429432_type* @G__0x429432 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3736 = add i64 %3731, -123834
  %3737 = add i64 %3731, 19
  %3738 = load i64, i64* %6, align 8
  %3739 = add i64 %3738, -8
  %3740 = inttoptr i64 %3739 to i64*
  store i64 %3737, i64* %3740, align 8
  store i64 %3739, i64* %6, align 8
  store i64 %3736, i64* %3, align 8
  %3741 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3719)
  %3742 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3743 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3744 = and i32 %3742, 255
  %3745 = tail call i32 @llvm.ctpop.i32(i32 %3744)
  %3746 = trunc i32 %3745 to i8
  %3747 = and i8 %3746, 1
  %3748 = xor i8 %3747, 1
  store i8 %3748, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3749 = icmp eq i32 %3742, 0
  %3750 = zext i1 %3749 to i8
  store i8 %3750, i8* %29, align 1
  %3751 = lshr i32 %3742, 31
  %3752 = trunc i32 %3751 to i8
  store i8 %3752, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v274 = select i1 %3749, i64 9, i64 47
  %3753 = add i64 %3743, %.v274
  store i64 %3753, i64* %3, align 8
  br i1 %3749, label %block_41f0e6, label %block_.L_41f10c

block_41f0e6:                                     ; preds = %block_.L_41f0ca
  store i32 0, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  store i32 1, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %3754 = add i64 %3753, 33
  store i64 %3754, i64* %3, align 8
  store i32 1, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %3755 = add i64 %3753, 4987
  br label %block_.L_420461

block_.L_41f10c:                                  ; preds = %block_.L_41f0ca
  %3756 = load i64, i64* %RBP.i, align 8
  %3757 = add i64 %3756, -272
  store i64 %3757, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x429438_type* @G__0x429438 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x429438_type* @G__0x429438 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3758 = add i64 %3753, -123900
  %3759 = add i64 %3753, 19
  %3760 = load i64, i64* %6, align 8
  %3761 = add i64 %3760, -8
  %3762 = inttoptr i64 %3761 to i64*
  store i64 %3759, i64* %3762, align 8
  store i64 %3761, i64* %6, align 8
  store i64 %3758, i64* %3, align 8
  %3763 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3741)
  %3764 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3765 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3766 = and i32 %3764, 255
  %3767 = tail call i32 @llvm.ctpop.i32(i32 %3766)
  %3768 = trunc i32 %3767 to i8
  %3769 = and i8 %3768, 1
  %3770 = xor i8 %3769, 1
  store i8 %3770, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3771 = icmp eq i32 %3764, 0
  %3772 = zext i1 %3771 to i8
  store i8 %3772, i8* %29, align 1
  %3773 = lshr i32 %3764, 31
  %3774 = trunc i32 %3773 to i8
  store i8 %3774, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v275 = select i1 %3771, i64 9, i64 24
  %3775 = add i64 %3765, %.v275
  store i64 %3775, i64* %3, align 8
  %3776 = load i64, i64* %RBP.i, align 8
  br i1 %3771, label %block_41f128, label %block_.L_41f137

block_41f128:                                     ; preds = %block_.L_41f10c
  %3777 = add i64 %3776, -856
  %3778 = add i64 %3775, 10
  store i64 %3778, i64* %3, align 8
  %3779 = inttoptr i64 %3777 to i32*
  store i32 1, i32* %3779, align 4
  %3780 = load i64, i64* %3, align 8
  %3781 = add i64 %3780, 4906
  br label %block_.L_42045c

block_.L_41f137:                                  ; preds = %block_.L_41f10c
  %3782 = add i64 %3776, -272
  store i64 %3782, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x42943e_type* @G__0x42943e to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42943e_type* @G__0x42943e to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3783 = add i64 %3775, -123943
  %3784 = add i64 %3775, 19
  %3785 = load i64, i64* %6, align 8
  %3786 = add i64 %3785, -8
  %3787 = inttoptr i64 %3786 to i64*
  store i64 %3784, i64* %3787, align 8
  store i64 %3786, i64* %6, align 8
  store i64 %3783, i64* %3, align 8
  %3788 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3763)
  %3789 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3790 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3791 = and i32 %3789, 255
  %3792 = tail call i32 @llvm.ctpop.i32(i32 %3791)
  %3793 = trunc i32 %3792 to i8
  %3794 = and i8 %3793, 1
  %3795 = xor i8 %3794, 1
  store i8 %3795, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3796 = icmp eq i32 %3789, 0
  %3797 = zext i1 %3796 to i8
  store i8 %3797, i8* %29, align 1
  %3798 = lshr i32 %3789, 31
  %3799 = trunc i32 %3798 to i8
  store i8 %3799, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v276 = select i1 %3796, i64 9, i64 59
  %3800 = add i64 %3790, %.v276
  store i64 %3800, i64* %3, align 8
  br i1 %3796, label %block_41f153, label %block_.L_41f185

block_41f153:                                     ; preds = %block_.L_41f137
  %3801 = add i64 %3800, -72515
  %3802 = add i64 %3800, 5
  %3803 = load i64, i64* %6, align 8
  %3804 = add i64 %3803, -8
  %3805 = inttoptr i64 %3804 to i64*
  store i64 %3802, i64* %3805, align 8
  store i64 %3804, i64* %6, align 8
  store i64 %3801, i64* %3, align 8
  %call2_41f153 = tail call %struct.Memory* @sub_40d610.check_phase(%struct.State* nonnull %0, i64 %3801, %struct.Memory* %3788)
  %3806 = load i64, i64* %3, align 8
  store i64 4293967296, i64* %RDI.i176, align 8
  store i64 1000000, i64* %RSI.i118, align 8
  %3807 = add i64 %3806, -110824
  %3808 = add i64 %3806, 15
  %3809 = load i64, i64* %6, align 8
  %3810 = add i64 %3809, -8
  %3811 = inttoptr i64 %3810 to i64*
  store i64 %3808, i64* %3811, align 8
  store i64 %3810, i64* %6, align 8
  store i64 %3807, i64* %3, align 8
  %call2_41f162 = tail call %struct.Memory* @sub_404070.eval(%struct.State* nonnull %0, i64 %3807, %struct.Memory* %call2_41f153)
  %3812 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429443_type* @G__0x429443 to i64), i64* %RDI.i176, align 8
  %3813 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3814 = zext i32 %3813 to i64
  store i64 %3814, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3815 = add i64 %3812, -124087
  %3816 = add i64 %3812, 19
  %3817 = load i64, i64* %6, align 8
  %3818 = add i64 %3817, -8
  %3819 = inttoptr i64 %3818 to i64*
  store i64 %3816, i64* %3819, align 8
  store i64 %3818, i64* %6, align 8
  store i64 %3815, i64* %3, align 8
  %3820 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %call2_41f162)
  %3821 = load i64, i64* %RBP.i, align 8
  %3822 = add i64 %3821, -25224
  %3823 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3824 = load i64, i64* %3, align 8
  %3825 = add i64 %3824, 6
  store i64 %3825, i64* %3, align 8
  %3826 = inttoptr i64 %3822 to i32*
  store i32 %3823, i32* %3826, align 4
  %3827 = load i64, i64* %3, align 8
  %3828 = add i64 %3827, 4823
  br label %block_.L_420457

block_.L_41f185:                                  ; preds = %block_.L_41f137
  %3829 = load i64, i64* %RBP.i, align 8
  %3830 = add i64 %3829, -272
  store i64 %3830, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x42888d_type* @G__0x42888d to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x42888d_type* @G__0x42888d to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %3831 = add i64 %3800, -124021
  %3832 = add i64 %3800, 19
  %3833 = load i64, i64* %6, align 8
  %3834 = add i64 %3833, -8
  %3835 = inttoptr i64 %3834 to i64*
  store i64 %3832, i64* %3835, align 8
  store i64 %3834, i64* %6, align 8
  store i64 %3831, i64* %3, align 8
  %3836 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %3788)
  %3837 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3838 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3839 = and i32 %3837, 255
  %3840 = tail call i32 @llvm.ctpop.i32(i32 %3839)
  %3841 = trunc i32 %3840 to i8
  %3842 = and i8 %3841, 1
  %3843 = xor i8 %3842, 1
  store i8 %3843, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3844 = icmp eq i32 %3837, 0
  %3845 = zext i1 %3844 to i8
  store i8 %3845, i8* %29, align 1
  %3846 = lshr i32 %3837, 31
  %3847 = trunc i32 %3846 to i8
  store i8 %3847, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v277 = select i1 %3844, i64 9, i64 38
  %3848 = add i64 %3838, %.v277
  store i64 %3848, i64* %3, align 8
  br i1 %3844, label %block_41f1a1, label %block_.L_41f1be

block_41f1a1:                                     ; preds = %block_.L_41f185
  %3849 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  %3850 = zext i32 %3849 to i64
  store i64 %3850, i64* %RAX.i, align 8
  store i32 %3849, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %3851 = load i64, i64* %RBP.i, align 8
  %3852 = add i64 %3851, -856
  %3853 = add i64 %3848, 24
  store i64 %3853, i64* %3, align 8
  %3854 = inttoptr i64 %3852 to i32*
  store i32 0, i32* %3854, align 4
  %3855 = load i64, i64* %3, align 8
  %3856 = add i64 %3855, 4761
  br label %block_.L_420452

block_.L_41f1be:                                  ; preds = %block_.L_41f185
  store i64 ptrtoint (%G__0x4288b4_type* @G__0x4288b4 to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %3857 = load i64, i64* %RBP.i, align 8
  %3858 = add i64 %3857, -272
  store i64 %3858, i64* %RDI.i176, align 8
  %3859 = add i64 %3848, -124254
  %3860 = add i64 %3848, 29
  %3861 = load i64, i64* %6, align 8
  %3862 = add i64 %3861, -8
  %3863 = inttoptr i64 %3862 to i64*
  store i64 %3860, i64* %3863, align 8
  store i64 %3862, i64* %6, align 8
  store i64 %3859, i64* %3, align 8
  %3864 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %3836)
  %3865 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3866 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3867 = and i32 %3865, 255
  %3868 = tail call i32 @llvm.ctpop.i32(i32 %3867)
  %3869 = trunc i32 %3868 to i8
  %3870 = and i8 %3869, 1
  %3871 = xor i8 %3870, 1
  store i8 %3871, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3872 = icmp eq i32 %3865, 0
  %3873 = zext i1 %3872 to i8
  store i8 %3873, i8* %29, align 1
  %3874 = lshr i32 %3865, 31
  %3875 = trunc i32 %3874 to i8
  store i8 %3875, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v278 = select i1 %3872, i64 9, i64 61
  %3876 = add i64 %3866, %.v278
  %3877 = add i64 %3876, 10
  store i64 %3877, i64* %3, align 8
  br i1 %3872, label %block_41f1e4, label %block_.L_41f218

block_41f1e4:                                     ; preds = %block_.L_41f1be
  store i64 ptrtoint (%G__0x42946c_type* @G__0x42946c to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x8a05b4_type* @G__0x8a05b4 to i64), i64* %RDX.i, align 8
  %3878 = load i64, i64* %RBP.i, align 8
  %3879 = add i64 %3878, -272
  %3880 = add i64 %3878, -267
  store i64 %3880, i64* %RAX.i, align 8
  %3881 = icmp ult i64 %3880, %3879
  %3882 = icmp ult i64 %3880, 5
  %3883 = or i1 %3881, %3882
  %3884 = zext i1 %3883 to i8
  store i8 %3884, i8* %14, align 1
  %3885 = trunc i64 %3880 to i32
  %3886 = and i32 %3885, 255
  %3887 = tail call i32 @llvm.ctpop.i32(i32 %3886)
  %3888 = trunc i32 %3887 to i8
  %3889 = and i8 %3888, 1
  %3890 = xor i8 %3889, 1
  store i8 %3890, i8* %21, align 1
  %3891 = xor i64 %3879, %3880
  %3892 = lshr i64 %3891, 4
  %3893 = trunc i64 %3892 to i8
  %3894 = and i8 %3893, 1
  store i8 %3894, i8* %26, align 1
  %3895 = icmp eq i64 %3880, 0
  %3896 = zext i1 %3895 to i8
  store i8 %3896, i8* %29, align 1
  %3897 = lshr i64 %3880, 63
  %3898 = trunc i64 %3897 to i8
  store i8 %3898, i8* %32, align 1
  %3899 = lshr i64 %3879, 63
  %3900 = xor i64 %3897, %3899
  %3901 = add nuw nsw i64 %3900, %3897
  %3902 = icmp eq i64 %3901, 2
  %3903 = zext i1 %3902 to i8
  store i8 %3903, i8* %38, align 1
  store i64 %3880, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3904 = add i64 %3876, -124004
  %3905 = add i64 %3876, 41
  %3906 = load i64, i64* %6, align 8
  %3907 = add i64 %3906, -8
  %3908 = inttoptr i64 %3907 to i64*
  store i64 %3905, i64* %3908, align 8
  store i64 %3907, i64* %6, align 8
  store i64 %3904, i64* %3, align 8
  %3909 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %3864)
  %3910 = load i64, i64* %RBP.i, align 8
  %3911 = add i64 %3910, -25228
  %3912 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3913 = load i64, i64* %3, align 8
  %3914 = add i64 %3913, 6
  store i64 %3914, i64* %3, align 8
  %3915 = inttoptr i64 %3911 to i32*
  store i32 %3912, i32* %3915, align 4
  %3916 = load i64, i64* %3, align 8
  %3917 = add i64 %3916, 4666
  br label %block_.L_42044d

block_.L_41f218:                                  ; preds = %block_.L_41f1be
  store i64 ptrtoint (%G__0x42944d_type* @G__0x42944d to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %3918 = load i64, i64* %RBP.i, align 8
  %3919 = add i64 %3918, -272
  store i64 %3919, i64* %RDI.i176, align 8
  %3920 = add i64 %3876, -124344
  %3921 = add i64 %3876, 29
  %3922 = load i64, i64* %6, align 8
  %3923 = add i64 %3922, -8
  %3924 = inttoptr i64 %3923 to i64*
  store i64 %3921, i64* %3924, align 8
  store i64 %3923, i64* %6, align 8
  store i64 %3920, i64* %3, align 8
  %3925 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %3864)
  %3926 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3927 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3928 = and i32 %3926, 255
  %3929 = tail call i32 @llvm.ctpop.i32(i32 %3928)
  %3930 = trunc i32 %3929 to i8
  %3931 = and i8 %3930, 1
  %3932 = xor i8 %3931, 1
  store i8 %3932, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3933 = icmp eq i32 %3926, 0
  %3934 = zext i1 %3933 to i8
  store i8 %3934, i8* %29, align 1
  %3935 = lshr i32 %3926, 31
  %3936 = trunc i32 %3935 to i8
  store i8 %3936, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v279 = select i1 %3933, i64 9, i64 61
  %3937 = add i64 %3927, %.v279
  %3938 = add i64 %3937, 10
  store i64 %3938, i64* %3, align 8
  br i1 %3933, label %block_41f23e, label %block_.L_41f272

block_41f23e:                                     ; preds = %block_.L_41f218
  store i64 ptrtoint (%G__0x42946c_type* @G__0x42946c to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x86bd64_type* @G__0x86bd64 to i64), i64* %RDX.i, align 8
  %3939 = load i64, i64* %RBP.i, align 8
  %3940 = add i64 %3939, -272
  %3941 = add i64 %3939, -267
  store i64 %3941, i64* %RAX.i, align 8
  %3942 = icmp ult i64 %3941, %3940
  %3943 = icmp ult i64 %3941, 5
  %3944 = or i1 %3942, %3943
  %3945 = zext i1 %3944 to i8
  store i8 %3945, i8* %14, align 1
  %3946 = trunc i64 %3941 to i32
  %3947 = and i32 %3946, 255
  %3948 = tail call i32 @llvm.ctpop.i32(i32 %3947)
  %3949 = trunc i32 %3948 to i8
  %3950 = and i8 %3949, 1
  %3951 = xor i8 %3950, 1
  store i8 %3951, i8* %21, align 1
  %3952 = xor i64 %3940, %3941
  %3953 = lshr i64 %3952, 4
  %3954 = trunc i64 %3953 to i8
  %3955 = and i8 %3954, 1
  store i8 %3955, i8* %26, align 1
  %3956 = icmp eq i64 %3941, 0
  %3957 = zext i1 %3956 to i8
  store i8 %3957, i8* %29, align 1
  %3958 = lshr i64 %3941, 63
  %3959 = trunc i64 %3958 to i8
  store i8 %3959, i8* %32, align 1
  %3960 = lshr i64 %3940, 63
  %3961 = xor i64 %3958, %3960
  %3962 = add nuw nsw i64 %3961, %3958
  %3963 = icmp eq i64 %3962, 2
  %3964 = zext i1 %3963 to i8
  store i8 %3964, i8* %38, align 1
  store i64 %3941, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %3965 = add i64 %3937, -124094
  %3966 = add i64 %3937, 41
  %3967 = load i64, i64* %6, align 8
  %3968 = add i64 %3967, -8
  %3969 = inttoptr i64 %3968 to i64*
  store i64 %3966, i64* %3969, align 8
  store i64 %3968, i64* %6, align 8
  store i64 %3965, i64* %3, align 8
  %3970 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %3925)
  %3971 = load i64, i64* %RBP.i, align 8
  %3972 = add i64 %3971, -25232
  %3973 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3974 = load i64, i64* %3, align 8
  %3975 = add i64 %3974, 6
  store i64 %3975, i64* %3, align 8
  %3976 = inttoptr i64 %3972 to i32*
  store i32 %3973, i32* %3976, align 4
  %3977 = load i64, i64* %3, align 8
  %3978 = add i64 %3977, 4571
  br label %block_.L_420448

block_.L_41f272:                                  ; preds = %block_.L_41f218
  store i64 ptrtoint (%G__0x429452_type* @G__0x429452 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %3979 = load i64, i64* %RBP.i, align 8
  %3980 = add i64 %3979, -272
  store i64 %3980, i64* %RDI.i176, align 8
  %3981 = add i64 %3937, -124434
  %3982 = add i64 %3937, 29
  %3983 = load i64, i64* %6, align 8
  %3984 = add i64 %3983, -8
  %3985 = inttoptr i64 %3984 to i64*
  store i64 %3982, i64* %3985, align 8
  store i64 %3984, i64* %6, align 8
  store i64 %3981, i64* %3, align 8
  %3986 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %3925)
  %3987 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %3988 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %3989 = and i32 %3987, 255
  %3990 = tail call i32 @llvm.ctpop.i32(i32 %3989)
  %3991 = trunc i32 %3990 to i8
  %3992 = and i8 %3991, 1
  %3993 = xor i8 %3992, 1
  store i8 %3993, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %3994 = icmp eq i32 %3987, 0
  %3995 = zext i1 %3994 to i8
  store i8 %3995, i8* %29, align 1
  %3996 = lshr i32 %3987, 31
  %3997 = trunc i32 %3996 to i8
  store i8 %3997, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v280 = select i1 %3994, i64 9, i64 308
  %3998 = add i64 %3988, %.v280
  %3999 = add i64 %3998, 10
  store i64 %3999, i64* %3, align 8
  br i1 %3994, label %block_41f298, label %block_.L_41f3c3

block_41f298:                                     ; preds = %block_.L_41f272
  store i64 ptrtoint (%G__0x429458_type* @G__0x429458 to i64), i64* %RSI.i118, align 8
  %4000 = load i64, i64* %RBP.i, align 8
  %4001 = add i64 %4000, -272
  %4002 = add i64 %4000, -266
  store i64 %4002, i64* %RAX.i, align 8
  %4003 = icmp ult i64 %4002, %4001
  %4004 = icmp ult i64 %4002, 6
  %4005 = or i1 %4003, %4004
  %4006 = zext i1 %4005 to i8
  store i8 %4006, i8* %14, align 1
  %4007 = trunc i64 %4002 to i32
  %4008 = and i32 %4007, 255
  %4009 = tail call i32 @llvm.ctpop.i32(i32 %4008)
  %4010 = trunc i32 %4009 to i8
  %4011 = and i8 %4010, 1
  %4012 = xor i8 %4011, 1
  store i8 %4012, i8* %21, align 1
  %4013 = xor i64 %4001, %4002
  %4014 = lshr i64 %4013, 4
  %4015 = trunc i64 %4014 to i8
  %4016 = and i8 %4015, 1
  store i8 %4016, i8* %26, align 1
  %4017 = icmp eq i64 %4002, 0
  %4018 = zext i1 %4017 to i8
  store i8 %4018, i8* %29, align 1
  %4019 = lshr i64 %4002, 63
  %4020 = trunc i64 %4019 to i8
  store i8 %4020, i8* %32, align 1
  %4021 = lshr i64 %4001, 63
  %4022 = xor i64 %4019, %4021
  %4023 = add nuw nsw i64 %4022, %4019
  %4024 = icmp eq i64 %4023, 2
  %4025 = zext i1 %4024 to i8
  store i8 %4025, i8* %38, align 1
  store i64 %4002, i64* %RDI.i176, align 8
  %4026 = add i64 %3998, -124072
  %4027 = add i64 %3998, 29
  %4028 = load i64, i64* %6, align 8
  %4029 = add i64 %4028, -8
  %4030 = inttoptr i64 %4029 to i64*
  store i64 %4027, i64* %4030, align 8
  store i64 %4029, i64* %6, align 8
  store i64 %4026, i64* %3, align 8
  %call2_41f2b0 = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4026, %struct.Memory* %3986)
  %4031 = load i64, i64* %RAX.i, align 8
  %4032 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4033 = trunc i64 %4031 to i32
  %4034 = and i32 %4033, 255
  %4035 = tail call i32 @llvm.ctpop.i32(i32 %4034)
  %4036 = trunc i32 %4035 to i8
  %4037 = and i8 %4036, 1
  %4038 = xor i8 %4037, 1
  store i8 %4038, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4039 = icmp eq i64 %4031, 0
  %4040 = zext i1 %4039 to i8
  store i8 %4040, i8* %29, align 1
  %4041 = lshr i64 %4031, 63
  %4042 = trunc i64 %4041 to i8
  store i8 %4042, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v326 = select i1 %4039, i64 140, i64 10
  %4043 = add i64 %4032, %.v326
  %4044 = add i64 %4043, 10
  store i64 %4044, i64* %3, align 8
  br i1 %4039, label %block_.L_41f341, label %block_41f2bf

block_41f2bf:                                     ; preds = %block_41f298
  store i64 ptrtoint (%G__0x42945a_type* @G__0x42945a to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x8661d8_type* @G__0x8661d8 to i64), i64* %RDX.i, align 8
  store i64 ptrtoint (%G__0x86bd70_type* @G__0x86bd70 to i64), i64* %RCX.i, align 8
  store i64 ptrtoint (%G__0x62ea00_type* @G__0x62ea00 to i64), i64* %109, align 8
  store i64 ptrtoint (%G__0x8a0a78_type* @G__0x8a0a78 to i64), i64* %R9.i, align 8
  %4045 = load i64, i64* %RBP.i, align 8
  %4046 = add i64 %4045, -272
  %4047 = add i64 %4045, -266
  store i64 %4047, i64* %RAX.i, align 8
  %4048 = icmp ult i64 %4047, %4046
  %4049 = icmp ult i64 %4047, 6
  %4050 = or i1 %4048, %4049
  %4051 = zext i1 %4050 to i8
  store i8 %4051, i8* %14, align 1
  %4052 = trunc i64 %4047 to i32
  %4053 = and i32 %4052, 255
  %4054 = tail call i32 @llvm.ctpop.i32(i32 %4053)
  %4055 = trunc i32 %4054 to i8
  %4056 = and i8 %4055, 1
  %4057 = xor i8 %4056, 1
  store i8 %4057, i8* %21, align 1
  %4058 = xor i64 %4046, %4047
  %4059 = lshr i64 %4058, 4
  %4060 = trunc i64 %4059 to i8
  %4061 = and i8 %4060, 1
  store i8 %4061, i8* %26, align 1
  %4062 = icmp eq i64 %4047, 0
  %4063 = zext i1 %4062 to i8
  store i8 %4063, i8* %29, align 1
  %4064 = lshr i64 %4047, 63
  %4065 = trunc i64 %4064 to i8
  store i8 %4065, i8* %32, align 1
  %4066 = lshr i64 %4046, 63
  %4067 = xor i64 %4064, %4066
  %4068 = add nuw nsw i64 %4067, %4064
  %4069 = icmp eq i64 %4068, 2
  %4070 = zext i1 %4069 to i8
  store i8 %4070, i8* %38, align 1
  store i64 %4047, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %4071 = add i64 %4043, -124223
  %4072 = add i64 %4043, 71
  %4073 = load i64, i64* %6, align 8
  %4074 = add i64 %4073, -8
  %4075 = inttoptr i64 %4074 to i64*
  store i64 %4072, i64* %4075, align 8
  store i64 %4074, i64* %6, align 8
  store i64 %4071, i64* %3, align 8
  %4076 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %call2_41f2b0)
  %4077 = load i64, i64* %3, align 8
  %4078 = load i32, i32* bitcast (%G_0x86bd70_type* @G_0x86bd70 to i32*), align 8
  %4079 = sext i32 %4078 to i64
  %4080 = mul nsw i64 %4079, 6000
  %4081 = load i32, i32* bitcast (%G_0x62ea00_type* @G_0x62ea00 to i32*), align 8
  %4082 = sext i32 %4081 to i64
  %4083 = mul nsw i64 %4082, 100
  %4084 = and i64 %4083, 4294967292
  store i64 %4084, i64* %300, align 8
  %4085 = trunc i64 %4080 to i32
  %4086 = trunc i64 %4083 to i32
  %4087 = add i32 %4086, %4085
  %4088 = zext i32 %4087 to i64
  %4089 = icmp ult i32 %4087, %4085
  %4090 = icmp ult i32 %4087, %4086
  %4091 = or i1 %4089, %4090
  %4092 = zext i1 %4091 to i8
  store i8 %4092, i8* %14, align 1
  %4093 = and i32 %4087, 252
  %4094 = tail call i32 @llvm.ctpop.i32(i32 %4093)
  %4095 = trunc i32 %4094 to i8
  %4096 = and i8 %4095, 1
  %4097 = xor i8 %4096, 1
  store i8 %4097, i8* %21, align 1
  %4098 = xor i64 %4083, %4080
  %4099 = trunc i64 %4098 to i32
  %4100 = xor i32 %4099, %4087
  %4101 = lshr i32 %4100, 4
  %4102 = trunc i32 %4101 to i8
  %4103 = and i8 %4102, 1
  store i8 %4103, i8* %26, align 1
  %4104 = icmp eq i32 %4087, 0
  %4105 = zext i1 %4104 to i8
  store i8 %4105, i8* %29, align 1
  %4106 = lshr i32 %4087, 31
  %4107 = trunc i32 %4106 to i8
  store i8 %4107, i8* %32, align 1
  %4108 = lshr i32 %4085, 31
  %4109 = lshr i32 %4086, 31
  %4110 = xor i32 %4106, %4108
  %4111 = xor i32 %4106, %4109
  %4112 = add nuw nsw i32 %4110, %4111
  %4113 = icmp eq i32 %4112, 2
  %4114 = zext i1 %4113 to i8
  store i8 %4114, i8* %38, align 1
  store i32 %4087, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  store i64 %4088, i64* %299, align 8
  store i32 %4087, i32* bitcast (%G_0x86bd64_type* @G_0x86bd64 to i32*), align 8
  %4115 = load i64, i64* %RBP.i, align 8
  %4116 = add i64 %4115, -25236
  %4117 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4118 = add i64 %4077, 54
  store i64 %4118, i64* %3, align 8
  %4119 = inttoptr i64 %4116 to i32*
  store i32 %4117, i32* %4119, align 4
  %4120 = load i64, i64* %3, align 8
  %4121 = add i64 %4120, 108
  store i64 %4121, i64* %3, align 8
  br label %block_.L_41f3a8

block_.L_41f341:                                  ; preds = %block_41f298
  store i64 ptrtoint (%G__0x429466_type* @G__0x429466 to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x8661d8_type* @G__0x8661d8 to i64), i64* %RDX.i, align 8
  store i64 ptrtoint (%G__0x86bd70_type* @G__0x86bd70 to i64), i64* %RCX.i, align 8
  store i64 ptrtoint (%G__0x8a0a78_type* @G__0x8a0a78 to i64), i64* %109, align 8
  %4122 = load i64, i64* %RBP.i, align 8
  %4123 = add i64 %4122, -272
  %4124 = add i64 %4122, -266
  store i64 %4124, i64* %RAX.i, align 8
  %4125 = icmp ult i64 %4124, %4123
  %4126 = icmp ult i64 %4124, 6
  %4127 = or i1 %4125, %4126
  %4128 = zext i1 %4127 to i8
  store i8 %4128, i8* %14, align 1
  %4129 = trunc i64 %4124 to i32
  %4130 = and i32 %4129, 255
  %4131 = tail call i32 @llvm.ctpop.i32(i32 %4130)
  %4132 = trunc i32 %4131 to i8
  %4133 = and i8 %4132, 1
  %4134 = xor i8 %4133, 1
  store i8 %4134, i8* %21, align 1
  %4135 = xor i64 %4123, %4124
  %4136 = lshr i64 %4135, 4
  %4137 = trunc i64 %4136 to i8
  %4138 = and i8 %4137, 1
  store i8 %4138, i8* %26, align 1
  %4139 = icmp eq i64 %4124, 0
  %4140 = zext i1 %4139 to i8
  store i8 %4140, i8* %29, align 1
  %4141 = lshr i64 %4124, 63
  %4142 = trunc i64 %4141 to i8
  store i8 %4142, i8* %32, align 1
  %4143 = lshr i64 %4123, 63
  %4144 = xor i64 %4141, %4143
  %4145 = add nuw nsw i64 %4144, %4141
  %4146 = icmp eq i64 %4145, 2
  %4147 = zext i1 %4146 to i8
  store i8 %4147, i8* %38, align 1
  store i64 %4124, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %4148 = add i64 %4043, -124353
  %4149 = add i64 %4043, 61
  %4150 = load i64, i64* %6, align 8
  %4151 = add i64 %4150, -8
  %4152 = inttoptr i64 %4151 to i64*
  store i64 %4149, i64* %4152, align 8
  store i64 %4151, i64* %6, align 8
  store i64 %4148, i64* %3, align 8
  %4153 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %call2_41f2b0)
  %4154 = load i64, i64* %3, align 8
  %4155 = load i32, i32* bitcast (%G_0x86bd70_type* @G_0x86bd70 to i32*), align 8
  %4156 = sext i32 %4155 to i64
  %4157 = mul nsw i64 %4156, 6000
  %4158 = trunc i64 %4157 to i32
  %4159 = mul i64 %4156, 25769803776000
  %4160 = ashr exact i64 %4159, 32
  %4161 = icmp ne i64 %4160, %4157
  %4162 = zext i1 %4161 to i8
  store i8 %4162, i8* %14, align 1
  %4163 = and i32 %4158, 240
  %4164 = tail call i32 @llvm.ctpop.i32(i32 %4163)
  %4165 = trunc i32 %4164 to i8
  %4166 = and i8 %4165, 1
  %4167 = xor i8 %4166, 1
  store i8 %4167, i8* %21, align 1
  store i8 0, i8* %26, align 1
  store i8 0, i8* %29, align 1
  %4168 = lshr i32 %4158, 31
  %4169 = trunc i32 %4168 to i8
  store i8 %4169, i8* %32, align 1
  store i8 %4162, i8* %38, align 1
  %4170 = trunc i64 %4157 to i32
  store i32 %4170, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  %4171 = and i64 %4157, 4294967280
  store i64 %4171, i64* %R9.i, align 8
  store i32 %4170, i32* bitcast (%G_0x86bd64_type* @G_0x86bd64 to i32*), align 8
  %4172 = load i64, i64* %RBP.i, align 8
  %4173 = add i64 %4172, -25240
  %4174 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4175 = add i64 %4154, 42
  store i64 %4175, i64* %3, align 8
  %4176 = inttoptr i64 %4173 to i32*
  store i32 %4174, i32* %4176, align 4
  %.pre238 = load i64, i64* %3, align 8
  br label %block_.L_41f3a8

block_.L_41f3a8:                                  ; preds = %block_.L_41f341, %block_41f2bf
  %4177 = phi i64 [ %.pre238, %block_.L_41f341 ], [ %4121, %block_41f2bf ]
  %MEMORY.58 = phi %struct.Memory* [ %4153, %block_.L_41f341 ], [ %4076, %block_41f2bf ]
  store i32 0, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  %4178 = add i64 %4177, 22
  store i64 %4178, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*), align 8
  %4179 = add i64 %4177, 4251
  br label %block_.L_420443

block_.L_41f3c3:                                  ; preds = %block_.L_41f272
  store i64 ptrtoint (%G__0x42946f_type* @G__0x42946f to i64), i64* %RSI.i118, align 8
  store i64 6, i64* %RAX.i, align 8
  store i64 6, i64* %RDX.i, align 8
  %4180 = load i64, i64* %RBP.i, align 8
  %4181 = add i64 %4180, -272
  store i64 %4181, i64* %RDI.i176, align 8
  %4182 = add i64 %3998, -124771
  %4183 = add i64 %3998, 29
  %4184 = load i64, i64* %6, align 8
  %4185 = add i64 %4184, -8
  %4186 = inttoptr i64 %4185 to i64*
  store i64 %4183, i64* %4186, align 8
  store i64 %4185, i64* %6, align 8
  store i64 %4182, i64* %3, align 8
  %4187 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %3986)
  %4188 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4189 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4190 = and i32 %4188, 255
  %4191 = tail call i32 @llvm.ctpop.i32(i32 %4190)
  %4192 = trunc i32 %4191 to i8
  %4193 = and i8 %4192, 1
  %4194 = xor i8 %4193, 1
  store i8 %4194, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4195 = icmp eq i32 %4188, 0
  %4196 = zext i1 %4195 to i8
  store i8 %4196, i8* %29, align 1
  %4197 = lshr i32 %4188, 31
  %4198 = trunc i32 %4197 to i8
  store i8 %4198, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v281 = select i1 %4195, i64 9, i64 121
  %4199 = add i64 %4189, %.v281
  %4200 = add i64 %4199, 10
  store i64 %4200, i64* %3, align 8
  br i1 %4195, label %block_41f3e9, label %block_.L_41f459

block_41f3e9:                                     ; preds = %block_.L_41f3c3
  store i64 ptrtoint (%G__0x429469_type* @G__0x429469 to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x880b14_type* @G__0x880b14 to i64), i64* %RDX.i, align 8
  store i64 ptrtoint (%G__0x886bc4_type* @G__0x886bc4 to i64), i64* %RCX.i, align 8
  %4201 = load i64, i64* %RBP.i, align 8
  %4202 = add i64 %4201, -272
  %4203 = add i64 %4201, -265
  store i64 %4203, i64* %RAX.i, align 8
  %4204 = icmp ult i64 %4203, %4202
  %4205 = icmp ult i64 %4203, 7
  %4206 = or i1 %4204, %4205
  %4207 = zext i1 %4206 to i8
  store i8 %4207, i8* %14, align 1
  %4208 = trunc i64 %4203 to i32
  %4209 = and i32 %4208, 255
  %4210 = tail call i32 @llvm.ctpop.i32(i32 %4209)
  %4211 = trunc i32 %4210 to i8
  %4212 = and i8 %4211, 1
  %4213 = xor i8 %4212, 1
  store i8 %4213, i8* %21, align 1
  %4214 = xor i64 %4202, %4203
  %4215 = lshr i64 %4214, 4
  %4216 = trunc i64 %4215 to i8
  %4217 = and i8 %4216, 1
  store i8 %4217, i8* %26, align 1
  %4218 = icmp eq i64 %4203, 0
  %4219 = zext i1 %4218 to i8
  store i8 %4219, i8* %29, align 1
  %4220 = lshr i64 %4203, 63
  %4221 = trunc i64 %4220 to i8
  store i8 %4221, i8* %32, align 1
  %4222 = lshr i64 %4202, 63
  %4223 = xor i64 %4220, %4222
  %4224 = add nuw nsw i64 %4223, %4220
  %4225 = icmp eq i64 %4224, 2
  %4226 = zext i1 %4225 to i8
  store i8 %4226, i8* %38, align 1
  store i64 %4203, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %4227 = add i64 %4199, -124521
  %4228 = add i64 %4199, 51
  %4229 = load i64, i64* %6, align 8
  %4230 = add i64 %4229, -8
  %4231 = inttoptr i64 %4230 to i64*
  store i64 %4228, i64* %4231, align 8
  store i64 %4230, i64* %6, align 8
  store i64 %4227, i64* %3, align 8
  %4232 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %4187)
  %4233 = load i64, i64* %3, align 8
  %4234 = load i32, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  store i8 0, i8* %14, align 1
  %4235 = and i32 %4234, 255
  %4236 = tail call i32 @llvm.ctpop.i32(i32 %4235)
  %4237 = trunc i32 %4236 to i8
  %4238 = and i8 %4237, 1
  %4239 = xor i8 %4238, 1
  store i8 %4239, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4240 = icmp eq i32 %4234, 0
  %4241 = zext i1 %4240 to i8
  store i8 %4241, i8* %29, align 1
  %4242 = lshr i32 %4234, 31
  %4243 = trunc i32 %4242 to i8
  store i8 %4243, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %4244 = load i64, i64* %RBP.i, align 8
  %4245 = add i64 %4244, -25244
  %4246 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4247 = add i64 %4233, 14
  store i64 %4247, i64* %3, align 8
  %4248 = inttoptr i64 %4245 to i32*
  store i32 %4246, i32* %4248, align 4
  %4249 = load i64, i64* %3, align 8
  %4250 = add i64 %4249, 17
  %4251 = add i64 %4249, 6
  %4252 = load i8, i8* %29, align 1
  %4253 = icmp eq i8 %4252, 0
  %4254 = select i1 %4253, i64 %4250, i64 %4251
  store i64 %4254, i64* %3, align 8
  br i1 %4253, label %block_.L_41f43b, label %block_41f430

block_41f430:                                     ; preds = %block_41f3e9
  %4255 = add i64 %4254, 11
  store i64 %4255, i64* %3, align 8
  store i32 2000, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  br label %block_.L_41f43b

block_.L_41f43b:                                  ; preds = %block_41f430, %block_41f3e9
  %4256 = phi i64 [ %4255, %block_41f430 ], [ %4250, %block_41f3e9 ]
  %4257 = load i32, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  store i8 0, i8* %14, align 1
  %4258 = and i32 %4257, 255
  %4259 = tail call i32 @llvm.ctpop.i32(i32 %4258)
  %4260 = trunc i32 %4259 to i8
  %4261 = and i8 %4260, 1
  %4262 = xor i8 %4261, 1
  store i8 %4262, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4263 = icmp eq i32 %4257, 0
  %4264 = zext i1 %4263 to i8
  store i8 %4264, i8* %29, align 1
  %4265 = lshr i32 %4257, 31
  %4266 = trunc i32 %4265 to i8
  store i8 %4266, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v325 = select i1 %4263, i64 14, i64 25
  %4267 = add i64 %4256, %.v325
  store i64 %4267, i64* %3, align 8
  br i1 %4263, label %block_41f449, label %block_.L_41f454

block_41f449:                                     ; preds = %block_.L_41f43b
  %4268 = add i64 %4267, 11
  store i64 %4268, i64* %3, align 8
  store i32 2000, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  br label %block_.L_41f454

block_.L_41f454:                                  ; preds = %block_.L_41f43b, %block_41f449
  %4269 = phi i64 [ %4268, %block_41f449 ], [ %4267, %block_.L_41f43b ]
  %4270 = add i64 %4269, 4074
  br label %block_.L_42043e

block_.L_41f459:                                  ; preds = %block_.L_41f3c3
  store i64 ptrtoint (%G__0x429476_type* @G__0x429476 to i64), i64* %RSI.i118, align 8
  store i64 7, i64* %RAX.i, align 8
  store i64 7, i64* %RDX.i, align 8
  %4271 = load i64, i64* %RBP.i, align 8
  %4272 = add i64 %4271, -272
  store i64 %4272, i64* %RDI.i176, align 8
  %4273 = add i64 %4199, -124921
  %4274 = add i64 %4199, 29
  %4275 = load i64, i64* %6, align 8
  %4276 = add i64 %4275, -8
  %4277 = inttoptr i64 %4276 to i64*
  store i64 %4274, i64* %4277, align 8
  store i64 %4276, i64* %6, align 8
  store i64 %4273, i64* %3, align 8
  %4278 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4187)
  %4279 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4280 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4281 = and i32 %4279, 255
  %4282 = tail call i32 @llvm.ctpop.i32(i32 %4281)
  %4283 = trunc i32 %4282 to i8
  %4284 = and i8 %4283, 1
  %4285 = xor i8 %4284, 1
  store i8 %4285, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4286 = icmp eq i32 %4279, 0
  %4287 = zext i1 %4286 to i8
  store i8 %4287, i8* %29, align 1
  %4288 = lshr i32 %4279, 31
  %4289 = trunc i32 %4288 to i8
  store i8 %4289, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v282 = select i1 %4286, i64 9, i64 26
  %4290 = add i64 %4280, %.v282
  store i64 %4290, i64* %3, align 8
  br i1 %4286, label %block_41f47f, label %block_.L_41f490

block_41f47f:                                     ; preds = %block_.L_41f459
  %4291 = load i64, i64* %RBP.i, align 8
  %4292 = add i64 %4291, -272
  store i64 %4292, i64* %RDI.i176, align 8
  %4293 = add i64 %4290, -120991
  %4294 = add i64 %4290, 12
  %4295 = load i64, i64* %6, align 8
  %4296 = add i64 %4295, -8
  %4297 = inttoptr i64 %4296 to i64*
  store i64 %4294, i64* %4297, align 8
  store i64 %4296, i64* %6, align 8
  store i64 %4293, i64* %3, align 8
  %call2_41f486 = tail call %struct.Memory* @sub_401be0.ProcessHoldings(%struct.State* nonnull %0, i64 %4293, %struct.Memory* %4278)
  %4298 = load i64, i64* %3, align 8
  %4299 = add i64 %4298, 4014
  br label %block_.L_420439

block_.L_41f490:                                  ; preds = %block_.L_41f459
  store i64 ptrtoint (%G__0x42947e_type* @G__0x42947e to i64), i64* %RSI.i118, align 8
  store i64 7, i64* %RAX.i, align 8
  store i64 7, i64* %RDX.i, align 8
  %4300 = load i64, i64* %RBP.i, align 8
  %4301 = add i64 %4300, -272
  store i64 %4301, i64* %RDI.i176, align 8
  %4302 = add i64 %4290, -124976
  %4303 = add i64 %4290, 29
  %4304 = load i64, i64* %6, align 8
  %4305 = add i64 %4304, -8
  %4306 = inttoptr i64 %4305 to i64*
  store i64 %4303, i64* %4306, align 8
  store i64 %4305, i64* %6, align 8
  store i64 %4302, i64* %3, align 8
  %4307 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4278)
  %4308 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4309 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4310 = and i32 %4308, 255
  %4311 = tail call i32 @llvm.ctpop.i32(i32 %4310)
  %4312 = trunc i32 %4311 to i8
  %4313 = and i8 %4312, 1
  %4314 = xor i8 %4313, 1
  store i8 %4314, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4315 = icmp eq i32 %4308, 0
  %4316 = zext i1 %4315 to i8
  store i8 %4316, i8* %29, align 1
  %4317 = lshr i32 %4308, 31
  %4318 = trunc i32 %4317 to i8
  store i8 %4318, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v283 = select i1 %4315, i64 9, i64 575
  %4319 = add i64 %4309, %.v283
  %4320 = add i64 %4319, 10
  store i64 %4320, i64* %3, align 8
  br i1 %4315, label %block_41f4b6, label %block_.L_41f6ec

block_41f4b6:                                     ; preds = %block_.L_41f490
  store i64 ptrtoint (%G__0x429486_type* @G__0x429486 to i64), i64* %RSI.i118, align 8
  %4321 = load i64, i64* %RBP.i, align 8
  %4322 = add i64 %4321, -272
  store i64 %4322, i64* %RDI.i176, align 8
  %4323 = add i64 %4319, -124614
  %4324 = add i64 %4319, 22
  %4325 = load i64, i64* %6, align 8
  %4326 = add i64 %4325, -8
  %4327 = inttoptr i64 %4326 to i64*
  store i64 %4324, i64* %4327, align 8
  store i64 %4326, i64* %6, align 8
  store i64 %4323, i64* %3, align 8
  %call2_41f4c7 = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4323, %struct.Memory* %4307)
  %4328 = load i64, i64* %RAX.i, align 8
  %4329 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4330 = trunc i64 %4328 to i32
  %4331 = and i32 %4330, 255
  %4332 = tail call i32 @llvm.ctpop.i32(i32 %4331)
  %4333 = trunc i32 %4332 to i8
  %4334 = and i8 %4333, 1
  %4335 = xor i8 %4334, 1
  store i8 %4335, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4336 = icmp eq i64 %4328, 0
  %4337 = zext i1 %4336 to i8
  store i8 %4337, i8* %29, align 1
  %4338 = lshr i64 %4328, 63
  %4339 = trunc i64 %4338 to i8
  store i8 %4339, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v319 = select i1 %4336, i64 62, i64 10
  %4340 = add i64 %4329, %.v319
  %4341 = add i64 %4340, 10
  store i64 %4341, i64* %3, align 8
  br i1 %4336, label %block_.L_41f50a, label %block_41f4d6

block_41f4d6:                                     ; preds = %block_41f4b6
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i32 2, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RSI.i118, align 8
  %4342 = add i64 %4340, -124822
  %4343 = add i64 %4340, 47
  %4344 = load i64, i64* %6, align 8
  %4345 = add i64 %4344, -8
  %4346 = inttoptr i64 %4345 to i64*
  store i64 %4343, i64* %4346, align 8
  store i64 %4345, i64* %6, align 8
  store i64 %4342, i64* %3, align 8
  %4347 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41f4c7)
  %4348 = load i64, i64* %3, align 8
  %4349 = add i64 %4348, 467
  br label %block_.L_41f6d8

block_.L_41f50a:                                  ; preds = %block_41f4b6
  store i64 ptrtoint (%G__0x42948d_type* @G__0x42948d to i64), i64* %RSI.i118, align 8
  %4350 = load i64, i64* %RBP.i, align 8
  %4351 = add i64 %4350, -272
  store i64 %4351, i64* %RDI.i176, align 8
  %4352 = add i64 %4340, -124698
  %4353 = add i64 %4340, 22
  %4354 = load i64, i64* %6, align 8
  %4355 = add i64 %4354, -8
  %4356 = inttoptr i64 %4355 to i64*
  store i64 %4353, i64* %4356, align 8
  store i64 %4355, i64* %6, align 8
  store i64 %4352, i64* %3, align 8
  %call2_41f51b = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4352, %struct.Memory* %call2_41f4c7)
  %4357 = load i64, i64* %RAX.i, align 8
  %4358 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4359 = trunc i64 %4357 to i32
  %4360 = and i32 %4359, 255
  %4361 = tail call i32 @llvm.ctpop.i32(i32 %4360)
  %4362 = trunc i32 %4361 to i8
  %4363 = and i8 %4362, 1
  %4364 = xor i8 %4363, 1
  store i8 %4364, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4365 = icmp eq i64 %4357, 0
  %4366 = zext i1 %4365 to i8
  store i8 %4366, i8* %29, align 1
  %4367 = lshr i64 %4357, 63
  %4368 = trunc i64 %4367 to i8
  store i8 %4368, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v320 = select i1 %4365, i64 62, i64 10
  %4369 = add i64 %4358, %.v320
  %4370 = add i64 %4369, 10
  store i64 %4370, i64* %3, align 8
  br i1 %4365, label %block_.L_41f55e, label %block_41f52a

block_41f52a:                                     ; preds = %block_.L_41f50a
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c170_type* @G__0x62c170 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i32 0, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c170_type* @G__0x62c170 to i64), i64* %RSI.i118, align 8
  %4371 = add i64 %4369, -124906
  %4372 = add i64 %4369, 47
  %4373 = load i64, i64* %6, align 8
  %4374 = add i64 %4373, -8
  %4375 = inttoptr i64 %4374 to i64*
  store i64 %4372, i64* %4375, align 8
  store i64 %4374, i64* %6, align 8
  store i64 %4371, i64* %3, align 8
  %4376 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41f51b)
  %4377 = load i64, i64* %3, align 8
  %4378 = add i64 %4377, 378
  br label %block_.L_41f6d3

block_.L_41f55e:                                  ; preds = %block_.L_41f50a
  store i64 ptrtoint (%G__0x429498_type* @G__0x429498 to i64), i64* %RSI.i118, align 8
  %4379 = load i64, i64* %RBP.i, align 8
  %4380 = add i64 %4379, -272
  store i64 %4380, i64* %RDI.i176, align 8
  %4381 = add i64 %4369, -124782
  %4382 = add i64 %4369, 22
  %4383 = load i64, i64* %6, align 8
  %4384 = add i64 %4383, -8
  %4385 = inttoptr i64 %4384 to i64*
  store i64 %4382, i64* %4385, align 8
  store i64 %4384, i64* %6, align 8
  store i64 %4381, i64* %3, align 8
  %call2_41f56f = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4381, %struct.Memory* %call2_41f51b)
  %4386 = load i64, i64* %RAX.i, align 8
  %4387 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4388 = trunc i64 %4386 to i32
  %4389 = and i32 %4388, 255
  %4390 = tail call i32 @llvm.ctpop.i32(i32 %4389)
  %4391 = trunc i32 %4390 to i8
  %4392 = and i8 %4391, 1
  %4393 = xor i8 %4392, 1
  store i8 %4393, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4394 = icmp eq i64 %4386, 0
  %4395 = zext i1 %4394 to i8
  store i8 %4395, i8* %29, align 1
  %4396 = lshr i64 %4386, 63
  %4397 = trunc i64 %4396 to i8
  store i8 %4397, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v321 = select i1 %4394, i64 62, i64 10
  %4398 = add i64 %4387, %.v321
  %4399 = add i64 %4398, 10
  store i64 %4399, i64* %3, align 8
  br i1 %4394, label %block_.L_41f5b2, label %block_41f57e

block_41f57e:                                     ; preds = %block_.L_41f55e
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c170_type* @G__0x62c170 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i32 1, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c170_type* @G__0x62c170 to i64), i64* %RSI.i118, align 8
  %4400 = add i64 %4398, -124990
  %4401 = add i64 %4398, 47
  %4402 = load i64, i64* %6, align 8
  %4403 = add i64 %4402, -8
  %4404 = inttoptr i64 %4403 to i64*
  store i64 %4401, i64* %4404, align 8
  store i64 %4403, i64* %6, align 8
  store i64 %4400, i64* %3, align 8
  %4405 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41f56f)
  %4406 = load i64, i64* %3, align 8
  %4407 = add i64 %4406, 289
  br label %block_.L_41f6ce

block_.L_41f5b2:                                  ; preds = %block_.L_41f55e
  store i64 ptrtoint (%G__0x4294a1_type* @G__0x4294a1 to i64), i64* %RSI.i118, align 8
  %4408 = load i64, i64* %RBP.i, align 8
  %4409 = add i64 %4408, -272
  store i64 %4409, i64* %RDI.i176, align 8
  %4410 = add i64 %4398, -124866
  %4411 = add i64 %4398, 22
  %4412 = load i64, i64* %6, align 8
  %4413 = add i64 %4412, -8
  %4414 = inttoptr i64 %4413 to i64*
  store i64 %4411, i64* %4414, align 8
  store i64 %4413, i64* %6, align 8
  store i64 %4410, i64* %3, align 8
  %call2_41f5c3 = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4410, %struct.Memory* %call2_41f56f)
  %4415 = load i64, i64* %RAX.i, align 8
  %4416 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4417 = trunc i64 %4415 to i32
  %4418 = and i32 %4417, 255
  %4419 = tail call i32 @llvm.ctpop.i32(i32 %4418)
  %4420 = trunc i32 %4419 to i8
  %4421 = and i8 %4420, 1
  %4422 = xor i8 %4421, 1
  store i8 %4422, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4423 = icmp eq i64 %4415, 0
  %4424 = zext i1 %4423 to i8
  store i8 %4424, i8* %29, align 1
  %4425 = lshr i64 %4415, 63
  %4426 = trunc i64 %4425 to i8
  store i8 %4426, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v322 = select i1 %4423, i64 73, i64 10
  %4427 = add i64 %4416, %.v322
  %4428 = add i64 %4427, 10
  store i64 %4428, i64* %3, align 8
  br i1 %4423, label %block_.L_41f611, label %block_41f5d2

block_41f5d2:                                     ; preds = %block_.L_41f5b2
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c1b0_type* @G__0x62c1b0 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i32 3, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886b88_type* @G_0x886b88 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c1b0_type* @G__0x62c1b0 to i64), i64* %RSI.i118, align 8
  %4429 = add i64 %4427, -125074
  %4430 = add i64 %4427, 58
  %4431 = load i64, i64* %6, align 8
  %4432 = add i64 %4431, -8
  %4433 = inttoptr i64 %4432 to i64*
  store i64 %4430, i64* %4433, align 8
  store i64 %4432, i64* %6, align 8
  store i64 %4429, i64* %3, align 8
  %4434 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41f5c3)
  %4435 = load i64, i64* %3, align 8
  %4436 = add i64 %4435, 189
  br label %block_.L_41f6c9

block_.L_41f611:                                  ; preds = %block_.L_41f5b2
  store i64 ptrtoint (%G__0x4294a9_type* @G__0x4294a9 to i64), i64* %RSI.i118, align 8
  %4437 = load i64, i64* %RBP.i, align 8
  %4438 = add i64 %4437, -272
  store i64 %4438, i64* %RDI.i176, align 8
  %4439 = add i64 %4427, -124961
  %4440 = add i64 %4427, 22
  %4441 = load i64, i64* %6, align 8
  %4442 = add i64 %4441, -8
  %4443 = inttoptr i64 %4442 to i64*
  store i64 %4440, i64* %4443, align 8
  store i64 %4442, i64* %6, align 8
  store i64 %4439, i64* %3, align 8
  %call2_41f622 = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4439, %struct.Memory* %call2_41f5c3)
  %4444 = load i64, i64* %RAX.i, align 8
  %4445 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4446 = trunc i64 %4444 to i32
  %4447 = and i32 %4446, 255
  %4448 = tail call i32 @llvm.ctpop.i32(i32 %4447)
  %4449 = trunc i32 %4448 to i8
  %4450 = and i8 %4449, 1
  %4451 = xor i8 %4450, 1
  store i8 %4451, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4452 = icmp eq i64 %4444, 0
  %4453 = zext i1 %4452 to i8
  store i8 %4453, i8* %29, align 1
  %4454 = lshr i64 %4444, 63
  %4455 = trunc i64 %4454 to i8
  store i8 %4455, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v323 = select i1 %4452, i64 73, i64 10
  %4456 = add i64 %4445, %.v323
  %4457 = add i64 %4456, 10
  store i64 %4457, i64* %3, align 8
  br i1 %4452, label %block_.L_41f670, label %block_41f631

block_41f631:                                     ; preds = %block_.L_41f611
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c1b0_type* @G__0x62c1b0 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i32 3, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i32 1, i32* bitcast (%G_0x886b88_type* @G_0x886b88 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c1b0_type* @G__0x62c1b0 to i64), i64* %RSI.i118, align 8
  %4458 = add i64 %4456, -125169
  %4459 = add i64 %4456, 58
  %4460 = load i64, i64* %6, align 8
  %4461 = add i64 %4460, -8
  %4462 = inttoptr i64 %4461 to i64*
  store i64 %4459, i64* %4462, align 8
  store i64 %4461, i64* %6, align 8
  store i64 %4458, i64* %3, align 8
  %4463 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41f622)
  %4464 = load i64, i64* %3, align 8
  %4465 = add i64 %4464, 89
  br label %block_.L_41f6c4

block_.L_41f670:                                  ; preds = %block_.L_41f611
  store i64 ptrtoint (%G__0x4294b2_type* @G__0x4294b2 to i64), i64* %RSI.i118, align 8
  %4466 = load i64, i64* %RBP.i, align 8
  %4467 = add i64 %4466, -272
  store i64 %4467, i64* %RDI.i176, align 8
  %4468 = add i64 %4456, -125056
  %4469 = add i64 %4456, 22
  %4470 = load i64, i64* %6, align 8
  %4471 = add i64 %4470, -8
  %4472 = inttoptr i64 %4471 to i64*
  store i64 %4469, i64* %4472, align 8
  store i64 %4471, i64* %6, align 8
  store i64 %4468, i64* %3, align 8
  %call2_41f681 = tail call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* nonnull %0, i64 %4468, %struct.Memory* %call2_41f622)
  %4473 = load i64, i64* %RAX.i, align 8
  %4474 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4475 = trunc i64 %4473 to i32
  %4476 = and i32 %4475, 255
  %4477 = tail call i32 @llvm.ctpop.i32(i32 %4476)
  %4478 = trunc i32 %4477 to i8
  %4479 = and i8 %4478, 1
  %4480 = xor i8 %4479, 1
  store i8 %4480, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4481 = icmp eq i64 %4473, 0
  %4482 = zext i1 %4481 to i8
  store i8 %4482, i8* %29, align 1
  %4483 = lshr i64 %4473, 63
  %4484 = trunc i64 %4483 to i8
  store i8 %4484, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v324 = select i1 %4481, i64 57, i64 10
  %4485 = add i64 %4474, %.v324
  store i64 %4485, i64* %3, align 8
  br i1 %4481, label %block_.L_41f6bf, label %block_41f690

block_41f690:                                     ; preds = %block_.L_41f670
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c1f0_type* @G__0x62c1f0 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i32 4, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c1f0_type* @G__0x62c1f0 to i64), i64* %RSI.i118, align 8
  %4486 = add i64 %4485, -125264
  %4487 = add i64 %4485, 47
  %4488 = load i64, i64* %6, align 8
  %4489 = add i64 %4488, -8
  %4490 = inttoptr i64 %4489 to i64*
  store i64 %4487, i64* %4490, align 8
  store i64 %4489, i64* %6, align 8
  store i64 %4486, i64* %3, align 8
  %4491 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %call2_41f681)
  %.pre239 = load i64, i64* %3, align 8
  br label %block_.L_41f6bf

block_.L_41f6bf:                                  ; preds = %block_41f690, %block_.L_41f670
  %4492 = phi i64 [ %4485, %block_.L_41f670 ], [ %.pre239, %block_41f690 ]
  %MEMORY.61 = phi %struct.Memory* [ %call2_41f681, %block_.L_41f670 ], [ %4491, %block_41f690 ]
  %4493 = add i64 %4492, 5
  store i64 %4493, i64* %3, align 8
  br label %block_.L_41f6c4

block_.L_41f6c4:                                  ; preds = %block_.L_41f6bf, %block_41f631
  %storemerge172 = phi i64 [ %4465, %block_41f631 ], [ %4493, %block_.L_41f6bf ]
  %MEMORY.62 = phi %struct.Memory* [ %4463, %block_41f631 ], [ %MEMORY.61, %block_.L_41f6bf ]
  %4494 = add i64 %storemerge172, 5
  store i64 %4494, i64* %3, align 8
  br label %block_.L_41f6c9

block_.L_41f6c9:                                  ; preds = %block_.L_41f6c4, %block_41f5d2
  %storemerge171 = phi i64 [ %4436, %block_41f5d2 ], [ %4494, %block_.L_41f6c4 ]
  %MEMORY.63 = phi %struct.Memory* [ %4434, %block_41f5d2 ], [ %MEMORY.62, %block_.L_41f6c4 ]
  %4495 = add i64 %storemerge171, 5
  store i64 %4495, i64* %3, align 8
  br label %block_.L_41f6ce

block_.L_41f6ce:                                  ; preds = %block_.L_41f6c9, %block_41f57e
  %storemerge170 = phi i64 [ %4407, %block_41f57e ], [ %4495, %block_.L_41f6c9 ]
  %MEMORY.64 = phi %struct.Memory* [ %4405, %block_41f57e ], [ %MEMORY.63, %block_.L_41f6c9 ]
  %4496 = add i64 %storemerge170, 5
  store i64 %4496, i64* %3, align 8
  br label %block_.L_41f6d3

block_.L_41f6d3:                                  ; preds = %block_.L_41f6ce, %block_41f52a
  %storemerge169 = phi i64 [ %4378, %block_41f52a ], [ %4496, %block_.L_41f6ce ]
  %MEMORY.65 = phi %struct.Memory* [ %4376, %block_41f52a ], [ %MEMORY.64, %block_.L_41f6ce ]
  %4497 = add i64 %storemerge169, 5
  store i64 %4497, i64* %3, align 8
  br label %block_.L_41f6d8

block_.L_41f6d8:                                  ; preds = %block_.L_41f6d3, %block_41f4d6
  %storemerge167 = phi i64 [ %4349, %block_41f4d6 ], [ %4497, %block_.L_41f6d3 ]
  %MEMORY.66 = phi %struct.Memory* [ %4347, %block_41f4d6 ], [ %MEMORY.65, %block_.L_41f6d3 ]
  %4498 = add i64 %storemerge167, 3880
  %4499 = add i64 %storemerge167, 5
  %4500 = load i64, i64* %6, align 8
  %4501 = add i64 %4500, -8
  %4502 = inttoptr i64 %4501 to i64*
  store i64 %4499, i64* %4502, align 8
  store i64 %4501, i64* %6, align 8
  store i64 %4498, i64* %3, align 8
  %call2_41f6d8 = tail call %struct.Memory* @sub_420600.initialize_hash(%struct.State* nonnull %0, i64 %4498, %struct.Memory* %MEMORY.66)
  %4503 = load i64, i64* %3, align 8
  %4504 = add i64 %4503, 3555
  %4505 = add i64 %4503, 5
  %4506 = load i64, i64* %6, align 8
  %4507 = add i64 %4506, -8
  %4508 = inttoptr i64 %4507 to i64*
  store i64 %4505, i64* %4508, align 8
  store i64 %4507, i64* %6, align 8
  store i64 %4504, i64* %3, align 8
  %call2_41f6dd = tail call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* nonnull %0, i64 %4504, %struct.Memory* %call2_41f6d8)
  %4509 = load i64, i64* %3, align 8
  %4510 = add i64 %4509, -117458
  %4511 = add i64 %4509, 5
  %4512 = load i64, i64* %6, align 8
  %4513 = add i64 %4512, -8
  %4514 = inttoptr i64 %4513 to i64*
  store i64 %4511, i64* %4514, align 8
  store i64 %4513, i64* %6, align 8
  store i64 %4510, i64* %3, align 8
  %call2_41f6e2 = tail call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* nonnull %0, i64 %4510, %struct.Memory* %call2_41f6dd)
  %4515 = load i64, i64* %3, align 8
  %4516 = add i64 %4515, 3405
  br label %block_.L_420434

block_.L_41f6ec:                                  ; preds = %block_.L_41f490
  store i64 ptrtoint (%G__0x4294b9_type* @G__0x4294b9 to i64), i64* %RSI.i118, align 8
  store i64 7, i64* %RAX.i, align 8
  store i64 7, i64* %RDX.i, align 8
  %4517 = load i64, i64* %RBP.i, align 8
  %4518 = add i64 %4517, -272
  store i64 %4518, i64* %RDI.i176, align 8
  %4519 = add i64 %4319, -125580
  %4520 = add i64 %4319, 29
  %4521 = load i64, i64* %6, align 8
  %4522 = add i64 %4521, -8
  %4523 = inttoptr i64 %4522 to i64*
  store i64 %4520, i64* %4523, align 8
  store i64 %4522, i64* %6, align 8
  store i64 %4519, i64* %3, align 8
  %4524 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4307)
  %4525 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4526 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4527 = and i32 %4525, 255
  %4528 = tail call i32 @llvm.ctpop.i32(i32 %4527)
  %4529 = trunc i32 %4528 to i8
  %4530 = and i8 %4529, 1
  %4531 = xor i8 %4530, 1
  store i8 %4531, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4532 = icmp eq i32 %4525, 0
  %4533 = zext i1 %4532 to i8
  store i8 %4533, i8* %29, align 1
  %4534 = lshr i32 %4525, 31
  %4535 = trunc i32 %4534 to i8
  store i8 %4535, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v284 = select i1 %4532, i64 9, i64 59
  %4536 = add i64 %4526, %.v284
  store i64 %4536, i64* %3, align 8
  br i1 %4532, label %block_41f712, label %block_.L_41f744

block_41f712:                                     ; preds = %block_.L_41f6ec
  %4537 = load i64, i64* %RBP.i, align 8
  %4538 = add i64 %4537, -24968
  store i64 %4538, i64* %RDI.i176, align 8
  store i32 1, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  store i32 1, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  %4539 = add i64 %4536, -19922
  %4540 = add i64 %4536, 34
  %4541 = load i64, i64* %6, align 8
  %4542 = add i64 %4541, -8
  %4543 = inttoptr i64 %4542 to i64*
  store i64 %4540, i64* %4543, align 8
  store i64 %4542, i64* %6, align 8
  store i64 %4539, i64* %3, align 8
  %call2_41f72f = tail call %struct.Memory* @sub_41a940.think(%struct.State* nonnull %0, i64 %4539, %struct.Memory* %4524)
  %4544 = load i64, i64* %3, align 8
  %4545 = add i64 %4544, 11
  store i64 %4545, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*), align 8
  %4546 = add i64 %4544, 3323
  br label %block_.L_42042f

block_.L_41f744:                                  ; preds = %block_.L_41f6ec
  store i64 ptrtoint (%G__0x4294c1_type* @G__0x4294c1 to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %4547 = load i64, i64* %RBP.i, align 8
  %4548 = add i64 %4547, -272
  store i64 %4548, i64* %RDI.i176, align 8
  %4549 = add i64 %4536, -125668
  %4550 = add i64 %4536, 29
  %4551 = load i64, i64* %6, align 8
  %4552 = add i64 %4551, -8
  %4553 = inttoptr i64 %4552 to i64*
  store i64 %4550, i64* %4553, align 8
  store i64 %4552, i64* %6, align 8
  store i64 %4549, i64* %3, align 8
  %4554 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4524)
  %4555 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4556 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4557 = and i32 %4555, 255
  %4558 = tail call i32 @llvm.ctpop.i32(i32 %4557)
  %4559 = trunc i32 %4558 to i8
  %4560 = and i8 %4559, 1
  %4561 = xor i8 %4560, 1
  store i8 %4561, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4562 = icmp eq i32 %4555, 0
  %4563 = zext i1 %4562 to i8
  store i8 %4563, i8* %29, align 1
  %4564 = lshr i32 %4555, 31
  %4565 = trunc i32 %4564 to i8
  store i8 %4565, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v285 = select i1 %4562, i64 9, i64 169
  %4566 = add i64 %4556, %.v285
  %4567 = add i64 %4566, 10
  store i64 %4567, i64* %3, align 8
  br i1 %4562, label %block_41f76a, label %block_.L_41f80a

block_41f76a:                                     ; preds = %block_.L_41f744
  store i64 ptrtoint (%G__0x4294c6_type* @G__0x4294c6 to i64), i64* %RDI.i176, align 8
  %4568 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4569 = zext i32 %4568 to i64
  store i64 %4569, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %4570 = add i64 %4566, -125626
  %4571 = add i64 %4566, 24
  %4572 = load i64, i64* %6, align 8
  %4573 = add i64 %4572, -8
  %4574 = inttoptr i64 %4573 to i64*
  store i64 %4571, i64* %4574, align 8
  store i64 %4573, i64* %6, align 8
  store i64 %4570, i64* %3, align 8
  %4575 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %4554)
  %4576 = load i64, i64* %3, align 8
  %4577 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  store i8 0, i8* %14, align 1
  %4578 = and i32 %4577, 255
  %4579 = tail call i32 @llvm.ctpop.i32(i32 %4578)
  %4580 = trunc i32 %4579 to i8
  %4581 = and i8 %4580, 1
  %4582 = xor i8 %4581, 1
  store i8 %4582, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4583 = icmp eq i32 %4577, 0
  %4584 = zext i1 %4583 to i8
  store i8 %4584, i8* %29, align 1
  %4585 = lshr i32 %4577, 31
  %4586 = trunc i32 %4585 to i8
  store i8 %4586, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %4587 = load i64, i64* %RBP.i, align 8
  %4588 = add i64 %4587, -25248
  %4589 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4590 = add i64 %4576, 14
  store i64 %4590, i64* %3, align 8
  %4591 = inttoptr i64 %4588 to i32*
  store i32 %4589, i32* %4591, align 4
  %4592 = load i64, i64* %3, align 8
  %4593 = add i64 %4592, 117
  %4594 = add i64 %4592, 6
  %4595 = load i8, i8* %29, align 1
  %4596 = icmp ne i8 %4595, 0
  %4597 = load i8, i8* %32, align 1
  %4598 = icmp ne i8 %4597, 0
  %4599 = load i8, i8* %38, align 1
  %4600 = icmp ne i8 %4599, 0
  %4601 = xor i1 %4598, %4600
  %4602 = or i1 %4596, %4601
  %4603 = select i1 %4602, i64 %4593, i64 %4594
  store i64 %4603, i64* %3, align 8
  br i1 %4602, label %block_.L_41f805, label %block_41f796

block_41f796:                                     ; preds = %block_41f76a
  store i64 0, i64* %RSI.i118, align 8
  %4604 = load i64, i64* %RBP.i, align 8
  %4605 = add i64 %4604, -15264
  store i64 %4605, i64* %RAX.i, align 8
  %4606 = add i64 %4604, -24864
  %4607 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4608 = add i32 %4607, -1
  %4609 = zext i32 %4608 to i64
  store i64 %4609, i64* %RDX.i, align 8
  store i32 %4608, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4610 = sext i32 %4608 to i64
  %4611 = shl nsw i64 %4610, 4
  store i64 %4611, i64* %RDI.i176, align 8
  %4612 = add i64 %4611, %4606
  store i64 %4612, i64* %RCX.i, align 8
  %4613 = icmp ult i64 %4612, %4606
  %4614 = icmp ult i64 %4612, %4611
  %4615 = or i1 %4613, %4614
  %4616 = zext i1 %4615 to i8
  store i8 %4616, i8* %14, align 1
  %4617 = trunc i64 %4612 to i32
  %4618 = and i32 %4617, 255
  %4619 = tail call i32 @llvm.ctpop.i32(i32 %4618)
  %4620 = trunc i32 %4619 to i8
  %4621 = and i8 %4620, 1
  %4622 = xor i8 %4621, 1
  store i8 %4622, i8* %21, align 1
  %4623 = xor i64 %4611, %4606
  %4624 = xor i64 %4623, %4612
  %4625 = lshr i64 %4624, 4
  %4626 = trunc i64 %4625 to i8
  %4627 = and i8 %4626, 1
  store i8 %4627, i8* %26, align 1
  %4628 = icmp eq i64 %4612, 0
  %4629 = zext i1 %4628 to i8
  store i8 %4629, i8* %29, align 1
  %4630 = lshr i64 %4612, 63
  %4631 = trunc i64 %4630 to i8
  store i8 %4631, i8* %32, align 1
  %4632 = lshr i64 %4606, 63
  %4633 = lshr i64 %4610, 59
  %4634 = and i64 %4633, 1
  %4635 = xor i64 %4630, %4632
  %4636 = xor i64 %4630, %4634
  %4637 = add nuw nsw i64 %4635, %4636
  %4638 = icmp eq i64 %4637, 2
  %4639 = zext i1 %4638 to i8
  store i8 %4639, i8* %38, align 1
  %4640 = inttoptr i64 %4612 to i64*
  %4641 = add i64 %4603, 46
  store i64 %4641, i64* %3, align 8
  %4642 = load i64, i64* %4640, align 8
  store i64 %4642, i64* %RDI.i176, align 8
  store i64 %4642, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  %4643 = add i64 %4612, 8
  %4644 = add i64 %4603, 58
  store i64 %4644, i64* %3, align 8
  %4645 = inttoptr i64 %4643 to i64*
  %4646 = load i64, i64* %4645, align 8
  store i64 %4646, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  %4647 = mul nsw i64 %4610, 24
  store i64 %4647, i64* %RCX.i, align 8
  %4648 = lshr i64 %4647, 63
  %4649 = load i64, i64* %RAX.i, align 8
  %4650 = add i64 %4647, %4649
  store i64 %4650, i64* %RAX.i, align 8
  %4651 = icmp ult i64 %4650, %4649
  %4652 = icmp ult i64 %4650, %4647
  %4653 = or i1 %4651, %4652
  %4654 = zext i1 %4653 to i8
  store i8 %4654, i8* %14, align 1
  %4655 = trunc i64 %4650 to i32
  %4656 = and i32 %4655, 255
  %4657 = tail call i32 @llvm.ctpop.i32(i32 %4656)
  %4658 = trunc i32 %4657 to i8
  %4659 = and i8 %4658, 1
  %4660 = xor i8 %4659, 1
  store i8 %4660, i8* %21, align 1
  %4661 = xor i64 %4647, %4649
  %4662 = xor i64 %4661, %4650
  %4663 = lshr i64 %4662, 4
  %4664 = trunc i64 %4663 to i8
  %4665 = and i8 %4664, 1
  store i8 %4665, i8* %26, align 1
  %4666 = icmp eq i64 %4650, 0
  %4667 = zext i1 %4666 to i8
  store i8 %4667, i8* %29, align 1
  %4668 = lshr i64 %4650, 63
  %4669 = trunc i64 %4668 to i8
  store i8 %4669, i8* %32, align 1
  %4670 = lshr i64 %4649, 63
  %4671 = xor i64 %4668, %4670
  %4672 = xor i64 %4668, %4648
  %4673 = add nuw nsw i64 %4671, %4672
  %4674 = icmp eq i64 %4673, 2
  %4675 = zext i1 %4674 to i8
  store i8 %4675, i8* %38, align 1
  store i64 %4650, i64* %RDI.i176, align 8
  %4676 = add i64 %4603, -77814
  %4677 = add i64 %4603, 89
  %4678 = load i64, i64* %6, align 8
  %4679 = add i64 %4678, -8
  %4680 = inttoptr i64 %4679 to i64*
  store i64 %4677, i64* %4680, align 8
  store i64 %4679, i64* %6, align 8
  store i64 %4676, i64* %3, align 8
  %call2_41f7ea = tail call %struct.Memory* @sub_40c7a0.unmake(%struct.State* nonnull %0, i64 %4676, %struct.Memory* %4575)
  %4681 = load i64, i64* %3, align 8
  %4682 = add i64 %4681, 12449
  %4683 = add i64 %4681, 5
  %4684 = load i64, i64* %6, align 8
  %4685 = add i64 %4684, -8
  %4686 = inttoptr i64 %4685 to i64*
  store i64 %4683, i64* %4686, align 8
  store i64 %4685, i64* %6, align 8
  store i64 %4682, i64* %3, align 8
  %call2_41f7ef = tail call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* nonnull %0, i64 %4682, %struct.Memory* %call2_41f7ea)
  %4687 = load i64, i64* %3, align 8
  %4688 = load i32, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %4689 = xor i32 %4688, 1
  %4690 = zext i32 %4689 to i64
  store i64 %4690, i64* %RDX.i, align 8
  store i8 0, i8* %14, align 1
  %4691 = and i32 %4689, 255
  %4692 = tail call i32 @llvm.ctpop.i32(i32 %4691)
  %4693 = trunc i32 %4692 to i8
  %4694 = and i8 %4693, 1
  %4695 = xor i8 %4694, 1
  store i8 %4695, i8* %21, align 1
  %4696 = icmp eq i32 %4689, 0
  %4697 = zext i1 %4696 to i8
  store i8 %4697, i8* %29, align 1
  %4698 = lshr i32 %4688, 31
  %4699 = trunc i32 %4698 to i8
  store i8 %4699, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  %4700 = add i64 %4687, 17
  store i64 %4700, i64* %3, align 8
  store i32 %4689, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  br label %block_.L_41f805

block_.L_41f805:                                  ; preds = %block_41f796, %block_41f76a
  %4701 = phi i64 [ %4593, %block_41f76a ], [ %4700, %block_41f796 ]
  %MEMORY.67 = phi %struct.Memory* [ %4575, %block_41f76a ], [ %call2_41f7ef, %block_41f796 ]
  %4702 = add i64 %4701, 3109
  br label %block_.L_42042a

block_.L_41f80a:                                  ; preds = %block_.L_41f744
  store i64 ptrtoint (%G__0x4294d8_type* @G__0x4294d8 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %4703 = load i64, i64* %RBP.i, align 8
  %4704 = add i64 %4703, -272
  store i64 %4704, i64* %RDI.i176, align 8
  %4705 = add i64 %4566, -125866
  %4706 = add i64 %4566, 29
  %4707 = load i64, i64* %6, align 8
  %4708 = add i64 %4707, -8
  %4709 = inttoptr i64 %4708 to i64*
  store i64 %4706, i64* %4709, align 8
  store i64 %4708, i64* %6, align 8
  store i64 %4705, i64* %3, align 8
  %4710 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4554)
  %4711 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4712 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4713 = and i32 %4711, 255
  %4714 = tail call i32 @llvm.ctpop.i32(i32 %4713)
  %4715 = trunc i32 %4714 to i8
  %4716 = and i8 %4715, 1
  %4717 = xor i8 %4716, 1
  store i8 %4717, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4718 = icmp eq i32 %4711, 0
  %4719 = zext i1 %4718 to i8
  store i8 %4719, i8* %29, align 1
  %4720 = lshr i32 %4711, 31
  %4721 = trunc i32 %4720 to i8
  store i8 %4721, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v286 = select i1 %4718, i64 9, i64 216
  %4722 = add i64 %4712, %.v286
  store i64 %4722, i64* %3, align 8
  br i1 %4718, label %block_41f830, label %block_.L_41f8ff

block_41f830:                                     ; preds = %block_.L_41f80a
  %4723 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4724 = add i32 %4723, -1
  %4725 = icmp eq i32 %4723, 0
  %4726 = zext i1 %4725 to i8
  store i8 %4726, i8* %14, align 1
  %4727 = and i32 %4724, 255
  %4728 = tail call i32 @llvm.ctpop.i32(i32 %4727)
  %4729 = trunc i32 %4728 to i8
  %4730 = and i8 %4729, 1
  %4731 = xor i8 %4730, 1
  store i8 %4731, i8* %21, align 1
  %4732 = xor i32 %4724, %4723
  %4733 = lshr i32 %4732, 4
  %4734 = trunc i32 %4733 to i8
  %4735 = and i8 %4734, 1
  store i8 %4735, i8* %26, align 1
  %4736 = icmp eq i32 %4724, 0
  %4737 = zext i1 %4736 to i8
  store i8 %4737, i8* %29, align 1
  %4738 = lshr i32 %4724, 31
  %4739 = trunc i32 %4738 to i8
  store i8 %4739, i8* %32, align 1
  %4740 = lshr i32 %4723, 31
  %4741 = xor i32 %4738, %4740
  %4742 = add nuw nsw i32 %4741, %4740
  %4743 = icmp eq i32 %4742, 2
  %4744 = zext i1 %4743 to i8
  store i8 %4744, i8* %38, align 1
  %4745 = icmp ne i8 %4739, 0
  %4746 = xor i1 %4745, %4743
  %4747 = or i1 %4736, %4746
  %.v318 = select i1 %4747, i64 202, i64 14
  %4748 = add i64 %4722, %.v318
  store i64 %4748, i64* %3, align 8
  br i1 %4747, label %block_.L_41f8fa, label %block_41f83e

block_41f83e:                                     ; preds = %block_41f830
  store i64 0, i64* %RSI.i118, align 8
  %4749 = load i64, i64* %RBP.i, align 8
  %4750 = add i64 %4749, -15264
  store i64 %4750, i64* %RAX.i, align 8
  %4751 = add i64 %4749, -24864
  %4752 = zext i32 %4724 to i64
  store i64 %4752, i64* %RDX.i, align 8
  store i32 %4724, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4753 = sext i32 %4724 to i64
  %4754 = shl nsw i64 %4753, 4
  store i64 %4754, i64* %RDI.i176, align 8
  %4755 = add i64 %4754, %4751
  store i64 %4755, i64* %RCX.i, align 8
  %4756 = icmp ult i64 %4755, %4751
  %4757 = icmp ult i64 %4755, %4754
  %4758 = or i1 %4756, %4757
  %4759 = zext i1 %4758 to i8
  store i8 %4759, i8* %14, align 1
  %4760 = trunc i64 %4755 to i32
  %4761 = and i32 %4760, 255
  %4762 = tail call i32 @llvm.ctpop.i32(i32 %4761)
  %4763 = trunc i32 %4762 to i8
  %4764 = and i8 %4763, 1
  %4765 = xor i8 %4764, 1
  store i8 %4765, i8* %21, align 1
  %4766 = xor i64 %4754, %4751
  %4767 = xor i64 %4766, %4755
  %4768 = lshr i64 %4767, 4
  %4769 = trunc i64 %4768 to i8
  %4770 = and i8 %4769, 1
  store i8 %4770, i8* %26, align 1
  %4771 = icmp eq i64 %4755, 0
  %4772 = zext i1 %4771 to i8
  store i8 %4772, i8* %29, align 1
  %4773 = lshr i64 %4755, 63
  %4774 = trunc i64 %4773 to i8
  store i8 %4774, i8* %32, align 1
  %4775 = lshr i64 %4751, 63
  %4776 = lshr i64 %4753, 59
  %4777 = and i64 %4776, 1
  %4778 = xor i64 %4773, %4775
  %4779 = xor i64 %4773, %4777
  %4780 = add nuw nsw i64 %4778, %4779
  %4781 = icmp eq i64 %4780, 2
  %4782 = zext i1 %4781 to i8
  store i8 %4782, i8* %38, align 1
  %4783 = inttoptr i64 %4755 to i64*
  %4784 = add i64 %4748, 46
  store i64 %4784, i64* %3, align 8
  %4785 = load i64, i64* %4783, align 8
  store i64 %4785, i64* %RDI.i176, align 8
  store i64 %4785, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  %4786 = add i64 %4755, 8
  %4787 = add i64 %4748, 58
  store i64 %4787, i64* %3, align 8
  %4788 = inttoptr i64 %4786 to i64*
  %4789 = load i64, i64* %4788, align 8
  store i64 %4789, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  %4790 = mul nsw i64 %4753, 24
  store i64 %4790, i64* %RCX.i, align 8
  %4791 = lshr i64 %4790, 63
  %4792 = load i64, i64* %RAX.i, align 8
  %4793 = add i64 %4790, %4792
  store i64 %4793, i64* %RAX.i, align 8
  %4794 = icmp ult i64 %4793, %4792
  %4795 = icmp ult i64 %4793, %4790
  %4796 = or i1 %4794, %4795
  %4797 = zext i1 %4796 to i8
  store i8 %4797, i8* %14, align 1
  %4798 = trunc i64 %4793 to i32
  %4799 = and i32 %4798, 255
  %4800 = tail call i32 @llvm.ctpop.i32(i32 %4799)
  %4801 = trunc i32 %4800 to i8
  %4802 = and i8 %4801, 1
  %4803 = xor i8 %4802, 1
  store i8 %4803, i8* %21, align 1
  %4804 = xor i64 %4790, %4792
  %4805 = xor i64 %4804, %4793
  %4806 = lshr i64 %4805, 4
  %4807 = trunc i64 %4806 to i8
  %4808 = and i8 %4807, 1
  store i8 %4808, i8* %26, align 1
  %4809 = icmp eq i64 %4793, 0
  %4810 = zext i1 %4809 to i8
  store i8 %4810, i8* %29, align 1
  %4811 = lshr i64 %4793, 63
  %4812 = trunc i64 %4811 to i8
  store i8 %4812, i8* %32, align 1
  %4813 = lshr i64 %4792, 63
  %4814 = xor i64 %4811, %4813
  %4815 = xor i64 %4811, %4791
  %4816 = add nuw nsw i64 %4814, %4815
  %4817 = icmp eq i64 %4816, 2
  %4818 = zext i1 %4817 to i8
  store i8 %4818, i8* %38, align 1
  store i64 %4793, i64* %RDI.i176, align 8
  %4819 = add i64 %4748, -77982
  %4820 = add i64 %4748, 89
  %4821 = load i64, i64* %6, align 8
  %4822 = add i64 %4821, -8
  %4823 = inttoptr i64 %4822 to i64*
  store i64 %4820, i64* %4823, align 8
  store i64 %4822, i64* %6, align 8
  store i64 %4819, i64* %3, align 8
  %call2_41f892 = tail call %struct.Memory* @sub_40c7a0.unmake(%struct.State* nonnull %0, i64 %4819, %struct.Memory* %4710)
  %4824 = load i64, i64* %3, align 8
  %4825 = add i64 %4824, 12281
  %4826 = add i64 %4824, 5
  %4827 = load i64, i64* %6, align 8
  %4828 = add i64 %4827, -8
  %4829 = inttoptr i64 %4828 to i64*
  store i64 %4826, i64* %4829, align 8
  store i64 %4828, i64* %6, align 8
  store i64 %4825, i64* %3, align 8
  %call2_41f897 = tail call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* nonnull %0, i64 %4825, %struct.Memory* %call2_41f892)
  %4830 = load i64, i64* %3, align 8
  store i64 0, i64* %RSI.i118, align 8
  %4831 = load i64, i64* %RBP.i, align 8
  %4832 = add i64 %4831, -15264
  store i64 %4832, i64* %RAX.i, align 8
  %4833 = add i64 %4831, -24864
  %4834 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4835 = add i32 %4834, -1
  %4836 = zext i32 %4835 to i64
  store i64 %4836, i64* %RDX.i, align 8
  store i32 %4835, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %4837 = sext i32 %4835 to i64
  %4838 = shl nsw i64 %4837, 4
  store i64 %4838, i64* %RDI.i176, align 8
  %4839 = add i64 %4838, %4833
  store i64 %4839, i64* %RCX.i, align 8
  %4840 = icmp ult i64 %4839, %4833
  %4841 = icmp ult i64 %4839, %4838
  %4842 = or i1 %4840, %4841
  %4843 = zext i1 %4842 to i8
  store i8 %4843, i8* %14, align 1
  %4844 = trunc i64 %4839 to i32
  %4845 = and i32 %4844, 255
  %4846 = tail call i32 @llvm.ctpop.i32(i32 %4845)
  %4847 = trunc i32 %4846 to i8
  %4848 = and i8 %4847, 1
  %4849 = xor i8 %4848, 1
  store i8 %4849, i8* %21, align 1
  %4850 = xor i64 %4838, %4833
  %4851 = xor i64 %4850, %4839
  %4852 = lshr i64 %4851, 4
  %4853 = trunc i64 %4852 to i8
  %4854 = and i8 %4853, 1
  store i8 %4854, i8* %26, align 1
  %4855 = icmp eq i64 %4839, 0
  %4856 = zext i1 %4855 to i8
  store i8 %4856, i8* %29, align 1
  %4857 = lshr i64 %4839, 63
  %4858 = trunc i64 %4857 to i8
  store i8 %4858, i8* %32, align 1
  %4859 = lshr i64 %4833, 63
  %4860 = lshr i64 %4837, 59
  %4861 = and i64 %4860, 1
  %4862 = xor i64 %4857, %4859
  %4863 = xor i64 %4857, %4861
  %4864 = add nuw nsw i64 %4862, %4863
  %4865 = icmp eq i64 %4864, 2
  %4866 = zext i1 %4865 to i8
  store i8 %4866, i8* %38, align 1
  %4867 = inttoptr i64 %4839 to i64*
  %4868 = add i64 %4830, 46
  store i64 %4868, i64* %3, align 8
  %4869 = load i64, i64* %4867, align 8
  store i64 %4869, i64* %RDI.i176, align 8
  store i64 %4869, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  %4870 = add i64 %4839, 8
  %4871 = add i64 %4830, 58
  store i64 %4871, i64* %3, align 8
  %4872 = inttoptr i64 %4870 to i64*
  %4873 = load i64, i64* %4872, align 8
  store i64 %4873, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  %4874 = mul nsw i64 %4837, 24
  store i64 %4874, i64* %RCX.i, align 8
  %4875 = lshr i64 %4874, 63
  %4876 = load i64, i64* %RAX.i, align 8
  %4877 = add i64 %4874, %4876
  store i64 %4877, i64* %RAX.i, align 8
  %4878 = icmp ult i64 %4877, %4876
  %4879 = icmp ult i64 %4877, %4874
  %4880 = or i1 %4878, %4879
  %4881 = zext i1 %4880 to i8
  store i8 %4881, i8* %14, align 1
  %4882 = trunc i64 %4877 to i32
  %4883 = and i32 %4882, 255
  %4884 = tail call i32 @llvm.ctpop.i32(i32 %4883)
  %4885 = trunc i32 %4884 to i8
  %4886 = and i8 %4885, 1
  %4887 = xor i8 %4886, 1
  store i8 %4887, i8* %21, align 1
  %4888 = xor i64 %4874, %4876
  %4889 = xor i64 %4888, %4877
  %4890 = lshr i64 %4889, 4
  %4891 = trunc i64 %4890 to i8
  %4892 = and i8 %4891, 1
  store i8 %4892, i8* %26, align 1
  %4893 = icmp eq i64 %4877, 0
  %4894 = zext i1 %4893 to i8
  store i8 %4894, i8* %29, align 1
  %4895 = lshr i64 %4877, 63
  %4896 = trunc i64 %4895 to i8
  store i8 %4896, i8* %32, align 1
  %4897 = lshr i64 %4876, 63
  %4898 = xor i64 %4895, %4897
  %4899 = xor i64 %4895, %4875
  %4900 = add nuw nsw i64 %4898, %4899
  %4901 = icmp eq i64 %4900, 2
  %4902 = zext i1 %4901 to i8
  store i8 %4902, i8* %38, align 1
  store i64 %4877, i64* %RDI.i176, align 8
  %4903 = add i64 %4830, -78076
  %4904 = add i64 %4830, 89
  %4905 = load i64, i64* %6, align 8
  %4906 = add i64 %4905, -8
  %4907 = inttoptr i64 %4906 to i64*
  store i64 %4904, i64* %4907, align 8
  store i64 %4906, i64* %6, align 8
  store i64 %4903, i64* %3, align 8
  %call2_41f8f0 = tail call %struct.Memory* @sub_40c7a0.unmake(%struct.State* nonnull %0, i64 %4903, %struct.Memory* %call2_41f897)
  %4908 = load i64, i64* %3, align 8
  %4909 = add i64 %4908, 12187
  %4910 = add i64 %4908, 5
  %4911 = load i64, i64* %6, align 8
  %4912 = add i64 %4911, -8
  %4913 = inttoptr i64 %4912 to i64*
  store i64 %4910, i64* %4913, align 8
  store i64 %4912, i64* %6, align 8
  store i64 %4909, i64* %3, align 8
  %call2_41f8f5 = tail call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* nonnull %0, i64 %4909, %struct.Memory* %call2_41f8f0)
  %.pre240 = load i64, i64* %3, align 8
  br label %block_.L_41f8fa

block_.L_41f8fa:                                  ; preds = %block_41f83e, %block_41f830
  %4914 = phi i64 [ %4748, %block_41f830 ], [ %.pre240, %block_41f83e ]
  %MEMORY.68 = phi %struct.Memory* [ %4710, %block_41f830 ], [ %call2_41f8f5, %block_41f83e ]
  %4915 = add i64 %4914, 2859
  br label %block_.L_420425

block_.L_41f8ff:                                  ; preds = %block_.L_41f80a
  store i64 ptrtoint (%G__0x4294df_type* @G__0x4294df to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %4916 = load i64, i64* %RBP.i, align 8
  %4917 = add i64 %4916, -272
  store i64 %4917, i64* %RDI.i176, align 8
  %4918 = add i64 %4722, -126111
  %4919 = add i64 %4722, 29
  %4920 = load i64, i64* %6, align 8
  %4921 = add i64 %4920, -8
  %4922 = inttoptr i64 %4921 to i64*
  store i64 %4919, i64* %4922, align 8
  store i64 %4921, i64* %6, align 8
  store i64 %4918, i64* %3, align 8
  %4923 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4710)
  %4924 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4925 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4926 = and i32 %4924, 255
  %4927 = tail call i32 @llvm.ctpop.i32(i32 %4926)
  %4928 = trunc i32 %4927 to i8
  %4929 = and i8 %4928, 1
  %4930 = xor i8 %4929, 1
  store i8 %4930, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4931 = icmp eq i32 %4924, 0
  %4932 = zext i1 %4931 to i8
  store i8 %4932, i8* %29, align 1
  %4933 = lshr i32 %4924, 31
  %4934 = trunc i32 %4933 to i8
  store i8 %4934, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v287 = select i1 %4931, i64 9, i64 34
  %4935 = add i64 %4925, %.v287
  store i64 %4935, i64* %3, align 8
  br i1 %4931, label %block_41f925, label %block_.L_41f93e

block_41f925:                                     ; preds = %block_.L_41f8ff
  %4936 = load i64, i64* %RBP.i, align 8
  %4937 = add i64 %4936, -24868
  %4938 = add i64 %4935, 10
  store i64 %4938, i64* %3, align 8
  %4939 = inttoptr i64 %4937 to i32*
  store i32 1, i32* %4939, align 4
  %4940 = load i64, i64* %RBP.i, align 8
  %4941 = add i64 %4940, -24872
  %4942 = load i64, i64* %3, align 8
  %4943 = add i64 %4942, 10
  store i64 %4943, i64* %3, align 8
  %4944 = inttoptr i64 %4941 to i32*
  store i32 0, i32* %4944, align 4
  %4945 = load i64, i64* %3, align 8
  %4946 = add i64 %4945, 2791
  br label %block_.L_420420

block_.L_41f93e:                                  ; preds = %block_.L_41f8ff
  store i64 ptrtoint (%G__0x4294e4_type* @G__0x4294e4 to i64), i64* %RSI.i118, align 8
  store i64 1, i64* %RAX.i, align 8
  store i64 1, i64* %RDX.i, align 8
  %4947 = load i64, i64* %RBP.i, align 8
  %4948 = add i64 %4947, -272
  store i64 %4948, i64* %RDI.i176, align 8
  %4949 = add i64 %4935, -126174
  %4950 = add i64 %4935, 29
  %4951 = load i64, i64* %6, align 8
  %4952 = add i64 %4951, -8
  %4953 = inttoptr i64 %4952 to i64*
  store i64 %4950, i64* %4953, align 8
  store i64 %4952, i64* %6, align 8
  store i64 %4949, i64* %3, align 8
  %4954 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4923)
  %4955 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %4956 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %4957 = and i32 %4955, 255
  %4958 = tail call i32 @llvm.ctpop.i32(i32 %4957)
  %4959 = trunc i32 %4958 to i8
  %4960 = and i8 %4959, 1
  %4961 = xor i8 %4960, 1
  store i8 %4961, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4962 = icmp eq i32 %4955, 0
  %4963 = zext i1 %4962 to i8
  store i8 %4963, i8* %29, align 1
  %4964 = lshr i32 %4955, 31
  %4965 = trunc i32 %4964 to i8
  store i8 %4965, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v288 = select i1 %4962, i64 9, i64 159
  %4966 = add i64 %4956, %.v288
  store i64 %4966, i64* %3, align 8
  %4967 = load i64, i64* %RBP.i, align 8
  br i1 %4962, label %block_41f964, label %block_.L_41f9fa

block_41f964:                                     ; preds = %block_.L_41f93e
  %4968 = add i64 %4967, -24868
  %4969 = add i64 %4966, 7
  store i64 %4969, i64* %3, align 8
  %4970 = inttoptr i64 %4968 to i32*
  %4971 = load i32, i32* %4970, align 4
  store i8 0, i8* %14, align 1
  %4972 = and i32 %4971, 255
  %4973 = tail call i32 @llvm.ctpop.i32(i32 %4972)
  %4974 = trunc i32 %4973 to i8
  %4975 = and i8 %4974, 1
  %4976 = xor i8 %4975, 1
  store i8 %4976, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %4977 = icmp eq i32 %4971, 0
  %4978 = zext i1 %4977 to i8
  store i8 %4978, i8* %29, align 1
  %4979 = lshr i32 %4971, 31
  %4980 = trunc i32 %4979 to i8
  store i8 %4980, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v315 = select i1 %4977, i64 150, i64 13
  %4981 = add i64 %4966, %.v315
  store i64 %4981, i64* %3, align 8
  br i1 %4977, label %block_.L_41f9fa, label %block_41f971

block_41f971:                                     ; preds = %block_41f964
  %4982 = add i64 %4981, 10
  store i64 %4982, i64* %3, align 8
  store i32 0, i32* %4970, align 4
  %4983 = load i64, i64* %3, align 8
  %4984 = load i32, i32* bitcast (%G_0x86bd7c_type* @G_0x86bd7c to i32*), align 8
  %4985 = add i32 %4984, -30
  %4986 = icmp ult i32 %4984, 30
  %4987 = zext i1 %4986 to i8
  store i8 %4987, i8* %14, align 1
  %4988 = and i32 %4985, 255
  %4989 = tail call i32 @llvm.ctpop.i32(i32 %4988)
  %4990 = trunc i32 %4989 to i8
  %4991 = and i8 %4990, 1
  %4992 = xor i8 %4991, 1
  store i8 %4992, i8* %21, align 1
  %4993 = xor i32 %4984, 16
  %4994 = xor i32 %4993, %4985
  %4995 = lshr i32 %4994, 4
  %4996 = trunc i32 %4995 to i8
  %4997 = and i8 %4996, 1
  store i8 %4997, i8* %26, align 1
  %4998 = icmp eq i32 %4985, 0
  %4999 = zext i1 %4998 to i8
  store i8 %4999, i8* %29, align 1
  %5000 = lshr i32 %4985, 31
  %5001 = trunc i32 %5000 to i8
  store i8 %5001, i8* %32, align 1
  %5002 = lshr i32 %4984, 31
  %5003 = xor i32 %5000, %5002
  %5004 = add nuw nsw i32 %5003, %5002
  %5005 = icmp eq i32 %5004, 2
  %5006 = zext i1 %5005 to i8
  store i8 %5006, i8* %38, align 1
  %.v316 = select i1 %4998, i64 14, i64 25
  %5007 = add i64 %4983, %.v316
  store i64 %5007, i64* %3, align 8
  br i1 %4998, label %block_41f989, label %block_.L_41f994

block_41f989:                                     ; preds = %block_41f971
  %5008 = add i64 %5007, 11
  store i64 %5008, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*), align 8
  br label %block_.L_41f994

block_.L_41f994:                                  ; preds = %block_41f971, %block_41f989
  %5009 = phi i64 [ %5008, %block_41f989 ], [ %5007, %block_41f971 ]
  %5010 = load i32, i32* bitcast (%G_0x8661d0_type* @G_0x8661d0 to i32*), align 8
  %5011 = add i32 %5010, -114
  %5012 = icmp ult i32 %5010, 114
  %5013 = zext i1 %5012 to i8
  store i8 %5013, i8* %14, align 1
  %5014 = and i32 %5011, 255
  %5015 = tail call i32 @llvm.ctpop.i32(i32 %5014)
  %5016 = trunc i32 %5015 to i8
  %5017 = and i8 %5016, 1
  %5018 = xor i8 %5017, 1
  store i8 %5018, i8* %21, align 1
  %5019 = xor i32 %5010, 16
  %5020 = xor i32 %5019, %5011
  %5021 = lshr i32 %5020, 4
  %5022 = trunc i32 %5021 to i8
  %5023 = and i8 %5022, 1
  store i8 %5023, i8* %26, align 1
  %5024 = icmp eq i32 %5011, 0
  %5025 = zext i1 %5024 to i8
  store i8 %5025, i8* %29, align 1
  %5026 = lshr i32 %5011, 31
  %5027 = trunc i32 %5026 to i8
  store i8 %5027, i8* %32, align 1
  %5028 = lshr i32 %5010, 31
  %5029 = xor i32 %5026, %5028
  %5030 = add nuw nsw i32 %5029, %5028
  %5031 = icmp eq i32 %5030, 2
  %5032 = zext i1 %5031 to i8
  store i8 %5032, i8* %38, align 1
  %.v317 = select i1 %5024, i64 14, i64 25
  %5033 = add i64 %5009, %.v317
  store i64 %5033, i64* %3, align 8
  br i1 %5024, label %block_41f9a2, label %block_.L_41f9ad

block_41f9a2:                                     ; preds = %block_.L_41f994
  %5034 = add i64 %5033, 11
  store i64 %5034, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*), align 8
  br label %block_.L_41f9ad

block_.L_41f9ad:                                  ; preds = %block_.L_41f994, %block_41f9a2
  %5035 = phi i64 [ %5034, %block_41f9a2 ], [ %5033, %block_.L_41f994 ]
  store i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64* %RDI.i176, align 8
  store i64 0, i64* %RSI.i118, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 1, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  store i8 0, i8* %26, align 1
  store i64 256, i64* %RAX.i, align 8
  store i64 256, i64* %RDX.i, align 8
  store i32 50, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  store i32 0, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %5036 = add i64 %5035, -126173
  %5037 = add i64 %5035, 57
  %5038 = load i64, i64* %6, align 8
  %5039 = add i64 %5038, -8
  %5040 = inttoptr i64 %5039 to i64*
  store i64 %5037, i64* %5040, align 8
  store i64 %5039, i64* %6, align 8
  store i64 %5036, i64* %3, align 8
  %5041 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %4954)
  %5042 = load i64, i64* %3, align 8
  %5043 = add i64 %5042, 2778
  %5044 = add i64 %5042, 5
  %5045 = load i64, i64* %6, align 8
  %5046 = add i64 %5045, -8
  %5047 = inttoptr i64 %5046 to i64*
  store i64 %5044, i64* %5047, align 8
  store i64 %5046, i64* %6, align 8
  store i64 %5043, i64* %3, align 8
  %call2_41f9e6 = tail call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* nonnull %0, i64 %5043, %struct.Memory* %5041)
  %5048 = load i64, i64* %3, align 8
  %5049 = add i64 %5048, 3093
  %5050 = add i64 %5048, 5
  %5051 = load i64, i64* %6, align 8
  %5052 = add i64 %5051, -8
  %5053 = inttoptr i64 %5052 to i64*
  store i64 %5050, i64* %5053, align 8
  store i64 %5052, i64* %6, align 8
  store i64 %5049, i64* %3, align 8
  %call2_41f9eb = tail call %struct.Memory* @sub_420600.initialize_hash(%struct.State* nonnull %0, i64 %5049, %struct.Memory* %call2_41f9e6)
  %5054 = load i64, i64* %3, align 8
  %5055 = add i64 %5054, 11936
  %5056 = add i64 %5054, 5
  %5057 = load i64, i64* %6, align 8
  %5058 = add i64 %5057, -8
  %5059 = inttoptr i64 %5058 to i64*
  store i64 %5056, i64* %5059, align 8
  store i64 %5058, i64* %6, align 8
  store i64 %5055, i64* %3, align 8
  %call2_41f9f0 = tail call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* nonnull %0, i64 %5055, %struct.Memory* %call2_41f9eb)
  %5060 = load i64, i64* %3, align 8
  %5061 = add i64 %5060, 2598
  br label %block_.L_42041b

block_.L_41f9fa:                                  ; preds = %block_.L_41f93e, %block_41f964
  %5062 = phi i64 [ %4981, %block_41f964 ], [ %4966, %block_.L_41f93e ]
  %5063 = add i64 %4967, -24868
  %5064 = add i64 %5062, 7
  store i64 %5064, i64* %3, align 8
  %5065 = inttoptr i64 %5063 to i32*
  %5066 = load i32, i32* %5065, align 4
  store i8 0, i8* %14, align 1
  %5067 = and i32 %5066, 255
  %5068 = tail call i32 @llvm.ctpop.i32(i32 %5067)
  %5069 = trunc i32 %5068 to i8
  %5070 = and i8 %5069, 1
  %5071 = xor i8 %5070, 1
  store i8 %5071, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5072 = icmp eq i32 %5066, 0
  %5073 = zext i1 %5072 to i8
  store i8 %5073, i8* %29, align 1
  %5074 = lshr i32 %5066, 31
  %5075 = trunc i32 %5074 to i8
  store i8 %5075, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v289 = select i1 %5072, i64 94, i64 13
  %5076 = add i64 %5062, %.v289
  store i64 %5076, i64* %3, align 8
  br i1 %5072, label %block_.L_41fa58, label %block_41fa07

block_41fa07:                                     ; preds = %block_.L_41f9fa
  store i64 ptrtoint (%G__0x429af6_type* @G__0x429af6 to i64), i64* %RSI.i118, align 8
  store i64 1, i64* %RAX.i, align 8
  store i64 1, i64* %RDX.i, align 8
  %5077 = add i64 %4967, -272
  store i64 %5077, i64* %RDI.i176, align 8
  %5078 = add i64 %5076, -126375
  %5079 = add i64 %5076, 29
  %5080 = load i64, i64* %6, align 8
  %5081 = add i64 %5080, -8
  %5082 = inttoptr i64 %5081 to i64*
  store i64 %5079, i64* %5082, align 8
  store i64 %5081, i64* %6, align 8
  store i64 %5078, i64* %3, align 8
  %5083 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %4954)
  %5084 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5085 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5086 = and i32 %5084, 255
  %5087 = tail call i32 @llvm.ctpop.i32(i32 %5086)
  %5088 = trunc i32 %5087 to i8
  %5089 = and i8 %5088, 1
  %5090 = xor i8 %5089, 1
  store i8 %5090, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5091 = icmp eq i32 %5084, 0
  %5092 = zext i1 %5091 to i8
  store i8 %5092, i8* %29, align 1
  %5093 = lshr i32 %5084, 31
  %5094 = trunc i32 %5093 to i8
  store i8 %5094, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v248 = select i1 %5091, i64 9, i64 52
  %5095 = add i64 %5085, %.v248
  store i64 %5095, i64* %3, align 8
  %5096 = load i64, i64* %RBP.i, align 8
  br i1 %5091, label %block_41fa2d, label %block_.L_41fa58

block_41fa2d:                                     ; preds = %block_41fa07
  %5097 = add i64 %5096, -24872
  %5098 = add i64 %5095, 7
  store i64 %5098, i64* %3, align 8
  %5099 = inttoptr i64 %5097 to i32*
  %5100 = load i32, i32* %5099, align 4
  store i8 0, i8* %14, align 1
  %5101 = and i32 %5100, 255
  %5102 = tail call i32 @llvm.ctpop.i32(i32 %5101)
  %5103 = trunc i32 %5102 to i8
  %5104 = and i8 %5103, 1
  %5105 = xor i8 %5104, 1
  store i8 %5105, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5106 = icmp eq i32 %5100, 0
  %5107 = zext i1 %5106 to i8
  store i8 %5107, i8* %29, align 1
  %5108 = lshr i32 %5100, 31
  %5109 = trunc i32 %5108 to i8
  store i8 %5109, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v = select i1 %5106, i64 13, i64 28
  %5110 = add i64 %5095, %.v
  %5111 = add i64 %5110, 10
  store i64 %5111, i64* %3, align 8
  br i1 %5106, label %block_41fa3a, label %block_.L_41fa49

block_41fa3a:                                     ; preds = %block_41fa2d
  store i32 1, i32* %5099, align 4
  %5112 = load i64, i64* %3, align 8
  %5113 = add i64 %5112, 15
  store i64 %5113, i64* %3, align 8
  br label %block_.L_41fa53

block_.L_41fa49:                                  ; preds = %block_41fa2d
  store i32 0, i32* %5099, align 4
  %.pre242 = load i64, i64* %3, align 8
  br label %block_.L_41fa53

block_.L_41fa53:                                  ; preds = %block_.L_41fa49, %block_41fa3a
  %5114 = phi i64 [ %.pre242, %block_.L_41fa49 ], [ %5113, %block_41fa3a ]
  %5115 = add i64 %5114, 2499
  br label %block_.L_420416

block_.L_41fa58:                                  ; preds = %block_41fa07, %block_.L_41f9fa
  %5116 = phi i64 [ %5076, %block_.L_41f9fa ], [ %5095, %block_41fa07 ]
  %5117 = phi i64 [ %4967, %block_.L_41f9fa ], [ %5096, %block_41fa07 ]
  %MEMORY.73 = phi %struct.Memory* [ %4954, %block_.L_41f9fa ], [ %5083, %block_41fa07 ]
  %5118 = add i64 %5117, -24868
  %5119 = add i64 %5116, 7
  store i64 %5119, i64* %3, align 8
  %5120 = inttoptr i64 %5118 to i32*
  %5121 = load i32, i32* %5120, align 4
  store i8 0, i8* %14, align 1
  %5122 = and i32 %5121, 255
  %5123 = tail call i32 @llvm.ctpop.i32(i32 %5122)
  %5124 = trunc i32 %5123 to i8
  %5125 = and i8 %5124, 1
  %5126 = xor i8 %5125, 1
  store i8 %5126, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5127 = icmp eq i32 %5121, 0
  %5128 = zext i1 %5127 to i8
  store i8 %5128, i8* %29, align 1
  %5129 = lshr i32 %5121, 31
  %5130 = trunc i32 %5129 to i8
  store i8 %5130, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v290 = select i1 %5127, i64 72, i64 13
  %5131 = add i64 %5116, %.v290
  store i64 %5131, i64* %3, align 8
  br i1 %5127, label %block_.L_41faa0, label %block_41fa65

block_41fa65:                                     ; preds = %block_.L_41fa58
  store i64 ptrtoint (%G__0x4294e6_type* @G__0x4294e6 to i64), i64* %RSI.i118, align 8
  store i64 1, i64* %RAX.i, align 8
  store i64 1, i64* %RDX.i, align 8
  %5132 = add i64 %5117, -272
  store i64 %5132, i64* %RDI.i176, align 8
  %5133 = add i64 %5131, -126469
  %5134 = add i64 %5131, 29
  %5135 = load i64, i64* %6, align 8
  %5136 = add i64 %5135, -8
  %5137 = inttoptr i64 %5136 to i64*
  store i64 %5134, i64* %5137, align 8
  store i64 %5136, i64* %6, align 8
  store i64 %5133, i64* %3, align 8
  %5138 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %MEMORY.73)
  %5139 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5140 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5141 = and i32 %5139, 255
  %5142 = tail call i32 @llvm.ctpop.i32(i32 %5141)
  %5143 = trunc i32 %5142 to i8
  %5144 = and i8 %5143, 1
  %5145 = xor i8 %5144, 1
  store i8 %5145, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5146 = icmp eq i32 %5139, 0
  %5147 = zext i1 %5146 to i8
  store i8 %5147, i8* %29, align 1
  %5148 = lshr i32 %5139, 31
  %5149 = trunc i32 %5148 to i8
  store i8 %5149, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v291 = select i1 %5146, i64 9, i64 30
  %5150 = add i64 %5140, %.v291
  store i64 %5150, i64* %3, align 8
  br i1 %5146, label %block_41fa8b, label %block_41fa65.block_.L_41faa0_crit_edge

block_41fa65.block_.L_41faa0_crit_edge:           ; preds = %block_41fa65
  %.pre244 = load i64, i64* %RBP.i, align 8
  br label %block_.L_41faa0

block_41fa8b:                                     ; preds = %block_41fa65
  %5151 = add i64 %5150, 19253
  %5152 = add i64 %5150, 5
  %5153 = load i64, i64* %6, align 8
  %5154 = add i64 %5153, -8
  %5155 = inttoptr i64 %5154 to i64*
  store i64 %5152, i64* %5155, align 8
  store i64 %5154, i64* %6, align 8
  store i64 %5151, i64* %3, align 8
  %call2_41fa8b = tail call %struct.Memory* @sub_4245c0.reset_board(%struct.State* nonnull %0, i64 %5151, %struct.Memory* %5138)
  %5156 = load i64, i64* %3, align 8
  %5157 = add i64 %5156, 11
  store i64 %5157, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %5158 = add i64 %5156, 2433
  br label %block_.L_420411

block_.L_41faa0:                                  ; preds = %block_41fa65.block_.L_41faa0_crit_edge, %block_.L_41fa58
  %5159 = phi i64 [ %5131, %block_.L_41fa58 ], [ %5150, %block_41fa65.block_.L_41faa0_crit_edge ]
  %5160 = phi i64 [ %5117, %block_.L_41fa58 ], [ %.pre244, %block_41fa65.block_.L_41faa0_crit_edge ]
  %MEMORY.74 = phi %struct.Memory* [ %MEMORY.73, %block_.L_41fa58 ], [ %5138, %block_41fa65.block_.L_41faa0_crit_edge ]
  %5161 = add i64 %5160, -24868
  %5162 = add i64 %5159, 7
  store i64 %5162, i64* %3, align 8
  %5163 = inttoptr i64 %5161 to i32*
  %5164 = load i32, i32* %5163, align 4
  store i8 0, i8* %14, align 1
  %5165 = and i32 %5164, 255
  %5166 = tail call i32 @llvm.ctpop.i32(i32 %5165)
  %5167 = trunc i32 %5166 to i8
  %5168 = and i8 %5167, 1
  %5169 = xor i8 %5168, 1
  store i8 %5169, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5170 = icmp eq i32 %5164, 0
  %5171 = zext i1 %5170 to i8
  store i8 %5171, i8* %29, align 1
  %5172 = lshr i32 %5164, 31
  %5173 = trunc i32 %5172 to i8
  store i8 %5173, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v292 = select i1 %5170, i64 181, i64 13
  %5174 = add i64 %5159, %.v292
  store i64 %5174, i64* %3, align 8
  br i1 %5170, label %block_.L_41fb55, label %block_41faad

block_41faad:                                     ; preds = %block_.L_41faa0
  %5175 = add i64 %5174, -126125
  %5176 = add i64 %5174, 5
  %5177 = load i64, i64* %6, align 8
  %5178 = add i64 %5177, -8
  %5179 = inttoptr i64 %5178 to i64*
  store i64 %5176, i64* %5179, align 8
  store i64 %5178, i64* %6, align 8
  store i64 %5175, i64* %3, align 8
  %call2_41faad = tail call %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* nonnull %0, i64 %5175, %struct.Memory* %MEMORY.74)
  %5180 = load i64*, i64** %298, align 8
  %5181 = load i64, i64* %3, align 8
  %5182 = add i64 %5181, 3
  store i64 %5182, i64* %3, align 8
  %5183 = load i64, i64* %5180, align 8
  store i64 %5183, i64* %RAX.i, align 8
  %5184 = load i64, i64* %RBP.i, align 8
  %5185 = add i64 %5184, -272
  %5186 = add i64 %5181, 10
  store i64 %5186, i64* %3, align 8
  %5187 = inttoptr i64 %5185 to i8*
  %5188 = load i8, i8* %5187, align 1
  %5189 = sext i8 %5188 to i64
  %5190 = and i64 %5189, 4294967295
  store i64 %5190, i64* %RCX.i, align 8
  %5191 = sext i8 %5188 to i64
  store i64 %5191, i64* %RDX.i, align 8
  %5192 = shl nsw i64 %5191, 1
  %5193 = add i64 %5183, %5192
  %5194 = add i64 %5181, 17
  store i64 %5194, i64* %3, align 8
  %5195 = inttoptr i64 %5193 to i16*
  %5196 = load i16, i16* %5195, align 2
  %5197 = and i16 %5196, 1024
  %5198 = zext i16 %5197 to i64
  store i64 %5198, i64* %RCX.i, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5199 = icmp eq i16 %5197, 0
  %.lobit = lshr exact i16 %5197, 10
  %5200 = trunc i16 %.lobit to i8
  %5201 = xor i8 %5200, 1
  store i8 %5201, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v293 = select i1 %5199, i64 163, i64 32
  %5202 = add i64 %5181, %.v293
  store i64 %5202, i64* %3, align 8
  br i1 %5199, label %block_.L_41fb55, label %block_41fad2

block_41fad2:                                     ; preds = %block_41faad
  %5203 = add i64 %5202, -126162
  %5204 = add i64 %5202, 5
  %5205 = load i64, i64* %6, align 8
  %5206 = add i64 %5205, -8
  %5207 = inttoptr i64 %5206 to i64*
  store i64 %5204, i64* %5207, align 8
  store i64 %5206, i64* %6, align 8
  store i64 %5203, i64* %3, align 8
  %call2_41fad2 = tail call %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* nonnull %0, i64 %5203, %struct.Memory* %call2_41faad)
  %5208 = load i64*, i64** %298, align 8
  %5209 = load i64, i64* %3, align 8
  %5210 = add i64 %5209, 3
  store i64 %5210, i64* %3, align 8
  %5211 = load i64, i64* %5208, align 8
  store i64 %5211, i64* %RAX.i, align 8
  %5212 = load i64, i64* %RBP.i, align 8
  %5213 = add i64 %5212, -271
  %5214 = add i64 %5209, 10
  store i64 %5214, i64* %3, align 8
  %5215 = inttoptr i64 %5213 to i8*
  %5216 = load i8, i8* %5215, align 1
  %5217 = sext i8 %5216 to i64
  %5218 = and i64 %5217, 4294967295
  store i64 %5218, i64* %RCX.i, align 8
  %5219 = sext i8 %5216 to i64
  store i64 %5219, i64* %RDX.i, align 8
  %5220 = shl nsw i64 %5219, 1
  %5221 = add i64 %5211, %5220
  %5222 = add i64 %5209, 17
  store i64 %5222, i64* %3, align 8
  %5223 = inttoptr i64 %5221 to i16*
  %5224 = load i16, i16* %5223, align 2
  %5225 = and i16 %5224, 1024
  %5226 = zext i16 %5225 to i64
  store i64 %5226, i64* %RCX.i, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5227 = icmp eq i16 %5225, 0
  %.lobit249 = lshr exact i16 %5225, 10
  %5228 = trunc i16 %.lobit249 to i8
  %5229 = xor i8 %5228, 1
  store i8 %5229, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v294 = select i1 %5227, i64 126, i64 32
  %5230 = add i64 %5209, %.v294
  store i64 %5230, i64* %3, align 8
  br i1 %5227, label %block_.L_41fb55, label %block_41faf7

block_41faf7:                                     ; preds = %block_41fad2
  %5231 = add i64 %5230, -126199
  %5232 = add i64 %5230, 5
  %5233 = load i64, i64* %6, align 8
  %5234 = add i64 %5233, -8
  %5235 = inttoptr i64 %5234 to i64*
  store i64 %5232, i64* %5235, align 8
  store i64 %5234, i64* %6, align 8
  store i64 %5231, i64* %3, align 8
  %call2_41faf7 = tail call %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* nonnull %0, i64 %5231, %struct.Memory* %call2_41fad2)
  %5236 = load i64*, i64** %298, align 8
  %5237 = load i64, i64* %3, align 8
  %5238 = add i64 %5237, 3
  store i64 %5238, i64* %3, align 8
  %5239 = load i64, i64* %5236, align 8
  store i64 %5239, i64* %RAX.i, align 8
  %5240 = load i64, i64* %RBP.i, align 8
  %5241 = add i64 %5240, -270
  %5242 = add i64 %5237, 10
  store i64 %5242, i64* %3, align 8
  %5243 = inttoptr i64 %5241 to i8*
  %5244 = load i8, i8* %5243, align 1
  %5245 = sext i8 %5244 to i64
  %5246 = and i64 %5245, 4294967295
  store i64 %5246, i64* %RCX.i, align 8
  %5247 = sext i8 %5244 to i64
  store i64 %5247, i64* %RDX.i, align 8
  %5248 = shl nsw i64 %5247, 1
  %5249 = add i64 %5239, %5248
  %5250 = add i64 %5237, 17
  store i64 %5250, i64* %3, align 8
  %5251 = inttoptr i64 %5249 to i16*
  %5252 = load i16, i16* %5251, align 2
  %5253 = and i16 %5252, 2048
  %5254 = zext i16 %5253 to i64
  store i64 %5254, i64* %RCX.i, align 8
  store i8 0, i8* %14, align 1
  store i8 1, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5255 = icmp eq i16 %5253, 0
  %.lobit250 = lshr exact i16 %5253, 11
  %5256 = trunc i16 %.lobit250 to i8
  %5257 = xor i8 %5256, 1
  store i8 %5257, i8* %29, align 1
  store i8 0, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v295 = select i1 %5255, i64 89, i64 32
  %5258 = add i64 %5237, %.v295
  store i64 %5258, i64* %3, align 8
  br i1 %5255, label %block_.L_41fb55, label %block_41fb1c

block_41fb1c:                                     ; preds = %block_41faf7
  %5259 = add i64 %5240, -24872
  %5260 = add i64 %5258, 6
  store i64 %5260, i64* %3, align 8
  %5261 = inttoptr i64 %5259 to i32*
  %5262 = load i32, i32* %5261, align 4
  %5263 = zext i32 %5262 to i64
  store i64 %5263, i64* %RDI.i176, align 8
  %5264 = add i64 %5240, -272
  %5265 = add i64 %5258, 12
  store i64 %5265, i64* %3, align 8
  %5266 = inttoptr i64 %5264 to i8*
  %5267 = load i8, i8* %5266, align 1
  store i8 %5267, i8* %AL.i.pre-phi, align 1
  %5268 = add i64 %5240, -271
  %5269 = add i64 %5258, 18
  store i64 %5269, i64* %3, align 8
  %5270 = inttoptr i64 %5268 to i8*
  %5271 = load i8, i8* %5270, align 1
  store i8 %5271, i8* %CL.i891, align 1
  %5272 = add i64 %5258, 25
  store i64 %5272, i64* %3, align 8
  %5273 = load i8, i8* %5243, align 1
  %5274 = sext i8 %5267 to i64
  %5275 = and i64 %5274, 4294967295
  store i64 %5275, i64* %RSI.i118, align 8
  %5276 = sext i8 %5271 to i64
  %5277 = and i64 %5276, 4294967295
  store i64 %5277, i64* %109, align 8
  %5278 = add i64 %5240, -25252
  %5279 = sext i8 %5273 to i32
  %5280 = add i64 %5258, 38
  store i64 %5280, i64* %3, align 8
  %5281 = inttoptr i64 %5278 to i32*
  store i32 %5279, i32* %5281, align 4
  %5282 = load i32, i32* %R8D.i, align 4
  %5283 = zext i32 %5282 to i64
  %5284 = load i64, i64* %3, align 8
  store i64 %5283, i64* %RDX.i, align 8
  %5285 = load i64, i64* %RBP.i, align 8
  %5286 = add i64 %5285, -25252
  %5287 = add i64 %5284, 9
  store i64 %5287, i64* %3, align 8
  %5288 = inttoptr i64 %5286 to i32*
  %5289 = load i32, i32* %5288, align 4
  %5290 = zext i32 %5289 to i64
  store i64 %5290, i64* %RCX.i, align 8
  %5291 = add i64 %5284, 18606
  %5292 = add i64 %5284, 14
  %5293 = load i64, i64* %6, align 8
  %5294 = add i64 %5293, -8
  %5295 = inttoptr i64 %5294 to i64*
  store i64 %5292, i64* %5295, align 8
  store i64 %5294, i64* %6, align 8
  store i64 %5291, i64* %3, align 8
  %call2_41fb4b = tail call %struct.Memory* @sub_4243f0.PutPiece(%struct.State* nonnull %0, i64 %5291, %struct.Memory* %call2_41faf7)
  %5296 = load i64, i64* %3, align 8
  %5297 = add i64 %5296, 2236
  br label %block_.L_42040c

block_.L_41fb55:                                  ; preds = %block_41faf7, %block_41fad2, %block_41faad, %block_.L_41faa0
  %5298 = phi i64 [ %5160, %block_.L_41faa0 ], [ %5184, %block_41faad ], [ %5212, %block_41fad2 ], [ %5240, %block_41faf7 ]
  %5299 = phi i64 [ %5174, %block_.L_41faa0 ], [ %5202, %block_41faad ], [ %5230, %block_41fad2 ], [ %5258, %block_41faf7 ]
  %MEMORY.75 = phi %struct.Memory* [ %MEMORY.74, %block_.L_41faa0 ], [ %call2_41faad, %block_41faad ], [ %call2_41fad2, %block_41fad2 ], [ %call2_41faf7, %block_41faf7 ]
  store i64 ptrtoint (%G__0x4294e9_type* @G__0x4294e9 to i64), i64* %RSI.i118, align 8
  store i64 7, i64* %RAX.i, align 8
  store i64 7, i64* %RDX.i, align 8
  %5300 = add i64 %5298, -272
  store i64 %5300, i64* %RDI.i176, align 8
  %5301 = add i64 %5299, -126709
  %5302 = add i64 %5299, 29
  %5303 = load i64, i64* %6, align 8
  %5304 = add i64 %5303, -8
  %5305 = inttoptr i64 %5304 to i64*
  store i64 %5302, i64* %5305, align 8
  store i64 %5304, i64* %6, align 8
  store i64 %5301, i64* %3, align 8
  %5306 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %MEMORY.75)
  %5307 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5308 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5309 = and i32 %5307, 255
  %5310 = tail call i32 @llvm.ctpop.i32(i32 %5309)
  %5311 = trunc i32 %5310 to i8
  %5312 = and i8 %5311, 1
  %5313 = xor i8 %5312, 1
  store i8 %5313, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5314 = icmp eq i32 %5307, 0
  %5315 = zext i1 %5314 to i8
  store i8 %5315, i8* %29, align 1
  %5316 = lshr i32 %5307, 31
  %5317 = trunc i32 %5316 to i8
  store i8 %5317, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v296 = select i1 %5314, i64 9, i64 33
  %5318 = add i64 %5308, %.v296
  store i64 %5318, i64* %3, align 8
  br i1 %5314, label %block_41fb7b, label %block_.L_41fb93

block_41fb7b:                                     ; preds = %block_.L_41fb55
  %5319 = load i64, i64* %RBP.i, align 8
  %5320 = add i64 %5319, -272
  %5321 = add i64 %5319, -265
  store i64 %5321, i64* %RAX.i, align 8
  %5322 = icmp ult i64 %5321, %5320
  %5323 = icmp ult i64 %5321, 7
  %5324 = or i1 %5322, %5323
  %5325 = zext i1 %5324 to i8
  store i8 %5325, i8* %14, align 1
  %5326 = trunc i64 %5321 to i32
  %5327 = and i32 %5326, 255
  %5328 = tail call i32 @llvm.ctpop.i32(i32 %5327)
  %5329 = trunc i32 %5328 to i8
  %5330 = and i8 %5329, 1
  %5331 = xor i8 %5330, 1
  store i8 %5331, i8* %21, align 1
  %5332 = xor i64 %5320, %5321
  %5333 = lshr i64 %5332, 4
  %5334 = trunc i64 %5333 to i8
  %5335 = and i8 %5334, 1
  store i8 %5335, i8* %26, align 1
  %5336 = icmp eq i64 %5321, 0
  %5337 = zext i1 %5336 to i8
  store i8 %5337, i8* %29, align 1
  %5338 = lshr i64 %5321, 63
  %5339 = trunc i64 %5338 to i8
  store i8 %5339, i8* %32, align 1
  %5340 = lshr i64 %5320, 63
  %5341 = xor i64 %5338, %5340
  %5342 = add nuw nsw i64 %5341, %5338
  %5343 = icmp eq i64 %5342, 2
  %5344 = zext i1 %5343 to i8
  store i8 %5344, i8* %38, align 1
  store i64 %5321, i64* %RDI.i176, align 8
  %5345 = add i64 %5318, -63883
  %5346 = add i64 %5318, 19
  %5347 = load i64, i64* %6, align 8
  %5348 = add i64 %5347, -8
  %5349 = inttoptr i64 %5348 to i64*
  store i64 %5346, i64* %5349, align 8
  store i64 %5348, i64* %6, align 8
  store i64 %5345, i64* %3, align 8
  %call2_41fb89 = tail call %struct.Memory* @sub_4101f0.HandlePartner(%struct.State* nonnull %0, i64 %5345, %struct.Memory* %5306)
  %5350 = load i64, i64* %3, align 8
  %5351 = add i64 %5350, 2169
  br label %block_.L_420407

block_.L_41fb93:                                  ; preds = %block_.L_41fb55
  store i64 ptrtoint (%G__0x4294e8_type* @G__0x4294e8 to i64), i64* %RSI.i118, align 8
  store i64 8, i64* %RAX.i, align 8
  store i64 8, i64* %RDX.i, align 8
  %5352 = load i64, i64* %RBP.i, align 8
  %5353 = add i64 %5352, -272
  store i64 %5353, i64* %RDI.i176, align 8
  %5354 = add i64 %5318, -126771
  %5355 = add i64 %5318, 29
  %5356 = load i64, i64* %6, align 8
  %5357 = add i64 %5356, -8
  %5358 = inttoptr i64 %5357 to i64*
  store i64 %5355, i64* %5358, align 8
  store i64 %5357, i64* %6, align 8
  store i64 %5354, i64* %3, align 8
  %5359 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5306)
  %5360 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5361 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5362 = and i32 %5360, 255
  %5363 = tail call i32 @llvm.ctpop.i32(i32 %5362)
  %5364 = trunc i32 %5363 to i8
  %5365 = and i8 %5364, 1
  %5366 = xor i8 %5365, 1
  store i8 %5366, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5367 = icmp eq i32 %5360, 0
  %5368 = zext i1 %5367 to i8
  store i8 %5368, i8* %29, align 1
  %5369 = lshr i32 %5360, 31
  %5370 = trunc i32 %5369 to i8
  store i8 %5370, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v297 = select i1 %5367, i64 9, i64 33
  %5371 = add i64 %5361, %.v297
  store i64 %5371, i64* %3, align 8
  br i1 %5367, label %block_41fbb9, label %block_.L_41fbd1

block_41fbb9:                                     ; preds = %block_.L_41fb93
  %5372 = load i64, i64* %RBP.i, align 8
  %5373 = add i64 %5372, -272
  %5374 = add i64 %5372, -264
  store i64 %5374, i64* %RAX.i, align 8
  %5375 = icmp ult i64 %5374, %5373
  %5376 = icmp ult i64 %5374, 8
  %5377 = or i1 %5375, %5376
  %5378 = zext i1 %5377 to i8
  store i8 %5378, i8* %14, align 1
  %5379 = trunc i64 %5374 to i32
  %5380 = and i32 %5379, 255
  %5381 = tail call i32 @llvm.ctpop.i32(i32 %5380)
  %5382 = trunc i32 %5381 to i8
  %5383 = and i8 %5382, 1
  %5384 = xor i8 %5383, 1
  store i8 %5384, i8* %21, align 1
  %5385 = xor i64 %5373, %5374
  %5386 = lshr i64 %5385, 4
  %5387 = trunc i64 %5386 to i8
  %5388 = and i8 %5387, 1
  store i8 %5388, i8* %26, align 1
  %5389 = icmp eq i64 %5374, 0
  %5390 = zext i1 %5389 to i8
  store i8 %5390, i8* %29, align 1
  %5391 = lshr i64 %5374, 63
  %5392 = trunc i64 %5391 to i8
  store i8 %5392, i8* %32, align 1
  %5393 = lshr i64 %5373, 63
  %5394 = xor i64 %5391, %5393
  %5395 = add nuw nsw i64 %5394, %5391
  %5396 = icmp eq i64 %5395, 2
  %5397 = zext i1 %5396 to i8
  store i8 %5397, i8* %38, align 1
  store i64 %5374, i64* %RDI.i176, align 8
  %5398 = add i64 %5371, -63945
  %5399 = add i64 %5371, 19
  %5400 = load i64, i64* %6, align 8
  %5401 = add i64 %5400, -8
  %5402 = inttoptr i64 %5401 to i64*
  store i64 %5399, i64* %5402, align 8
  store i64 %5401, i64* %6, align 8
  store i64 %5398, i64* %3, align 8
  %call2_41fbc7 = tail call %struct.Memory* @sub_4101f0.HandlePartner(%struct.State* nonnull %0, i64 %5398, %struct.Memory* %5359)
  %5403 = load i64, i64* %3, align 8
  %5404 = add i64 %5403, 2102
  br label %block_.L_420402

block_.L_41fbd1:                                  ; preds = %block_.L_41fb93
  store i64 ptrtoint (%G__0x4294f1_type* @G__0x4294f1 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %5405 = load i64, i64* %RBP.i, align 8
  %5406 = add i64 %5405, -272
  store i64 %5406, i64* %RDI.i176, align 8
  %5407 = add i64 %5371, -126833
  %5408 = add i64 %5371, 29
  %5409 = load i64, i64* %6, align 8
  %5410 = add i64 %5409, -8
  %5411 = inttoptr i64 %5410 to i64*
  store i64 %5408, i64* %5411, align 8
  store i64 %5410, i64* %6, align 8
  store i64 %5407, i64* %3, align 8
  %5412 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5359)
  %5413 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5414 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5415 = and i32 %5413, 255
  %5416 = tail call i32 @llvm.ctpop.i32(i32 %5415)
  %5417 = trunc i32 %5416 to i8
  %5418 = and i8 %5417, 1
  %5419 = xor i8 %5418, 1
  store i8 %5419, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5420 = icmp eq i32 %5413, 0
  %5421 = zext i1 %5420 to i8
  store i8 %5421, i8* %29, align 1
  %5422 = lshr i32 %5413, 31
  %5423 = trunc i32 %5422 to i8
  store i8 %5423, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v298 = select i1 %5420, i64 9, i64 26
  %5424 = add i64 %5414, %.v298
  store i64 %5424, i64* %3, align 8
  br i1 %5420, label %block_41fbf7, label %block_.L_41fc08

block_41fbf7:                                     ; preds = %block_.L_41fbd1
  %5425 = load i64, i64* %RBP.i, align 8
  %5426 = add i64 %5425, -272
  store i64 %5426, i64* %RDI.i176, align 8
  %5427 = add i64 %5424, -63783
  %5428 = add i64 %5424, 12
  %5429 = load i64, i64* %6, align 8
  %5430 = add i64 %5429, -8
  %5431 = inttoptr i64 %5430 to i64*
  store i64 %5428, i64* %5431, align 8
  store i64 %5430, i64* %6, align 8
  store i64 %5427, i64* %3, align 8
  %call2_41fbfe = tail call %struct.Memory* @sub_4102d0.HandlePtell(%struct.State* nonnull %0, i64 %5427, %struct.Memory* %5412)
  %5432 = load i64, i64* %3, align 8
  %5433 = add i64 %5432, 2042
  br label %block_.L_4203fd

block_.L_41fc08:                                  ; preds = %block_.L_41fbd1
  store i64 ptrtoint (%G__0x4294f7_type* @G__0x4294f7 to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %5434 = load i64, i64* %RBP.i, align 8
  %5435 = add i64 %5434, -272
  store i64 %5435, i64* %RDI.i176, align 8
  %5436 = add i64 %5424, -126888
  %5437 = add i64 %5424, 29
  %5438 = load i64, i64* %6, align 8
  %5439 = add i64 %5438, -8
  %5440 = inttoptr i64 %5439 to i64*
  store i64 %5437, i64* %5440, align 8
  store i64 %5439, i64* %6, align 8
  store i64 %5436, i64* %3, align 8
  %5441 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5412)
  %5442 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5443 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5444 = and i32 %5442, 255
  %5445 = tail call i32 @llvm.ctpop.i32(i32 %5444)
  %5446 = trunc i32 %5445 to i8
  %5447 = and i8 %5446, 1
  %5448 = xor i8 %5447, 1
  store i8 %5448, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5449 = icmp eq i32 %5442, 0
  %5450 = zext i1 %5449 to i8
  store i8 %5450, i8* %29, align 1
  %5451 = lshr i32 %5442, 31
  %5452 = trunc i32 %5451 to i8
  store i8 %5452, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v299 = select i1 %5449, i64 9, i64 19
  %5453 = add i64 %5443, %.v299
  store i64 %5453, i64* %3, align 8
  br i1 %5449, label %block_41fc2e, label %block_.L_41fc38

block_41fc2e:                                     ; preds = %block_.L_41fc08
  %5454 = add i64 %5453, -116638
  %5455 = add i64 %5453, 5
  %5456 = load i64, i64* %6, align 8
  %5457 = add i64 %5456, -8
  %5458 = inttoptr i64 %5457 to i64*
  store i64 %5455, i64* %5458, align 8
  store i64 %5457, i64* %6, align 8
  store i64 %5454, i64* %3, align 8
  %call2_41fc2e = tail call %struct.Memory* @sub_403490.run_epd_testsuite(%struct.State* nonnull %0, i64 %5454, %struct.Memory* %5441)
  %5459 = load i64, i64* %3, align 8
  %5460 = add i64 %5459, 1989
  br label %block_.L_4203f8

block_.L_41fc38:                                  ; preds = %block_.L_41fc08
  store i64 ptrtoint (%G__0x4288b1_type* @G__0x4288b1 to i64), i64* %RSI.i118, align 8
  store i64 2, i64* %RAX.i, align 8
  store i64 2, i64* %RDX.i, align 8
  %5461 = load i64, i64* %RBP.i, align 8
  %5462 = add i64 %5461, -272
  store i64 %5462, i64* %RDI.i176, align 8
  %5463 = add i64 %5453, -126936
  %5464 = add i64 %5453, 29
  %5465 = load i64, i64* %6, align 8
  %5466 = add i64 %5465, -8
  %5467 = inttoptr i64 %5466 to i64*
  store i64 %5464, i64* %5467, align 8
  store i64 %5466, i64* %6, align 8
  store i64 %5463, i64* %3, align 8
  %5468 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5441)
  %5469 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5470 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5471 = and i32 %5469, 255
  %5472 = tail call i32 @llvm.ctpop.i32(i32 %5471)
  %5473 = trunc i32 %5472 to i8
  %5474 = and i8 %5473, 1
  %5475 = xor i8 %5474, 1
  store i8 %5475, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5476 = icmp eq i32 %5469, 0
  %5477 = zext i1 %5476 to i8
  store i8 %5477, i8* %29, align 1
  %5478 = lshr i32 %5469, 31
  %5479 = trunc i32 %5478 to i8
  store i8 %5479, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v300 = select i1 %5476, i64 9, i64 76
  %5480 = add i64 %5470, %.v300
  %5481 = add i64 %5480, 10
  store i64 %5481, i64* %3, align 8
  br i1 %5476, label %block_41fc5e, label %block_.L_41fca1

block_41fc5e:                                     ; preds = %block_.L_41fc38
  store i64 ptrtoint (%G__0x429aea_type* @G__0x429aea to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x886b80_type* @G__0x886b80 to i64), i64* %RDX.i, align 8
  %5482 = load i64, i64* %RBP.i, align 8
  %5483 = add i64 %5482, -272
  %5484 = add i64 %5482, -269
  store i64 %5484, i64* %RAX.i, align 8
  %5485 = icmp ult i64 %5484, %5483
  %5486 = icmp ult i64 %5484, 3
  %5487 = or i1 %5485, %5486
  %5488 = zext i1 %5487 to i8
  store i8 %5488, i8* %14, align 1
  %5489 = trunc i64 %5484 to i32
  %5490 = and i32 %5489, 255
  %5491 = tail call i32 @llvm.ctpop.i32(i32 %5490)
  %5492 = trunc i32 %5491 to i8
  %5493 = and i8 %5492, 1
  %5494 = xor i8 %5493, 1
  store i8 %5494, i8* %21, align 1
  %5495 = xor i64 %5483, %5484
  %5496 = lshr i64 %5495, 4
  %5497 = trunc i64 %5496 to i8
  %5498 = and i8 %5497, 1
  store i8 %5498, i8* %26, align 1
  %5499 = icmp eq i64 %5484, 0
  %5500 = zext i1 %5499 to i8
  store i8 %5500, i8* %29, align 1
  %5501 = lshr i64 %5484, 63
  %5502 = trunc i64 %5501 to i8
  store i8 %5502, i8* %32, align 1
  %5503 = lshr i64 %5483, 63
  %5504 = xor i64 %5501, %5503
  %5505 = add nuw nsw i64 %5504, %5501
  %5506 = icmp eq i64 %5505, 2
  %5507 = zext i1 %5506 to i8
  store i8 %5507, i8* %38, align 1
  store i64 %5484, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5508 = add i64 %5480, -126686
  %5509 = add i64 %5480, 41
  %5510 = load i64, i64* %6, align 8
  %5511 = add i64 %5510, -8
  %5512 = inttoptr i64 %5511 to i64*
  store i64 %5509, i64* %5512, align 8
  store i64 %5511, i64* %6, align 8
  store i64 %5508, i64* %3, align 8
  %5513 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %5468)
  %5514 = load i64, i64* %3, align 8
  %5515 = load i32, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  %5516 = sext i32 %5515 to i64
  %5517 = mul nsw i64 %5516, 100
  %5518 = trunc i64 %5517 to i32
  %5519 = and i64 %5517, 4294967292
  store i64 %5519, i64* %RCX.i, align 8
  %5520 = mul i64 %5516, 429496729600
  %5521 = ashr exact i64 %5520, 32
  %5522 = icmp ne i64 %5521, %5517
  %5523 = zext i1 %5522 to i8
  store i8 %5523, i8* %14, align 1
  %5524 = and i32 %5518, 252
  %5525 = tail call i32 @llvm.ctpop.i32(i32 %5524)
  %5526 = trunc i32 %5525 to i8
  %5527 = and i8 %5526, 1
  %5528 = xor i8 %5527, 1
  store i8 %5528, i8* %21, align 1
  store i8 0, i8* %26, align 1
  store i8 0, i8* %29, align 1
  %5529 = lshr i32 %5518, 31
  %5530 = trunc i32 %5529 to i8
  store i8 %5530, i8* %32, align 1
  store i8 %5523, i8* %38, align 1
  %5531 = trunc i64 %5517 to i32
  store i32 %5531, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  %5532 = load i64, i64* %RBP.i, align 8
  %5533 = add i64 %5532, -25256
  %5534 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5535 = add i64 %5514, 21
  store i64 %5535, i64* %3, align 8
  %5536 = inttoptr i64 %5533 to i32*
  store i32 %5534, i32* %5536, align 4
  %5537 = load i64, i64* %3, align 8
  %5538 = add i64 %5537, 1879
  br label %block_.L_4203f3

block_.L_41fca1:                                  ; preds = %block_.L_41fc38
  store i64 ptrtoint (%G__0x4294fc_type* @G__0x4294fc to i64), i64* %RSI.i118, align 8
  store i64 6, i64* %RAX.i, align 8
  store i64 6, i64* %RDX.i, align 8
  %5539 = load i64, i64* %RBP.i, align 8
  %5540 = add i64 %5539, -272
  store i64 %5540, i64* %RDI.i176, align 8
  %5541 = add i64 %5480, -127041
  %5542 = add i64 %5480, 29
  %5543 = load i64, i64* %6, align 8
  %5544 = add i64 %5543, -8
  %5545 = inttoptr i64 %5544 to i64*
  store i64 %5542, i64* %5545, align 8
  store i64 %5544, i64* %6, align 8
  store i64 %5541, i64* %3, align 8
  %5546 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5468)
  %5547 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5548 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5549 = and i32 %5547, 255
  %5550 = tail call i32 @llvm.ctpop.i32(i32 %5549)
  %5551 = trunc i32 %5550 to i8
  %5552 = and i8 %5551, 1
  %5553 = xor i8 %5552, 1
  store i8 %5553, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5554 = icmp eq i32 %5547, 0
  %5555 = zext i1 %5554 to i8
  store i8 %5555, i8* %29, align 1
  %5556 = lshr i32 %5547, 31
  %5557 = trunc i32 %5556 to i8
  store i8 %5557, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v301 = select i1 %5554, i64 9, i64 14
  %5558 = add i64 %5548, %.v301
  store i64 %5558, i64* %3, align 8
  br i1 %5554, label %block_41fcc7, label %block_.L_41fccc

block_41fcc7:                                     ; preds = %block_.L_41fca1
  %5559 = add i64 %5558, 1831
  br label %block_.L_4203ee

block_.L_41fccc:                                  ; preds = %block_.L_41fca1
  store i64 ptrtoint (%G__0x429503_type* @G__0x429503 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %5560 = load i64, i64* %RBP.i, align 8
  %5561 = add i64 %5560, -272
  store i64 %5561, i64* %RDI.i176, align 8
  %5562 = add i64 %5558, -127084
  %5563 = add i64 %5558, 29
  %5564 = load i64, i64* %6, align 8
  %5565 = add i64 %5564, -8
  %5566 = inttoptr i64 %5565 to i64*
  store i64 %5563, i64* %5566, align 8
  store i64 %5565, i64* %6, align 8
  store i64 %5562, i64* %3, align 8
  %5567 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5546)
  %5568 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5569 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5570 = and i32 %5568, 255
  %5571 = tail call i32 @llvm.ctpop.i32(i32 %5570)
  %5572 = trunc i32 %5571 to i8
  %5573 = and i8 %5572, 1
  %5574 = xor i8 %5573, 1
  store i8 %5574, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5575 = icmp eq i32 %5568, 0
  %5576 = zext i1 %5575 to i8
  store i8 %5576, i8* %29, align 1
  %5577 = lshr i32 %5568, 31
  %5578 = trunc i32 %5577 to i8
  store i8 %5578, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v302 = select i1 %5575, i64 9, i64 128
  %5579 = add i64 %5569, %.v302
  %5580 = add i64 %5579, 10
  store i64 %5580, i64* %3, align 8
  br i1 %5575, label %block_41fcf2, label %block_.L_41fd69

block_41fcf2:                                     ; preds = %block_.L_41fccc
  store i64 ptrtoint (%G__0x429509_type* @G__0x429509 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5581 = add i64 %5579, -127042
  %5582 = add i64 %5579, 17
  %5583 = load i64, i64* %6, align 8
  %5584 = add i64 %5583, -8
  %5585 = inttoptr i64 %5584 to i64*
  store i64 %5582, i64* %5585, align 8
  store i64 %5584, i64* %6, align 8
  store i64 %5581, i64* %3, align 8
  %5586 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %5567)
  %5587 = load i64, i64* %RBP.i, align 8
  %5588 = add i64 %5587, -25260
  %5589 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5590 = load i64, i64* %3, align 8
  %5591 = add i64 %5590, 6
  store i64 %5591, i64* %3, align 8
  %5592 = inttoptr i64 %5588 to i32*
  store i32 %5589, i32* %5592, align 4
  %5593 = load i64, i64* %3, align 8
  %5594 = add i64 %5593, 14935
  %5595 = add i64 %5593, 5
  %5596 = load i64, i64* %6, align 8
  %5597 = add i64 %5596, -8
  %5598 = inttoptr i64 %5597 to i64*
  store i64 %5595, i64* %5598, align 8
  store i64 %5597, i64* %6, align 8
  store i64 %5594, i64* %3, align 8
  %call2_41fd09 = tail call %struct.Memory* @sub_423760.rtime(%struct.State* nonnull %0, i64 %5594, %struct.Memory* %5586)
  %5599 = load i64, i64* %3, align 8
  store i64 256, i64* %RSI.i118, align 8
  %5600 = load i64, i64* %RBP.i, align 8
  %5601 = add i64 %5600, -800
  store i64 %5601, i64* %RDI.i176, align 8
  %5602 = load i64, i64* %RAX.i, align 8
  store i64 %5602, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*), align 8
  %5603 = load i64, i64* bitcast (%G_0x62da90_type* @G_0x62da90 to i64*), align 8
  store i64 %5603, i64* %RDX.i, align 8
  %5604 = add i64 %5599, 12578
  %5605 = add i64 %5599, 33
  %5606 = load i64, i64* %6, align 8
  %5607 = add i64 %5606, -8
  %5608 = inttoptr i64 %5607 to i64*
  store i64 %5605, i64* %5608, align 8
  store i64 %5607, i64* %6, align 8
  store i64 %5604, i64* %3, align 8
  %call2_41fd2a = tail call %struct.Memory* @sub_422e30.rinput(%struct.State* nonnull %0, i64 %5604, %struct.Memory* %call2_41fd09)
  %5609 = load i64, i64* %RBP.i, align 8
  %5610 = add i64 %5609, -800
  %5611 = load i64, i64* %3, align 8
  store i64 %5610, i64* %RDI.i176, align 8
  %5612 = add i64 %5611, -126879
  %5613 = add i64 %5611, 12
  %5614 = load i64, i64* %6, align 8
  %5615 = add i64 %5614, -8
  %5616 = inttoptr i64 %5615 to i64*
  store i64 %5613, i64* %5616, align 8
  store i64 %5615, i64* %6, align 8
  store i64 %5612, i64* %3, align 8
  %5617 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %call2_41fd2a)
  %5618 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429bef_type* @G__0x429bef to i64), i64* %RDI.i176, align 8
  %5619 = load i64, i64* %RAX.i, align 8
  %5620 = sext i64 %5619 to i128
  %5621 = and i128 %5620, -18446744073709551616
  %5622 = zext i64 %5619 to i128
  %5623 = or i128 %5621, %5622
  %5624 = mul nsw i128 %5623, 100
  %5625 = trunc i128 %5624 to i64
  store i64 %5625, i64* %RAX.i, align 8
  %5626 = sext i64 %5625 to i128
  %5627 = icmp ne i128 %5626, %5624
  %5628 = zext i1 %5627 to i8
  store i8 %5628, i8* %14, align 1
  %5629 = trunc i128 %5624 to i32
  %5630 = and i32 %5629, 252
  %5631 = tail call i32 @llvm.ctpop.i32(i32 %5630)
  %5632 = trunc i32 %5631 to i8
  %5633 = and i8 %5632, 1
  %5634 = xor i8 %5633, 1
  store i8 %5634, i8* %21, align 1
  store i8 0, i8* %26, align 1
  store i8 0, i8* %29, align 1
  %5635 = lshr i64 %5625, 63
  %5636 = trunc i64 %5635 to i8
  store i8 %5636, i8* %32, align 1
  store i8 %5628, i8* %38, align 1
  %5637 = trunc i128 %5624 to i32
  %5638 = trunc i128 %5624 to i64
  %5639 = and i64 %5638, 4294967292
  store i64 %5639, i64* %RSI.i118, align 8
  store i32 %5637, i32* bitcast (%G_0x85f168_type* @G_0x85f168 to i32*), align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5640 = add i64 %5618, -127115
  %5641 = add i64 %5618, 30
  %5642 = load i64, i64* %6, align 8
  %5643 = add i64 %5642, -8
  %5644 = inttoptr i64 %5643 to i64*
  store i64 %5641, i64* %5644, align 8
  store i64 %5643, i64* %6, align 8
  store i64 %5640, i64* %3, align 8
  %5645 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %5617)
  %5646 = load i64, i64* %RBP.i, align 8
  %5647 = add i64 %5646, -25264
  %5648 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5649 = load i64, i64* %3, align 8
  %5650 = add i64 %5649, 6
  store i64 %5650, i64* %3, align 8
  %5651 = inttoptr i64 %5647 to i32*
  store i32 %5648, i32* %5651, align 4
  %5652 = load i64, i64* %3, align 8
  %5653 = add i64 %5652, -44399
  %5654 = add i64 %5652, 5
  %5655 = load i64, i64* %6, align 8
  %5656 = add i64 %5655, -8
  %5657 = inttoptr i64 %5656 to i64*
  store i64 %5654, i64* %5657, align 8
  store i64 %5656, i64* %6, align 8
  store i64 %5653, i64* %3, align 8
  %call2_41fd5f = tail call %struct.Memory* @sub_414ff0.proofnumbersearch(%struct.State* nonnull %0, i64 %5653, %struct.Memory* %5645)
  %5658 = load i64, i64* %3, align 8
  %5659 = add i64 %5658, 1669
  br label %block_.L_4203e9

block_.L_41fd69:                                  ; preds = %block_.L_41fccc
  store i64 ptrtoint (%G__0x429523_type* @G__0x429523 to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %5660 = load i64, i64* %RBP.i, align 8
  %5661 = add i64 %5660, -272
  store i64 %5661, i64* %RDI.i176, align 8
  %5662 = add i64 %5579, -127241
  %5663 = add i64 %5579, 29
  %5664 = load i64, i64* %6, align 8
  %5665 = add i64 %5664, -8
  %5666 = inttoptr i64 %5665 to i64*
  store i64 %5663, i64* %5666, align 8
  store i64 %5665, i64* %6, align 8
  store i64 %5662, i64* %3, align 8
  %5667 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5567)
  %5668 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5669 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5670 = and i32 %5668, 255
  %5671 = tail call i32 @llvm.ctpop.i32(i32 %5670)
  %5672 = trunc i32 %5671 to i8
  %5673 = and i8 %5672, 1
  %5674 = xor i8 %5673, 1
  store i8 %5674, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5675 = icmp eq i32 %5668, 0
  %5676 = zext i1 %5675 to i8
  store i8 %5676, i8* %29, align 1
  %5677 = lshr i32 %5668, 31
  %5678 = trunc i32 %5677 to i8
  store i8 %5678, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v303 = select i1 %5675, i64 9, i64 87
  %5679 = add i64 %5669, %.v303
  %5680 = add i64 %5679, 10
  store i64 %5680, i64* %3, align 8
  br i1 %5675, label %block_41fd8f, label %block_.L_41fddd

block_41fd8f:                                     ; preds = %block_.L_41fd69
  store i64 ptrtoint (%G__0x429aea_type* @G__0x429aea to i64), i64* %RSI.i118, align 8
  %5681 = load i64, i64* %RBP.i, align 8
  %5682 = add i64 %5681, -24876
  store i64 %5682, i64* %RDX.i, align 8
  %5683 = add i64 %5681, -272
  %5684 = add i64 %5681, -267
  store i64 %5684, i64* %RAX.i, align 8
  %5685 = icmp ult i64 %5684, %5683
  %5686 = icmp ult i64 %5684, 5
  %5687 = or i1 %5685, %5686
  %5688 = zext i1 %5687 to i8
  store i8 %5688, i8* %14, align 1
  %5689 = trunc i64 %5684 to i32
  %5690 = and i32 %5689, 255
  %5691 = tail call i32 @llvm.ctpop.i32(i32 %5690)
  %5692 = trunc i32 %5691 to i8
  %5693 = and i8 %5692, 1
  %5694 = xor i8 %5693, 1
  store i8 %5694, i8* %21, align 1
  %5695 = xor i64 %5683, %5684
  %5696 = lshr i64 %5695, 4
  %5697 = trunc i64 %5696 to i8
  %5698 = and i8 %5697, 1
  store i8 %5698, i8* %26, align 1
  %5699 = icmp eq i64 %5684, 0
  %5700 = zext i1 %5699 to i8
  store i8 %5700, i8* %29, align 1
  %5701 = lshr i64 %5684, 63
  %5702 = trunc i64 %5701 to i8
  store i8 %5702, i8* %32, align 1
  %5703 = lshr i64 %5683, 63
  %5704 = xor i64 %5701, %5703
  %5705 = add nuw nsw i64 %5704, %5701
  %5706 = icmp eq i64 %5705, 2
  %5707 = zext i1 %5706 to i8
  store i8 %5707, i8* %38, align 1
  store i64 %5684, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5708 = add i64 %5679, -126991
  %5709 = add i64 %5679, 38
  %5710 = load i64, i64* %6, align 8
  %5711 = add i64 %5710, -8
  %5712 = inttoptr i64 %5711 to i64*
  store i64 %5709, i64* %5712, align 8
  store i64 %5711, i64* %6, align 8
  store i64 %5708, i64* %3, align 8
  %5713 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %5667)
  %5714 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429528_type* @G__0x429528 to i64), i64* %RDI.i176, align 8
  %5715 = load i64, i64* %RBP.i, align 8
  %5716 = add i64 %5715, -24876
  %5717 = add i64 %5714, 16
  store i64 %5717, i64* %3, align 8
  %5718 = inttoptr i64 %5716 to i32*
  %5719 = load i32, i32* %5718, align 4
  %5720 = zext i32 %5719 to i64
  store i64 %5720, i64* %RSI.i118, align 8
  %5721 = add i64 %5715, -25268
  %5722 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5723 = add i64 %5714, 22
  store i64 %5723, i64* %3, align 8
  %5724 = inttoptr i64 %5721 to i32*
  store i32 %5722, i32* %5724, align 4
  %5725 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5726 = add i64 %5725, -127259
  %5727 = add i64 %5725, 7
  %5728 = load i64, i64* %6, align 8
  %5729 = add i64 %5728, -8
  %5730 = inttoptr i64 %5729 to i64*
  store i64 %5727, i64* %5730, align 8
  store i64 %5729, i64* %6, align 8
  store i64 %5726, i64* %3, align 8
  %5731 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %5713)
  %5732 = load i64, i64* %RBP.i, align 8
  %5733 = add i64 %5732, -25272
  %5734 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5735 = load i64, i64* %3, align 8
  %5736 = add i64 %5735, 6
  store i64 %5736, i64* %3, align 8
  %5737 = inttoptr i64 %5733 to i32*
  store i32 %5734, i32* %5737, align 4
  %5738 = load i64, i64* %3, align 8
  %5739 = add i64 %5738, 1548
  br label %block_.L_4203e4

block_.L_41fddd:                                  ; preds = %block_.L_41fd69
  store i64 ptrtoint (%G__0x429531_type* @G__0x429531 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %5740 = load i64, i64* %RBP.i, align 8
  %5741 = add i64 %5740, -272
  store i64 %5741, i64* %RDI.i176, align 8
  %5742 = add i64 %5679, -127357
  %5743 = add i64 %5679, 29
  %5744 = load i64, i64* %6, align 8
  %5745 = add i64 %5744, -8
  %5746 = inttoptr i64 %5745 to i64*
  store i64 %5743, i64* %5746, align 8
  store i64 %5745, i64* %6, align 8
  store i64 %5742, i64* %3, align 8
  %5747 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5667)
  %5748 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5749 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5750 = and i32 %5748, 255
  %5751 = tail call i32 @llvm.ctpop.i32(i32 %5750)
  %5752 = trunc i32 %5751 to i8
  %5753 = and i8 %5752, 1
  %5754 = xor i8 %5753, 1
  store i8 %5754, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5755 = icmp eq i32 %5748, 0
  %5756 = zext i1 %5755 to i8
  store i8 %5756, i8* %29, align 1
  %5757 = lshr i32 %5748, 31
  %5758 = trunc i32 %5757 to i8
  store i8 %5758, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v304 = select i1 %5755, i64 9, i64 24
  %5759 = add i64 %5749, %.v304
  store i64 %5759, i64* %3, align 8
  br i1 %5755, label %block_41fe03, label %block_.L_41fe12

block_41fe03:                                     ; preds = %block_.L_41fddd
  %5760 = load i64, i64* %RBP.i, align 8
  %5761 = add i64 %5760, -24880
  %5762 = add i64 %5759, 10
  store i64 %5762, i64* %3, align 8
  %5763 = inttoptr i64 %5761 to i32*
  store i32 1, i32* %5763, align 4
  %5764 = load i64, i64* %3, align 8
  %5765 = add i64 %5764, 1490
  br label %block_.L_4203df

block_.L_41fe12:                                  ; preds = %block_.L_41fddd
  store i64 ptrtoint (%G__0x429537_type* @G__0x429537 to i64), i64* %RSI.i118, align 8
  store i64 5, i64* %RAX.i, align 8
  store i64 5, i64* %RDX.i, align 8
  %5766 = load i64, i64* %RBP.i, align 8
  %5767 = add i64 %5766, -272
  store i64 %5767, i64* %RDI.i176, align 8
  %5768 = add i64 %5759, -127410
  %5769 = add i64 %5759, 29
  %5770 = load i64, i64* %6, align 8
  %5771 = add i64 %5770, -8
  %5772 = inttoptr i64 %5771 to i64*
  store i64 %5769, i64* %5772, align 8
  store i64 %5771, i64* %6, align 8
  store i64 %5768, i64* %3, align 8
  %5773 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5747)
  %5774 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5775 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5776 = and i32 %5774, 255
  %5777 = tail call i32 @llvm.ctpop.i32(i32 %5776)
  %5778 = trunc i32 %5777 to i8
  %5779 = and i8 %5778, 1
  %5780 = xor i8 %5779, 1
  store i8 %5780, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5781 = icmp eq i32 %5774, 0
  %5782 = zext i1 %5781 to i8
  store i8 %5782, i8* %29, align 1
  %5783 = lshr i32 %5774, 31
  %5784 = trunc i32 %5783 to i8
  store i8 %5784, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v305 = select i1 %5781, i64 9, i64 168
  %5785 = add i64 %5775, %.v305
  %5786 = add i64 %5785, 10
  store i64 %5786, i64* %3, align 8
  br i1 %5781, label %block_41fe38, label %block_.L_41fed7

block_41fe38:                                     ; preds = %block_.L_41fe12
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX.i, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RCX.i, align 8
  store i64 56, i64* %RDX.i, align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RSI.i118, align 8
  %5787 = add i64 %5785, -127224
  %5788 = add i64 %5785, 36
  %5789 = load i64, i64* %6, align 8
  %5790 = add i64 %5789, -8
  %5791 = inttoptr i64 %5790 to i64*
  store i64 %5788, i64* %5791, align 8
  store i64 %5790, i64* %6, align 8
  store i64 %5787, i64* %3, align 8
  %5792 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %5773)
  %5793 = load i64, i64* %3, align 8
  store i32 2, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %5794 = add i64 %5793, 10308
  %5795 = add i64 %5793, 16
  %5796 = load i64, i64* %6, align 8
  %5797 = add i64 %5796, -8
  %5798 = inttoptr i64 %5797 to i64*
  store i64 %5795, i64* %5798, align 8
  store i64 %5797, i64* %6, align 8
  store i64 %5794, i64* %3, align 8
  %call2_41fe67 = tail call %struct.Memory* @sub_4226a0.init_game(%struct.State* nonnull %0, i64 %5794, %struct.Memory* %5792)
  %5799 = load i64, i64* %3, align 8
  %5800 = add i64 %5799, 1940
  %5801 = add i64 %5799, 5
  %5802 = load i64, i64* %6, align 8
  %5803 = add i64 %5802, -8
  %5804 = inttoptr i64 %5803 to i64*
  store i64 %5801, i64* %5804, align 8
  store i64 %5803, i64* %6, align 8
  store i64 %5800, i64* %3, align 8
  %call2_41fe6c = tail call %struct.Memory* @sub_420600.initialize_hash(%struct.State* nonnull %0, i64 %5800, %struct.Memory* %call2_41fe67)
  %5805 = load i64, i64* %3, align 8
  %5806 = add i64 %5805, 1615
  %5807 = add i64 %5805, 5
  %5808 = load i64, i64* %6, align 8
  %5809 = add i64 %5808, -8
  %5810 = inttoptr i64 %5809 to i64*
  store i64 %5807, i64* %5810, align 8
  store i64 %5809, i64* %6, align 8
  store i64 %5806, i64* %3, align 8
  %call2_41fe71 = tail call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* nonnull %0, i64 %5806, %struct.Memory* %call2_41fe6c)
  %5811 = load i64, i64* %3, align 8
  %5812 = add i64 %5811, -119398
  %5813 = add i64 %5811, 5
  %5814 = load i64, i64* %6, align 8
  %5815 = add i64 %5814, -8
  %5816 = inttoptr i64 %5815 to i64*
  store i64 %5813, i64* %5816, align 8
  store i64 %5815, i64* %6, align 8
  store i64 %5812, i64* %3, align 8
  %call2_41fe76 = tail call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* nonnull %0, i64 %5812, %struct.Memory* %call2_41fe71)
  %5817 = load i64, i64* %RBP.i, align 8
  %5818 = add i64 %5817, -856
  %5819 = load i64, i64* %3, align 8
  %5820 = add i64 %5819, 10
  store i64 %5820, i64* %3, align 8
  %5821 = inttoptr i64 %5818 to i32*
  store i32 0, i32* %5821, align 4
  %5822 = load i64, i64* %3, align 8
  store i32 0, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  store i32 0, i32* bitcast (%G_0x886be4_type* @G_0x886be4 to i32*), align 8
  store i32 2000, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  %5823 = add i64 %5822, 77
  store i64 %5823, i64* %3, align 8
  store i32 2000, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  %5824 = add i64 %5822, 1365
  br label %block_.L_4203da

block_.L_41fed7:                                  ; preds = %block_.L_41fe12
  store i64 ptrtoint (%G__0x42936b_type* @G__0x42936b to i64), i64* %RSI.i118, align 8
  store i64 8, i64* %RAX.i, align 8
  store i64 8, i64* %RDX.i, align 8
  %5825 = load i64, i64* %RBP.i, align 8
  %5826 = add i64 %5825, -272
  store i64 %5826, i64* %RDI.i176, align 8
  %5827 = add i64 %5785, -127607
  %5828 = add i64 %5785, 29
  %5829 = load i64, i64* %6, align 8
  %5830 = add i64 %5829, -8
  %5831 = inttoptr i64 %5830 to i64*
  store i64 %5828, i64* %5831, align 8
  store i64 %5830, i64* %6, align 8
  store i64 %5827, i64* %3, align 8
  %5832 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5773)
  %5833 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5834 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5835 = and i32 %5833, 255
  %5836 = tail call i32 @llvm.ctpop.i32(i32 %5835)
  %5837 = trunc i32 %5836 to i8
  %5838 = and i8 %5837, 1
  %5839 = xor i8 %5838, 1
  store i8 %5839, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5840 = icmp eq i32 %5833, 0
  %5841 = zext i1 %5840 to i8
  store i8 %5841, i8* %29, align 1
  %5842 = lshr i32 %5833, 31
  %5843 = trunc i32 %5842 to i8
  store i8 %5843, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v306 = select i1 %5840, i64 9, i64 33
  %5844 = add i64 %5834, %.v306
  store i64 %5844, i64* %3, align 8
  br i1 %5840, label %block_41fefd, label %block_.L_41ff15

block_41fefd:                                     ; preds = %block_.L_41fed7
  %5845 = load i64, i64* %RBP.i, align 8
  %5846 = add i64 %5845, -272
  %5847 = add i64 %5845, -263
  store i64 %5847, i64* %RAX.i, align 8
  %5848 = icmp ult i64 %5847, %5846
  %5849 = icmp ult i64 %5847, 9
  %5850 = or i1 %5848, %5849
  %5851 = zext i1 %5850 to i8
  store i8 %5851, i8* %14, align 1
  %5852 = trunc i64 %5847 to i32
  %5853 = and i32 %5852, 255
  %5854 = tail call i32 @llvm.ctpop.i32(i32 %5853)
  %5855 = trunc i32 %5854 to i8
  %5856 = and i8 %5855, 1
  %5857 = xor i8 %5856, 1
  store i8 %5857, i8* %21, align 1
  %5858 = xor i64 %5846, %5847
  %5859 = lshr i64 %5858, 4
  %5860 = trunc i64 %5859 to i8
  %5861 = and i8 %5860, 1
  store i8 %5861, i8* %26, align 1
  %5862 = icmp eq i64 %5847, 0
  %5863 = zext i1 %5862 to i8
  store i8 %5863, i8* %29, align 1
  %5864 = lshr i64 %5847, 63
  %5865 = trunc i64 %5864 to i8
  store i8 %5865, i8* %32, align 1
  %5866 = lshr i64 %5846, 63
  %5867 = xor i64 %5864, %5866
  %5868 = add nuw nsw i64 %5867, %5864
  %5869 = icmp eq i64 %5868, 2
  %5870 = zext i1 %5869 to i8
  store i8 %5870, i8* %38, align 1
  store i64 %5847, i64* %RDI.i176, align 8
  %5871 = add i64 %5844, -119357
  %5872 = add i64 %5844, 19
  %5873 = load i64, i64* %6, align 8
  %5874 = add i64 %5873, -8
  %5875 = inttoptr i64 %5874 to i64*
  store i64 %5872, i64* %5875, align 8
  store i64 %5874, i64* %6, align 8
  store i64 %5871, i64* %3, align 8
  %call2_41ff0b = tail call %struct.Memory* @sub_402cc0.setup_epd_line(%struct.State* nonnull %0, i64 %5871, %struct.Memory* %5832)
  %5876 = load i64, i64* %3, align 8
  %5877 = add i64 %5876, 1221
  br label %block_.L_4203d5

block_.L_41ff15:                                  ; preds = %block_.L_41fed7
  store i64 ptrtoint (%G__0x4294e4_type* @G__0x4294e4 to i64), i64* %RSI.i118, align 8
  store i64 1, i64* %RAX.i, align 8
  store i64 1, i64* %RDX.i, align 8
  %5878 = load i64, i64* %RBP.i, align 8
  %5879 = add i64 %5878, -272
  store i64 %5879, i64* %RDI.i176, align 8
  %5880 = add i64 %5844, -127669
  %5881 = add i64 %5844, 29
  %5882 = load i64, i64* %6, align 8
  %5883 = add i64 %5882, -8
  %5884 = inttoptr i64 %5883 to i64*
  store i64 %5881, i64* %5884, align 8
  store i64 %5883, i64* %6, align 8
  store i64 %5880, i64* %3, align 8
  %5885 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5832)
  %5886 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5887 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5888 = and i32 %5886, 255
  %5889 = tail call i32 @llvm.ctpop.i32(i32 %5888)
  %5890 = trunc i32 %5889 to i8
  %5891 = and i8 %5890, 1
  %5892 = xor i8 %5891, 1
  store i8 %5892, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5893 = icmp eq i32 %5886, 0
  %5894 = zext i1 %5893 to i8
  store i8 %5894, i8* %29, align 1
  %5895 = lshr i32 %5886, 31
  %5896 = trunc i32 %5895 to i8
  store i8 %5896, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v307 = select i1 %5893, i64 9, i64 14
  %5897 = add i64 %5887, %.v307
  store i64 %5897, i64* %3, align 8
  br i1 %5893, label %block_41ff3b, label %block_.L_41ff40

block_41ff3b:                                     ; preds = %block_.L_41ff15
  %5898 = add i64 %5897, -8312
  br label %block_.L_41dec3.backedge

block_.L_41ff40:                                  ; preds = %block_.L_41ff15
  store i64 ptrtoint (%G__0x42953d_type* @G__0x42953d to i64), i64* %RSI.i118, align 8
  store i64 2, i64* %RAX.i, align 8
  store i64 2, i64* %RDX.i, align 8
  %5899 = load i64, i64* %RBP.i, align 8
  %5900 = add i64 %5899, -272
  store i64 %5900, i64* %RDI.i176, align 8
  %5901 = add i64 %5897, -127712
  %5902 = add i64 %5897, 29
  %5903 = load i64, i64* %6, align 8
  %5904 = add i64 %5903, -8
  %5905 = inttoptr i64 %5904 to i64*
  store i64 %5902, i64* %5905, align 8
  store i64 %5904, i64* %6, align 8
  store i64 %5901, i64* %3, align 8
  %5906 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5885)
  %5907 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5908 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5909 = and i32 %5907, 255
  %5910 = tail call i32 @llvm.ctpop.i32(i32 %5909)
  %5911 = trunc i32 %5910 to i8
  %5912 = and i8 %5911, 1
  %5913 = xor i8 %5912, 1
  store i8 %5913, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5914 = icmp eq i32 %5907, 0
  %5915 = zext i1 %5914 to i8
  store i8 %5915, i8* %29, align 1
  %5916 = lshr i32 %5907, 31
  %5917 = trunc i32 %5916 to i8
  store i8 %5917, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v308 = select i1 %5914, i64 9, i64 91
  %5918 = add i64 %5908, %.v308
  %5919 = add i64 %5918, 10
  store i64 %5919, i64* %3, align 8
  br i1 %5914, label %block_41ff66, label %block_.L_41ffb8

block_41ff66:                                     ; preds = %block_.L_41ff40
  store i64 ptrtoint (%G__0x429aea_type* @G__0x429aea to i64), i64* %RSI.i118, align 8
  store i64 ptrtoint (%G__0x880b18_type* @G__0x880b18 to i64), i64* %RDX.i, align 8
  %5920 = load i64, i64* %RBP.i, align 8
  %5921 = add i64 %5920, -272
  %5922 = add i64 %5920, -269
  store i64 %5922, i64* %RAX.i, align 8
  %5923 = icmp ult i64 %5922, %5921
  %5924 = icmp ult i64 %5922, 3
  %5925 = or i1 %5923, %5924
  %5926 = zext i1 %5925 to i8
  store i8 %5926, i8* %14, align 1
  %5927 = trunc i64 %5922 to i32
  %5928 = and i32 %5927, 255
  %5929 = tail call i32 @llvm.ctpop.i32(i32 %5928)
  %5930 = trunc i32 %5929 to i8
  %5931 = and i8 %5930, 1
  %5932 = xor i8 %5931, 1
  store i8 %5932, i8* %21, align 1
  %5933 = xor i64 %5921, %5922
  %5934 = lshr i64 %5933, 4
  %5935 = trunc i64 %5934 to i8
  %5936 = and i8 %5935, 1
  store i8 %5936, i8* %26, align 1
  %5937 = icmp eq i64 %5922, 0
  %5938 = zext i1 %5937 to i8
  store i8 %5938, i8* %29, align 1
  %5939 = lshr i64 %5922, 63
  %5940 = trunc i64 %5939 to i8
  store i8 %5940, i8* %32, align 1
  %5941 = lshr i64 %5921, 63
  %5942 = xor i64 %5939, %5941
  %5943 = add nuw nsw i64 %5942, %5939
  %5944 = icmp eq i64 %5943, 2
  %5945 = zext i1 %5944 to i8
  store i8 %5945, i8* %38, align 1
  store i64 %5922, i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5946 = add i64 %5918, -127462
  %5947 = add i64 %5918, 41
  %5948 = load i64, i64* %6, align 8
  %5949 = add i64 %5948, -8
  %5950 = inttoptr i64 %5949 to i64*
  store i64 %5947, i64* %5950, align 8
  store i64 %5949, i64* %6, align 8
  store i64 %5946, i64* %3, align 8
  %5951 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %5906)
  %5952 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429540_type* @G__0x429540 to i64), i64* %RDI.i176, align 8
  %5953 = load i32, i32* bitcast (%G_0x880b18_type* @G_0x880b18 to i32*), align 8
  %5954 = zext i32 %5953 to i64
  store i64 %5954, i64* %RSI.i118, align 8
  %5955 = load i64, i64* %RBP.i, align 8
  %5956 = add i64 %5955, -25276
  %5957 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5958 = add i64 %5952, 23
  store i64 %5958, i64* %3, align 8
  %5959 = inttoptr i64 %5956 to i32*
  store i32 %5957, i32* %5959, align 4
  %5960 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %5961 = add i64 %5960, -127734
  %5962 = add i64 %5960, 7
  %5963 = load i64, i64* %6, align 8
  %5964 = add i64 %5963, -8
  %5965 = inttoptr i64 %5964 to i64*
  store i64 %5962, i64* %5965, align 8
  store i64 %5964, i64* %6, align 8
  store i64 %5961, i64* %3, align 8
  %5966 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %5951)
  %5967 = load i64, i64* %RBP.i, align 8
  %5968 = add i64 %5967, -25280
  %5969 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5970 = load i64, i64* %3, align 8
  %5971 = add i64 %5970, 6
  store i64 %5971, i64* %3, align 8
  %5972 = inttoptr i64 %5968 to i32*
  store i32 %5969, i32* %5972, align 4
  %5973 = load i64, i64* %3, align 8
  %5974 = add i64 %5973, -8432
  br label %block_.L_41dec3.backedge

block_.L_41ffb8:                                  ; preds = %block_.L_41ff40
  store i64 ptrtoint (%G__0x42955a_type* @G__0x42955a to i64), i64* %RSI.i118, align 8
  store i64 4, i64* %RAX.i, align 8
  store i64 4, i64* %RDX.i, align 8
  %5975 = load i64, i64* %RBP.i, align 8
  %5976 = add i64 %5975, -272
  store i64 %5976, i64* %RDI.i176, align 8
  %5977 = add i64 %5918, -127832
  %5978 = add i64 %5918, 29
  %5979 = load i64, i64* %6, align 8
  %5980 = add i64 %5979, -8
  %5981 = inttoptr i64 %5980 to i64*
  store i64 %5978, i64* %5981, align 8
  store i64 %5980, i64* %6, align 8
  store i64 %5977, i64* %3, align 8
  %5982 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5906)
  %5983 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %5984 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %5985 = and i32 %5983, 255
  %5986 = tail call i32 @llvm.ctpop.i32(i32 %5985)
  %5987 = trunc i32 %5986 to i8
  %5988 = and i8 %5987, 1
  %5989 = xor i8 %5988, 1
  store i8 %5989, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %5990 = icmp eq i32 %5983, 0
  %5991 = zext i1 %5990 to i8
  store i8 %5991, i8* %29, align 1
  %5992 = lshr i32 %5983, 31
  %5993 = trunc i32 %5992 to i8
  store i8 %5993, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v309 = select i1 %5990, i64 9, i64 24
  %5994 = add i64 %5984, %.v309
  store i64 %5994, i64* %3, align 8
  br i1 %5990, label %block_41ffde, label %block_.L_41ffed

block_41ffde:                                     ; preds = %block_.L_41ffb8
  %5995 = load i64, i64* %RBP.i, align 8
  %5996 = add i64 %5995, -24884
  %5997 = add i64 %5994, 10
  store i64 %5997, i64* %3, align 8
  %5998 = inttoptr i64 %5996 to i32*
  store i32 1, i32* %5998, align 4
  %5999 = load i64, i64* %3, align 8
  %6000 = add i64 %5999, -8485
  br label %block_.L_41dec3.backedge

block_.L_41ffed:                                  ; preds = %block_.L_41ffb8
  store i64 ptrtoint (%G__0x42955f_type* @G__0x42955f to i64), i64* %RSI.i118, align 8
  store i64 8, i64* %RAX.i, align 8
  store i64 8, i64* %RDX.i, align 8
  %6001 = load i64, i64* %RBP.i, align 8
  %6002 = add i64 %6001, -272
  store i64 %6002, i64* %RDI.i176, align 8
  %6003 = add i64 %5994, -127885
  %6004 = add i64 %5994, 29
  %6005 = load i64, i64* %6, align 8
  %6006 = add i64 %6005, -8
  %6007 = inttoptr i64 %6006 to i64*
  store i64 %6004, i64* %6007, align 8
  store i64 %6006, i64* %6, align 8
  store i64 %6003, i64* %3, align 8
  %6008 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %5982)
  %6009 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6010 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %6011 = and i32 %6009, 255
  %6012 = tail call i32 @llvm.ctpop.i32(i32 %6011)
  %6013 = trunc i32 %6012 to i8
  %6014 = and i8 %6013, 1
  %6015 = xor i8 %6014, 1
  store i8 %6015, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %6016 = icmp eq i32 %6009, 0
  %6017 = zext i1 %6016 to i8
  store i8 %6017, i8* %29, align 1
  %6018 = lshr i32 %6009, 31
  %6019 = trunc i32 %6018 to i8
  store i8 %6019, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v310 = select i1 %6016, i64 9, i64 140
  %6020 = add i64 %6010, %.v310
  %6021 = add i64 %6020, 10
  store i64 %6021, i64* %3, align 8
  br i1 %6016, label %block_420013, label %block_.L_420096

block_420013:                                     ; preds = %block_.L_41ffed
  store i64 ptrtoint (%G__0x429568_type* @G__0x429568 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6022 = add i64 %6020, -127843
  %6023 = add i64 %6020, 17
  %6024 = load i64, i64* %6, align 8
  %6025 = add i64 %6024, -8
  %6026 = inttoptr i64 %6025 to i64*
  store i64 %6023, i64* %6026, align 8
  store i64 %6025, i64* %6, align 8
  store i64 %6022, i64* %3, align 8
  %6027 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6008)
  %6028 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4295a7_type* @G__0x4295a7 to i64), i64* %RDI.i176, align 8
  %6029 = load i64, i64* %RBP.i, align 8
  %6030 = add i64 %6029, -25284
  %6031 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6032 = add i64 %6028, 16
  store i64 %6032, i64* %3, align 8
  %6033 = inttoptr i64 %6030 to i32*
  store i32 %6031, i32* %6033, align 4
  %6034 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6035 = add i64 %6034, -127876
  %6036 = add i64 %6034, 7
  %6037 = load i64, i64* %6, align 8
  %6038 = add i64 %6037, -8
  %6039 = inttoptr i64 %6038 to i64*
  store i64 %6036, i64* %6039, align 8
  store i64 %6038, i64* %6, align 8
  store i64 %6035, i64* %3, align 8
  %6040 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6027)
  %6041 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4295dc_type* @G__0x4295dc to i64), i64* %RDI.i176, align 8
  %6042 = load i64, i64* %RBP.i, align 8
  %6043 = add i64 %6042, -25288
  %6044 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6045 = add i64 %6041, 16
  store i64 %6045, i64* %3, align 8
  %6046 = inttoptr i64 %6043 to i32*
  store i32 %6044, i32* %6046, align 4
  %6047 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6048 = add i64 %6047, -127899
  %6049 = add i64 %6047, 7
  %6050 = load i64, i64* %6, align 8
  %6051 = add i64 %6050, -8
  %6052 = inttoptr i64 %6051 to i64*
  store i64 %6049, i64* %6052, align 8
  store i64 %6051, i64* %6, align 8
  store i64 %6048, i64* %3, align 8
  %6053 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6040)
  %6054 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4295fd_type* @G__0x4295fd to i64), i64* %RDI.i176, align 8
  %6055 = load i64, i64* %RBP.i, align 8
  %6056 = add i64 %6055, -25292
  %6057 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6058 = add i64 %6054, 16
  store i64 %6058, i64* %3, align 8
  %6059 = inttoptr i64 %6056 to i32*
  store i32 %6057, i32* %6059, align 4
  %6060 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6061 = add i64 %6060, -127922
  %6062 = add i64 %6060, 7
  %6063 = load i64, i64* %6, align 8
  %6064 = add i64 %6063, -8
  %6065 = inttoptr i64 %6064 to i64*
  store i64 %6062, i64* %6065, align 8
  store i64 %6064, i64* %6, align 8
  store i64 %6061, i64* %3, align 8
  %6066 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6053)
  %6067 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429644_type* @G__0x429644 to i64), i64* %RDI.i176, align 8
  %6068 = load i64, i64* %RBP.i, align 8
  %6069 = add i64 %6068, -25296
  %6070 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6071 = add i64 %6067, 16
  store i64 %6071, i64* %3, align 8
  %6072 = inttoptr i64 %6069 to i32*
  store i32 %6070, i32* %6072, align 4
  %6073 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6074 = add i64 %6073, -127945
  %6075 = add i64 %6073, 7
  %6076 = load i64, i64* %6, align 8
  %6077 = add i64 %6076, -8
  %6078 = inttoptr i64 %6077 to i64*
  store i64 %6075, i64* %6078, align 8
  store i64 %6077, i64* %6, align 8
  store i64 %6074, i64* %3, align 8
  %6079 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6066)
  %6080 = load i64, i64* %3, align 8
  store i32 2, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  %6081 = load i64, i64* %RBP.i, align 8
  %6082 = add i64 %6081, -25300
  %6083 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6084 = add i64 %6080, 17
  store i64 %6084, i64* %3, align 8
  %6085 = inttoptr i64 %6082 to i32*
  store i32 %6083, i32* %6085, align 4
  %6086 = load i64, i64* %3, align 8
  %6087 = add i64 %6086, 816
  br label %block_.L_4203c1

block_.L_420096:                                  ; preds = %block_.L_41ffed
  store i64 ptrtoint (%G__0x429672_type* @G__0x429672 to i64), i64* %RSI.i118, align 8
  store i64 8, i64* %RAX.i, align 8
  store i64 8, i64* %RDX.i, align 8
  %6088 = load i64, i64* %RBP.i, align 8
  %6089 = add i64 %6088, -272
  store i64 %6089, i64* %RDI.i176, align 8
  %6090 = add i64 %6020, -128054
  %6091 = add i64 %6020, 29
  %6092 = load i64, i64* %6, align 8
  %6093 = add i64 %6092, -8
  %6094 = inttoptr i64 %6093 to i64*
  store i64 %6091, i64* %6094, align 8
  store i64 %6093, i64* %6, align 8
  store i64 %6090, i64* %3, align 8
  %6095 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %6008)
  %6096 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6097 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %6098 = and i32 %6096, 255
  %6099 = tail call i32 @llvm.ctpop.i32(i32 %6098)
  %6100 = trunc i32 %6099 to i8
  %6101 = and i8 %6100, 1
  %6102 = xor i8 %6101, 1
  store i8 %6102, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %6103 = icmp eq i32 %6096, 0
  %6104 = zext i1 %6103 to i8
  store i8 %6104, i8* %29, align 1
  %6105 = lshr i32 %6096, 31
  %6106 = trunc i32 %6105 to i8
  store i8 %6106, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v311 = select i1 %6103, i64 9, i64 14
  %6107 = add i64 %6097, %.v311
  store i64 %6107, i64* %3, align 8
  br i1 %6103, label %block_4200bc, label %block_.L_4200c1

block_4200bc:                                     ; preds = %block_.L_420096
  %6108 = add i64 %6107, 768
  br label %block_.L_4203bc

block_.L_4200c1:                                  ; preds = %block_.L_420096
  store i64 ptrtoint (%G__0x42967b_type* @G__0x42967b to i64), i64* %RSI.i118, align 8
  store i64 8, i64* %RAX.i, align 8
  store i64 8, i64* %RDX.i, align 8
  %6109 = load i64, i64* %RBP.i, align 8
  %6110 = add i64 %6109, -272
  store i64 %6110, i64* %RDI.i176, align 8
  %6111 = add i64 %6107, -128097
  %6112 = add i64 %6107, 29
  %6113 = load i64, i64* %6, align 8
  %6114 = add i64 %6113, -8
  %6115 = inttoptr i64 %6114 to i64*
  store i64 %6112, i64* %6115, align 8
  store i64 %6114, i64* %6, align 8
  store i64 %6111, i64* %3, align 8
  %6116 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %6095)
  %6117 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6118 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %6119 = and i32 %6117, 255
  %6120 = tail call i32 @llvm.ctpop.i32(i32 %6119)
  %6121 = trunc i32 %6120 to i8
  %6122 = and i8 %6121, 1
  %6123 = xor i8 %6122, 1
  store i8 %6123, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %6124 = icmp eq i32 %6117, 0
  %6125 = zext i1 %6124 to i8
  store i8 %6125, i8* %29, align 1
  %6126 = lshr i32 %6117, 31
  %6127 = trunc i32 %6126 to i8
  store i8 %6127, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v312 = select i1 %6124, i64 9, i64 37
  %6128 = add i64 %6118, %.v312
  store i64 %6128, i64* %3, align 8
  br i1 %6124, label %block_4200e7, label %block_.L_420103

block_4200e7:                                     ; preds = %block_.L_4200c1
  store i64 ptrtoint (%G__0x429684_type* @G__0x429684 to i64), i64* %RDI.i176, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6129 = add i64 %6128, -128055
  %6130 = add i64 %6128, 17
  %6131 = load i64, i64* %6, align 8
  %6132 = add i64 %6131, -8
  %6133 = inttoptr i64 %6132 to i64*
  store i64 %6130, i64* %6133, align 8
  store i64 %6132, i64* %6, align 8
  store i64 %6129, i64* %3, align 8
  %6134 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6116)
  %6135 = load i64, i64* %RBP.i, align 8
  %6136 = add i64 %6135, -25304
  %6137 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6138 = load i64, i64* %3, align 8
  %6139 = add i64 %6138, 6
  store i64 %6139, i64* %3, align 8
  %6140 = inttoptr i64 %6136 to i32*
  store i32 %6137, i32* %6140, align 4
  %6141 = load i64, i64* %3, align 8
  %6142 = add i64 %6141, 697
  br label %block_.L_4203b7

block_.L_420103:                                  ; preds = %block_.L_4200c1
  %6143 = load i64, i64* %RBP.i, align 8
  %6144 = add i64 %6143, -272
  store i64 %6144, i64* %RDI.i176, align 8
  store i64 and (i64 ptrtoint (%G__0x428778_type* @G__0x428778 to i64), i64 4294967295), i64* %RAX.i, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x428778_type* @G__0x428778 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i118, align 8
  %6145 = add i64 %6128, -127987
  %6146 = add i64 %6128, 19
  %6147 = load i64, i64* %6, align 8
  %6148 = add i64 %6147, -8
  %6149 = inttoptr i64 %6148 to i64*
  store i64 %6146, i64* %6149, align 8
  store i64 %6148, i64* %6, align 8
  store i64 %6145, i64* %3, align 8
  %6150 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %6116)
  %6151 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6152 = load i64, i64* %3, align 8
  store i8 0, i8* %14, align 1
  %6153 = and i32 %6151, 255
  %6154 = tail call i32 @llvm.ctpop.i32(i32 %6153)
  %6155 = trunc i32 %6154 to i8
  %6156 = and i8 %6155, 1
  %6157 = xor i8 %6156, 1
  store i8 %6157, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %6158 = icmp eq i32 %6151, 0
  %6159 = zext i1 %6158 to i8
  store i8 %6159, i8* %29, align 1
  %6160 = lshr i32 %6151, 31
  %6161 = trunc i32 %6160 to i8
  store i8 %6161, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v313 = select i1 %6158, i64 9, i64 619
  %6162 = add i64 %6152, %.v313
  store i64 %6162, i64* %3, align 8
  br i1 %6158, label %block_42011f, label %block_.L_420381

block_42011f:                                     ; preds = %block_.L_420103
  store i64 ptrtoint (%G__0x429f1f_type* @G__0x429f1f to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62da40_type* @G__0x62da40 to i64), i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6163 = add i64 %6162, -128111
  %6164 = add i64 %6162, 27
  %6165 = load i64, i64* %6, align 8
  %6166 = add i64 %6165, -8
  %6167 = inttoptr i64 %6166 to i64*
  store i64 %6164, i64* %6167, align 8
  store i64 %6166, i64* %6, align 8
  store i64 %6163, i64* %3, align 8
  %6168 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6150)
  %6169 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4296c5_type* @G__0x4296c5 to i64), i64* %RDI.i176, align 8
  %6170 = load i64, i64* %RBP.i, align 8
  %6171 = add i64 %6170, -25308
  %6172 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6173 = add i64 %6169, 16
  store i64 %6173, i64* %3, align 8
  %6174 = inttoptr i64 %6171 to i32*
  store i32 %6172, i32* %6174, align 4
  %6175 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6176 = add i64 %6175, -128154
  %6177 = add i64 %6175, 7
  %6178 = load i64, i64* %6, align 8
  %6179 = add i64 %6178, -8
  %6180 = inttoptr i64 %6179 to i64*
  store i64 %6177, i64* %6180, align 8
  store i64 %6179, i64* %6, align 8
  store i64 %6176, i64* %3, align 8
  %6181 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6168)
  %6182 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4296ee_type* @G__0x4296ee to i64), i64* %RDI.i176, align 8
  %6183 = load i64, i64* %RBP.i, align 8
  %6184 = add i64 %6183, -25312
  %6185 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6186 = add i64 %6182, 16
  store i64 %6186, i64* %3, align 8
  %6187 = inttoptr i64 %6184 to i32*
  store i32 %6185, i32* %6187, align 4
  %6188 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6189 = add i64 %6188, -128177
  %6190 = add i64 %6188, 7
  %6191 = load i64, i64* %6, align 8
  %6192 = add i64 %6191, -8
  %6193 = inttoptr i64 %6192 to i64*
  store i64 %6190, i64* %6193, align 8
  store i64 %6192, i64* %6, align 8
  store i64 %6189, i64* %3, align 8
  %6194 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6181)
  %6195 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429710_type* @G__0x429710 to i64), i64* %RDI.i176, align 8
  %6196 = load i64, i64* %RBP.i, align 8
  %6197 = add i64 %6196, -25316
  %6198 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6199 = add i64 %6195, 16
  store i64 %6199, i64* %3, align 8
  %6200 = inttoptr i64 %6197 to i32*
  store i32 %6198, i32* %6200, align 4
  %6201 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6202 = add i64 %6201, -128200
  %6203 = add i64 %6201, 7
  %6204 = load i64, i64* %6, align 8
  %6205 = add i64 %6204, -8
  %6206 = inttoptr i64 %6205 to i64*
  store i64 %6203, i64* %6206, align 8
  store i64 %6205, i64* %6, align 8
  store i64 %6202, i64* %3, align 8
  %6207 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6194)
  %6208 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429743_type* @G__0x429743 to i64), i64* %RDI.i176, align 8
  %6209 = load i64, i64* %RBP.i, align 8
  %6210 = add i64 %6209, -25320
  %6211 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6212 = add i64 %6208, 16
  store i64 %6212, i64* %3, align 8
  %6213 = inttoptr i64 %6210 to i32*
  store i32 %6211, i32* %6213, align 4
  %6214 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6215 = add i64 %6214, -128223
  %6216 = add i64 %6214, 7
  %6217 = load i64, i64* %6, align 8
  %6218 = add i64 %6217, -8
  %6219 = inttoptr i64 %6218 to i64*
  store i64 %6216, i64* %6219, align 8
  store i64 %6218, i64* %6, align 8
  store i64 %6215, i64* %3, align 8
  %6220 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6207)
  %6221 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429766_type* @G__0x429766 to i64), i64* %RDI.i176, align 8
  %6222 = load i64, i64* %RBP.i, align 8
  %6223 = add i64 %6222, -25324
  %6224 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6225 = add i64 %6221, 16
  store i64 %6225, i64* %3, align 8
  %6226 = inttoptr i64 %6223 to i32*
  store i32 %6224, i32* %6226, align 4
  %6227 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6228 = add i64 %6227, -128246
  %6229 = add i64 %6227, 7
  %6230 = load i64, i64* %6, align 8
  %6231 = add i64 %6230, -8
  %6232 = inttoptr i64 %6231 to i64*
  store i64 %6229, i64* %6232, align 8
  store i64 %6231, i64* %6, align 8
  store i64 %6228, i64* %3, align 8
  %6233 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6220)
  %6234 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x42979d_type* @G__0x42979d to i64), i64* %RDI.i176, align 8
  %6235 = load i64, i64* %RBP.i, align 8
  %6236 = add i64 %6235, -25328
  %6237 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6238 = add i64 %6234, 16
  store i64 %6238, i64* %3, align 8
  %6239 = inttoptr i64 %6236 to i32*
  store i32 %6237, i32* %6239, align 4
  %6240 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6241 = add i64 %6240, -128269
  %6242 = add i64 %6240, 7
  %6243 = load i64, i64* %6, align 8
  %6244 = add i64 %6243, -8
  %6245 = inttoptr i64 %6244 to i64*
  store i64 %6242, i64* %6245, align 8
  store i64 %6244, i64* %6, align 8
  store i64 %6241, i64* %3, align 8
  %6246 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6233)
  %6247 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4297ce_type* @G__0x4297ce to i64), i64* %RDI.i176, align 8
  %6248 = load i64, i64* %RBP.i, align 8
  %6249 = add i64 %6248, -25332
  %6250 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6251 = add i64 %6247, 16
  store i64 %6251, i64* %3, align 8
  %6252 = inttoptr i64 %6249 to i32*
  store i32 %6250, i32* %6252, align 4
  %6253 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6254 = add i64 %6253, -128292
  %6255 = add i64 %6253, 7
  %6256 = load i64, i64* %6, align 8
  %6257 = add i64 %6256, -8
  %6258 = inttoptr i64 %6257 to i64*
  store i64 %6255, i64* %6258, align 8
  store i64 %6257, i64* %6, align 8
  store i64 %6254, i64* %3, align 8
  %6259 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6246)
  %6260 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4297ff_type* @G__0x4297ff to i64), i64* %RDI.i176, align 8
  %6261 = load i64, i64* %RBP.i, align 8
  %6262 = add i64 %6261, -25336
  %6263 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6264 = add i64 %6260, 16
  store i64 %6264, i64* %3, align 8
  %6265 = inttoptr i64 %6262 to i32*
  store i32 %6263, i32* %6265, align 4
  %6266 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6267 = add i64 %6266, -128315
  %6268 = add i64 %6266, 7
  %6269 = load i64, i64* %6, align 8
  %6270 = add i64 %6269, -8
  %6271 = inttoptr i64 %6270 to i64*
  store i64 %6268, i64* %6271, align 8
  store i64 %6270, i64* %6, align 8
  store i64 %6267, i64* %3, align 8
  %6272 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6259)
  %6273 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429818_type* @G__0x429818 to i64), i64* %RDI.i176, align 8
  %6274 = load i64, i64* %RBP.i, align 8
  %6275 = add i64 %6274, -25340
  %6276 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6277 = add i64 %6273, 16
  store i64 %6277, i64* %3, align 8
  %6278 = inttoptr i64 %6275 to i32*
  store i32 %6276, i32* %6278, align 4
  %6279 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6280 = add i64 %6279, -128338
  %6281 = add i64 %6279, 7
  %6282 = load i64, i64* %6, align 8
  %6283 = add i64 %6282, -8
  %6284 = inttoptr i64 %6283 to i64*
  store i64 %6281, i64* %6284, align 8
  store i64 %6283, i64* %6, align 8
  store i64 %6280, i64* %3, align 8
  %6285 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6272)
  %6286 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429835_type* @G__0x429835 to i64), i64* %RDI.i176, align 8
  %6287 = load i64, i64* %RBP.i, align 8
  %6288 = add i64 %6287, -25344
  %6289 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6290 = add i64 %6286, 16
  store i64 %6290, i64* %3, align 8
  %6291 = inttoptr i64 %6288 to i32*
  store i32 %6289, i32* %6291, align 4
  %6292 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6293 = add i64 %6292, -128361
  %6294 = add i64 %6292, 7
  %6295 = load i64, i64* %6, align 8
  %6296 = add i64 %6295, -8
  %6297 = inttoptr i64 %6296 to i64*
  store i64 %6294, i64* %6297, align 8
  store i64 %6296, i64* %6, align 8
  store i64 %6293, i64* %3, align 8
  %6298 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6285)
  %6299 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x42986c_type* @G__0x42986c to i64), i64* %RDI.i176, align 8
  %6300 = load i64, i64* %RBP.i, align 8
  %6301 = add i64 %6300, -25348
  %6302 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6303 = add i64 %6299, 16
  store i64 %6303, i64* %3, align 8
  %6304 = inttoptr i64 %6301 to i32*
  store i32 %6302, i32* %6304, align 4
  %6305 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6306 = add i64 %6305, -128384
  %6307 = add i64 %6305, 7
  %6308 = load i64, i64* %6, align 8
  %6309 = add i64 %6308, -8
  %6310 = inttoptr i64 %6309 to i64*
  store i64 %6307, i64* %6310, align 8
  store i64 %6309, i64* %6, align 8
  store i64 %6306, i64* %3, align 8
  %6311 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6298)
  %6312 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x42989b_type* @G__0x42989b to i64), i64* %RDI.i176, align 8
  %6313 = load i64, i64* %RBP.i, align 8
  %6314 = add i64 %6313, -25352
  %6315 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6316 = add i64 %6312, 16
  store i64 %6316, i64* %3, align 8
  %6317 = inttoptr i64 %6314 to i32*
  store i32 %6315, i32* %6317, align 4
  %6318 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6319 = add i64 %6318, -128407
  %6320 = add i64 %6318, 7
  %6321 = load i64, i64* %6, align 8
  %6322 = add i64 %6321, -8
  %6323 = inttoptr i64 %6322 to i64*
  store i64 %6320, i64* %6323, align 8
  store i64 %6322, i64* %6, align 8
  store i64 %6319, i64* %3, align 8
  %6324 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6311)
  %6325 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4298c5_type* @G__0x4298c5 to i64), i64* %RDI.i176, align 8
  %6326 = load i64, i64* %RBP.i, align 8
  %6327 = add i64 %6326, -25356
  %6328 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6329 = add i64 %6325, 16
  store i64 %6329, i64* %3, align 8
  %6330 = inttoptr i64 %6327 to i32*
  store i32 %6328, i32* %6330, align 4
  %6331 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6332 = add i64 %6331, -128430
  %6333 = add i64 %6331, 7
  %6334 = load i64, i64* %6, align 8
  %6335 = add i64 %6334, -8
  %6336 = inttoptr i64 %6335 to i64*
  store i64 %6333, i64* %6336, align 8
  store i64 %6335, i64* %6, align 8
  store i64 %6332, i64* %3, align 8
  %6337 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6324)
  %6338 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4298f2_type* @G__0x4298f2 to i64), i64* %RDI.i176, align 8
  %6339 = load i64, i64* %RBP.i, align 8
  %6340 = add i64 %6339, -25360
  %6341 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6342 = add i64 %6338, 16
  store i64 %6342, i64* %3, align 8
  %6343 = inttoptr i64 %6340 to i32*
  store i32 %6341, i32* %6343, align 4
  %6344 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6345 = add i64 %6344, -128453
  %6346 = add i64 %6344, 7
  %6347 = load i64, i64* %6, align 8
  %6348 = add i64 %6347, -8
  %6349 = inttoptr i64 %6348 to i64*
  store i64 %6346, i64* %6349, align 8
  store i64 %6348, i64* %6, align 8
  store i64 %6345, i64* %3, align 8
  %6350 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6337)
  %6351 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429919_type* @G__0x429919 to i64), i64* %RDI.i176, align 8
  %6352 = load i64, i64* %RBP.i, align 8
  %6353 = add i64 %6352, -25364
  %6354 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6355 = add i64 %6351, 16
  store i64 %6355, i64* %3, align 8
  %6356 = inttoptr i64 %6353 to i32*
  store i32 %6354, i32* %6356, align 4
  %6357 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6358 = add i64 %6357, -128476
  %6359 = add i64 %6357, 7
  %6360 = load i64, i64* %6, align 8
  %6361 = add i64 %6360, -8
  %6362 = inttoptr i64 %6361 to i64*
  store i64 %6359, i64* %6362, align 8
  store i64 %6361, i64* %6, align 8
  store i64 %6358, i64* %3, align 8
  %6363 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6350)
  %6364 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x42994d_type* @G__0x42994d to i64), i64* %RDI.i176, align 8
  %6365 = load i64, i64* %RBP.i, align 8
  %6366 = add i64 %6365, -25368
  %6367 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6368 = add i64 %6364, 16
  store i64 %6368, i64* %3, align 8
  %6369 = inttoptr i64 %6366 to i32*
  store i32 %6367, i32* %6369, align 4
  %6370 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6371 = add i64 %6370, -128499
  %6372 = add i64 %6370, 7
  %6373 = load i64, i64* %6, align 8
  %6374 = add i64 %6373, -8
  %6375 = inttoptr i64 %6374 to i64*
  store i64 %6372, i64* %6375, align 8
  store i64 %6374, i64* %6, align 8
  store i64 %6371, i64* %3, align 8
  %6376 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6363)
  %6377 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429988_type* @G__0x429988 to i64), i64* %RDI.i176, align 8
  %6378 = load i64, i64* %RBP.i, align 8
  %6379 = add i64 %6378, -25372
  %6380 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6381 = add i64 %6377, 16
  store i64 %6381, i64* %3, align 8
  %6382 = inttoptr i64 %6379 to i32*
  store i32 %6380, i32* %6382, align 4
  %6383 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6384 = add i64 %6383, -128522
  %6385 = add i64 %6383, 7
  %6386 = load i64, i64* %6, align 8
  %6387 = add i64 %6386, -8
  %6388 = inttoptr i64 %6387 to i64*
  store i64 %6385, i64* %6388, align 8
  store i64 %6387, i64* %6, align 8
  store i64 %6384, i64* %3, align 8
  %6389 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6376)
  %6390 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4299b4_type* @G__0x4299b4 to i64), i64* %RDI.i176, align 8
  %6391 = load i64, i64* %RBP.i, align 8
  %6392 = add i64 %6391, -25376
  %6393 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6394 = add i64 %6390, 16
  store i64 %6394, i64* %3, align 8
  %6395 = inttoptr i64 %6392 to i32*
  store i32 %6393, i32* %6395, align 4
  %6396 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6397 = add i64 %6396, -128545
  %6398 = add i64 %6396, 7
  %6399 = load i64, i64* %6, align 8
  %6400 = add i64 %6399, -8
  %6401 = inttoptr i64 %6400 to i64*
  store i64 %6398, i64* %6401, align 8
  store i64 %6400, i64* %6, align 8
  store i64 %6397, i64* %3, align 8
  %6402 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6389)
  %6403 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x4299e7_type* @G__0x4299e7 to i64), i64* %RDI.i176, align 8
  %6404 = load i64, i64* %RBP.i, align 8
  %6405 = add i64 %6404, -25380
  %6406 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6407 = add i64 %6403, 16
  store i64 %6407, i64* %3, align 8
  %6408 = inttoptr i64 %6405 to i32*
  store i32 %6406, i32* %6408, align 4
  %6409 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6410 = add i64 %6409, -128568
  %6411 = add i64 %6409, 7
  %6412 = load i64, i64* %6, align 8
  %6413 = add i64 %6412, -8
  %6414 = inttoptr i64 %6413 to i64*
  store i64 %6411, i64* %6414, align 8
  store i64 %6413, i64* %6, align 8
  store i64 %6410, i64* %3, align 8
  %6415 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6402)
  %6416 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429a1d_type* @G__0x429a1d to i64), i64* %RDI.i176, align 8
  %6417 = load i64, i64* %RBP.i, align 8
  %6418 = add i64 %6417, -25384
  %6419 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6420 = add i64 %6416, 16
  store i64 %6420, i64* %3, align 8
  %6421 = inttoptr i64 %6418 to i32*
  store i32 %6419, i32* %6421, align 4
  %6422 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6423 = add i64 %6422, -128591
  %6424 = add i64 %6422, 7
  %6425 = load i64, i64* %6, align 8
  %6426 = add i64 %6425, -8
  %6427 = inttoptr i64 %6426 to i64*
  store i64 %6424, i64* %6427, align 8
  store i64 %6426, i64* %6, align 8
  store i64 %6423, i64* %3, align 8
  %6428 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6415)
  %6429 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429a43_type* @G__0x429a43 to i64), i64* %RDI.i176, align 8
  %6430 = load i64, i64* %RBP.i, align 8
  %6431 = add i64 %6430, -25388
  %6432 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6433 = add i64 %6429, 16
  store i64 %6433, i64* %3, align 8
  %6434 = inttoptr i64 %6431 to i32*
  store i32 %6432, i32* %6434, align 4
  %6435 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6436 = add i64 %6435, -128614
  %6437 = add i64 %6435, 7
  %6438 = load i64, i64* %6, align 8
  %6439 = add i64 %6438, -8
  %6440 = inttoptr i64 %6439 to i64*
  store i64 %6437, i64* %6440, align 8
  store i64 %6439, i64* %6, align 8
  store i64 %6436, i64* %3, align 8
  %6441 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6428)
  %6442 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429a69_type* @G__0x429a69 to i64), i64* %RDI.i176, align 8
  %6443 = load i64, i64* %RBP.i, align 8
  %6444 = add i64 %6443, -25392
  %6445 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6446 = add i64 %6442, 16
  store i64 %6446, i64* %3, align 8
  %6447 = inttoptr i64 %6444 to i32*
  store i32 %6445, i32* %6447, align 4
  %6448 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6449 = add i64 %6448, -128637
  %6450 = add i64 %6448, 7
  %6451 = load i64, i64* %6, align 8
  %6452 = add i64 %6451, -8
  %6453 = inttoptr i64 %6452 to i64*
  store i64 %6450, i64* %6453, align 8
  store i64 %6452, i64* %6, align 8
  store i64 %6449, i64* %3, align 8
  %6454 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6441)
  %6455 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429a93_type* @G__0x429a93 to i64), i64* %RDI.i176, align 8
  %6456 = load i64, i64* %RBP.i, align 8
  %6457 = add i64 %6456, -25396
  %6458 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6459 = add i64 %6455, 16
  store i64 %6459, i64* %3, align 8
  %6460 = inttoptr i64 %6457 to i32*
  store i32 %6458, i32* %6460, align 4
  %6461 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6462 = add i64 %6461, -128660
  %6463 = add i64 %6461, 7
  %6464 = load i64, i64* %6, align 8
  %6465 = add i64 %6464, -8
  %6466 = inttoptr i64 %6465 to i64*
  store i64 %6463, i64* %6466, align 8
  store i64 %6465, i64* %6, align 8
  store i64 %6462, i64* %3, align 8
  %6467 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6454)
  %6468 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x429f1f_type* @G__0x429f1f to i64), i64* %RDI.i176, align 8
  store i64 ptrtoint (%G__0x62da40_type* @G__0x62da40 to i64), i64* %RSI.i118, align 8
  %6469 = load i64, i64* %RBP.i, align 8
  %6470 = add i64 %6469, -25400
  %6471 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6472 = add i64 %6468, 26
  store i64 %6472, i64* %3, align 8
  %6473 = inttoptr i64 %6470 to i32*
  store i32 %6471, i32* %6473, align 4
  %6474 = load i64, i64* %3, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6475 = add i64 %6474, -128693
  %6476 = add i64 %6474, 7
  %6477 = load i64, i64* %6, align 8
  %6478 = add i64 %6477, -8
  %6479 = inttoptr i64 %6478 to i64*
  store i64 %6476, i64* %6479, align 8
  store i64 %6478, i64* %6, align 8
  store i64 %6475, i64* %3, align 8
  %6480 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6467)
  %6481 = load i64, i64* %RBP.i, align 8
  %6482 = add i64 %6481, -860
  %6483 = load i64, i64* %3, align 8
  %6484 = add i64 %6483, 10
  store i64 %6484, i64* %3, align 8
  %6485 = inttoptr i64 %6482 to i32*
  store i32 0, i32* %6485, align 4
  %6486 = load i64, i64* %RBP.i, align 8
  %6487 = add i64 %6486, -25404
  %6488 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6489 = load i64, i64* %3, align 8
  %6490 = add i64 %6489, 6
  store i64 %6490, i64* %3, align 8
  %6491 = inttoptr i64 %6487 to i32*
  store i32 %6488, i32* %6491, align 4
  %6492 = load i64, i64* %3, align 8
  %6493 = add i64 %6492, 54
  br label %block_.L_4203b2

block_.L_420381:                                  ; preds = %block_.L_420103
  %6494 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  store i8 0, i8* %14, align 1
  %6495 = and i32 %6494, 255
  %6496 = tail call i32 @llvm.ctpop.i32(i32 %6495)
  %6497 = trunc i32 %6496 to i8
  %6498 = and i8 %6497, 1
  %6499 = xor i8 %6498, 1
  store i8 %6499, i8* %21, align 1
  store i8 0, i8* %26, align 1
  %6500 = icmp eq i32 %6494, 0
  %6501 = zext i1 %6500 to i8
  store i8 %6501, i8* %29, align 1
  %6502 = lshr i32 %6494, 31
  %6503 = trunc i32 %6502 to i8
  store i8 %6503, i8* %32, align 1
  store i8 0, i8* %38, align 1
  %.v314 = select i1 %6500, i64 14, i64 44
  %6504 = add i64 %6162, %.v314
  store i64 %6504, i64* %3, align 8
  br i1 %6500, label %block_42038f, label %block_.L_4203ad

block_42038f:                                     ; preds = %block_.L_420381
  store i64 ptrtoint (%G__0x429359_type* @G__0x429359 to i64), i64* %RDI.i176, align 8
  %6505 = load i64, i64* %RBP.i, align 8
  %6506 = add i64 %6505, -272
  store i64 %6506, i64* %RSI.i118, align 8
  store i8 0, i8* %AL.i.pre-phi, align 1
  %6507 = add i64 %6504, -128735
  %6508 = add i64 %6504, 24
  %6509 = load i64, i64* %6, align 8
  %6510 = add i64 %6509, -8
  %6511 = inttoptr i64 %6510 to i64*
  store i64 %6508, i64* %6511, align 8
  store i64 %6510, i64* %6, align 8
  store i64 %6507, i64* %3, align 8
  %6512 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %6150)
  %6513 = load i64, i64* %RBP.i, align 8
  %6514 = add i64 %6513, -25408
  %6515 = load i32, i32* %EAX.i2261.pre-phi, align 4
  %6516 = load i64, i64* %3, align 8
  %6517 = add i64 %6516, 6
  store i64 %6517, i64* %3, align 8
  %6518 = inttoptr i64 %6514 to i32*
  store i32 %6515, i32* %6518, align 4
  %.pre245 = load i64, i64* %3, align 8
  br label %block_.L_4203ad

block_.L_4203ad:                                  ; preds = %block_.L_420381, %block_42038f
  %6519 = phi i64 [ %6504, %block_.L_420381 ], [ %.pre245, %block_42038f ]
  %MEMORY.76 = phi %struct.Memory* [ %6150, %block_.L_420381 ], [ %6512, %block_42038f ]
  %6520 = add i64 %6519, 5
  store i64 %6520, i64* %3, align 8
  br label %block_.L_4203b2

block_.L_4203b2:                                  ; preds = %block_.L_4203ad, %block_42011f
  %storemerge201 = phi i64 [ %6493, %block_42011f ], [ %6520, %block_.L_4203ad ]
  %MEMORY.77 = phi %struct.Memory* [ %6480, %block_42011f ], [ %MEMORY.76, %block_.L_4203ad ]
  %6521 = add i64 %storemerge201, 5
  store i64 %6521, i64* %3, align 8
  br label %block_.L_4203b7

block_.L_4203b7:                                  ; preds = %block_.L_4203b2, %block_4200e7
  %storemerge200 = phi i64 [ %6142, %block_4200e7 ], [ %6521, %block_.L_4203b2 ]
  %MEMORY.78 = phi %struct.Memory* [ %6134, %block_4200e7 ], [ %MEMORY.77, %block_.L_4203b2 ]
  %6522 = add i64 %storemerge200, 5
  store i64 %6522, i64* %3, align 8
  br label %block_.L_4203bc

block_.L_4203bc:                                  ; preds = %block_.L_4203b7, %block_4200bc
  %storemerge199 = phi i64 [ %6108, %block_4200bc ], [ %6522, %block_.L_4203b7 ]
  %MEMORY.79 = phi %struct.Memory* [ %6095, %block_4200bc ], [ %MEMORY.78, %block_.L_4203b7 ]
  %6523 = add i64 %storemerge199, 5
  store i64 %6523, i64* %3, align 8
  br label %block_.L_4203c1

block_.L_4203c1:                                  ; preds = %block_.L_4203bc, %block_420013
  %storemerge198 = phi i64 [ %6087, %block_420013 ], [ %6523, %block_.L_4203bc ]
  %MEMORY.80 = phi %struct.Memory* [ %6079, %block_420013 ], [ %MEMORY.79, %block_.L_4203bc ]
  %6524 = add i64 %storemerge198, 20
  store i64 %6524, i64* %3, align 8
  br label %block_.L_4203d5

block_.L_4203d5:                                  ; preds = %block_.L_4203c1, %block_41fefd
  %storemerge197 = phi i64 [ %5877, %block_41fefd ], [ %6524, %block_.L_4203c1 ]
  %MEMORY.81 = phi %struct.Memory* [ %call2_41ff0b, %block_41fefd ], [ %MEMORY.80, %block_.L_4203c1 ]
  %6525 = add i64 %storemerge197, 5
  store i64 %6525, i64* %3, align 8
  br label %block_.L_4203da

block_.L_4203da:                                  ; preds = %block_.L_4203d5, %block_41fe38
  %storemerge196 = phi i64 [ %5824, %block_41fe38 ], [ %6525, %block_.L_4203d5 ]
  %MEMORY.82 = phi %struct.Memory* [ %call2_41fe76, %block_41fe38 ], [ %MEMORY.81, %block_.L_4203d5 ]
  %6526 = add i64 %storemerge196, 5
  store i64 %6526, i64* %3, align 8
  br label %block_.L_4203df

block_.L_4203df:                                  ; preds = %block_.L_4203da, %block_41fe03
  %storemerge195 = phi i64 [ %5765, %block_41fe03 ], [ %6526, %block_.L_4203da ]
  %MEMORY.83 = phi %struct.Memory* [ %5747, %block_41fe03 ], [ %MEMORY.82, %block_.L_4203da ]
  %6527 = add i64 %storemerge195, 5
  store i64 %6527, i64* %3, align 8
  br label %block_.L_4203e4

block_.L_4203e4:                                  ; preds = %block_.L_4203df, %block_41fd8f
  %storemerge194 = phi i64 [ %5739, %block_41fd8f ], [ %6527, %block_.L_4203df ]
  %MEMORY.84 = phi %struct.Memory* [ %5731, %block_41fd8f ], [ %MEMORY.83, %block_.L_4203df ]
  %6528 = add i64 %storemerge194, 5
  store i64 %6528, i64* %3, align 8
  br label %block_.L_4203e9

block_.L_4203e9:                                  ; preds = %block_.L_4203e4, %block_41fcf2
  %storemerge193 = phi i64 [ %5659, %block_41fcf2 ], [ %6528, %block_.L_4203e4 ]
  %MEMORY.85 = phi %struct.Memory* [ %call2_41fd5f, %block_41fcf2 ], [ %MEMORY.84, %block_.L_4203e4 ]
  %6529 = add i64 %storemerge193, 5
  store i64 %6529, i64* %3, align 8
  br label %block_.L_4203ee

block_.L_4203ee:                                  ; preds = %block_.L_4203e9, %block_41fcc7
  %storemerge192 = phi i64 [ %5559, %block_41fcc7 ], [ %6529, %block_.L_4203e9 ]
  %MEMORY.86 = phi %struct.Memory* [ %5546, %block_41fcc7 ], [ %MEMORY.85, %block_.L_4203e9 ]
  %6530 = add i64 %storemerge192, 5
  store i64 %6530, i64* %3, align 8
  br label %block_.L_4203f3

block_.L_4203f3:                                  ; preds = %block_.L_4203ee, %block_41fc5e
  %storemerge191 = phi i64 [ %5538, %block_41fc5e ], [ %6530, %block_.L_4203ee ]
  %MEMORY.87 = phi %struct.Memory* [ %5513, %block_41fc5e ], [ %MEMORY.86, %block_.L_4203ee ]
  %6531 = add i64 %storemerge191, 5
  store i64 %6531, i64* %3, align 8
  br label %block_.L_4203f8

block_.L_4203f8:                                  ; preds = %block_.L_4203f3, %block_41fc2e
  %storemerge190 = phi i64 [ %5460, %block_41fc2e ], [ %6531, %block_.L_4203f3 ]
  %MEMORY.88 = phi %struct.Memory* [ %call2_41fc2e, %block_41fc2e ], [ %MEMORY.87, %block_.L_4203f3 ]
  %6532 = add i64 %storemerge190, 5
  store i64 %6532, i64* %3, align 8
  br label %block_.L_4203fd

block_.L_4203fd:                                  ; preds = %block_.L_4203f8, %block_41fbf7
  %storemerge189 = phi i64 [ %5433, %block_41fbf7 ], [ %6532, %block_.L_4203f8 ]
  %MEMORY.89 = phi %struct.Memory* [ %call2_41fbfe, %block_41fbf7 ], [ %MEMORY.88, %block_.L_4203f8 ]
  %6533 = add i64 %storemerge189, 5
  store i64 %6533, i64* %3, align 8
  br label %block_.L_420402

block_.L_420402:                                  ; preds = %block_.L_4203fd, %block_41fbb9
  %storemerge188 = phi i64 [ %5404, %block_41fbb9 ], [ %6533, %block_.L_4203fd ]
  %MEMORY.90 = phi %struct.Memory* [ %call2_41fbc7, %block_41fbb9 ], [ %MEMORY.89, %block_.L_4203fd ]
  %6534 = add i64 %storemerge188, 5
  store i64 %6534, i64* %3, align 8
  br label %block_.L_420407

block_.L_420407:                                  ; preds = %block_.L_420402, %block_41fb7b
  %storemerge187 = phi i64 [ %5351, %block_41fb7b ], [ %6534, %block_.L_420402 ]
  %MEMORY.91 = phi %struct.Memory* [ %call2_41fb89, %block_41fb7b ], [ %MEMORY.90, %block_.L_420402 ]
  %6535 = add i64 %storemerge187, 5
  store i64 %6535, i64* %3, align 8
  br label %block_.L_42040c

block_.L_42040c:                                  ; preds = %block_.L_420407, %block_41fb1c
  %storemerge186 = phi i64 [ %5297, %block_41fb1c ], [ %6535, %block_.L_420407 ]
  %MEMORY.92 = phi %struct.Memory* [ %call2_41fb4b, %block_41fb1c ], [ %MEMORY.91, %block_.L_420407 ]
  %6536 = add i64 %storemerge186, 5
  store i64 %6536, i64* %3, align 8
  br label %block_.L_420411

block_.L_420411:                                  ; preds = %block_.L_42040c, %block_41fa8b
  %storemerge182 = phi i64 [ %5158, %block_41fa8b ], [ %6536, %block_.L_42040c ]
  %MEMORY.93 = phi %struct.Memory* [ %call2_41fa8b, %block_41fa8b ], [ %MEMORY.92, %block_.L_42040c ]
  %6537 = add i64 %storemerge182, 5
  store i64 %6537, i64* %3, align 8
  br label %block_.L_420416

block_.L_420416:                                  ; preds = %block_.L_420411, %block_.L_41fa53
  %storemerge181 = phi i64 [ %5115, %block_.L_41fa53 ], [ %6537, %block_.L_420411 ]
  %MEMORY.94 = phi %struct.Memory* [ %5083, %block_.L_41fa53 ], [ %MEMORY.93, %block_.L_420411 ]
  %6538 = add i64 %storemerge181, 5
  store i64 %6538, i64* %3, align 8
  br label %block_.L_42041b

block_.L_42041b:                                  ; preds = %block_.L_420416, %block_.L_41f9ad
  %storemerge180 = phi i64 [ %5061, %block_.L_41f9ad ], [ %6538, %block_.L_420416 ]
  %MEMORY.95 = phi %struct.Memory* [ %call2_41f9f0, %block_.L_41f9ad ], [ %MEMORY.94, %block_.L_420416 ]
  %6539 = add i64 %storemerge180, 5
  store i64 %6539, i64* %3, align 8
  br label %block_.L_420420

block_.L_420420:                                  ; preds = %block_.L_42041b, %block_41f925
  %storemerge179 = phi i64 [ %4946, %block_41f925 ], [ %6539, %block_.L_42041b ]
  %MEMORY.96 = phi %struct.Memory* [ %4923, %block_41f925 ], [ %MEMORY.95, %block_.L_42041b ]
  %6540 = add i64 %storemerge179, 5
  store i64 %6540, i64* %3, align 8
  br label %block_.L_420425

block_.L_420425:                                  ; preds = %block_.L_420420, %block_.L_41f8fa
  %storemerge178 = phi i64 [ %4915, %block_.L_41f8fa ], [ %6540, %block_.L_420420 ]
  %MEMORY.97 = phi %struct.Memory* [ %MEMORY.68, %block_.L_41f8fa ], [ %MEMORY.96, %block_.L_420420 ]
  %6541 = add i64 %storemerge178, 5
  store i64 %6541, i64* %3, align 8
  br label %block_.L_42042a

block_.L_42042a:                                  ; preds = %block_.L_420425, %block_.L_41f805
  %storemerge175 = phi i64 [ %4702, %block_.L_41f805 ], [ %6541, %block_.L_420425 ]
  %MEMORY.98 = phi %struct.Memory* [ %MEMORY.67, %block_.L_41f805 ], [ %MEMORY.97, %block_.L_420425 ]
  %6542 = add i64 %storemerge175, 5
  store i64 %6542, i64* %3, align 8
  br label %block_.L_42042f

block_.L_42042f:                                  ; preds = %block_.L_42042a, %block_41f712
  %storemerge173 = phi i64 [ %4546, %block_41f712 ], [ %6542, %block_.L_42042a ]
  %MEMORY.99 = phi %struct.Memory* [ %call2_41f72f, %block_41f712 ], [ %MEMORY.98, %block_.L_42042a ]
  %6543 = add i64 %storemerge173, 5
  store i64 %6543, i64* %3, align 8
  br label %block_.L_420434

block_.L_420434:                                  ; preds = %block_.L_42042f, %block_.L_41f6d8
  %storemerge168 = phi i64 [ %4516, %block_.L_41f6d8 ], [ %6543, %block_.L_42042f ]
  %MEMORY.100 = phi %struct.Memory* [ %call2_41f6e2, %block_.L_41f6d8 ], [ %MEMORY.99, %block_.L_42042f ]
  %6544 = add i64 %storemerge168, 5
  store i64 %6544, i64* %3, align 8
  br label %block_.L_420439

block_.L_420439:                                  ; preds = %block_.L_420434, %block_41f47f
  %storemerge166 = phi i64 [ %4299, %block_41f47f ], [ %6544, %block_.L_420434 ]
  %MEMORY.101 = phi %struct.Memory* [ %call2_41f486, %block_41f47f ], [ %MEMORY.100, %block_.L_420434 ]
  %6545 = add i64 %storemerge166, 5
  store i64 %6545, i64* %3, align 8
  br label %block_.L_42043e

block_.L_42043e:                                  ; preds = %block_.L_420439, %block_.L_41f454
  %storemerge165 = phi i64 [ %4270, %block_.L_41f454 ], [ %6545, %block_.L_420439 ]
  %MEMORY.102 = phi %struct.Memory* [ %4232, %block_.L_41f454 ], [ %MEMORY.101, %block_.L_420439 ]
  %6546 = add i64 %storemerge165, 5
  store i64 %6546, i64* %3, align 8
  br label %block_.L_420443

block_.L_420443:                                  ; preds = %block_.L_42043e, %block_.L_41f3a8
  %storemerge164 = phi i64 [ %4179, %block_.L_41f3a8 ], [ %6546, %block_.L_42043e ]
  %MEMORY.103 = phi %struct.Memory* [ %MEMORY.58, %block_.L_41f3a8 ], [ %MEMORY.102, %block_.L_42043e ]
  %6547 = add i64 %storemerge164, 5
  store i64 %6547, i64* %3, align 8
  br label %block_.L_420448

block_.L_420448:                                  ; preds = %block_.L_420443, %block_41f23e
  %storemerge163 = phi i64 [ %3978, %block_41f23e ], [ %6547, %block_.L_420443 ]
  %MEMORY.104 = phi %struct.Memory* [ %3970, %block_41f23e ], [ %MEMORY.103, %block_.L_420443 ]
  %6548 = add i64 %storemerge163, 5
  store i64 %6548, i64* %3, align 8
  br label %block_.L_42044d

block_.L_42044d:                                  ; preds = %block_.L_420448, %block_41f1e4
  %storemerge162 = phi i64 [ %3917, %block_41f1e4 ], [ %6548, %block_.L_420448 ]
  %MEMORY.105 = phi %struct.Memory* [ %3909, %block_41f1e4 ], [ %MEMORY.104, %block_.L_420448 ]
  %6549 = add i64 %storemerge162, 5
  store i64 %6549, i64* %3, align 8
  br label %block_.L_420452

block_.L_420452:                                  ; preds = %block_.L_42044d, %block_41f1a1
  %storemerge161 = phi i64 [ %3856, %block_41f1a1 ], [ %6549, %block_.L_42044d ]
  %MEMORY.106 = phi %struct.Memory* [ %3836, %block_41f1a1 ], [ %MEMORY.105, %block_.L_42044d ]
  %6550 = add i64 %storemerge161, 5
  store i64 %6550, i64* %3, align 8
  br label %block_.L_420457

block_.L_420457:                                  ; preds = %block_.L_420452, %block_41f153
  %storemerge160 = phi i64 [ %3828, %block_41f153 ], [ %6550, %block_.L_420452 ]
  %MEMORY.107 = phi %struct.Memory* [ %3820, %block_41f153 ], [ %MEMORY.106, %block_.L_420452 ]
  %6551 = add i64 %storemerge160, 5
  store i64 %6551, i64* %3, align 8
  br label %block_.L_42045c

block_.L_42045c:                                  ; preds = %block_.L_420457, %block_41f128
  %storemerge159 = phi i64 [ %3781, %block_41f128 ], [ %6551, %block_.L_420457 ]
  %MEMORY.108 = phi %struct.Memory* [ %3763, %block_41f128 ], [ %MEMORY.107, %block_.L_420457 ]
  %6552 = add i64 %storemerge159, 5
  store i64 %6552, i64* %3, align 8
  br label %block_.L_420461

block_.L_420461:                                  ; preds = %block_.L_42045c, %block_41f0e6
  %storemerge158 = phi i64 [ %3755, %block_41f0e6 ], [ %6552, %block_.L_42045c ]
  %MEMORY.109 = phi %struct.Memory* [ %3741, %block_41f0e6 ], [ %MEMORY.108, %block_.L_42045c ]
  %6553 = add i64 %storemerge158, 5
  store i64 %6553, i64* %3, align 8
  br label %block_.L_420466

block_.L_420466:                                  ; preds = %block_.L_420461, %block_41f0a4
  %storemerge157 = phi i64 [ %3733, %block_41f0a4 ], [ %6553, %block_.L_420461 ]
  %MEMORY.110 = phi %struct.Memory* [ %3719, %block_41f0a4 ], [ %MEMORY.109, %block_.L_420461 ]
  %6554 = add i64 %storemerge157, 25
  store i64 %6554, i64* %3, align 8
  br label %block_.L_42047f

block_.L_42047f:                                  ; preds = %block_.L_420466, %block_41efde
  %storemerge156 = phi i64 [ %3625, %block_41efde ], [ %6554, %block_.L_420466 ]
  %MEMORY.111 = phi %struct.Memory* [ %3611, %block_41efde ], [ %MEMORY.110, %block_.L_420466 ]
  %6555 = add i64 %storemerge156, 5
  store i64 %6555, i64* %3, align 8
  br label %block_.L_420484

block_.L_420484:                                  ; preds = %block_.L_42047f, %block_.L_41efbd
  %storemerge155 = phi i64 [ %3603, %block_.L_41efbd ], [ %6555, %block_.L_42047f ]
  %MEMORY.112 = phi %struct.Memory* [ %call2_41ef9f, %block_.L_41efbd ], [ %MEMORY.111, %block_.L_42047f ]
  %6556 = add i64 %storemerge155, 5
  store i64 %6556, i64* %3, align 8
  br label %block_.L_420489

block_.L_420489:                                  ; preds = %block_.L_420484, %block_41ef28
  %storemerge154 = phi i64 [ %3563, %block_41ef28 ], [ %6556, %block_.L_420484 ]
  %MEMORY.113 = phi %struct.Memory* [ %3555, %block_41ef28 ], [ %MEMORY.112, %block_.L_420484 ]
  %6557 = add i64 %storemerge154, 5
  store i64 %6557, i64* %3, align 8
  br label %block_.L_42048e

block_.L_42048e:                                  ; preds = %block_.L_420489, %block_41eea5
  %storemerge153 = phi i64 [ %3491, %block_41eea5 ], [ %6557, %block_.L_420489 ]
  %MEMORY.114 = phi %struct.Memory* [ %call2_41ef02, %block_41eea5 ], [ %MEMORY.113, %block_.L_420489 ]
  %6558 = add i64 %storemerge153, 5
  store i64 %6558, i64* %3, align 8
  br label %block_.L_420493

block_.L_420493:                                  ; preds = %block_.L_42048e, %block_.L_41ee84
  %storemerge152 = phi i64 [ %3418, %block_.L_41ee84 ], [ %6558, %block_.L_42048e ]
  %MEMORY.115 = phi %struct.Memory* [ %MEMORY.56, %block_.L_41ee84 ], [ %MEMORY.114, %block_.L_42048e ]
  %6559 = add i64 %storemerge152, 5
  store i64 %6559, i64* %3, align 8
  br label %block_.L_420498

block_.L_420498:                                  ; preds = %block_.L_420493, %block_41ec3d
  %storemerge151 = phi i64 [ %3285, %block_41ec3d ], [ %6559, %block_.L_420493 ]
  %MEMORY.116 = phi %struct.Memory* [ %3277, %block_41ec3d ], [ %MEMORY.115, %block_.L_420493 ]
  %6560 = add i64 %storemerge151, 5
  store i64 %6560, i64* %3, align 8
  br label %block_.L_42049d

block_.L_42049d:                                  ; preds = %block_.L_420498, %block_.L_41ec06
  %storemerge149 = phi i64 [ %3128, %block_.L_41ec06 ], [ %6560, %block_.L_420498 ]
  %MEMORY.117 = phi %struct.Memory* [ %call2_41ec0d, %block_.L_41ec06 ], [ %MEMORY.116, %block_.L_420498 ]
  %6561 = add i64 %storemerge149, 5
  store i64 %6561, i64* %3, align 8
  br label %block_.L_4204a2

block_.L_4204a2:                                  ; preds = %block_.L_42049d, %block_.L_41ebc9
  %storemerge148 = phi i64 [ %3078, %block_.L_41ebc9 ], [ %6561, %block_.L_42049d ]
  %MEMORY.118 = phi %struct.Memory* [ %MEMORY.52, %block_.L_41ebc9 ], [ %MEMORY.117, %block_.L_42049d ]
  %6562 = add i64 %storemerge148, 10
  store i64 %6562, i64* %3, align 8
  br label %block_.L_4204ac

block_.L_4204ac:                                  ; preds = %block_.L_4204a2, %block_.L_41eac2
  %storemerge147 = phi i64 [ %2888, %block_.L_41eac2 ], [ %6562, %block_.L_4204a2 ]
  %MEMORY.119 = phi %struct.Memory* [ %MEMORY.47, %block_.L_41eac2 ], [ %MEMORY.118, %block_.L_4204a2 ]
  %6563 = add i64 %storemerge147, -9705
  br label %block_.L_41dec3.backedge
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_pushq__rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %3, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RBP, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_subq__0x6360___rsp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, -25440
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ult i64 %3, 25440
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %28
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -8
  %6 = load i32, i32* %EDI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -16
  %5 = load i64, i64* %RSI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4__MINUS0x354__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -852
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 4, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.read_rcfile(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.initialize_zobrist(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62dab0___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62c130___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x38___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 56, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edi___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %EDI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x2__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 2, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsi___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RSI, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.init_game(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.initialize_hash(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.clear_tt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.reset_ecache(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  store i64 0, i64* %RCX, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x2580___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 9600, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r8d___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %R8D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24864
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x3840___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 14400, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r8d___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %R8D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____r9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -15264
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %R9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x880b10(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x880b10_type* @G_0x880b10 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62e4f0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62e4f0_type* @G_0x62e4f0 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62ea14(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62ea14_type* @G_0x62ea14 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x864508(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x864508_type* @G_0x864508 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x8667a4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x8667a4_type* @G_0x8667a4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886be4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886be4_type* @G_0x886be4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62e510(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62e510_type* @G_0x62e510 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886bc0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x6130__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24880
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x28__0x8661d8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 40, i32* bitcast (%G_0x8661d8_type* @G_0x8661d8 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x5__0x86bd70(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 5, i32* bitcast (%G_0x86bd70_type* @G_0x86bd70 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x7530__0x8a05b4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 30000, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x7d0__0x886bc4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 2000, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x7d0__0x880b14(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 2000, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x28__0x880b18(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 40, i32* bitcast (%G_0x880b18_type* @G_0x880b18 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0xc8__0x62ea18(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 200, i32* bitcast (%G_0x62ea18_type* @G_0x62ea18 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x86bd60(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x62e9e4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x6134__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24884
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x8a2a04(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x358__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -856
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886b84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x6128__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24872
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__MINUS0x35c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -860
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 1, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886bbc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x62e524(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62e514(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x6124__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24868
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886a7c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886a7c_type* @G_0x886a7c to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86bd90(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886a60(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886a60_type* @G_0x886a60 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886b80(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886a78(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886a78_type* @G_0x886a78 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x633b54(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x880654(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x880654_type* @G_0x880654 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x6190__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24976
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__r9___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %R9, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsi__MINUS0x6198__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24984
  %5 = load i64, i64* %RSI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x6190__rbp____r9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24976
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %R9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x61a0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24992
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__r9___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %R9, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x61a8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25000
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx__MINUS0x61ac__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25004
  %6 = load i32, i32* %ECX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.memset_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x61a8__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25000
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x61ac__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25004
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x61a0__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24992
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x633b40___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movslq_0x62ea38___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx__0x84a3d0___rax_4_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i64, i64* %RAX, align 8
  %5 = shl i64 %4, 2
  %6 = add i64 %5, 8692688
  %7 = load i32, i32* %ECX, align 4
  %8 = load i64, i64* %PC, align 8
  %9 = add i64 %8, 7
  store i64 %9, i64* %PC, align 8
  %10 = inttoptr i64 %6 to i32*
  store i32 %7, i32* %10, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x62da80___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x62da80_type* @G_0x62da80 to i64*), align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x6198__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24984
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.setbuf_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x62da90___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x62da90_type* @G_0x62da90 to i64*), align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.start_up(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %9, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41debe(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42925b___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42925b_type* @G__0x42925b to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__0x0___al(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 2
  store i64 %5, i64* %PC, align 8
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.printf_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RDI, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61b0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25008
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.run_autotest(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24868
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e7b5(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x886b84___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl_0x8661bc___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  %8 = sub i32 %4, %7
  %9 = icmp ult i32 %4, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %4
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %4, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add nuw nsw i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41def1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__MINUS0x6134__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24884
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e7b5(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__MINUS0x358__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -856
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x86bd90(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x6158__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24920
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.think(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x6158__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24920
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x350__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -848
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x6150__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24912
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x348__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -840
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x6148__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24904
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x340__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -832
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41df82(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x86bd60(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e7b0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x4__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %6 = add i32 %5, -4
  %7 = icmp ult i32 %5, 4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41df9e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x3__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %6 = add i32 %5, -3
  %7 = icmp ult i32 %5, 3
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41dfba(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %6 = add i32 %5, -2
  %7 = icmp ult i32 %5, 2
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41dfba(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %6 = add i32 %5, -3
  %7 = icmp ult i32 %5, 3
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e01c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x2__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %6 = add i32 %5, -2
  %7 = icmp ult i32 %5, 2
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41dfe4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  %6 = add i32 %5, -1
  %7 = icmp eq i32 %5, 0
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e6d3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x1__0x886b84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %6 = add i32 %5, -1
  %7 = icmp eq i32 %5, 0
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e000(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x886b84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e6d3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x1__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %6 = add i32 %5, -1
  %7 = icmp eq i32 %5, 0
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x4__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %6 = add i32 %5, -4
  %7 = icmp ult i32 %5, 4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x5__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  %6 = add i32 %5, -5
  %7 = icmp ult i32 %5, 5
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x350__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -848
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -544
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq___rax____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = load i64, i64* %4, align 8
  store i64 %7, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx____rsp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = bitcast i64* %RSP to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x8__rax____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx__0x8__rsp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = add i64 %3, 16
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.comp_to_coord(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x350__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -848
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorl__esi___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  store i64 0, i64* %RSI, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -15264
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x633b40___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x84a3d0___rcx_4_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i64, i64* %RCX, align 8
  %5 = shl i64 %4, 2
  %6 = add i64 %5, 8692688
  %7 = load i32, i32* %EDX, align 4
  %8 = load i64, i64* %PC, align 8
  %9 = add i64 %8, 7
  store i64 %9, i64* %PC, align 8
  %10 = inttoptr i64 %6 to i32*
  store i32 %7, i32* %10, align 4
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = zext i64 %3 to i128
  %9 = or i128 %7, %8
  %10 = mul nsw i128 %9, 24
  %11 = trunc i128 %10 to i64
  store i64 %11, i64* %RCX, align 8
  %12 = sext i64 %11 to i128
  %13 = icmp ne i128 %12, %10
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i128 %10 to i32
  %17 = and i32 %16, 248
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %24, align 1
  %25 = lshr i64 %11, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %28, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__rcx___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %RCX, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = add i64 %4, %3
  store i64 %7, i64* %RAX, align 8
  %8 = icmp ult i64 %7, %3
  %9 = icmp ult i64 %7, %4
  %10 = or i1 %8, %9
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = trunc i64 %7 to i32
  %14 = and i32 %13, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i64 %4, %3
  %21 = xor i64 %20, %7
  %22 = lshr i64 %21, 4
  %23 = trunc i64 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i64 %7, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %7, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %3, 63
  %33 = lshr i64 %4, 63
  %34 = xor i64 %29, %32
  %35 = xor i64 %29, %33
  %36 = add nuw nsw i64 %34, %35
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x350__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -848
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x348__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -840
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x340__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -832
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx__0x10__rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 16
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.make(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %EDX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__0x1___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RSI, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = add i32 %6, 1
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RSI, align 8
  %9 = icmp eq i32 %6, -1
  %10 = icmp eq i32 %7, 0
  %11 = or i1 %9, %10
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %7, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %7, %6
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = zext i1 %10 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %27
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi__0x62ea38(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %ESI, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movslq__edx___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = sext i32 %4 to i64
  store i64 %7, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = shl i64 %3, 4
  store i64 %6, i64* %RCX, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8 = lshr i64 %3, 60
  %9 = trunc i64 %8 to i8
  %10 = and i8 %9, 1
  store i8 %10, i8* %7, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 240
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  store i8 %17, i8* %11, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20 = icmp eq i64 %6, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %19, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23 = lshr i64 %3, 59
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  store i8 %25, i8* %22, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x880b20___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x880b28___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86bd84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x86bd60___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  %9 = icmp ne i32 %6, 0
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %7, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, 16
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = xor i32 %27, %30
  %32 = xor i32 %27, 1
  %33 = add nuw nsw i32 %31, %32
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x86bd60(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.is_draw(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = and i32 %4, 255
  %9 = tail call i32 @llvm.ctpop.i32(i32 %8)
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = xor i8 %11, 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14, align 1
  %15 = icmp eq i32 %4, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i32 %4, 31
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e141(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x5__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 5, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e15f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x64__0x866790(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x866790_type* @G_0x866790 to i32*), align 8
  %6 = add i32 %5, -100
  %7 = icmp ult i32 %5, 100
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jle_.L_41e15a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4__0x866530(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 4, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x633b54___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorl__0x1___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = xor i64 %3, 1
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %RAX, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x633b54(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x28__0x85f3ec(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  %6 = add i32 %5, -40
  %7 = icmp ult i32 %5, 40
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jge_.L_41e1d2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = xor i1 %6, %9
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %10, i64 %rel_off2, i64 %rel_off1
  %13 = add i64 %.v, %3
  store i64 %13, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x85f3ec(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e1b0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -544
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x886740___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x61b8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25016
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e1cd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x886740___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x886740_type* @G__0x886740 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.strcat_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x61c0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25024
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e1d2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4285ec___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4285ec_type* @G__0x4285ec to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x44120a__rip____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x44120a__rip__type* @G_0x44120a__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_incl__eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 2
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = add i32 %6, 1
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  %9 = and i32 %7, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9)
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = xor i32 %7, %6
  %16 = lshr i32 %15, 4
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i32 %7, 0
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %7, 31
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %6, 31
  %27 = xor i32 %23, %26
  %28 = add nuw nsw i32 %27, %23
  %29 = icmp eq i32 %28, 2
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30, i8* %31, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x441202__rip_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, ptrtoint (%G_0x441202__rip__type* @G_0x441202__rip_ to i64)
  %6 = load i32, i32* %EAX, align 4
  %7 = add i64 %4, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x446310__rip____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x446310__rip__type* @G_0x446310__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssl_0x21cc4c__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, ptrtoint (%G_0x21cc4c__rip__type* @G_0x21cc4c__rip_ to i64)
  %7 = add i64 %5, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = inttoptr i64 %6 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = bitcast %union.VectorReg* %3 to float*
  store float %15, float* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 1
  %18 = getelementptr inbounds i8, i8* %4, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 0
  %21 = bitcast i64* %10 to i32*
  store i32 %20, i32* %21, align 1
  %22 = extractelement <2 x i32> %12, i32 1
  %23 = getelementptr inbounds i8, i8* %4, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = bitcast %union.VectorReg* %4 to i8*
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = bitcast %union.VectorReg* %4 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %12 = bitcast i64* %11 to <2 x i32>*
  %13 = load <2 x i32>, <2 x i32>* %12, align 1
  %14 = sitofp i32 %6 to float
  %15 = bitcast %union.VectorReg* %4 to float*
  store float %14, float* %15, align 1
  %16 = extractelement <2 x i32> %10, i32 1
  %17 = getelementptr inbounds i8, i8* %5, i64 4
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 1
  %19 = extractelement <2 x i32> %13, i32 0
  %20 = bitcast i64* %11 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %13, i32 1
  %22 = getelementptr inbounds i8, i8* %5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = bitcast [32 x %union.VectorReg]* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast [32 x %union.VectorReg]* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fdiv float %15, %16
  %18 = bitcast [32 x %union.VectorReg]* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = extractelement <2 x float> %7, i32 0
  %9 = fpext float %8 to double
  %10 = bitcast %union.VectorReg* %3 to double*
  store double %9, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0xa19c__rip____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0xa19c__rip__type* @G_0xa19c__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast [32 x %union.VectorReg]* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fmul double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %8 = load <2 x i32>, <2 x i32>* %7, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to <2 x i32>*
  %11 = load <2 x i32>, <2 x i32>* %10, align 1
  %.cast = bitcast <2 x i32> %8 to double
  %12 = fptrunc double %.cast to float
  %13 = bitcast %union.VectorReg* %3 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %8, i32 1
  %15 = getelementptr inbounds i8, i8* %4, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %11, i32 0
  %18 = bitcast i64* %9 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %11, i32 1
  %20 = getelementptr inbounds i8, i8* %4, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4284ed___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4284ed_type* @G__0x4284ed to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__0x1___sil(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %SIL = bitcast %union.anon* %3 to i8*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i8 1, i8* %SIL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x61c8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25032
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__sil__MINUS0x61c9__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %SIL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25033
  %6 = load i8, i8* %SIL, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 7
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb_MINUS0x61c9__rbp____al(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25033
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %AL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x4628ca__rip____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x4628ca__rip__type* @G_0x4628ca__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %EDX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x2102a0__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x2102a0__rip__type* @G_0x2102a0__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edi___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %EDI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssq__rdi___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = sitofp i64 %5 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = bitcast i64* %10 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssq__rdx___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = sitofp i64 %5 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = bitcast i64* %10 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_0xa12a__rip____xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, ptrtoint (%G_0xa12a__rip__type* @G_0xa12a__rip_ to i64)
  %7 = add i64 %5, 8
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %6 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %union.VectorReg* %3 to i32*
  store i32 %9, i32* %10, align 1
  %11 = getelementptr inbounds i8, i8* %4, i64 4
  %12 = bitcast i8* %11 to float*
  store float 0.000000e+00, float* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %14 = bitcast i64* %13 to float*
  store float 0.000000e+00, float* %14, align 1
  %15 = getelementptr inbounds i8, i8* %4, i64 12
  %16 = bitcast i8* %15 to float*
  store float 0.000000e+00, float* %16, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_addss__xmm2___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fadd float %15, %16
  %18 = bitcast %union.VectorReg* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_0xa11e__rip____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, ptrtoint (%G_0xa11e__rip__type* @G_0xa11e__rip_ to i64)
  %7 = add i64 %5, 8
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %6 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %union.VectorReg* %3 to i32*
  store i32 %9, i32* %10, align 1
  %11 = getelementptr inbounds i8, i8* %4, i64 4
  %12 = bitcast i8* %11 to float*
  store float 0.000000e+00, float* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %14 = bitcast i64* %13 to float*
  store float 0.000000e+00, float* %14, align 1
  %15 = getelementptr inbounds i8, i8* %4, i64 12
  %16 = bitcast i8* %15 to float*
  store float 0.000000e+00, float* %16, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = bitcast [32 x %union.VectorReg]* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast [32 x %union.VectorReg]* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fmul float %15, %16
  %18 = bitcast [32 x %union.VectorReg]* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42850a___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42850a_type* @G__0x42850a to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi__MINUS0x61d0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25040
  %6 = load i32, i32* %ESI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x61d0__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25040
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb_MINUS0x61c9__rbp____r9b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25033
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %R9B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61d4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25044
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__r9b___al(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %R9B, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %AL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss__xmm1__MINUS0x61d8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25048
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = inttoptr i64 %5 to float*
  store float %10, float* %11, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss__xmm2__MINUS0x61dc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25052
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = inttoptr i64 %5 to float*
  store float %10, float* %11, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x446248__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x446248__rip__type* @G_0x446248__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x21074e__rip____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x21074e__rip__type* @G_0x21074e__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edi___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %EDI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x4484d4__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x4484d4__rip__type* @G_0x4484d4__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx___r10d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %5 = load i32, i32* %EDX, align 4
  %6 = zext i32 %5 to i64
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r10d___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10D = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %R10D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssq__r10___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %R10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %R10, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = sitofp i64 %5 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = bitcast i64* %10 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssq__rdi___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = sitofp i64 %5 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = bitcast i64* %10 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0x61dc__rbp____xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -25052
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0x61d8__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -25048
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x428540___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x428540_type* @G__0x428540 to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x61e0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25056
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x61e0__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25056
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61e4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25060
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x468d72__rip____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x468d72__rip__type* @G_0x468d72__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x44da30__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x44da30__rip__type* @G_0x44da30__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssq__rdi___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = sitofp i64 %5 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = bitcast i64* %10 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0x61dc__rbp____xmm3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -25052
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_addss__xmm3___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fadd float %15, %16
  %18 = bitcast %union.VectorReg* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_divss__xmm2___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %5 = bitcast [32 x %union.VectorReg]* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast [32 x %union.VectorReg]* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fdiv float %15, %16
  %18 = bitcast [32 x %union.VectorReg]* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x4686f6__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x4686f6__rip__type* @G_0x4686f6__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42857c___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42857c_type* @G__0x42857c to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi__MINUS0x61e8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25064
  %6 = load i32, i32* %ESI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x61e8__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25064
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61ec__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25068
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x210654__rip____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x210654__rip__type* @G_0x210654__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x44615a__rip____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x44615a__rip__type* @G_0x44615a__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x468cf0__rip____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x468cf0__rip__type* @G_0x468cf0__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4285af___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4285af_type* @G__0x4285af to i64), i64 4294967295), i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 0, i64* %3, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__r8b___r9b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8B = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %R8B, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R9B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61f0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25072
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x447f0d__rip____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x447f0d__rip__type* @G_0x447f0d__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x482684__rip____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x482684__rip__type* @G_0x482684__rip_ to i64)
  %5 = add i64 %3, 6
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_incl__ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 2
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = add i32 %6, 1
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RCX, align 8
  %9 = and i32 %7, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9)
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = xor i32 %7, %6
  %16 = lshr i32 %15, 4
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i32 %7, 0
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %7, 31
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %6, 31
  %27 = xor i32 %23, %26
  %28 = add nuw nsw i32 %27, %23
  %29 = icmp eq i32 %28, 2
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30, i8* %31, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x61c8__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25032
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61f4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25076
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__0x1___al(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 2
  store i64 %5, i64* %PC, align 8
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0xfff0bdc0___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 4293967296, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0xf4240___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 1000000, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x8661c0___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x8661c0_type* @G_0x8661c0 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x61f8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25080
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx__MINUS0x61fc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25084
  %6 = load i32, i32* %ECX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.eval(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42926a___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42926a_type* @G__0x42926a to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x62ea18___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea18_type* @G_0x62ea18 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x886bb8___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x886bb8_type* @G_0x886bb8 to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x8667a0___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x8667a0_type* @G_0x8667a0 to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x61fc__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25084
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4292bb___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4292bb_type* @G__0x4292bb to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x633b40___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x633b40_type* @G_0x633b40 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x881df4___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x881df4_type* @G_0x881df4 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6200__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25088
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6204__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25092
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e556(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e508(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x350__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -848
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl_0x62db08___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = load i32, i32* bitcast (%G_0x62db08_type* @G_0x62db08 to i32*), align 8
  %8 = sub i32 %4, %7
  %9 = icmp ult i32 %4, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %4
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %4, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add nuw nsw i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e4d0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x34c__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -844
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*), align 8
  %8 = sub i32 %4, %7
  %9 = icmp ult i32 %4, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %4
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %4, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add nuw nsw i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e4ee(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4292d5___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4292d5_type* @G__0x4292d5 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6208__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25096
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e503(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorl__edi___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  store i64 0, i64* %RDI, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.CheckBadFlow(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e551(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e52e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e54c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4292de___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4292de_type* @G__0x4292de to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x620c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25100
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e6ce(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e5ad(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e58a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e5a8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6210__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25104
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e5f6(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e5d3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e5f1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6214__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25108
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e620(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4292e3___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4292e3_type* @G__0x4292e3 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6218__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25112
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e6c4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e64a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4292f6___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4292f6_type* @G__0x4292f6 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x621c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25116
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e6bf(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e674(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429309___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429309_type* @G__0x429309 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6220__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25120
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e6ba(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e69e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429324___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429324_type* @G__0x429324 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6224__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25124
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e6b5(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429341___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429341_type* @G__0x429341 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6228__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25128
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e7ab(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e6fd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x622c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25132
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e7a1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e727(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6230__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25136
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e79c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e751(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6234__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25140
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e797(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e77b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6238__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25144
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e792(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x623c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25148
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e7b0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e7b5(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e844(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__MINUS0x35c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -860
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e802(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429bef___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429bef_type* @G__0x429bef to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 1, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_subl_0x886b84___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = load i32, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %7, %6
  %20 = xor i32 %19, %8
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %8, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %8, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %6, 31
  %32 = lshr i32 %7, 31
  %33 = xor i32 %32, %31
  %34 = xor i32 %28, %31
  %35 = add nuw nsw i32 %34, %33
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6240__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25152
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.display_board(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e83f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429351___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429351_type* @G__0x429351 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x100___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 256, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -272
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x62da90___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x62da90_type* @G_0x62da90 to i64*), align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6244__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25156
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.rinput(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41e909(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e896(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x62e524(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e888(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e888(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x62ea38(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x62e514(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41e8de(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e8de(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x6170__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24944
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x886bbc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41e904(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41eac7(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.is_move(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41eac7(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x338__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -824
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.verify_coord(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41eaa4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x338__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -824
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x338__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -824
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x330__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -816
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x328__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -808
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x84a3d0___rax_4_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i64, i64* %RAX, align 8
  %5 = shl i64 %4, 2
  %6 = add i64 %5, 8692688
  %7 = load i32, i32* %EDX, align 4
  %8 = load i64, i64* %PC, align 8
  %9 = add i64 %8, 7
  store i64 %9, i64* %PC, align 8
  %10 = inttoptr i64 %6 to i32*
  store i32 %7, i32* %10, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x633b54___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorl__0x1___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = xor i64 %3, 1
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %RDX, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x633b54(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jge_.L_41ea4f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = xor i1 %6, %9
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %10, i64 %rel_off2, i64 %rel_off1
  %13 = add i64 %.v, %3
  store i64 %13, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ea2d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -272
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x6250__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25168
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41ea4a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x6258__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25176
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41ea4f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x85f3ec___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__0x1___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = add i32 %6, 1
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  %9 = icmp eq i32 %6, -1
  %10 = icmp eq i32 %7, 0
  %11 = or i1 %9, %10
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %7, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %7, %6
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = zext i1 %10 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %27
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x85f3ec(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41ea9f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x625c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25180
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41eac2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429359___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429359_type* @G__0x429359 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6260__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25184
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4204ac(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42936b___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42936b_type* @G__0x42936b to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.strstr_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = trunc i64 %3 to i32
  %8 = and i32 %7, 255
  %9 = tail call i32 @llvm.ctpop.i32(i32 %8)
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = xor i8 %11, 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14, align 1
  %15 = icmp eq i64 %3, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i64 %3, 63
  %19 = trunc i64 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41eb3b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -272
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x118__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -280
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x118__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -280
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpb__0x0____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = load i8, i8* %4, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = zext i8 %7 to i32
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9)
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15, align 1
  %16 = icmp eq i8 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i8 %7, 7
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41eb36(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl___rax____edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RAX to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = load i8, i8* %4, align 1
  %8 = sext i8 %7 to i64
  %9 = and i64 %8, 4294967295
  store i64 %9, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.tolower_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__al___cl(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %CL = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %AL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %CL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x118__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -280
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__cl____rdx_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %CL = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = bitcast i64* %RDX to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = load i8, i8* %CL, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 2
  store i64 %8, i64* %PC, align 8
  store i8 %6, i8* %5, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x1___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 1
  store i64 %6, i64* %RAX, align 8
  %7 = icmp eq i64 %3, -1
  %8 = icmp eq i64 %6, 0
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %6, %3
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = zext i1 %8 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %26
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41eaf5(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41eb3b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429374___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429374_type* @G__0x429374 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41eb68(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.free_hash(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.free_ecache(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.exit_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429379___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429379_type* @G__0x429379 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ebce(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41ebb8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x633b44(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41ebc9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4204a2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42937e___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42937e_type* @G__0x42937e to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41ec06(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429aeb___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429aeb_type* @G__0x429aeb to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ec17(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x35c__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -860
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.toggle_bool(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42049d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429386___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429386_type* @G__0x429386 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x5___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ecf6(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429aea___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429aea_type* @G__0x429aea to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x354__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -852
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x6___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 6
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -7
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x633b4c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x633b4c_type* @G_0x633b4c to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6264__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25188
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.rtime(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x6140__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24896
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x354__rbp____edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -852
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.perft(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42938c___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42938c_type* @G__0x42938c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x354__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -852
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x633b4c___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x633b4c_type* @G_0x633b4c to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6268__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25192
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x6140__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24896
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.rdifftime(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4293a8___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4293a8_type* @G__0x4293a8 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x96d3__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x96d3__rip__type* @G_0x96d3__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = extractelement <2 x float> %7, i32 0
  %9 = fpext float %8 to double
  %10 = bitcast %union.VectorReg* %3 to double*
  store double %9, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fdiv double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = bitcast [32 x %union.VectorReg]* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %4 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = extractelement <2 x i32> %9, i32 0
  %14 = bitcast [32 x %union.VectorReg]* %3 to i32*
  store i32 %13, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %5, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %20 = bitcast i64* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %12, i32 1
  %22 = getelementptr inbounds i8, i8* %5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x626c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25196
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420498(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4293b5___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4293b5_type* @G__0x4293b5 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ee89(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41ed41(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4293b9___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4293b9_type* @G__0x4293b9 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x84ad30___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x84ad30_type* @G__0x84ad30 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6270__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25200
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ee74(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62dab0_type* @G__0x62dab0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62c130___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62c130_type* @G__0x62c130 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x38___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 56, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__MINUS0x6130__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24880
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ed9f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 1, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86bd74(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86bd74_type* @G_0x86bd74 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86bd78(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86bd78_type* @G_0x86bd78 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x84a3d0___rax_4_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = shl i64 %3, 2
  %5 = add i64 %4, 8692688
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  store i32 0, i32* %8, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86bd60(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86bd60_type* @G_0x86bd60 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.ResetHandValue(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41ee84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420493(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4293e1___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4293e1_type* @G__0x4293e1 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ef0c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x8a2a04(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x2___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 2, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 1, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.signal_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x6278__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25208
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x428764___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x428764_type* @G__0x428764 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x627c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25212
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6280__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25216
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.BegForPartner(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42048e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4293e8___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4293e8_type* @G__0x4293e8 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ef79(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4293ee___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4293ee_type* @G__0x4293ee to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x946e__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, ptrtoint (%G_0x946e__rip__type* @G_0x946e__rip_ to i64)
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x864500___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x864500_type* @G_0x864500 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssl_0x63ae44___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 9
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %8 = load <2 x i32>, <2 x i32>* %7, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to <2 x i32>*
  %11 = load <2 x i32>, <2 x i32>* %10, align 1
  %12 = load i32, i32* bitcast (%G_0x63ae44_type* @G_0x63ae44 to i32*), align 8
  %13 = sitofp i32 %12 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %8, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %11, i32 0
  %19 = bitcast i64* %9 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %11, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsi2ssl_0x864500___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 9
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %8 = load <2 x i32>, <2 x i32>* %7, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to <2 x i32>*
  %11 = load <2 x i32>, <2 x i32>* %10, align 1
  %12 = load i32, i32* bitcast (%G_0x864500_type* @G_0x864500 to i32*), align 8
  %13 = sitofp i32 %12 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %8, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %11, i32 0
  %19 = bitcast i64* %9 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %11, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fdiv float %15, %16
  %18 = bitcast %union.VectorReg* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fmul double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = bitcast [32 x %union.VectorReg]* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast [32 x %union.VectorReg]* %3 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to double*
  %14 = load double, double* %13, align 1
  %15 = fptrunc double %14 to float
  %16 = bitcast [32 x %union.VectorReg]* %3 to float*
  store float %15, float* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 1
  %18 = getelementptr inbounds i8, i8* %5, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %12, i32 0
  %21 = bitcast i64* %10 to i32*
  store i32 %20, i32* %21, align 1
  %22 = extractelement <2 x i32> %12, i32 1
  %23 = getelementptr inbounds i8, i8* %5, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6284__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25220
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420489(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429416___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429416_type* @G__0x429416 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41efc2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x86679c___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x86679c_type* @G__0x86679c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41efbd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x86679c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x86679c_type* @G_0x86679c to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420484(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429414___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429414_type* @G__0x429414 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41efee(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86679c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86679c_type* @G_0x86679c to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42047f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42941b___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42941b_type* @G__0x42941b to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f00f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429422___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429422_type* @G__0x429422 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f03b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429427___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429427_type* @G__0x429427 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f067(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62e524(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62e524_type* @G_0x62e524 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429cf6___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429cf6_type* @G__0x429cf6 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f088(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42942c___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42942c_type* @G__0x42942c to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f0ca(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x8661bc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420466(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429432___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429432_type* @G__0x429432 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f10c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x8661bc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x633b54(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x633b54_type* @G_0x633b54 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x886b84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420461(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x429438___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x429438_type* @G__0x429438 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f137(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__MINUS0x358__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -856
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 1, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42045c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42943e___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42943e_type* @G__0x42943e to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f185(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.check_phase(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429443___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429443_type* @G__0x429443 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6288__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25224
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420457(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x42888d___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x42888d_type* @G__0x42888d to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f1be(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x8661bc___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x886b84(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x886b84_type* @G_0x886b84 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420452(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4288b4___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4288b4_type* @G__0x4288b4 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 4, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f218(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42946c___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42946c_type* @G__0x42946c to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x8a05b4___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x8a05b4_type* @G__0x8a05b4 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x5___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 5
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -6
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x628c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25228
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42044d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42944d___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42944d_type* @G__0x42944d to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f272(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x86bd64___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x86bd64_type* @G__0x86bd64 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6290__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25232
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420448(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429452___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429452_type* @G__0x429452 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f3c3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429458___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429458_type* @G__0x429458 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f341(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42945a___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42945a_type* @G__0x42945a to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x8661d8___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x8661d8_type* @G__0x8661d8 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x86bd70___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x86bd70_type* @G__0x86bd70 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62ea00___r8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62ea00_type* @G__0x62ea00 to i64), i64* %R8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x8a0a78___r9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x8a0a78_type* @G__0x8a0a78 to i64), i64* %R9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_imull__0x1770__0x86bd70___r10d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 12
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x86bd70_type* @G_0x86bd70 to i32*), align 8
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, 6000
  %9 = trunc i64 %8 to i32
  %10 = and i64 %8, 4294967280
  store i64 %10, i64* %3, align 8
  %11 = mul i64 %7, 25769803776000
  %12 = ashr exact i64 %11, 32
  %13 = icmp ne i64 %12, %8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 240
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_imull__0x64__0x62ea00___r11d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 9
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x62ea00_type* @G_0x62ea00 to i32*), align 8
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, 100
  %9 = trunc i64 %8 to i32
  %10 = and i64 %8, 4294967292
  store i64 %10, i64* %3, align 8
  %11 = mul i64 %7, 429496729600
  %12 = ashr exact i64 %11, 32
  %13 = icmp ne i64 %12, %8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 252
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__r11d___r10d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10D = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0
  %R11D = bitcast %union.anon* %4 to i32*
  %5 = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0
  %6 = load i32, i32* %R10D, align 4
  %7 = load i32, i32* %R11D, align 4
  %8 = load i64, i64* %PC, align 8
  %9 = add i64 %8, 3
  store i64 %9, i64* %PC, align 8
  %10 = add i32 %7, %6
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %5, align 8
  %12 = icmp ult i32 %10, %6
  %13 = icmp ult i32 %10, %7
  %14 = or i1 %12, %13
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %10, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i32 %7, %6
  %24 = xor i32 %23, %10
  %25 = lshr i32 %24, 4
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i32 %10, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %10, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i32 %6, 31
  %36 = lshr i32 %7, 31
  %37 = xor i32 %32, %35
  %38 = xor i32 %32, %36
  %39 = add nuw nsw i32 %37, %38
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r10d__0x8a05b4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R10D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x8a05b4___r10d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r10d__0x86bd64(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0
  %R10D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R10D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x86bd64_type* @G_0x86bd64 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6294__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25236
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41f3a8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429466___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429466_type* @G__0x429466 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x8a0a78___r8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x8a0a78_type* @G__0x8a0a78 to i64), i64* %R8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_imull__0x1770__0x86bd70___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 12
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x86bd70_type* @G_0x86bd70 to i32*), align 8
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, 6000
  %9 = trunc i64 %8 to i32
  %10 = and i64 %8, 4294967280
  store i64 %10, i64* %3, align 8
  %11 = mul i64 %7, 25769803776000
  %12 = ashr exact i64 %11, 32
  %13 = icmp ne i64 %12, %8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 240
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x8a05b4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x8a05b4___r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  %6 = load i32, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*), align 8
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r9d__0x86bd64(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R9D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x86bd64_type* @G_0x86bd64 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6298__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25240
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x86bd88(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420443(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42946f___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42946f_type* @G__0x42946f to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 6, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f459(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429469___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429469_type* @G__0x429469 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x880b14___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x880b14_type* @G__0x880b14 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x886bc4___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x886bc4_type* @G__0x886bc4 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x7___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 7
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -8
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x880b14(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x880b14_type* @G_0x880b14 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x629c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25244
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f43b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__0x886bc4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x886bc4_type* @G_0x886bc4 to i32*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = and i32 %5, 255
  %8 = tail call i32 @llvm.ctpop.i32(i32 %7)
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13, align 1
  %14 = icmp eq i32 %5, 0
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15, i8* %16, align 1
  %17 = lshr i32 %5, 31
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f454(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42043e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429476___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429476_type* @G__0x429476 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x7___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 7, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f490(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.ProcessHoldings(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420439(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42947e___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42947e_type* @G__0x42947e to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f6ec(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429486___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429486_type* @G__0x429486 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f50a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41f6d8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42948d___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42948d_type* @G__0x42948d to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f55e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62c170___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62c170_type* @G__0x62c170 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41f6d3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429498___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429498_type* @G__0x429498 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f5b2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41f6ce(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294a1___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294a1_type* @G__0x4294a1 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f611(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62c1b0___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62c1b0_type* @G__0x62c1b0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x3__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 3, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x886b88(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x886b88_type* @G_0x886b88 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41f6c9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294a9___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294a9_type* @G__0x4294a9 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f670(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x886b88(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x886b88_type* @G_0x886b88 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41f6c4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294b2___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294b2_type* @G__0x4294b2 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f6bf(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62c1f0___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62c1f0_type* @G__0x62c1f0 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4__0x85f154(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 4, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420434(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294b9___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294b9_type* @G__0x4294b9 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f744(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x6188__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24968
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__0x62e514(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 1, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42042f(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294c1___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294c1_type* @G__0x4294c1 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f80a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294c6___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294c6_type* @G__0x4294c6 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x62ea38___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62a0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25248
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jle_.L_41f805(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24864
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__0x62ea38(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movslq__edx___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %EDX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = sext i32 %4 to i64
  store i64 %7, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RDI, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = shl i64 %3, 4
  store i64 %6, i64* %RDI, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %8 = lshr i64 %3, 60
  %9 = trunc i64 %8 to i8
  %10 = and i8 %9, 1
  store i8 %10, i8* %7, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 240
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  store i8 %17, i8* %11, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %20 = icmp eq i64 %6, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %19, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %23 = lshr i64 %3, 59
  %24 = trunc i64 %23 to i8
  %25 = and i8 %24, 1
  store i8 %25, i8* %22, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %26, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__rdi___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %RDI, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = add i64 %4, %3
  store i64 %7, i64* %RCX, align 8
  %8 = icmp ult i64 %7, %3
  %9 = icmp ult i64 %7, %4
  %10 = or i1 %8, %9
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = trunc i64 %7 to i32
  %14 = and i32 %13, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i64 %4, %3
  %21 = xor i64 %20, %7
  %22 = lshr i64 %21, 4
  %23 = trunc i64 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i64 %7, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %7, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %3, 63
  %33 = lshr i64 %4, 63
  %34 = xor i64 %29, %32
  %35 = xor i64 %29, %33
  %36 = add nuw nsw i64 %34, %35
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq___rcx____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RCX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = load i64, i64* %4, align 8
  store i64 %7, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__0x880b20(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RDI, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* bitcast (%G_0x880b20_type* @G_0x880b20 to i64*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx__0x880b28(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* bitcast (%G_0x880b28_type* @G_0x880b28 to i64*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.unmake(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42042a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294d8___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294d8_type* @G__0x4294d8 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f8ff(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x1__0x62ea38(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x62ea38_type* @G_0x62ea38 to i32*), align 8
  %6 = add i32 %5, -1
  %7 = icmp eq i32 %5, 0
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %6, %5
  %17 = lshr i32 %16, 4
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i32 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %6, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %5, 31
  %28 = xor i32 %24, %27
  %29 = add nuw nsw i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jle_.L_41f8fa(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420425(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294df___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294df_type* @G__0x4294df to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f93e(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__MINUS0x6124__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24868
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 1, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420420(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294e4___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294e4_type* @G__0x4294e4 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f9fa(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41f9fa(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x1e__0x86bd7c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x86bd7c_type* @G_0x86bd7c to i32*), align 8
  %6 = add i32 %5, -30
  %7 = icmp ult i32 %5, 30
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %5, 16
  %17 = xor i32 %16, %6
  %18 = lshr i32 %17, 4
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %6, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %5, 31
  %29 = xor i32 %25, %28
  %30 = add nuw nsw i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f994(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62e4fc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62e4fc_type* @G_0x62e4fc to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x72__0x8661d0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x8661d0_type* @G_0x8661d0 to i32*), align 8
  %6 = add i32 %5, -114
  %7 = icmp ult i32 %5, 114
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = and i32 %6, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i32 %5, 16
  %17 = xor i32 %16, %6
  %18 = lshr i32 %17, 4
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %6, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %5, 31
  %29 = xor i32 %25, %28
  %30 = add nuw nsw i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41f9ad(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x62e500(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x62e500_type* @G_0x62e500 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x100___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 256, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x32__0x85f3ec(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 50, i32* bitcast (%G_0x85f3ec_type* @G_0x85f3ec to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__0x881de4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 0, i32* bitcast (%G_0x881de4_type* @G_0x881de4 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42041b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41fa58(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429af6___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429af6_type* @G__0x429af6 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fa58(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0__MINUS0x6128__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24872
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fa49(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__MINUS0x6128__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24872
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 1, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_41fa53(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420416(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41faa0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294e6___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294e6_type* @G__0x4294e6 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41faa0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.reset_board(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420411(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_je_.L_41fb55(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %BRANCH_TAKEN, align 1
  %6 = icmp ne i8 %5, 0
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %7 = add i64 %.v, %3
  store i64 %7, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.__ctype_b_loc_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq___rax____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = load i64, i64* %4, align 8
  store i64 %7, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x110__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -272
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = sext i32 %4 to i64
  store i64 %7, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %RDX, align 8
  %5 = shl i64 %4, 1
  %6 = add i64 %5, %3
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i64
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_andl__0x400___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  %6 = and i64 %3, 1024
  store i64 %6, i64* %RCX, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %8, align 1
  %.lobit = lshr exact i64 %6, 10
  %9 = trunc i64 %.lobit to i8
  %10 = xor i8 %9, 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10, i8* %11, align 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %ECX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = and i32 %4, 255
  %9 = tail call i32 @llvm.ctpop.i32(i32 %8)
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = xor i8 %11, 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12, i8* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14, align 1
  %15 = icmp eq i32 %4, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i32 %4, 31
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x10f__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -271
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x10e__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -270
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_andl__0x800___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 6
  store i64 %5, i64* %PC, align 8
  %6 = and i64 %3, 2048
  store i64 %6, i64* %RCX, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %8, align 1
  %.lobit = lshr exact i64 %6, 11
  %9 = trunc i64 %.lobit to i8
  %10 = xor i8 %9, 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10, i8* %11, align 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x6128__rbp____edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24872
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb_MINUS0x110__rbp____al(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -272
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %AL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb_MINUS0x10f__rbp____cl(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %CL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -271
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 6
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %CL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x10e__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -270
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl__al___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i8, i8* %AL, align 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = sext i8 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl__cl___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %CL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %5 = load i8, i8* %CL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = sext i8 %5 to i64
  %9 = and i64 %8, 4294967295
  store i64 %9, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x62a4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25252
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x62a4__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -25252
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.PutPiece(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42040c(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294e9___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294e9_type* @G__0x4294e9 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fb93(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.HandlePartner(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420407(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294e8___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294e8_type* @G__0x4294e8 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x8___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fbd1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x8___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 8
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -9
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420402(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294f1___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294f1_type* @G__0x4294f1 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fc08(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.HandlePtell(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203fd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294f7___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294f7_type* @G__0x4294f7 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fc38(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.run_epd_testsuite(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203f8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4288b1___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4288b1_type* @G__0x4288b1 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x2___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fca1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x886b80___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x886b80_type* @G__0x886b80 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x3___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 3
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_imull__0x64__0x886b80___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 8
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  %6 = sext i32 %5 to i64
  %7 = mul nsw i64 %6, 100
  %8 = trunc i64 %7 to i32
  %9 = and i64 %7, 4294967292
  store i64 %9, i64* %RCX, align 8
  %10 = mul i64 %6, 429496729600
  %11 = ashr exact i64 %10, 32
  %12 = icmp ne i64 %11, %7
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 252
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13, i8* %26, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx__0x886b80(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %ECX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62a8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25256
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203f3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4294fc___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4294fc_type* @G__0x4294fc to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fccc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203ee(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429503___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429503_type* @G__0x429503 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fd69(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429509___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429509_type* @G__0x429509 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62ac__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25260
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x320__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -800
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__0x8662e8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 8
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.atol_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_imulq__0x64___rax___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = zext i64 %3 to i128
  %9 = or i128 %7, %8
  %10 = mul nsw i128 %9, 100
  %11 = trunc i128 %10 to i64
  store i64 %11, i64* %RAX, align 8
  %12 = sext i64 %11 to i128
  %13 = icmp ne i128 %12, %10
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i128 %10 to i32
  %17 = and i32 %16, 252
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %24, align 1
  %25 = lshr i64 %11, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14, i8* %28, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi__0x85f168(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %ESI, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x85f168_type* @G_0x85f168 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62b0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25264
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.proofnumbersearch(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203e9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429523___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429523_type* @G__0x429523 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fddd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_leaq_MINUS0x612c__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24876
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 %4, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429528___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429528_type* @G__0x429528 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x612c__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24876
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62b4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25268
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62b8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25272
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203e4(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429531___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429531_type* @G__0x429531 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fe12(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__MINUS0x6130__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24880
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 1, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203df(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429537___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429537_type* @G__0x429537 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41fed7(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203da(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ff15(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x9___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 9
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -10
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.setup_epd_line(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203d5(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ff40(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42953d___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42953d_type* @G__0x42953d to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ffb8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x880b18___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x880b18_type* @G__0x880b18 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429540___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429540_type* @G__0x429540 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_0x880b18___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 7
  store i64 %4, i64* %PC, align 8
  %5 = load i32, i32* bitcast (%G_0x880b18_type* @G_0x880b18 to i32*), align 8
  %6 = zext i32 %5 to i64
  store i64 %6, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62bc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25276
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62c0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25280
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42955a___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42955a_type* @G__0x42955a to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_41ffed(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1__MINUS0x6134__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24884
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 1, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42955f___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42955f_type* @G__0x42955f to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_420096(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429568___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429568_type* @G__0x429568 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4295a7___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4295a7_type* @G__0x4295a7 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62c4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25284
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4295dc___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4295dc_type* @G__0x4295dc to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62c8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25288
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4295fd___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4295fd_type* @G__0x4295fd to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62cc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25292
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429644___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429644_type* @G__0x429644 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62d0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25296
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x2__0x8a2a04(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 11
  store i64 %4, i64* %PC, align 8
  store i32 2, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62d4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25300
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203c1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429672___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429672_type* @G__0x429672 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_4200c1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203bc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42967b___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42967b_type* @G__0x42967b to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_420103(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429684___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429684_type* @G__0x429684 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62d8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25304
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203b7(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x428778___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x428778_type* @G__0x428778 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_420381(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429f1f___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429f1f_type* @G__0x429f1f to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x62da40___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x62da40_type* @G__0x62da40 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4296c5___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4296c5_type* @G__0x4296c5 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62dc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25308
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4296ee___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4296ee_type* @G__0x4296ee to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62e0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25312
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429710___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429710_type* @G__0x429710 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62e4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25316
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429743___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429743_type* @G__0x429743 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62e8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25320
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429766___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429766_type* @G__0x429766 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62ec__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25324
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42979d___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42979d_type* @G__0x42979d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62f0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25328
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4297ce___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4297ce_type* @G__0x4297ce to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62f4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25332
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4297ff___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4297ff_type* @G__0x4297ff to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62f8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25336
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429818___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429818_type* @G__0x429818 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x62fc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25340
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429835___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429835_type* @G__0x429835 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6300__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25344
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42986c___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42986c_type* @G__0x42986c to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6304__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25348
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42989b___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42989b_type* @G__0x42989b to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6308__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25352
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4298c5___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4298c5_type* @G__0x4298c5 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x630c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25356
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4298f2___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4298f2_type* @G__0x4298f2 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6310__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25360
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429919___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429919_type* @G__0x429919 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6314__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25364
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x42994d___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x42994d_type* @G__0x42994d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6318__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25368
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429988___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429988_type* @G__0x429988 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x631c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25372
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4299b4___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4299b4_type* @G__0x4299b4 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6320__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25376
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4299e7___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4299e7_type* @G__0x4299e7 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6324__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25380
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429a1d___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429a1d_type* @G__0x429a1d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6328__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25384
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429a43___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429a43_type* @G__0x429a43 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x632c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25388
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429a69___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429a69_type* @G__0x429a69 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6330__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25392
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x429a93___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x429a93_type* @G__0x429a93 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6334__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25396
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6338__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25400
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x35c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -860
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 10
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x633c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25404
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203b2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jne_.L_4203ad(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %6, i64 %rel_off1, i64 %rel_off2
  %8 = add i64 %.v, %3
  store i64 %8, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x6340__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -25408
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203c6(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203cb(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4203d0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42046b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420470(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_420475(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_42047a(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jmpq_.L_4204a7(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_nop(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

attributes #0 = { nounwind readnone }
attributes #1 = { alwaysinline noreturn }
attributes #2 = { norecurse nounwind }
attributes #3 = { nounwind }
