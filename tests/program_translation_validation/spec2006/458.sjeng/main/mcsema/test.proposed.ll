; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_415dd0.read_rcfile(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_420560.initialize_zobrist(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4226a0.init_game(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_420600.initialize_hash(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4204c0.clear_tt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402c10.reset_ecache(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_400ca0.setbuf_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4241d0.start_up(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4039c0.run_autotest(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_41a940.think(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_422190.comp_to_coord(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b730.make(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402920.is_draw(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_422890.reset_piece_square(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404070.eval(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_411880.CheckBadFlow(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4223c0.display_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_422e30.rinput(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_422a60.is_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_422ed0.verify_coord(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_400df0.strstr_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_400d50.tolower_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_421480.free_hash(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402ca0.free_ecache(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_424200.toggle_bool(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_423760.rtime(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_416d20.perft(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_423770.rdifftime(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_410160.ResetHandValue(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_400d20.signal_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_410190.BegForPartner(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40d610.check_phase(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_401be0.ProcessHoldings(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40c7a0.unmake(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4245c0.reset_board(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4243f0.PutPiece(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4101f0.HandlePartner(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4102d0.HandlePtell(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403490.run_epd_testsuite(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_414ff0.proofnumbersearch(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402cc0.setup_epd_line(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x2102a0__rip__type = type <{ [4 x i8] }>
@G_0x2102a0__rip_= global %G_0x2102a0__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x210654__rip__type = type <{ [4 x i8] }>
@G_0x210654__rip_= global %G_0x210654__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x21074e__rip__type = type <{ [4 x i8] }>
@G_0x21074e__rip_= global %G_0x21074e__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x21cc4c__rip__type = type <{ [4 x i8] }>
@G_0x21cc4c__rip_= global %G_0x21cc4c__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x441202__rip__type = type <{ [4 x i8] }>
@G_0x441202__rip_= global %G_0x441202__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x44120a__rip__type = type <{ [4 x i8] }>
@G_0x44120a__rip_= global %G_0x44120a__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x44615a__rip__type = type <{ [4 x i8] }>
@G_0x44615a__rip_= global %G_0x44615a__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x446248__rip__type = type <{ [4 x i8] }>
@G_0x446248__rip_= global %G_0x446248__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x446310__rip__type = type <{ [4 x i8] }>
@G_0x446310__rip_= global %G_0x446310__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x447f0d__rip__type = type <{ [4 x i8] }>
@G_0x447f0d__rip_= global %G_0x447f0d__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x4484d4__rip__type = type <{ [4 x i8] }>
@G_0x4484d4__rip_= global %G_0x4484d4__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x44da30__rip__type = type <{ [4 x i8] }>
@G_0x44da30__rip_= global %G_0x44da30__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x4628ca__rip__type = type <{ [4 x i8] }>
@G_0x4628ca__rip_= global %G_0x4628ca__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x4686f6__rip__type = type <{ [4 x i8] }>
@G_0x4686f6__rip_= global %G_0x4686f6__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x468cf0__rip__type = type <{ [4 x i8] }>
@G_0x468cf0__rip_= global %G_0x468cf0__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x468d72__rip__type = type <{ [4 x i8] }>
@G_0x468d72__rip_= global %G_0x468d72__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x482684__rip__type = type <{ [4 x i8] }>
@G_0x482684__rip_= global %G_0x482684__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62da80_type = type <{ [8 x i8] }>
@G_0x62da80= global %G_0x62da80_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x62da90_type = type <{ [8 x i8] }>
@G_0x62da90= global %G_0x62da90_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x62db08_type = type <{ [4 x i8] }>
@G_0x62db08= global %G_0x62db08_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62db0c_type = type <{ [4 x i8] }>
@G_0x62db0c= global %G_0x62db0c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e4f0_type = type <{ [4 x i8] }>
@G_0x62e4f0= global %G_0x62e4f0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e4fc_type = type <{ [4 x i8] }>
@G_0x62e4fc= global %G_0x62e4fc_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e500_type = type <{ [4 x i8] }>
@G_0x62e500= global %G_0x62e500_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e510_type = type <{ [4 x i8] }>
@G_0x62e510= global %G_0x62e510_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e514_type = type <{ [4 x i8] }>
@G_0x62e514= global %G_0x62e514_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e524_type = type <{ [4 x i8] }>
@G_0x62e524= global %G_0x62e524_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62e9e4_type = type <{ [4 x i8] }>
@G_0x62e9e4= global %G_0x62e9e4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62ea00_type = type <{ [1 x i8] }>
@G_0x62ea00= global %G_0x62ea00_type <{ [1 x i8] c"\00" }>
%G_0x62ea14_type = type <{ [4 x i8] }>
@G_0x62ea14= global %G_0x62ea14_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62ea18_type = type <{ [4 x i8] }>
@G_0x62ea18= global %G_0x62ea18_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x62ea38_type = type <{ [4 x i8] }>
@G_0x62ea38= global %G_0x62ea38_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x633b40_type = type <{ [4 x i8] }>
@G_0x633b40= global %G_0x633b40_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x633b44_type = type <{ [4 x i8] }>
@G_0x633b44= global %G_0x633b44_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x633b4c_type = type <{ [4 x i8] }>
@G_0x633b4c= global %G_0x633b4c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x633b54_type = type <{ [4 x i8] }>
@G_0x633b54= global %G_0x633b54_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x63ae44_type = type <{ [4 x i8] }>
@G_0x63ae44= global %G_0x63ae44_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x85f154_type = type <{ [4 x i8] }>
@G_0x85f154= global %G_0x85f154_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x85f168_type = type <{ [4 x i8] }>
@G_0x85f168= global %G_0x85f168_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x85f3ec_type = type <{ [4 x i8] }>
@G_0x85f3ec= global %G_0x85f3ec_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x864500_type = type <{ [4 x i8] }>
@G_0x864500= global %G_0x864500_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x864508_type = type <{ [4 x i8] }>
@G_0x864508= global %G_0x864508_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8661bc_type = type <{ [4 x i8] }>
@G_0x8661bc= global %G_0x8661bc_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8661c0_type = type <{ [4 x i8] }>
@G_0x8661c0= global %G_0x8661c0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8661d0_type = type <{ [1 x i8] }>
@G_0x8661d0= global %G_0x8661d0_type <{ [1 x i8] c"\00" }>
%G_0x8661d8_type = type <{ [4 x i8] }>
@G_0x8661d8= global %G_0x8661d8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8662e8_type = type <{ [8 x i8] }>
@G_0x8662e8= global %G_0x8662e8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x866530_type = type <{ [4 x i8] }>
@G_0x866530= global %G_0x866530_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x866790_type = type <{ [1 x i8] }>
@G_0x866790= global %G_0x866790_type <{ [1 x i8] c"\00" }>
%G_0x86679c_type = type <{ [4 x i8] }>
@G_0x86679c= global %G_0x86679c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8667a0_type = type <{ [4 x i8] }>
@G_0x8667a0= global %G_0x8667a0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8667a4_type = type <{ [4 x i8] }>
@G_0x8667a4= global %G_0x8667a4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd60_type = type <{ [4 x i8] }>
@G_0x86bd60= global %G_0x86bd60_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd64_type = type <{ [4 x i8] }>
@G_0x86bd64= global %G_0x86bd64_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd70_type = type <{ [4 x i8] }>
@G_0x86bd70= global %G_0x86bd70_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd74_type = type <{ [4 x i8] }>
@G_0x86bd74= global %G_0x86bd74_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd78_type = type <{ [4 x i8] }>
@G_0x86bd78= global %G_0x86bd78_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd7c_type = type <{ [1 x i8] }>
@G_0x86bd7c= global %G_0x86bd7c_type <{ [1 x i8] c"\00" }>
%G_0x86bd84_type = type <{ [4 x i8] }>
@G_0x86bd84= global %G_0x86bd84_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd88_type = type <{ [4 x i8] }>
@G_0x86bd88= global %G_0x86bd88_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x86bd90_type = type <{ [4 x i8] }>
@G_0x86bd90= global %G_0x86bd90_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x880654_type = type <{ [4 x i8] }>
@G_0x880654= global %G_0x880654_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x880b10_type = type <{ [4 x i8] }>
@G_0x880b10= global %G_0x880b10_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x880b14_type = type <{ [4 x i8] }>
@G_0x880b14= global %G_0x880b14_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x880b18_type = type <{ [4 x i8] }>
@G_0x880b18= global %G_0x880b18_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x880b20_type = type <{ [8 x i8] }>
@G_0x880b20= global %G_0x880b20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x880b28_type = type <{ [8 x i8] }>
@G_0x880b28= global %G_0x880b28_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x881de4_type = type <{ [4 x i8] }>
@G_0x881de4= global %G_0x881de4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x881df4_type = type <{ [4 x i8] }>
@G_0x881df4= global %G_0x881df4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886a60_type = type <{ [4 x i8] }>
@G_0x886a60= global %G_0x886a60_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886a78_type = type <{ [4 x i8] }>
@G_0x886a78= global %G_0x886a78_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886a7c_type = type <{ [4 x i8] }>
@G_0x886a7c= global %G_0x886a7c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886b80_type = type <{ [4 x i8] }>
@G_0x886b80= global %G_0x886b80_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886b84_type = type <{ [4 x i8] }>
@G_0x886b84= global %G_0x886b84_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886b88_type = type <{ [4 x i8] }>
@G_0x886b88= global %G_0x886b88_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886bb8_type = type <{ [4 x i8] }>
@G_0x886bb8= global %G_0x886bb8_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886bbc_type = type <{ [4 x i8] }>
@G_0x886bbc= global %G_0x886bbc_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886bc0_type = type <{ [4 x i8] }>
@G_0x886bc0= global %G_0x886bc0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886bc4_type = type <{ [4 x i8] }>
@G_0x886bc4= global %G_0x886bc4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x886be4_type = type <{ [4 x i8] }>
@G_0x886be4= global %G_0x886be4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8a05b4_type = type <{ [4 x i8] }>
@G_0x8a05b4= global %G_0x8a05b4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x8a2a04_type = type <{ [4 x i8] }>
@G_0x8a2a04= global %G_0x8a2a04_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x946e__rip__type = type <{ [8 x i8] }>
@G_0x946e__rip_= global %G_0x946e__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x96d3__rip__type = type <{ [8 x i8] }>
@G_0x96d3__rip_= global %G_0x96d3__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xa11e__rip__type = type <{ [4 x i8] }>
@G_0xa11e__rip_= global %G_0xa11e__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xa12a__rip__type = type <{ [4 x i8] }>
@G_0xa12a__rip_= global %G_0xa12a__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xa19c__rip__type = type <{ [8 x i8] }>
@G_0xa19c__rip_= global %G_0xa19c__rip__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4284ed_type = type <{ [4 x i8] }>
@G__0x4284ed= global %G__0x4284ed_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42850a_type = type <{ [4 x i8] }>
@G__0x42850a= global %G__0x42850a_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x428540_type = type <{ [4 x i8] }>
@G__0x428540= global %G__0x428540_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42857c_type = type <{ [4 x i8] }>
@G__0x42857c= global %G__0x42857c_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4285af_type = type <{ [4 x i8] }>
@G__0x4285af= global %G__0x4285af_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4285ec_type = type <{ [8 x i8] }>
@G__0x4285ec= global %G__0x4285ec_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x428764_type = type <{ [8 x i8] }>
@G__0x428764= global %G__0x428764_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x428778_type = type <{ [4 x i8] }>
@G__0x428778= global %G__0x428778_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42888d_type = type <{ [4 x i8] }>
@G__0x42888d= global %G__0x42888d_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4288b1_type = type <{ [8 x i8] }>
@G__0x4288b1= global %G__0x4288b1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4288b4_type = type <{ [8 x i8] }>
@G__0x4288b4= global %G__0x4288b4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42925b_type = type <{ [8 x i8] }>
@G__0x42925b= global %G__0x42925b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42926a_type = type <{ [8 x i8] }>
@G__0x42926a= global %G__0x42926a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4292bb_type = type <{ [8 x i8] }>
@G__0x4292bb= global %G__0x4292bb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4292d5_type = type <{ [8 x i8] }>
@G__0x4292d5= global %G__0x4292d5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4292de_type = type <{ [8 x i8] }>
@G__0x4292de= global %G__0x4292de_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4292e3_type = type <{ [8 x i8] }>
@G__0x4292e3= global %G__0x4292e3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4292f6_type = type <{ [8 x i8] }>
@G__0x4292f6= global %G__0x4292f6_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429309_type = type <{ [8 x i8] }>
@G__0x429309= global %G__0x429309_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429324_type = type <{ [8 x i8] }>
@G__0x429324= global %G__0x429324_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429341_type = type <{ [8 x i8] }>
@G__0x429341= global %G__0x429341_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429351_type = type <{ [8 x i8] }>
@G__0x429351= global %G__0x429351_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429359_type = type <{ [8 x i8] }>
@G__0x429359= global %G__0x429359_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42936b_type = type <{ [8 x i8] }>
@G__0x42936b= global %G__0x42936b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429374_type = type <{ [4 x i8] }>
@G__0x429374= global %G__0x429374_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429379_type = type <{ [4 x i8] }>
@G__0x429379= global %G__0x429379_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42937e_type = type <{ [4 x i8] }>
@G__0x42937e= global %G__0x42937e_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429386_type = type <{ [8 x i8] }>
@G__0x429386= global %G__0x429386_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42938c_type = type <{ [8 x i8] }>
@G__0x42938c= global %G__0x42938c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4293a8_type = type <{ [8 x i8] }>
@G__0x4293a8= global %G__0x4293a8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4293b5_type = type <{ [4 x i8] }>
@G__0x4293b5= global %G__0x4293b5_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4293b9_type = type <{ [8 x i8] }>
@G__0x4293b9= global %G__0x4293b9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4293e1_type = type <{ [4 x i8] }>
@G__0x4293e1= global %G__0x4293e1_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4293e8_type = type <{ [4 x i8] }>
@G__0x4293e8= global %G__0x4293e8_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4293ee_type = type <{ [8 x i8] }>
@G__0x4293ee= global %G__0x4293ee_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429414_type = type <{ [4 x i8] }>
@G__0x429414= global %G__0x429414_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429416_type = type <{ [4 x i8] }>
@G__0x429416= global %G__0x429416_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42941b_type = type <{ [4 x i8] }>
@G__0x42941b= global %G__0x42941b_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429422_type = type <{ [4 x i8] }>
@G__0x429422= global %G__0x429422_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429427_type = type <{ [4 x i8] }>
@G__0x429427= global %G__0x429427_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42942c_type = type <{ [4 x i8] }>
@G__0x42942c= global %G__0x42942c_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429432_type = type <{ [4 x i8] }>
@G__0x429432= global %G__0x429432_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429438_type = type <{ [4 x i8] }>
@G__0x429438= global %G__0x429438_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x42943e_type = type <{ [4 x i8] }>
@G__0x42943e= global %G__0x42943e_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429443_type = type <{ [8 x i8] }>
@G__0x429443= global %G__0x429443_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42944d_type = type <{ [8 x i8] }>
@G__0x42944d= global %G__0x42944d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429452_type = type <{ [8 x i8] }>
@G__0x429452= global %G__0x429452_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429458_type = type <{ [8 x i8] }>
@G__0x429458= global %G__0x429458_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42945a_type = type <{ [8 x i8] }>
@G__0x42945a= global %G__0x42945a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429466_type = type <{ [8 x i8] }>
@G__0x429466= global %G__0x429466_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429469_type = type <{ [8 x i8] }>
@G__0x429469= global %G__0x429469_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42946c_type = type <{ [8 x i8] }>
@G__0x42946c= global %G__0x42946c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42946f_type = type <{ [8 x i8] }>
@G__0x42946f= global %G__0x42946f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429476_type = type <{ [8 x i8] }>
@G__0x429476= global %G__0x429476_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42947e_type = type <{ [8 x i8] }>
@G__0x42947e= global %G__0x42947e_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429486_type = type <{ [8 x i8] }>
@G__0x429486= global %G__0x429486_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42948d_type = type <{ [8 x i8] }>
@G__0x42948d= global %G__0x42948d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429498_type = type <{ [8 x i8] }>
@G__0x429498= global %G__0x429498_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294a1_type = type <{ [8 x i8] }>
@G__0x4294a1= global %G__0x4294a1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294a9_type = type <{ [8 x i8] }>
@G__0x4294a9= global %G__0x4294a9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294b2_type = type <{ [8 x i8] }>
@G__0x4294b2= global %G__0x4294b2_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294b9_type = type <{ [8 x i8] }>
@G__0x4294b9= global %G__0x4294b9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294c1_type = type <{ [8 x i8] }>
@G__0x4294c1= global %G__0x4294c1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294c6_type = type <{ [8 x i8] }>
@G__0x4294c6= global %G__0x4294c6_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294d8_type = type <{ [8 x i8] }>
@G__0x4294d8= global %G__0x4294d8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294df_type = type <{ [8 x i8] }>
@G__0x4294df= global %G__0x4294df_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294e4_type = type <{ [8 x i8] }>
@G__0x4294e4= global %G__0x4294e4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294e6_type = type <{ [8 x i8] }>
@G__0x4294e6= global %G__0x4294e6_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294e8_type = type <{ [8 x i8] }>
@G__0x4294e8= global %G__0x4294e8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294e9_type = type <{ [8 x i8] }>
@G__0x4294e9= global %G__0x4294e9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294f1_type = type <{ [8 x i8] }>
@G__0x4294f1= global %G__0x4294f1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294f7_type = type <{ [8 x i8] }>
@G__0x4294f7= global %G__0x4294f7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4294fc_type = type <{ [8 x i8] }>
@G__0x4294fc= global %G__0x4294fc_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429503_type = type <{ [8 x i8] }>
@G__0x429503= global %G__0x429503_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429509_type = type <{ [8 x i8] }>
@G__0x429509= global %G__0x429509_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429523_type = type <{ [8 x i8] }>
@G__0x429523= global %G__0x429523_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429528_type = type <{ [8 x i8] }>
@G__0x429528= global %G__0x429528_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429531_type = type <{ [8 x i8] }>
@G__0x429531= global %G__0x429531_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429537_type = type <{ [8 x i8] }>
@G__0x429537= global %G__0x429537_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42953d_type = type <{ [8 x i8] }>
@G__0x42953d= global %G__0x42953d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429540_type = type <{ [8 x i8] }>
@G__0x429540= global %G__0x429540_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42955a_type = type <{ [8 x i8] }>
@G__0x42955a= global %G__0x42955a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42955f_type = type <{ [8 x i8] }>
@G__0x42955f= global %G__0x42955f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429568_type = type <{ [8 x i8] }>
@G__0x429568= global %G__0x429568_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4295a7_type = type <{ [8 x i8] }>
@G__0x4295a7= global %G__0x4295a7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4295dc_type = type <{ [8 x i8] }>
@G__0x4295dc= global %G__0x4295dc_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4295fd_type = type <{ [8 x i8] }>
@G__0x4295fd= global %G__0x4295fd_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429644_type = type <{ [8 x i8] }>
@G__0x429644= global %G__0x429644_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429672_type = type <{ [8 x i8] }>
@G__0x429672= global %G__0x429672_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42967b_type = type <{ [8 x i8] }>
@G__0x42967b= global %G__0x42967b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429684_type = type <{ [8 x i8] }>
@G__0x429684= global %G__0x429684_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4296c5_type = type <{ [8 x i8] }>
@G__0x4296c5= global %G__0x4296c5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4296ee_type = type <{ [8 x i8] }>
@G__0x4296ee= global %G__0x4296ee_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429710_type = type <{ [8 x i8] }>
@G__0x429710= global %G__0x429710_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429743_type = type <{ [8 x i8] }>
@G__0x429743= global %G__0x429743_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429766_type = type <{ [8 x i8] }>
@G__0x429766= global %G__0x429766_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42979d_type = type <{ [8 x i8] }>
@G__0x42979d= global %G__0x42979d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4297ce_type = type <{ [8 x i8] }>
@G__0x4297ce= global %G__0x4297ce_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4297ff_type = type <{ [8 x i8] }>
@G__0x4297ff= global %G__0x4297ff_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429818_type = type <{ [8 x i8] }>
@G__0x429818= global %G__0x429818_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429835_type = type <{ [8 x i8] }>
@G__0x429835= global %G__0x429835_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42986c_type = type <{ [8 x i8] }>
@G__0x42986c= global %G__0x42986c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42989b_type = type <{ [8 x i8] }>
@G__0x42989b= global %G__0x42989b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4298c5_type = type <{ [8 x i8] }>
@G__0x4298c5= global %G__0x4298c5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4298f2_type = type <{ [8 x i8] }>
@G__0x4298f2= global %G__0x4298f2_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429919_type = type <{ [8 x i8] }>
@G__0x429919= global %G__0x429919_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x42994d_type = type <{ [8 x i8] }>
@G__0x42994d= global %G__0x42994d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429988_type = type <{ [8 x i8] }>
@G__0x429988= global %G__0x429988_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4299b4_type = type <{ [8 x i8] }>
@G__0x4299b4= global %G__0x4299b4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4299e7_type = type <{ [8 x i8] }>
@G__0x4299e7= global %G__0x4299e7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429a1d_type = type <{ [8 x i8] }>
@G__0x429a1d= global %G__0x429a1d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429a43_type = type <{ [8 x i8] }>
@G__0x429a43= global %G__0x429a43_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429a69_type = type <{ [8 x i8] }>
@G__0x429a69= global %G__0x429a69_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429a93_type = type <{ [8 x i8] }>
@G__0x429a93= global %G__0x429a93_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429aea_type = type <{ [8 x i8] }>
@G__0x429aea= global %G__0x429aea_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429aeb_type = type <{ [4 x i8] }>
@G__0x429aeb= global %G__0x429aeb_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429af6_type = type <{ [8 x i8] }>
@G__0x429af6= global %G__0x429af6_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429bef_type = type <{ [8 x i8] }>
@G__0x429bef= global %G__0x429bef_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x429cf6_type = type <{ [4 x i8] }>
@G__0x429cf6= global %G__0x429cf6_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x429f1f_type = type <{ [8 x i8] }>
@G__0x429f1f= global %G__0x429f1f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62c130_type = type <{ [8 x i8] }>
@G__0x62c130= global %G__0x62c130_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62c170_type = type <{ [8 x i8] }>
@G__0x62c170= global %G__0x62c170_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62c1b0_type = type <{ [8 x i8] }>
@G__0x62c1b0= global %G__0x62c1b0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62c1f0_type = type <{ [8 x i8] }>
@G__0x62c1f0= global %G__0x62c1f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62da40_type = type <{ [8 x i8] }>
@G__0x62da40= global %G__0x62da40_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62dab0_type = type <{ [8 x i8] }>
@G__0x62dab0= global %G__0x62dab0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x62ea00_type = type <{ [8 x i8] }>
@G__0x62ea00= global %G__0x62ea00_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x84ad30_type = type <{ [8 x i8] }>
@G__0x84ad30= global %G__0x84ad30_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x8661d8_type = type <{ [8 x i8] }>
@G__0x8661d8= global %G__0x8661d8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x86679c_type = type <{ [8 x i8] }>
@G__0x86679c= global %G__0x86679c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x86bd64_type = type <{ [8 x i8] }>
@G__0x86bd64= global %G__0x86bd64_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x86bd70_type = type <{ [8 x i8] }>
@G__0x86bd70= global %G__0x86bd70_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x880b14_type = type <{ [8 x i8] }>
@G__0x880b14= global %G__0x880b14_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x880b18_type = type <{ [8 x i8] }>
@G__0x880b18= global %G__0x880b18_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x886740_type = type <{ [8 x i8] }>
@G__0x886740= global %G__0x886740_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x886b80_type = type <{ [8 x i8] }>
@G__0x886b80= global %G__0x886b80_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x886bc4_type = type <{ [8 x i8] }>
@G__0x886bc4= global %G__0x886bc4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x8a05b4_type = type <{ [8 x i8] }>
@G__0x8a05b4= global %G__0x8a05b4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x8a0a78_type = type <{ [8 x i8] }>
@G__0x8a0a78= global %G__0x8a0a78_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @main(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .main:	 RIP: 41dbe0	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 41dbe0	 Bytes: 1
  %loadMem_41dbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbe0 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbe0)
  store %struct.Memory* %call_41dbe0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 41dbe1	 Bytes: 3
  %loadMem_41dbe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbe1 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbe1)
  store %struct.Memory* %call_41dbe1, %struct.Memory** %MEMORY

  ; Code: subq $0x6360, %rsp	 RIP: 41dbe4	 Bytes: 7
  %loadMem_41dbe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbe4 = call %struct.Memory* @routine_subq__0x6360___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbe4)
  store %struct.Memory* %call_41dbe4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4(%rbp)	 RIP: 41dbeb	 Bytes: 7
  %loadMem_41dbeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbeb = call %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbeb)
  store %struct.Memory* %call_41dbeb, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x8(%rbp)	 RIP: 41dbf2	 Bytes: 3
  %loadMem_41dbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbf2 = call %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbf2)
  store %struct.Memory* %call_41dbf2, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x10(%rbp)	 RIP: 41dbf5	 Bytes: 4
  %loadMem_41dbf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbf5 = call %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbf5)
  store %struct.Memory* %call_41dbf5, %struct.Memory** %MEMORY

  ; Code: movl $0x4, -0x354(%rbp)	 RIP: 41dbf9	 Bytes: 10
  %loadMem_41dbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dbf9 = call %struct.Memory* @routine_movl__0x4__MINUS0x354__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dbf9)
  store %struct.Memory* %call_41dbf9, %struct.Memory** %MEMORY

  ; Code: callq .read_rcfile	 RIP: 41dc03	 Bytes: 5
  %loadMem1_41dc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc03 = call %struct.Memory* @routine_callq_.read_rcfile(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc03, i64 -32307, i64 5, i64 5)
  store %struct.Memory* %call1_41dc03, %struct.Memory** %MEMORY

  %loadMem2_41dc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc03 = load i64, i64* %3
  %call2_41dc03 = call %struct.Memory* @sub_415dd0.read_rcfile(%struct.State* %0, i64  %loadPC_41dc03, %struct.Memory* %loadMem2_41dc03)
  store %struct.Memory* %call2_41dc03, %struct.Memory** %MEMORY

  ; Code: callq .initialize_zobrist	 RIP: 41dc08	 Bytes: 5
  %loadMem1_41dc08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc08 = call %struct.Memory* @routine_callq_.initialize_zobrist(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc08, i64 10584, i64 5, i64 5)
  store %struct.Memory* %call1_41dc08, %struct.Memory** %MEMORY

  %loadMem2_41dc08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc08 = load i64, i64* %3
  %call2_41dc08 = call %struct.Memory* @sub_420560.initialize_zobrist(%struct.State* %0, i64  %loadPC_41dc08, %struct.Memory* %loadMem2_41dc08)
  store %struct.Memory* %call2_41dc08, %struct.Memory** %MEMORY

  ; Code: movq $0x62dab0, %rsi	 RIP: 41dc0d	 Bytes: 10
  %loadMem_41dc0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc0d = call %struct.Memory* @routine_movq__0x62dab0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc0d)
  store %struct.Memory* %call_41dc0d, %struct.Memory** %MEMORY

  ; Code: movq $0x62c130, %rax	 RIP: 41dc17	 Bytes: 10
  %loadMem_41dc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc17 = call %struct.Memory* @routine_movq__0x62c130___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc17)
  store %struct.Memory* %call_41dc17, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edi	 RIP: 41dc21	 Bytes: 5
  %loadMem_41dc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc21 = call %struct.Memory* @routine_movl__0x38___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc21)
  store %struct.Memory* %call_41dc21, %struct.Memory** %MEMORY

  ; Code: movl %edi, %edx	 RIP: 41dc26	 Bytes: 2
  %loadMem_41dc26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc26 = call %struct.Memory* @routine_movl__edi___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc26)
  store %struct.Memory* %call_41dc26, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x85f154	 RIP: 41dc28	 Bytes: 11
  %loadMem_41dc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc28 = call %struct.Memory* @routine_movl__0x2__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc28)
  store %struct.Memory* %call_41dc28, %struct.Memory** %MEMORY

  ; Code: movq %rsi, %rdi	 RIP: 41dc33	 Bytes: 3
  %loadMem_41dc33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc33 = call %struct.Memory* @routine_movq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc33)
  store %struct.Memory* %call_41dc33, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 41dc36	 Bytes: 3
  %loadMem_41dc36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc36 = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc36)
  store %struct.Memory* %call_41dc36, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41dc39	 Bytes: 5
  %loadMem1_41dc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc39 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc39, i64 -118521, i64 5, i64 5)
  store %struct.Memory* %call1_41dc39, %struct.Memory** %MEMORY

  %loadMem2_41dc39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc39 = load i64, i64* %3
  %call2_41dc39 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41dc39, %struct.Memory* %loadMem2_41dc39)
  store %struct.Memory* %call2_41dc39, %struct.Memory** %MEMORY

  ; Code: callq .init_game	 RIP: 41dc3e	 Bytes: 5
  %loadMem1_41dc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc3e = call %struct.Memory* @routine_callq_.init_game(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc3e, i64 19042, i64 5, i64 5)
  store %struct.Memory* %call1_41dc3e, %struct.Memory** %MEMORY

  %loadMem2_41dc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc3e = load i64, i64* %3
  %call2_41dc3e = call %struct.Memory* @sub_4226a0.init_game(%struct.State* %0, i64  %loadPC_41dc3e, %struct.Memory* %loadMem2_41dc3e)
  store %struct.Memory* %call2_41dc3e, %struct.Memory** %MEMORY

  ; Code: callq .initialize_hash	 RIP: 41dc43	 Bytes: 5
  %loadMem1_41dc43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc43 = call %struct.Memory* @routine_callq_.initialize_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc43, i64 10685, i64 5, i64 5)
  store %struct.Memory* %call1_41dc43, %struct.Memory** %MEMORY

  %loadMem2_41dc43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc43 = load i64, i64* %3
  %call2_41dc43 = call %struct.Memory* @sub_420600.initialize_hash(%struct.State* %0, i64  %loadPC_41dc43, %struct.Memory* %loadMem2_41dc43)
  store %struct.Memory* %call2_41dc43, %struct.Memory** %MEMORY

  ; Code: callq .clear_tt	 RIP: 41dc48	 Bytes: 5
  %loadMem1_41dc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc48 = call %struct.Memory* @routine_callq_.clear_tt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc48, i64 10360, i64 5, i64 5)
  store %struct.Memory* %call1_41dc48, %struct.Memory** %MEMORY

  %loadMem2_41dc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc48 = load i64, i64* %3
  %call2_41dc48 = call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64  %loadPC_41dc48, %struct.Memory* %loadMem2_41dc48)
  store %struct.Memory* %call2_41dc48, %struct.Memory** %MEMORY

  ; Code: callq .reset_ecache	 RIP: 41dc4d	 Bytes: 5
  %loadMem1_41dc4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dc4d = call %struct.Memory* @routine_callq_.reset_ecache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dc4d, i64 -110653, i64 5, i64 5)
  store %struct.Memory* %call1_41dc4d, %struct.Memory** %MEMORY

  %loadMem2_41dc4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dc4d = load i64, i64* %3
  %call2_41dc4d = call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* %0, i64  %loadPC_41dc4d, %struct.Memory* %loadMem2_41dc4d)
  store %struct.Memory* %call2_41dc4d, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 41dc52	 Bytes: 2
  %loadMem_41dc52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc52 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc52)
  store %struct.Memory* %call_41dc52, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41dc54	 Bytes: 2
  %loadMem_41dc54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc54 = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc54)
  store %struct.Memory* %call_41dc54, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 41dc56	 Bytes: 2
  %loadMem_41dc56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc56 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc56)
  store %struct.Memory* %call_41dc56, %struct.Memory** %MEMORY

  ; Code: movl $0x2580, %r8d	 RIP: 41dc58	 Bytes: 6
  %loadMem_41dc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc58 = call %struct.Memory* @routine_movl__0x2580___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc58)
  store %struct.Memory* %call_41dc58, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edx	 RIP: 41dc5e	 Bytes: 3
  %loadMem_41dc5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc5e = call %struct.Memory* @routine_movl__r8d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc5e)
  store %struct.Memory* %call_41dc5e, %struct.Memory** %MEMORY

  ; Code: leaq -0x6120(%rbp), %rax	 RIP: 41dc61	 Bytes: 7
  %loadMem_41dc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc61 = call %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc61)
  store %struct.Memory* %call_41dc61, %struct.Memory** %MEMORY

  ; Code: movl $0x3840, %r8d	 RIP: 41dc68	 Bytes: 6
  %loadMem_41dc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc68 = call %struct.Memory* @routine_movl__0x3840___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc68)
  store %struct.Memory* %call_41dc68, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edi	 RIP: 41dc6e	 Bytes: 3
  %loadMem_41dc6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc6e = call %struct.Memory* @routine_movl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc6e)
  store %struct.Memory* %call_41dc6e, %struct.Memory** %MEMORY

  ; Code: leaq -0x3ba0(%rbp), %r9	 RIP: 41dc71	 Bytes: 7
  %loadMem_41dc71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc71 = call %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc71)
  store %struct.Memory* %call_41dc71, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x880b10	 RIP: 41dc78	 Bytes: 11
  %loadMem_41dc78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc78 = call %struct.Memory* @routine_movl__0x0__0x880b10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc78)
  store %struct.Memory* %call_41dc78, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62e4f0	 RIP: 41dc83	 Bytes: 11
  %loadMem_41dc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc83 = call %struct.Memory* @routine_movl__0x0__0x62e4f0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc83)
  store %struct.Memory* %call_41dc83, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea14	 RIP: 41dc8e	 Bytes: 11
  %loadMem_41dc8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc8e = call %struct.Memory* @routine_movl__0x0__0x62ea14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc8e)
  store %struct.Memory* %call_41dc8e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x864508	 RIP: 41dc99	 Bytes: 11
  %loadMem_41dc99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dc99 = call %struct.Memory* @routine_movl__0x0__0x864508(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dc99)
  store %struct.Memory* %call_41dc99, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x8667a4	 RIP: 41dca4	 Bytes: 11
  %loadMem_41dca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dca4 = call %struct.Memory* @routine_movl__0x0__0x8667a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dca4)
  store %struct.Memory* %call_41dca4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886be4	 RIP: 41dcaf	 Bytes: 11
  %loadMem_41dcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcaf = call %struct.Memory* @routine_movl__0x0__0x886be4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcaf)
  store %struct.Memory* %call_41dcaf, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62e510	 RIP: 41dcba	 Bytes: 11
  %loadMem_41dcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcba = call %struct.Memory* @routine_movl__0x0__0x62e510(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcba)
  store %struct.Memory* %call_41dcba, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bc0	 RIP: 41dcc5	 Bytes: 11
  %loadMem_41dcc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcc5 = call %struct.Memory* @routine_movl__0x0__0x886bc0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcc5)
  store %struct.Memory* %call_41dcc5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6130(%rbp)	 RIP: 41dcd0	 Bytes: 10
  %loadMem_41dcd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcd0 = call %struct.Memory* @routine_movl__0x0__MINUS0x6130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcd0)
  store %struct.Memory* %call_41dcd0, %struct.Memory** %MEMORY

  ; Code: movl $0x28, 0x8661d8	 RIP: 41dcda	 Bytes: 11
  %loadMem_41dcda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcda = call %struct.Memory* @routine_movl__0x28__0x8661d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcda)
  store %struct.Memory* %call_41dcda, %struct.Memory** %MEMORY

  ; Code: movl $0x5, 0x86bd70	 RIP: 41dce5	 Bytes: 11
  %loadMem_41dce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dce5 = call %struct.Memory* @routine_movl__0x5__0x86bd70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dce5)
  store %struct.Memory* %call_41dce5, %struct.Memory** %MEMORY

  ; Code: movl $0x7530, 0x8a05b4	 RIP: 41dcf0	 Bytes: 11
  %loadMem_41dcf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcf0 = call %struct.Memory* @routine_movl__0x7530__0x8a05b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcf0)
  store %struct.Memory* %call_41dcf0, %struct.Memory** %MEMORY

  ; Code: movl $0x7d0, 0x886bc4	 RIP: 41dcfb	 Bytes: 11
  %loadMem_41dcfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dcfb = call %struct.Memory* @routine_movl__0x7d0__0x886bc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dcfb)
  store %struct.Memory* %call_41dcfb, %struct.Memory** %MEMORY

  ; Code: movl $0x7d0, 0x880b14	 RIP: 41dd06	 Bytes: 11
  %loadMem_41dd06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd06 = call %struct.Memory* @routine_movl__0x7d0__0x880b14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd06)
  store %struct.Memory* %call_41dd06, %struct.Memory** %MEMORY

  ; Code: movl $0x28, 0x880b18	 RIP: 41dd11	 Bytes: 11
  %loadMem_41dd11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd11 = call %struct.Memory* @routine_movl__0x28__0x880b18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd11)
  store %struct.Memory* %call_41dd11, %struct.Memory** %MEMORY

  ; Code: movl $0xc8, 0x62ea18	 RIP: 41dd1c	 Bytes: 11
  %loadMem_41dd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd1c = call %struct.Memory* @routine_movl__0xc8__0x62ea18(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd1c)
  store %struct.Memory* %call_41dd1c, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x86bd60	 RIP: 41dd27	 Bytes: 11
  %loadMem_41dd27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd27 = call %struct.Memory* @routine_movl__0x1__0x86bd60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd27)
  store %struct.Memory* %call_41dd27, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x62e9e4	 RIP: 41dd32	 Bytes: 11
  %loadMem_41dd32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd32 = call %struct.Memory* @routine_movl__0x1__0x62e9e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd32)
  store %struct.Memory* %call_41dd32, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6134(%rbp)	 RIP: 41dd3d	 Bytes: 10
  %loadMem_41dd3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd3d = call %struct.Memory* @routine_movl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd3d)
  store %struct.Memory* %call_41dd3d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x8a2a04	 RIP: 41dd47	 Bytes: 11
  %loadMem_41dd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd47 = call %struct.Memory* @routine_movl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd47)
  store %struct.Memory* %call_41dd47, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x358(%rbp)	 RIP: 41dd52	 Bytes: 10
  %loadMem_41dd52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd52 = call %struct.Memory* @routine_movl__0x0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd52)
  store %struct.Memory* %call_41dd52, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b84	 RIP: 41dd5c	 Bytes: 11
  %loadMem_41dd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd5c = call %struct.Memory* @routine_movl__0x0__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd5c)
  store %struct.Memory* %call_41dd5c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6128(%rbp)	 RIP: 41dd67	 Bytes: 10
  %loadMem_41dd67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd67 = call %struct.Memory* @routine_movl__0x0__MINUS0x6128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd67)
  store %struct.Memory* %call_41dd67, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x35c(%rbp)	 RIP: 41dd71	 Bytes: 10
  %loadMem_41dd71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd71 = call %struct.Memory* @routine_movl__0x1__MINUS0x35c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd71)
  store %struct.Memory* %call_41dd71, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bbc	 RIP: 41dd7b	 Bytes: 11
  %loadMem_41dd7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd7b = call %struct.Memory* @routine_movl__0x0__0x886bbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd7b)
  store %struct.Memory* %call_41dd7b, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x62e524	 RIP: 41dd86	 Bytes: 11
  %loadMem_41dd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd86 = call %struct.Memory* @routine_movl__0x1__0x62e524(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd86)
  store %struct.Memory* %call_41dd86, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62e514	 RIP: 41dd91	 Bytes: 11
  %loadMem_41dd91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd91 = call %struct.Memory* @routine_movl__0x0__0x62e514(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd91)
  store %struct.Memory* %call_41dd91, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6124(%rbp)	 RIP: 41dd9c	 Bytes: 10
  %loadMem_41dd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dd9c = call %struct.Memory* @routine_movl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dd9c)
  store %struct.Memory* %call_41dd9c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886a7c	 RIP: 41dda6	 Bytes: 11
  %loadMem_41dda6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dda6 = call %struct.Memory* @routine_movl__0x0__0x886a7c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dda6)
  store %struct.Memory* %call_41dda6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd90	 RIP: 41ddb1	 Bytes: 11
  %loadMem_41ddb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddb1 = call %struct.Memory* @routine_movl__0x0__0x86bd90(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddb1)
  store %struct.Memory* %call_41ddb1, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886a60	 RIP: 41ddbc	 Bytes: 11
  %loadMem_41ddbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddbc = call %struct.Memory* @routine_movl__0x0__0x886a60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddbc)
  store %struct.Memory* %call_41ddbc, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b80	 RIP: 41ddc7	 Bytes: 11
  %loadMem_41ddc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddc7 = call %struct.Memory* @routine_movl__0x0__0x886b80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddc7)
  store %struct.Memory* %call_41ddc7, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886a78	 RIP: 41ddd2	 Bytes: 11
  %loadMem_41ddd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddd2 = call %struct.Memory* @routine_movl__0x0__0x886a78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddd2)
  store %struct.Memory* %call_41ddd2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x633b54	 RIP: 41dddd	 Bytes: 11
  %loadMem_41dddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dddd = call %struct.Memory* @routine_movl__0x0__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dddd)
  store %struct.Memory* %call_41dddd, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x880654	 RIP: 41dde8	 Bytes: 11
  %loadMem_41dde8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dde8 = call %struct.Memory* @routine_movl__0x0__0x880654(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dde8)
  store %struct.Memory* %call_41dde8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea38	 RIP: 41ddf3	 Bytes: 11
  %loadMem_41ddf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddf3 = call %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddf3)
  store %struct.Memory* %call_41ddf3, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x6190(%rbp)	 RIP: 41ddfe	 Bytes: 7
  %loadMem_41ddfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ddfe = call %struct.Memory* @routine_movq__rdi__MINUS0x6190__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ddfe)
  store %struct.Memory* %call_41ddfe, %struct.Memory** %MEMORY

  ; Code: movq %r9, %rdi	 RIP: 41de05	 Bytes: 3
  %loadMem_41de05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de05 = call %struct.Memory* @routine_movq__r9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de05)
  store %struct.Memory* %call_41de05, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x6198(%rbp)	 RIP: 41de08	 Bytes: 7
  %loadMem_41de08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de08 = call %struct.Memory* @routine_movq__rsi__MINUS0x6198__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de08)
  store %struct.Memory* %call_41de08, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41de0f	 Bytes: 2
  %loadMem_41de0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de0f = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de0f)
  store %struct.Memory* %call_41de0f, %struct.Memory** %MEMORY

  ; Code: movq -0x6190(%rbp), %r9	 RIP: 41de11	 Bytes: 7
  %loadMem_41de11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de11 = call %struct.Memory* @routine_movq_MINUS0x6190__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de11)
  store %struct.Memory* %call_41de11, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x61a0(%rbp)	 RIP: 41de18	 Bytes: 7
  %loadMem_41de18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de18 = call %struct.Memory* @routine_movq__rdx__MINUS0x61a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de18)
  store %struct.Memory* %call_41de18, %struct.Memory** %MEMORY

  ; Code: movq %r9, %rdx	 RIP: 41de1f	 Bytes: 3
  %loadMem_41de1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de1f = call %struct.Memory* @routine_movq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de1f)
  store %struct.Memory* %call_41de1f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x61a8(%rbp)	 RIP: 41de22	 Bytes: 7
  %loadMem_41de22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de22 = call %struct.Memory* @routine_movq__rax__MINUS0x61a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de22)
  store %struct.Memory* %call_41de22, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x61ac(%rbp)	 RIP: 41de29	 Bytes: 6
  %loadMem_41de29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de29 = call %struct.Memory* @routine_movl__ecx__MINUS0x61ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de29)
  store %struct.Memory* %call_41de29, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 41de2f	 Bytes: 5
  %loadMem1_41de2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41de2f = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41de2f, i64 -119135, i64 5, i64 5)
  store %struct.Memory* %call1_41de2f, %struct.Memory** %MEMORY

  %loadMem2_41de2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41de2f = load i64, i64* %3
  %call2_41de2f = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_41de2f, %struct.Memory* %loadMem2_41de2f)
  store %struct.Memory* %call2_41de2f, %struct.Memory** %MEMORY

  ; Code: movq -0x61a8(%rbp), %rax	 RIP: 41de34	 Bytes: 7
  %loadMem_41de34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de34 = call %struct.Memory* @routine_movq_MINUS0x61a8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de34)
  store %struct.Memory* %call_41de34, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41de3b	 Bytes: 3
  %loadMem_41de3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de3b = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de3b)
  store %struct.Memory* %call_41de3b, %struct.Memory** %MEMORY

  ; Code: movl -0x61ac(%rbp), %esi	 RIP: 41de3e	 Bytes: 6
  %loadMem_41de3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de3e = call %struct.Memory* @routine_movl_MINUS0x61ac__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de3e)
  store %struct.Memory* %call_41de3e, %struct.Memory** %MEMORY

  ; Code: movq -0x61a0(%rbp), %rdx	 RIP: 41de44	 Bytes: 7
  %loadMem_41de44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de44 = call %struct.Memory* @routine_movq_MINUS0x61a0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de44)
  store %struct.Memory* %call_41de44, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 41de4b	 Bytes: 5
  %loadMem1_41de4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41de4b = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41de4b, i64 -119163, i64 5, i64 5)
  store %struct.Memory* %call1_41de4b, %struct.Memory** %MEMORY

  %loadMem2_41de4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41de4b = load i64, i64* %3
  %call2_41de4b = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_41de4b, %struct.Memory* %loadMem2_41de4b)
  store %struct.Memory* %call2_41de4b, %struct.Memory** %MEMORY

  ; Code: movl 0x633b40, %ecx	 RIP: 41de50	 Bytes: 7
  %loadMem_41de50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de50 = call %struct.Memory* @routine_movl_0x633b40___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de50)
  store %struct.Memory* %call_41de50, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rax	 RIP: 41de57	 Bytes: 8
  %loadMem_41de57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de57 = call %struct.Memory* @routine_movslq_0x62ea38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de57)
  store %struct.Memory* %call_41de57, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x84a3d0(,%rax,4)	 RIP: 41de5f	 Bytes: 7
  %loadMem_41de5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de5f = call %struct.Memory* @routine_movl__ecx__0x84a3d0___rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de5f)
  store %struct.Memory* %call_41de5f, %struct.Memory** %MEMORY

  ; Code: movq 0x62da80, %rdi	 RIP: 41de66	 Bytes: 8
  %loadMem_41de66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de66 = call %struct.Memory* @routine_movq_0x62da80___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de66)
  store %struct.Memory* %call_41de66, %struct.Memory** %MEMORY

  ; Code: movq -0x6198(%rbp), %rsi	 RIP: 41de6e	 Bytes: 7
  %loadMem_41de6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de6e = call %struct.Memory* @routine_movq_MINUS0x6198__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de6e)
  store %struct.Memory* %call_41de6e, %struct.Memory** %MEMORY

  ; Code: callq .setbuf_plt	 RIP: 41de75	 Bytes: 5
  %loadMem1_41de75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41de75 = call %struct.Memory* @routine_callq_.setbuf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41de75, i64 -119253, i64 5, i64 5)
  store %struct.Memory* %call1_41de75, %struct.Memory** %MEMORY

  %loadMem2_41de75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41de75 = load i64, i64* %3
  %call2_41de75 = call %struct.Memory* @sub_400ca0.setbuf_plt(%struct.State* %0, i64  %loadPC_41de75, %struct.Memory* %loadMem2_41de75)
  store %struct.Memory* %call2_41de75, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 41de7a	 Bytes: 2
  %loadMem_41de7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de7a = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de7a)
  store %struct.Memory* %call_41de7a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41de7c	 Bytes: 2
  %loadMem_41de7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de7c = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de7c)
  store %struct.Memory* %call_41de7c, %struct.Memory** %MEMORY

  ; Code: movq 0x62da90, %rdi	 RIP: 41de7e	 Bytes: 8
  %loadMem_41de7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de7e = call %struct.Memory* @routine_movq_0x62da90___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de7e)
  store %struct.Memory* %call_41de7e, %struct.Memory** %MEMORY

  ; Code: callq .setbuf_plt	 RIP: 41de86	 Bytes: 5
  %loadMem1_41de86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41de86 = call %struct.Memory* @routine_callq_.setbuf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41de86, i64 -119270, i64 5, i64 5)
  store %struct.Memory* %call1_41de86, %struct.Memory** %MEMORY

  %loadMem2_41de86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41de86 = load i64, i64* %3
  %call2_41de86 = call %struct.Memory* @sub_400ca0.setbuf_plt(%struct.State* %0, i64  %loadPC_41de86, %struct.Memory* %loadMem2_41de86)
  store %struct.Memory* %call2_41de86, %struct.Memory** %MEMORY

  ; Code: callq .start_up	 RIP: 41de8b	 Bytes: 5
  %loadMem1_41de8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41de8b = call %struct.Memory* @routine_callq_.start_up(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41de8b, i64 25413, i64 5, i64 5)
  store %struct.Memory* %call1_41de8b, %struct.Memory** %MEMORY

  %loadMem2_41de8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41de8b = load i64, i64* %3
  %call2_41de8b = call %struct.Memory* @sub_4241d0.start_up(%struct.State* %0, i64  %loadPC_41de8b, %struct.Memory* %loadMem2_41de8b)
  store %struct.Memory* %call2_41de8b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x8(%rbp)	 RIP: 41de90	 Bytes: 4
  %loadMem_41de90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de90 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de90)
  store %struct.Memory* %call_41de90, %struct.Memory** %MEMORY

  ; Code: jne .L_41debe	 RIP: 41de94	 Bytes: 6
  %loadMem_41de94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de94 = call %struct.Memory* @routine_jne_.L_41debe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de94, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_41de94, %struct.Memory** %MEMORY

  %loadBr_41de94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41de94 = icmp eq i8 %loadBr_41de94, 1
  br i1 %cmpBr_41de94, label %block_.L_41debe, label %block_41de9a

block_41de9a:
  ; Code: movq $0x42925b, %rdi	 RIP: 41de9a	 Bytes: 10
  %loadMem_41de9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41de9a = call %struct.Memory* @routine_movq__0x42925b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41de9a)
  store %struct.Memory* %call_41de9a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41dea4	 Bytes: 2
  %loadMem_41dea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dea4 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dea4)
  store %struct.Memory* %call_41dea4, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41dea6	 Bytes: 5
  %loadMem1_41dea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41dea6 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41dea6, i64 -119286, i64 5, i64 5)
  store %struct.Memory* %call1_41dea6, %struct.Memory** %MEMORY

  %loadMem2_41dea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41dea6 = load i64, i64* %3
  %call2_41dea6 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41dea6, %struct.Memory* %loadMem2_41dea6)
  store %struct.Memory* %call2_41dea6, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 41deab	 Bytes: 4
  %loadMem_41deab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deab = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deab)
  store %struct.Memory* %call_41deab, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdi), %rdi	 RIP: 41deaf	 Bytes: 4
  %loadMem_41deaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deaf = call %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deaf)
  store %struct.Memory* %call_41deaf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61b0(%rbp)	 RIP: 41deb3	 Bytes: 6
  %loadMem_41deb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deb3 = call %struct.Memory* @routine_movl__eax__MINUS0x61b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deb3)
  store %struct.Memory* %call_41deb3, %struct.Memory** %MEMORY

  ; Code: callq .run_autotest	 RIP: 41deb9	 Bytes: 5
  %loadMem1_41deb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41deb9 = call %struct.Memory* @routine_callq_.run_autotest(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41deb9, i64 -107769, i64 5, i64 5)
  store %struct.Memory* %call1_41deb9, %struct.Memory** %MEMORY

  %loadMem2_41deb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41deb9 = load i64, i64* %3
  %call2_41deb9 = call %struct.Memory* @sub_4039c0.run_autotest(%struct.State* %0, i64  %loadPC_41deb9, %struct.Memory* %loadMem2_41deb9)
  store %struct.Memory* %call2_41deb9, %struct.Memory** %MEMORY

  ; Code: .L_41debe:	 RIP: 41debe	 Bytes: 0
  br label %block_.L_41debe
block_.L_41debe:

  ; Code: jmpq .L_41dec3	 RIP: 41debe	 Bytes: 5
  %loadMem_41debe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41debe = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41debe, i64 5, i64 5)
  store %struct.Memory* %call_41debe, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41dec3:	 RIP: 41dec3	 Bytes: 0
block_.L_41dec3:

  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41dec3	 Bytes: 7
  %loadMem_41dec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dec3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dec3)
  store %struct.Memory* %call_41dec3, %struct.Memory** %MEMORY

  ; Code: jne .L_41e7b5	 RIP: 41deca	 Bytes: 6
  %loadMem_41deca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deca = call %struct.Memory* @routine_jne_.L_41e7b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deca, i8* %BRANCH_TAKEN, i64 2283, i64 6, i64 6)
  store %struct.Memory* %call_41deca, %struct.Memory** %MEMORY

  %loadBr_41deca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41deca = icmp eq i8 %loadBr_41deca, 1
  br i1 %cmpBr_41deca, label %block_.L_41e7b5, label %block_41ded0

block_41ded0:
  ; Code: movl 0x886b84, %eax	 RIP: 41ded0	 Bytes: 7
  %loadMem_41ded0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ded0 = call %struct.Memory* @routine_movl_0x886b84___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ded0)
  store %struct.Memory* %call_41ded0, %struct.Memory** %MEMORY

  ; Code: cmpl 0x8661bc, %eax	 RIP: 41ded7	 Bytes: 7
  %loadMem_41ded7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ded7 = call %struct.Memory* @routine_cmpl_0x8661bc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ded7)
  store %struct.Memory* %call_41ded7, %struct.Memory** %MEMORY

  ; Code: je .L_41def1	 RIP: 41dede	 Bytes: 6
  %loadMem_41dede = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dede = call %struct.Memory* @routine_je_.L_41def1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dede, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_41dede, %struct.Memory** %MEMORY

  %loadBr_41dede = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dede = icmp eq i8 %loadBr_41dede, 1
  br i1 %cmpBr_41dede, label %block_.L_41def1, label %block_41dee4

block_41dee4:
  ; Code: cmpl $0x0, -0x6134(%rbp)	 RIP: 41dee4	 Bytes: 7
  %loadMem_41dee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dee4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dee4)
  store %struct.Memory* %call_41dee4, %struct.Memory** %MEMORY

  ; Code: je .L_41e7b5	 RIP: 41deeb	 Bytes: 6
  %loadMem_41deeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41deeb = call %struct.Memory* @routine_je_.L_41e7b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41deeb, i8* %BRANCH_TAKEN, i64 2250, i64 6, i64 6)
  store %struct.Memory* %call_41deeb, %struct.Memory** %MEMORY

  %loadBr_41deeb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41deeb = icmp eq i8 %loadBr_41deeb, 1
  br i1 %cmpBr_41deeb, label %block_.L_41e7b5, label %block_.L_41def1

  ; Code: .L_41def1:	 RIP: 41def1	 Bytes: 0
block_.L_41def1:

  ; Code: cmpl $0x0, -0x358(%rbp)	 RIP: 41def1	 Bytes: 7
  %loadMem_41def1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41def1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41def1)
  store %struct.Memory* %call_41def1, %struct.Memory** %MEMORY

  ; Code: jne .L_41e7b5	 RIP: 41def8	 Bytes: 6
  %loadMem_41def8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41def8 = call %struct.Memory* @routine_jne_.L_41e7b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41def8, i8* %BRANCH_TAKEN, i64 2237, i64 6, i64 6)
  store %struct.Memory* %call_41def8, %struct.Memory** %MEMORY

  %loadBr_41def8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41def8 = icmp eq i8 %loadBr_41def8, 1
  br i1 %cmpBr_41def8, label %block_.L_41e7b5, label %block_41defe

block_41defe:
  ; Code: cmpl $0x0, 0x86bd90	 RIP: 41defe	 Bytes: 8
  %loadMem_41defe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41defe = call %struct.Memory* @routine_cmpl__0x0__0x86bd90(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41defe)
  store %struct.Memory* %call_41defe, %struct.Memory** %MEMORY

  ; Code: jne .L_41e7b5	 RIP: 41df06	 Bytes: 6
  %loadMem_41df06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df06 = call %struct.Memory* @routine_jne_.L_41e7b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df06, i8* %BRANCH_TAKEN, i64 2223, i64 6, i64 6)
  store %struct.Memory* %call_41df06, %struct.Memory** %MEMORY

  %loadBr_41df06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df06 = icmp eq i8 %loadBr_41df06, 1
  br i1 %cmpBr_41df06, label %block_.L_41e7b5, label %block_41df0c

block_41df0c:
  ; Code: cmpl $0x0, 0x866530	 RIP: 41df0c	 Bytes: 8
  %loadMem_41df0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df0c = call %struct.Memory* @routine_cmpl__0x0__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df0c)
  store %struct.Memory* %call_41df0c, %struct.Memory** %MEMORY

  ; Code: jne .L_41e7b5	 RIP: 41df14	 Bytes: 6
  %loadMem_41df14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df14 = call %struct.Memory* @routine_jne_.L_41e7b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df14, i8* %BRANCH_TAKEN, i64 2209, i64 6, i64 6)
  store %struct.Memory* %call_41df14, %struct.Memory** %MEMORY

  %loadBr_41df14 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df14 = icmp eq i8 %loadBr_41df14, 1
  br i1 %cmpBr_41df14, label %block_.L_41e7b5, label %block_41df1a

block_41df1a:
  ; Code: leaq -0x6158(%rbp), %rdi	 RIP: 41df1a	 Bytes: 7
  %loadMem_41df1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df1a = call %struct.Memory* @routine_leaq_MINUS0x6158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df1a)
  store %struct.Memory* %call_41df1a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bbc	 RIP: 41df21	 Bytes: 11
  %loadMem_41df21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df21 = call %struct.Memory* @routine_movl__0x0__0x886bbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df21)
  store %struct.Memory* %call_41df21, %struct.Memory** %MEMORY

  ; Code: callq .think	 RIP: 41df2c	 Bytes: 5
  %loadMem1_41df2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41df2c = call %struct.Memory* @routine_callq_.think(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41df2c, i64 -13804, i64 5, i64 5)
  store %struct.Memory* %call1_41df2c, %struct.Memory** %MEMORY

  %loadMem2_41df2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41df2c = load i64, i64* %3
  %call2_41df2c = call %struct.Memory* @sub_41a940.think(%struct.State* %0, i64  %loadPC_41df2c, %struct.Memory* %loadMem2_41df2c)
  store %struct.Memory* %call2_41df2c, %struct.Memory** %MEMORY

  ; Code: movq -0x6158(%rbp), %rdi	 RIP: 41df31	 Bytes: 7
  %loadMem_41df31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df31 = call %struct.Memory* @routine_movq_MINUS0x6158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df31)
  store %struct.Memory* %call_41df31, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x350(%rbp)	 RIP: 41df38	 Bytes: 7
  %loadMem_41df38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df38 = call %struct.Memory* @routine_movq__rdi__MINUS0x350__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df38)
  store %struct.Memory* %call_41df38, %struct.Memory** %MEMORY

  ; Code: movq -0x6150(%rbp), %rdi	 RIP: 41df3f	 Bytes: 7
  %loadMem_41df3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df3f = call %struct.Memory* @routine_movq_MINUS0x6150__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df3f)
  store %struct.Memory* %call_41df3f, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x348(%rbp)	 RIP: 41df46	 Bytes: 7
  %loadMem_41df46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df46 = call %struct.Memory* @routine_movq__rdi__MINUS0x348__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df46)
  store %struct.Memory* %call_41df46, %struct.Memory** %MEMORY

  ; Code: movq -0x6148(%rbp), %rdi	 RIP: 41df4d	 Bytes: 7
  %loadMem_41df4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df4d = call %struct.Memory* @routine_movq_MINUS0x6148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df4d)
  store %struct.Memory* %call_41df4d, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x340(%rbp)	 RIP: 41df54	 Bytes: 7
  %loadMem_41df54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df54 = call %struct.Memory* @routine_movq__rdi__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df54)
  store %struct.Memory* %call_41df54, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bc0	 RIP: 41df5b	 Bytes: 11
  %loadMem_41df5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df5b = call %struct.Memory* @routine_movl__0x0__0x886bc0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df5b)
  store %struct.Memory* %call_41df5b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x86bd90	 RIP: 41df66	 Bytes: 8
  %loadMem_41df66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df66 = call %struct.Memory* @routine_cmpl__0x0__0x86bd90(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df66)
  store %struct.Memory* %call_41df66, %struct.Memory** %MEMORY

  ; Code: je .L_41df82	 RIP: 41df6e	 Bytes: 6
  %loadMem_41df6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df6e = call %struct.Memory* @routine_je_.L_41df82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df6e, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41df6e, %struct.Memory** %MEMORY

  %loadBr_41df6e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df6e = icmp eq i8 %loadBr_41df6e, 1
  br i1 %cmpBr_41df6e, label %block_.L_41df82, label %block_41df74

block_41df74:
  ; Code: cmpl $0x0, 0x86bd60	 RIP: 41df74	 Bytes: 8
  %loadMem_41df74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df74 = call %struct.Memory* @routine_cmpl__0x0__0x86bd60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df74)
  store %struct.Memory* %call_41df74, %struct.Memory** %MEMORY

  ; Code: je .L_41e7b0	 RIP: 41df7c	 Bytes: 6
  %loadMem_41df7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df7c = call %struct.Memory* @routine_je_.L_41e7b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df7c, i8* %BRANCH_TAKEN, i64 2100, i64 6, i64 6)
  store %struct.Memory* %call_41df7c, %struct.Memory** %MEMORY

  %loadBr_41df7c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df7c = icmp eq i8 %loadBr_41df7c, 1
  br i1 %cmpBr_41df7c, label %block_.L_41e7b0, label %block_.L_41df82

  ; Code: .L_41df82:	 RIP: 41df82	 Bytes: 0
block_.L_41df82:

  ; Code: cmpl $0x4, 0x85f154	 RIP: 41df82	 Bytes: 8
  %loadMem_41df82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df82 = call %struct.Memory* @routine_cmpl__0x4__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df82)
  store %struct.Memory* %call_41df82, %struct.Memory** %MEMORY

  ; Code: je .L_41df9e	 RIP: 41df8a	 Bytes: 6
  %loadMem_41df8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df8a = call %struct.Memory* @routine_je_.L_41df9e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df8a, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41df8a, %struct.Memory** %MEMORY

  %loadBr_41df8a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df8a = icmp eq i8 %loadBr_41df8a, 1
  br i1 %cmpBr_41df8a, label %block_.L_41df9e, label %block_41df90

block_41df90:
  ; Code: cmpl $0x3, 0x85f154	 RIP: 41df90	 Bytes: 8
  %loadMem_41df90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df90 = call %struct.Memory* @routine_cmpl__0x3__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df90)
  store %struct.Memory* %call_41df90, %struct.Memory** %MEMORY

  ; Code: jne .L_41dfba	 RIP: 41df98	 Bytes: 6
  %loadMem_41df98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df98 = call %struct.Memory* @routine_jne_.L_41dfba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df98, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41df98, %struct.Memory** %MEMORY

  %loadBr_41df98 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41df98 = icmp eq i8 %loadBr_41df98, 1
  br i1 %cmpBr_41df98, label %block_.L_41dfba, label %block_.L_41df9e

  ; Code: .L_41df9e:	 RIP: 41df9e	 Bytes: 0
block_.L_41df9e:

  ; Code: cmpl $0x2, 0x866530	 RIP: 41df9e	 Bytes: 8
  %loadMem_41df9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41df9e = call %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41df9e)
  store %struct.Memory* %call_41df9e, %struct.Memory** %MEMORY

  ; Code: je .L_41dfba	 RIP: 41dfa6	 Bytes: 6
  %loadMem_41dfa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfa6 = call %struct.Memory* @routine_je_.L_41dfba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfa6, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41dfa6, %struct.Memory** %MEMORY

  %loadBr_41dfa6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dfa6 = icmp eq i8 %loadBr_41dfa6, 1
  br i1 %cmpBr_41dfa6, label %block_.L_41dfba, label %block_41dfac

block_41dfac:
  ; Code: cmpl $0x3, 0x866530	 RIP: 41dfac	 Bytes: 8
  %loadMem_41dfac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfac = call %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfac)
  store %struct.Memory* %call_41dfac, %struct.Memory** %MEMORY

  ; Code: jne .L_41e01c	 RIP: 41dfb4	 Bytes: 6
  %loadMem_41dfb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfb4 = call %struct.Memory* @routine_jne_.L_41e01c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfb4, i8* %BRANCH_TAKEN, i64 104, i64 6, i64 6)
  store %struct.Memory* %call_41dfb4, %struct.Memory** %MEMORY

  %loadBr_41dfb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dfb4 = icmp eq i8 %loadBr_41dfb4, 1
  br i1 %cmpBr_41dfb4, label %block_.L_41e01c, label %block_.L_41dfba

  ; Code: .L_41dfba:	 RIP: 41dfba	 Bytes: 0
block_.L_41dfba:

  ; Code: cmpl $0x2, 0x85f154	 RIP: 41dfba	 Bytes: 8
  %loadMem_41dfba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfba = call %struct.Memory* @routine_cmpl__0x2__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfba)
  store %struct.Memory* %call_41dfba, %struct.Memory** %MEMORY

  ; Code: je .L_41dfe4	 RIP: 41dfc2	 Bytes: 6
  %loadMem_41dfc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfc2 = call %struct.Memory* @routine_je_.L_41dfe4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfc2, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41dfc2, %struct.Memory** %MEMORY

  %loadBr_41dfc2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dfc2 = icmp eq i8 %loadBr_41dfc2, 1
  br i1 %cmpBr_41dfc2, label %block_.L_41dfe4, label %block_41dfc8

block_41dfc8:
  ; Code: cmpl $0x0, 0x85f154	 RIP: 41dfc8	 Bytes: 8
  %loadMem_41dfc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfc8 = call %struct.Memory* @routine_cmpl__0x0__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfc8)
  store %struct.Memory* %call_41dfc8, %struct.Memory** %MEMORY

  ; Code: je .L_41dfe4	 RIP: 41dfd0	 Bytes: 6
  %loadMem_41dfd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfd0 = call %struct.Memory* @routine_je_.L_41dfe4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfd0, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41dfd0, %struct.Memory** %MEMORY

  %loadBr_41dfd0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dfd0 = icmp eq i8 %loadBr_41dfd0, 1
  br i1 %cmpBr_41dfd0, label %block_.L_41dfe4, label %block_41dfd6

block_41dfd6:
  ; Code: cmpl $0x1, 0x85f154	 RIP: 41dfd6	 Bytes: 8
  %loadMem_41dfd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfd6 = call %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfd6)
  store %struct.Memory* %call_41dfd6, %struct.Memory** %MEMORY

  ; Code: jne .L_41e6d3	 RIP: 41dfde	 Bytes: 6
  %loadMem_41dfde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfde = call %struct.Memory* @routine_jne_.L_41e6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfde, i8* %BRANCH_TAKEN, i64 1781, i64 6, i64 6)
  store %struct.Memory* %call_41dfde, %struct.Memory** %MEMORY

  %loadBr_41dfde = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dfde = icmp eq i8 %loadBr_41dfde, 1
  br i1 %cmpBr_41dfde, label %block_.L_41e6d3, label %block_.L_41dfe4

  ; Code: .L_41dfe4:	 RIP: 41dfe4	 Bytes: 0
block_.L_41dfe4:

  ; Code: cmpl $0x1, 0x886b84	 RIP: 41dfe4	 Bytes: 8
  %loadMem_41dfe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfe4 = call %struct.Memory* @routine_cmpl__0x1__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfe4)
  store %struct.Memory* %call_41dfe4, %struct.Memory** %MEMORY

  ; Code: jne .L_41e000	 RIP: 41dfec	 Bytes: 6
  %loadMem_41dfec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dfec = call %struct.Memory* @routine_jne_.L_41e000(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dfec, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41dfec, %struct.Memory** %MEMORY

  %loadBr_41dfec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dfec = icmp eq i8 %loadBr_41dfec, 1
  br i1 %cmpBr_41dfec, label %block_.L_41e000, label %block_41dff2

block_41dff2:
  ; Code: cmpl $0x2, 0x866530	 RIP: 41dff2	 Bytes: 8
  %loadMem_41dff2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dff2 = call %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dff2)
  store %struct.Memory* %call_41dff2, %struct.Memory** %MEMORY

  ; Code: jne .L_41e01c	 RIP: 41dffa	 Bytes: 6
  %loadMem_41dffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41dffa = call %struct.Memory* @routine_jne_.L_41e01c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41dffa, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41dffa, %struct.Memory** %MEMORY

  %loadBr_41dffa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41dffa = icmp eq i8 %loadBr_41dffa, 1
  br i1 %cmpBr_41dffa, label %block_.L_41e01c, label %block_.L_41e000

  ; Code: .L_41e000:	 RIP: 41e000	 Bytes: 0
block_.L_41e000:

  ; Code: cmpl $0x0, 0x886b84	 RIP: 41e000	 Bytes: 8
  %loadMem_41e000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e000 = call %struct.Memory* @routine_cmpl__0x0__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e000)
  store %struct.Memory* %call_41e000, %struct.Memory** %MEMORY

  ; Code: jne .L_41e6d3	 RIP: 41e008	 Bytes: 6
  %loadMem_41e008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e008 = call %struct.Memory* @routine_jne_.L_41e6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e008, i8* %BRANCH_TAKEN, i64 1739, i64 6, i64 6)
  store %struct.Memory* %call_41e008, %struct.Memory** %MEMORY

  %loadBr_41e008 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e008 = icmp eq i8 %loadBr_41e008, 1
  br i1 %cmpBr_41e008, label %block_.L_41e6d3, label %block_41e00e

block_41e00e:
  ; Code: cmpl $0x3, 0x866530	 RIP: 41e00e	 Bytes: 8
  %loadMem_41e00e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e00e = call %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e00e)
  store %struct.Memory* %call_41e00e, %struct.Memory** %MEMORY

  ; Code: je .L_41e6d3	 RIP: 41e016	 Bytes: 6
  %loadMem_41e016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e016 = call %struct.Memory* @routine_je_.L_41e6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e016, i8* %BRANCH_TAKEN, i64 1725, i64 6, i64 6)
  store %struct.Memory* %call_41e016, %struct.Memory** %MEMORY

  %loadBr_41e016 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e016 = icmp eq i8 %loadBr_41e016, 1
  br i1 %cmpBr_41e016, label %block_.L_41e6d3, label %block_.L_41e01c

  ; Code: .L_41e01c:	 RIP: 41e01c	 Bytes: 0
block_.L_41e01c:

  ; Code: cmpl $0x1, 0x866530	 RIP: 41e01c	 Bytes: 8
  %loadMem_41e01c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e01c = call %struct.Memory* @routine_cmpl__0x1__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e01c)
  store %struct.Memory* %call_41e01c, %struct.Memory** %MEMORY

  ; Code: je .L_41e6d3	 RIP: 41e024	 Bytes: 6
  %loadMem_41e024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e024 = call %struct.Memory* @routine_je_.L_41e6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e024, i8* %BRANCH_TAKEN, i64 1711, i64 6, i64 6)
  store %struct.Memory* %call_41e024, %struct.Memory** %MEMORY

  %loadBr_41e024 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e024 = icmp eq i8 %loadBr_41e024, 1
  br i1 %cmpBr_41e024, label %block_.L_41e6d3, label %block_41e02a

block_41e02a:
  ; Code: cmpl $0x4, 0x866530	 RIP: 41e02a	 Bytes: 8
  %loadMem_41e02a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e02a = call %struct.Memory* @routine_cmpl__0x4__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e02a)
  store %struct.Memory* %call_41e02a, %struct.Memory** %MEMORY

  ; Code: je .L_41e6d3	 RIP: 41e032	 Bytes: 6
  %loadMem_41e032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e032 = call %struct.Memory* @routine_je_.L_41e6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e032, i8* %BRANCH_TAKEN, i64 1697, i64 6, i64 6)
  store %struct.Memory* %call_41e032, %struct.Memory** %MEMORY

  %loadBr_41e032 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e032 = icmp eq i8 %loadBr_41e032, 1
  br i1 %cmpBr_41e032, label %block_.L_41e6d3, label %block_41e038

block_41e038:
  ; Code: cmpl $0x5, 0x866530	 RIP: 41e038	 Bytes: 8
  %loadMem_41e038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e038 = call %struct.Memory* @routine_cmpl__0x5__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e038)
  store %struct.Memory* %call_41e038, %struct.Memory** %MEMORY

  ; Code: je .L_41e6d3	 RIP: 41e040	 Bytes: 6
  %loadMem_41e040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e040 = call %struct.Memory* @routine_je_.L_41e6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e040, i8* %BRANCH_TAKEN, i64 1683, i64 6, i64 6)
  store %struct.Memory* %call_41e040, %struct.Memory** %MEMORY

  %loadBr_41e040 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e040 = icmp eq i8 %loadBr_41e040, 1
  br i1 %cmpBr_41e040, label %block_.L_41e6d3, label %block_41e046

block_41e046:
  ; Code: leaq -0x350(%rbp), %rax	 RIP: 41e046	 Bytes: 7
  %loadMem_41e046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e046 = call %struct.Memory* @routine_leaq_MINUS0x350__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e046)
  store %struct.Memory* %call_41e046, %struct.Memory** %MEMORY

  ; Code: leaq -0x220(%rbp), %rdi	 RIP: 41e04d	 Bytes: 7
  %loadMem_41e04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e04d = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e04d)
  store %struct.Memory* %call_41e04d, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rcx	 RIP: 41e054	 Bytes: 3
  %loadMem_41e054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e054 = call %struct.Memory* @routine_movq___rax____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e054)
  store %struct.Memory* %call_41e054, %struct.Memory** %MEMORY

  ; Code: movq %rcx, (%rsp)	 RIP: 41e057	 Bytes: 4
  %loadMem_41e057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e057 = call %struct.Memory* @routine_movq__rcx____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e057)
  store %struct.Memory* %call_41e057, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rcx	 RIP: 41e05b	 Bytes: 4
  %loadMem_41e05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e05b = call %struct.Memory* @routine_movq_0x8__rax____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e05b)
  store %struct.Memory* %call_41e05b, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x8(%rsp)	 RIP: 41e05f	 Bytes: 5
  %loadMem_41e05f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e05f = call %struct.Memory* @routine_movq__rcx__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e05f)
  store %struct.Memory* %call_41e05f, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rax	 RIP: 41e064	 Bytes: 4
  %loadMem_41e064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e064 = call %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e064)
  store %struct.Memory* %call_41e064, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rsp)	 RIP: 41e068	 Bytes: 5
  %loadMem_41e068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e068 = call %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e068)
  store %struct.Memory* %call_41e068, %struct.Memory** %MEMORY

  ; Code: callq .comp_to_coord	 RIP: 41e06d	 Bytes: 5
  %loadMem1_41e06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e06d = call %struct.Memory* @routine_callq_.comp_to_coord(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e06d, i64 16675, i64 5, i64 5)
  store %struct.Memory* %call1_41e06d, %struct.Memory** %MEMORY

  %loadMem2_41e06d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e06d = load i64, i64* %3
  %call2_41e06d = call %struct.Memory* @sub_422190.comp_to_coord(%struct.State* %0, i64  %loadPC_41e06d, %struct.Memory* %loadMem2_41e06d)
  store %struct.Memory* %call2_41e06d, %struct.Memory** %MEMORY

  ; Code: leaq -0x350(%rbp), %rdi	 RIP: 41e072	 Bytes: 7
  %loadMem_41e072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e072 = call %struct.Memory* @routine_leaq_MINUS0x350__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e072)
  store %struct.Memory* %call_41e072, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 41e079	 Bytes: 2
  %loadMem_41e079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e079 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e079)
  store %struct.Memory* %call_41e079, %struct.Memory** %MEMORY

  ; Code: leaq -0x3ba0(%rbp), %rax	 RIP: 41e07b	 Bytes: 7
  %loadMem_41e07b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e07b = call %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e07b)
  store %struct.Memory* %call_41e07b, %struct.Memory** %MEMORY

  ; Code: movl 0x633b40, %edx	 RIP: 41e082	 Bytes: 7
  %loadMem_41e082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e082 = call %struct.Memory* @routine_movl_0x633b40___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e082)
  store %struct.Memory* %call_41e082, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rcx	 RIP: 41e089	 Bytes: 8
  %loadMem_41e089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e089 = call %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e089)
  store %struct.Memory* %call_41e089, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x84a3d0(,%rcx,4)	 RIP: 41e091	 Bytes: 7
  %loadMem_41e091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e091 = call %struct.Memory* @routine_movl__edx__0x84a3d0___rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e091)
  store %struct.Memory* %call_41e091, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rcx	 RIP: 41e098	 Bytes: 8
  %loadMem_41e098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e098 = call %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e098)
  store %struct.Memory* %call_41e098, %struct.Memory** %MEMORY

  ; Code: imulq $0x18, %rcx, %rcx	 RIP: 41e0a0	 Bytes: 4
  %loadMem_41e0a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0a0 = call %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0a0)
  store %struct.Memory* %call_41e0a0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41e0a4	 Bytes: 3
  %loadMem_41e0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0a4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0a4)
  store %struct.Memory* %call_41e0a4, %struct.Memory** %MEMORY

  ; Code: movq -0x350(%rbp), %rcx	 RIP: 41e0a7	 Bytes: 7
  %loadMem_41e0a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0a7 = call %struct.Memory* @routine_movq_MINUS0x350__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0a7)
  store %struct.Memory* %call_41e0a7, %struct.Memory** %MEMORY

  ; Code: movq %rcx, (%rax)	 RIP: 41e0ae	 Bytes: 3
  %loadMem_41e0ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0ae = call %struct.Memory* @routine_movq__rcx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0ae)
  store %struct.Memory* %call_41e0ae, %struct.Memory** %MEMORY

  ; Code: movq -0x348(%rbp), %rcx	 RIP: 41e0b1	 Bytes: 7
  %loadMem_41e0b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0b1 = call %struct.Memory* @routine_movq_MINUS0x348__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0b1)
  store %struct.Memory* %call_41e0b1, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x8(%rax)	 RIP: 41e0b8	 Bytes: 4
  %loadMem_41e0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0b8 = call %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0b8)
  store %struct.Memory* %call_41e0b8, %struct.Memory** %MEMORY

  ; Code: movq -0x340(%rbp), %rcx	 RIP: 41e0bc	 Bytes: 7
  %loadMem_41e0bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0bc = call %struct.Memory* @routine_movq_MINUS0x340__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0bc)
  store %struct.Memory* %call_41e0bc, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x10(%rax)	 RIP: 41e0c3	 Bytes: 4
  %loadMem_41e0c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0c3 = call %struct.Memory* @routine_movq__rcx__0x10__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0c3)
  store %struct.Memory* %call_41e0c3, %struct.Memory** %MEMORY

  ; Code: callq .make	 RIP: 41e0c7	 Bytes: 5
  %loadMem1_41e0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e0c7 = call %struct.Memory* @routine_callq_.make(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e0c7, i64 -76183, i64 5, i64 5)
  store %struct.Memory* %call1_41e0c7, %struct.Memory** %MEMORY

  %loadMem2_41e0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e0c7 = load i64, i64* %3
  %call2_41e0c7 = call %struct.Memory* @sub_40b730.make(%struct.State* %0, i64  %loadPC_41e0c7, %struct.Memory* %loadMem2_41e0c7)
  store %struct.Memory* %call2_41e0c7, %struct.Memory** %MEMORY

  ; Code: leaq -0x6120(%rbp), %rax	 RIP: 41e0cc	 Bytes: 7
  %loadMem_41e0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0cc = call %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0cc)
  store %struct.Memory* %call_41e0cc, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea38, %edx	 RIP: 41e0d3	 Bytes: 7
  %loadMem_41e0d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0d3 = call %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0d3)
  store %struct.Memory* %call_41e0d3, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 41e0da	 Bytes: 2
  %loadMem_41e0da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0da = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0da)
  store %struct.Memory* %call_41e0da, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 41e0dc	 Bytes: 3
  %loadMem_41e0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0dc = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0dc)
  store %struct.Memory* %call_41e0dc, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x62ea38	 RIP: 41e0df	 Bytes: 7
  %loadMem_41e0df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0df = call %struct.Memory* @routine_movl__esi__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0df)
  store %struct.Memory* %call_41e0df, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 41e0e6	 Bytes: 3
  %loadMem_41e0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0e6 = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0e6)
  store %struct.Memory* %call_41e0e6, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 41e0e9	 Bytes: 4
  %loadMem_41e0e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0e9 = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0e9)
  store %struct.Memory* %call_41e0e9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41e0ed	 Bytes: 3
  %loadMem_41e0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0ed = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0ed)
  store %struct.Memory* %call_41e0ed, %struct.Memory** %MEMORY

  ; Code: movq 0x880b20, %rcx	 RIP: 41e0f0	 Bytes: 8
  %loadMem_41e0f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0f0 = call %struct.Memory* @routine_movq_0x880b20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0f0)
  store %struct.Memory* %call_41e0f0, %struct.Memory** %MEMORY

  ; Code: movq %rcx, (%rax)	 RIP: 41e0f8	 Bytes: 3
  %loadMem_41e0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0f8 = call %struct.Memory* @routine_movq__rcx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0f8)
  store %struct.Memory* %call_41e0f8, %struct.Memory** %MEMORY

  ; Code: movq 0x880b28, %rcx	 RIP: 41e0fb	 Bytes: 8
  %loadMem_41e0fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e0fb = call %struct.Memory* @routine_movq_0x880b28___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e0fb)
  store %struct.Memory* %call_41e0fb, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x8(%rax)	 RIP: 41e103	 Bytes: 4
  %loadMem_41e103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e103 = call %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e103)
  store %struct.Memory* %call_41e103, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd84	 RIP: 41e107	 Bytes: 11
  %loadMem_41e107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e107 = call %struct.Memory* @routine_movl__0x0__0x86bd84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e107)
  store %struct.Memory* %call_41e107, %struct.Memory** %MEMORY

  ; Code: movl 0x86bd60, %edx	 RIP: 41e112	 Bytes: 7
  %loadMem_41e112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e112 = call %struct.Memory* @routine_movl_0x86bd60___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e112)
  store %struct.Memory* %call_41e112, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %edx	 RIP: 41e119	 Bytes: 3
  %loadMem_41e119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e119 = call %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e119)
  store %struct.Memory* %call_41e119, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x86bd60	 RIP: 41e11c	 Bytes: 7
  %loadMem_41e11c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e11c = call %struct.Memory* @routine_movl__edx__0x86bd60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e11c)
  store %struct.Memory* %call_41e11c, %struct.Memory** %MEMORY

  ; Code: callq .is_draw	 RIP: 41e123	 Bytes: 5
  %loadMem1_41e123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e123 = call %struct.Memory* @routine_callq_.is_draw(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e123, i64 -112643, i64 5, i64 5)
  store %struct.Memory* %call1_41e123, %struct.Memory** %MEMORY

  %loadMem2_41e123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e123 = load i64, i64* %3
  %call2_41e123 = call %struct.Memory* @sub_402920.is_draw(%struct.State* %0, i64  %loadPC_41e123, %struct.Memory* %loadMem2_41e123)
  store %struct.Memory* %call2_41e123, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41e128	 Bytes: 3
  %loadMem_41e128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e128 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e128)
  store %struct.Memory* %call_41e128, %struct.Memory** %MEMORY

  ; Code: je .L_41e141	 RIP: 41e12b	 Bytes: 6
  %loadMem_41e12b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e12b = call %struct.Memory* @routine_je_.L_41e141(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e12b, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_41e12b, %struct.Memory** %MEMORY

  %loadBr_41e12b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e12b = icmp eq i8 %loadBr_41e12b, 1
  br i1 %cmpBr_41e12b, label %block_.L_41e141, label %block_41e131

block_41e131:
  ; Code: movl $0x5, 0x866530	 RIP: 41e131	 Bytes: 11
  %loadMem_41e131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e131 = call %struct.Memory* @routine_movl__0x5__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e131)
  store %struct.Memory* %call_41e131, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e15f	 RIP: 41e13c	 Bytes: 5
  %loadMem_41e13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e13c = call %struct.Memory* @routine_jmpq_.L_41e15f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e13c, i64 35, i64 5)
  store %struct.Memory* %call_41e13c, %struct.Memory** %MEMORY

  br label %block_.L_41e15f

  ; Code: .L_41e141:	 RIP: 41e141	 Bytes: 0
block_.L_41e141:

  ; Code: cmpl $0x64, 0x866790	 RIP: 41e141	 Bytes: 8
  %loadMem_41e141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e141 = call %struct.Memory* @routine_cmpl__0x64__0x866790(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e141)
  store %struct.Memory* %call_41e141, %struct.Memory** %MEMORY

  ; Code: jle .L_41e15a	 RIP: 41e149	 Bytes: 6
  %loadMem_41e149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e149 = call %struct.Memory* @routine_jle_.L_41e15a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e149, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41e149, %struct.Memory** %MEMORY

  %loadBr_41e149 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e149 = icmp eq i8 %loadBr_41e149, 1
  br i1 %cmpBr_41e149, label %block_.L_41e15a, label %block_41e14f

block_41e14f:
  ; Code: movl $0x4, 0x866530	 RIP: 41e14f	 Bytes: 11
  %loadMem_41e14f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e14f = call %struct.Memory* @routine_movl__0x4__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e14f)
  store %struct.Memory* %call_41e14f, %struct.Memory** %MEMORY

  ; Code: .L_41e15a:	 RIP: 41e15a	 Bytes: 0
  br label %block_.L_41e15a
block_.L_41e15a:

  ; Code: jmpq .L_41e15f	 RIP: 41e15a	 Bytes: 5
  %loadMem_41e15a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e15a = call %struct.Memory* @routine_jmpq_.L_41e15f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e15a, i64 5, i64 5)
  store %struct.Memory* %call_41e15a, %struct.Memory** %MEMORY

  br label %block_.L_41e15f

  ; Code: .L_41e15f:	 RIP: 41e15f	 Bytes: 0
block_.L_41e15f:

  ; Code: movl 0x633b54, %eax	 RIP: 41e15f	 Bytes: 7
  %loadMem_41e15f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e15f = call %struct.Memory* @routine_movl_0x633b54___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e15f)
  store %struct.Memory* %call_41e15f, %struct.Memory** %MEMORY

  ; Code: xorl $0x1, %eax	 RIP: 41e166	 Bytes: 3
  %loadMem_41e166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e166 = call %struct.Memory* @routine_xorl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e166)
  store %struct.Memory* %call_41e166, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x633b54	 RIP: 41e169	 Bytes: 7
  %loadMem_41e169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e169 = call %struct.Memory* @routine_movl__eax__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e169)
  store %struct.Memory* %call_41e169, %struct.Memory** %MEMORY

  ; Code: callq .reset_piece_square	 RIP: 41e170	 Bytes: 5
  %loadMem1_41e170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e170 = call %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e170, i64 18208, i64 5, i64 5)
  store %struct.Memory* %call1_41e170, %struct.Memory** %MEMORY

  %loadMem2_41e170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e170 = load i64, i64* %3
  %call2_41e170 = call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* %0, i64  %loadPC_41e170, %struct.Memory* %loadMem2_41e170)
  store %struct.Memory* %call2_41e170, %struct.Memory** %MEMORY

  ; Code: cmpl $0x28, 0x85f3ec	 RIP: 41e175	 Bytes: 8
  %loadMem_41e175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e175 = call %struct.Memory* @routine_cmpl__0x28__0x85f3ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e175)
  store %struct.Memory* %call_41e175, %struct.Memory** %MEMORY

  ; Code: jge .L_41e1d2	 RIP: 41e17d	 Bytes: 6
  %loadMem_41e17d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e17d = call %struct.Memory* @routine_jge_.L_41e1d2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e17d, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_41e17d, %struct.Memory** %MEMORY

  %loadBr_41e17d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e17d = icmp eq i8 %loadBr_41e17d, 1
  br i1 %cmpBr_41e17d, label %block_.L_41e1d2, label %block_41e183

block_41e183:
  ; Code: cmpl $0x0, 0x85f3ec	 RIP: 41e183	 Bytes: 8
  %loadMem_41e183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e183 = call %struct.Memory* @routine_cmpl__0x0__0x85f3ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e183)
  store %struct.Memory* %call_41e183, %struct.Memory** %MEMORY

  ; Code: jne .L_41e1b0	 RIP: 41e18b	 Bytes: 6
  %loadMem_41e18b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e18b = call %struct.Memory* @routine_jne_.L_41e1b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e18b, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41e18b, %struct.Memory** %MEMORY

  %loadBr_41e18b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e18b = icmp eq i8 %loadBr_41e18b, 1
  br i1 %cmpBr_41e18b, label %block_.L_41e1b0, label %block_41e191

block_41e191:
  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 41e191	 Bytes: 7
  %loadMem_41e191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e191 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e191)
  store %struct.Memory* %call_41e191, %struct.Memory** %MEMORY

  ; Code: movl $0x886740, %eax	 RIP: 41e198	 Bytes: 5
  %loadMem_41e198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e198 = call %struct.Memory* @routine_movl__0x886740___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e198)
  store %struct.Memory* %call_41e198, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 41e19d	 Bytes: 2
  %loadMem_41e19d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e19d = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e19d)
  store %struct.Memory* %call_41e19d, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 41e19f	 Bytes: 5
  %loadMem1_41e19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e19f = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e19f, i64 -120111, i64 5, i64 5)
  store %struct.Memory* %call1_41e19f, %struct.Memory** %MEMORY

  %loadMem2_41e19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e19f = load i64, i64* %3
  %call2_41e19f = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_41e19f, %struct.Memory* %loadMem2_41e19f)
  store %struct.Memory* %call2_41e19f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x61b8(%rbp)	 RIP: 41e1a4	 Bytes: 7
  %loadMem_41e1a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1a4 = call %struct.Memory* @routine_movq__rax__MINUS0x61b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1a4)
  store %struct.Memory* %call_41e1a4, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e1cd	 RIP: 41e1ab	 Bytes: 5
  %loadMem_41e1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1ab = call %struct.Memory* @routine_jmpq_.L_41e1cd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1ab, i64 34, i64 5)
  store %struct.Memory* %call_41e1ab, %struct.Memory** %MEMORY

  br label %block_.L_41e1cd

  ; Code: .L_41e1b0:	 RIP: 41e1b0	 Bytes: 0
block_.L_41e1b0:

  ; Code: movq $0x886740, %rdi	 RIP: 41e1b0	 Bytes: 10
  %loadMem_41e1b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1b0 = call %struct.Memory* @routine_movq__0x886740___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1b0)
  store %struct.Memory* %call_41e1b0, %struct.Memory** %MEMORY

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 41e1ba	 Bytes: 7
  %loadMem_41e1ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1ba = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1ba)
  store %struct.Memory* %call_41e1ba, %struct.Memory** %MEMORY

  ; Code: callq .strcat_plt	 RIP: 41e1c1	 Bytes: 5
  %loadMem1_41e1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e1c1 = call %struct.Memory* @routine_callq_.strcat_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e1c1, i64 -119809, i64 5, i64 5)
  store %struct.Memory* %call1_41e1c1, %struct.Memory** %MEMORY

  %loadMem2_41e1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e1c1 = load i64, i64* %3
  %call2_41e1c1 = call %struct.Memory* @ext_strcat(%struct.State* %0, i64  %loadPC_41e1c1, %struct.Memory* %loadMem2_41e1c1)
  store %struct.Memory* %call2_41e1c1, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x61c0(%rbp)	 RIP: 41e1c6	 Bytes: 7
  %loadMem_41e1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1c6 = call %struct.Memory* @routine_movq__rax__MINUS0x61c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1c6)
  store %struct.Memory* %call_41e1c6, %struct.Memory** %MEMORY

  ; Code: .L_41e1cd:	 RIP: 41e1cd	 Bytes: 0
  br label %block_.L_41e1cd
block_.L_41e1cd:

  ; Code: jmpq .L_41e1d2	 RIP: 41e1cd	 Bytes: 5
  %loadMem_41e1cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1cd = call %struct.Memory* @routine_jmpq_.L_41e1d2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1cd, i64 5, i64 5)
  store %struct.Memory* %call_41e1cd, %struct.Memory** %MEMORY

  br label %block_.L_41e1d2

  ; Code: .L_41e1d2:	 RIP: 41e1d2	 Bytes: 0
block_.L_41e1d2:

  ; Code: movq $0x4285ec, %rdi	 RIP: 41e1d2	 Bytes: 10
  %loadMem_41e1d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1d2 = call %struct.Memory* @routine_movq__0x4285ec___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1d2)
  store %struct.Memory* %call_41e1d2, %struct.Memory** %MEMORY

  ; Code: movl 0x44120a(%rip), %eax	 RIP: 41e1dc	 Bytes: 6
  %loadMem_41e1dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1dc = call %struct.Memory* @routine_movl_0x44120a__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1dc)
  store %struct.Memory* %call_41e1dc, %struct.Memory** %MEMORY

  ; Code: incl %eax	 RIP: 41e1e2	 Bytes: 2
  %loadMem_41e1e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1e2 = call %struct.Memory* @routine_incl__eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1e2)
  store %struct.Memory* %call_41e1e2, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x441202(%rip)	 RIP: 41e1e4	 Bytes: 6
  %loadMem_41e1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1e4 = call %struct.Memory* @routine_movl__eax__0x441202__rip_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1e4)
  store %struct.Memory* %call_41e1e4, %struct.Memory** %MEMORY

  ; Code: movl 0x446310(%rip), %eax	 RIP: 41e1ea	 Bytes: 6
  %loadMem_41e1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1ea = call %struct.Memory* @routine_movl_0x446310__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1ea)
  store %struct.Memory* %call_41e1ea, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x21cc4c(%rip), %xmm0	 RIP: 41e1f0	 Bytes: 8
  %loadMem_41e1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1f0 = call %struct.Memory* @routine_cvtsi2ssl_0x21cc4c__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1f0)
  store %struct.Memory* %call_41e1f0, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 41e1f8	 Bytes: 4
  %loadMem_41e1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1f8 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1f8)
  store %struct.Memory* %call_41e1f8, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 41e1fc	 Bytes: 4
  %loadMem_41e1fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e1fc = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e1fc)
  store %struct.Memory* %call_41e1fc, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41e200	 Bytes: 4
  %loadMem_41e200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e200 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e200)
  store %struct.Memory* %call_41e200, %struct.Memory** %MEMORY

  ; Code: movsd 0xa19c(%rip), %xmm1	 RIP: 41e204	 Bytes: 8
  %loadMem_41e204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e204 = call %struct.Memory* @routine_movsd_0xa19c__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e204)
  store %struct.Memory* %call_41e204, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm1, %xmm0	 RIP: 41e20c	 Bytes: 4
  %loadMem_41e20c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e20c = call %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e20c)
  store %struct.Memory* %call_41e20c, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 41e210	 Bytes: 4
  %loadMem_41e210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e210 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e210)
  store %struct.Memory* %call_41e210, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41e214	 Bytes: 4
  %loadMem_41e214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e214 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e214)
  store %struct.Memory* %call_41e214, %struct.Memory** %MEMORY

  ; Code: movl $0x4284ed, %ecx	 RIP: 41e218	 Bytes: 5
  %loadMem_41e218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e218 = call %struct.Memory* @routine_movl__0x4284ed___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e218)
  store %struct.Memory* %call_41e218, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 41e21d	 Bytes: 2
  %loadMem_41e21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e21d = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e21d)
  store %struct.Memory* %call_41e21d, %struct.Memory** %MEMORY

  ; Code: movb $0x1, %sil	 RIP: 41e21f	 Bytes: 3
  %loadMem_41e21f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e21f = call %struct.Memory* @routine_movb__0x1___sil(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e21f)
  store %struct.Memory* %call_41e21f, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x61c8(%rbp)	 RIP: 41e222	 Bytes: 7
  %loadMem_41e222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e222 = call %struct.Memory* @routine_movq__rdi__MINUS0x61c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e222)
  store %struct.Memory* %call_41e222, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 41e229	 Bytes: 3
  %loadMem_41e229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e229 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e229)
  store %struct.Memory* %call_41e229, %struct.Memory** %MEMORY

  ; Code: movb %sil, -0x61c9(%rbp)	 RIP: 41e22c	 Bytes: 7
  %loadMem_41e22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e22c = call %struct.Memory* @routine_movb__sil__MINUS0x61c9__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e22c)
  store %struct.Memory* %call_41e22c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41e233	 Bytes: 2
  %loadMem_41e233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e233 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e233)
  store %struct.Memory* %call_41e233, %struct.Memory** %MEMORY

  ; Code: movb -0x61c9(%rbp), %al	 RIP: 41e235	 Bytes: 6
  %loadMem_41e235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e235 = call %struct.Memory* @routine_movb_MINUS0x61c9__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e235)
  store %struct.Memory* %call_41e235, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e23b	 Bytes: 5
  %loadMem1_41e23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e23b = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e23b, i64 -120203, i64 5, i64 5)
  store %struct.Memory* %call1_41e23b, %struct.Memory** %MEMORY

  %loadMem2_41e23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e23b = load i64, i64* %3
  %call2_41e23b = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e23b, %struct.Memory* %loadMem2_41e23b)
  store %struct.Memory* %call2_41e23b, %struct.Memory** %MEMORY

  ; Code: movl 0x4628ca(%rip), %ecx	 RIP: 41e240	 Bytes: 6
  %loadMem_41e240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e240 = call %struct.Memory* @routine_movl_0x4628ca__rip____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e240)
  store %struct.Memory* %call_41e240, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 41e246	 Bytes: 2
  %loadMem_41e246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e246 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e246)
  store %struct.Memory* %call_41e246, %struct.Memory** %MEMORY

  ; Code: movl %edx, %ecx	 RIP: 41e248	 Bytes: 2
  %loadMem_41e248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e248 = call %struct.Memory* @routine_movl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e248)
  store %struct.Memory* %call_41e248, %struct.Memory** %MEMORY

  ; Code: movl 0x2102a0(%rip), %esi	 RIP: 41e24a	 Bytes: 6
  %loadMem_41e24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e24a = call %struct.Memory* @routine_movl_0x2102a0__rip____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e24a)
  store %struct.Memory* %call_41e24a, %struct.Memory** %MEMORY

  ; Code: movl %esi, %edi	 RIP: 41e250	 Bytes: 2
  %loadMem_41e250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e250 = call %struct.Memory* @routine_movl__esi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e250)
  store %struct.Memory* %call_41e250, %struct.Memory** %MEMORY

  ; Code: movl %edi, %esi	 RIP: 41e252	 Bytes: 2
  %loadMem_41e252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e252 = call %struct.Memory* @routine_movl__edi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e252)
  store %struct.Memory* %call_41e252, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %rdi, %xmm0	 RIP: 41e254	 Bytes: 5
  %loadMem_41e254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e254 = call %struct.Memory* @routine_cvtsi2ssq__rdi___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e254)
  store %struct.Memory* %call_41e254, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %rdx, %xmm1	 RIP: 41e259	 Bytes: 5
  %loadMem_41e259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e259 = call %struct.Memory* @routine_cvtsi2ssq__rdx___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e259)
  store %struct.Memory* %call_41e259, %struct.Memory** %MEMORY

  ; Code: movss 0xa12a(%rip), %xmm2	 RIP: 41e25e	 Bytes: 8
  %loadMem_41e25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e25e = call %struct.Memory* @routine_movss_0xa12a__rip____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e25e)
  store %struct.Memory* %call_41e25e, %struct.Memory** %MEMORY

  ; Code: addss %xmm2, %xmm1	 RIP: 41e266	 Bytes: 4
  %loadMem_41e266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e266 = call %struct.Memory* @routine_addss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e266)
  store %struct.Memory* %call_41e266, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 41e26a	 Bytes: 4
  %loadMem_41e26a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e26a = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e26a)
  store %struct.Memory* %call_41e26a, %struct.Memory** %MEMORY

  ; Code: movss 0xa11e(%rip), %xmm1	 RIP: 41e26e	 Bytes: 8
  %loadMem_41e26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e26e = call %struct.Memory* @routine_movss_0xa11e__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e26e)
  store %struct.Memory* %call_41e26e, %struct.Memory** %MEMORY

  ; Code: mulss %xmm1, %xmm0	 RIP: 41e276	 Bytes: 4
  %loadMem_41e276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e276 = call %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e276)
  store %struct.Memory* %call_41e276, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41e27a	 Bytes: 4
  %loadMem_41e27a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e27a = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e27a)
  store %struct.Memory* %call_41e27a, %struct.Memory** %MEMORY

  ; Code: movl $0x42850a, %r8d	 RIP: 41e27e	 Bytes: 6
  %loadMem_41e27e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e27e = call %struct.Memory* @routine_movl__0x42850a___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e27e)
  store %struct.Memory* %call_41e27e, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edi	 RIP: 41e284	 Bytes: 3
  %loadMem_41e284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e284 = call %struct.Memory* @routine_movl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e284)
  store %struct.Memory* %call_41e284, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x61d0(%rbp)	 RIP: 41e287	 Bytes: 6
  %loadMem_41e287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e287 = call %struct.Memory* @routine_movl__esi__MINUS0x61d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e287)
  store %struct.Memory* %call_41e287, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41e28d	 Bytes: 2
  %loadMem_41e28d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e28d = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e28d)
  store %struct.Memory* %call_41e28d, %struct.Memory** %MEMORY

  ; Code: movl -0x61d0(%rbp), %edx	 RIP: 41e28f	 Bytes: 6
  %loadMem_41e28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e28f = call %struct.Memory* @routine_movl_MINUS0x61d0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e28f)
  store %struct.Memory* %call_41e28f, %struct.Memory** %MEMORY

  ; Code: movb -0x61c9(%rbp), %r9b	 RIP: 41e295	 Bytes: 7
  %loadMem_41e295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e295 = call %struct.Memory* @routine_movb_MINUS0x61c9__rbp____r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e295)
  store %struct.Memory* %call_41e295, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61d4(%rbp)	 RIP: 41e29c	 Bytes: 6
  %loadMem_41e29c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e29c = call %struct.Memory* @routine_movl__eax__MINUS0x61d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e29c)
  store %struct.Memory* %call_41e29c, %struct.Memory** %MEMORY

  ; Code: movb %r9b, %al	 RIP: 41e2a2	 Bytes: 3
  %loadMem_41e2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2a2 = call %struct.Memory* @routine_movb__r9b___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2a2)
  store %struct.Memory* %call_41e2a2, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0x61d8(%rbp)	 RIP: 41e2a5	 Bytes: 8
  %loadMem_41e2a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2a5 = call %struct.Memory* @routine_movss__xmm1__MINUS0x61d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2a5)
  store %struct.Memory* %call_41e2a5, %struct.Memory** %MEMORY

  ; Code: movss %xmm2, -0x61dc(%rbp)	 RIP: 41e2ad	 Bytes: 8
  %loadMem_41e2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2ad = call %struct.Memory* @routine_movss__xmm2__MINUS0x61dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2ad)
  store %struct.Memory* %call_41e2ad, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e2b5	 Bytes: 5
  %loadMem1_41e2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e2b5 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e2b5, i64 -120325, i64 5, i64 5)
  store %struct.Memory* %call1_41e2b5, %struct.Memory** %MEMORY

  %loadMem2_41e2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e2b5 = load i64, i64* %3
  %call2_41e2b5 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e2b5, %struct.Memory* %loadMem2_41e2b5)
  store %struct.Memory* %call2_41e2b5, %struct.Memory** %MEMORY

  ; Code: movl 0x446248(%rip), %esi	 RIP: 41e2ba	 Bytes: 6
  %loadMem_41e2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2ba = call %struct.Memory* @routine_movl_0x446248__rip____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2ba)
  store %struct.Memory* %call_41e2ba, %struct.Memory** %MEMORY

  ; Code: movl 0x21074e(%rip), %ecx	 RIP: 41e2c0	 Bytes: 6
  %loadMem_41e2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2c0 = call %struct.Memory* @routine_movl_0x21074e__rip____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2c0)
  store %struct.Memory* %call_41e2c0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 41e2c6	 Bytes: 2
  %loadMem_41e2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2c6 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2c6)
  store %struct.Memory* %call_41e2c6, %struct.Memory** %MEMORY

  ; Code: movl %edi, %ecx	 RIP: 41e2c8	 Bytes: 2
  %loadMem_41e2c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2c8 = call %struct.Memory* @routine_movl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2c8)
  store %struct.Memory* %call_41e2c8, %struct.Memory** %MEMORY

  ; Code: movl 0x4484d4(%rip), %edx	 RIP: 41e2ca	 Bytes: 6
  %loadMem_41e2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2ca = call %struct.Memory* @routine_movl_0x4484d4__rip____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2ca)
  store %struct.Memory* %call_41e2ca, %struct.Memory** %MEMORY

  ; Code: movl %edx, %r10d	 RIP: 41e2d0	 Bytes: 3
  %loadMem_41e2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2d0 = call %struct.Memory* @routine_movl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2d0)
  store %struct.Memory* %call_41e2d0, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %edx	 RIP: 41e2d3	 Bytes: 3
  %loadMem_41e2d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2d3 = call %struct.Memory* @routine_movl__r10d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2d3)
  store %struct.Memory* %call_41e2d3, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %r10, %xmm0	 RIP: 41e2d6	 Bytes: 5
  %loadMem_41e2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2d6 = call %struct.Memory* @routine_cvtsi2ssq__r10___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2d6)
  store %struct.Memory* %call_41e2d6, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %rdi, %xmm1	 RIP: 41e2db	 Bytes: 5
  %loadMem_41e2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2db = call %struct.Memory* @routine_cvtsi2ssq__rdi___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2db)
  store %struct.Memory* %call_41e2db, %struct.Memory** %MEMORY

  ; Code: movss -0x61dc(%rbp), %xmm2	 RIP: 41e2e0	 Bytes: 8
  %loadMem_41e2e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2e0 = call %struct.Memory* @routine_movss_MINUS0x61dc__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2e0)
  store %struct.Memory* %call_41e2e0, %struct.Memory** %MEMORY

  ; Code: addss %xmm2, %xmm1	 RIP: 41e2e8	 Bytes: 4
  %loadMem_41e2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2e8 = call %struct.Memory* @routine_addss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2e8)
  store %struct.Memory* %call_41e2e8, %struct.Memory** %MEMORY

  ; Code: divss %xmm1, %xmm0	 RIP: 41e2ec	 Bytes: 4
  %loadMem_41e2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2ec = call %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2ec)
  store %struct.Memory* %call_41e2ec, %struct.Memory** %MEMORY

  ; Code: movss -0x61d8(%rbp), %xmm1	 RIP: 41e2f0	 Bytes: 8
  %loadMem_41e2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2f0 = call %struct.Memory* @routine_movss_MINUS0x61d8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2f0)
  store %struct.Memory* %call_41e2f0, %struct.Memory** %MEMORY

  ; Code: mulss %xmm1, %xmm0	 RIP: 41e2f8	 Bytes: 4
  %loadMem_41e2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2f8 = call %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2f8)
  store %struct.Memory* %call_41e2f8, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41e2fc	 Bytes: 4
  %loadMem_41e2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e2fc = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e2fc)
  store %struct.Memory* %call_41e2fc, %struct.Memory** %MEMORY

  ; Code: movl $0x428540, %r8d	 RIP: 41e300	 Bytes: 6
  %loadMem_41e300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e300 = call %struct.Memory* @routine_movl__0x428540___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e300)
  store %struct.Memory* %call_41e300, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edi	 RIP: 41e306	 Bytes: 3
  %loadMem_41e306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e306 = call %struct.Memory* @routine_movl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e306)
  store %struct.Memory* %call_41e306, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x61e0(%rbp)	 RIP: 41e309	 Bytes: 6
  %loadMem_41e309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e309 = call %struct.Memory* @routine_movl__edx__MINUS0x61e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e309)
  store %struct.Memory* %call_41e309, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 41e30f	 Bytes: 2
  %loadMem_41e30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e30f = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e30f)
  store %struct.Memory* %call_41e30f, %struct.Memory** %MEMORY

  ; Code: movl -0x61e0(%rbp), %ecx	 RIP: 41e311	 Bytes: 6
  %loadMem_41e311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e311 = call %struct.Memory* @routine_movl_MINUS0x61e0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e311)
  store %struct.Memory* %call_41e311, %struct.Memory** %MEMORY

  ; Code: movb -0x61c9(%rbp), %r9b	 RIP: 41e317	 Bytes: 7
  %loadMem_41e317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e317 = call %struct.Memory* @routine_movb_MINUS0x61c9__rbp____r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e317)
  store %struct.Memory* %call_41e317, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61e4(%rbp)	 RIP: 41e31e	 Bytes: 6
  %loadMem_41e31e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e31e = call %struct.Memory* @routine_movl__eax__MINUS0x61e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e31e)
  store %struct.Memory* %call_41e31e, %struct.Memory** %MEMORY

  ; Code: movb %r9b, %al	 RIP: 41e324	 Bytes: 3
  %loadMem_41e324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e324 = call %struct.Memory* @routine_movb__r9b___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e324)
  store %struct.Memory* %call_41e324, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e327	 Bytes: 5
  %loadMem1_41e327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e327 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e327, i64 -120439, i64 5, i64 5)
  store %struct.Memory* %call1_41e327, %struct.Memory** %MEMORY

  %loadMem2_41e327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e327 = load i64, i64* %3
  %call2_41e327 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e327, %struct.Memory* %loadMem2_41e327)
  store %struct.Memory* %call2_41e327, %struct.Memory** %MEMORY

  ; Code: movl 0x468d72(%rip), %ecx	 RIP: 41e32c	 Bytes: 6
  %loadMem_41e32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e32c = call %struct.Memory* @routine_movl_0x468d72__rip____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e32c)
  store %struct.Memory* %call_41e32c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 41e332	 Bytes: 2
  %loadMem_41e332 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e332 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e332)
  store %struct.Memory* %call_41e332, %struct.Memory** %MEMORY

  ; Code: movl %edi, %ecx	 RIP: 41e334	 Bytes: 2
  %loadMem_41e334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e334 = call %struct.Memory* @routine_movl__edi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e334)
  store %struct.Memory* %call_41e334, %struct.Memory** %MEMORY

  ; Code: movl 0x44da30(%rip), %edx	 RIP: 41e336	 Bytes: 6
  %loadMem_41e336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e336 = call %struct.Memory* @routine_movl_0x44da30__rip____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e336)
  store %struct.Memory* %call_41e336, %struct.Memory** %MEMORY

  ; Code: movl %edx, %r10d	 RIP: 41e33c	 Bytes: 3
  %loadMem_41e33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e33c = call %struct.Memory* @routine_movl__edx___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e33c)
  store %struct.Memory* %call_41e33c, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %edx	 RIP: 41e33f	 Bytes: 3
  %loadMem_41e33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e33f = call %struct.Memory* @routine_movl__r10d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e33f)
  store %struct.Memory* %call_41e33f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %r10, %xmm0	 RIP: 41e342	 Bytes: 5
  %loadMem_41e342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e342 = call %struct.Memory* @routine_cvtsi2ssq__r10___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e342)
  store %struct.Memory* %call_41e342, %struct.Memory** %MEMORY

  ; Code: movss -0x61d8(%rbp), %xmm1	 RIP: 41e347	 Bytes: 8
  %loadMem_41e347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e347 = call %struct.Memory* @routine_movss_MINUS0x61d8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e347)
  store %struct.Memory* %call_41e347, %struct.Memory** %MEMORY

  ; Code: mulss %xmm1, %xmm0	 RIP: 41e34f	 Bytes: 4
  %loadMem_41e34f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e34f = call %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e34f)
  store %struct.Memory* %call_41e34f, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %rdi, %xmm2	 RIP: 41e353	 Bytes: 5
  %loadMem_41e353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e353 = call %struct.Memory* @routine_cvtsi2ssq__rdi___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e353)
  store %struct.Memory* %call_41e353, %struct.Memory** %MEMORY

  ; Code: movss -0x61dc(%rbp), %xmm3	 RIP: 41e358	 Bytes: 8
  %loadMem_41e358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e358 = call %struct.Memory* @routine_movss_MINUS0x61dc__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e358)
  store %struct.Memory* %call_41e358, %struct.Memory** %MEMORY

  ; Code: addss %xmm3, %xmm2	 RIP: 41e360	 Bytes: 4
  %loadMem_41e360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e360 = call %struct.Memory* @routine_addss__xmm3___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e360)
  store %struct.Memory* %call_41e360, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm0	 RIP: 41e364	 Bytes: 4
  %loadMem_41e364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e364 = call %struct.Memory* @routine_divss__xmm2___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e364)
  store %struct.Memory* %call_41e364, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41e368	 Bytes: 4
  %loadMem_41e368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e368 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e368)
  store %struct.Memory* %call_41e368, %struct.Memory** %MEMORY

  ; Code: movl 0x4686f6(%rip), %esi	 RIP: 41e36c	 Bytes: 6
  %loadMem_41e36c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e36c = call %struct.Memory* @routine_movl_0x4686f6__rip____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e36c)
  store %struct.Memory* %call_41e36c, %struct.Memory** %MEMORY

  ; Code: movl $0x42857c, %r8d	 RIP: 41e372	 Bytes: 6
  %loadMem_41e372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e372 = call %struct.Memory* @routine_movl__0x42857c___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e372)
  store %struct.Memory* %call_41e372, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edi	 RIP: 41e378	 Bytes: 3
  %loadMem_41e378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e378 = call %struct.Memory* @routine_movl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e378)
  store %struct.Memory* %call_41e378, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x61e8(%rbp)	 RIP: 41e37b	 Bytes: 6
  %loadMem_41e37b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e37b = call %struct.Memory* @routine_movl__esi__MINUS0x61e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e37b)
  store %struct.Memory* %call_41e37b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41e381	 Bytes: 2
  %loadMem_41e381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e381 = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e381)
  store %struct.Memory* %call_41e381, %struct.Memory** %MEMORY

  ; Code: movl -0x61e8(%rbp), %ecx	 RIP: 41e383	 Bytes: 6
  %loadMem_41e383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e383 = call %struct.Memory* @routine_movl_MINUS0x61e8__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e383)
  store %struct.Memory* %call_41e383, %struct.Memory** %MEMORY

  ; Code: movb -0x61c9(%rbp), %r9b	 RIP: 41e389	 Bytes: 7
  %loadMem_41e389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e389 = call %struct.Memory* @routine_movb_MINUS0x61c9__rbp____r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e389)
  store %struct.Memory* %call_41e389, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61ec(%rbp)	 RIP: 41e390	 Bytes: 6
  %loadMem_41e390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e390 = call %struct.Memory* @routine_movl__eax__MINUS0x61ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e390)
  store %struct.Memory* %call_41e390, %struct.Memory** %MEMORY

  ; Code: movb %r9b, %al	 RIP: 41e396	 Bytes: 3
  %loadMem_41e396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e396 = call %struct.Memory* @routine_movb__r9b___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e396)
  store %struct.Memory* %call_41e396, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e399	 Bytes: 5
  %loadMem1_41e399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e399 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e399, i64 -120553, i64 5, i64 5)
  store %struct.Memory* %call1_41e399, %struct.Memory** %MEMORY

  %loadMem2_41e399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e399 = load i64, i64* %3
  %call2_41e399 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e399, %struct.Memory* %loadMem2_41e399)
  store %struct.Memory* %call2_41e399, %struct.Memory** %MEMORY

  ; Code: movl 0x210654(%rip), %esi	 RIP: 41e39e	 Bytes: 6
  %loadMem_41e39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e39e = call %struct.Memory* @routine_movl_0x210654__rip____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e39e)
  store %struct.Memory* %call_41e39e, %struct.Memory** %MEMORY

  ; Code: movl 0x44615a(%rip), %edx	 RIP: 41e3a4	 Bytes: 6
  %loadMem_41e3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3a4 = call %struct.Memory* @routine_movl_0x44615a__rip____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3a4)
  store %struct.Memory* %call_41e3a4, %struct.Memory** %MEMORY

  ; Code: movl 0x468cf0(%rip), %ecx	 RIP: 41e3aa	 Bytes: 6
  %loadMem_41e3aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3aa = call %struct.Memory* @routine_movl_0x468cf0__rip____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3aa)
  store %struct.Memory* %call_41e3aa, %struct.Memory** %MEMORY

  ; Code: movl $0x4285af, %r8d	 RIP: 41e3b0	 Bytes: 6
  %loadMem_41e3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3b0 = call %struct.Memory* @routine_movl__0x4285af___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3b0)
  store %struct.Memory* %call_41e3b0, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edi	 RIP: 41e3b6	 Bytes: 3
  %loadMem_41e3b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3b6 = call %struct.Memory* @routine_movl__r8d___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3b6)
  store %struct.Memory* %call_41e3b6, %struct.Memory** %MEMORY

  ; Code: xorl %r8d, %r8d	 RIP: 41e3b9	 Bytes: 3
  %loadMem_41e3b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3b9 = call %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3b9)
  store %struct.Memory* %call_41e3b9, %struct.Memory** %MEMORY

  ; Code: movb %r8b, %r9b	 RIP: 41e3bc	 Bytes: 3
  %loadMem_41e3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3bc = call %struct.Memory* @routine_movb__r8b___r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3bc)
  store %struct.Memory* %call_41e3bc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61f0(%rbp)	 RIP: 41e3bf	 Bytes: 6
  %loadMem_41e3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3bf = call %struct.Memory* @routine_movl__eax__MINUS0x61f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3bf)
  store %struct.Memory* %call_41e3bf, %struct.Memory** %MEMORY

  ; Code: movb %r9b, %al	 RIP: 41e3c5	 Bytes: 3
  %loadMem_41e3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3c5 = call %struct.Memory* @routine_movb__r9b___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3c5)
  store %struct.Memory* %call_41e3c5, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e3c8	 Bytes: 5
  %loadMem1_41e3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e3c8 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e3c8, i64 -120600, i64 5, i64 5)
  store %struct.Memory* %call1_41e3c8, %struct.Memory** %MEMORY

  %loadMem2_41e3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e3c8 = load i64, i64* %3
  %call2_41e3c8 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e3c8, %struct.Memory* %loadMem2_41e3c8)
  store %struct.Memory* %call2_41e3c8, %struct.Memory** %MEMORY

  ; Code: movl 0x447f0d(%rip), %ecx	 RIP: 41e3cd	 Bytes: 6
  %loadMem_41e3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3cd = call %struct.Memory* @routine_movl_0x447f0d__rip____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3cd)
  store %struct.Memory* %call_41e3cd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 41e3d3	 Bytes: 2
  %loadMem_41e3d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3d3 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3d3)
  store %struct.Memory* %call_41e3d3, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %rdi, %xmm0	 RIP: 41e3d5	 Bytes: 5
  %loadMem_41e3d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3d5 = call %struct.Memory* @routine_cvtsi2ssq__rdi___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3d5)
  store %struct.Memory* %call_41e3d5, %struct.Memory** %MEMORY

  ; Code: movss -0x61d8(%rbp), %xmm1	 RIP: 41e3da	 Bytes: 8
  %loadMem_41e3da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3da = call %struct.Memory* @routine_movss_MINUS0x61d8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3da)
  store %struct.Memory* %call_41e3da, %struct.Memory** %MEMORY

  ; Code: mulss %xmm1, %xmm0	 RIP: 41e3e2	 Bytes: 4
  %loadMem_41e3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3e2 = call %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3e2)
  store %struct.Memory* %call_41e3e2, %struct.Memory** %MEMORY

  ; Code: movl 0x482684(%rip), %ecx	 RIP: 41e3e6	 Bytes: 6
  %loadMem_41e3e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3e6 = call %struct.Memory* @routine_movl_0x482684__rip____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3e6)
  store %struct.Memory* %call_41e3e6, %struct.Memory** %MEMORY

  ; Code: incl %ecx	 RIP: 41e3ec	 Bytes: 2
  %loadMem_41e3ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3ec = call %struct.Memory* @routine_incl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3ec)
  store %struct.Memory* %call_41e3ec, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 41e3ee	 Bytes: 2
  %loadMem_41e3ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3ee = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3ee)
  store %struct.Memory* %call_41e3ee, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssq %rdi, %xmm2	 RIP: 41e3f0	 Bytes: 5
  %loadMem_41e3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3f0 = call %struct.Memory* @routine_cvtsi2ssq__rdi___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3f0)
  store %struct.Memory* %call_41e3f0, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm0	 RIP: 41e3f5	 Bytes: 4
  %loadMem_41e3f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3f5 = call %struct.Memory* @routine_divss__xmm2___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3f5)
  store %struct.Memory* %call_41e3f5, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41e3f9	 Bytes: 4
  %loadMem_41e3f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3f9 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3f9)
  store %struct.Memory* %call_41e3f9, %struct.Memory** %MEMORY

  ; Code: movq -0x61c8(%rbp), %rdi	 RIP: 41e3fd	 Bytes: 7
  %loadMem_41e3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e3fd = call %struct.Memory* @routine_movq_MINUS0x61c8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e3fd)
  store %struct.Memory* %call_41e3fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61f4(%rbp)	 RIP: 41e404	 Bytes: 6
  %loadMem_41e404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e404 = call %struct.Memory* @routine_movl__eax__MINUS0x61f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e404)
  store %struct.Memory* %call_41e404, %struct.Memory** %MEMORY

  ; Code: movb $0x1, %al	 RIP: 41e40a	 Bytes: 2
  %loadMem_41e40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e40a = call %struct.Memory* @routine_movb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e40a)
  store %struct.Memory* %call_41e40a, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e40c	 Bytes: 5
  %loadMem1_41e40c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e40c = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e40c, i64 -120668, i64 5, i64 5)
  store %struct.Memory* %call1_41e40c, %struct.Memory** %MEMORY

  %loadMem2_41e40c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e40c = load i64, i64* %3
  %call2_41e40c = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e40c, %struct.Memory* %loadMem2_41e40c)
  store %struct.Memory* %call2_41e40c, %struct.Memory** %MEMORY

  ; Code: movl $0xfff0bdc0, %edi	 RIP: 41e411	 Bytes: 5
  %loadMem_41e411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e411 = call %struct.Memory* @routine_movl__0xfff0bdc0___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e411)
  store %struct.Memory* %call_41e411, %struct.Memory** %MEMORY

  ; Code: movl $0xf4240, %esi	 RIP: 41e416	 Bytes: 5
  %loadMem_41e416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e416 = call %struct.Memory* @routine_movl__0xf4240___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e416)
  store %struct.Memory* %call_41e416, %struct.Memory** %MEMORY

  ; Code: movl 0x8661c0, %ecx	 RIP: 41e41b	 Bytes: 7
  %loadMem_41e41b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e41b = call %struct.Memory* @routine_movl_0x8661c0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e41b)
  store %struct.Memory* %call_41e41b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x61f8(%rbp)	 RIP: 41e422	 Bytes: 6
  %loadMem_41e422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e422 = call %struct.Memory* @routine_movl__eax__MINUS0x61f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e422)
  store %struct.Memory* %call_41e422, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x61fc(%rbp)	 RIP: 41e428	 Bytes: 6
  %loadMem_41e428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e428 = call %struct.Memory* @routine_movl__ecx__MINUS0x61fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e428)
  store %struct.Memory* %call_41e428, %struct.Memory** %MEMORY

  ; Code: callq .eval	 RIP: 41e42e	 Bytes: 5
  %loadMem1_41e42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e42e = call %struct.Memory* @routine_callq_.eval(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e42e, i64 -107454, i64 5, i64 5)
  store %struct.Memory* %call1_41e42e, %struct.Memory** %MEMORY

  %loadMem2_41e42e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e42e = load i64, i64* %3
  %call2_41e42e = call %struct.Memory* @sub_404070.eval(%struct.State* %0, i64  %loadPC_41e42e, %struct.Memory* %loadMem2_41e42e)
  store %struct.Memory* %call2_41e42e, %struct.Memory** %MEMORY

  ; Code: movq $0x42926a, %rdi	 RIP: 41e433	 Bytes: 10
  %loadMem_41e433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e433 = call %struct.Memory* @routine_movq__0x42926a___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e433)
  store %struct.Memory* %call_41e433, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea18, %ecx	 RIP: 41e43d	 Bytes: 7
  %loadMem_41e43d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e43d = call %struct.Memory* @routine_movl_0x62ea18___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e43d)
  store %struct.Memory* %call_41e43d, %struct.Memory** %MEMORY

  ; Code: movl 0x886bb8, %r8d	 RIP: 41e444	 Bytes: 8
  %loadMem_41e444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e444 = call %struct.Memory* @routine_movl_0x886bb8___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e444)
  store %struct.Memory* %call_41e444, %struct.Memory** %MEMORY

  ; Code: movl 0x8667a0, %r9d	 RIP: 41e44c	 Bytes: 8
  %loadMem_41e44c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e44c = call %struct.Memory* @routine_movl_0x8667a0___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e44c)
  store %struct.Memory* %call_41e44c, %struct.Memory** %MEMORY

  ; Code: movl -0x61fc(%rbp), %esi	 RIP: 41e454	 Bytes: 6
  %loadMem_41e454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e454 = call %struct.Memory* @routine_movl_MINUS0x61fc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e454)
  store %struct.Memory* %call_41e454, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41e45a	 Bytes: 2
  %loadMem_41e45a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e45a = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e45a)
  store %struct.Memory* %call_41e45a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e45c	 Bytes: 2
  %loadMem_41e45c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e45c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e45c)
  store %struct.Memory* %call_41e45c, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e45e	 Bytes: 5
  %loadMem1_41e45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e45e = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e45e, i64 -120750, i64 5, i64 5)
  store %struct.Memory* %call1_41e45e, %struct.Memory** %MEMORY

  %loadMem2_41e45e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e45e = load i64, i64* %3
  %call2_41e45e = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e45e, %struct.Memory* %loadMem2_41e45e)
  store %struct.Memory* %call2_41e45e, %struct.Memory** %MEMORY

  ; Code: movq $0x4292bb, %rdi	 RIP: 41e463	 Bytes: 10
  %loadMem_41e463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e463 = call %struct.Memory* @routine_movq__0x4292bb___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e463)
  store %struct.Memory* %call_41e463, %struct.Memory** %MEMORY

  ; Code: movl 0x633b40, %esi	 RIP: 41e46d	 Bytes: 7
  %loadMem_41e46d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e46d = call %struct.Memory* @routine_movl_0x633b40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e46d)
  store %struct.Memory* %call_41e46d, %struct.Memory** %MEMORY

  ; Code: movl 0x881df4, %edx	 RIP: 41e474	 Bytes: 7
  %loadMem_41e474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e474 = call %struct.Memory* @routine_movl_0x881df4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e474)
  store %struct.Memory* %call_41e474, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6200(%rbp)	 RIP: 41e47b	 Bytes: 6
  %loadMem_41e47b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e47b = call %struct.Memory* @routine_movl__eax__MINUS0x6200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e47b)
  store %struct.Memory* %call_41e47b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e481	 Bytes: 2
  %loadMem_41e481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e481 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e481)
  store %struct.Memory* %call_41e481, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e483	 Bytes: 5
  %loadMem1_41e483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e483 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e483, i64 -120787, i64 5, i64 5)
  store %struct.Memory* %call1_41e483, %struct.Memory** %MEMORY

  %loadMem2_41e483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e483 = load i64, i64* %3
  %call2_41e483 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e483, %struct.Memory* %loadMem2_41e483)
  store %struct.Memory* %call2_41e483, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x866530	 RIP: 41e488	 Bytes: 8
  %loadMem_41e488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e488 = call %struct.Memory* @routine_cmpl__0x0__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e488)
  store %struct.Memory* %call_41e488, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6204(%rbp)	 RIP: 41e490	 Bytes: 6
  %loadMem_41e490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e490 = call %struct.Memory* @routine_movl__eax__MINUS0x6204__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e490)
  store %struct.Memory* %call_41e490, %struct.Memory** %MEMORY

  ; Code: jne .L_41e556	 RIP: 41e496	 Bytes: 6
  %loadMem_41e496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e496 = call %struct.Memory* @routine_jne_.L_41e556(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e496, i8* %BRANCH_TAKEN, i64 192, i64 6, i64 6)
  store %struct.Memory* %call_41e496, %struct.Memory** %MEMORY

  %loadBr_41e496 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e496 = icmp eq i8 %loadBr_41e496, 1
  br i1 %cmpBr_41e496, label %block_.L_41e556, label %block_41e49c

block_41e49c:
  ; Code: cmpl $0x0, 0x8a2a04	 RIP: 41e49c	 Bytes: 8
  %loadMem_41e49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e49c = call %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e49c)
  store %struct.Memory* %call_41e49c, %struct.Memory** %MEMORY

  ; Code: je .L_41e508	 RIP: 41e4a4	 Bytes: 6
  %loadMem_41e4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4a4 = call %struct.Memory* @routine_je_.L_41e508(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4a4, i8* %BRANCH_TAKEN, i64 100, i64 6, i64 6)
  store %struct.Memory* %call_41e4a4, %struct.Memory** %MEMORY

  %loadBr_41e4a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e4a4 = icmp eq i8 %loadBr_41e4a4, 1
  br i1 %cmpBr_41e4a4, label %block_.L_41e508, label %block_41e4aa

block_41e4aa:
  ; Code: movl -0x350(%rbp), %eax	 RIP: 41e4aa	 Bytes: 6
  %loadMem_41e4aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4aa = call %struct.Memory* @routine_movl_MINUS0x350__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4aa)
  store %struct.Memory* %call_41e4aa, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db08, %eax	 RIP: 41e4b0	 Bytes: 7
  %loadMem_41e4b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4b0 = call %struct.Memory* @routine_cmpl_0x62db08___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4b0)
  store %struct.Memory* %call_41e4b0, %struct.Memory** %MEMORY

  ; Code: jne .L_41e4d0	 RIP: 41e4b7	 Bytes: 6
  %loadMem_41e4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4b7 = call %struct.Memory* @routine_jne_.L_41e4d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4b7, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_41e4b7, %struct.Memory** %MEMORY

  %loadBr_41e4b7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e4b7 = icmp eq i8 %loadBr_41e4b7, 1
  br i1 %cmpBr_41e4b7, label %block_.L_41e4d0, label %block_41e4bd

block_41e4bd:
  ; Code: movl -0x34c(%rbp), %eax	 RIP: 41e4bd	 Bytes: 6
  %loadMem_41e4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4bd = call %struct.Memory* @routine_movl_MINUS0x34c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4bd)
  store %struct.Memory* %call_41e4bd, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db0c, %eax	 RIP: 41e4c3	 Bytes: 7
  %loadMem_41e4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4c3 = call %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4c3)
  store %struct.Memory* %call_41e4c3, %struct.Memory** %MEMORY

  ; Code: je .L_41e4ee	 RIP: 41e4ca	 Bytes: 6
  %loadMem_41e4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4ca = call %struct.Memory* @routine_je_.L_41e4ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4ca, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_41e4ca, %struct.Memory** %MEMORY

  %loadBr_41e4ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e4ca = icmp eq i8 %loadBr_41e4ca, 1
  br i1 %cmpBr_41e4ca, label %block_.L_41e4ee, label %block_.L_41e4d0

  ; Code: .L_41e4d0:	 RIP: 41e4d0	 Bytes: 0
block_.L_41e4d0:

  ; Code: movq $0x4292d5, %rdi	 RIP: 41e4d0	 Bytes: 10
  %loadMem_41e4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4d0 = call %struct.Memory* @routine_movq__0x4292d5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4d0)
  store %struct.Memory* %call_41e4d0, %struct.Memory** %MEMORY

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 41e4da	 Bytes: 7
  %loadMem_41e4da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4da = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4da)
  store %struct.Memory* %call_41e4da, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e4e1	 Bytes: 2
  %loadMem_41e4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4e1 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4e1)
  store %struct.Memory* %call_41e4e1, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e4e3	 Bytes: 5
  %loadMem1_41e4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e4e3 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e4e3, i64 -120883, i64 5, i64 5)
  store %struct.Memory* %call1_41e4e3, %struct.Memory** %MEMORY

  %loadMem2_41e4e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e4e3 = load i64, i64* %3
  %call2_41e4e3 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e4e3, %struct.Memory* %loadMem2_41e4e3)
  store %struct.Memory* %call2_41e4e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6208(%rbp)	 RIP: 41e4e8	 Bytes: 6
  %loadMem_41e4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4e8 = call %struct.Memory* @routine_movl__eax__MINUS0x6208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4e8)
  store %struct.Memory* %call_41e4e8, %struct.Memory** %MEMORY

  ; Code: .L_41e4ee:	 RIP: 41e4ee	 Bytes: 0
  br label %block_.L_41e4ee
block_.L_41e4ee:

  ; Code: cmpl $0x1, 0x85f154	 RIP: 41e4ee	 Bytes: 8
  %loadMem_41e4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4ee = call %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4ee)
  store %struct.Memory* %call_41e4ee, %struct.Memory** %MEMORY

  ; Code: jne .L_41e503	 RIP: 41e4f6	 Bytes: 6
  %loadMem_41e4f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4f6 = call %struct.Memory* @routine_jne_.L_41e503(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4f6, i8* %BRANCH_TAKEN, i64 13, i64 6, i64 6)
  store %struct.Memory* %call_41e4f6, %struct.Memory** %MEMORY

  %loadBr_41e4f6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e4f6 = icmp eq i8 %loadBr_41e4f6, 1
  br i1 %cmpBr_41e4f6, label %block_.L_41e503, label %block_41e4fc

block_41e4fc:
  ; Code: xorl %edi, %edi	 RIP: 41e4fc	 Bytes: 2
  %loadMem_41e4fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e4fc = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e4fc)
  store %struct.Memory* %call_41e4fc, %struct.Memory** %MEMORY

  ; Code: callq .CheckBadFlow	 RIP: 41e4fe	 Bytes: 5
  %loadMem1_41e4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e4fe = call %struct.Memory* @routine_callq_.CheckBadFlow(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e4fe, i64 -52350, i64 5, i64 5)
  store %struct.Memory* %call1_41e4fe, %struct.Memory** %MEMORY

  %loadMem2_41e4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e4fe = load i64, i64* %3
  %call2_41e4fe = call %struct.Memory* @sub_411880.CheckBadFlow(%struct.State* %0, i64  %loadPC_41e4fe, %struct.Memory* %loadMem2_41e4fe)
  store %struct.Memory* %call2_41e4fe, %struct.Memory** %MEMORY

  ; Code: .L_41e503:	 RIP: 41e503	 Bytes: 0
  br label %block_.L_41e503
block_.L_41e503:

  ; Code: jmpq .L_41e551	 RIP: 41e503	 Bytes: 5
  %loadMem_41e503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e503 = call %struct.Memory* @routine_jmpq_.L_41e551(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e503, i64 78, i64 5)
  store %struct.Memory* %call_41e503, %struct.Memory** %MEMORY

  br label %block_.L_41e551

  ; Code: .L_41e508:	 RIP: 41e508	 Bytes: 0
block_.L_41e508:

  ; Code: movl -0x350(%rbp), %eax	 RIP: 41e508	 Bytes: 6
  %loadMem_41e508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e508 = call %struct.Memory* @routine_movl_MINUS0x350__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e508)
  store %struct.Memory* %call_41e508, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db08, %eax	 RIP: 41e50e	 Bytes: 7
  %loadMem_41e50e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e50e = call %struct.Memory* @routine_cmpl_0x62db08___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e50e)
  store %struct.Memory* %call_41e50e, %struct.Memory** %MEMORY

  ; Code: jne .L_41e52e	 RIP: 41e515	 Bytes: 6
  %loadMem_41e515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e515 = call %struct.Memory* @routine_jne_.L_41e52e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e515, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_41e515, %struct.Memory** %MEMORY

  %loadBr_41e515 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e515 = icmp eq i8 %loadBr_41e515, 1
  br i1 %cmpBr_41e515, label %block_.L_41e52e, label %block_41e51b

block_41e51b:
  ; Code: movl -0x34c(%rbp), %eax	 RIP: 41e51b	 Bytes: 6
  %loadMem_41e51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e51b = call %struct.Memory* @routine_movl_MINUS0x34c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e51b)
  store %struct.Memory* %call_41e51b, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db0c, %eax	 RIP: 41e521	 Bytes: 7
  %loadMem_41e521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e521 = call %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e521)
  store %struct.Memory* %call_41e521, %struct.Memory** %MEMORY

  ; Code: je .L_41e54c	 RIP: 41e528	 Bytes: 6
  %loadMem_41e528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e528 = call %struct.Memory* @routine_je_.L_41e54c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e528, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_41e528, %struct.Memory** %MEMORY

  %loadBr_41e528 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e528 = icmp eq i8 %loadBr_41e528, 1
  br i1 %cmpBr_41e528, label %block_.L_41e54c, label %block_.L_41e52e

  ; Code: .L_41e52e:	 RIP: 41e52e	 Bytes: 0
block_.L_41e52e:

  ; Code: movq $0x4292de, %rdi	 RIP: 41e52e	 Bytes: 10
  %loadMem_41e52e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e52e = call %struct.Memory* @routine_movq__0x4292de___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e52e)
  store %struct.Memory* %call_41e52e, %struct.Memory** %MEMORY

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 41e538	 Bytes: 7
  %loadMem_41e538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e538 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e538)
  store %struct.Memory* %call_41e538, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e53f	 Bytes: 2
  %loadMem_41e53f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e53f = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e53f)
  store %struct.Memory* %call_41e53f, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e541	 Bytes: 5
  %loadMem1_41e541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e541 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e541, i64 -120977, i64 5, i64 5)
  store %struct.Memory* %call1_41e541, %struct.Memory** %MEMORY

  %loadMem2_41e541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e541 = load i64, i64* %3
  %call2_41e541 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e541, %struct.Memory* %loadMem2_41e541)
  store %struct.Memory* %call2_41e541, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x620c(%rbp)	 RIP: 41e546	 Bytes: 6
  %loadMem_41e546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e546 = call %struct.Memory* @routine_movl__eax__MINUS0x620c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e546)
  store %struct.Memory* %call_41e546, %struct.Memory** %MEMORY

  ; Code: .L_41e54c:	 RIP: 41e54c	 Bytes: 0
  br label %block_.L_41e54c
block_.L_41e54c:

  ; Code: jmpq .L_41e551	 RIP: 41e54c	 Bytes: 5
  %loadMem_41e54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e54c = call %struct.Memory* @routine_jmpq_.L_41e551(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e54c, i64 5, i64 5)
  store %struct.Memory* %call_41e54c, %struct.Memory** %MEMORY

  br label %block_.L_41e551

  ; Code: .L_41e551:	 RIP: 41e551	 Bytes: 0
block_.L_41e551:

  ; Code: jmpq .L_41e6ce	 RIP: 41e551	 Bytes: 5
  %loadMem_41e551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e551 = call %struct.Memory* @routine_jmpq_.L_41e6ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e551, i64 381, i64 5)
  store %struct.Memory* %call_41e551, %struct.Memory** %MEMORY

  br label %block_.L_41e6ce

  ; Code: .L_41e556:	 RIP: 41e556	 Bytes: 0
block_.L_41e556:

  ; Code: cmpl $0x0, 0x8a2a04	 RIP: 41e556	 Bytes: 8
  %loadMem_41e556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e556 = call %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e556)
  store %struct.Memory* %call_41e556, %struct.Memory** %MEMORY

  ; Code: je .L_41e5ad	 RIP: 41e55e	 Bytes: 6
  %loadMem_41e55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e55e = call %struct.Memory* @routine_je_.L_41e5ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e55e, i8* %BRANCH_TAKEN, i64 79, i64 6, i64 6)
  store %struct.Memory* %call_41e55e, %struct.Memory** %MEMORY

  %loadBr_41e55e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e55e = icmp eq i8 %loadBr_41e55e, 1
  br i1 %cmpBr_41e55e, label %block_.L_41e5ad, label %block_41e564

block_41e564:
  ; Code: movl -0x350(%rbp), %eax	 RIP: 41e564	 Bytes: 6
  %loadMem_41e564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e564 = call %struct.Memory* @routine_movl_MINUS0x350__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e564)
  store %struct.Memory* %call_41e564, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db08, %eax	 RIP: 41e56a	 Bytes: 7
  %loadMem_41e56a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e56a = call %struct.Memory* @routine_cmpl_0x62db08___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e56a)
  store %struct.Memory* %call_41e56a, %struct.Memory** %MEMORY

  ; Code: jne .L_41e58a	 RIP: 41e571	 Bytes: 6
  %loadMem_41e571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e571 = call %struct.Memory* @routine_jne_.L_41e58a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e571, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_41e571, %struct.Memory** %MEMORY

  %loadBr_41e571 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e571 = icmp eq i8 %loadBr_41e571, 1
  br i1 %cmpBr_41e571, label %block_.L_41e58a, label %block_41e577

block_41e577:
  ; Code: movl -0x34c(%rbp), %eax	 RIP: 41e577	 Bytes: 6
  %loadMem_41e577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e577 = call %struct.Memory* @routine_movl_MINUS0x34c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e577)
  store %struct.Memory* %call_41e577, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db0c, %eax	 RIP: 41e57d	 Bytes: 7
  %loadMem_41e57d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e57d = call %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e57d)
  store %struct.Memory* %call_41e57d, %struct.Memory** %MEMORY

  ; Code: je .L_41e5a8	 RIP: 41e584	 Bytes: 6
  %loadMem_41e584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e584 = call %struct.Memory* @routine_je_.L_41e5a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e584, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_41e584, %struct.Memory** %MEMORY

  %loadBr_41e584 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e584 = icmp eq i8 %loadBr_41e584, 1
  br i1 %cmpBr_41e584, label %block_.L_41e5a8, label %block_.L_41e58a

  ; Code: .L_41e58a:	 RIP: 41e58a	 Bytes: 0
block_.L_41e58a:

  ; Code: movq $0x4292d5, %rdi	 RIP: 41e58a	 Bytes: 10
  %loadMem_41e58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e58a = call %struct.Memory* @routine_movq__0x4292d5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e58a)
  store %struct.Memory* %call_41e58a, %struct.Memory** %MEMORY

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 41e594	 Bytes: 7
  %loadMem_41e594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e594 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e594)
  store %struct.Memory* %call_41e594, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e59b	 Bytes: 2
  %loadMem_41e59b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e59b = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e59b)
  store %struct.Memory* %call_41e59b, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e59d	 Bytes: 5
  %loadMem1_41e59d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e59d = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e59d, i64 -121069, i64 5, i64 5)
  store %struct.Memory* %call1_41e59d, %struct.Memory** %MEMORY

  %loadMem2_41e59d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e59d = load i64, i64* %3
  %call2_41e59d = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e59d, %struct.Memory* %loadMem2_41e59d)
  store %struct.Memory* %call2_41e59d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6210(%rbp)	 RIP: 41e5a2	 Bytes: 6
  %loadMem_41e5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5a2 = call %struct.Memory* @routine_movl__eax__MINUS0x6210__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5a2)
  store %struct.Memory* %call_41e5a2, %struct.Memory** %MEMORY

  ; Code: .L_41e5a8:	 RIP: 41e5a8	 Bytes: 0
  br label %block_.L_41e5a8
block_.L_41e5a8:

  ; Code: jmpq .L_41e5f6	 RIP: 41e5a8	 Bytes: 5
  %loadMem_41e5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5a8 = call %struct.Memory* @routine_jmpq_.L_41e5f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5a8, i64 78, i64 5)
  store %struct.Memory* %call_41e5a8, %struct.Memory** %MEMORY

  br label %block_.L_41e5f6

  ; Code: .L_41e5ad:	 RIP: 41e5ad	 Bytes: 0
block_.L_41e5ad:

  ; Code: movl -0x350(%rbp), %eax	 RIP: 41e5ad	 Bytes: 6
  %loadMem_41e5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5ad = call %struct.Memory* @routine_movl_MINUS0x350__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5ad)
  store %struct.Memory* %call_41e5ad, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db08, %eax	 RIP: 41e5b3	 Bytes: 7
  %loadMem_41e5b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5b3 = call %struct.Memory* @routine_cmpl_0x62db08___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5b3)
  store %struct.Memory* %call_41e5b3, %struct.Memory** %MEMORY

  ; Code: jne .L_41e5d3	 RIP: 41e5ba	 Bytes: 6
  %loadMem_41e5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5ba = call %struct.Memory* @routine_jne_.L_41e5d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5ba, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_41e5ba, %struct.Memory** %MEMORY

  %loadBr_41e5ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e5ba = icmp eq i8 %loadBr_41e5ba, 1
  br i1 %cmpBr_41e5ba, label %block_.L_41e5d3, label %block_41e5c0

block_41e5c0:
  ; Code: movl -0x34c(%rbp), %eax	 RIP: 41e5c0	 Bytes: 6
  %loadMem_41e5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5c0 = call %struct.Memory* @routine_movl_MINUS0x34c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5c0)
  store %struct.Memory* %call_41e5c0, %struct.Memory** %MEMORY

  ; Code: cmpl 0x62db0c, %eax	 RIP: 41e5c6	 Bytes: 7
  %loadMem_41e5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5c6 = call %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5c6)
  store %struct.Memory* %call_41e5c6, %struct.Memory** %MEMORY

  ; Code: je .L_41e5f1	 RIP: 41e5cd	 Bytes: 6
  %loadMem_41e5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5cd = call %struct.Memory* @routine_je_.L_41e5f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5cd, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_41e5cd, %struct.Memory** %MEMORY

  %loadBr_41e5cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e5cd = icmp eq i8 %loadBr_41e5cd, 1
  br i1 %cmpBr_41e5cd, label %block_.L_41e5f1, label %block_.L_41e5d3

  ; Code: .L_41e5d3:	 RIP: 41e5d3	 Bytes: 0
block_.L_41e5d3:

  ; Code: movq $0x4292de, %rdi	 RIP: 41e5d3	 Bytes: 10
  %loadMem_41e5d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5d3 = call %struct.Memory* @routine_movq__0x4292de___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5d3)
  store %struct.Memory* %call_41e5d3, %struct.Memory** %MEMORY

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 41e5dd	 Bytes: 7
  %loadMem_41e5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5dd = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5dd)
  store %struct.Memory* %call_41e5dd, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e5e4	 Bytes: 2
  %loadMem_41e5e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5e4 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5e4)
  store %struct.Memory* %call_41e5e4, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e5e6	 Bytes: 5
  %loadMem1_41e5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e5e6 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e5e6, i64 -121142, i64 5, i64 5)
  store %struct.Memory* %call1_41e5e6, %struct.Memory** %MEMORY

  %loadMem2_41e5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e5e6 = load i64, i64* %3
  %call2_41e5e6 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e5e6, %struct.Memory* %loadMem2_41e5e6)
  store %struct.Memory* %call2_41e5e6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6214(%rbp)	 RIP: 41e5eb	 Bytes: 6
  %loadMem_41e5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5eb = call %struct.Memory* @routine_movl__eax__MINUS0x6214__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5eb)
  store %struct.Memory* %call_41e5eb, %struct.Memory** %MEMORY

  ; Code: .L_41e5f1:	 RIP: 41e5f1	 Bytes: 0
  br label %block_.L_41e5f1
block_.L_41e5f1:

  ; Code: jmpq .L_41e5f6	 RIP: 41e5f1	 Bytes: 5
  %loadMem_41e5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5f1 = call %struct.Memory* @routine_jmpq_.L_41e5f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5f1, i64 5, i64 5)
  store %struct.Memory* %call_41e5f1, %struct.Memory** %MEMORY

  br label %block_.L_41e5f6

  ; Code: .L_41e5f6:	 RIP: 41e5f6	 Bytes: 0
block_.L_41e5f6:

  ; Code: cmpl $0x2, 0x866530	 RIP: 41e5f6	 Bytes: 8
  %loadMem_41e5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5f6 = call %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5f6)
  store %struct.Memory* %call_41e5f6, %struct.Memory** %MEMORY

  ; Code: jne .L_41e620	 RIP: 41e5fe	 Bytes: 6
  %loadMem_41e5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e5fe = call %struct.Memory* @routine_jne_.L_41e620(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e5fe, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e5fe, %struct.Memory** %MEMORY

  %loadBr_41e5fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e5fe = icmp eq i8 %loadBr_41e5fe, 1
  br i1 %cmpBr_41e5fe, label %block_.L_41e620, label %block_41e604

block_41e604:
  ; Code: movq $0x4292e3, %rdi	 RIP: 41e604	 Bytes: 10
  %loadMem_41e604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e604 = call %struct.Memory* @routine_movq__0x4292e3___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e604)
  store %struct.Memory* %call_41e604, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e60e	 Bytes: 2
  %loadMem_41e60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e60e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e60e)
  store %struct.Memory* %call_41e60e, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e610	 Bytes: 5
  %loadMem1_41e610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e610 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e610, i64 -121184, i64 5, i64 5)
  store %struct.Memory* %call1_41e610, %struct.Memory** %MEMORY

  %loadMem2_41e610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e610 = load i64, i64* %3
  %call2_41e610 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e610, %struct.Memory* %loadMem2_41e610)
  store %struct.Memory* %call2_41e610, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6218(%rbp)	 RIP: 41e615	 Bytes: 6
  %loadMem_41e615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e615 = call %struct.Memory* @routine_movl__eax__MINUS0x6218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e615)
  store %struct.Memory* %call_41e615, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e6c4	 RIP: 41e61b	 Bytes: 5
  %loadMem_41e61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e61b = call %struct.Memory* @routine_jmpq_.L_41e6c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e61b, i64 169, i64 5)
  store %struct.Memory* %call_41e61b, %struct.Memory** %MEMORY

  br label %block_.L_41e6c4

  ; Code: .L_41e620:	 RIP: 41e620	 Bytes: 0
block_.L_41e620:

  ; Code: cmpl $0x3, 0x866530	 RIP: 41e620	 Bytes: 8
  %loadMem_41e620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e620 = call %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e620)
  store %struct.Memory* %call_41e620, %struct.Memory** %MEMORY

  ; Code: jne .L_41e64a	 RIP: 41e628	 Bytes: 6
  %loadMem_41e628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e628 = call %struct.Memory* @routine_jne_.L_41e64a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e628, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e628, %struct.Memory** %MEMORY

  %loadBr_41e628 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e628 = icmp eq i8 %loadBr_41e628, 1
  br i1 %cmpBr_41e628, label %block_.L_41e64a, label %block_41e62e

block_41e62e:
  ; Code: movq $0x4292f6, %rdi	 RIP: 41e62e	 Bytes: 10
  %loadMem_41e62e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e62e = call %struct.Memory* @routine_movq__0x4292f6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e62e)
  store %struct.Memory* %call_41e62e, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e638	 Bytes: 2
  %loadMem_41e638 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e638 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e638)
  store %struct.Memory* %call_41e638, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e63a	 Bytes: 5
  %loadMem1_41e63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e63a = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e63a, i64 -121226, i64 5, i64 5)
  store %struct.Memory* %call1_41e63a, %struct.Memory** %MEMORY

  %loadMem2_41e63a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e63a = load i64, i64* %3
  %call2_41e63a = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e63a, %struct.Memory* %loadMem2_41e63a)
  store %struct.Memory* %call2_41e63a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x621c(%rbp)	 RIP: 41e63f	 Bytes: 6
  %loadMem_41e63f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e63f = call %struct.Memory* @routine_movl__eax__MINUS0x621c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e63f)
  store %struct.Memory* %call_41e63f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e6bf	 RIP: 41e645	 Bytes: 5
  %loadMem_41e645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e645 = call %struct.Memory* @routine_jmpq_.L_41e6bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e645, i64 122, i64 5)
  store %struct.Memory* %call_41e645, %struct.Memory** %MEMORY

  br label %block_.L_41e6bf

  ; Code: .L_41e64a:	 RIP: 41e64a	 Bytes: 0
block_.L_41e64a:

  ; Code: cmpl $0x4, 0x866530	 RIP: 41e64a	 Bytes: 8
  %loadMem_41e64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e64a = call %struct.Memory* @routine_cmpl__0x4__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e64a)
  store %struct.Memory* %call_41e64a, %struct.Memory** %MEMORY

  ; Code: jne .L_41e674	 RIP: 41e652	 Bytes: 6
  %loadMem_41e652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e652 = call %struct.Memory* @routine_jne_.L_41e674(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e652, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e652, %struct.Memory** %MEMORY

  %loadBr_41e652 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e652 = icmp eq i8 %loadBr_41e652, 1
  br i1 %cmpBr_41e652, label %block_.L_41e674, label %block_41e658

block_41e658:
  ; Code: movq $0x429309, %rdi	 RIP: 41e658	 Bytes: 10
  %loadMem_41e658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e658 = call %struct.Memory* @routine_movq__0x429309___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e658)
  store %struct.Memory* %call_41e658, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e662	 Bytes: 2
  %loadMem_41e662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e662 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e662)
  store %struct.Memory* %call_41e662, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e664	 Bytes: 5
  %loadMem1_41e664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e664 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e664, i64 -121268, i64 5, i64 5)
  store %struct.Memory* %call1_41e664, %struct.Memory** %MEMORY

  %loadMem2_41e664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e664 = load i64, i64* %3
  %call2_41e664 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e664, %struct.Memory* %loadMem2_41e664)
  store %struct.Memory* %call2_41e664, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6220(%rbp)	 RIP: 41e669	 Bytes: 6
  %loadMem_41e669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e669 = call %struct.Memory* @routine_movl__eax__MINUS0x6220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e669)
  store %struct.Memory* %call_41e669, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e6ba	 RIP: 41e66f	 Bytes: 5
  %loadMem_41e66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e66f = call %struct.Memory* @routine_jmpq_.L_41e6ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e66f, i64 75, i64 5)
  store %struct.Memory* %call_41e66f, %struct.Memory** %MEMORY

  br label %block_.L_41e6ba

  ; Code: .L_41e674:	 RIP: 41e674	 Bytes: 0
block_.L_41e674:

  ; Code: cmpl $0x5, 0x866530	 RIP: 41e674	 Bytes: 8
  %loadMem_41e674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e674 = call %struct.Memory* @routine_cmpl__0x5__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e674)
  store %struct.Memory* %call_41e674, %struct.Memory** %MEMORY

  ; Code: jne .L_41e69e	 RIP: 41e67c	 Bytes: 6
  %loadMem_41e67c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e67c = call %struct.Memory* @routine_jne_.L_41e69e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e67c, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e67c, %struct.Memory** %MEMORY

  %loadBr_41e67c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e67c = icmp eq i8 %loadBr_41e67c, 1
  br i1 %cmpBr_41e67c, label %block_.L_41e69e, label %block_41e682

block_41e682:
  ; Code: movq $0x429324, %rdi	 RIP: 41e682	 Bytes: 10
  %loadMem_41e682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e682 = call %struct.Memory* @routine_movq__0x429324___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e682)
  store %struct.Memory* %call_41e682, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e68c	 Bytes: 2
  %loadMem_41e68c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e68c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e68c)
  store %struct.Memory* %call_41e68c, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e68e	 Bytes: 5
  %loadMem1_41e68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e68e = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e68e, i64 -121310, i64 5, i64 5)
  store %struct.Memory* %call1_41e68e, %struct.Memory** %MEMORY

  %loadMem2_41e68e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e68e = load i64, i64* %3
  %call2_41e68e = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e68e, %struct.Memory* %loadMem2_41e68e)
  store %struct.Memory* %call2_41e68e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6224(%rbp)	 RIP: 41e693	 Bytes: 6
  %loadMem_41e693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e693 = call %struct.Memory* @routine_movl__eax__MINUS0x6224__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e693)
  store %struct.Memory* %call_41e693, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e6b5	 RIP: 41e699	 Bytes: 5
  %loadMem_41e699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e699 = call %struct.Memory* @routine_jmpq_.L_41e6b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e699, i64 28, i64 5)
  store %struct.Memory* %call_41e699, %struct.Memory** %MEMORY

  br label %block_.L_41e6b5

  ; Code: .L_41e69e:	 RIP: 41e69e	 Bytes: 0
block_.L_41e69e:

  ; Code: movq $0x429341, %rdi	 RIP: 41e69e	 Bytes: 10
  %loadMem_41e69e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e69e = call %struct.Memory* @routine_movq__0x429341___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e69e)
  store %struct.Memory* %call_41e69e, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e6a8	 Bytes: 2
  %loadMem_41e6a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6a8 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6a8)
  store %struct.Memory* %call_41e6a8, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e6aa	 Bytes: 5
  %loadMem1_41e6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e6aa = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e6aa, i64 -121338, i64 5, i64 5)
  store %struct.Memory* %call1_41e6aa, %struct.Memory** %MEMORY

  %loadMem2_41e6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e6aa = load i64, i64* %3
  %call2_41e6aa = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e6aa, %struct.Memory* %loadMem2_41e6aa)
  store %struct.Memory* %call2_41e6aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6228(%rbp)	 RIP: 41e6af	 Bytes: 6
  %loadMem_41e6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6af = call %struct.Memory* @routine_movl__eax__MINUS0x6228__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6af)
  store %struct.Memory* %call_41e6af, %struct.Memory** %MEMORY

  ; Code: .L_41e6b5:	 RIP: 41e6b5	 Bytes: 0
  br label %block_.L_41e6b5
block_.L_41e6b5:

  ; Code: jmpq .L_41e6ba	 RIP: 41e6b5	 Bytes: 5
  %loadMem_41e6b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6b5 = call %struct.Memory* @routine_jmpq_.L_41e6ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6b5, i64 5, i64 5)
  store %struct.Memory* %call_41e6b5, %struct.Memory** %MEMORY

  br label %block_.L_41e6ba

  ; Code: .L_41e6ba:	 RIP: 41e6ba	 Bytes: 0
block_.L_41e6ba:

  ; Code: jmpq .L_41e6bf	 RIP: 41e6ba	 Bytes: 5
  %loadMem_41e6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6ba = call %struct.Memory* @routine_jmpq_.L_41e6bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6ba, i64 5, i64 5)
  store %struct.Memory* %call_41e6ba, %struct.Memory** %MEMORY

  br label %block_.L_41e6bf

  ; Code: .L_41e6bf:	 RIP: 41e6bf	 Bytes: 0
block_.L_41e6bf:

  ; Code: jmpq .L_41e6c4	 RIP: 41e6bf	 Bytes: 5
  %loadMem_41e6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6bf = call %struct.Memory* @routine_jmpq_.L_41e6c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6bf, i64 5, i64 5)
  store %struct.Memory* %call_41e6bf, %struct.Memory** %MEMORY

  br label %block_.L_41e6c4

  ; Code: .L_41e6c4:	 RIP: 41e6c4	 Bytes: 0
block_.L_41e6c4:

  ; Code: movl $0x0, -0x6134(%rbp)	 RIP: 41e6c4	 Bytes: 10
  %loadMem_41e6c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6c4 = call %struct.Memory* @routine_movl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6c4)
  store %struct.Memory* %call_41e6c4, %struct.Memory** %MEMORY

  ; Code: .L_41e6ce:	 RIP: 41e6ce	 Bytes: 0
  br label %block_.L_41e6ce
block_.L_41e6ce:

  ; Code: jmpq .L_41e7ab	 RIP: 41e6ce	 Bytes: 5
  %loadMem_41e6ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6ce = call %struct.Memory* @routine_jmpq_.L_41e7ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6ce, i64 221, i64 5)
  store %struct.Memory* %call_41e6ce, %struct.Memory** %MEMORY

  br label %block_.L_41e7ab

  ; Code: .L_41e6d3:	 RIP: 41e6d3	 Bytes: 0
block_.L_41e6d3:

  ; Code: cmpl $0x2, 0x866530	 RIP: 41e6d3	 Bytes: 8
  %loadMem_41e6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6d3 = call %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6d3)
  store %struct.Memory* %call_41e6d3, %struct.Memory** %MEMORY

  ; Code: jne .L_41e6fd	 RIP: 41e6db	 Bytes: 6
  %loadMem_41e6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6db = call %struct.Memory* @routine_jne_.L_41e6fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6db, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e6db, %struct.Memory** %MEMORY

  %loadBr_41e6db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e6db = icmp eq i8 %loadBr_41e6db, 1
  br i1 %cmpBr_41e6db, label %block_.L_41e6fd, label %block_41e6e1

block_41e6e1:
  ; Code: movq $0x4292e3, %rdi	 RIP: 41e6e1	 Bytes: 10
  %loadMem_41e6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6e1 = call %struct.Memory* @routine_movq__0x4292e3___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6e1)
  store %struct.Memory* %call_41e6e1, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e6eb	 Bytes: 2
  %loadMem_41e6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6eb = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6eb)
  store %struct.Memory* %call_41e6eb, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e6ed	 Bytes: 5
  %loadMem1_41e6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e6ed = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e6ed, i64 -121405, i64 5, i64 5)
  store %struct.Memory* %call1_41e6ed, %struct.Memory** %MEMORY

  %loadMem2_41e6ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e6ed = load i64, i64* %3
  %call2_41e6ed = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e6ed, %struct.Memory* %loadMem2_41e6ed)
  store %struct.Memory* %call2_41e6ed, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x622c(%rbp)	 RIP: 41e6f2	 Bytes: 6
  %loadMem_41e6f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6f2 = call %struct.Memory* @routine_movl__eax__MINUS0x622c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6f2)
  store %struct.Memory* %call_41e6f2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e7a1	 RIP: 41e6f8	 Bytes: 5
  %loadMem_41e6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6f8 = call %struct.Memory* @routine_jmpq_.L_41e7a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6f8, i64 169, i64 5)
  store %struct.Memory* %call_41e6f8, %struct.Memory** %MEMORY

  br label %block_.L_41e7a1

  ; Code: .L_41e6fd:	 RIP: 41e6fd	 Bytes: 0
block_.L_41e6fd:

  ; Code: cmpl $0x3, 0x866530	 RIP: 41e6fd	 Bytes: 8
  %loadMem_41e6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e6fd = call %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e6fd)
  store %struct.Memory* %call_41e6fd, %struct.Memory** %MEMORY

  ; Code: jne .L_41e727	 RIP: 41e705	 Bytes: 6
  %loadMem_41e705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e705 = call %struct.Memory* @routine_jne_.L_41e727(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e705, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e705, %struct.Memory** %MEMORY

  %loadBr_41e705 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e705 = icmp eq i8 %loadBr_41e705, 1
  br i1 %cmpBr_41e705, label %block_.L_41e727, label %block_41e70b

block_41e70b:
  ; Code: movq $0x4292f6, %rdi	 RIP: 41e70b	 Bytes: 10
  %loadMem_41e70b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e70b = call %struct.Memory* @routine_movq__0x4292f6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e70b)
  store %struct.Memory* %call_41e70b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e715	 Bytes: 2
  %loadMem_41e715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e715 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e715)
  store %struct.Memory* %call_41e715, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e717	 Bytes: 5
  %loadMem1_41e717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e717 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e717, i64 -121447, i64 5, i64 5)
  store %struct.Memory* %call1_41e717, %struct.Memory** %MEMORY

  %loadMem2_41e717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e717 = load i64, i64* %3
  %call2_41e717 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e717, %struct.Memory* %loadMem2_41e717)
  store %struct.Memory* %call2_41e717, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6230(%rbp)	 RIP: 41e71c	 Bytes: 6
  %loadMem_41e71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e71c = call %struct.Memory* @routine_movl__eax__MINUS0x6230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e71c)
  store %struct.Memory* %call_41e71c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e79c	 RIP: 41e722	 Bytes: 5
  %loadMem_41e722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e722 = call %struct.Memory* @routine_jmpq_.L_41e79c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e722, i64 122, i64 5)
  store %struct.Memory* %call_41e722, %struct.Memory** %MEMORY

  br label %block_.L_41e79c

  ; Code: .L_41e727:	 RIP: 41e727	 Bytes: 0
block_.L_41e727:

  ; Code: cmpl $0x4, 0x866530	 RIP: 41e727	 Bytes: 8
  %loadMem_41e727 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e727 = call %struct.Memory* @routine_cmpl__0x4__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e727)
  store %struct.Memory* %call_41e727, %struct.Memory** %MEMORY

  ; Code: jne .L_41e751	 RIP: 41e72f	 Bytes: 6
  %loadMem_41e72f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e72f = call %struct.Memory* @routine_jne_.L_41e751(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e72f, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e72f, %struct.Memory** %MEMORY

  %loadBr_41e72f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e72f = icmp eq i8 %loadBr_41e72f, 1
  br i1 %cmpBr_41e72f, label %block_.L_41e751, label %block_41e735

block_41e735:
  ; Code: movq $0x429309, %rdi	 RIP: 41e735	 Bytes: 10
  %loadMem_41e735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e735 = call %struct.Memory* @routine_movq__0x429309___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e735)
  store %struct.Memory* %call_41e735, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e73f	 Bytes: 2
  %loadMem_41e73f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e73f = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e73f)
  store %struct.Memory* %call_41e73f, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e741	 Bytes: 5
  %loadMem1_41e741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e741 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e741, i64 -121489, i64 5, i64 5)
  store %struct.Memory* %call1_41e741, %struct.Memory** %MEMORY

  %loadMem2_41e741 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e741 = load i64, i64* %3
  %call2_41e741 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e741, %struct.Memory* %loadMem2_41e741)
  store %struct.Memory* %call2_41e741, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6234(%rbp)	 RIP: 41e746	 Bytes: 6
  %loadMem_41e746 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e746 = call %struct.Memory* @routine_movl__eax__MINUS0x6234__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e746)
  store %struct.Memory* %call_41e746, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e797	 RIP: 41e74c	 Bytes: 5
  %loadMem_41e74c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e74c = call %struct.Memory* @routine_jmpq_.L_41e797(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e74c, i64 75, i64 5)
  store %struct.Memory* %call_41e74c, %struct.Memory** %MEMORY

  br label %block_.L_41e797

  ; Code: .L_41e751:	 RIP: 41e751	 Bytes: 0
block_.L_41e751:

  ; Code: cmpl $0x5, 0x866530	 RIP: 41e751	 Bytes: 8
  %loadMem_41e751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e751 = call %struct.Memory* @routine_cmpl__0x5__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e751)
  store %struct.Memory* %call_41e751, %struct.Memory** %MEMORY

  ; Code: jne .L_41e77b	 RIP: 41e759	 Bytes: 6
  %loadMem_41e759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e759 = call %struct.Memory* @routine_jne_.L_41e77b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e759, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41e759, %struct.Memory** %MEMORY

  %loadBr_41e759 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e759 = icmp eq i8 %loadBr_41e759, 1
  br i1 %cmpBr_41e759, label %block_.L_41e77b, label %block_41e75f

block_41e75f:
  ; Code: movq $0x429324, %rdi	 RIP: 41e75f	 Bytes: 10
  %loadMem_41e75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e75f = call %struct.Memory* @routine_movq__0x429324___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e75f)
  store %struct.Memory* %call_41e75f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e769	 Bytes: 2
  %loadMem_41e769 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e769 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e769)
  store %struct.Memory* %call_41e769, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e76b	 Bytes: 5
  %loadMem1_41e76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e76b = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e76b, i64 -121531, i64 5, i64 5)
  store %struct.Memory* %call1_41e76b, %struct.Memory** %MEMORY

  %loadMem2_41e76b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e76b = load i64, i64* %3
  %call2_41e76b = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e76b, %struct.Memory* %loadMem2_41e76b)
  store %struct.Memory* %call2_41e76b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6238(%rbp)	 RIP: 41e770	 Bytes: 6
  %loadMem_41e770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e770 = call %struct.Memory* @routine_movl__eax__MINUS0x6238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e770)
  store %struct.Memory* %call_41e770, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41e792	 RIP: 41e776	 Bytes: 5
  %loadMem_41e776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e776 = call %struct.Memory* @routine_jmpq_.L_41e792(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e776, i64 28, i64 5)
  store %struct.Memory* %call_41e776, %struct.Memory** %MEMORY

  br label %block_.L_41e792

  ; Code: .L_41e77b:	 RIP: 41e77b	 Bytes: 0
block_.L_41e77b:

  ; Code: movq $0x429341, %rdi	 RIP: 41e77b	 Bytes: 10
  %loadMem_41e77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e77b = call %struct.Memory* @routine_movq__0x429341___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e77b)
  store %struct.Memory* %call_41e77b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e785	 Bytes: 2
  %loadMem_41e785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e785 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e785)
  store %struct.Memory* %call_41e785, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e787	 Bytes: 5
  %loadMem1_41e787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e787 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e787, i64 -121559, i64 5, i64 5)
  store %struct.Memory* %call1_41e787, %struct.Memory** %MEMORY

  %loadMem2_41e787 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e787 = load i64, i64* %3
  %call2_41e787 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e787, %struct.Memory* %loadMem2_41e787)
  store %struct.Memory* %call2_41e787, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x623c(%rbp)	 RIP: 41e78c	 Bytes: 6
  %loadMem_41e78c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e78c = call %struct.Memory* @routine_movl__eax__MINUS0x623c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e78c)
  store %struct.Memory* %call_41e78c, %struct.Memory** %MEMORY

  ; Code: .L_41e792:	 RIP: 41e792	 Bytes: 0
  br label %block_.L_41e792
block_.L_41e792:

  ; Code: jmpq .L_41e797	 RIP: 41e792	 Bytes: 5
  %loadMem_41e792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e792 = call %struct.Memory* @routine_jmpq_.L_41e797(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e792, i64 5, i64 5)
  store %struct.Memory* %call_41e792, %struct.Memory** %MEMORY

  br label %block_.L_41e797

  ; Code: .L_41e797:	 RIP: 41e797	 Bytes: 0
block_.L_41e797:

  ; Code: jmpq .L_41e79c	 RIP: 41e797	 Bytes: 5
  %loadMem_41e797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e797 = call %struct.Memory* @routine_jmpq_.L_41e79c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e797, i64 5, i64 5)
  store %struct.Memory* %call_41e797, %struct.Memory** %MEMORY

  br label %block_.L_41e79c

  ; Code: .L_41e79c:	 RIP: 41e79c	 Bytes: 0
block_.L_41e79c:

  ; Code: jmpq .L_41e7a1	 RIP: 41e79c	 Bytes: 5
  %loadMem_41e79c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e79c = call %struct.Memory* @routine_jmpq_.L_41e7a1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e79c, i64 5, i64 5)
  store %struct.Memory* %call_41e79c, %struct.Memory** %MEMORY

  br label %block_.L_41e7a1

  ; Code: .L_41e7a1:	 RIP: 41e7a1	 Bytes: 0
block_.L_41e7a1:

  ; Code: movl $0x0, -0x6134(%rbp)	 RIP: 41e7a1	 Bytes: 10
  %loadMem_41e7a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7a1 = call %struct.Memory* @routine_movl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7a1)
  store %struct.Memory* %call_41e7a1, %struct.Memory** %MEMORY

  ; Code: .L_41e7ab:	 RIP: 41e7ab	 Bytes: 0
  br label %block_.L_41e7ab
block_.L_41e7ab:

  ; Code: jmpq .L_41e7b0	 RIP: 41e7ab	 Bytes: 5
  %loadMem_41e7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7ab = call %struct.Memory* @routine_jmpq_.L_41e7b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7ab, i64 5, i64 5)
  store %struct.Memory* %call_41e7ab, %struct.Memory** %MEMORY

  br label %block_.L_41e7b0

  ; Code: .L_41e7b0:	 RIP: 41e7b0	 Bytes: 0
block_.L_41e7b0:

  ; Code: jmpq .L_41e7b5	 RIP: 41e7b0	 Bytes: 5
  %loadMem_41e7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7b0 = call %struct.Memory* @routine_jmpq_.L_41e7b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7b0, i64 5, i64 5)
  store %struct.Memory* %call_41e7b0, %struct.Memory** %MEMORY

  br label %block_.L_41e7b5

  ; Code: .L_41e7b5:	 RIP: 41e7b5	 Bytes: 0
block_.L_41e7b5:

  ; Code: cmpl $0x0, 0x8a2a04	 RIP: 41e7b5	 Bytes: 8
  %loadMem_41e7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7b5 = call %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7b5)
  store %struct.Memory* %call_41e7b5, %struct.Memory** %MEMORY

  ; Code: jne .L_41e844	 RIP: 41e7bd	 Bytes: 6
  %loadMem_41e7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7bd = call %struct.Memory* @routine_jne_.L_41e844(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7bd, i8* %BRANCH_TAKEN, i64 135, i64 6, i64 6)
  store %struct.Memory* %call_41e7bd, %struct.Memory** %MEMORY

  %loadBr_41e7bd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e7bd = icmp eq i8 %loadBr_41e7bd, 1
  br i1 %cmpBr_41e7bd, label %block_.L_41e844, label %block_41e7c3

block_41e7c3:
  ; Code: cmpl $0x0, -0x35c(%rbp)	 RIP: 41e7c3	 Bytes: 7
  %loadMem_41e7c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7c3 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x35c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7c3)
  store %struct.Memory* %call_41e7c3, %struct.Memory** %MEMORY

  ; Code: je .L_41e802	 RIP: 41e7ca	 Bytes: 6
  %loadMem_41e7ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7ca = call %struct.Memory* @routine_je_.L_41e802(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7ca, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_41e7ca, %struct.Memory** %MEMORY

  %loadBr_41e7ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e7ca = icmp eq i8 %loadBr_41e7ca, 1
  br i1 %cmpBr_41e7ca, label %block_.L_41e802, label %block_41e7d0

block_41e7d0:
  ; Code: movq $0x429bef, %rdi	 RIP: 41e7d0	 Bytes: 10
  %loadMem_41e7d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7d0 = call %struct.Memory* @routine_movq__0x429bef___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7d0)
  store %struct.Memory* %call_41e7d0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e7da	 Bytes: 2
  %loadMem_41e7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7da = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7da)
  store %struct.Memory* %call_41e7da, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e7dc	 Bytes: 5
  %loadMem1_41e7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e7dc = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e7dc, i64 -121644, i64 5, i64 5)
  store %struct.Memory* %call1_41e7dc, %struct.Memory** %MEMORY

  %loadMem2_41e7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e7dc = load i64, i64* %3
  %call2_41e7dc = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e7dc, %struct.Memory* %loadMem2_41e7dc)
  store %struct.Memory* %call2_41e7dc, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 41e7e1	 Bytes: 5
  %loadMem_41e7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7e1 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7e1)
  store %struct.Memory* %call_41e7e1, %struct.Memory** %MEMORY

  ; Code: movq 0x62da80, %rdi	 RIP: 41e7e6	 Bytes: 8
  %loadMem_41e7e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7e6 = call %struct.Memory* @routine_movq_0x62da80___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7e6)
  store %struct.Memory* %call_41e7e6, %struct.Memory** %MEMORY

  ; Code: subl 0x886b84, %ecx	 RIP: 41e7ee	 Bytes: 7
  %loadMem_41e7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7ee = call %struct.Memory* @routine_subl_0x886b84___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7ee)
  store %struct.Memory* %call_41e7ee, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41e7f5	 Bytes: 2
  %loadMem_41e7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7f5 = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7f5)
  store %struct.Memory* %call_41e7f5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6240(%rbp)	 RIP: 41e7f7	 Bytes: 6
  %loadMem_41e7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e7f7 = call %struct.Memory* @routine_movl__eax__MINUS0x6240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e7f7)
  store %struct.Memory* %call_41e7f7, %struct.Memory** %MEMORY

  ; Code: callq .display_board	 RIP: 41e7fd	 Bytes: 5
  %loadMem1_41e7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e7fd = call %struct.Memory* @routine_callq_.display_board(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e7fd, i64 15299, i64 5, i64 5)
  store %struct.Memory* %call1_41e7fd, %struct.Memory** %MEMORY

  %loadMem2_41e7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e7fd = load i64, i64* %3
  %call2_41e7fd = call %struct.Memory* @sub_4223c0.display_board(%struct.State* %0, i64  %loadPC_41e7fd, %struct.Memory* %loadMem2_41e7fd)
  store %struct.Memory* %call2_41e7fd, %struct.Memory** %MEMORY

  ; Code: .L_41e802:	 RIP: 41e802	 Bytes: 0
  br label %block_.L_41e802
block_.L_41e802:

  ; Code: cmpl $0x0, -0x6134(%rbp)	 RIP: 41e802	 Bytes: 7
  %loadMem_41e802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e802 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e802)
  store %struct.Memory* %call_41e802, %struct.Memory** %MEMORY

  ; Code: jne .L_41e83f	 RIP: 41e809	 Bytes: 6
  %loadMem_41e809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e809 = call %struct.Memory* @routine_jne_.L_41e83f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e809, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_41e809, %struct.Memory** %MEMORY

  %loadBr_41e809 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e809 = icmp eq i8 %loadBr_41e809, 1
  br i1 %cmpBr_41e809, label %block_.L_41e83f, label %block_41e80f

block_41e80f:
  ; Code: movq $0x429351, %rdi	 RIP: 41e80f	 Bytes: 10
  %loadMem_41e80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e80f = call %struct.Memory* @routine_movq__0x429351___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e80f)
  store %struct.Memory* %call_41e80f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41e819	 Bytes: 2
  %loadMem_41e819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e819 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e819)
  store %struct.Memory* %call_41e819, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41e81b	 Bytes: 5
  %loadMem1_41e81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e81b = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e81b, i64 -121707, i64 5, i64 5)
  store %struct.Memory* %call1_41e81b, %struct.Memory** %MEMORY

  %loadMem2_41e81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e81b = load i64, i64* %3
  %call2_41e81b = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41e81b, %struct.Memory* %loadMem2_41e81b)
  store %struct.Memory* %call2_41e81b, %struct.Memory** %MEMORY

  ; Code: movl $0x100, %esi	 RIP: 41e820	 Bytes: 5
  %loadMem_41e820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e820 = call %struct.Memory* @routine_movl__0x100___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e820)
  store %struct.Memory* %call_41e820, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41e825	 Bytes: 7
  %loadMem_41e825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e825 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e825)
  store %struct.Memory* %call_41e825, %struct.Memory** %MEMORY

  ; Code: movq 0x62da90, %rdx	 RIP: 41e82c	 Bytes: 8
  %loadMem_41e82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e82c = call %struct.Memory* @routine_movq_0x62da90___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e82c)
  store %struct.Memory* %call_41e82c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6244(%rbp)	 RIP: 41e834	 Bytes: 6
  %loadMem_41e834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e834 = call %struct.Memory* @routine_movl__eax__MINUS0x6244__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e834)
  store %struct.Memory* %call_41e834, %struct.Memory** %MEMORY

  ; Code: callq .rinput	 RIP: 41e83a	 Bytes: 5
  %loadMem1_41e83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e83a = call %struct.Memory* @routine_callq_.rinput(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e83a, i64 17910, i64 5, i64 5)
  store %struct.Memory* %call1_41e83a, %struct.Memory** %MEMORY

  %loadMem2_41e83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e83a = load i64, i64* %3
  %call2_41e83a = call %struct.Memory* @sub_422e30.rinput(%struct.State* %0, i64  %loadPC_41e83a, %struct.Memory* %loadMem2_41e83a)
  store %struct.Memory* %call2_41e83a, %struct.Memory** %MEMORY

  ; Code: .L_41e83f:	 RIP: 41e83f	 Bytes: 0
  br label %block_.L_41e83f
block_.L_41e83f:

  ; Code: jmpq .L_41e909	 RIP: 41e83f	 Bytes: 5
  %loadMem_41e83f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e83f = call %struct.Memory* @routine_jmpq_.L_41e909(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e83f, i64 202, i64 5)
  store %struct.Memory* %call_41e83f, %struct.Memory** %MEMORY

  br label %block_.L_41e909

  ; Code: .L_41e844:	 RIP: 41e844	 Bytes: 0
block_.L_41e844:

  ; Code: cmpl $0x0, 0x86bd90	 RIP: 41e844	 Bytes: 8
  %loadMem_41e844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e844 = call %struct.Memory* @routine_cmpl__0x0__0x86bd90(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e844)
  store %struct.Memory* %call_41e844, %struct.Memory** %MEMORY

  ; Code: jne .L_41e896	 RIP: 41e84c	 Bytes: 6
  %loadMem_41e84c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e84c = call %struct.Memory* @routine_jne_.L_41e896(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e84c, i8* %BRANCH_TAKEN, i64 74, i64 6, i64 6)
  store %struct.Memory* %call_41e84c, %struct.Memory** %MEMORY

  %loadBr_41e84c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e84c = icmp eq i8 %loadBr_41e84c, 1
  br i1 %cmpBr_41e84c, label %block_.L_41e896, label %block_41e852

block_41e852:
  ; Code: cmpl $0x0, 0x62e524	 RIP: 41e852	 Bytes: 8
  %loadMem_41e852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e852 = call %struct.Memory* @routine_cmpl__0x0__0x62e524(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e852)
  store %struct.Memory* %call_41e852, %struct.Memory** %MEMORY

  ; Code: je .L_41e888	 RIP: 41e85a	 Bytes: 6
  %loadMem_41e85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e85a = call %struct.Memory* @routine_je_.L_41e888(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e85a, i8* %BRANCH_TAKEN, i64 46, i64 6, i64 6)
  store %struct.Memory* %call_41e85a, %struct.Memory** %MEMORY

  %loadBr_41e85a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e85a = icmp eq i8 %loadBr_41e85a, 1
  br i1 %cmpBr_41e85a, label %block_.L_41e888, label %block_41e860

block_41e860:
  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41e860	 Bytes: 7
  %loadMem_41e860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e860 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e860)
  store %struct.Memory* %call_41e860, %struct.Memory** %MEMORY

  ; Code: jne .L_41e888	 RIP: 41e867	 Bytes: 6
  %loadMem_41e867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e867 = call %struct.Memory* @routine_jne_.L_41e888(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e867, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_41e867, %struct.Memory** %MEMORY

  %loadBr_41e867 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e867 = icmp eq i8 %loadBr_41e867, 1
  br i1 %cmpBr_41e867, label %block_.L_41e888, label %block_41e86d

block_41e86d:
  ; Code: cmpl $0x0, -0x358(%rbp)	 RIP: 41e86d	 Bytes: 7
  %loadMem_41e86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e86d = call %struct.Memory* @routine_cmpl__0x0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e86d)
  store %struct.Memory* %call_41e86d, %struct.Memory** %MEMORY

  ; Code: jne .L_41e888	 RIP: 41e874	 Bytes: 6
  %loadMem_41e874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e874 = call %struct.Memory* @routine_jne_.L_41e888(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e874, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41e874, %struct.Memory** %MEMORY

  %loadBr_41e874 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e874 = icmp eq i8 %loadBr_41e874, 1
  br i1 %cmpBr_41e874, label %block_.L_41e888, label %block_41e87a

block_41e87a:
  ; Code: cmpl $0x0, 0x62ea38	 RIP: 41e87a	 Bytes: 8
  %loadMem_41e87a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e87a = call %struct.Memory* @routine_cmpl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e87a)
  store %struct.Memory* %call_41e87a, %struct.Memory** %MEMORY

  ; Code: jne .L_41e896	 RIP: 41e882	 Bytes: 6
  %loadMem_41e882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e882 = call %struct.Memory* @routine_jne_.L_41e896(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e882, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_41e882, %struct.Memory** %MEMORY

  %loadBr_41e882 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e882 = icmp eq i8 %loadBr_41e882, 1
  br i1 %cmpBr_41e882, label %block_.L_41e896, label %block_.L_41e888

  ; Code: .L_41e888:	 RIP: 41e888	 Bytes: 0
block_.L_41e888:

  ; Code: cmpl $0x0, 0x62e514	 RIP: 41e888	 Bytes: 8
  %loadMem_41e888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e888 = call %struct.Memory* @routine_cmpl__0x0__0x62e514(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e888)
  store %struct.Memory* %call_41e888, %struct.Memory** %MEMORY

  ; Code: je .L_41e8de	 RIP: 41e890	 Bytes: 6
  %loadMem_41e890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e890 = call %struct.Memory* @routine_je_.L_41e8de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e890, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_41e890, %struct.Memory** %MEMORY

  %loadBr_41e890 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e890 = icmp eq i8 %loadBr_41e890, 1
  br i1 %cmpBr_41e890, label %block_.L_41e8de, label %block_.L_41e896

  ; Code: .L_41e896:	 RIP: 41e896	 Bytes: 0
block_.L_41e896:

  ; Code: cmpl $0x0, 0x866530	 RIP: 41e896	 Bytes: 8
  %loadMem_41e896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e896 = call %struct.Memory* @routine_cmpl__0x0__0x866530(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e896)
  store %struct.Memory* %call_41e896, %struct.Memory** %MEMORY

  ; Code: jne .L_41e8de	 RIP: 41e89e	 Bytes: 6
  %loadMem_41e89e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e89e = call %struct.Memory* @routine_jne_.L_41e8de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e89e, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_41e89e, %struct.Memory** %MEMORY

  %loadBr_41e89e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e89e = icmp eq i8 %loadBr_41e89e, 1
  br i1 %cmpBr_41e89e, label %block_.L_41e8de, label %block_41e8a4

block_41e8a4:
  ; Code: cmpl $0x0, -0x6134(%rbp)	 RIP: 41e8a4	 Bytes: 7
  %loadMem_41e8a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8a4 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8a4)
  store %struct.Memory* %call_41e8a4, %struct.Memory** %MEMORY

  ; Code: jne .L_41e8de	 RIP: 41e8ab	 Bytes: 6
  %loadMem_41e8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8ab = call %struct.Memory* @routine_jne_.L_41e8de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8ab, i8* %BRANCH_TAKEN, i64 51, i64 6, i64 6)
  store %struct.Memory* %call_41e8ab, %struct.Memory** %MEMORY

  %loadBr_41e8ab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e8ab = icmp eq i8 %loadBr_41e8ab, 1
  br i1 %cmpBr_41e8ab, label %block_.L_41e8de, label %block_41e8b1

block_41e8b1:
  ; Code: leaq -0x6170(%rbp), %rdi	 RIP: 41e8b1	 Bytes: 7
  %loadMem_41e8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8b1 = call %struct.Memory* @routine_leaq_MINUS0x6170__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8b1)
  store %struct.Memory* %call_41e8b1, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x886bbc	 RIP: 41e8b8	 Bytes: 11
  %loadMem_41e8b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8b8 = call %struct.Memory* @routine_movl__0x1__0x886bbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8b8)
  store %struct.Memory* %call_41e8b8, %struct.Memory** %MEMORY

  ; Code: callq .think	 RIP: 41e8c3	 Bytes: 5
  %loadMem1_41e8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e8c3 = call %struct.Memory* @routine_callq_.think(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e8c3, i64 -16259, i64 5, i64 5)
  store %struct.Memory* %call1_41e8c3, %struct.Memory** %MEMORY

  %loadMem2_41e8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e8c3 = load i64, i64* %3
  %call2_41e8c3 = call %struct.Memory* @sub_41a940.think(%struct.State* %0, i64  %loadPC_41e8c3, %struct.Memory* %loadMem2_41e8c3)
  store %struct.Memory* %call2_41e8c3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bbc	 RIP: 41e8c8	 Bytes: 11
  %loadMem_41e8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8c8 = call %struct.Memory* @routine_movl__0x0__0x886bbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8c8)
  store %struct.Memory* %call_41e8c8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bc0	 RIP: 41e8d3	 Bytes: 11
  %loadMem_41e8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8d3 = call %struct.Memory* @routine_movl__0x0__0x886bc0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8d3)
  store %struct.Memory* %call_41e8d3, %struct.Memory** %MEMORY

  ; Code: .L_41e8de:	 RIP: 41e8de	 Bytes: 0
  br label %block_.L_41e8de
block_.L_41e8de:

  ; Code: cmpl $0x0, -0x6134(%rbp)	 RIP: 41e8de	 Bytes: 7
  %loadMem_41e8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8de = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8de)
  store %struct.Memory* %call_41e8de, %struct.Memory** %MEMORY

  ; Code: jne .L_41e904	 RIP: 41e8e5	 Bytes: 6
  %loadMem_41e8e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8e5 = call %struct.Memory* @routine_jne_.L_41e904(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8e5, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_41e8e5, %struct.Memory** %MEMORY

  %loadBr_41e8e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e8e5 = icmp eq i8 %loadBr_41e8e5, 1
  br i1 %cmpBr_41e8e5, label %block_.L_41e904, label %block_41e8eb

block_41e8eb:
  ; Code: movl $0x100, %esi	 RIP: 41e8eb	 Bytes: 5
  %loadMem_41e8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8eb = call %struct.Memory* @routine_movl__0x100___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8eb)
  store %struct.Memory* %call_41e8eb, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41e8f0	 Bytes: 7
  %loadMem_41e8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8f0 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8f0)
  store %struct.Memory* %call_41e8f0, %struct.Memory** %MEMORY

  ; Code: movq 0x62da90, %rdx	 RIP: 41e8f7	 Bytes: 8
  %loadMem_41e8f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e8f7 = call %struct.Memory* @routine_movq_0x62da90___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e8f7)
  store %struct.Memory* %call_41e8f7, %struct.Memory** %MEMORY

  ; Code: callq .rinput	 RIP: 41e8ff	 Bytes: 5
  %loadMem1_41e8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e8ff = call %struct.Memory* @routine_callq_.rinput(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e8ff, i64 17713, i64 5, i64 5)
  store %struct.Memory* %call1_41e8ff, %struct.Memory** %MEMORY

  %loadMem2_41e8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e8ff = load i64, i64* %3
  %call2_41e8ff = call %struct.Memory* @sub_422e30.rinput(%struct.State* %0, i64  %loadPC_41e8ff, %struct.Memory* %loadMem2_41e8ff)
  store %struct.Memory* %call2_41e8ff, %struct.Memory** %MEMORY

  ; Code: .L_41e904:	 RIP: 41e904	 Bytes: 0
  br label %block_.L_41e904
block_.L_41e904:

  ; Code: jmpq .L_41e909	 RIP: 41e904	 Bytes: 5
  %loadMem_41e904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e904 = call %struct.Memory* @routine_jmpq_.L_41e909(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e904, i64 5, i64 5)
  store %struct.Memory* %call_41e904, %struct.Memory** %MEMORY

  br label %block_.L_41e909

  ; Code: .L_41e909:	 RIP: 41e909	 Bytes: 0
block_.L_41e909:

  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41e909	 Bytes: 7
  %loadMem_41e909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e909 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e909)
  store %struct.Memory* %call_41e909, %struct.Memory** %MEMORY

  ; Code: jne .L_41eac7	 RIP: 41e910	 Bytes: 6
  %loadMem_41e910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e910 = call %struct.Memory* @routine_jne_.L_41eac7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e910, i8* %BRANCH_TAKEN, i64 439, i64 6, i64 6)
  store %struct.Memory* %call_41e910, %struct.Memory** %MEMORY

  %loadBr_41e910 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e910 = icmp eq i8 %loadBr_41e910, 1
  br i1 %cmpBr_41e910, label %block_.L_41eac7, label %block_41e916

block_41e916:
  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41e916	 Bytes: 7
  %loadMem_41e916 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e916 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e916)
  store %struct.Memory* %call_41e916, %struct.Memory** %MEMORY

  ; Code: callq .is_move	 RIP: 41e91d	 Bytes: 5
  %loadMem1_41e91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e91d = call %struct.Memory* @routine_callq_.is_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e91d, i64 16707, i64 5, i64 5)
  store %struct.Memory* %call1_41e91d, %struct.Memory** %MEMORY

  %loadMem2_41e91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e91d = load i64, i64* %3
  %call2_41e91d = call %struct.Memory* @sub_422a60.is_move(%struct.State* %0, i64  %loadPC_41e91d, %struct.Memory* %loadMem2_41e91d)
  store %struct.Memory* %call2_41e91d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41e922	 Bytes: 3
  %loadMem_41e922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e922 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e922)
  store %struct.Memory* %call_41e922, %struct.Memory** %MEMORY

  ; Code: je .L_41eac7	 RIP: 41e925	 Bytes: 6
  %loadMem_41e925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e925 = call %struct.Memory* @routine_je_.L_41eac7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e925, i8* %BRANCH_TAKEN, i64 418, i64 6, i64 6)
  store %struct.Memory* %call_41e925, %struct.Memory** %MEMORY

  %loadBr_41e925 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e925 = icmp eq i8 %loadBr_41e925, 1
  br i1 %cmpBr_41e925, label %block_.L_41eac7, label %block_41e92b

block_41e92b:
  ; Code: leaq -0x338(%rbp), %rsi	 RIP: 41e92b	 Bytes: 7
  %loadMem_41e92b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e92b = call %struct.Memory* @routine_leaq_MINUS0x338__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e92b)
  store %struct.Memory* %call_41e92b, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41e932	 Bytes: 7
  %loadMem_41e932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e932 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e932)
  store %struct.Memory* %call_41e932, %struct.Memory** %MEMORY

  ; Code: callq .verify_coord	 RIP: 41e939	 Bytes: 5
  %loadMem1_41e939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e939 = call %struct.Memory* @routine_callq_.verify_coord(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e939, i64 17815, i64 5, i64 5)
  store %struct.Memory* %call1_41e939, %struct.Memory** %MEMORY

  %loadMem2_41e939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e939 = load i64, i64* %3
  %call2_41e939 = call %struct.Memory* @sub_422ed0.verify_coord(%struct.State* %0, i64  %loadPC_41e939, %struct.Memory* %loadMem2_41e939)
  store %struct.Memory* %call2_41e939, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41e93e	 Bytes: 3
  %loadMem_41e93e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e93e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e93e)
  store %struct.Memory* %call_41e93e, %struct.Memory** %MEMORY

  ; Code: je .L_41eaa4	 RIP: 41e941	 Bytes: 6
  %loadMem_41e941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e941 = call %struct.Memory* @routine_je_.L_41eaa4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e941, i8* %BRANCH_TAKEN, i64 355, i64 6, i64 6)
  store %struct.Memory* %call_41e941, %struct.Memory** %MEMORY

  %loadBr_41e941 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e941 = icmp eq i8 %loadBr_41e941, 1
  br i1 %cmpBr_41e941, label %block_.L_41eaa4, label %block_41e947

block_41e947:
  ; Code: leaq -0x338(%rbp), %rdi	 RIP: 41e947	 Bytes: 7
  %loadMem_41e947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e947 = call %struct.Memory* @routine_leaq_MINUS0x338__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e947)
  store %struct.Memory* %call_41e947, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 41e94e	 Bytes: 2
  %loadMem_41e94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e94e = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e94e)
  store %struct.Memory* %call_41e94e, %struct.Memory** %MEMORY

  ; Code: leaq -0x3ba0(%rbp), %rax	 RIP: 41e950	 Bytes: 7
  %loadMem_41e950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e950 = call %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e950)
  store %struct.Memory* %call_41e950, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rcx	 RIP: 41e957	 Bytes: 8
  %loadMem_41e957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e957 = call %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e957)
  store %struct.Memory* %call_41e957, %struct.Memory** %MEMORY

  ; Code: imulq $0x18, %rcx, %rcx	 RIP: 41e95f	 Bytes: 4
  %loadMem_41e95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e95f = call %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e95f)
  store %struct.Memory* %call_41e95f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41e963	 Bytes: 3
  %loadMem_41e963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e963 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e963)
  store %struct.Memory* %call_41e963, %struct.Memory** %MEMORY

  ; Code: movq -0x338(%rbp), %rcx	 RIP: 41e966	 Bytes: 7
  %loadMem_41e966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e966 = call %struct.Memory* @routine_movq_MINUS0x338__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e966)
  store %struct.Memory* %call_41e966, %struct.Memory** %MEMORY

  ; Code: movq %rcx, (%rax)	 RIP: 41e96d	 Bytes: 3
  %loadMem_41e96d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e96d = call %struct.Memory* @routine_movq__rcx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e96d)
  store %struct.Memory* %call_41e96d, %struct.Memory** %MEMORY

  ; Code: movq -0x330(%rbp), %rcx	 RIP: 41e970	 Bytes: 7
  %loadMem_41e970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e970 = call %struct.Memory* @routine_movq_MINUS0x330__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e970)
  store %struct.Memory* %call_41e970, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x8(%rax)	 RIP: 41e977	 Bytes: 4
  %loadMem_41e977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e977 = call %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e977)
  store %struct.Memory* %call_41e977, %struct.Memory** %MEMORY

  ; Code: movq -0x328(%rbp), %rcx	 RIP: 41e97b	 Bytes: 7
  %loadMem_41e97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e97b = call %struct.Memory* @routine_movq_MINUS0x328__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e97b)
  store %struct.Memory* %call_41e97b, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x10(%rax)	 RIP: 41e982	 Bytes: 4
  %loadMem_41e982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e982 = call %struct.Memory* @routine_movq__rcx__0x10__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e982)
  store %struct.Memory* %call_41e982, %struct.Memory** %MEMORY

  ; Code: movl 0x633b40, %edx	 RIP: 41e986	 Bytes: 7
  %loadMem_41e986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e986 = call %struct.Memory* @routine_movl_0x633b40___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e986)
  store %struct.Memory* %call_41e986, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rax	 RIP: 41e98d	 Bytes: 8
  %loadMem_41e98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e98d = call %struct.Memory* @routine_movslq_0x62ea38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e98d)
  store %struct.Memory* %call_41e98d, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x84a3d0(,%rax,4)	 RIP: 41e995	 Bytes: 7
  %loadMem_41e995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e995 = call %struct.Memory* @routine_movl__edx__0x84a3d0___rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e995)
  store %struct.Memory* %call_41e995, %struct.Memory** %MEMORY

  ; Code: callq .make	 RIP: 41e99c	 Bytes: 5
  %loadMem1_41e99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e99c = call %struct.Memory* @routine_callq_.make(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e99c, i64 -78444, i64 5, i64 5)
  store %struct.Memory* %call1_41e99c, %struct.Memory** %MEMORY

  %loadMem2_41e99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e99c = load i64, i64* %3
  %call2_41e99c = call %struct.Memory* @sub_40b730.make(%struct.State* %0, i64  %loadPC_41e99c, %struct.Memory* %loadMem2_41e99c)
  store %struct.Memory* %call2_41e99c, %struct.Memory** %MEMORY

  ; Code: leaq -0x6120(%rbp), %rax	 RIP: 41e9a1	 Bytes: 7
  %loadMem_41e9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9a1 = call %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9a1)
  store %struct.Memory* %call_41e9a1, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea38, %edx	 RIP: 41e9a8	 Bytes: 7
  %loadMem_41e9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9a8 = call %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9a8)
  store %struct.Memory* %call_41e9a8, %struct.Memory** %MEMORY

  ; Code: movl %edx, %esi	 RIP: 41e9af	 Bytes: 2
  %loadMem_41e9af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9af = call %struct.Memory* @routine_movl__edx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9af)
  store %struct.Memory* %call_41e9af, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 41e9b1	 Bytes: 3
  %loadMem_41e9b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9b1 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9b1)
  store %struct.Memory* %call_41e9b1, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x62ea38	 RIP: 41e9b4	 Bytes: 7
  %loadMem_41e9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9b4 = call %struct.Memory* @routine_movl__esi__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9b4)
  store %struct.Memory* %call_41e9b4, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rcx	 RIP: 41e9bb	 Bytes: 3
  %loadMem_41e9bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9bb = call %struct.Memory* @routine_movslq__edx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9bb)
  store %struct.Memory* %call_41e9bb, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rcx	 RIP: 41e9be	 Bytes: 4
  %loadMem_41e9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9be = call %struct.Memory* @routine_shlq__0x4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9be)
  store %struct.Memory* %call_41e9be, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41e9c2	 Bytes: 3
  %loadMem_41e9c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9c2 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9c2)
  store %struct.Memory* %call_41e9c2, %struct.Memory** %MEMORY

  ; Code: movq 0x880b20, %rcx	 RIP: 41e9c5	 Bytes: 8
  %loadMem_41e9c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9c5 = call %struct.Memory* @routine_movq_0x880b20___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9c5)
  store %struct.Memory* %call_41e9c5, %struct.Memory** %MEMORY

  ; Code: movq %rcx, (%rax)	 RIP: 41e9cd	 Bytes: 3
  %loadMem_41e9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9cd = call %struct.Memory* @routine_movq__rcx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9cd)
  store %struct.Memory* %call_41e9cd, %struct.Memory** %MEMORY

  ; Code: movq 0x880b28, %rcx	 RIP: 41e9d0	 Bytes: 8
  %loadMem_41e9d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9d0 = call %struct.Memory* @routine_movq_0x880b28___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9d0)
  store %struct.Memory* %call_41e9d0, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x8(%rax)	 RIP: 41e9d8	 Bytes: 4
  %loadMem_41e9d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9d8 = call %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9d8)
  store %struct.Memory* %call_41e9d8, %struct.Memory** %MEMORY

  ; Code: callq .reset_piece_square	 RIP: 41e9dc	 Bytes: 5
  %loadMem1_41e9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41e9dc = call %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41e9dc, i64 16052, i64 5, i64 5)
  store %struct.Memory* %call1_41e9dc, %struct.Memory** %MEMORY

  %loadMem2_41e9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41e9dc = load i64, i64* %3
  %call2_41e9dc = call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* %0, i64  %loadPC_41e9dc, %struct.Memory* %loadMem2_41e9dc)
  store %struct.Memory* %call2_41e9dc, %struct.Memory** %MEMORY

  ; Code: movl 0x633b54, %edx	 RIP: 41e9e1	 Bytes: 7
  %loadMem_41e9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9e1 = call %struct.Memory* @routine_movl_0x633b54___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9e1)
  store %struct.Memory* %call_41e9e1, %struct.Memory** %MEMORY

  ; Code: xorl $0x1, %edx	 RIP: 41e9e8	 Bytes: 3
  %loadMem_41e9e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9e8 = call %struct.Memory* @routine_xorl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9e8)
  store %struct.Memory* %call_41e9e8, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x633b54	 RIP: 41e9eb	 Bytes: 7
  %loadMem_41e9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9eb = call %struct.Memory* @routine_movl__edx__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9eb)
  store %struct.Memory* %call_41e9eb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x28, 0x85f3ec	 RIP: 41e9f2	 Bytes: 8
  %loadMem_41e9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9f2 = call %struct.Memory* @routine_cmpl__0x28__0x85f3ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9f2)
  store %struct.Memory* %call_41e9f2, %struct.Memory** %MEMORY

  ; Code: jge .L_41ea4f	 RIP: 41e9fa	 Bytes: 6
  %loadMem_41e9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41e9fa = call %struct.Memory* @routine_jge_.L_41ea4f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41e9fa, i8* %BRANCH_TAKEN, i64 85, i64 6, i64 6)
  store %struct.Memory* %call_41e9fa, %struct.Memory** %MEMORY

  %loadBr_41e9fa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41e9fa = icmp eq i8 %loadBr_41e9fa, 1
  br i1 %cmpBr_41e9fa, label %block_.L_41ea4f, label %block_41ea00

block_41ea00:
  ; Code: cmpl $0x0, 0x85f3ec	 RIP: 41ea00	 Bytes: 8
  %loadMem_41ea00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea00 = call %struct.Memory* @routine_cmpl__0x0__0x85f3ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea00)
  store %struct.Memory* %call_41ea00, %struct.Memory** %MEMORY

  ; Code: jne .L_41ea2d	 RIP: 41ea08	 Bytes: 6
  %loadMem_41ea08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea08 = call %struct.Memory* @routine_jne_.L_41ea2d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea08, i8* %BRANCH_TAKEN, i64 37, i64 6, i64 6)
  store %struct.Memory* %call_41ea08, %struct.Memory** %MEMORY

  %loadBr_41ea08 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ea08 = icmp eq i8 %loadBr_41ea08, 1
  br i1 %cmpBr_41ea08, label %block_.L_41ea2d, label %block_41ea0e

block_41ea0e:
  ; Code: leaq -0x110(%rbp), %rsi	 RIP: 41ea0e	 Bytes: 7
  %loadMem_41ea0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea0e = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea0e)
  store %struct.Memory* %call_41ea0e, %struct.Memory** %MEMORY

  ; Code: movl $0x886740, %eax	 RIP: 41ea15	 Bytes: 5
  %loadMem_41ea15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea15 = call %struct.Memory* @routine_movl__0x886740___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea15)
  store %struct.Memory* %call_41ea15, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 41ea1a	 Bytes: 2
  %loadMem_41ea1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea1a = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea1a)
  store %struct.Memory* %call_41ea1a, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 41ea1c	 Bytes: 5
  %loadMem1_41ea1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ea1c = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ea1c, i64 -122284, i64 5, i64 5)
  store %struct.Memory* %call1_41ea1c, %struct.Memory** %MEMORY

  %loadMem2_41ea1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ea1c = load i64, i64* %3
  %call2_41ea1c = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_41ea1c, %struct.Memory* %loadMem2_41ea1c)
  store %struct.Memory* %call2_41ea1c, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x6250(%rbp)	 RIP: 41ea21	 Bytes: 7
  %loadMem_41ea21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea21 = call %struct.Memory* @routine_movq__rax__MINUS0x6250__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea21)
  store %struct.Memory* %call_41ea21, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41ea4a	 RIP: 41ea28	 Bytes: 5
  %loadMem_41ea28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea28 = call %struct.Memory* @routine_jmpq_.L_41ea4a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea28, i64 34, i64 5)
  store %struct.Memory* %call_41ea28, %struct.Memory** %MEMORY

  br label %block_.L_41ea4a

  ; Code: .L_41ea2d:	 RIP: 41ea2d	 Bytes: 0
block_.L_41ea2d:

  ; Code: movq $0x886740, %rdi	 RIP: 41ea2d	 Bytes: 10
  %loadMem_41ea2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea2d = call %struct.Memory* @routine_movq__0x886740___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea2d)
  store %struct.Memory* %call_41ea2d, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rsi	 RIP: 41ea37	 Bytes: 7
  %loadMem_41ea37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea37 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea37)
  store %struct.Memory* %call_41ea37, %struct.Memory** %MEMORY

  ; Code: callq .strcat_plt	 RIP: 41ea3e	 Bytes: 5
  %loadMem1_41ea3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ea3e = call %struct.Memory* @routine_callq_.strcat_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ea3e, i64 -121982, i64 5, i64 5)
  store %struct.Memory* %call1_41ea3e, %struct.Memory** %MEMORY

  %loadMem2_41ea3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ea3e = load i64, i64* %3
  %call2_41ea3e = call %struct.Memory* @ext_strcat(%struct.State* %0, i64  %loadPC_41ea3e, %struct.Memory* %loadMem2_41ea3e)
  store %struct.Memory* %call2_41ea3e, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x6258(%rbp)	 RIP: 41ea43	 Bytes: 7
  %loadMem_41ea43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea43 = call %struct.Memory* @routine_movq__rax__MINUS0x6258__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea43)
  store %struct.Memory* %call_41ea43, %struct.Memory** %MEMORY

  ; Code: .L_41ea4a:	 RIP: 41ea4a	 Bytes: 0
  br label %block_.L_41ea4a
block_.L_41ea4a:

  ; Code: jmpq .L_41ea4f	 RIP: 41ea4a	 Bytes: 5
  %loadMem_41ea4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea4a = call %struct.Memory* @routine_jmpq_.L_41ea4f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea4a, i64 5, i64 5)
  store %struct.Memory* %call_41ea4a, %struct.Memory** %MEMORY

  br label %block_.L_41ea4f

  ; Code: .L_41ea4f:	 RIP: 41ea4f	 Bytes: 0
block_.L_41ea4f:

  ; Code: movl 0x85f3ec, %eax	 RIP: 41ea4f	 Bytes: 7
  %loadMem_41ea4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea4f = call %struct.Memory* @routine_movl_0x85f3ec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea4f)
  store %struct.Memory* %call_41ea4f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 41ea56	 Bytes: 3
  %loadMem_41ea56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea56 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea56)
  store %struct.Memory* %call_41ea56, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x85f3ec	 RIP: 41ea59	 Bytes: 7
  %loadMem_41ea59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea59 = call %struct.Memory* @routine_movl__eax__0x85f3ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea59)
  store %struct.Memory* %call_41ea59, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x35c(%rbp)	 RIP: 41ea60	 Bytes: 7
  %loadMem_41ea60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea60 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x35c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea60)
  store %struct.Memory* %call_41ea60, %struct.Memory** %MEMORY

  ; Code: je .L_41ea9f	 RIP: 41ea67	 Bytes: 6
  %loadMem_41ea67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea67 = call %struct.Memory* @routine_je_.L_41ea9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea67, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_41ea67, %struct.Memory** %MEMORY

  %loadBr_41ea67 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ea67 = icmp eq i8 %loadBr_41ea67, 1
  br i1 %cmpBr_41ea67, label %block_.L_41ea9f, label %block_41ea6d

block_41ea6d:
  ; Code: movq $0x429bef, %rdi	 RIP: 41ea6d	 Bytes: 10
  %loadMem_41ea6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea6d = call %struct.Memory* @routine_movq__0x429bef___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea6d)
  store %struct.Memory* %call_41ea6d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ea77	 Bytes: 2
  %loadMem_41ea77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea77 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea77)
  store %struct.Memory* %call_41ea77, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41ea79	 Bytes: 5
  %loadMem1_41ea79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ea79 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ea79, i64 -122313, i64 5, i64 5)
  store %struct.Memory* %call1_41ea79, %struct.Memory** %MEMORY

  %loadMem2_41ea79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ea79 = load i64, i64* %3
  %call2_41ea79 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41ea79, %struct.Memory* %loadMem2_41ea79)
  store %struct.Memory* %call2_41ea79, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 41ea7e	 Bytes: 5
  %loadMem_41ea7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea7e = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea7e)
  store %struct.Memory* %call_41ea7e, %struct.Memory** %MEMORY

  ; Code: movq 0x62da80, %rdi	 RIP: 41ea83	 Bytes: 8
  %loadMem_41ea83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea83 = call %struct.Memory* @routine_movq_0x62da80___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea83)
  store %struct.Memory* %call_41ea83, %struct.Memory** %MEMORY

  ; Code: subl 0x886b84, %ecx	 RIP: 41ea8b	 Bytes: 7
  %loadMem_41ea8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea8b = call %struct.Memory* @routine_subl_0x886b84___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea8b)
  store %struct.Memory* %call_41ea8b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 41ea92	 Bytes: 2
  %loadMem_41ea92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea92 = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea92)
  store %struct.Memory* %call_41ea92, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x625c(%rbp)	 RIP: 41ea94	 Bytes: 6
  %loadMem_41ea94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea94 = call %struct.Memory* @routine_movl__eax__MINUS0x625c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea94)
  store %struct.Memory* %call_41ea94, %struct.Memory** %MEMORY

  ; Code: callq .display_board	 RIP: 41ea9a	 Bytes: 5
  %loadMem1_41ea9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ea9a = call %struct.Memory* @routine_callq_.display_board(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ea9a, i64 14630, i64 5, i64 5)
  store %struct.Memory* %call1_41ea9a, %struct.Memory** %MEMORY

  %loadMem2_41ea9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ea9a = load i64, i64* %3
  %call2_41ea9a = call %struct.Memory* @sub_4223c0.display_board(%struct.State* %0, i64  %loadPC_41ea9a, %struct.Memory* %loadMem2_41ea9a)
  store %struct.Memory* %call2_41ea9a, %struct.Memory** %MEMORY

  ; Code: .L_41ea9f:	 RIP: 41ea9f	 Bytes: 0
  br label %block_.L_41ea9f
block_.L_41ea9f:

  ; Code: jmpq .L_41eac2	 RIP: 41ea9f	 Bytes: 5
  %loadMem_41ea9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ea9f = call %struct.Memory* @routine_jmpq_.L_41eac2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ea9f, i64 35, i64 5)
  store %struct.Memory* %call_41ea9f, %struct.Memory** %MEMORY

  br label %block_.L_41eac2

  ; Code: .L_41eaa4:	 RIP: 41eaa4	 Bytes: 0
block_.L_41eaa4:

  ; Code: movq $0x429359, %rdi	 RIP: 41eaa4	 Bytes: 10
  %loadMem_41eaa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eaa4 = call %struct.Memory* @routine_movq__0x429359___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eaa4)
  store %struct.Memory* %call_41eaa4, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rsi	 RIP: 41eaae	 Bytes: 7
  %loadMem_41eaae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eaae = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eaae)
  store %struct.Memory* %call_41eaae, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41eab5	 Bytes: 2
  %loadMem_41eab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eab5 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eab5)
  store %struct.Memory* %call_41eab5, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41eab7	 Bytes: 5
  %loadMem1_41eab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eab7 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eab7, i64 -122375, i64 5, i64 5)
  store %struct.Memory* %call1_41eab7, %struct.Memory** %MEMORY

  %loadMem2_41eab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eab7 = load i64, i64* %3
  %call2_41eab7 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41eab7, %struct.Memory* %loadMem2_41eab7)
  store %struct.Memory* %call2_41eab7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6260(%rbp)	 RIP: 41eabc	 Bytes: 6
  %loadMem_41eabc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eabc = call %struct.Memory* @routine_movl__eax__MINUS0x6260__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eabc)
  store %struct.Memory* %call_41eabc, %struct.Memory** %MEMORY

  ; Code: .L_41eac2:	 RIP: 41eac2	 Bytes: 0
  br label %block_.L_41eac2
block_.L_41eac2:

  ; Code: jmpq .L_4204ac	 RIP: 41eac2	 Bytes: 5
  %loadMem_41eac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eac2 = call %struct.Memory* @routine_jmpq_.L_4204ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eac2, i64 6634, i64 5)
  store %struct.Memory* %call_41eac2, %struct.Memory** %MEMORY

  br label %block_.L_4204ac

  ; Code: .L_41eac7:	 RIP: 41eac7	 Bytes: 0
block_.L_41eac7:

  ; Code: movq $0x42936b, %rsi	 RIP: 41eac7	 Bytes: 10
  %loadMem_41eac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eac7 = call %struct.Memory* @routine_movq__0x42936b___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eac7)
  store %struct.Memory* %call_41eac7, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ead1	 Bytes: 7
  %loadMem_41ead1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ead1 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ead1)
  store %struct.Memory* %call_41ead1, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41ead8	 Bytes: 5
  %loadMem1_41ead8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ead8 = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ead8, i64 -122088, i64 5, i64 5)
  store %struct.Memory* %call1_41ead8, %struct.Memory** %MEMORY

  %loadMem2_41ead8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ead8 = load i64, i64* %3
  %call2_41ead8 = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41ead8, %struct.Memory* %loadMem2_41ead8)
  store %struct.Memory* %call2_41ead8, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41eadd	 Bytes: 4
  %loadMem_41eadd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eadd = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eadd)
  store %struct.Memory* %call_41eadd, %struct.Memory** %MEMORY

  ; Code: jne .L_41eb3b	 RIP: 41eae1	 Bytes: 6
  %loadMem_41eae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eae1 = call %struct.Memory* @routine_jne_.L_41eb3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eae1, i8* %BRANCH_TAKEN, i64 90, i64 6, i64 6)
  store %struct.Memory* %call_41eae1, %struct.Memory** %MEMORY

  %loadBr_41eae1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41eae1 = icmp eq i8 %loadBr_41eae1, 1
  br i1 %cmpBr_41eae1, label %block_.L_41eb3b, label %block_41eae7

block_41eae7:
  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41eae7	 Bytes: 7
  %loadMem_41eae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eae7 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eae7)
  store %struct.Memory* %call_41eae7, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x118(%rbp)	 RIP: 41eaee	 Bytes: 7
  %loadMem_41eaee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eaee = call %struct.Memory* @routine_movq__rax__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eaee)
  store %struct.Memory* %call_41eaee, %struct.Memory** %MEMORY

  ; Code: .L_41eaf5:	 RIP: 41eaf5	 Bytes: 0
  br label %block_.L_41eaf5
block_.L_41eaf5:

  ; Code: movq -0x118(%rbp), %rax	 RIP: 41eaf5	 Bytes: 7
  %loadMem_41eaf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eaf5 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eaf5)
  store %struct.Memory* %call_41eaf5, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, (%rax)	 RIP: 41eafc	 Bytes: 3
  %loadMem_41eafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eafc = call %struct.Memory* @routine_cmpb__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eafc)
  store %struct.Memory* %call_41eafc, %struct.Memory** %MEMORY

  ; Code: je .L_41eb36	 RIP: 41eaff	 Bytes: 6
  %loadMem_41eaff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eaff = call %struct.Memory* @routine_je_.L_41eb36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eaff, i8* %BRANCH_TAKEN, i64 55, i64 6, i64 6)
  store %struct.Memory* %call_41eaff, %struct.Memory** %MEMORY

  %loadBr_41eaff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41eaff = icmp eq i8 %loadBr_41eaff, 1
  br i1 %cmpBr_41eaff, label %block_.L_41eb36, label %block_41eb05

block_41eb05:
  ; Code: movq -0x118(%rbp), %rax	 RIP: 41eb05	 Bytes: 7
  %loadMem_41eb05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb05 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb05)
  store %struct.Memory* %call_41eb05, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %edi	 RIP: 41eb0c	 Bytes: 3
  %loadMem_41eb0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb0c = call %struct.Memory* @routine_movsbl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb0c)
  store %struct.Memory* %call_41eb0c, %struct.Memory** %MEMORY

  ; Code: callq .tolower_plt	 RIP: 41eb0f	 Bytes: 5
  %loadMem1_41eb0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eb0f = call %struct.Memory* @routine_callq_.tolower_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eb0f, i64 -122303, i64 5, i64 5)
  store %struct.Memory* %call1_41eb0f, %struct.Memory** %MEMORY

  %loadMem2_41eb0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eb0f = load i64, i64* %3
  %call2_41eb0f = call %struct.Memory* @sub_400d50.tolower_plt(%struct.State* %0, i64  %loadPC_41eb0f, %struct.Memory* %loadMem2_41eb0f)
  store %struct.Memory* %call2_41eb0f, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 41eb14	 Bytes: 2
  %loadMem_41eb14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb14 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb14)
  store %struct.Memory* %call_41eb14, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdx	 RIP: 41eb16	 Bytes: 7
  %loadMem_41eb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb16 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb16)
  store %struct.Memory* %call_41eb16, %struct.Memory** %MEMORY

  ; Code: movb %cl, (%rdx)	 RIP: 41eb1d	 Bytes: 2
  %loadMem_41eb1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb1d = call %struct.Memory* @routine_movb__cl____rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb1d)
  store %struct.Memory* %call_41eb1d, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rax	 RIP: 41eb1f	 Bytes: 7
  %loadMem_41eb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb1f = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb1f)
  store %struct.Memory* %call_41eb1f, %struct.Memory** %MEMORY

  ; Code: addq $0x1, %rax	 RIP: 41eb26	 Bytes: 4
  %loadMem_41eb26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb26 = call %struct.Memory* @routine_addq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb26)
  store %struct.Memory* %call_41eb26, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x118(%rbp)	 RIP: 41eb2a	 Bytes: 7
  %loadMem_41eb2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb2a = call %struct.Memory* @routine_movq__rax__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb2a)
  store %struct.Memory* %call_41eb2a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41eaf5	 RIP: 41eb31	 Bytes: 5
  %loadMem_41eb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb31 = call %struct.Memory* @routine_jmpq_.L_41eaf5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb31, i64 -60, i64 5)
  store %struct.Memory* %call_41eb31, %struct.Memory** %MEMORY

  br label %block_.L_41eaf5

  ; Code: .L_41eb36:	 RIP: 41eb36	 Bytes: 0
block_.L_41eb36:

  ; Code: jmpq .L_41eb3b	 RIP: 41eb36	 Bytes: 5
  %loadMem_41eb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb36 = call %struct.Memory* @routine_jmpq_.L_41eb3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb36, i64 5, i64 5)
  store %struct.Memory* %call_41eb36, %struct.Memory** %MEMORY

  br label %block_.L_41eb3b

  ; Code: .L_41eb3b:	 RIP: 41eb3b	 Bytes: 0
block_.L_41eb3b:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41eb3b	 Bytes: 7
  %loadMem_41eb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb3b = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb3b)
  store %struct.Memory* %call_41eb3b, %struct.Memory** %MEMORY

  ; Code: movl $0x429374, %eax	 RIP: 41eb42	 Bytes: 5
  %loadMem_41eb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb42 = call %struct.Memory* @routine_movl__0x429374___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb42)
  store %struct.Memory* %call_41eb42, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41eb47	 Bytes: 2
  %loadMem_41eb47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb47 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb47)
  store %struct.Memory* %call_41eb47, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41eb49	 Bytes: 5
  %loadMem1_41eb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eb49 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eb49, i64 -122425, i64 5, i64 5)
  store %struct.Memory* %call1_41eb49, %struct.Memory** %MEMORY

  %loadMem2_41eb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eb49 = load i64, i64* %3
  %call2_41eb49 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41eb49, %struct.Memory* %loadMem2_41eb49)
  store %struct.Memory* %call2_41eb49, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41eb4e	 Bytes: 3
  %loadMem_41eb4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb4e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb4e)
  store %struct.Memory* %call_41eb4e, %struct.Memory** %MEMORY

  ; Code: jne .L_41eb68	 RIP: 41eb51	 Bytes: 6
  %loadMem_41eb51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb51 = call %struct.Memory* @routine_jne_.L_41eb68(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb51, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_41eb51, %struct.Memory** %MEMORY

  %loadBr_41eb51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41eb51 = icmp eq i8 %loadBr_41eb51, 1
  br i1 %cmpBr_41eb51, label %block_.L_41eb68, label %block_41eb57

block_41eb57:
  ; Code: callq .free_hash	 RIP: 41eb57	 Bytes: 5
  %loadMem1_41eb57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eb57 = call %struct.Memory* @routine_callq_.free_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eb57, i64 10537, i64 5, i64 5)
  store %struct.Memory* %call1_41eb57, %struct.Memory** %MEMORY

  %loadMem2_41eb57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eb57 = load i64, i64* %3
  %call2_41eb57 = call %struct.Memory* @sub_421480.free_hash(%struct.State* %0, i64  %loadPC_41eb57, %struct.Memory* %loadMem2_41eb57)
  store %struct.Memory* %call2_41eb57, %struct.Memory** %MEMORY

  ; Code: callq .free_ecache	 RIP: 41eb5c	 Bytes: 5
  %loadMem1_41eb5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eb5c = call %struct.Memory* @routine_callq_.free_ecache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eb5c, i64 -114364, i64 5, i64 5)
  store %struct.Memory* %call1_41eb5c, %struct.Memory** %MEMORY

  %loadMem2_41eb5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eb5c = load i64, i64* %3
  %call2_41eb5c = call %struct.Memory* @sub_402ca0.free_ecache(%struct.State* %0, i64  %loadPC_41eb5c, %struct.Memory* %loadMem2_41eb5c)
  store %struct.Memory* %call2_41eb5c, %struct.Memory** %MEMORY

  ; Code: xorl %edi, %edi	 RIP: 41eb61	 Bytes: 2
  %loadMem_41eb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb61 = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb61)
  store %struct.Memory* %call_41eb61, %struct.Memory** %MEMORY

  ; Code: callq .exit_plt	 RIP: 41eb63	 Bytes: 5
  %loadMem1_41eb63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eb63 = call %struct.Memory* @routine_callq_.exit_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eb63, i64 -122243, i64 5, i64 5)
  store %struct.Memory* %call1_41eb63, %struct.Memory** %MEMORY

  %loadMem2_41eb63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eb63 = load i64, i64* %3
  %call2_41eb63 = call %struct.Memory* @ext_exit(%struct.State* %0, i64  %loadPC_41eb63, %struct.Memory* %loadMem2_41eb63)
  store %struct.Memory* %call2_41eb63, %struct.Memory** %MEMORY

  ; Code: .L_41eb68:	 RIP: 41eb68	 Bytes: 0
  br label %block_.L_41eb68
block_.L_41eb68:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41eb68	 Bytes: 7
  %loadMem_41eb68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb68 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb68)
  store %struct.Memory* %call_41eb68, %struct.Memory** %MEMORY

  ; Code: movl $0x429379, %eax	 RIP: 41eb6f	 Bytes: 5
  %loadMem_41eb6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb6f = call %struct.Memory* @routine_movl__0x429379___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb6f)
  store %struct.Memory* %call_41eb6f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41eb74	 Bytes: 2
  %loadMem_41eb74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb74 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb74)
  store %struct.Memory* %call_41eb74, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41eb76	 Bytes: 5
  %loadMem1_41eb76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eb76 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eb76, i64 -122470, i64 5, i64 5)
  store %struct.Memory* %call1_41eb76, %struct.Memory** %MEMORY

  %loadMem2_41eb76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eb76 = load i64, i64* %3
  %call2_41eb76 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41eb76, %struct.Memory* %loadMem2_41eb76)
  store %struct.Memory* %call2_41eb76, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41eb7b	 Bytes: 3
  %loadMem_41eb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb7b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb7b)
  store %struct.Memory* %call_41eb7b, %struct.Memory** %MEMORY

  ; Code: jne .L_41ebce	 RIP: 41eb7e	 Bytes: 6
  %loadMem_41eb7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb7e = call %struct.Memory* @routine_jne_.L_41ebce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb7e, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_41eb7e, %struct.Memory** %MEMORY

  %loadBr_41eb7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41eb7e = icmp eq i8 %loadBr_41eb7e, 1
  br i1 %cmpBr_41eb7e, label %block_.L_41ebce, label %block_41eb84

block_41eb84:
  ; Code: cmpl $0x0, 0x62e514	 RIP: 41eb84	 Bytes: 8
  %loadMem_41eb84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb84 = call %struct.Memory* @routine_cmpl__0x0__0x62e514(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb84)
  store %struct.Memory* %call_41eb84, %struct.Memory** %MEMORY

  ; Code: je .L_41ebb8	 RIP: 41eb8c	 Bytes: 6
  %loadMem_41eb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb8c = call %struct.Memory* @routine_je_.L_41ebb8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb8c, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_41eb8c, %struct.Memory** %MEMORY

  %loadBr_41eb8c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41eb8c = icmp eq i8 %loadBr_41eb8c, 1
  br i1 %cmpBr_41eb8c, label %block_.L_41ebb8, label %block_41eb92

block_41eb92:
  ; Code: movl $0x0, 0x62e514	 RIP: 41eb92	 Bytes: 11
  %loadMem_41eb92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb92 = call %struct.Memory* @routine_movl__0x0__0x62e514(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb92)
  store %struct.Memory* %call_41eb92, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bbc	 RIP: 41eb9d	 Bytes: 11
  %loadMem_41eb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eb9d = call %struct.Memory* @routine_movl__0x0__0x886bbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eb9d)
  store %struct.Memory* %call_41eb9d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x633b44	 RIP: 41eba8	 Bytes: 11
  %loadMem_41eba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eba8 = call %struct.Memory* @routine_movl__0x0__0x633b44(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eba8)
  store %struct.Memory* %call_41eba8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41ebc9	 RIP: 41ebb3	 Bytes: 5
  %loadMem_41ebb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebb3 = call %struct.Memory* @routine_jmpq_.L_41ebc9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebb3, i64 22, i64 5)
  store %struct.Memory* %call_41ebb3, %struct.Memory** %MEMORY

  br label %block_.L_41ebc9

  ; Code: .L_41ebb8:	 RIP: 41ebb8	 Bytes: 0
block_.L_41ebb8:

  ; Code: callq .free_hash	 RIP: 41ebb8	 Bytes: 5
  %loadMem1_41ebb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ebb8 = call %struct.Memory* @routine_callq_.free_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ebb8, i64 10440, i64 5, i64 5)
  store %struct.Memory* %call1_41ebb8, %struct.Memory** %MEMORY

  %loadMem2_41ebb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ebb8 = load i64, i64* %3
  %call2_41ebb8 = call %struct.Memory* @sub_421480.free_hash(%struct.State* %0, i64  %loadPC_41ebb8, %struct.Memory* %loadMem2_41ebb8)
  store %struct.Memory* %call2_41ebb8, %struct.Memory** %MEMORY

  ; Code: callq .free_ecache	 RIP: 41ebbd	 Bytes: 5
  %loadMem1_41ebbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ebbd = call %struct.Memory* @routine_callq_.free_ecache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ebbd, i64 -114461, i64 5, i64 5)
  store %struct.Memory* %call1_41ebbd, %struct.Memory** %MEMORY

  %loadMem2_41ebbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ebbd = load i64, i64* %3
  %call2_41ebbd = call %struct.Memory* @sub_402ca0.free_ecache(%struct.State* %0, i64  %loadPC_41ebbd, %struct.Memory* %loadMem2_41ebbd)
  store %struct.Memory* %call2_41ebbd, %struct.Memory** %MEMORY

  ; Code: xorl %edi, %edi	 RIP: 41ebc2	 Bytes: 2
  %loadMem_41ebc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebc2 = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebc2)
  store %struct.Memory* %call_41ebc2, %struct.Memory** %MEMORY

  ; Code: callq .exit_plt	 RIP: 41ebc4	 Bytes: 5
  %loadMem1_41ebc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ebc4 = call %struct.Memory* @routine_callq_.exit_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ebc4, i64 -122340, i64 5, i64 5)
  store %struct.Memory* %call1_41ebc4, %struct.Memory** %MEMORY

  %loadMem2_41ebc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ebc4 = load i64, i64* %3
  %call2_41ebc4 = call %struct.Memory* @ext_exit(%struct.State* %0, i64  %loadPC_41ebc4, %struct.Memory* %loadMem2_41ebc4)
  store %struct.Memory* %call2_41ebc4, %struct.Memory** %MEMORY

  ; Code: .L_41ebc9:	 RIP: 41ebc9	 Bytes: 0
  br label %block_.L_41ebc9
block_.L_41ebc9:

  ; Code: jmpq .L_4204a2	 RIP: 41ebc9	 Bytes: 5
  %loadMem_41ebc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebc9 = call %struct.Memory* @routine_jmpq_.L_4204a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebc9, i64 6361, i64 5)
  store %struct.Memory* %call_41ebc9, %struct.Memory** %MEMORY

  br label %block_.L_4204a2

  ; Code: .L_41ebce:	 RIP: 41ebce	 Bytes: 0
block_.L_41ebce:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ebce	 Bytes: 7
  %loadMem_41ebce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebce = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebce)
  store %struct.Memory* %call_41ebce, %struct.Memory** %MEMORY

  ; Code: movl $0x42937e, %eax	 RIP: 41ebd5	 Bytes: 5
  %loadMem_41ebd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebd5 = call %struct.Memory* @routine_movl__0x42937e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebd5)
  store %struct.Memory* %call_41ebd5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41ebda	 Bytes: 2
  %loadMem_41ebda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebda = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebda)
  store %struct.Memory* %call_41ebda, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41ebdc	 Bytes: 5
  %loadMem1_41ebdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ebdc = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ebdc, i64 -122572, i64 5, i64 5)
  store %struct.Memory* %call1_41ebdc, %struct.Memory** %MEMORY

  %loadMem2_41ebdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ebdc = load i64, i64* %3
  %call2_41ebdc = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41ebdc, %struct.Memory* %loadMem2_41ebdc)
  store %struct.Memory* %call2_41ebdc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ebe1	 Bytes: 3
  %loadMem_41ebe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebe1 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebe1)
  store %struct.Memory* %call_41ebe1, %struct.Memory** %MEMORY

  ; Code: je .L_41ec06	 RIP: 41ebe4	 Bytes: 6
  %loadMem_41ebe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebe4 = call %struct.Memory* @routine_je_.L_41ec06(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebe4, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_41ebe4, %struct.Memory** %MEMORY

  %loadBr_41ebe4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ebe4 = icmp eq i8 %loadBr_41ebe4, 1
  br i1 %cmpBr_41ebe4, label %block_.L_41ec06, label %block_41ebea

block_41ebea:
  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ebea	 Bytes: 7
  %loadMem_41ebea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebea = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebea)
  store %struct.Memory* %call_41ebea, %struct.Memory** %MEMORY

  ; Code: movl $0x429aeb, %eax	 RIP: 41ebf1	 Bytes: 5
  %loadMem_41ebf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebf1 = call %struct.Memory* @routine_movl__0x429aeb___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebf1)
  store %struct.Memory* %call_41ebf1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41ebf6	 Bytes: 2
  %loadMem_41ebf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebf6 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebf6)
  store %struct.Memory* %call_41ebf6, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41ebf8	 Bytes: 5
  %loadMem1_41ebf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ebf8 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ebf8, i64 -122600, i64 5, i64 5)
  store %struct.Memory* %call1_41ebf8, %struct.Memory** %MEMORY

  %loadMem2_41ebf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ebf8 = load i64, i64* %3
  %call2_41ebf8 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41ebf8, %struct.Memory* %loadMem2_41ebf8)
  store %struct.Memory* %call2_41ebf8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ebfd	 Bytes: 3
  %loadMem_41ebfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ebfd = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ebfd)
  store %struct.Memory* %call_41ebfd, %struct.Memory** %MEMORY

  ; Code: jne .L_41ec17	 RIP: 41ec00	 Bytes: 6
  %loadMem_41ec00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec00 = call %struct.Memory* @routine_jne_.L_41ec17(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec00, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_41ec00, %struct.Memory** %MEMORY

  %loadBr_41ec00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ec00 = icmp eq i8 %loadBr_41ec00, 1
  br i1 %cmpBr_41ec00, label %block_.L_41ec17, label %block_.L_41ec06

  ; Code: .L_41ec06:	 RIP: 41ec06	 Bytes: 0
block_.L_41ec06:

  ; Code: leaq -0x35c(%rbp), %rdi	 RIP: 41ec06	 Bytes: 7
  %loadMem_41ec06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec06 = call %struct.Memory* @routine_leaq_MINUS0x35c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec06)
  store %struct.Memory* %call_41ec06, %struct.Memory** %MEMORY

  ; Code: callq .toggle_bool	 RIP: 41ec0d	 Bytes: 5
  %loadMem1_41ec0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ec0d = call %struct.Memory* @routine_callq_.toggle_bool(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ec0d, i64 22003, i64 5, i64 5)
  store %struct.Memory* %call1_41ec0d, %struct.Memory** %MEMORY

  %loadMem2_41ec0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ec0d = load i64, i64* %3
  %call2_41ec0d = call %struct.Memory* @sub_424200.toggle_bool(%struct.State* %0, i64  %loadPC_41ec0d, %struct.Memory* %loadMem2_41ec0d)
  store %struct.Memory* %call2_41ec0d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42049d	 RIP: 41ec12	 Bytes: 5
  %loadMem_41ec12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec12 = call %struct.Memory* @routine_jmpq_.L_42049d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec12, i64 6283, i64 5)
  store %struct.Memory* %call_41ec12, %struct.Memory** %MEMORY

  br label %block_.L_42049d

  ; Code: .L_41ec17:	 RIP: 41ec17	 Bytes: 0
block_.L_41ec17:

  ; Code: movq $0x429386, %rsi	 RIP: 41ec17	 Bytes: 10
  %loadMem_41ec17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec17 = call %struct.Memory* @routine_movq__0x429386___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec17)
  store %struct.Memory* %call_41ec17, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41ec21	 Bytes: 5
  %loadMem_41ec21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec21 = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec21)
  store %struct.Memory* %call_41ec21, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41ec26	 Bytes: 2
  %loadMem_41ec26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec26 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec26)
  store %struct.Memory* %call_41ec26, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ec28	 Bytes: 7
  %loadMem_41ec28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec28 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec28)
  store %struct.Memory* %call_41ec28, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41ec2f	 Bytes: 5
  %loadMem1_41ec2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ec2f = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ec2f, i64 -122831, i64 5, i64 5)
  store %struct.Memory* %call1_41ec2f, %struct.Memory** %MEMORY

  %loadMem2_41ec2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ec2f = load i64, i64* %3
  %call2_41ec2f = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41ec2f, %struct.Memory* %loadMem2_41ec2f)
  store %struct.Memory* %call2_41ec2f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ec34	 Bytes: 3
  %loadMem_41ec34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec34 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec34)
  store %struct.Memory* %call_41ec34, %struct.Memory** %MEMORY

  ; Code: jne .L_41ecf6	 RIP: 41ec37	 Bytes: 6
  %loadMem_41ec37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec37 = call %struct.Memory* @routine_jne_.L_41ecf6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec37, i8* %BRANCH_TAKEN, i64 191, i64 6, i64 6)
  store %struct.Memory* %call_41ec37, %struct.Memory** %MEMORY

  %loadBr_41ec37 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ec37 = icmp eq i8 %loadBr_41ec37, 1
  br i1 %cmpBr_41ec37, label %block_.L_41ecf6, label %block_41ec3d

block_41ec3d:
  ; Code: movq $0x429aea, %rsi	 RIP: 41ec3d	 Bytes: 10
  %loadMem_41ec3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec3d = call %struct.Memory* @routine_movq__0x429aea___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec3d)
  store %struct.Memory* %call_41ec3d, %struct.Memory** %MEMORY

  ; Code: leaq -0x354(%rbp), %rdx	 RIP: 41ec47	 Bytes: 7
  %loadMem_41ec47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec47 = call %struct.Memory* @routine_leaq_MINUS0x354__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec47)
  store %struct.Memory* %call_41ec47, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41ec4e	 Bytes: 7
  %loadMem_41ec4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec4e = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec4e)
  store %struct.Memory* %call_41ec4e, %struct.Memory** %MEMORY

  ; Code: addq $0x6, %rax	 RIP: 41ec55	 Bytes: 4
  %loadMem_41ec55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec55 = call %struct.Memory* @routine_addq__0x6___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec55)
  store %struct.Memory* %call_41ec55, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41ec59	 Bytes: 3
  %loadMem_41ec59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec59 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec59)
  store %struct.Memory* %call_41ec59, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ec5c	 Bytes: 2
  %loadMem_41ec5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec5c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec5c)
  store %struct.Memory* %call_41ec5c, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41ec5e	 Bytes: 5
  %loadMem1_41ec5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ec5e = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ec5e, i64 -122590, i64 5, i64 5)
  store %struct.Memory* %call1_41ec5e, %struct.Memory** %MEMORY

  %loadMem2_41ec5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ec5e = load i64, i64* %3
  %call2_41ec5e = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41ec5e, %struct.Memory* %loadMem2_41ec5e)
  store %struct.Memory* %call2_41ec5e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x633b4c	 RIP: 41ec63	 Bytes: 11
  %loadMem_41ec63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec63 = call %struct.Memory* @routine_movl__0x0__0x633b4c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec63)
  store %struct.Memory* %call_41ec63, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6264(%rbp)	 RIP: 41ec6e	 Bytes: 6
  %loadMem_41ec6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec6e = call %struct.Memory* @routine_movl__eax__MINUS0x6264__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec6e)
  store %struct.Memory* %call_41ec6e, %struct.Memory** %MEMORY

  ; Code: callq .rtime	 RIP: 41ec74	 Bytes: 5
  %loadMem1_41ec74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ec74 = call %struct.Memory* @routine_callq_.rtime(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ec74, i64 19180, i64 5, i64 5)
  store %struct.Memory* %call1_41ec74, %struct.Memory** %MEMORY

  %loadMem2_41ec74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ec74 = load i64, i64* %3
  %call2_41ec74 = call %struct.Memory* @sub_423760.rtime(%struct.State* %0, i64  %loadPC_41ec74, %struct.Memory* %loadMem2_41ec74)
  store %struct.Memory* %call2_41ec74, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x6140(%rbp)	 RIP: 41ec79	 Bytes: 7
  %loadMem_41ec79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec79 = call %struct.Memory* @routine_movq__rax__MINUS0x6140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec79)
  store %struct.Memory* %call_41ec79, %struct.Memory** %MEMORY

  ; Code: movl -0x354(%rbp), %edi	 RIP: 41ec80	 Bytes: 6
  %loadMem_41ec80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec80 = call %struct.Memory* @routine_movl_MINUS0x354__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec80)
  store %struct.Memory* %call_41ec80, %struct.Memory** %MEMORY

  ; Code: callq .perft	 RIP: 41ec86	 Bytes: 5
  %loadMem1_41ec86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ec86 = call %struct.Memory* @routine_callq_.perft(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ec86, i64 -32614, i64 5, i64 5)
  store %struct.Memory* %call1_41ec86, %struct.Memory** %MEMORY

  %loadMem2_41ec86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ec86 = load i64, i64* %3
  %call2_41ec86 = call %struct.Memory* @sub_416d20.perft(%struct.State* %0, i64  %loadPC_41ec86, %struct.Memory* %loadMem2_41ec86)
  store %struct.Memory* %call2_41ec86, %struct.Memory** %MEMORY

  ; Code: movq $0x42938c, %rdi	 RIP: 41ec8b	 Bytes: 10
  %loadMem_41ec8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec8b = call %struct.Memory* @routine_movq__0x42938c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec8b)
  store %struct.Memory* %call_41ec8b, %struct.Memory** %MEMORY

  ; Code: movl -0x354(%rbp), %esi	 RIP: 41ec95	 Bytes: 6
  %loadMem_41ec95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec95 = call %struct.Memory* @routine_movl_MINUS0x354__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec95)
  store %struct.Memory* %call_41ec95, %struct.Memory** %MEMORY

  ; Code: movl 0x633b4c, %edx	 RIP: 41ec9b	 Bytes: 7
  %loadMem_41ec9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ec9b = call %struct.Memory* @routine_movl_0x633b4c___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ec9b)
  store %struct.Memory* %call_41ec9b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41eca2	 Bytes: 2
  %loadMem_41eca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eca2 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eca2)
  store %struct.Memory* %call_41eca2, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41eca4	 Bytes: 5
  %loadMem1_41eca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eca4 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eca4, i64 -122868, i64 5, i64 5)
  store %struct.Memory* %call1_41eca4, %struct.Memory** %MEMORY

  %loadMem2_41eca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eca4 = load i64, i64* %3
  %call2_41eca4 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41eca4, %struct.Memory* %loadMem2_41eca4)
  store %struct.Memory* %call2_41eca4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6268(%rbp)	 RIP: 41eca9	 Bytes: 6
  %loadMem_41eca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eca9 = call %struct.Memory* @routine_movl__eax__MINUS0x6268__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eca9)
  store %struct.Memory* %call_41eca9, %struct.Memory** %MEMORY

  ; Code: callq .rtime	 RIP: 41ecaf	 Bytes: 5
  %loadMem1_41ecaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ecaf = call %struct.Memory* @routine_callq_.rtime(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ecaf, i64 19121, i64 5, i64 5)
  store %struct.Memory* %call1_41ecaf, %struct.Memory** %MEMORY

  %loadMem2_41ecaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ecaf = load i64, i64* %3
  %call2_41ecaf = call %struct.Memory* @sub_423760.rtime(%struct.State* %0, i64  %loadPC_41ecaf, %struct.Memory* %loadMem2_41ecaf)
  store %struct.Memory* %call2_41ecaf, %struct.Memory** %MEMORY

  ; Code: movq -0x6140(%rbp), %rsi	 RIP: 41ecb4	 Bytes: 7
  %loadMem_41ecb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecb4 = call %struct.Memory* @routine_movq_MINUS0x6140__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecb4)
  store %struct.Memory* %call_41ecb4, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41ecbb	 Bytes: 3
  %loadMem_41ecbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecbb = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecbb)
  store %struct.Memory* %call_41ecbb, %struct.Memory** %MEMORY

  ; Code: callq .rdifftime	 RIP: 41ecbe	 Bytes: 5
  %loadMem1_41ecbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ecbe = call %struct.Memory* @routine_callq_.rdifftime(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ecbe, i64 19122, i64 5, i64 5)
  store %struct.Memory* %call1_41ecbe, %struct.Memory** %MEMORY

  %loadMem2_41ecbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ecbe = load i64, i64* %3
  %call2_41ecbe = call %struct.Memory* @sub_423770.rdifftime(%struct.State* %0, i64  %loadPC_41ecbe, %struct.Memory* %loadMem2_41ecbe)
  store %struct.Memory* %call2_41ecbe, %struct.Memory** %MEMORY

  ; Code: movq $0x4293a8, %rdi	 RIP: 41ecc3	 Bytes: 10
  %loadMem_41ecc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecc3 = call %struct.Memory* @routine_movq__0x4293a8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecc3)
  store %struct.Memory* %call_41ecc3, %struct.Memory** %MEMORY

  ; Code: movsd 0x96d3(%rip), %xmm0	 RIP: 41eccd	 Bytes: 8
  %loadMem_41eccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eccd = call %struct.Memory* @routine_movsd_0x96d3__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eccd)
  store %struct.Memory* %call_41eccd, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl %eax, %xmm1	 RIP: 41ecd5	 Bytes: 4
  %loadMem_41ecd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecd5 = call %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecd5)
  store %struct.Memory* %call_41ecd5, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm1, %xmm1	 RIP: 41ecd9	 Bytes: 4
  %loadMem_41ecd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecd9 = call %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecd9)
  store %struct.Memory* %call_41ecd9, %struct.Memory** %MEMORY

  ; Code: divsd %xmm0, %xmm1	 RIP: 41ecdd	 Bytes: 4
  %loadMem_41ecdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecdd = call %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecdd)
  store %struct.Memory* %call_41ecdd, %struct.Memory** %MEMORY

  ; Code: movaps %xmm1, %xmm0	 RIP: 41ece1	 Bytes: 3
  %loadMem_41ece1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ece1 = call %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ece1)
  store %struct.Memory* %call_41ece1, %struct.Memory** %MEMORY

  ; Code: movb $0x1, %al	 RIP: 41ece4	 Bytes: 2
  %loadMem_41ece4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ece4 = call %struct.Memory* @routine_movb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ece4)
  store %struct.Memory* %call_41ece4, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41ece6	 Bytes: 5
  %loadMem1_41ece6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ece6 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ece6, i64 -122934, i64 5, i64 5)
  store %struct.Memory* %call1_41ece6, %struct.Memory** %MEMORY

  %loadMem2_41ece6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ece6 = load i64, i64* %3
  %call2_41ece6 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41ece6, %struct.Memory* %loadMem2_41ece6)
  store %struct.Memory* %call2_41ece6, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x626c(%rbp)	 RIP: 41eceb	 Bytes: 6
  %loadMem_41eceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eceb = call %struct.Memory* @routine_movl__eax__MINUS0x626c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eceb)
  store %struct.Memory* %call_41eceb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420498	 RIP: 41ecf1	 Bytes: 5
  %loadMem_41ecf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecf1 = call %struct.Memory* @routine_jmpq_.L_420498(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecf1, i64 6055, i64 5)
  store %struct.Memory* %call_41ecf1, %struct.Memory** %MEMORY

  br label %block_.L_420498

  ; Code: .L_41ecf6:	 RIP: 41ecf6	 Bytes: 0
block_.L_41ecf6:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ecf6	 Bytes: 7
  %loadMem_41ecf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecf6 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecf6)
  store %struct.Memory* %call_41ecf6, %struct.Memory** %MEMORY

  ; Code: movl $0x4293b5, %eax	 RIP: 41ecfd	 Bytes: 5
  %loadMem_41ecfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ecfd = call %struct.Memory* @routine_movl__0x4293b5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ecfd)
  store %struct.Memory* %call_41ecfd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41ed02	 Bytes: 2
  %loadMem_41ed02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed02 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed02)
  store %struct.Memory* %call_41ed02, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41ed04	 Bytes: 5
  %loadMem1_41ed04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed04 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed04, i64 -122868, i64 5, i64 5)
  store %struct.Memory* %call1_41ed04, %struct.Memory** %MEMORY

  %loadMem2_41ed04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed04 = load i64, i64* %3
  %call2_41ed04 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41ed04, %struct.Memory* %loadMem2_41ed04)
  store %struct.Memory* %call2_41ed04, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ed09	 Bytes: 3
  %loadMem_41ed09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed09 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed09)
  store %struct.Memory* %call_41ed09, %struct.Memory** %MEMORY

  ; Code: jne .L_41ee89	 RIP: 41ed0c	 Bytes: 6
  %loadMem_41ed0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed0c = call %struct.Memory* @routine_jne_.L_41ee89(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed0c, i8* %BRANCH_TAKEN, i64 381, i64 6, i64 6)
  store %struct.Memory* %call_41ed0c, %struct.Memory** %MEMORY

  %loadBr_41ed0c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ed0c = icmp eq i8 %loadBr_41ed0c, 1
  br i1 %cmpBr_41ed0c, label %block_.L_41ee89, label %block_41ed12

block_41ed12:
  ; Code: cmpl $0x0, 0x8a2a04	 RIP: 41ed12	 Bytes: 8
  %loadMem_41ed12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed12 = call %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed12)
  store %struct.Memory* %call_41ed12, %struct.Memory** %MEMORY

  ; Code: je .L_41ed41	 RIP: 41ed1a	 Bytes: 6
  %loadMem_41ed1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed1a = call %struct.Memory* @routine_je_.L_41ed41(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed1a, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_41ed1a, %struct.Memory** %MEMORY

  %loadBr_41ed1a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ed1a = icmp eq i8 %loadBr_41ed1a, 1
  br i1 %cmpBr_41ed1a, label %block_.L_41ed41, label %block_41ed20

block_41ed20:
  ; Code: movq $0x4293b9, %rdi	 RIP: 41ed20	 Bytes: 10
  %loadMem_41ed20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed20 = call %struct.Memory* @routine_movq__0x4293b9___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed20)
  store %struct.Memory* %call_41ed20, %struct.Memory** %MEMORY

  ; Code: movq $0x84ad30, %rsi	 RIP: 41ed2a	 Bytes: 10
  %loadMem_41ed2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed2a = call %struct.Memory* @routine_movq__0x84ad30___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed2a)
  store %struct.Memory* %call_41ed2a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ed34	 Bytes: 2
  %loadMem_41ed34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed34 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed34)
  store %struct.Memory* %call_41ed34, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41ed36	 Bytes: 5
  %loadMem1_41ed36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed36 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed36, i64 -123014, i64 5, i64 5)
  store %struct.Memory* %call1_41ed36, %struct.Memory** %MEMORY

  %loadMem2_41ed36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed36 = load i64, i64* %3
  %call2_41ed36 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41ed36, %struct.Memory* %loadMem2_41ed36)
  store %struct.Memory* %call2_41ed36, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6270(%rbp)	 RIP: 41ed3b	 Bytes: 6
  %loadMem_41ed3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed3b = call %struct.Memory* @routine_movl__eax__MINUS0x6270__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed3b)
  store %struct.Memory* %call_41ed3b, %struct.Memory** %MEMORY

  ; Code: .L_41ed41:	 RIP: 41ed41	 Bytes: 0
  br label %block_.L_41ed41
block_.L_41ed41:

  ; Code: cmpl $0x0, 0x62e514	 RIP: 41ed41	 Bytes: 8
  %loadMem_41ed41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed41 = call %struct.Memory* @routine_cmpl__0x0__0x62e514(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed41)
  store %struct.Memory* %call_41ed41, %struct.Memory** %MEMORY

  ; Code: jne .L_41ee74	 RIP: 41ed49	 Bytes: 6
  %loadMem_41ed49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed49 = call %struct.Memory* @routine_jne_.L_41ee74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed49, i8* %BRANCH_TAKEN, i64 299, i64 6, i64 6)
  store %struct.Memory* %call_41ed49, %struct.Memory** %MEMORY

  %loadBr_41ed49 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ed49 = icmp eq i8 %loadBr_41ed49, 1
  br i1 %cmpBr_41ed49, label %block_.L_41ee74, label %block_41ed4f

block_41ed4f:
  ; Code: movq $0x62dab0, %rax	 RIP: 41ed4f	 Bytes: 10
  %loadMem_41ed4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed4f = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed4f)
  store %struct.Memory* %call_41ed4f, %struct.Memory** %MEMORY

  ; Code: movq $0x62c130, %rcx	 RIP: 41ed59	 Bytes: 10
  %loadMem_41ed59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed59 = call %struct.Memory* @routine_movq__0x62c130___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed59)
  store %struct.Memory* %call_41ed59, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41ed63	 Bytes: 5
  %loadMem_41ed63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed63 = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed63)
  store %struct.Memory* %call_41ed63, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41ed68	 Bytes: 3
  %loadMem_41ed68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed68 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed68)
  store %struct.Memory* %call_41ed68, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41ed6b	 Bytes: 3
  %loadMem_41ed6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed6b = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed6b)
  store %struct.Memory* %call_41ed6b, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41ed6e	 Bytes: 5
  %loadMem1_41ed6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed6e = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed6e, i64 -122926, i64 5, i64 5)
  store %struct.Memory* %call1_41ed6e, %struct.Memory** %MEMORY

  %loadMem2_41ed6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed6e = load i64, i64* %3
  %call2_41ed6e = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41ed6e, %struct.Memory* %loadMem2_41ed6e)
  store %struct.Memory* %call2_41ed6e, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x85f154	 RIP: 41ed73	 Bytes: 11
  %loadMem_41ed73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed73 = call %struct.Memory* @routine_movl__0x2__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed73)
  store %struct.Memory* %call_41ed73, %struct.Memory** %MEMORY

  ; Code: callq .init_game	 RIP: 41ed7e	 Bytes: 5
  %loadMem1_41ed7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed7e = call %struct.Memory* @routine_callq_.init_game(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed7e, i64 14626, i64 5, i64 5)
  store %struct.Memory* %call1_41ed7e, %struct.Memory** %MEMORY

  %loadMem2_41ed7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed7e = load i64, i64* %3
  %call2_41ed7e = call %struct.Memory* @sub_4226a0.init_game(%struct.State* %0, i64  %loadPC_41ed7e, %struct.Memory* %loadMem2_41ed7e)
  store %struct.Memory* %call2_41ed7e, %struct.Memory** %MEMORY

  ; Code: callq .initialize_hash	 RIP: 41ed83	 Bytes: 5
  %loadMem1_41ed83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed83 = call %struct.Memory* @routine_callq_.initialize_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed83, i64 6269, i64 5, i64 5)
  store %struct.Memory* %call1_41ed83, %struct.Memory** %MEMORY

  %loadMem2_41ed83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed83 = load i64, i64* %3
  %call2_41ed83 = call %struct.Memory* @sub_420600.initialize_hash(%struct.State* %0, i64  %loadPC_41ed83, %struct.Memory* %loadMem2_41ed83)
  store %struct.Memory* %call2_41ed83, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x6130(%rbp)	 RIP: 41ed88	 Bytes: 7
  %loadMem_41ed88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed88 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed88)
  store %struct.Memory* %call_41ed88, %struct.Memory** %MEMORY

  ; Code: jne .L_41ed9f	 RIP: 41ed8f	 Bytes: 6
  %loadMem_41ed8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed8f = call %struct.Memory* @routine_jne_.L_41ed9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed8f, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_41ed8f, %struct.Memory** %MEMORY

  %loadBr_41ed8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ed8f = icmp eq i8 %loadBr_41ed8f, 1
  br i1 %cmpBr_41ed8f, label %block_.L_41ed9f, label %block_41ed95

block_41ed95:
  ; Code: callq .clear_tt	 RIP: 41ed95	 Bytes: 5
  %loadMem1_41ed95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed95 = call %struct.Memory* @routine_callq_.clear_tt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed95, i64 5931, i64 5, i64 5)
  store %struct.Memory* %call1_41ed95, %struct.Memory** %MEMORY

  %loadMem2_41ed95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed95 = load i64, i64* %3
  %call2_41ed95 = call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64  %loadPC_41ed95, %struct.Memory* %loadMem2_41ed95)
  store %struct.Memory* %call2_41ed95, %struct.Memory** %MEMORY

  ; Code: callq .reset_ecache	 RIP: 41ed9a	 Bytes: 5
  %loadMem1_41ed9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ed9a = call %struct.Memory* @routine_callq_.reset_ecache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ed9a, i64 -115082, i64 5, i64 5)
  store %struct.Memory* %call1_41ed9a, %struct.Memory** %MEMORY

  %loadMem2_41ed9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ed9a = load i64, i64* %3
  %call2_41ed9a = call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* %0, i64  %loadPC_41ed9a, %struct.Memory* %loadMem2_41ed9a)
  store %struct.Memory* %call2_41ed9a, %struct.Memory** %MEMORY

  ; Code: .L_41ed9f:	 RIP: 41ed9f	 Bytes: 0
  br label %block_.L_41ed9f
block_.L_41ed9f:

  ; Code: movl $0x1, %edi	 RIP: 41ed9f	 Bytes: 5
  %loadMem_41ed9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ed9f = call %struct.Memory* @routine_movl__0x1___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ed9f)
  store %struct.Memory* %call_41ed9f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x358(%rbp)	 RIP: 41eda4	 Bytes: 10
  %loadMem_41eda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eda4 = call %struct.Memory* @routine_movl__0x0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eda4)
  store %struct.Memory* %call_41eda4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd90	 RIP: 41edae	 Bytes: 11
  %loadMem_41edae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edae = call %struct.Memory* @routine_movl__0x0__0x86bd90(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edae)
  store %struct.Memory* %call_41edae, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886a60	 RIP: 41edb9	 Bytes: 11
  %loadMem_41edb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edb9 = call %struct.Memory* @routine_movl__0x0__0x886a60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edb9)
  store %struct.Memory* %call_41edb9, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd74	 RIP: 41edc4	 Bytes: 11
  %loadMem_41edc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edc4 = call %struct.Memory* @routine_movl__0x0__0x86bd74(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edc4)
  store %struct.Memory* %call_41edc4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd78	 RIP: 41edcf	 Bytes: 11
  %loadMem_41edcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edcf = call %struct.Memory* @routine_movl__0x0__0x86bd78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edcf)
  store %struct.Memory* %call_41edcf, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x880654	 RIP: 41edda	 Bytes: 11
  %loadMem_41edda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edda = call %struct.Memory* @routine_movl__0x0__0x880654(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edda)
  store %struct.Memory* %call_41edda, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b80	 RIP: 41ede5	 Bytes: 11
  %loadMem_41ede5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ede5 = call %struct.Memory* @routine_movl__0x0__0x886b80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ede5)
  store %struct.Memory* %call_41ede5, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x633b54	 RIP: 41edf0	 Bytes: 11
  %loadMem_41edf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edf0 = call %struct.Memory* @routine_movl__0x0__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edf0)
  store %struct.Memory* %call_41edf0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b84	 RIP: 41edfb	 Bytes: 11
  %loadMem_41edfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41edfb = call %struct.Memory* @routine_movl__0x0__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41edfb)
  store %struct.Memory* %call_41edfb, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea38	 RIP: 41ee06	 Bytes: 11
  %loadMem_41ee06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee06 = call %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee06)
  store %struct.Memory* %call_41ee06, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rax	 RIP: 41ee11	 Bytes: 8
  %loadMem_41ee11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee11 = call %struct.Memory* @routine_movslq_0x62ea38___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee11)
  store %struct.Memory* %call_41ee11, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x84a3d0(,%rax,4)	 RIP: 41ee19	 Bytes: 11
  %loadMem_41ee19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee19 = call %struct.Memory* @routine_movl__0x0__0x84a3d0___rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee19)
  store %struct.Memory* %call_41ee19, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886be4	 RIP: 41ee24	 Bytes: 11
  %loadMem_41ee24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee24 = call %struct.Memory* @routine_movl__0x0__0x886be4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee24)
  store %struct.Memory* %call_41ee24, %struct.Memory** %MEMORY

  ; Code: movl $0x7d0, 0x886bc4	 RIP: 41ee2f	 Bytes: 11
  %loadMem_41ee2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee2f = call %struct.Memory* @routine_movl__0x7d0__0x886bc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee2f)
  store %struct.Memory* %call_41ee2f, %struct.Memory** %MEMORY

  ; Code: movl $0x7d0, 0x880b14	 RIP: 41ee3a	 Bytes: 11
  %loadMem_41ee3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee3a = call %struct.Memory* @routine_movl__0x7d0__0x880b14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee3a)
  store %struct.Memory* %call_41ee3a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd60	 RIP: 41ee45	 Bytes: 11
  %loadMem_41ee45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee45 = call %struct.Memory* @routine_movl__0x0__0x86bd60(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee45)
  store %struct.Memory* %call_41ee45, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x62e9e4	 RIP: 41ee50	 Bytes: 11
  %loadMem_41ee50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee50 = call %struct.Memory* @routine_movl__0x1__0x62e9e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee50)
  store %struct.Memory* %call_41ee50, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6134(%rbp)	 RIP: 41ee5b	 Bytes: 10
  %loadMem_41ee5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee5b = call %struct.Memory* @routine_movl__0x0__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee5b)
  store %struct.Memory* %call_41ee5b, %struct.Memory** %MEMORY

  ; Code: callq .CheckBadFlow	 RIP: 41ee65	 Bytes: 5
  %loadMem1_41ee65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ee65 = call %struct.Memory* @routine_callq_.CheckBadFlow(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ee65, i64 -54757, i64 5, i64 5)
  store %struct.Memory* %call1_41ee65, %struct.Memory** %MEMORY

  %loadMem2_41ee65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ee65 = load i64, i64* %3
  %call2_41ee65 = call %struct.Memory* @sub_411880.CheckBadFlow(%struct.State* %0, i64  %loadPC_41ee65, %struct.Memory* %loadMem2_41ee65)
  store %struct.Memory* %call2_41ee65, %struct.Memory** %MEMORY

  ; Code: callq .ResetHandValue	 RIP: 41ee6a	 Bytes: 5
  %loadMem1_41ee6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ee6a = call %struct.Memory* @routine_callq_.ResetHandValue(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ee6a, i64 -60682, i64 5, i64 5)
  store %struct.Memory* %call1_41ee6a, %struct.Memory** %MEMORY

  %loadMem2_41ee6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ee6a = load i64, i64* %3
  %call2_41ee6a = call %struct.Memory* @sub_410160.ResetHandValue(%struct.State* %0, i64  %loadPC_41ee6a, %struct.Memory* %loadMem2_41ee6a)
  store %struct.Memory* %call2_41ee6a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41ee84	 RIP: 41ee6f	 Bytes: 5
  %loadMem_41ee6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee6f = call %struct.Memory* @routine_jmpq_.L_41ee84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee6f, i64 21, i64 5)
  store %struct.Memory* %call_41ee6f, %struct.Memory** %MEMORY

  br label %block_.L_41ee84

  ; Code: .L_41ee74:	 RIP: 41ee74	 Bytes: 0
block_.L_41ee74:

  ; Code: callq .init_game	 RIP: 41ee74	 Bytes: 5
  %loadMem1_41ee74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ee74 = call %struct.Memory* @routine_callq_.init_game(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ee74, i64 14380, i64 5, i64 5)
  store %struct.Memory* %call1_41ee74, %struct.Memory** %MEMORY

  %loadMem2_41ee74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ee74 = load i64, i64* %3
  %call2_41ee74 = call %struct.Memory* @sub_4226a0.init_game(%struct.State* %0, i64  %loadPC_41ee74, %struct.Memory* %loadMem2_41ee74)
  store %struct.Memory* %call2_41ee74, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea38	 RIP: 41ee79	 Bytes: 11
  %loadMem_41ee79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee79 = call %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee79)
  store %struct.Memory* %call_41ee79, %struct.Memory** %MEMORY

  ; Code: .L_41ee84:	 RIP: 41ee84	 Bytes: 0
  br label %block_.L_41ee84
block_.L_41ee84:

  ; Code: jmpq .L_420493	 RIP: 41ee84	 Bytes: 5
  %loadMem_41ee84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee84 = call %struct.Memory* @routine_jmpq_.L_420493(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee84, i64 5647, i64 5)
  store %struct.Memory* %call_41ee84, %struct.Memory** %MEMORY

  br label %block_.L_420493

  ; Code: .L_41ee89:	 RIP: 41ee89	 Bytes: 0
block_.L_41ee89:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ee89	 Bytes: 7
  %loadMem_41ee89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee89 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee89)
  store %struct.Memory* %call_41ee89, %struct.Memory** %MEMORY

  ; Code: movl $0x4293e1, %eax	 RIP: 41ee90	 Bytes: 5
  %loadMem_41ee90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee90 = call %struct.Memory* @routine_movl__0x4293e1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee90)
  store %struct.Memory* %call_41ee90, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41ee95	 Bytes: 2
  %loadMem_41ee95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee95 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee95)
  store %struct.Memory* %call_41ee95, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41ee97	 Bytes: 5
  %loadMem1_41ee97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ee97 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ee97, i64 -123271, i64 5, i64 5)
  store %struct.Memory* %call1_41ee97, %struct.Memory** %MEMORY

  %loadMem2_41ee97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ee97 = load i64, i64* %3
  %call2_41ee97 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41ee97, %struct.Memory* %loadMem2_41ee97)
  store %struct.Memory* %call2_41ee97, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ee9c	 Bytes: 3
  %loadMem_41ee9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee9c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee9c)
  store %struct.Memory* %call_41ee9c, %struct.Memory** %MEMORY

  ; Code: jne .L_41ef0c	 RIP: 41ee9f	 Bytes: 6
  %loadMem_41ee9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ee9f = call %struct.Memory* @routine_jne_.L_41ef0c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ee9f, i8* %BRANCH_TAKEN, i64 109, i64 6, i64 6)
  store %struct.Memory* %call_41ee9f, %struct.Memory** %MEMORY

  %loadBr_41ee9f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ee9f = icmp eq i8 %loadBr_41ee9f, 1
  br i1 %cmpBr_41ee9f, label %block_.L_41ef0c, label %block_41eea5

block_41eea5:
  ; Code: leaq -0x35c(%rbp), %rdi	 RIP: 41eea5	 Bytes: 7
  %loadMem_41eea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eea5 = call %struct.Memory* @routine_leaq_MINUS0x35c__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eea5)
  store %struct.Memory* %call_41eea5, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x8a2a04	 RIP: 41eeac	 Bytes: 11
  %loadMem_41eeac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eeac = call %struct.Memory* @routine_movl__0x1__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eeac)
  store %struct.Memory* %call_41eeac, %struct.Memory** %MEMORY

  ; Code: callq .toggle_bool	 RIP: 41eeb7	 Bytes: 5
  %loadMem1_41eeb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eeb7 = call %struct.Memory* @routine_callq_.toggle_bool(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eeb7, i64 21321, i64 5, i64 5)
  store %struct.Memory* %call1_41eeb7, %struct.Memory** %MEMORY

  %loadMem2_41eeb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eeb7 = load i64, i64* %3
  %call2_41eeb7 = call %struct.Memory* @sub_424200.toggle_bool(%struct.State* %0, i64  %loadPC_41eeb7, %struct.Memory* %loadMem2_41eeb7)
  store %struct.Memory* %call2_41eeb7, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %edi	 RIP: 41eebc	 Bytes: 5
  %loadMem_41eebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eebc = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eebc)
  store %struct.Memory* %call_41eebc, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41eec1	 Bytes: 5
  %loadMem_41eec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eec1 = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eec1)
  store %struct.Memory* %call_41eec1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41eec6	 Bytes: 2
  %loadMem_41eec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eec6 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eec6)
  store %struct.Memory* %call_41eec6, %struct.Memory** %MEMORY

  ; Code: callq .signal_plt	 RIP: 41eec8	 Bytes: 5
  %loadMem1_41eec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eec8 = call %struct.Memory* @routine_callq_.signal_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eec8, i64 -123304, i64 5, i64 5)
  store %struct.Memory* %call1_41eec8, %struct.Memory** %MEMORY

  %loadMem2_41eec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eec8 = load i64, i64* %3
  %call2_41eec8 = call %struct.Memory* @sub_400d20.signal_plt(%struct.State* %0, i64  %loadPC_41eec8, %struct.Memory* %loadMem2_41eec8)
  store %struct.Memory* %call2_41eec8, %struct.Memory** %MEMORY

  ; Code: movq $0x429bef, %rdi	 RIP: 41eecd	 Bytes: 10
  %loadMem_41eecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eecd = call %struct.Memory* @routine_movq__0x429bef___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eecd)
  store %struct.Memory* %call_41eecd, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x6278(%rbp)	 RIP: 41eed7	 Bytes: 7
  %loadMem_41eed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eed7 = call %struct.Memory* @routine_movq__rax__MINUS0x6278__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eed7)
  store %struct.Memory* %call_41eed7, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41eede	 Bytes: 2
  %loadMem_41eede = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eede = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eede)
  store %struct.Memory* %call_41eede, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41eee0	 Bytes: 5
  %loadMem1_41eee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eee0 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eee0, i64 -123440, i64 5, i64 5)
  store %struct.Memory* %call1_41eee0, %struct.Memory** %MEMORY

  %loadMem2_41eee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eee0 = load i64, i64* %3
  %call2_41eee0 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41eee0, %struct.Memory* %loadMem2_41eee0)
  store %struct.Memory* %call2_41eee0, %struct.Memory** %MEMORY

  ; Code: movq $0x428764, %rdi	 RIP: 41eee5	 Bytes: 10
  %loadMem_41eee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eee5 = call %struct.Memory* @routine_movq__0x428764___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eee5)
  store %struct.Memory* %call_41eee5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x627c(%rbp)	 RIP: 41eeef	 Bytes: 6
  %loadMem_41eeef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eeef = call %struct.Memory* @routine_movl__eax__MINUS0x627c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eeef)
  store %struct.Memory* %call_41eeef, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41eef5	 Bytes: 2
  %loadMem_41eef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eef5 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eef5)
  store %struct.Memory* %call_41eef5, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41eef7	 Bytes: 5
  %loadMem1_41eef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41eef7 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41eef7, i64 -123463, i64 5, i64 5)
  store %struct.Memory* %call1_41eef7, %struct.Memory** %MEMORY

  %loadMem2_41eef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41eef7 = load i64, i64* %3
  %call2_41eef7 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41eef7, %struct.Memory* %loadMem2_41eef7)
  store %struct.Memory* %call2_41eef7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6280(%rbp)	 RIP: 41eefc	 Bytes: 6
  %loadMem_41eefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eefc = call %struct.Memory* @routine_movl__eax__MINUS0x6280__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eefc)
  store %struct.Memory* %call_41eefc, %struct.Memory** %MEMORY

  ; Code: callq .BegForPartner	 RIP: 41ef02	 Bytes: 5
  %loadMem1_41ef02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ef02 = call %struct.Memory* @routine_callq_.BegForPartner(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ef02, i64 -60786, i64 5, i64 5)
  store %struct.Memory* %call1_41ef02, %struct.Memory** %MEMORY

  %loadMem2_41ef02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ef02 = load i64, i64* %3
  %call2_41ef02 = call %struct.Memory* @sub_410190.BegForPartner(%struct.State* %0, i64  %loadPC_41ef02, %struct.Memory* %loadMem2_41ef02)
  store %struct.Memory* %call2_41ef02, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42048e	 RIP: 41ef07	 Bytes: 5
  %loadMem_41ef07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef07 = call %struct.Memory* @routine_jmpq_.L_42048e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef07, i64 5511, i64 5)
  store %struct.Memory* %call_41ef07, %struct.Memory** %MEMORY

  br label %block_.L_42048e

  ; Code: .L_41ef0c:	 RIP: 41ef0c	 Bytes: 0
block_.L_41ef0c:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ef0c	 Bytes: 7
  %loadMem_41ef0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef0c = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef0c)
  store %struct.Memory* %call_41ef0c, %struct.Memory** %MEMORY

  ; Code: movl $0x4293e8, %eax	 RIP: 41ef13	 Bytes: 5
  %loadMem_41ef13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef13 = call %struct.Memory* @routine_movl__0x4293e8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef13)
  store %struct.Memory* %call_41ef13, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41ef18	 Bytes: 2
  %loadMem_41ef18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef18 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef18)
  store %struct.Memory* %call_41ef18, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41ef1a	 Bytes: 5
  %loadMem1_41ef1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ef1a = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ef1a, i64 -123402, i64 5, i64 5)
  store %struct.Memory* %call1_41ef1a, %struct.Memory** %MEMORY

  %loadMem2_41ef1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ef1a = load i64, i64* %3
  %call2_41ef1a = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41ef1a, %struct.Memory* %loadMem2_41ef1a)
  store %struct.Memory* %call2_41ef1a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ef1f	 Bytes: 3
  %loadMem_41ef1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef1f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef1f)
  store %struct.Memory* %call_41ef1f, %struct.Memory** %MEMORY

  ; Code: jne .L_41ef79	 RIP: 41ef22	 Bytes: 6
  %loadMem_41ef22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef22 = call %struct.Memory* @routine_jne_.L_41ef79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef22, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_41ef22, %struct.Memory** %MEMORY

  %loadBr_41ef22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ef22 = icmp eq i8 %loadBr_41ef22, 1
  br i1 %cmpBr_41ef22, label %block_.L_41ef79, label %block_41ef28

block_41ef28:
  ; Code: movq $0x4293ee, %rdi	 RIP: 41ef28	 Bytes: 10
  %loadMem_41ef28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef28 = call %struct.Memory* @routine_movq__0x4293ee___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef28)
  store %struct.Memory* %call_41ef28, %struct.Memory** %MEMORY

  ; Code: movsd 0x946e(%rip), %xmm0	 RIP: 41ef32	 Bytes: 8
  %loadMem_41ef32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef32 = call %struct.Memory* @routine_movsd_0x946e__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef32)
  store %struct.Memory* %call_41ef32, %struct.Memory** %MEMORY

  ; Code: movl 0x864500, %esi	 RIP: 41ef3a	 Bytes: 7
  %loadMem_41ef3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef3a = call %struct.Memory* @routine_movl_0x864500___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef3a)
  store %struct.Memory* %call_41ef3a, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x63ae44, %xmm1	 RIP: 41ef41	 Bytes: 9
  %loadMem_41ef41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef41 = call %struct.Memory* @routine_cvtsi2ssl_0x63ae44___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef41)
  store %struct.Memory* %call_41ef41, %struct.Memory** %MEMORY

  ; Code: cvtsi2ssl 0x864500, %xmm2	 RIP: 41ef4a	 Bytes: 9
  %loadMem_41ef4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef4a = call %struct.Memory* @routine_cvtsi2ssl_0x864500___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef4a)
  store %struct.Memory* %call_41ef4a, %struct.Memory** %MEMORY

  ; Code: divss %xmm2, %xmm1	 RIP: 41ef53	 Bytes: 4
  %loadMem_41ef53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef53 = call %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef53)
  store %struct.Memory* %call_41ef53, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm1, %xmm1	 RIP: 41ef57	 Bytes: 4
  %loadMem_41ef57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef57 = call %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef57)
  store %struct.Memory* %call_41ef57, %struct.Memory** %MEMORY

  ; Code: mulsd %xmm0, %xmm1	 RIP: 41ef5b	 Bytes: 4
  %loadMem_41ef5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef5b = call %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef5b)
  store %struct.Memory* %call_41ef5b, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm1, %xmm0	 RIP: 41ef5f	 Bytes: 4
  %loadMem_41ef5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef5f = call %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef5f)
  store %struct.Memory* %call_41ef5f, %struct.Memory** %MEMORY

  ; Code: cvtss2sd %xmm0, %xmm0	 RIP: 41ef63	 Bytes: 4
  %loadMem_41ef63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef63 = call %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef63)
  store %struct.Memory* %call_41ef63, %struct.Memory** %MEMORY

  ; Code: movb $0x1, %al	 RIP: 41ef67	 Bytes: 2
  %loadMem_41ef67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef67 = call %struct.Memory* @routine_movb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef67)
  store %struct.Memory* %call_41ef67, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41ef69	 Bytes: 5
  %loadMem1_41ef69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ef69 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ef69, i64 -123577, i64 5, i64 5)
  store %struct.Memory* %call1_41ef69, %struct.Memory** %MEMORY

  %loadMem2_41ef69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ef69 = load i64, i64* %3
  %call2_41ef69 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41ef69, %struct.Memory* %loadMem2_41ef69)
  store %struct.Memory* %call2_41ef69, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6284(%rbp)	 RIP: 41ef6e	 Bytes: 6
  %loadMem_41ef6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef6e = call %struct.Memory* @routine_movl__eax__MINUS0x6284__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef6e)
  store %struct.Memory* %call_41ef6e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420489	 RIP: 41ef74	 Bytes: 5
  %loadMem_41ef74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef74 = call %struct.Memory* @routine_jmpq_.L_420489(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef74, i64 5397, i64 5)
  store %struct.Memory* %call_41ef74, %struct.Memory** %MEMORY

  br label %block_.L_420489

  ; Code: .L_41ef79:	 RIP: 41ef79	 Bytes: 0
block_.L_41ef79:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ef79	 Bytes: 7
  %loadMem_41ef79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef79 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef79)
  store %struct.Memory* %call_41ef79, %struct.Memory** %MEMORY

  ; Code: movl $0x429416, %eax	 RIP: 41ef80	 Bytes: 5
  %loadMem_41ef80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef80 = call %struct.Memory* @routine_movl__0x429416___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef80)
  store %struct.Memory* %call_41ef80, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41ef85	 Bytes: 2
  %loadMem_41ef85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef85 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef85)
  store %struct.Memory* %call_41ef85, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41ef87	 Bytes: 5
  %loadMem1_41ef87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ef87 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ef87, i64 -123511, i64 5, i64 5)
  store %struct.Memory* %call1_41ef87, %struct.Memory** %MEMORY

  %loadMem2_41ef87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ef87 = load i64, i64* %3
  %call2_41ef87 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41ef87, %struct.Memory* %loadMem2_41ef87)
  store %struct.Memory* %call2_41ef87, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ef8c	 Bytes: 3
  %loadMem_41ef8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef8c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef8c)
  store %struct.Memory* %call_41ef8c, %struct.Memory** %MEMORY

  ; Code: jne .L_41efc2	 RIP: 41ef8f	 Bytes: 6
  %loadMem_41ef8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef8f = call %struct.Memory* @routine_jne_.L_41efc2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef8f, i8* %BRANCH_TAKEN, i64 51, i64 6, i64 6)
  store %struct.Memory* %call_41ef8f, %struct.Memory** %MEMORY

  %loadBr_41ef8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ef8f = icmp eq i8 %loadBr_41ef8f, 1
  br i1 %cmpBr_41ef8f, label %block_.L_41efc2, label %block_41ef95

block_41ef95:
  ; Code: movq $0x86679c, %rdi	 RIP: 41ef95	 Bytes: 10
  %loadMem_41ef95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ef95 = call %struct.Memory* @routine_movq__0x86679c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ef95)
  store %struct.Memory* %call_41ef95, %struct.Memory** %MEMORY

  ; Code: callq .toggle_bool	 RIP: 41ef9f	 Bytes: 5
  %loadMem1_41ef9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ef9f = call %struct.Memory* @routine_callq_.toggle_bool(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ef9f, i64 21089, i64 5, i64 5)
  store %struct.Memory* %call1_41ef9f, %struct.Memory** %MEMORY

  %loadMem2_41ef9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ef9f = load i64, i64* %3
  %call2_41ef9f = call %struct.Memory* @sub_424200.toggle_bool(%struct.State* %0, i64  %loadPC_41ef9f, %struct.Memory* %loadMem2_41ef9f)
  store %struct.Memory* %call2_41ef9f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x8a2a04	 RIP: 41efa4	 Bytes: 8
  %loadMem_41efa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efa4 = call %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efa4)
  store %struct.Memory* %call_41efa4, %struct.Memory** %MEMORY

  ; Code: je .L_41efbd	 RIP: 41efac	 Bytes: 6
  %loadMem_41efac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efac = call %struct.Memory* @routine_je_.L_41efbd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efac, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41efac, %struct.Memory** %MEMORY

  %loadBr_41efac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41efac = icmp eq i8 %loadBr_41efac, 1
  br i1 %cmpBr_41efac, label %block_.L_41efbd, label %block_41efb2

block_41efb2:
  ; Code: movl $0x1, 0x86679c	 RIP: 41efb2	 Bytes: 11
  %loadMem_41efb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efb2 = call %struct.Memory* @routine_movl__0x1__0x86679c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efb2)
  store %struct.Memory* %call_41efb2, %struct.Memory** %MEMORY

  ; Code: .L_41efbd:	 RIP: 41efbd	 Bytes: 0
  br label %block_.L_41efbd
block_.L_41efbd:

  ; Code: jmpq .L_420484	 RIP: 41efbd	 Bytes: 5
  %loadMem_41efbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efbd = call %struct.Memory* @routine_jmpq_.L_420484(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efbd, i64 5319, i64 5)
  store %struct.Memory* %call_41efbd, %struct.Memory** %MEMORY

  br label %block_.L_420484

  ; Code: .L_41efc2:	 RIP: 41efc2	 Bytes: 0
block_.L_41efc2:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41efc2	 Bytes: 7
  %loadMem_41efc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efc2 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efc2)
  store %struct.Memory* %call_41efc2, %struct.Memory** %MEMORY

  ; Code: movl $0x429414, %eax	 RIP: 41efc9	 Bytes: 5
  %loadMem_41efc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efc9 = call %struct.Memory* @routine_movl__0x429414___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efc9)
  store %struct.Memory* %call_41efc9, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41efce	 Bytes: 2
  %loadMem_41efce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efce = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efce)
  store %struct.Memory* %call_41efce, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41efd0	 Bytes: 5
  %loadMem1_41efd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41efd0 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41efd0, i64 -123584, i64 5, i64 5)
  store %struct.Memory* %call1_41efd0, %struct.Memory** %MEMORY

  %loadMem2_41efd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41efd0 = load i64, i64* %3
  %call2_41efd0 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41efd0, %struct.Memory* %loadMem2_41efd0)
  store %struct.Memory* %call2_41efd0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41efd5	 Bytes: 3
  %loadMem_41efd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efd5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efd5)
  store %struct.Memory* %call_41efd5, %struct.Memory** %MEMORY

  ; Code: jne .L_41efee	 RIP: 41efd8	 Bytes: 6
  %loadMem_41efd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efd8 = call %struct.Memory* @routine_jne_.L_41efee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efd8, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_41efd8, %struct.Memory** %MEMORY

  %loadBr_41efd8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41efd8 = icmp eq i8 %loadBr_41efd8, 1
  br i1 %cmpBr_41efd8, label %block_.L_41efee, label %block_41efde

block_41efde:
  ; Code: movl $0x0, 0x86679c	 RIP: 41efde	 Bytes: 11
  %loadMem_41efde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efde = call %struct.Memory* @routine_movl__0x0__0x86679c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efde)
  store %struct.Memory* %call_41efde, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42047f	 RIP: 41efe9	 Bytes: 5
  %loadMem_41efe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efe9 = call %struct.Memory* @routine_jmpq_.L_42047f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efe9, i64 5270, i64 5)
  store %struct.Memory* %call_41efe9, %struct.Memory** %MEMORY

  br label %block_.L_42047f

  ; Code: .L_41efee:	 RIP: 41efee	 Bytes: 0
block_.L_41efee:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41efee	 Bytes: 7
  %loadMem_41efee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41efee = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41efee)
  store %struct.Memory* %call_41efee, %struct.Memory** %MEMORY

  ; Code: movl $0x42941b, %eax	 RIP: 41eff5	 Bytes: 5
  %loadMem_41eff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41eff5 = call %struct.Memory* @routine_movl__0x42941b___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41eff5)
  store %struct.Memory* %call_41eff5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41effa	 Bytes: 2
  %loadMem_41effa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41effa = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41effa)
  store %struct.Memory* %call_41effa, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41effc	 Bytes: 5
  %loadMem1_41effc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41effc = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41effc, i64 -123628, i64 5, i64 5)
  store %struct.Memory* %call1_41effc, %struct.Memory** %MEMORY

  %loadMem2_41effc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41effc = load i64, i64* %3
  %call2_41effc = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41effc, %struct.Memory* %loadMem2_41effc)
  store %struct.Memory* %call2_41effc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f001	 Bytes: 3
  %loadMem_41f001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f001 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f001)
  store %struct.Memory* %call_41f001, %struct.Memory** %MEMORY

  ; Code: jne .L_41f00f	 RIP: 41f004	 Bytes: 6
  %loadMem_41f004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f004 = call %struct.Memory* @routine_jne_.L_41f00f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f004, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41f004, %struct.Memory** %MEMORY

  %loadBr_41f004 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f004 = icmp eq i8 %loadBr_41f004, 1
  br i1 %cmpBr_41f004, label %block_.L_41f00f, label %block_41f00a

block_41f00a:
  ; Code: jmpq .L_41dec3	 RIP: 41f00a	 Bytes: 5
  %loadMem_41f00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f00a = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f00a, i64 -4423, i64 5)
  store %struct.Memory* %call_41f00a, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41f00f:	 RIP: 41f00f	 Bytes: 0
block_.L_41f00f:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f00f	 Bytes: 7
  %loadMem_41f00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f00f = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f00f)
  store %struct.Memory* %call_41f00f, %struct.Memory** %MEMORY

  ; Code: movl $0x429422, %eax	 RIP: 41f016	 Bytes: 5
  %loadMem_41f016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f016 = call %struct.Memory* @routine_movl__0x429422___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f016)
  store %struct.Memory* %call_41f016, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f01b	 Bytes: 2
  %loadMem_41f01b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f01b = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f01b)
  store %struct.Memory* %call_41f01b, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f01d	 Bytes: 5
  %loadMem1_41f01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f01d = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f01d, i64 -123661, i64 5, i64 5)
  store %struct.Memory* %call1_41f01d, %struct.Memory** %MEMORY

  %loadMem2_41f01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f01d = load i64, i64* %3
  %call2_41f01d = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f01d, %struct.Memory* %loadMem2_41f01d)
  store %struct.Memory* %call2_41f01d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f022	 Bytes: 3
  %loadMem_41f022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f022 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f022)
  store %struct.Memory* %call_41f022, %struct.Memory** %MEMORY

  ; Code: jne .L_41f03b	 RIP: 41f025	 Bytes: 6
  %loadMem_41f025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f025 = call %struct.Memory* @routine_jne_.L_41f03b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f025, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_41f025, %struct.Memory** %MEMORY

  %loadBr_41f025 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f025 = icmp eq i8 %loadBr_41f025, 1
  br i1 %cmpBr_41f025, label %block_.L_41f03b, label %block_41f02b

block_41f02b:
  ; Code: movl $0x1, 0x62e524	 RIP: 41f02b	 Bytes: 11
  %loadMem_41f02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f02b = call %struct.Memory* @routine_movl__0x1__0x62e524(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f02b)
  store %struct.Memory* %call_41f02b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dec3	 RIP: 41f036	 Bytes: 5
  %loadMem_41f036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f036 = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f036, i64 -4467, i64 5)
  store %struct.Memory* %call_41f036, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41f03b:	 RIP: 41f03b	 Bytes: 0
block_.L_41f03b:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f03b	 Bytes: 7
  %loadMem_41f03b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f03b = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f03b)
  store %struct.Memory* %call_41f03b, %struct.Memory** %MEMORY

  ; Code: movl $0x429427, %eax	 RIP: 41f042	 Bytes: 5
  %loadMem_41f042 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f042 = call %struct.Memory* @routine_movl__0x429427___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f042)
  store %struct.Memory* %call_41f042, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f047	 Bytes: 2
  %loadMem_41f047 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f047 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f047)
  store %struct.Memory* %call_41f047, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f049	 Bytes: 5
  %loadMem1_41f049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f049 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f049, i64 -123705, i64 5, i64 5)
  store %struct.Memory* %call1_41f049, %struct.Memory** %MEMORY

  %loadMem2_41f049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f049 = load i64, i64* %3
  %call2_41f049 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f049, %struct.Memory* %loadMem2_41f049)
  store %struct.Memory* %call2_41f049, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f04e	 Bytes: 3
  %loadMem_41f04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f04e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f04e)
  store %struct.Memory* %call_41f04e, %struct.Memory** %MEMORY

  ; Code: jne .L_41f067	 RIP: 41f051	 Bytes: 6
  %loadMem_41f051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f051 = call %struct.Memory* @routine_jne_.L_41f067(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f051, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_41f051, %struct.Memory** %MEMORY

  %loadBr_41f051 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f051 = icmp eq i8 %loadBr_41f051, 1
  br i1 %cmpBr_41f051, label %block_.L_41f067, label %block_41f057

block_41f057:
  ; Code: movl $0x0, 0x62e524	 RIP: 41f057	 Bytes: 11
  %loadMem_41f057 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f057 = call %struct.Memory* @routine_movl__0x0__0x62e524(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f057)
  store %struct.Memory* %call_41f057, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dec3	 RIP: 41f062	 Bytes: 5
  %loadMem_41f062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f062 = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f062, i64 -4511, i64 5)
  store %struct.Memory* %call_41f062, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41f067:	 RIP: 41f067	 Bytes: 0
block_.L_41f067:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f067	 Bytes: 7
  %loadMem_41f067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f067 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f067)
  store %struct.Memory* %call_41f067, %struct.Memory** %MEMORY

  ; Code: movl $0x429cf6, %eax	 RIP: 41f06e	 Bytes: 5
  %loadMem_41f06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f06e = call %struct.Memory* @routine_movl__0x429cf6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f06e)
  store %struct.Memory* %call_41f06e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f073	 Bytes: 2
  %loadMem_41f073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f073 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f073)
  store %struct.Memory* %call_41f073, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f075	 Bytes: 5
  %loadMem1_41f075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f075 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f075, i64 -123749, i64 5, i64 5)
  store %struct.Memory* %call1_41f075, %struct.Memory** %MEMORY

  %loadMem2_41f075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f075 = load i64, i64* %3
  %call2_41f075 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f075, %struct.Memory* %loadMem2_41f075)
  store %struct.Memory* %call2_41f075, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f07a	 Bytes: 3
  %loadMem_41f07a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f07a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f07a)
  store %struct.Memory* %call_41f07a, %struct.Memory** %MEMORY

  ; Code: jne .L_41f088	 RIP: 41f07d	 Bytes: 6
  %loadMem_41f07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f07d = call %struct.Memory* @routine_jne_.L_41f088(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f07d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41f07d, %struct.Memory** %MEMORY

  %loadBr_41f07d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f07d = icmp eq i8 %loadBr_41f07d, 1
  br i1 %cmpBr_41f07d, label %block_.L_41f088, label %block_41f083

block_41f083:
  ; Code: jmpq .L_41dec3	 RIP: 41f083	 Bytes: 5
  %loadMem_41f083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f083 = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f083, i64 -4544, i64 5)
  store %struct.Memory* %call_41f083, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41f088:	 RIP: 41f088	 Bytes: 0
block_.L_41f088:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f088	 Bytes: 7
  %loadMem_41f088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f088 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f088)
  store %struct.Memory* %call_41f088, %struct.Memory** %MEMORY

  ; Code: movl $0x42942c, %eax	 RIP: 41f08f	 Bytes: 5
  %loadMem_41f08f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f08f = call %struct.Memory* @routine_movl__0x42942c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f08f)
  store %struct.Memory* %call_41f08f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f094	 Bytes: 2
  %loadMem_41f094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f094 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f094)
  store %struct.Memory* %call_41f094, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f096	 Bytes: 5
  %loadMem1_41f096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f096 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f096, i64 -123782, i64 5, i64 5)
  store %struct.Memory* %call1_41f096, %struct.Memory** %MEMORY

  %loadMem2_41f096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f096 = load i64, i64* %3
  %call2_41f096 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f096, %struct.Memory* %loadMem2_41f096)
  store %struct.Memory* %call2_41f096, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f09b	 Bytes: 3
  %loadMem_41f09b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f09b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f09b)
  store %struct.Memory* %call_41f09b, %struct.Memory** %MEMORY

  ; Code: jne .L_41f0ca	 RIP: 41f09e	 Bytes: 6
  %loadMem_41f09e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f09e = call %struct.Memory* @routine_jne_.L_41f0ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f09e, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_41f09e, %struct.Memory** %MEMORY

  %loadBr_41f09e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f09e = icmp eq i8 %loadBr_41f09e, 1
  br i1 %cmpBr_41f09e, label %block_.L_41f0ca, label %block_41f0a4

block_41f0a4:
  ; Code: movl $0x1, 0x8661bc	 RIP: 41f0a4	 Bytes: 11
  %loadMem_41f0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0a4 = call %struct.Memory* @routine_movl__0x1__0x8661bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0a4)
  store %struct.Memory* %call_41f0a4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x633b54	 RIP: 41f0af	 Bytes: 11
  %loadMem_41f0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0af = call %struct.Memory* @routine_movl__0x0__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0af)
  store %struct.Memory* %call_41f0af, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b84	 RIP: 41f0ba	 Bytes: 11
  %loadMem_41f0ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0ba = call %struct.Memory* @routine_movl__0x0__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0ba)
  store %struct.Memory* %call_41f0ba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420466	 RIP: 41f0c5	 Bytes: 5
  %loadMem_41f0c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0c5 = call %struct.Memory* @routine_jmpq_.L_420466(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0c5, i64 5025, i64 5)
  store %struct.Memory* %call_41f0c5, %struct.Memory** %MEMORY

  br label %block_.L_420466

  ; Code: .L_41f0ca:	 RIP: 41f0ca	 Bytes: 0
block_.L_41f0ca:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f0ca	 Bytes: 7
  %loadMem_41f0ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0ca = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0ca)
  store %struct.Memory* %call_41f0ca, %struct.Memory** %MEMORY

  ; Code: movl $0x429432, %eax	 RIP: 41f0d1	 Bytes: 5
  %loadMem_41f0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0d1 = call %struct.Memory* @routine_movl__0x429432___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0d1)
  store %struct.Memory* %call_41f0d1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f0d6	 Bytes: 2
  %loadMem_41f0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0d6 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0d6)
  store %struct.Memory* %call_41f0d6, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f0d8	 Bytes: 5
  %loadMem1_41f0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f0d8 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f0d8, i64 -123848, i64 5, i64 5)
  store %struct.Memory* %call1_41f0d8, %struct.Memory** %MEMORY

  %loadMem2_41f0d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f0d8 = load i64, i64* %3
  %call2_41f0d8 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f0d8, %struct.Memory* %loadMem2_41f0d8)
  store %struct.Memory* %call2_41f0d8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f0dd	 Bytes: 3
  %loadMem_41f0dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0dd = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0dd)
  store %struct.Memory* %call_41f0dd, %struct.Memory** %MEMORY

  ; Code: jne .L_41f10c	 RIP: 41f0e0	 Bytes: 6
  %loadMem_41f0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0e0 = call %struct.Memory* @routine_jne_.L_41f10c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0e0, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_41f0e0, %struct.Memory** %MEMORY

  %loadBr_41f0e0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f0e0 = icmp eq i8 %loadBr_41f0e0, 1
  br i1 %cmpBr_41f0e0, label %block_.L_41f10c, label %block_41f0e6

block_41f0e6:
  ; Code: movl $0x0, 0x8661bc	 RIP: 41f0e6	 Bytes: 11
  %loadMem_41f0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0e6 = call %struct.Memory* @routine_movl__0x0__0x8661bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0e6)
  store %struct.Memory* %call_41f0e6, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x633b54	 RIP: 41f0f1	 Bytes: 11
  %loadMem_41f0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0f1 = call %struct.Memory* @routine_movl__0x1__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0f1)
  store %struct.Memory* %call_41f0f1, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x886b84	 RIP: 41f0fc	 Bytes: 11
  %loadMem_41f0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f0fc = call %struct.Memory* @routine_movl__0x1__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f0fc)
  store %struct.Memory* %call_41f0fc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420461	 RIP: 41f107	 Bytes: 5
  %loadMem_41f107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f107 = call %struct.Memory* @routine_jmpq_.L_420461(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f107, i64 4954, i64 5)
  store %struct.Memory* %call_41f107, %struct.Memory** %MEMORY

  br label %block_.L_420461

  ; Code: .L_41f10c:	 RIP: 41f10c	 Bytes: 0
block_.L_41f10c:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f10c	 Bytes: 7
  %loadMem_41f10c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f10c = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f10c)
  store %struct.Memory* %call_41f10c, %struct.Memory** %MEMORY

  ; Code: movl $0x429438, %eax	 RIP: 41f113	 Bytes: 5
  %loadMem_41f113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f113 = call %struct.Memory* @routine_movl__0x429438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f113)
  store %struct.Memory* %call_41f113, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f118	 Bytes: 2
  %loadMem_41f118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f118 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f118)
  store %struct.Memory* %call_41f118, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f11a	 Bytes: 5
  %loadMem1_41f11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f11a = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f11a, i64 -123914, i64 5, i64 5)
  store %struct.Memory* %call1_41f11a, %struct.Memory** %MEMORY

  %loadMem2_41f11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f11a = load i64, i64* %3
  %call2_41f11a = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f11a, %struct.Memory* %loadMem2_41f11a)
  store %struct.Memory* %call2_41f11a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f11f	 Bytes: 3
  %loadMem_41f11f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f11f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f11f)
  store %struct.Memory* %call_41f11f, %struct.Memory** %MEMORY

  ; Code: jne .L_41f137	 RIP: 41f122	 Bytes: 6
  %loadMem_41f122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f122 = call %struct.Memory* @routine_jne_.L_41f137(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f122, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_41f122, %struct.Memory** %MEMORY

  %loadBr_41f122 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f122 = icmp eq i8 %loadBr_41f122, 1
  br i1 %cmpBr_41f122, label %block_.L_41f137, label %block_41f128

block_41f128:
  ; Code: movl $0x1, -0x358(%rbp)	 RIP: 41f128	 Bytes: 10
  %loadMem_41f128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f128 = call %struct.Memory* @routine_movl__0x1__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f128)
  store %struct.Memory* %call_41f128, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42045c	 RIP: 41f132	 Bytes: 5
  %loadMem_41f132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f132 = call %struct.Memory* @routine_jmpq_.L_42045c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f132, i64 4906, i64 5)
  store %struct.Memory* %call_41f132, %struct.Memory** %MEMORY

  br label %block_.L_42045c

  ; Code: .L_41f137:	 RIP: 41f137	 Bytes: 0
block_.L_41f137:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f137	 Bytes: 7
  %loadMem_41f137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f137 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f137)
  store %struct.Memory* %call_41f137, %struct.Memory** %MEMORY

  ; Code: movl $0x42943e, %eax	 RIP: 41f13e	 Bytes: 5
  %loadMem_41f13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f13e = call %struct.Memory* @routine_movl__0x42943e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f13e)
  store %struct.Memory* %call_41f13e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f143	 Bytes: 2
  %loadMem_41f143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f143 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f143)
  store %struct.Memory* %call_41f143, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f145	 Bytes: 5
  %loadMem1_41f145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f145 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f145, i64 -123957, i64 5, i64 5)
  store %struct.Memory* %call1_41f145, %struct.Memory** %MEMORY

  %loadMem2_41f145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f145 = load i64, i64* %3
  %call2_41f145 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f145, %struct.Memory* %loadMem2_41f145)
  store %struct.Memory* %call2_41f145, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f14a	 Bytes: 3
  %loadMem_41f14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f14a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f14a)
  store %struct.Memory* %call_41f14a, %struct.Memory** %MEMORY

  ; Code: jne .L_41f185	 RIP: 41f14d	 Bytes: 6
  %loadMem_41f14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f14d = call %struct.Memory* @routine_jne_.L_41f185(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f14d, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_41f14d, %struct.Memory** %MEMORY

  %loadBr_41f14d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f14d = icmp eq i8 %loadBr_41f14d, 1
  br i1 %cmpBr_41f14d, label %block_.L_41f185, label %block_41f153

block_41f153:
  ; Code: callq .check_phase	 RIP: 41f153	 Bytes: 5
  %loadMem1_41f153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f153 = call %struct.Memory* @routine_callq_.check_phase(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f153, i64 -72515, i64 5, i64 5)
  store %struct.Memory* %call1_41f153, %struct.Memory** %MEMORY

  %loadMem2_41f153 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f153 = load i64, i64* %3
  %call2_41f153 = call %struct.Memory* @sub_40d610.check_phase(%struct.State* %0, i64  %loadPC_41f153, %struct.Memory* %loadMem2_41f153)
  store %struct.Memory* %call2_41f153, %struct.Memory** %MEMORY

  ; Code: movl $0xfff0bdc0, %edi	 RIP: 41f158	 Bytes: 5
  %loadMem_41f158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f158 = call %struct.Memory* @routine_movl__0xfff0bdc0___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f158)
  store %struct.Memory* %call_41f158, %struct.Memory** %MEMORY

  ; Code: movl $0xf4240, %esi	 RIP: 41f15d	 Bytes: 5
  %loadMem_41f15d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f15d = call %struct.Memory* @routine_movl__0xf4240___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f15d)
  store %struct.Memory* %call_41f15d, %struct.Memory** %MEMORY

  ; Code: callq .eval	 RIP: 41f162	 Bytes: 5
  %loadMem1_41f162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f162 = call %struct.Memory* @routine_callq_.eval(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f162, i64 -110834, i64 5, i64 5)
  store %struct.Memory* %call1_41f162, %struct.Memory** %MEMORY

  %loadMem2_41f162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f162 = load i64, i64* %3
  %call2_41f162 = call %struct.Memory* @sub_404070.eval(%struct.State* %0, i64  %loadPC_41f162, %struct.Memory* %loadMem2_41f162)
  store %struct.Memory* %call2_41f162, %struct.Memory** %MEMORY

  ; Code: movq $0x429443, %rdi	 RIP: 41f167	 Bytes: 10
  %loadMem_41f167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f167 = call %struct.Memory* @routine_movq__0x429443___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f167)
  store %struct.Memory* %call_41f167, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f171	 Bytes: 2
  %loadMem_41f171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f171 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f171)
  store %struct.Memory* %call_41f171, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f173	 Bytes: 2
  %loadMem_41f173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f173 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f173)
  store %struct.Memory* %call_41f173, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41f175	 Bytes: 5
  %loadMem1_41f175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f175 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f175, i64 -124101, i64 5, i64 5)
  store %struct.Memory* %call1_41f175, %struct.Memory** %MEMORY

  %loadMem2_41f175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f175 = load i64, i64* %3
  %call2_41f175 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41f175, %struct.Memory* %loadMem2_41f175)
  store %struct.Memory* %call2_41f175, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6288(%rbp)	 RIP: 41f17a	 Bytes: 6
  %loadMem_41f17a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f17a = call %struct.Memory* @routine_movl__eax__MINUS0x6288__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f17a)
  store %struct.Memory* %call_41f17a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420457	 RIP: 41f180	 Bytes: 5
  %loadMem_41f180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f180 = call %struct.Memory* @routine_jmpq_.L_420457(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f180, i64 4823, i64 5)
  store %struct.Memory* %call_41f180, %struct.Memory** %MEMORY

  br label %block_.L_420457

  ; Code: .L_41f185:	 RIP: 41f185	 Bytes: 0
block_.L_41f185:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f185	 Bytes: 7
  %loadMem_41f185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f185 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f185)
  store %struct.Memory* %call_41f185, %struct.Memory** %MEMORY

  ; Code: movl $0x42888d, %eax	 RIP: 41f18c	 Bytes: 5
  %loadMem_41f18c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f18c = call %struct.Memory* @routine_movl__0x42888d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f18c)
  store %struct.Memory* %call_41f18c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41f191	 Bytes: 2
  %loadMem_41f191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f191 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f191)
  store %struct.Memory* %call_41f191, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 41f193	 Bytes: 5
  %loadMem1_41f193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f193 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f193, i64 -124035, i64 5, i64 5)
  store %struct.Memory* %call1_41f193, %struct.Memory** %MEMORY

  %loadMem2_41f193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f193 = load i64, i64* %3
  %call2_41f193 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_41f193, %struct.Memory* %loadMem2_41f193)
  store %struct.Memory* %call2_41f193, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f198	 Bytes: 3
  %loadMem_41f198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f198 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f198)
  store %struct.Memory* %call_41f198, %struct.Memory** %MEMORY

  ; Code: jne .L_41f1be	 RIP: 41f19b	 Bytes: 6
  %loadMem_41f19b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f19b = call %struct.Memory* @routine_jne_.L_41f1be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f19b, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_41f19b, %struct.Memory** %MEMORY

  %loadBr_41f19b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f19b = icmp eq i8 %loadBr_41f19b, 1
  br i1 %cmpBr_41f19b, label %block_.L_41f1be, label %block_41f1a1

block_41f1a1:
  ; Code: movl 0x8661bc, %eax	 RIP: 41f1a1	 Bytes: 7
  %loadMem_41f1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1a1 = call %struct.Memory* @routine_movl_0x8661bc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1a1)
  store %struct.Memory* %call_41f1a1, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x886b84	 RIP: 41f1a8	 Bytes: 7
  %loadMem_41f1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1a8 = call %struct.Memory* @routine_movl__eax__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1a8)
  store %struct.Memory* %call_41f1a8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x358(%rbp)	 RIP: 41f1af	 Bytes: 10
  %loadMem_41f1af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1af = call %struct.Memory* @routine_movl__0x0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1af)
  store %struct.Memory* %call_41f1af, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420452	 RIP: 41f1b9	 Bytes: 5
  %loadMem_41f1b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1b9 = call %struct.Memory* @routine_jmpq_.L_420452(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1b9, i64 4761, i64 5)
  store %struct.Memory* %call_41f1b9, %struct.Memory** %MEMORY

  br label %block_.L_420452

  ; Code: .L_41f1be:	 RIP: 41f1be	 Bytes: 0
block_.L_41f1be:

  ; Code: movq $0x4288b4, %rsi	 RIP: 41f1be	 Bytes: 10
  %loadMem_41f1be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1be = call %struct.Memory* @routine_movq__0x4288b4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1be)
  store %struct.Memory* %call_41f1be, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41f1c8	 Bytes: 5
  %loadMem_41f1c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1c8 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1c8)
  store %struct.Memory* %call_41f1c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f1cd	 Bytes: 2
  %loadMem_41f1cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1cd = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1cd)
  store %struct.Memory* %call_41f1cd, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f1cf	 Bytes: 7
  %loadMem_41f1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1cf = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1cf)
  store %struct.Memory* %call_41f1cf, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f1d6	 Bytes: 5
  %loadMem1_41f1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f1d6 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f1d6, i64 -124278, i64 5, i64 5)
  store %struct.Memory* %call1_41f1d6, %struct.Memory** %MEMORY

  %loadMem2_41f1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f1d6 = load i64, i64* %3
  %call2_41f1d6 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f1d6, %struct.Memory* %loadMem2_41f1d6)
  store %struct.Memory* %call2_41f1d6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f1db	 Bytes: 3
  %loadMem_41f1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1db = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1db)
  store %struct.Memory* %call_41f1db, %struct.Memory** %MEMORY

  ; Code: jne .L_41f218	 RIP: 41f1de	 Bytes: 6
  %loadMem_41f1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1de = call %struct.Memory* @routine_jne_.L_41f218(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1de, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_41f1de, %struct.Memory** %MEMORY

  %loadBr_41f1de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f1de = icmp eq i8 %loadBr_41f1de, 1
  br i1 %cmpBr_41f1de, label %block_.L_41f218, label %block_41f1e4

block_41f1e4:
  ; Code: movq $0x42946c, %rsi	 RIP: 41f1e4	 Bytes: 10
  %loadMem_41f1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1e4 = call %struct.Memory* @routine_movq__0x42946c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1e4)
  store %struct.Memory* %call_41f1e4, %struct.Memory** %MEMORY

  ; Code: movq $0x8a05b4, %rdx	 RIP: 41f1ee	 Bytes: 10
  %loadMem_41f1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1ee = call %struct.Memory* @routine_movq__0x8a05b4___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1ee)
  store %struct.Memory* %call_41f1ee, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41f1f8	 Bytes: 7
  %loadMem_41f1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1f8 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1f8)
  store %struct.Memory* %call_41f1f8, %struct.Memory** %MEMORY

  ; Code: addq $0x5, %rax	 RIP: 41f1ff	 Bytes: 4
  %loadMem_41f1ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f1ff = call %struct.Memory* @routine_addq__0x5___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f1ff)
  store %struct.Memory* %call_41f1ff, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f203	 Bytes: 3
  %loadMem_41f203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f203 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f203)
  store %struct.Memory* %call_41f203, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f206	 Bytes: 2
  %loadMem_41f206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f206 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f206)
  store %struct.Memory* %call_41f206, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41f208	 Bytes: 5
  %loadMem1_41f208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f208 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f208, i64 -124040, i64 5, i64 5)
  store %struct.Memory* %call1_41f208, %struct.Memory** %MEMORY

  %loadMem2_41f208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f208 = load i64, i64* %3
  %call2_41f208 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41f208, %struct.Memory* %loadMem2_41f208)
  store %struct.Memory* %call2_41f208, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x628c(%rbp)	 RIP: 41f20d	 Bytes: 6
  %loadMem_41f20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f20d = call %struct.Memory* @routine_movl__eax__MINUS0x628c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f20d)
  store %struct.Memory* %call_41f20d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42044d	 RIP: 41f213	 Bytes: 5
  %loadMem_41f213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f213 = call %struct.Memory* @routine_jmpq_.L_42044d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f213, i64 4666, i64 5)
  store %struct.Memory* %call_41f213, %struct.Memory** %MEMORY

  br label %block_.L_42044d

  ; Code: .L_41f218:	 RIP: 41f218	 Bytes: 0
block_.L_41f218:

  ; Code: movq $0x42944d, %rsi	 RIP: 41f218	 Bytes: 10
  %loadMem_41f218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f218 = call %struct.Memory* @routine_movq__0x42944d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f218)
  store %struct.Memory* %call_41f218, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41f222	 Bytes: 5
  %loadMem_41f222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f222 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f222)
  store %struct.Memory* %call_41f222, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f227	 Bytes: 2
  %loadMem_41f227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f227 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f227)
  store %struct.Memory* %call_41f227, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f229	 Bytes: 7
  %loadMem_41f229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f229 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f229)
  store %struct.Memory* %call_41f229, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f230	 Bytes: 5
  %loadMem1_41f230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f230 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f230, i64 -124368, i64 5, i64 5)
  store %struct.Memory* %call1_41f230, %struct.Memory** %MEMORY

  %loadMem2_41f230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f230 = load i64, i64* %3
  %call2_41f230 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f230, %struct.Memory* %loadMem2_41f230)
  store %struct.Memory* %call2_41f230, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f235	 Bytes: 3
  %loadMem_41f235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f235 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f235)
  store %struct.Memory* %call_41f235, %struct.Memory** %MEMORY

  ; Code: jne .L_41f272	 RIP: 41f238	 Bytes: 6
  %loadMem_41f238 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f238 = call %struct.Memory* @routine_jne_.L_41f272(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f238, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_41f238, %struct.Memory** %MEMORY

  %loadBr_41f238 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f238 = icmp eq i8 %loadBr_41f238, 1
  br i1 %cmpBr_41f238, label %block_.L_41f272, label %block_41f23e

block_41f23e:
  ; Code: movq $0x42946c, %rsi	 RIP: 41f23e	 Bytes: 10
  %loadMem_41f23e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f23e = call %struct.Memory* @routine_movq__0x42946c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f23e)
  store %struct.Memory* %call_41f23e, %struct.Memory** %MEMORY

  ; Code: movq $0x86bd64, %rdx	 RIP: 41f248	 Bytes: 10
  %loadMem_41f248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f248 = call %struct.Memory* @routine_movq__0x86bd64___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f248)
  store %struct.Memory* %call_41f248, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41f252	 Bytes: 7
  %loadMem_41f252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f252 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f252)
  store %struct.Memory* %call_41f252, %struct.Memory** %MEMORY

  ; Code: addq $0x5, %rax	 RIP: 41f259	 Bytes: 4
  %loadMem_41f259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f259 = call %struct.Memory* @routine_addq__0x5___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f259)
  store %struct.Memory* %call_41f259, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f25d	 Bytes: 3
  %loadMem_41f25d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f25d = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f25d)
  store %struct.Memory* %call_41f25d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f260	 Bytes: 2
  %loadMem_41f260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f260 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f260)
  store %struct.Memory* %call_41f260, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41f262	 Bytes: 5
  %loadMem1_41f262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f262 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f262, i64 -124130, i64 5, i64 5)
  store %struct.Memory* %call1_41f262, %struct.Memory** %MEMORY

  %loadMem2_41f262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f262 = load i64, i64* %3
  %call2_41f262 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41f262, %struct.Memory* %loadMem2_41f262)
  store %struct.Memory* %call2_41f262, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6290(%rbp)	 RIP: 41f267	 Bytes: 6
  %loadMem_41f267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f267 = call %struct.Memory* @routine_movl__eax__MINUS0x6290__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f267)
  store %struct.Memory* %call_41f267, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420448	 RIP: 41f26d	 Bytes: 5
  %loadMem_41f26d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f26d = call %struct.Memory* @routine_jmpq_.L_420448(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f26d, i64 4571, i64 5)
  store %struct.Memory* %call_41f26d, %struct.Memory** %MEMORY

  br label %block_.L_420448

  ; Code: .L_41f272:	 RIP: 41f272	 Bytes: 0
block_.L_41f272:

  ; Code: movq $0x429452, %rsi	 RIP: 41f272	 Bytes: 10
  %loadMem_41f272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f272 = call %struct.Memory* @routine_movq__0x429452___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f272)
  store %struct.Memory* %call_41f272, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41f27c	 Bytes: 5
  %loadMem_41f27c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f27c = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f27c)
  store %struct.Memory* %call_41f27c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f281	 Bytes: 2
  %loadMem_41f281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f281 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f281)
  store %struct.Memory* %call_41f281, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f283	 Bytes: 7
  %loadMem_41f283 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f283 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f283)
  store %struct.Memory* %call_41f283, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f28a	 Bytes: 5
  %loadMem1_41f28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f28a = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f28a, i64 -124458, i64 5, i64 5)
  store %struct.Memory* %call1_41f28a, %struct.Memory** %MEMORY

  %loadMem2_41f28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f28a = load i64, i64* %3
  %call2_41f28a = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f28a, %struct.Memory* %loadMem2_41f28a)
  store %struct.Memory* %call2_41f28a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f28f	 Bytes: 3
  %loadMem_41f28f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f28f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f28f)
  store %struct.Memory* %call_41f28f, %struct.Memory** %MEMORY

  ; Code: jne .L_41f3c3	 RIP: 41f292	 Bytes: 6
  %loadMem_41f292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f292 = call %struct.Memory* @routine_jne_.L_41f3c3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f292, i8* %BRANCH_TAKEN, i64 305, i64 6, i64 6)
  store %struct.Memory* %call_41f292, %struct.Memory** %MEMORY

  %loadBr_41f292 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f292 = icmp eq i8 %loadBr_41f292, 1
  br i1 %cmpBr_41f292, label %block_.L_41f3c3, label %block_41f298

block_41f298:
  ; Code: movq $0x429458, %rsi	 RIP: 41f298	 Bytes: 10
  %loadMem_41f298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f298 = call %struct.Memory* @routine_movq__0x429458___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f298)
  store %struct.Memory* %call_41f298, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41f2a2	 Bytes: 7
  %loadMem_41f2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2a2 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2a2)
  store %struct.Memory* %call_41f2a2, %struct.Memory** %MEMORY

  ; Code: addq $0x6, %rax	 RIP: 41f2a9	 Bytes: 4
  %loadMem_41f2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2a9 = call %struct.Memory* @routine_addq__0x6___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2a9)
  store %struct.Memory* %call_41f2a9, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f2ad	 Bytes: 3
  %loadMem_41f2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2ad = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2ad)
  store %struct.Memory* %call_41f2ad, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f2b0	 Bytes: 5
  %loadMem1_41f2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f2b0 = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f2b0, i64 -124096, i64 5, i64 5)
  store %struct.Memory* %call1_41f2b0, %struct.Memory** %MEMORY

  %loadMem2_41f2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f2b0 = load i64, i64* %3
  %call2_41f2b0 = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f2b0, %struct.Memory* %loadMem2_41f2b0)
  store %struct.Memory* %call2_41f2b0, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f2b5	 Bytes: 4
  %loadMem_41f2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2b5 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2b5)
  store %struct.Memory* %call_41f2b5, %struct.Memory** %MEMORY

  ; Code: je .L_41f341	 RIP: 41f2b9	 Bytes: 6
  %loadMem_41f2b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2b9 = call %struct.Memory* @routine_je_.L_41f341(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2b9, i8* %BRANCH_TAKEN, i64 136, i64 6, i64 6)
  store %struct.Memory* %call_41f2b9, %struct.Memory** %MEMORY

  %loadBr_41f2b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f2b9 = icmp eq i8 %loadBr_41f2b9, 1
  br i1 %cmpBr_41f2b9, label %block_.L_41f341, label %block_41f2bf

block_41f2bf:
  ; Code: movq $0x42945a, %rsi	 RIP: 41f2bf	 Bytes: 10
  %loadMem_41f2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2bf = call %struct.Memory* @routine_movq__0x42945a___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2bf)
  store %struct.Memory* %call_41f2bf, %struct.Memory** %MEMORY

  ; Code: movq $0x8661d8, %rdx	 RIP: 41f2c9	 Bytes: 10
  %loadMem_41f2c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2c9 = call %struct.Memory* @routine_movq__0x8661d8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2c9)
  store %struct.Memory* %call_41f2c9, %struct.Memory** %MEMORY

  ; Code: movq $0x86bd70, %rcx	 RIP: 41f2d3	 Bytes: 10
  %loadMem_41f2d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2d3 = call %struct.Memory* @routine_movq__0x86bd70___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2d3)
  store %struct.Memory* %call_41f2d3, %struct.Memory** %MEMORY

  ; Code: movq $0x62ea00, %r8	 RIP: 41f2dd	 Bytes: 10
  %loadMem_41f2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2dd = call %struct.Memory* @routine_movq__0x62ea00___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2dd)
  store %struct.Memory* %call_41f2dd, %struct.Memory** %MEMORY

  ; Code: movq $0x8a0a78, %r9	 RIP: 41f2e7	 Bytes: 10
  %loadMem_41f2e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2e7 = call %struct.Memory* @routine_movq__0x8a0a78___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2e7)
  store %struct.Memory* %call_41f2e7, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41f2f1	 Bytes: 7
  %loadMem_41f2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2f1 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2f1)
  store %struct.Memory* %call_41f2f1, %struct.Memory** %MEMORY

  ; Code: addq $0x6, %rax	 RIP: 41f2f8	 Bytes: 4
  %loadMem_41f2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2f8 = call %struct.Memory* @routine_addq__0x6___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2f8)
  store %struct.Memory* %call_41f2f8, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f2fc	 Bytes: 3
  %loadMem_41f2fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2fc = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2fc)
  store %struct.Memory* %call_41f2fc, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f2ff	 Bytes: 2
  %loadMem_41f2ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f2ff = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f2ff)
  store %struct.Memory* %call_41f2ff, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41f301	 Bytes: 5
  %loadMem1_41f301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f301 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f301, i64 -124289, i64 5, i64 5)
  store %struct.Memory* %call1_41f301, %struct.Memory** %MEMORY

  %loadMem2_41f301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f301 = load i64, i64* %3
  %call2_41f301 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41f301, %struct.Memory* %loadMem2_41f301)
  store %struct.Memory* %call2_41f301, %struct.Memory** %MEMORY

  ; Code: imull $0x1770, 0x86bd70, %r10d	 RIP: 41f306	 Bytes: 12
  %loadMem_41f306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f306 = call %struct.Memory* @routine_imull__0x1770__0x86bd70___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f306)
  store %struct.Memory* %call_41f306, %struct.Memory** %MEMORY

  ; Code: imull $0x64, 0x62ea00, %r11d	 RIP: 41f312	 Bytes: 9
  %loadMem_41f312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f312 = call %struct.Memory* @routine_imull__0x64__0x62ea00___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f312)
  store %struct.Memory* %call_41f312, %struct.Memory** %MEMORY

  ; Code: addl %r11d, %r10d	 RIP: 41f31b	 Bytes: 3
  %loadMem_41f31b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f31b = call %struct.Memory* @routine_addl__r11d___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f31b)
  store %struct.Memory* %call_41f31b, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x8a05b4	 RIP: 41f31e	 Bytes: 8
  %loadMem_41f31e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f31e = call %struct.Memory* @routine_movl__r10d__0x8a05b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f31e)
  store %struct.Memory* %call_41f31e, %struct.Memory** %MEMORY

  ; Code: movl 0x8a05b4, %r10d	 RIP: 41f326	 Bytes: 8
  %loadMem_41f326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f326 = call %struct.Memory* @routine_movl_0x8a05b4___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f326)
  store %struct.Memory* %call_41f326, %struct.Memory** %MEMORY

  ; Code: movl %r10d, 0x86bd64	 RIP: 41f32e	 Bytes: 8
  %loadMem_41f32e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f32e = call %struct.Memory* @routine_movl__r10d__0x86bd64(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f32e)
  store %struct.Memory* %call_41f32e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6294(%rbp)	 RIP: 41f336	 Bytes: 6
  %loadMem_41f336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f336 = call %struct.Memory* @routine_movl__eax__MINUS0x6294__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f336)
  store %struct.Memory* %call_41f336, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41f3a8	 RIP: 41f33c	 Bytes: 5
  %loadMem_41f33c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f33c = call %struct.Memory* @routine_jmpq_.L_41f3a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f33c, i64 108, i64 5)
  store %struct.Memory* %call_41f33c, %struct.Memory** %MEMORY

  br label %block_.L_41f3a8

  ; Code: .L_41f341:	 RIP: 41f341	 Bytes: 0
block_.L_41f341:

  ; Code: movq $0x429466, %rsi	 RIP: 41f341	 Bytes: 10
  %loadMem_41f341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f341 = call %struct.Memory* @routine_movq__0x429466___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f341)
  store %struct.Memory* %call_41f341, %struct.Memory** %MEMORY

  ; Code: movq $0x8661d8, %rdx	 RIP: 41f34b	 Bytes: 10
  %loadMem_41f34b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f34b = call %struct.Memory* @routine_movq__0x8661d8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f34b)
  store %struct.Memory* %call_41f34b, %struct.Memory** %MEMORY

  ; Code: movq $0x86bd70, %rcx	 RIP: 41f355	 Bytes: 10
  %loadMem_41f355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f355 = call %struct.Memory* @routine_movq__0x86bd70___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f355)
  store %struct.Memory* %call_41f355, %struct.Memory** %MEMORY

  ; Code: movq $0x8a0a78, %r8	 RIP: 41f35f	 Bytes: 10
  %loadMem_41f35f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f35f = call %struct.Memory* @routine_movq__0x8a0a78___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f35f)
  store %struct.Memory* %call_41f35f, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41f369	 Bytes: 7
  %loadMem_41f369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f369 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f369)
  store %struct.Memory* %call_41f369, %struct.Memory** %MEMORY

  ; Code: addq $0x6, %rax	 RIP: 41f370	 Bytes: 4
  %loadMem_41f370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f370 = call %struct.Memory* @routine_addq__0x6___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f370)
  store %struct.Memory* %call_41f370, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f374	 Bytes: 3
  %loadMem_41f374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f374 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f374)
  store %struct.Memory* %call_41f374, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f377	 Bytes: 2
  %loadMem_41f377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f377 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f377)
  store %struct.Memory* %call_41f377, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41f379	 Bytes: 5
  %loadMem1_41f379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f379 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f379, i64 -124409, i64 5, i64 5)
  store %struct.Memory* %call1_41f379, %struct.Memory** %MEMORY

  %loadMem2_41f379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f379 = load i64, i64* %3
  %call2_41f379 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41f379, %struct.Memory* %loadMem2_41f379)
  store %struct.Memory* %call2_41f379, %struct.Memory** %MEMORY

  ; Code: imull $0x1770, 0x86bd70, %r9d	 RIP: 41f37e	 Bytes: 12
  %loadMem_41f37e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f37e = call %struct.Memory* @routine_imull__0x1770__0x86bd70___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f37e)
  store %struct.Memory* %call_41f37e, %struct.Memory** %MEMORY

  ; Code: movl %r9d, 0x8a05b4	 RIP: 41f38a	 Bytes: 8
  %loadMem_41f38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f38a = call %struct.Memory* @routine_movl__r9d__0x8a05b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f38a)
  store %struct.Memory* %call_41f38a, %struct.Memory** %MEMORY

  ; Code: movl 0x8a05b4, %r9d	 RIP: 41f392	 Bytes: 8
  %loadMem_41f392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f392 = call %struct.Memory* @routine_movl_0x8a05b4___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f392)
  store %struct.Memory* %call_41f392, %struct.Memory** %MEMORY

  ; Code: movl %r9d, 0x86bd64	 RIP: 41f39a	 Bytes: 8
  %loadMem_41f39a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f39a = call %struct.Memory* @routine_movl__r9d__0x86bd64(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f39a)
  store %struct.Memory* %call_41f39a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6298(%rbp)	 RIP: 41f3a2	 Bytes: 6
  %loadMem_41f3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3a2 = call %struct.Memory* @routine_movl__eax__MINUS0x6298__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3a2)
  store %struct.Memory* %call_41f3a2, %struct.Memory** %MEMORY

  ; Code: .L_41f3a8:	 RIP: 41f3a8	 Bytes: 0
  br label %block_.L_41f3a8
block_.L_41f3a8:

  ; Code: movl $0x0, 0x886b80	 RIP: 41f3a8	 Bytes: 11
  %loadMem_41f3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3a8 = call %struct.Memory* @routine_movl__0x0__0x886b80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3a8)
  store %struct.Memory* %call_41f3a8, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x86bd88	 RIP: 41f3b3	 Bytes: 11
  %loadMem_41f3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3b3 = call %struct.Memory* @routine_movl__0x0__0x86bd88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3b3)
  store %struct.Memory* %call_41f3b3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420443	 RIP: 41f3be	 Bytes: 5
  %loadMem_41f3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3be = call %struct.Memory* @routine_jmpq_.L_420443(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3be, i64 4229, i64 5)
  store %struct.Memory* %call_41f3be, %struct.Memory** %MEMORY

  br label %block_.L_420443

  ; Code: .L_41f3c3:	 RIP: 41f3c3	 Bytes: 0
block_.L_41f3c3:

  ; Code: movq $0x42946f, %rsi	 RIP: 41f3c3	 Bytes: 10
  %loadMem_41f3c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3c3 = call %struct.Memory* @routine_movq__0x42946f___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3c3)
  store %struct.Memory* %call_41f3c3, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %eax	 RIP: 41f3cd	 Bytes: 5
  %loadMem_41f3cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3cd = call %struct.Memory* @routine_movl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3cd)
  store %struct.Memory* %call_41f3cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f3d2	 Bytes: 2
  %loadMem_41f3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3d2 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3d2)
  store %struct.Memory* %call_41f3d2, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f3d4	 Bytes: 7
  %loadMem_41f3d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3d4 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3d4)
  store %struct.Memory* %call_41f3d4, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f3db	 Bytes: 5
  %loadMem1_41f3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f3db = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f3db, i64 -124795, i64 5, i64 5)
  store %struct.Memory* %call1_41f3db, %struct.Memory** %MEMORY

  %loadMem2_41f3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f3db = load i64, i64* %3
  %call2_41f3db = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f3db, %struct.Memory* %loadMem2_41f3db)
  store %struct.Memory* %call2_41f3db, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f3e0	 Bytes: 3
  %loadMem_41f3e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3e0 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3e0)
  store %struct.Memory* %call_41f3e0, %struct.Memory** %MEMORY

  ; Code: jne .L_41f459	 RIP: 41f3e3	 Bytes: 6
  %loadMem_41f3e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3e3 = call %struct.Memory* @routine_jne_.L_41f459(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3e3, i8* %BRANCH_TAKEN, i64 118, i64 6, i64 6)
  store %struct.Memory* %call_41f3e3, %struct.Memory** %MEMORY

  %loadBr_41f3e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f3e3 = icmp eq i8 %loadBr_41f3e3, 1
  br i1 %cmpBr_41f3e3, label %block_.L_41f459, label %block_41f3e9

block_41f3e9:
  ; Code: movq $0x429469, %rsi	 RIP: 41f3e9	 Bytes: 10
  %loadMem_41f3e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3e9 = call %struct.Memory* @routine_movq__0x429469___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3e9)
  store %struct.Memory* %call_41f3e9, %struct.Memory** %MEMORY

  ; Code: movq $0x880b14, %rdx	 RIP: 41f3f3	 Bytes: 10
  %loadMem_41f3f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3f3 = call %struct.Memory* @routine_movq__0x880b14___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3f3)
  store %struct.Memory* %call_41f3f3, %struct.Memory** %MEMORY

  ; Code: movq $0x886bc4, %rcx	 RIP: 41f3fd	 Bytes: 10
  %loadMem_41f3fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f3fd = call %struct.Memory* @routine_movq__0x886bc4___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f3fd)
  store %struct.Memory* %call_41f3fd, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41f407	 Bytes: 7
  %loadMem_41f407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f407 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f407)
  store %struct.Memory* %call_41f407, %struct.Memory** %MEMORY

  ; Code: addq $0x7, %rax	 RIP: 41f40e	 Bytes: 4
  %loadMem_41f40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f40e = call %struct.Memory* @routine_addq__0x7___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f40e)
  store %struct.Memory* %call_41f40e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f412	 Bytes: 3
  %loadMem_41f412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f412 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f412)
  store %struct.Memory* %call_41f412, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f415	 Bytes: 2
  %loadMem_41f415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f415 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f415)
  store %struct.Memory* %call_41f415, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41f417	 Bytes: 5
  %loadMem1_41f417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f417 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f417, i64 -124567, i64 5, i64 5)
  store %struct.Memory* %call1_41f417, %struct.Memory** %MEMORY

  %loadMem2_41f417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f417 = load i64, i64* %3
  %call2_41f417 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41f417, %struct.Memory* %loadMem2_41f417)
  store %struct.Memory* %call2_41f417, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x880b14	 RIP: 41f41c	 Bytes: 8
  %loadMem_41f41c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f41c = call %struct.Memory* @routine_cmpl__0x0__0x880b14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f41c)
  store %struct.Memory* %call_41f41c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x629c(%rbp)	 RIP: 41f424	 Bytes: 6
  %loadMem_41f424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f424 = call %struct.Memory* @routine_movl__eax__MINUS0x629c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f424)
  store %struct.Memory* %call_41f424, %struct.Memory** %MEMORY

  ; Code: jne .L_41f43b	 RIP: 41f42a	 Bytes: 6
  %loadMem_41f42a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f42a = call %struct.Memory* @routine_jne_.L_41f43b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f42a, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41f42a, %struct.Memory** %MEMORY

  %loadBr_41f42a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f42a = icmp eq i8 %loadBr_41f42a, 1
  br i1 %cmpBr_41f42a, label %block_.L_41f43b, label %block_41f430

block_41f430:
  ; Code: movl $0x7d0, 0x880b14	 RIP: 41f430	 Bytes: 11
  %loadMem_41f430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f430 = call %struct.Memory* @routine_movl__0x7d0__0x880b14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f430)
  store %struct.Memory* %call_41f430, %struct.Memory** %MEMORY

  ; Code: .L_41f43b:	 RIP: 41f43b	 Bytes: 0
  br label %block_.L_41f43b
block_.L_41f43b:

  ; Code: cmpl $0x0, 0x886bc4	 RIP: 41f43b	 Bytes: 8
  %loadMem_41f43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f43b = call %struct.Memory* @routine_cmpl__0x0__0x886bc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f43b)
  store %struct.Memory* %call_41f43b, %struct.Memory** %MEMORY

  ; Code: jne .L_41f454	 RIP: 41f443	 Bytes: 6
  %loadMem_41f443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f443 = call %struct.Memory* @routine_jne_.L_41f454(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f443, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41f443, %struct.Memory** %MEMORY

  %loadBr_41f443 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f443 = icmp eq i8 %loadBr_41f443, 1
  br i1 %cmpBr_41f443, label %block_.L_41f454, label %block_41f449

block_41f449:
  ; Code: movl $0x7d0, 0x886bc4	 RIP: 41f449	 Bytes: 11
  %loadMem_41f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f449 = call %struct.Memory* @routine_movl__0x7d0__0x886bc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f449)
  store %struct.Memory* %call_41f449, %struct.Memory** %MEMORY

  ; Code: .L_41f454:	 RIP: 41f454	 Bytes: 0
  br label %block_.L_41f454
block_.L_41f454:

  ; Code: jmpq .L_42043e	 RIP: 41f454	 Bytes: 5
  %loadMem_41f454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f454 = call %struct.Memory* @routine_jmpq_.L_42043e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f454, i64 4074, i64 5)
  store %struct.Memory* %call_41f454, %struct.Memory** %MEMORY

  br label %block_.L_42043e

  ; Code: .L_41f459:	 RIP: 41f459	 Bytes: 0
block_.L_41f459:

  ; Code: movq $0x429476, %rsi	 RIP: 41f459	 Bytes: 10
  %loadMem_41f459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f459 = call %struct.Memory* @routine_movq__0x429476___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f459)
  store %struct.Memory* %call_41f459, %struct.Memory** %MEMORY

  ; Code: movl $0x7, %eax	 RIP: 41f463	 Bytes: 5
  %loadMem_41f463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f463 = call %struct.Memory* @routine_movl__0x7___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f463)
  store %struct.Memory* %call_41f463, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f468	 Bytes: 2
  %loadMem_41f468 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f468 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f468)
  store %struct.Memory* %call_41f468, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f46a	 Bytes: 7
  %loadMem_41f46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f46a = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f46a)
  store %struct.Memory* %call_41f46a, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f471	 Bytes: 5
  %loadMem1_41f471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f471 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f471, i64 -124945, i64 5, i64 5)
  store %struct.Memory* %call1_41f471, %struct.Memory** %MEMORY

  %loadMem2_41f471 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f471 = load i64, i64* %3
  %call2_41f471 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f471, %struct.Memory* %loadMem2_41f471)
  store %struct.Memory* %call2_41f471, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f476	 Bytes: 3
  %loadMem_41f476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f476 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f476)
  store %struct.Memory* %call_41f476, %struct.Memory** %MEMORY

  ; Code: jne .L_41f490	 RIP: 41f479	 Bytes: 6
  %loadMem_41f479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f479 = call %struct.Memory* @routine_jne_.L_41f490(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f479, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_41f479, %struct.Memory** %MEMORY

  %loadBr_41f479 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f479 = icmp eq i8 %loadBr_41f479, 1
  br i1 %cmpBr_41f479, label %block_.L_41f490, label %block_41f47f

block_41f47f:
  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f47f	 Bytes: 7
  %loadMem_41f47f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f47f = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f47f)
  store %struct.Memory* %call_41f47f, %struct.Memory** %MEMORY

  ; Code: callq .ProcessHoldings	 RIP: 41f486	 Bytes: 5
  %loadMem1_41f486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f486 = call %struct.Memory* @routine_callq_.ProcessHoldings(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f486, i64 -120998, i64 5, i64 5)
  store %struct.Memory* %call1_41f486, %struct.Memory** %MEMORY

  %loadMem2_41f486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f486 = load i64, i64* %3
  %call2_41f486 = call %struct.Memory* @sub_401be0.ProcessHoldings(%struct.State* %0, i64  %loadPC_41f486, %struct.Memory* %loadMem2_41f486)
  store %struct.Memory* %call2_41f486, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420439	 RIP: 41f48b	 Bytes: 5
  %loadMem_41f48b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f48b = call %struct.Memory* @routine_jmpq_.L_420439(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f48b, i64 4014, i64 5)
  store %struct.Memory* %call_41f48b, %struct.Memory** %MEMORY

  br label %block_.L_420439

  ; Code: .L_41f490:	 RIP: 41f490	 Bytes: 0
block_.L_41f490:

  ; Code: movq $0x42947e, %rsi	 RIP: 41f490	 Bytes: 10
  %loadMem_41f490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f490 = call %struct.Memory* @routine_movq__0x42947e___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f490)
  store %struct.Memory* %call_41f490, %struct.Memory** %MEMORY

  ; Code: movl $0x7, %eax	 RIP: 41f49a	 Bytes: 5
  %loadMem_41f49a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f49a = call %struct.Memory* @routine_movl__0x7___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f49a)
  store %struct.Memory* %call_41f49a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f49f	 Bytes: 2
  %loadMem_41f49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f49f = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f49f)
  store %struct.Memory* %call_41f49f, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f4a1	 Bytes: 7
  %loadMem_41f4a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4a1 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4a1)
  store %struct.Memory* %call_41f4a1, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f4a8	 Bytes: 5
  %loadMem1_41f4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f4a8 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f4a8, i64 -125000, i64 5, i64 5)
  store %struct.Memory* %call1_41f4a8, %struct.Memory** %MEMORY

  %loadMem2_41f4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f4a8 = load i64, i64* %3
  %call2_41f4a8 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f4a8, %struct.Memory* %loadMem2_41f4a8)
  store %struct.Memory* %call2_41f4a8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f4ad	 Bytes: 3
  %loadMem_41f4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4ad = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4ad)
  store %struct.Memory* %call_41f4ad, %struct.Memory** %MEMORY

  ; Code: jne .L_41f6ec	 RIP: 41f4b0	 Bytes: 6
  %loadMem_41f4b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4b0 = call %struct.Memory* @routine_jne_.L_41f6ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4b0, i8* %BRANCH_TAKEN, i64 572, i64 6, i64 6)
  store %struct.Memory* %call_41f4b0, %struct.Memory** %MEMORY

  %loadBr_41f4b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f4b0 = icmp eq i8 %loadBr_41f4b0, 1
  br i1 %cmpBr_41f4b0, label %block_.L_41f6ec, label %block_41f4b6

block_41f4b6:
  ; Code: movq $0x429486, %rsi	 RIP: 41f4b6	 Bytes: 10
  %loadMem_41f4b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4b6 = call %struct.Memory* @routine_movq__0x429486___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4b6)
  store %struct.Memory* %call_41f4b6, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f4c0	 Bytes: 7
  %loadMem_41f4c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4c0 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4c0)
  store %struct.Memory* %call_41f4c0, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f4c7	 Bytes: 5
  %loadMem1_41f4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f4c7 = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f4c7, i64 -124631, i64 5, i64 5)
  store %struct.Memory* %call1_41f4c7, %struct.Memory** %MEMORY

  %loadMem2_41f4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f4c7 = load i64, i64* %3
  %call2_41f4c7 = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f4c7, %struct.Memory* %loadMem2_41f4c7)
  store %struct.Memory* %call2_41f4c7, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f4cc	 Bytes: 4
  %loadMem_41f4cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4cc = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4cc)
  store %struct.Memory* %call_41f4cc, %struct.Memory** %MEMORY

  ; Code: je .L_41f50a	 RIP: 41f4d0	 Bytes: 6
  %loadMem_41f4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4d0 = call %struct.Memory* @routine_je_.L_41f50a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4d0, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_41f4d0, %struct.Memory** %MEMORY

  %loadBr_41f4d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f4d0 = icmp eq i8 %loadBr_41f4d0, 1
  br i1 %cmpBr_41f4d0, label %block_.L_41f50a, label %block_41f4d6

block_41f4d6:
  ; Code: movq $0x62dab0, %rax	 RIP: 41f4d6	 Bytes: 10
  %loadMem_41f4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4d6 = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4d6)
  store %struct.Memory* %call_41f4d6, %struct.Memory** %MEMORY

  ; Code: movq $0x62c130, %rcx	 RIP: 41f4e0	 Bytes: 10
  %loadMem_41f4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4e0 = call %struct.Memory* @routine_movq__0x62c130___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4e0)
  store %struct.Memory* %call_41f4e0, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41f4ea	 Bytes: 5
  %loadMem_41f4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4ea = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4ea)
  store %struct.Memory* %call_41f4ea, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x85f154	 RIP: 41f4ef	 Bytes: 11
  %loadMem_41f4ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4ef = call %struct.Memory* @routine_movl__0x2__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4ef)
  store %struct.Memory* %call_41f4ef, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f4fa	 Bytes: 3
  %loadMem_41f4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4fa = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4fa)
  store %struct.Memory* %call_41f4fa, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41f4fd	 Bytes: 3
  %loadMem_41f4fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f4fd = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f4fd)
  store %struct.Memory* %call_41f4fd, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41f500	 Bytes: 5
  %loadMem1_41f500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f500 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f500, i64 -124864, i64 5, i64 5)
  store %struct.Memory* %call1_41f500, %struct.Memory** %MEMORY

  %loadMem2_41f500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f500 = load i64, i64* %3
  %call2_41f500 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41f500, %struct.Memory* %loadMem2_41f500)
  store %struct.Memory* %call2_41f500, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41f6d8	 RIP: 41f505	 Bytes: 5
  %loadMem_41f505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f505 = call %struct.Memory* @routine_jmpq_.L_41f6d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f505, i64 467, i64 5)
  store %struct.Memory* %call_41f505, %struct.Memory** %MEMORY

  br label %block_.L_41f6d8

  ; Code: .L_41f50a:	 RIP: 41f50a	 Bytes: 0
block_.L_41f50a:

  ; Code: movq $0x42948d, %rsi	 RIP: 41f50a	 Bytes: 10
  %loadMem_41f50a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f50a = call %struct.Memory* @routine_movq__0x42948d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f50a)
  store %struct.Memory* %call_41f50a, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f514	 Bytes: 7
  %loadMem_41f514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f514 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f514)
  store %struct.Memory* %call_41f514, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f51b	 Bytes: 5
  %loadMem1_41f51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f51b = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f51b, i64 -124715, i64 5, i64 5)
  store %struct.Memory* %call1_41f51b, %struct.Memory** %MEMORY

  %loadMem2_41f51b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f51b = load i64, i64* %3
  %call2_41f51b = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f51b, %struct.Memory* %loadMem2_41f51b)
  store %struct.Memory* %call2_41f51b, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f520	 Bytes: 4
  %loadMem_41f520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f520 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f520)
  store %struct.Memory* %call_41f520, %struct.Memory** %MEMORY

  ; Code: je .L_41f55e	 RIP: 41f524	 Bytes: 6
  %loadMem_41f524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f524 = call %struct.Memory* @routine_je_.L_41f55e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f524, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_41f524, %struct.Memory** %MEMORY

  %loadBr_41f524 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f524 = icmp eq i8 %loadBr_41f524, 1
  br i1 %cmpBr_41f524, label %block_.L_41f55e, label %block_41f52a

block_41f52a:
  ; Code: movq $0x62dab0, %rax	 RIP: 41f52a	 Bytes: 10
  %loadMem_41f52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f52a = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f52a)
  store %struct.Memory* %call_41f52a, %struct.Memory** %MEMORY

  ; Code: movq $0x62c170, %rcx	 RIP: 41f534	 Bytes: 10
  %loadMem_41f534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f534 = call %struct.Memory* @routine_movq__0x62c170___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f534)
  store %struct.Memory* %call_41f534, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41f53e	 Bytes: 5
  %loadMem_41f53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f53e = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f53e)
  store %struct.Memory* %call_41f53e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x85f154	 RIP: 41f543	 Bytes: 11
  %loadMem_41f543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f543 = call %struct.Memory* @routine_movl__0x0__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f543)
  store %struct.Memory* %call_41f543, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f54e	 Bytes: 3
  %loadMem_41f54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f54e = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f54e)
  store %struct.Memory* %call_41f54e, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41f551	 Bytes: 3
  %loadMem_41f551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f551 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f551)
  store %struct.Memory* %call_41f551, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41f554	 Bytes: 5
  %loadMem1_41f554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f554 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f554, i64 -124948, i64 5, i64 5)
  store %struct.Memory* %call1_41f554, %struct.Memory** %MEMORY

  %loadMem2_41f554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f554 = load i64, i64* %3
  %call2_41f554 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41f554, %struct.Memory* %loadMem2_41f554)
  store %struct.Memory* %call2_41f554, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41f6d3	 RIP: 41f559	 Bytes: 5
  %loadMem_41f559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f559 = call %struct.Memory* @routine_jmpq_.L_41f6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f559, i64 378, i64 5)
  store %struct.Memory* %call_41f559, %struct.Memory** %MEMORY

  br label %block_.L_41f6d3

  ; Code: .L_41f55e:	 RIP: 41f55e	 Bytes: 0
block_.L_41f55e:

  ; Code: movq $0x429498, %rsi	 RIP: 41f55e	 Bytes: 10
  %loadMem_41f55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f55e = call %struct.Memory* @routine_movq__0x429498___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f55e)
  store %struct.Memory* %call_41f55e, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f568	 Bytes: 7
  %loadMem_41f568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f568 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f568)
  store %struct.Memory* %call_41f568, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f56f	 Bytes: 5
  %loadMem1_41f56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f56f = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f56f, i64 -124799, i64 5, i64 5)
  store %struct.Memory* %call1_41f56f, %struct.Memory** %MEMORY

  %loadMem2_41f56f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f56f = load i64, i64* %3
  %call2_41f56f = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f56f, %struct.Memory* %loadMem2_41f56f)
  store %struct.Memory* %call2_41f56f, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f574	 Bytes: 4
  %loadMem_41f574 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f574 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f574)
  store %struct.Memory* %call_41f574, %struct.Memory** %MEMORY

  ; Code: je .L_41f5b2	 RIP: 41f578	 Bytes: 6
  %loadMem_41f578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f578 = call %struct.Memory* @routine_je_.L_41f5b2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f578, i8* %BRANCH_TAKEN, i64 58, i64 6, i64 6)
  store %struct.Memory* %call_41f578, %struct.Memory** %MEMORY

  %loadBr_41f578 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f578 = icmp eq i8 %loadBr_41f578, 1
  br i1 %cmpBr_41f578, label %block_.L_41f5b2, label %block_41f57e

block_41f57e:
  ; Code: movq $0x62dab0, %rax	 RIP: 41f57e	 Bytes: 10
  %loadMem_41f57e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f57e = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f57e)
  store %struct.Memory* %call_41f57e, %struct.Memory** %MEMORY

  ; Code: movq $0x62c170, %rcx	 RIP: 41f588	 Bytes: 10
  %loadMem_41f588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f588 = call %struct.Memory* @routine_movq__0x62c170___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f588)
  store %struct.Memory* %call_41f588, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41f592	 Bytes: 5
  %loadMem_41f592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f592 = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f592)
  store %struct.Memory* %call_41f592, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x85f154	 RIP: 41f597	 Bytes: 11
  %loadMem_41f597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f597 = call %struct.Memory* @routine_movl__0x1__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f597)
  store %struct.Memory* %call_41f597, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f5a2	 Bytes: 3
  %loadMem_41f5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5a2 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5a2)
  store %struct.Memory* %call_41f5a2, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41f5a5	 Bytes: 3
  %loadMem_41f5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5a5 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5a5)
  store %struct.Memory* %call_41f5a5, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41f5a8	 Bytes: 5
  %loadMem1_41f5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f5a8 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f5a8, i64 -125032, i64 5, i64 5)
  store %struct.Memory* %call1_41f5a8, %struct.Memory** %MEMORY

  %loadMem2_41f5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f5a8 = load i64, i64* %3
  %call2_41f5a8 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41f5a8, %struct.Memory* %loadMem2_41f5a8)
  store %struct.Memory* %call2_41f5a8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41f6ce	 RIP: 41f5ad	 Bytes: 5
  %loadMem_41f5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5ad = call %struct.Memory* @routine_jmpq_.L_41f6ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5ad, i64 289, i64 5)
  store %struct.Memory* %call_41f5ad, %struct.Memory** %MEMORY

  br label %block_.L_41f6ce

  ; Code: .L_41f5b2:	 RIP: 41f5b2	 Bytes: 0
block_.L_41f5b2:

  ; Code: movq $0x4294a1, %rsi	 RIP: 41f5b2	 Bytes: 10
  %loadMem_41f5b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5b2 = call %struct.Memory* @routine_movq__0x4294a1___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5b2)
  store %struct.Memory* %call_41f5b2, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f5bc	 Bytes: 7
  %loadMem_41f5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5bc = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5bc)
  store %struct.Memory* %call_41f5bc, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f5c3	 Bytes: 5
  %loadMem1_41f5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f5c3 = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f5c3, i64 -124883, i64 5, i64 5)
  store %struct.Memory* %call1_41f5c3, %struct.Memory** %MEMORY

  %loadMem2_41f5c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f5c3 = load i64, i64* %3
  %call2_41f5c3 = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f5c3, %struct.Memory* %loadMem2_41f5c3)
  store %struct.Memory* %call2_41f5c3, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f5c8	 Bytes: 4
  %loadMem_41f5c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5c8 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5c8)
  store %struct.Memory* %call_41f5c8, %struct.Memory** %MEMORY

  ; Code: je .L_41f611	 RIP: 41f5cc	 Bytes: 6
  %loadMem_41f5cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5cc = call %struct.Memory* @routine_je_.L_41f611(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5cc, i8* %BRANCH_TAKEN, i64 69, i64 6, i64 6)
  store %struct.Memory* %call_41f5cc, %struct.Memory** %MEMORY

  %loadBr_41f5cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f5cc = icmp eq i8 %loadBr_41f5cc, 1
  br i1 %cmpBr_41f5cc, label %block_.L_41f611, label %block_41f5d2

block_41f5d2:
  ; Code: movq $0x62dab0, %rax	 RIP: 41f5d2	 Bytes: 10
  %loadMem_41f5d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5d2 = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5d2)
  store %struct.Memory* %call_41f5d2, %struct.Memory** %MEMORY

  ; Code: movq $0x62c1b0, %rcx	 RIP: 41f5dc	 Bytes: 10
  %loadMem_41f5dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5dc = call %struct.Memory* @routine_movq__0x62c1b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5dc)
  store %struct.Memory* %call_41f5dc, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41f5e6	 Bytes: 5
  %loadMem_41f5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5e6 = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5e6)
  store %struct.Memory* %call_41f5e6, %struct.Memory** %MEMORY

  ; Code: movl $0x3, 0x85f154	 RIP: 41f5eb	 Bytes: 11
  %loadMem_41f5eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5eb = call %struct.Memory* @routine_movl__0x3__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5eb)
  store %struct.Memory* %call_41f5eb, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b88	 RIP: 41f5f6	 Bytes: 11
  %loadMem_41f5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f5f6 = call %struct.Memory* @routine_movl__0x0__0x886b88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f5f6)
  store %struct.Memory* %call_41f5f6, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f601	 Bytes: 3
  %loadMem_41f601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f601 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f601)
  store %struct.Memory* %call_41f601, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41f604	 Bytes: 3
  %loadMem_41f604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f604 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f604)
  store %struct.Memory* %call_41f604, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41f607	 Bytes: 5
  %loadMem1_41f607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f607 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f607, i64 -125127, i64 5, i64 5)
  store %struct.Memory* %call1_41f607, %struct.Memory** %MEMORY

  %loadMem2_41f607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f607 = load i64, i64* %3
  %call2_41f607 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41f607, %struct.Memory* %loadMem2_41f607)
  store %struct.Memory* %call2_41f607, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41f6c9	 RIP: 41f60c	 Bytes: 5
  %loadMem_41f60c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f60c = call %struct.Memory* @routine_jmpq_.L_41f6c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f60c, i64 189, i64 5)
  store %struct.Memory* %call_41f60c, %struct.Memory** %MEMORY

  br label %block_.L_41f6c9

  ; Code: .L_41f611:	 RIP: 41f611	 Bytes: 0
block_.L_41f611:

  ; Code: movq $0x4294a9, %rsi	 RIP: 41f611	 Bytes: 10
  %loadMem_41f611 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f611 = call %struct.Memory* @routine_movq__0x4294a9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f611)
  store %struct.Memory* %call_41f611, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f61b	 Bytes: 7
  %loadMem_41f61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f61b = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f61b)
  store %struct.Memory* %call_41f61b, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f622	 Bytes: 5
  %loadMem1_41f622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f622 = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f622, i64 -124978, i64 5, i64 5)
  store %struct.Memory* %call1_41f622, %struct.Memory** %MEMORY

  %loadMem2_41f622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f622 = load i64, i64* %3
  %call2_41f622 = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f622, %struct.Memory* %loadMem2_41f622)
  store %struct.Memory* %call2_41f622, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f627	 Bytes: 4
  %loadMem_41f627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f627 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f627)
  store %struct.Memory* %call_41f627, %struct.Memory** %MEMORY

  ; Code: je .L_41f670	 RIP: 41f62b	 Bytes: 6
  %loadMem_41f62b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f62b = call %struct.Memory* @routine_je_.L_41f670(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f62b, i8* %BRANCH_TAKEN, i64 69, i64 6, i64 6)
  store %struct.Memory* %call_41f62b, %struct.Memory** %MEMORY

  %loadBr_41f62b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f62b = icmp eq i8 %loadBr_41f62b, 1
  br i1 %cmpBr_41f62b, label %block_.L_41f670, label %block_41f631

block_41f631:
  ; Code: movq $0x62dab0, %rax	 RIP: 41f631	 Bytes: 10
  %loadMem_41f631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f631 = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f631)
  store %struct.Memory* %call_41f631, %struct.Memory** %MEMORY

  ; Code: movq $0x62c1b0, %rcx	 RIP: 41f63b	 Bytes: 10
  %loadMem_41f63b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f63b = call %struct.Memory* @routine_movq__0x62c1b0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f63b)
  store %struct.Memory* %call_41f63b, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41f645	 Bytes: 5
  %loadMem_41f645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f645 = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f645)
  store %struct.Memory* %call_41f645, %struct.Memory** %MEMORY

  ; Code: movl $0x3, 0x85f154	 RIP: 41f64a	 Bytes: 11
  %loadMem_41f64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f64a = call %struct.Memory* @routine_movl__0x3__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f64a)
  store %struct.Memory* %call_41f64a, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x886b88	 RIP: 41f655	 Bytes: 11
  %loadMem_41f655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f655 = call %struct.Memory* @routine_movl__0x1__0x886b88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f655)
  store %struct.Memory* %call_41f655, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f660	 Bytes: 3
  %loadMem_41f660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f660 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f660)
  store %struct.Memory* %call_41f660, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41f663	 Bytes: 3
  %loadMem_41f663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f663 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f663)
  store %struct.Memory* %call_41f663, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41f666	 Bytes: 5
  %loadMem1_41f666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f666 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f666, i64 -125222, i64 5, i64 5)
  store %struct.Memory* %call1_41f666, %struct.Memory** %MEMORY

  %loadMem2_41f666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f666 = load i64, i64* %3
  %call2_41f666 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41f666, %struct.Memory* %loadMem2_41f666)
  store %struct.Memory* %call2_41f666, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41f6c4	 RIP: 41f66b	 Bytes: 5
  %loadMem_41f66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f66b = call %struct.Memory* @routine_jmpq_.L_41f6c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f66b, i64 89, i64 5)
  store %struct.Memory* %call_41f66b, %struct.Memory** %MEMORY

  br label %block_.L_41f6c4

  ; Code: .L_41f670:	 RIP: 41f670	 Bytes: 0
block_.L_41f670:

  ; Code: movq $0x4294b2, %rsi	 RIP: 41f670	 Bytes: 10
  %loadMem_41f670 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f670 = call %struct.Memory* @routine_movq__0x4294b2___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f670)
  store %struct.Memory* %call_41f670, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f67a	 Bytes: 7
  %loadMem_41f67a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f67a = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f67a)
  store %struct.Memory* %call_41f67a, %struct.Memory** %MEMORY

  ; Code: callq .strstr_plt	 RIP: 41f681	 Bytes: 5
  %loadMem1_41f681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f681 = call %struct.Memory* @routine_callq_.strstr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f681, i64 -125073, i64 5, i64 5)
  store %struct.Memory* %call1_41f681, %struct.Memory** %MEMORY

  %loadMem2_41f681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f681 = load i64, i64* %3
  %call2_41f681 = call %struct.Memory* @sub_400df0.strstr_plt(%struct.State* %0, i64  %loadPC_41f681, %struct.Memory* %loadMem2_41f681)
  store %struct.Memory* %call2_41f681, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 41f686	 Bytes: 4
  %loadMem_41f686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f686 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f686)
  store %struct.Memory* %call_41f686, %struct.Memory** %MEMORY

  ; Code: je .L_41f6bf	 RIP: 41f68a	 Bytes: 6
  %loadMem_41f68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f68a = call %struct.Memory* @routine_je_.L_41f6bf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f68a, i8* %BRANCH_TAKEN, i64 53, i64 6, i64 6)
  store %struct.Memory* %call_41f68a, %struct.Memory** %MEMORY

  %loadBr_41f68a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f68a = icmp eq i8 %loadBr_41f68a, 1
  br i1 %cmpBr_41f68a, label %block_.L_41f6bf, label %block_41f690

block_41f690:
  ; Code: movq $0x62dab0, %rax	 RIP: 41f690	 Bytes: 10
  %loadMem_41f690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f690 = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f690)
  store %struct.Memory* %call_41f690, %struct.Memory** %MEMORY

  ; Code: movq $0x62c1f0, %rcx	 RIP: 41f69a	 Bytes: 10
  %loadMem_41f69a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f69a = call %struct.Memory* @routine_movq__0x62c1f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f69a)
  store %struct.Memory* %call_41f69a, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41f6a4	 Bytes: 5
  %loadMem_41f6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6a4 = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6a4)
  store %struct.Memory* %call_41f6a4, %struct.Memory** %MEMORY

  ; Code: movl $0x4, 0x85f154	 RIP: 41f6a9	 Bytes: 11
  %loadMem_41f6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6a9 = call %struct.Memory* @routine_movl__0x4__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6a9)
  store %struct.Memory* %call_41f6a9, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f6b4	 Bytes: 3
  %loadMem_41f6b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6b4 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6b4)
  store %struct.Memory* %call_41f6b4, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41f6b7	 Bytes: 3
  %loadMem_41f6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6b7 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6b7)
  store %struct.Memory* %call_41f6b7, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41f6ba	 Bytes: 5
  %loadMem1_41f6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f6ba = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f6ba, i64 -125306, i64 5, i64 5)
  store %struct.Memory* %call1_41f6ba, %struct.Memory** %MEMORY

  %loadMem2_41f6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f6ba = load i64, i64* %3
  %call2_41f6ba = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41f6ba, %struct.Memory* %loadMem2_41f6ba)
  store %struct.Memory* %call2_41f6ba, %struct.Memory** %MEMORY

  ; Code: .L_41f6bf:	 RIP: 41f6bf	 Bytes: 0
  br label %block_.L_41f6bf
block_.L_41f6bf:

  ; Code: jmpq .L_41f6c4	 RIP: 41f6bf	 Bytes: 5
  %loadMem_41f6bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6bf = call %struct.Memory* @routine_jmpq_.L_41f6c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6bf, i64 5, i64 5)
  store %struct.Memory* %call_41f6bf, %struct.Memory** %MEMORY

  br label %block_.L_41f6c4

  ; Code: .L_41f6c4:	 RIP: 41f6c4	 Bytes: 0
block_.L_41f6c4:

  ; Code: jmpq .L_41f6c9	 RIP: 41f6c4	 Bytes: 5
  %loadMem_41f6c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6c4 = call %struct.Memory* @routine_jmpq_.L_41f6c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6c4, i64 5, i64 5)
  store %struct.Memory* %call_41f6c4, %struct.Memory** %MEMORY

  br label %block_.L_41f6c9

  ; Code: .L_41f6c9:	 RIP: 41f6c9	 Bytes: 0
block_.L_41f6c9:

  ; Code: jmpq .L_41f6ce	 RIP: 41f6c9	 Bytes: 5
  %loadMem_41f6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6c9 = call %struct.Memory* @routine_jmpq_.L_41f6ce(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6c9, i64 5, i64 5)
  store %struct.Memory* %call_41f6c9, %struct.Memory** %MEMORY

  br label %block_.L_41f6ce

  ; Code: .L_41f6ce:	 RIP: 41f6ce	 Bytes: 0
block_.L_41f6ce:

  ; Code: jmpq .L_41f6d3	 RIP: 41f6ce	 Bytes: 5
  %loadMem_41f6ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6ce = call %struct.Memory* @routine_jmpq_.L_41f6d3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6ce, i64 5, i64 5)
  store %struct.Memory* %call_41f6ce, %struct.Memory** %MEMORY

  br label %block_.L_41f6d3

  ; Code: .L_41f6d3:	 RIP: 41f6d3	 Bytes: 0
block_.L_41f6d3:

  ; Code: jmpq .L_41f6d8	 RIP: 41f6d3	 Bytes: 5
  %loadMem_41f6d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6d3 = call %struct.Memory* @routine_jmpq_.L_41f6d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6d3, i64 5, i64 5)
  store %struct.Memory* %call_41f6d3, %struct.Memory** %MEMORY

  br label %block_.L_41f6d8

  ; Code: .L_41f6d8:	 RIP: 41f6d8	 Bytes: 0
block_.L_41f6d8:

  ; Code: callq .initialize_hash	 RIP: 41f6d8	 Bytes: 5
  %loadMem1_41f6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f6d8 = call %struct.Memory* @routine_callq_.initialize_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f6d8, i64 3880, i64 5, i64 5)
  store %struct.Memory* %call1_41f6d8, %struct.Memory** %MEMORY

  %loadMem2_41f6d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f6d8 = load i64, i64* %3
  %call2_41f6d8 = call %struct.Memory* @sub_420600.initialize_hash(%struct.State* %0, i64  %loadPC_41f6d8, %struct.Memory* %loadMem2_41f6d8)
  store %struct.Memory* %call2_41f6d8, %struct.Memory** %MEMORY

  ; Code: callq .clear_tt	 RIP: 41f6dd	 Bytes: 5
  %loadMem1_41f6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f6dd = call %struct.Memory* @routine_callq_.clear_tt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f6dd, i64 3555, i64 5, i64 5)
  store %struct.Memory* %call1_41f6dd, %struct.Memory** %MEMORY

  %loadMem2_41f6dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f6dd = load i64, i64* %3
  %call2_41f6dd = call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64  %loadPC_41f6dd, %struct.Memory* %loadMem2_41f6dd)
  store %struct.Memory* %call2_41f6dd, %struct.Memory** %MEMORY

  ; Code: callq .reset_ecache	 RIP: 41f6e2	 Bytes: 5
  %loadMem1_41f6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f6e2 = call %struct.Memory* @routine_callq_.reset_ecache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f6e2, i64 -117458, i64 5, i64 5)
  store %struct.Memory* %call1_41f6e2, %struct.Memory** %MEMORY

  %loadMem2_41f6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f6e2 = load i64, i64* %3
  %call2_41f6e2 = call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* %0, i64  %loadPC_41f6e2, %struct.Memory* %loadMem2_41f6e2)
  store %struct.Memory* %call2_41f6e2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420434	 RIP: 41f6e7	 Bytes: 5
  %loadMem_41f6e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6e7 = call %struct.Memory* @routine_jmpq_.L_420434(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6e7, i64 3405, i64 5)
  store %struct.Memory* %call_41f6e7, %struct.Memory** %MEMORY

  br label %block_.L_420434

  ; Code: .L_41f6ec:	 RIP: 41f6ec	 Bytes: 0
block_.L_41f6ec:

  ; Code: movq $0x4294b9, %rsi	 RIP: 41f6ec	 Bytes: 10
  %loadMem_41f6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6ec = call %struct.Memory* @routine_movq__0x4294b9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6ec)
  store %struct.Memory* %call_41f6ec, %struct.Memory** %MEMORY

  ; Code: movl $0x7, %eax	 RIP: 41f6f6	 Bytes: 5
  %loadMem_41f6f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6f6 = call %struct.Memory* @routine_movl__0x7___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6f6)
  store %struct.Memory* %call_41f6f6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f6fb	 Bytes: 2
  %loadMem_41f6fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6fb = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6fb)
  store %struct.Memory* %call_41f6fb, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f6fd	 Bytes: 7
  %loadMem_41f6fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f6fd = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f6fd)
  store %struct.Memory* %call_41f6fd, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f704	 Bytes: 5
  %loadMem1_41f704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f704 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f704, i64 -125604, i64 5, i64 5)
  store %struct.Memory* %call1_41f704, %struct.Memory** %MEMORY

  %loadMem2_41f704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f704 = load i64, i64* %3
  %call2_41f704 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f704, %struct.Memory* %loadMem2_41f704)
  store %struct.Memory* %call2_41f704, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f709	 Bytes: 3
  %loadMem_41f709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f709 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f709)
  store %struct.Memory* %call_41f709, %struct.Memory** %MEMORY

  ; Code: jne .L_41f744	 RIP: 41f70c	 Bytes: 6
  %loadMem_41f70c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f70c = call %struct.Memory* @routine_jne_.L_41f744(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f70c, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_41f70c, %struct.Memory** %MEMORY

  %loadBr_41f70c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f70c = icmp eq i8 %loadBr_41f70c, 1
  br i1 %cmpBr_41f70c, label %block_.L_41f744, label %block_41f712

block_41f712:
  ; Code: leaq -0x6188(%rbp), %rdi	 RIP: 41f712	 Bytes: 7
  %loadMem_41f712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f712 = call %struct.Memory* @routine_leaq_MINUS0x6188__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f712)
  store %struct.Memory* %call_41f712, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x62e514	 RIP: 41f719	 Bytes: 11
  %loadMem_41f719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f719 = call %struct.Memory* @routine_movl__0x1__0x62e514(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f719)
  store %struct.Memory* %call_41f719, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x886bbc	 RIP: 41f724	 Bytes: 11
  %loadMem_41f724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f724 = call %struct.Memory* @routine_movl__0x1__0x886bbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f724)
  store %struct.Memory* %call_41f724, %struct.Memory** %MEMORY

  ; Code: callq .think	 RIP: 41f72f	 Bytes: 5
  %loadMem1_41f72f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f72f = call %struct.Memory* @routine_callq_.think(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f72f, i64 -19951, i64 5, i64 5)
  store %struct.Memory* %call1_41f72f, %struct.Memory** %MEMORY

  %loadMem2_41f72f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f72f = load i64, i64* %3
  %call2_41f72f = call %struct.Memory* @sub_41a940.think(%struct.State* %0, i64  %loadPC_41f72f, %struct.Memory* %loadMem2_41f72f)
  store %struct.Memory* %call2_41f72f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886bc0	 RIP: 41f734	 Bytes: 11
  %loadMem_41f734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f734 = call %struct.Memory* @routine_movl__0x0__0x886bc0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f734)
  store %struct.Memory* %call_41f734, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42042f	 RIP: 41f73f	 Bytes: 5
  %loadMem_41f73f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f73f = call %struct.Memory* @routine_jmpq_.L_42042f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f73f, i64 3312, i64 5)
  store %struct.Memory* %call_41f73f, %struct.Memory** %MEMORY

  br label %block_.L_42042f

  ; Code: .L_41f744:	 RIP: 41f744	 Bytes: 0
block_.L_41f744:

  ; Code: movq $0x4294c1, %rsi	 RIP: 41f744	 Bytes: 10
  %loadMem_41f744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f744 = call %struct.Memory* @routine_movq__0x4294c1___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f744)
  store %struct.Memory* %call_41f744, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41f74e	 Bytes: 5
  %loadMem_41f74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f74e = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f74e)
  store %struct.Memory* %call_41f74e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f753	 Bytes: 2
  %loadMem_41f753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f753 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f753)
  store %struct.Memory* %call_41f753, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f755	 Bytes: 7
  %loadMem_41f755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f755 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f755)
  store %struct.Memory* %call_41f755, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f75c	 Bytes: 5
  %loadMem1_41f75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f75c = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f75c, i64 -125692, i64 5, i64 5)
  store %struct.Memory* %call1_41f75c, %struct.Memory** %MEMORY

  %loadMem2_41f75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f75c = load i64, i64* %3
  %call2_41f75c = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f75c, %struct.Memory* %loadMem2_41f75c)
  store %struct.Memory* %call2_41f75c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f761	 Bytes: 3
  %loadMem_41f761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f761 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f761)
  store %struct.Memory* %call_41f761, %struct.Memory** %MEMORY

  ; Code: jne .L_41f80a	 RIP: 41f764	 Bytes: 6
  %loadMem_41f764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f764 = call %struct.Memory* @routine_jne_.L_41f80a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f764, i8* %BRANCH_TAKEN, i64 166, i64 6, i64 6)
  store %struct.Memory* %call_41f764, %struct.Memory** %MEMORY

  %loadBr_41f764 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f764 = icmp eq i8 %loadBr_41f764, 1
  br i1 %cmpBr_41f764, label %block_.L_41f80a, label %block_41f76a

block_41f76a:
  ; Code: movq $0x4294c6, %rdi	 RIP: 41f76a	 Bytes: 10
  %loadMem_41f76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f76a = call %struct.Memory* @routine_movq__0x4294c6___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f76a)
  store %struct.Memory* %call_41f76a, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea38, %esi	 RIP: 41f774	 Bytes: 7
  %loadMem_41f774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f774 = call %struct.Memory* @routine_movl_0x62ea38___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f774)
  store %struct.Memory* %call_41f774, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41f77b	 Bytes: 2
  %loadMem_41f77b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f77b = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f77b)
  store %struct.Memory* %call_41f77b, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41f77d	 Bytes: 5
  %loadMem1_41f77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f77d = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f77d, i64 -125645, i64 5, i64 5)
  store %struct.Memory* %call1_41f77d, %struct.Memory** %MEMORY

  %loadMem2_41f77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f77d = load i64, i64* %3
  %call2_41f77d = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41f77d, %struct.Memory* %loadMem2_41f77d)
  store %struct.Memory* %call2_41f77d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x62ea38	 RIP: 41f782	 Bytes: 8
  %loadMem_41f782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f782 = call %struct.Memory* @routine_cmpl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f782)
  store %struct.Memory* %call_41f782, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62a0(%rbp)	 RIP: 41f78a	 Bytes: 6
  %loadMem_41f78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f78a = call %struct.Memory* @routine_movl__eax__MINUS0x62a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f78a)
  store %struct.Memory* %call_41f78a, %struct.Memory** %MEMORY

  ; Code: jle .L_41f805	 RIP: 41f790	 Bytes: 6
  %loadMem_41f790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f790 = call %struct.Memory* @routine_jle_.L_41f805(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f790, i8* %BRANCH_TAKEN, i64 117, i64 6, i64 6)
  store %struct.Memory* %call_41f790, %struct.Memory** %MEMORY

  %loadBr_41f790 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f790 = icmp eq i8 %loadBr_41f790, 1
  br i1 %cmpBr_41f790, label %block_.L_41f805, label %block_41f796

block_41f796:
  ; Code: xorl %esi, %esi	 RIP: 41f796	 Bytes: 2
  %loadMem_41f796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f796 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f796)
  store %struct.Memory* %call_41f796, %struct.Memory** %MEMORY

  ; Code: leaq -0x3ba0(%rbp), %rax	 RIP: 41f798	 Bytes: 7
  %loadMem_41f798 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f798 = call %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f798)
  store %struct.Memory* %call_41f798, %struct.Memory** %MEMORY

  ; Code: leaq -0x6120(%rbp), %rcx	 RIP: 41f79f	 Bytes: 7
  %loadMem_41f79f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f79f = call %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f79f)
  store %struct.Memory* %call_41f79f, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea38, %edx	 RIP: 41f7a6	 Bytes: 7
  %loadMem_41f7a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7a6 = call %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7a6)
  store %struct.Memory* %call_41f7a6, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %edx	 RIP: 41f7ad	 Bytes: 3
  %loadMem_41f7ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7ad = call %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7ad)
  store %struct.Memory* %call_41f7ad, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x62ea38	 RIP: 41f7b0	 Bytes: 7
  %loadMem_41f7b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7b0 = call %struct.Memory* @routine_movl__edx__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7b0)
  store %struct.Memory* %call_41f7b0, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 41f7b7	 Bytes: 3
  %loadMem_41f7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7b7 = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7b7)
  store %struct.Memory* %call_41f7b7, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 41f7ba	 Bytes: 4
  %loadMem_41f7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7ba = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7ba)
  store %struct.Memory* %call_41f7ba, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 41f7be	 Bytes: 3
  %loadMem_41f7be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7be = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7be)
  store %struct.Memory* %call_41f7be, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rdi	 RIP: 41f7c1	 Bytes: 3
  %loadMem_41f7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7c1 = call %struct.Memory* @routine_movq___rcx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7c1)
  store %struct.Memory* %call_41f7c1, %struct.Memory** %MEMORY

  ; Code: movq %rdi, 0x880b20	 RIP: 41f7c4	 Bytes: 8
  %loadMem_41f7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7c4 = call %struct.Memory* @routine_movq__rdi__0x880b20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7c4)
  store %struct.Memory* %call_41f7c4, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 41f7cc	 Bytes: 4
  %loadMem_41f7cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7cc = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7cc)
  store %struct.Memory* %call_41f7cc, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x880b28	 RIP: 41f7d0	 Bytes: 8
  %loadMem_41f7d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7d0 = call %struct.Memory* @routine_movq__rcx__0x880b28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7d0)
  store %struct.Memory* %call_41f7d0, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rcx	 RIP: 41f7d8	 Bytes: 8
  %loadMem_41f7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7d8 = call %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7d8)
  store %struct.Memory* %call_41f7d8, %struct.Memory** %MEMORY

  ; Code: imulq $0x18, %rcx, %rcx	 RIP: 41f7e0	 Bytes: 4
  %loadMem_41f7e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7e0 = call %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7e0)
  store %struct.Memory* %call_41f7e0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41f7e4	 Bytes: 3
  %loadMem_41f7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7e4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7e4)
  store %struct.Memory* %call_41f7e4, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f7e7	 Bytes: 3
  %loadMem_41f7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7e7 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7e7)
  store %struct.Memory* %call_41f7e7, %struct.Memory** %MEMORY

  ; Code: callq .unmake	 RIP: 41f7ea	 Bytes: 5
  %loadMem1_41f7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f7ea = call %struct.Memory* @routine_callq_.unmake(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f7ea, i64 -77898, i64 5, i64 5)
  store %struct.Memory* %call1_41f7ea, %struct.Memory** %MEMORY

  %loadMem2_41f7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f7ea = load i64, i64* %3
  %call2_41f7ea = call %struct.Memory* @sub_40c7a0.unmake(%struct.State* %0, i64  %loadPC_41f7ea, %struct.Memory* %loadMem2_41f7ea)
  store %struct.Memory* %call2_41f7ea, %struct.Memory** %MEMORY

  ; Code: callq .reset_piece_square	 RIP: 41f7ef	 Bytes: 5
  %loadMem1_41f7ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f7ef = call %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f7ef, i64 12449, i64 5, i64 5)
  store %struct.Memory* %call1_41f7ef, %struct.Memory** %MEMORY

  %loadMem2_41f7ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f7ef = load i64, i64* %3
  %call2_41f7ef = call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* %0, i64  %loadPC_41f7ef, %struct.Memory* %loadMem2_41f7ef)
  store %struct.Memory* %call2_41f7ef, %struct.Memory** %MEMORY

  ; Code: movl 0x633b54, %edx	 RIP: 41f7f4	 Bytes: 7
  %loadMem_41f7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7f4 = call %struct.Memory* @routine_movl_0x633b54___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7f4)
  store %struct.Memory* %call_41f7f4, %struct.Memory** %MEMORY

  ; Code: xorl $0x1, %edx	 RIP: 41f7fb	 Bytes: 3
  %loadMem_41f7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7fb = call %struct.Memory* @routine_xorl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7fb)
  store %struct.Memory* %call_41f7fb, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x633b54	 RIP: 41f7fe	 Bytes: 7
  %loadMem_41f7fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f7fe = call %struct.Memory* @routine_movl__edx__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f7fe)
  store %struct.Memory* %call_41f7fe, %struct.Memory** %MEMORY

  ; Code: .L_41f805:	 RIP: 41f805	 Bytes: 0
  br label %block_.L_41f805
block_.L_41f805:

  ; Code: jmpq .L_42042a	 RIP: 41f805	 Bytes: 5
  %loadMem_41f805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f805 = call %struct.Memory* @routine_jmpq_.L_42042a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f805, i64 3109, i64 5)
  store %struct.Memory* %call_41f805, %struct.Memory** %MEMORY

  br label %block_.L_42042a

  ; Code: .L_41f80a:	 RIP: 41f80a	 Bytes: 0
block_.L_41f80a:

  ; Code: movq $0x4294d8, %rsi	 RIP: 41f80a	 Bytes: 10
  %loadMem_41f80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f80a = call %struct.Memory* @routine_movq__0x4294d8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f80a)
  store %struct.Memory* %call_41f80a, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41f814	 Bytes: 5
  %loadMem_41f814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f814 = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f814)
  store %struct.Memory* %call_41f814, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f819	 Bytes: 2
  %loadMem_41f819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f819 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f819)
  store %struct.Memory* %call_41f819, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f81b	 Bytes: 7
  %loadMem_41f81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f81b = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f81b)
  store %struct.Memory* %call_41f81b, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f822	 Bytes: 5
  %loadMem1_41f822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f822 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f822, i64 -125890, i64 5, i64 5)
  store %struct.Memory* %call1_41f822, %struct.Memory** %MEMORY

  %loadMem2_41f822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f822 = load i64, i64* %3
  %call2_41f822 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f822, %struct.Memory* %loadMem2_41f822)
  store %struct.Memory* %call2_41f822, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f827	 Bytes: 3
  %loadMem_41f827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f827 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f827)
  store %struct.Memory* %call_41f827, %struct.Memory** %MEMORY

  ; Code: jne .L_41f8ff	 RIP: 41f82a	 Bytes: 6
  %loadMem_41f82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f82a = call %struct.Memory* @routine_jne_.L_41f8ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f82a, i8* %BRANCH_TAKEN, i64 213, i64 6, i64 6)
  store %struct.Memory* %call_41f82a, %struct.Memory** %MEMORY

  %loadBr_41f82a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f82a = icmp eq i8 %loadBr_41f82a, 1
  br i1 %cmpBr_41f82a, label %block_.L_41f8ff, label %block_41f830

block_41f830:
  ; Code: cmpl $0x1, 0x62ea38	 RIP: 41f830	 Bytes: 8
  %loadMem_41f830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f830 = call %struct.Memory* @routine_cmpl__0x1__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f830)
  store %struct.Memory* %call_41f830, %struct.Memory** %MEMORY

  ; Code: jle .L_41f8fa	 RIP: 41f838	 Bytes: 6
  %loadMem_41f838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f838 = call %struct.Memory* @routine_jle_.L_41f8fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f838, i8* %BRANCH_TAKEN, i64 194, i64 6, i64 6)
  store %struct.Memory* %call_41f838, %struct.Memory** %MEMORY

  %loadBr_41f838 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f838 = icmp eq i8 %loadBr_41f838, 1
  br i1 %cmpBr_41f838, label %block_.L_41f8fa, label %block_41f83e

block_41f83e:
  ; Code: xorl %esi, %esi	 RIP: 41f83e	 Bytes: 2
  %loadMem_41f83e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f83e = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f83e)
  store %struct.Memory* %call_41f83e, %struct.Memory** %MEMORY

  ; Code: leaq -0x3ba0(%rbp), %rax	 RIP: 41f840	 Bytes: 7
  %loadMem_41f840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f840 = call %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f840)
  store %struct.Memory* %call_41f840, %struct.Memory** %MEMORY

  ; Code: leaq -0x6120(%rbp), %rcx	 RIP: 41f847	 Bytes: 7
  %loadMem_41f847 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f847 = call %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f847)
  store %struct.Memory* %call_41f847, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea38, %edx	 RIP: 41f84e	 Bytes: 7
  %loadMem_41f84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f84e = call %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f84e)
  store %struct.Memory* %call_41f84e, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %edx	 RIP: 41f855	 Bytes: 3
  %loadMem_41f855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f855 = call %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f855)
  store %struct.Memory* %call_41f855, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x62ea38	 RIP: 41f858	 Bytes: 7
  %loadMem_41f858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f858 = call %struct.Memory* @routine_movl__edx__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f858)
  store %struct.Memory* %call_41f858, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 41f85f	 Bytes: 3
  %loadMem_41f85f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f85f = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f85f)
  store %struct.Memory* %call_41f85f, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 41f862	 Bytes: 4
  %loadMem_41f862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f862 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f862)
  store %struct.Memory* %call_41f862, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 41f866	 Bytes: 3
  %loadMem_41f866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f866 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f866)
  store %struct.Memory* %call_41f866, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rdi	 RIP: 41f869	 Bytes: 3
  %loadMem_41f869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f869 = call %struct.Memory* @routine_movq___rcx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f869)
  store %struct.Memory* %call_41f869, %struct.Memory** %MEMORY

  ; Code: movq %rdi, 0x880b20	 RIP: 41f86c	 Bytes: 8
  %loadMem_41f86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f86c = call %struct.Memory* @routine_movq__rdi__0x880b20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f86c)
  store %struct.Memory* %call_41f86c, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 41f874	 Bytes: 4
  %loadMem_41f874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f874 = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f874)
  store %struct.Memory* %call_41f874, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x880b28	 RIP: 41f878	 Bytes: 8
  %loadMem_41f878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f878 = call %struct.Memory* @routine_movq__rcx__0x880b28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f878)
  store %struct.Memory* %call_41f878, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rcx	 RIP: 41f880	 Bytes: 8
  %loadMem_41f880 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f880 = call %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f880)
  store %struct.Memory* %call_41f880, %struct.Memory** %MEMORY

  ; Code: imulq $0x18, %rcx, %rcx	 RIP: 41f888	 Bytes: 4
  %loadMem_41f888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f888 = call %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f888)
  store %struct.Memory* %call_41f888, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41f88c	 Bytes: 3
  %loadMem_41f88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f88c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f88c)
  store %struct.Memory* %call_41f88c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f88f	 Bytes: 3
  %loadMem_41f88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f88f = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f88f)
  store %struct.Memory* %call_41f88f, %struct.Memory** %MEMORY

  ; Code: callq .unmake	 RIP: 41f892	 Bytes: 5
  %loadMem1_41f892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f892 = call %struct.Memory* @routine_callq_.unmake(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f892, i64 -78066, i64 5, i64 5)
  store %struct.Memory* %call1_41f892, %struct.Memory** %MEMORY

  %loadMem2_41f892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f892 = load i64, i64* %3
  %call2_41f892 = call %struct.Memory* @sub_40c7a0.unmake(%struct.State* %0, i64  %loadPC_41f892, %struct.Memory* %loadMem2_41f892)
  store %struct.Memory* %call2_41f892, %struct.Memory** %MEMORY

  ; Code: callq .reset_piece_square	 RIP: 41f897	 Bytes: 5
  %loadMem1_41f897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f897 = call %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f897, i64 12281, i64 5, i64 5)
  store %struct.Memory* %call1_41f897, %struct.Memory** %MEMORY

  %loadMem2_41f897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f897 = load i64, i64* %3
  %call2_41f897 = call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* %0, i64  %loadPC_41f897, %struct.Memory* %loadMem2_41f897)
  store %struct.Memory* %call2_41f897, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 41f89c	 Bytes: 2
  %loadMem_41f89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f89c = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f89c)
  store %struct.Memory* %call_41f89c, %struct.Memory** %MEMORY

  ; Code: leaq -0x3ba0(%rbp), %rax	 RIP: 41f89e	 Bytes: 7
  %loadMem_41f89e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f89e = call %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f89e)
  store %struct.Memory* %call_41f89e, %struct.Memory** %MEMORY

  ; Code: leaq -0x6120(%rbp), %rcx	 RIP: 41f8a5	 Bytes: 7
  %loadMem_41f8a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8a5 = call %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8a5)
  store %struct.Memory* %call_41f8a5, %struct.Memory** %MEMORY

  ; Code: movl 0x62ea38, %edx	 RIP: 41f8ac	 Bytes: 7
  %loadMem_41f8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8ac = call %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8ac)
  store %struct.Memory* %call_41f8ac, %struct.Memory** %MEMORY

  ; Code: addl $0xffffffff, %edx	 RIP: 41f8b3	 Bytes: 3
  %loadMem_41f8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8b3 = call %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8b3)
  store %struct.Memory* %call_41f8b3, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x62ea38	 RIP: 41f8b6	 Bytes: 7
  %loadMem_41f8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8b6 = call %struct.Memory* @routine_movl__edx__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8b6)
  store %struct.Memory* %call_41f8b6, %struct.Memory** %MEMORY

  ; Code: movslq %edx, %rdi	 RIP: 41f8bd	 Bytes: 3
  %loadMem_41f8bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8bd = call %struct.Memory* @routine_movslq__edx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8bd)
  store %struct.Memory* %call_41f8bd, %struct.Memory** %MEMORY

  ; Code: shlq $0x4, %rdi	 RIP: 41f8c0	 Bytes: 4
  %loadMem_41f8c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8c0 = call %struct.Memory* @routine_shlq__0x4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8c0)
  store %struct.Memory* %call_41f8c0, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rcx	 RIP: 41f8c4	 Bytes: 3
  %loadMem_41f8c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8c4 = call %struct.Memory* @routine_addq__rdi___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8c4)
  store %struct.Memory* %call_41f8c4, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rdi	 RIP: 41f8c7	 Bytes: 3
  %loadMem_41f8c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8c7 = call %struct.Memory* @routine_movq___rcx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8c7)
  store %struct.Memory* %call_41f8c7, %struct.Memory** %MEMORY

  ; Code: movq %rdi, 0x880b20	 RIP: 41f8ca	 Bytes: 8
  %loadMem_41f8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8ca = call %struct.Memory* @routine_movq__rdi__0x880b20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8ca)
  store %struct.Memory* %call_41f8ca, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rcx), %rcx	 RIP: 41f8d2	 Bytes: 4
  %loadMem_41f8d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8d2 = call %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8d2)
  store %struct.Memory* %call_41f8d2, %struct.Memory** %MEMORY

  ; Code: movq %rcx, 0x880b28	 RIP: 41f8d6	 Bytes: 8
  %loadMem_41f8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8d6 = call %struct.Memory* @routine_movq__rcx__0x880b28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8d6)
  store %struct.Memory* %call_41f8d6, %struct.Memory** %MEMORY

  ; Code: movslq 0x62ea38, %rcx	 RIP: 41f8de	 Bytes: 8
  %loadMem_41f8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8de = call %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8de)
  store %struct.Memory* %call_41f8de, %struct.Memory** %MEMORY

  ; Code: imulq $0x18, %rcx, %rcx	 RIP: 41f8e6	 Bytes: 4
  %loadMem_41f8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8e6 = call %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8e6)
  store %struct.Memory* %call_41f8e6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 41f8ea	 Bytes: 3
  %loadMem_41f8ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8ea = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8ea)
  store %struct.Memory* %call_41f8ea, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41f8ed	 Bytes: 3
  %loadMem_41f8ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8ed = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8ed)
  store %struct.Memory* %call_41f8ed, %struct.Memory** %MEMORY

  ; Code: callq .unmake	 RIP: 41f8f0	 Bytes: 5
  %loadMem1_41f8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f8f0 = call %struct.Memory* @routine_callq_.unmake(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f8f0, i64 -78160, i64 5, i64 5)
  store %struct.Memory* %call1_41f8f0, %struct.Memory** %MEMORY

  %loadMem2_41f8f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f8f0 = load i64, i64* %3
  %call2_41f8f0 = call %struct.Memory* @sub_40c7a0.unmake(%struct.State* %0, i64  %loadPC_41f8f0, %struct.Memory* %loadMem2_41f8f0)
  store %struct.Memory* %call2_41f8f0, %struct.Memory** %MEMORY

  ; Code: callq .reset_piece_square	 RIP: 41f8f5	 Bytes: 5
  %loadMem1_41f8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f8f5 = call %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f8f5, i64 12187, i64 5, i64 5)
  store %struct.Memory* %call1_41f8f5, %struct.Memory** %MEMORY

  %loadMem2_41f8f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f8f5 = load i64, i64* %3
  %call2_41f8f5 = call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* %0, i64  %loadPC_41f8f5, %struct.Memory* %loadMem2_41f8f5)
  store %struct.Memory* %call2_41f8f5, %struct.Memory** %MEMORY

  ; Code: .L_41f8fa:	 RIP: 41f8fa	 Bytes: 0
  br label %block_.L_41f8fa
block_.L_41f8fa:

  ; Code: jmpq .L_420425	 RIP: 41f8fa	 Bytes: 5
  %loadMem_41f8fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8fa = call %struct.Memory* @routine_jmpq_.L_420425(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8fa, i64 2859, i64 5)
  store %struct.Memory* %call_41f8fa, %struct.Memory** %MEMORY

  br label %block_.L_420425

  ; Code: .L_41f8ff:	 RIP: 41f8ff	 Bytes: 0
block_.L_41f8ff:

  ; Code: movq $0x4294df, %rsi	 RIP: 41f8ff	 Bytes: 10
  %loadMem_41f8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f8ff = call %struct.Memory* @routine_movq__0x4294df___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f8ff)
  store %struct.Memory* %call_41f8ff, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41f909	 Bytes: 5
  %loadMem_41f909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f909 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f909)
  store %struct.Memory* %call_41f909, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f90e	 Bytes: 2
  %loadMem_41f90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f90e = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f90e)
  store %struct.Memory* %call_41f90e, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f910	 Bytes: 7
  %loadMem_41f910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f910 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f910)
  store %struct.Memory* %call_41f910, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f917	 Bytes: 5
  %loadMem1_41f917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f917 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f917, i64 -126135, i64 5, i64 5)
  store %struct.Memory* %call1_41f917, %struct.Memory** %MEMORY

  %loadMem2_41f917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f917 = load i64, i64* %3
  %call2_41f917 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f917, %struct.Memory* %loadMem2_41f917)
  store %struct.Memory* %call2_41f917, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f91c	 Bytes: 3
  %loadMem_41f91c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f91c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f91c)
  store %struct.Memory* %call_41f91c, %struct.Memory** %MEMORY

  ; Code: jne .L_41f93e	 RIP: 41f91f	 Bytes: 6
  %loadMem_41f91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f91f = call %struct.Memory* @routine_jne_.L_41f93e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f91f, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_41f91f, %struct.Memory** %MEMORY

  %loadBr_41f91f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f91f = icmp eq i8 %loadBr_41f91f, 1
  br i1 %cmpBr_41f91f, label %block_.L_41f93e, label %block_41f925

block_41f925:
  ; Code: movl $0x1, -0x6124(%rbp)	 RIP: 41f925	 Bytes: 10
  %loadMem_41f925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f925 = call %struct.Memory* @routine_movl__0x1__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f925)
  store %struct.Memory* %call_41f925, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6128(%rbp)	 RIP: 41f92f	 Bytes: 10
  %loadMem_41f92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f92f = call %struct.Memory* @routine_movl__0x0__MINUS0x6128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f92f)
  store %struct.Memory* %call_41f92f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420420	 RIP: 41f939	 Bytes: 5
  %loadMem_41f939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f939 = call %struct.Memory* @routine_jmpq_.L_420420(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f939, i64 2791, i64 5)
  store %struct.Memory* %call_41f939, %struct.Memory** %MEMORY

  br label %block_.L_420420

  ; Code: .L_41f93e:	 RIP: 41f93e	 Bytes: 0
block_.L_41f93e:

  ; Code: movq $0x4294e4, %rsi	 RIP: 41f93e	 Bytes: 10
  %loadMem_41f93e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f93e = call %struct.Memory* @routine_movq__0x4294e4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f93e)
  store %struct.Memory* %call_41f93e, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41f948	 Bytes: 5
  %loadMem_41f948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f948 = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f948)
  store %struct.Memory* %call_41f948, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f94d	 Bytes: 2
  %loadMem_41f94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f94d = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f94d)
  store %struct.Memory* %call_41f94d, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41f94f	 Bytes: 7
  %loadMem_41f94f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f94f = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f94f)
  store %struct.Memory* %call_41f94f, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41f956	 Bytes: 5
  %loadMem1_41f956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f956 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f956, i64 -126198, i64 5, i64 5)
  store %struct.Memory* %call1_41f956, %struct.Memory** %MEMORY

  %loadMem2_41f956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f956 = load i64, i64* %3
  %call2_41f956 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41f956, %struct.Memory* %loadMem2_41f956)
  store %struct.Memory* %call2_41f956, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41f95b	 Bytes: 3
  %loadMem_41f95b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f95b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f95b)
  store %struct.Memory* %call_41f95b, %struct.Memory** %MEMORY

  ; Code: jne .L_41f9fa	 RIP: 41f95e	 Bytes: 6
  %loadMem_41f95e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f95e = call %struct.Memory* @routine_jne_.L_41f9fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f95e, i8* %BRANCH_TAKEN, i64 156, i64 6, i64 6)
  store %struct.Memory* %call_41f95e, %struct.Memory** %MEMORY

  %loadBr_41f95e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f95e = icmp eq i8 %loadBr_41f95e, 1
  br i1 %cmpBr_41f95e, label %block_.L_41f9fa, label %block_41f964

block_41f964:
  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41f964	 Bytes: 7
  %loadMem_41f964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f964 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f964)
  store %struct.Memory* %call_41f964, %struct.Memory** %MEMORY

  ; Code: je .L_41f9fa	 RIP: 41f96b	 Bytes: 6
  %loadMem_41f96b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f96b = call %struct.Memory* @routine_je_.L_41f9fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f96b, i8* %BRANCH_TAKEN, i64 143, i64 6, i64 6)
  store %struct.Memory* %call_41f96b, %struct.Memory** %MEMORY

  %loadBr_41f96b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f96b = icmp eq i8 %loadBr_41f96b, 1
  br i1 %cmpBr_41f96b, label %block_.L_41f9fa, label %block_41f971

block_41f971:
  ; Code: movl $0x0, -0x6124(%rbp)	 RIP: 41f971	 Bytes: 10
  %loadMem_41f971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f971 = call %struct.Memory* @routine_movl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f971)
  store %struct.Memory* %call_41f971, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1e, 0x86bd7c	 RIP: 41f97b	 Bytes: 8
  %loadMem_41f97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f97b = call %struct.Memory* @routine_cmpl__0x1e__0x86bd7c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f97b)
  store %struct.Memory* %call_41f97b, %struct.Memory** %MEMORY

  ; Code: jne .L_41f994	 RIP: 41f983	 Bytes: 6
  %loadMem_41f983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f983 = call %struct.Memory* @routine_jne_.L_41f994(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f983, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41f983, %struct.Memory** %MEMORY

  %loadBr_41f983 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f983 = icmp eq i8 %loadBr_41f983, 1
  br i1 %cmpBr_41f983, label %block_.L_41f994, label %block_41f989

block_41f989:
  ; Code: movl $0x0, 0x62e4fc	 RIP: 41f989	 Bytes: 11
  %loadMem_41f989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f989 = call %struct.Memory* @routine_movl__0x0__0x62e4fc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f989)
  store %struct.Memory* %call_41f989, %struct.Memory** %MEMORY

  ; Code: .L_41f994:	 RIP: 41f994	 Bytes: 0
  br label %block_.L_41f994
block_.L_41f994:

  ; Code: cmpl $0x72, 0x8661d0	 RIP: 41f994	 Bytes: 8
  %loadMem_41f994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f994 = call %struct.Memory* @routine_cmpl__0x72__0x8661d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f994)
  store %struct.Memory* %call_41f994, %struct.Memory** %MEMORY

  ; Code: jne .L_41f9ad	 RIP: 41f99c	 Bytes: 6
  %loadMem_41f99c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f99c = call %struct.Memory* @routine_jne_.L_41f9ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f99c, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_41f99c, %struct.Memory** %MEMORY

  %loadBr_41f99c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41f99c = icmp eq i8 %loadBr_41f99c, 1
  br i1 %cmpBr_41f99c, label %block_.L_41f9ad, label %block_41f9a2

block_41f9a2:
  ; Code: movl $0x0, 0x62e500	 RIP: 41f9a2	 Bytes: 11
  %loadMem_41f9a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9a2 = call %struct.Memory* @routine_movl__0x0__0x62e500(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9a2)
  store %struct.Memory* %call_41f9a2, %struct.Memory** %MEMORY

  ; Code: .L_41f9ad:	 RIP: 41f9ad	 Bytes: 0
  br label %block_.L_41f9ad
block_.L_41f9ad:

  ; Code: movq $0x886740, %rdi	 RIP: 41f9ad	 Bytes: 10
  %loadMem_41f9ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9ad = call %struct.Memory* @routine_movq__0x886740___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9ad)
  store %struct.Memory* %call_41f9ad, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 41f9b7	 Bytes: 2
  %loadMem_41f9b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9b7 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9b7)
  store %struct.Memory* %call_41f9b7, %struct.Memory** %MEMORY

  ; Code: movl $0x100, %eax	 RIP: 41f9b9	 Bytes: 5
  %loadMem_41f9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9b9 = call %struct.Memory* @routine_movl__0x100___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9b9)
  store %struct.Memory* %call_41f9b9, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41f9be	 Bytes: 2
  %loadMem_41f9be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9be = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9be)
  store %struct.Memory* %call_41f9be, %struct.Memory** %MEMORY

  ; Code: movl $0x32, 0x85f3ec	 RIP: 41f9c0	 Bytes: 11
  %loadMem_41f9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9c0 = call %struct.Memory* @routine_movl__0x32__0x85f3ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9c0)
  store %struct.Memory* %call_41f9c0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x881de4	 RIP: 41f9cb	 Bytes: 11
  %loadMem_41f9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9cb = call %struct.Memory* @routine_movl__0x0__0x881de4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9cb)
  store %struct.Memory* %call_41f9cb, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea38	 RIP: 41f9d6	 Bytes: 11
  %loadMem_41f9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9d6 = call %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9d6)
  store %struct.Memory* %call_41f9d6, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 41f9e1	 Bytes: 5
  %loadMem1_41f9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f9e1 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f9e1, i64 -126225, i64 5, i64 5)
  store %struct.Memory* %call1_41f9e1, %struct.Memory** %MEMORY

  %loadMem2_41f9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f9e1 = load i64, i64* %3
  %call2_41f9e1 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_41f9e1, %struct.Memory* %loadMem2_41f9e1)
  store %struct.Memory* %call2_41f9e1, %struct.Memory** %MEMORY

  ; Code: callq .clear_tt	 RIP: 41f9e6	 Bytes: 5
  %loadMem1_41f9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f9e6 = call %struct.Memory* @routine_callq_.clear_tt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f9e6, i64 2778, i64 5, i64 5)
  store %struct.Memory* %call1_41f9e6, %struct.Memory** %MEMORY

  %loadMem2_41f9e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f9e6 = load i64, i64* %3
  %call2_41f9e6 = call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64  %loadPC_41f9e6, %struct.Memory* %loadMem2_41f9e6)
  store %struct.Memory* %call2_41f9e6, %struct.Memory** %MEMORY

  ; Code: callq .initialize_hash	 RIP: 41f9eb	 Bytes: 5
  %loadMem1_41f9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f9eb = call %struct.Memory* @routine_callq_.initialize_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f9eb, i64 3093, i64 5, i64 5)
  store %struct.Memory* %call1_41f9eb, %struct.Memory** %MEMORY

  %loadMem2_41f9eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f9eb = load i64, i64* %3
  %call2_41f9eb = call %struct.Memory* @sub_420600.initialize_hash(%struct.State* %0, i64  %loadPC_41f9eb, %struct.Memory* %loadMem2_41f9eb)
  store %struct.Memory* %call2_41f9eb, %struct.Memory** %MEMORY

  ; Code: callq .reset_piece_square	 RIP: 41f9f0	 Bytes: 5
  %loadMem1_41f9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41f9f0 = call %struct.Memory* @routine_callq_.reset_piece_square(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41f9f0, i64 11936, i64 5, i64 5)
  store %struct.Memory* %call1_41f9f0, %struct.Memory** %MEMORY

  %loadMem2_41f9f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41f9f0 = load i64, i64* %3
  %call2_41f9f0 = call %struct.Memory* @sub_422890.reset_piece_square(%struct.State* %0, i64  %loadPC_41f9f0, %struct.Memory* %loadMem2_41f9f0)
  store %struct.Memory* %call2_41f9f0, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42041b	 RIP: 41f9f5	 Bytes: 5
  %loadMem_41f9f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9f5 = call %struct.Memory* @routine_jmpq_.L_42041b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9f5, i64 2598, i64 5)
  store %struct.Memory* %call_41f9f5, %struct.Memory** %MEMORY

  br label %block_.L_42041b

  ; Code: .L_41f9fa:	 RIP: 41f9fa	 Bytes: 0
block_.L_41f9fa:

  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41f9fa	 Bytes: 7
  %loadMem_41f9fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41f9fa = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41f9fa)
  store %struct.Memory* %call_41f9fa, %struct.Memory** %MEMORY

  ; Code: je .L_41fa58	 RIP: 41fa01	 Bytes: 6
  %loadMem_41fa01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa01 = call %struct.Memory* @routine_je_.L_41fa58(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa01, i8* %BRANCH_TAKEN, i64 87, i64 6, i64 6)
  store %struct.Memory* %call_41fa01, %struct.Memory** %MEMORY

  %loadBr_41fa01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fa01 = icmp eq i8 %loadBr_41fa01, 1
  br i1 %cmpBr_41fa01, label %block_.L_41fa58, label %block_41fa07

block_41fa07:
  ; Code: movq $0x429af6, %rsi	 RIP: 41fa07	 Bytes: 10
  %loadMem_41fa07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa07 = call %struct.Memory* @routine_movq__0x429af6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa07)
  store %struct.Memory* %call_41fa07, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41fa11	 Bytes: 5
  %loadMem_41fa11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa11 = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa11)
  store %struct.Memory* %call_41fa11, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fa16	 Bytes: 2
  %loadMem_41fa16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa16 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa16)
  store %struct.Memory* %call_41fa16, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fa18	 Bytes: 7
  %loadMem_41fa18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa18 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa18)
  store %struct.Memory* %call_41fa18, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fa1f	 Bytes: 5
  %loadMem1_41fa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fa1f = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fa1f, i64 -126399, i64 5, i64 5)
  store %struct.Memory* %call1_41fa1f, %struct.Memory** %MEMORY

  %loadMem2_41fa1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fa1f = load i64, i64* %3
  %call2_41fa1f = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fa1f, %struct.Memory* %loadMem2_41fa1f)
  store %struct.Memory* %call2_41fa1f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fa24	 Bytes: 3
  %loadMem_41fa24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa24 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa24)
  store %struct.Memory* %call_41fa24, %struct.Memory** %MEMORY

  ; Code: jne .L_41fa58	 RIP: 41fa27	 Bytes: 6
  %loadMem_41fa27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa27 = call %struct.Memory* @routine_jne_.L_41fa58(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa27, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_41fa27, %struct.Memory** %MEMORY

  %loadBr_41fa27 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fa27 = icmp eq i8 %loadBr_41fa27, 1
  br i1 %cmpBr_41fa27, label %block_.L_41fa58, label %block_41fa2d

block_41fa2d:
  ; Code: cmpl $0x0, -0x6128(%rbp)	 RIP: 41fa2d	 Bytes: 7
  %loadMem_41fa2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa2d = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa2d)
  store %struct.Memory* %call_41fa2d, %struct.Memory** %MEMORY

  ; Code: jne .L_41fa49	 RIP: 41fa34	 Bytes: 6
  %loadMem_41fa34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa34 = call %struct.Memory* @routine_jne_.L_41fa49(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa34, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_41fa34, %struct.Memory** %MEMORY

  %loadBr_41fa34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fa34 = icmp eq i8 %loadBr_41fa34, 1
  br i1 %cmpBr_41fa34, label %block_.L_41fa49, label %block_41fa3a

block_41fa3a:
  ; Code: movl $0x1, -0x6128(%rbp)	 RIP: 41fa3a	 Bytes: 10
  %loadMem_41fa3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa3a = call %struct.Memory* @routine_movl__0x1__MINUS0x6128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa3a)
  store %struct.Memory* %call_41fa3a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41fa53	 RIP: 41fa44	 Bytes: 5
  %loadMem_41fa44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa44 = call %struct.Memory* @routine_jmpq_.L_41fa53(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa44, i64 15, i64 5)
  store %struct.Memory* %call_41fa44, %struct.Memory** %MEMORY

  br label %block_.L_41fa53

  ; Code: .L_41fa49:	 RIP: 41fa49	 Bytes: 0
block_.L_41fa49:

  ; Code: movl $0x0, -0x6128(%rbp)	 RIP: 41fa49	 Bytes: 10
  %loadMem_41fa49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa49 = call %struct.Memory* @routine_movl__0x0__MINUS0x6128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa49)
  store %struct.Memory* %call_41fa49, %struct.Memory** %MEMORY

  ; Code: .L_41fa53:	 RIP: 41fa53	 Bytes: 0
  br label %block_.L_41fa53
block_.L_41fa53:

  ; Code: jmpq .L_420416	 RIP: 41fa53	 Bytes: 5
  %loadMem_41fa53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa53 = call %struct.Memory* @routine_jmpq_.L_420416(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa53, i64 2499, i64 5)
  store %struct.Memory* %call_41fa53, %struct.Memory** %MEMORY

  br label %block_.L_420416

  ; Code: .L_41fa58:	 RIP: 41fa58	 Bytes: 0
block_.L_41fa58:

  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41fa58	 Bytes: 7
  %loadMem_41fa58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa58 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa58)
  store %struct.Memory* %call_41fa58, %struct.Memory** %MEMORY

  ; Code: je .L_41faa0	 RIP: 41fa5f	 Bytes: 6
  %loadMem_41fa5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa5f = call %struct.Memory* @routine_je_.L_41faa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa5f, i8* %BRANCH_TAKEN, i64 65, i64 6, i64 6)
  store %struct.Memory* %call_41fa5f, %struct.Memory** %MEMORY

  %loadBr_41fa5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fa5f = icmp eq i8 %loadBr_41fa5f, 1
  br i1 %cmpBr_41fa5f, label %block_.L_41faa0, label %block_41fa65

block_41fa65:
  ; Code: movq $0x4294e6, %rsi	 RIP: 41fa65	 Bytes: 10
  %loadMem_41fa65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa65 = call %struct.Memory* @routine_movq__0x4294e6___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa65)
  store %struct.Memory* %call_41fa65, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41fa6f	 Bytes: 5
  %loadMem_41fa6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa6f = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa6f)
  store %struct.Memory* %call_41fa6f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fa74	 Bytes: 2
  %loadMem_41fa74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa74 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa74)
  store %struct.Memory* %call_41fa74, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fa76	 Bytes: 7
  %loadMem_41fa76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa76 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa76)
  store %struct.Memory* %call_41fa76, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fa7d	 Bytes: 5
  %loadMem1_41fa7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fa7d = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fa7d, i64 -126493, i64 5, i64 5)
  store %struct.Memory* %call1_41fa7d, %struct.Memory** %MEMORY

  %loadMem2_41fa7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fa7d = load i64, i64* %3
  %call2_41fa7d = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fa7d, %struct.Memory* %loadMem2_41fa7d)
  store %struct.Memory* %call2_41fa7d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fa82	 Bytes: 3
  %loadMem_41fa82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa82 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa82)
  store %struct.Memory* %call_41fa82, %struct.Memory** %MEMORY

  ; Code: jne .L_41faa0	 RIP: 41fa85	 Bytes: 6
  %loadMem_41fa85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa85 = call %struct.Memory* @routine_jne_.L_41faa0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa85, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_41fa85, %struct.Memory** %MEMORY

  %loadBr_41fa85 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fa85 = icmp eq i8 %loadBr_41fa85, 1
  br i1 %cmpBr_41fa85, label %block_.L_41faa0, label %block_41fa8b

block_41fa8b:
  ; Code: callq .reset_board	 RIP: 41fa8b	 Bytes: 5
  %loadMem1_41fa8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fa8b = call %struct.Memory* @routine_callq_.reset_board(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fa8b, i64 19253, i64 5, i64 5)
  store %struct.Memory* %call1_41fa8b, %struct.Memory** %MEMORY

  %loadMem2_41fa8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fa8b = load i64, i64* %3
  %call2_41fa8b = call %struct.Memory* @sub_4245c0.reset_board(%struct.State* %0, i64  %loadPC_41fa8b, %struct.Memory* %loadMem2_41fa8b)
  store %struct.Memory* %call2_41fa8b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea38	 RIP: 41fa90	 Bytes: 11
  %loadMem_41fa90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa90 = call %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa90)
  store %struct.Memory* %call_41fa90, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420411	 RIP: 41fa9b	 Bytes: 5
  %loadMem_41fa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fa9b = call %struct.Memory* @routine_jmpq_.L_420411(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fa9b, i64 2422, i64 5)
  store %struct.Memory* %call_41fa9b, %struct.Memory** %MEMORY

  br label %block_.L_420411

  ; Code: .L_41faa0:	 RIP: 41faa0	 Bytes: 0
block_.L_41faa0:

  ; Code: cmpl $0x0, -0x6124(%rbp)	 RIP: 41faa0	 Bytes: 7
  %loadMem_41faa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41faa0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41faa0)
  store %struct.Memory* %call_41faa0, %struct.Memory** %MEMORY

  ; Code: je .L_41fb55	 RIP: 41faa7	 Bytes: 6
  %loadMem_41faa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41faa7 = call %struct.Memory* @routine_je_.L_41fb55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41faa7, i8* %BRANCH_TAKEN, i64 174, i64 6, i64 6)
  store %struct.Memory* %call_41faa7, %struct.Memory** %MEMORY

  %loadBr_41faa7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41faa7 = icmp eq i8 %loadBr_41faa7, 1
  br i1 %cmpBr_41faa7, label %block_.L_41fb55, label %block_41faad

block_41faad:
  ; Code: callq .__ctype_b_loc_plt	 RIP: 41faad	 Bytes: 5
  %loadMem1_41faad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41faad = call %struct.Memory* @routine_callq_.__ctype_b_loc_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41faad, i64 -126125, i64 5, i64 5)
  store %struct.Memory* %call1_41faad, %struct.Memory** %MEMORY

  %loadMem2_41faad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41faad = load i64, i64* %3
  %call2_41faad = call %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* %0, i64  %loadPC_41faad, %struct.Memory* %loadMem2_41faad)
  store %struct.Memory* %call2_41faad, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 41fab2	 Bytes: 3
  %loadMem_41fab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fab2 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fab2)
  store %struct.Memory* %call_41fab2, %struct.Memory** %MEMORY

  ; Code: movsbl -0x110(%rbp), %ecx	 RIP: 41fab5	 Bytes: 7
  %loadMem_41fab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fab5 = call %struct.Memory* @routine_movsbl_MINUS0x110__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fab5)
  store %struct.Memory* %call_41fab5, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 41fabc	 Bytes: 3
  %loadMem_41fabc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fabc = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fabc)
  store %struct.Memory* %call_41fabc, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 41fabf	 Bytes: 4
  %loadMem_41fabf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fabf = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fabf)
  store %struct.Memory* %call_41fabf, %struct.Memory** %MEMORY

  ; Code: andl $0x400, %ecx	 RIP: 41fac3	 Bytes: 6
  %loadMem_41fac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fac3 = call %struct.Memory* @routine_andl__0x400___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fac3)
  store %struct.Memory* %call_41fac3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41fac9	 Bytes: 3
  %loadMem_41fac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fac9 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fac9)
  store %struct.Memory* %call_41fac9, %struct.Memory** %MEMORY

  ; Code: je .L_41fb55	 RIP: 41facc	 Bytes: 6
  %loadMem_41facc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41facc = call %struct.Memory* @routine_je_.L_41fb55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41facc, i8* %BRANCH_TAKEN, i64 137, i64 6, i64 6)
  store %struct.Memory* %call_41facc, %struct.Memory** %MEMORY

  %loadBr_41facc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41facc = icmp eq i8 %loadBr_41facc, 1
  br i1 %cmpBr_41facc, label %block_.L_41fb55, label %block_41fad2

block_41fad2:
  ; Code: callq .__ctype_b_loc_plt	 RIP: 41fad2	 Bytes: 5
  %loadMem1_41fad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fad2 = call %struct.Memory* @routine_callq_.__ctype_b_loc_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fad2, i64 -126162, i64 5, i64 5)
  store %struct.Memory* %call1_41fad2, %struct.Memory** %MEMORY

  %loadMem2_41fad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fad2 = load i64, i64* %3
  %call2_41fad2 = call %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* %0, i64  %loadPC_41fad2, %struct.Memory* %loadMem2_41fad2)
  store %struct.Memory* %call2_41fad2, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 41fad7	 Bytes: 3
  %loadMem_41fad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fad7 = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fad7)
  store %struct.Memory* %call_41fad7, %struct.Memory** %MEMORY

  ; Code: movsbl -0x10f(%rbp), %ecx	 RIP: 41fada	 Bytes: 7
  %loadMem_41fada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fada = call %struct.Memory* @routine_movsbl_MINUS0x10f__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fada)
  store %struct.Memory* %call_41fada, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 41fae1	 Bytes: 3
  %loadMem_41fae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fae1 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fae1)
  store %struct.Memory* %call_41fae1, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 41fae4	 Bytes: 4
  %loadMem_41fae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fae4 = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fae4)
  store %struct.Memory* %call_41fae4, %struct.Memory** %MEMORY

  ; Code: andl $0x400, %ecx	 RIP: 41fae8	 Bytes: 6
  %loadMem_41fae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fae8 = call %struct.Memory* @routine_andl__0x400___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fae8)
  store %struct.Memory* %call_41fae8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41faee	 Bytes: 3
  %loadMem_41faee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41faee = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41faee)
  store %struct.Memory* %call_41faee, %struct.Memory** %MEMORY

  ; Code: je .L_41fb55	 RIP: 41faf1	 Bytes: 6
  %loadMem_41faf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41faf1 = call %struct.Memory* @routine_je_.L_41fb55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41faf1, i8* %BRANCH_TAKEN, i64 100, i64 6, i64 6)
  store %struct.Memory* %call_41faf1, %struct.Memory** %MEMORY

  %loadBr_41faf1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41faf1 = icmp eq i8 %loadBr_41faf1, 1
  br i1 %cmpBr_41faf1, label %block_.L_41fb55, label %block_41faf7

block_41faf7:
  ; Code: callq .__ctype_b_loc_plt	 RIP: 41faf7	 Bytes: 5
  %loadMem1_41faf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41faf7 = call %struct.Memory* @routine_callq_.__ctype_b_loc_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41faf7, i64 -126199, i64 5, i64 5)
  store %struct.Memory* %call1_41faf7, %struct.Memory** %MEMORY

  %loadMem2_41faf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41faf7 = load i64, i64* %3
  %call2_41faf7 = call %struct.Memory* @sub_400e00.__ctype_b_loc_plt(%struct.State* %0, i64  %loadPC_41faf7, %struct.Memory* %loadMem2_41faf7)
  store %struct.Memory* %call2_41faf7, %struct.Memory** %MEMORY

  ; Code: movq (%rax), %rax	 RIP: 41fafc	 Bytes: 3
  %loadMem_41fafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fafc = call %struct.Memory* @routine_movq___rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fafc)
  store %struct.Memory* %call_41fafc, %struct.Memory** %MEMORY

  ; Code: movsbl -0x10e(%rbp), %ecx	 RIP: 41faff	 Bytes: 7
  %loadMem_41faff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41faff = call %struct.Memory* @routine_movsbl_MINUS0x10e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41faff)
  store %struct.Memory* %call_41faff, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 41fb06	 Bytes: 3
  %loadMem_41fb06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb06 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb06)
  store %struct.Memory* %call_41fb06, %struct.Memory** %MEMORY

  ; Code: movzwl (%rax,%rdx,2), %ecx	 RIP: 41fb09	 Bytes: 4
  %loadMem_41fb09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb09 = call %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb09)
  store %struct.Memory* %call_41fb09, %struct.Memory** %MEMORY

  ; Code: andl $0x800, %ecx	 RIP: 41fb0d	 Bytes: 6
  %loadMem_41fb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb0d = call %struct.Memory* @routine_andl__0x800___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb0d)
  store %struct.Memory* %call_41fb0d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 41fb13	 Bytes: 3
  %loadMem_41fb13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb13 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb13)
  store %struct.Memory* %call_41fb13, %struct.Memory** %MEMORY

  ; Code: je .L_41fb55	 RIP: 41fb16	 Bytes: 6
  %loadMem_41fb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb16 = call %struct.Memory* @routine_je_.L_41fb55(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb16, i8* %BRANCH_TAKEN, i64 63, i64 6, i64 6)
  store %struct.Memory* %call_41fb16, %struct.Memory** %MEMORY

  %loadBr_41fb16 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fb16 = icmp eq i8 %loadBr_41fb16, 1
  br i1 %cmpBr_41fb16, label %block_.L_41fb55, label %block_41fb1c

block_41fb1c:
  ; Code: movl -0x6128(%rbp), %edi	 RIP: 41fb1c	 Bytes: 6
  %loadMem_41fb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb1c = call %struct.Memory* @routine_movl_MINUS0x6128__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb1c)
  store %struct.Memory* %call_41fb1c, %struct.Memory** %MEMORY

  ; Code: movb -0x110(%rbp), %al	 RIP: 41fb22	 Bytes: 6
  %loadMem_41fb22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb22 = call %struct.Memory* @routine_movb_MINUS0x110__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb22)
  store %struct.Memory* %call_41fb22, %struct.Memory** %MEMORY

  ; Code: movb -0x10f(%rbp), %cl	 RIP: 41fb28	 Bytes: 6
  %loadMem_41fb28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb28 = call %struct.Memory* @routine_movb_MINUS0x10f__rbp____cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb28)
  store %struct.Memory* %call_41fb28, %struct.Memory** %MEMORY

  ; Code: movsbl -0x10e(%rbp), %edx	 RIP: 41fb2e	 Bytes: 7
  %loadMem_41fb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb2e = call %struct.Memory* @routine_movsbl_MINUS0x10e__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb2e)
  store %struct.Memory* %call_41fb2e, %struct.Memory** %MEMORY

  ; Code: movsbl %al, %esi	 RIP: 41fb35	 Bytes: 3
  %loadMem_41fb35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb35 = call %struct.Memory* @routine_movsbl__al___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb35)
  store %struct.Memory* %call_41fb35, %struct.Memory** %MEMORY

  ; Code: movsbl %cl, %r8d	 RIP: 41fb38	 Bytes: 4
  %loadMem_41fb38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb38 = call %struct.Memory* @routine_movsbl__cl___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb38)
  store %struct.Memory* %call_41fb38, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x62a4(%rbp)	 RIP: 41fb3c	 Bytes: 6
  %loadMem_41fb3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb3c = call %struct.Memory* @routine_movl__edx__MINUS0x62a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb3c)
  store %struct.Memory* %call_41fb3c, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edx	 RIP: 41fb42	 Bytes: 3
  %loadMem_41fb42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb42 = call %struct.Memory* @routine_movl__r8d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb42)
  store %struct.Memory* %call_41fb42, %struct.Memory** %MEMORY

  ; Code: movl -0x62a4(%rbp), %ecx	 RIP: 41fb45	 Bytes: 6
  %loadMem_41fb45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb45 = call %struct.Memory* @routine_movl_MINUS0x62a4__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb45)
  store %struct.Memory* %call_41fb45, %struct.Memory** %MEMORY

  ; Code: callq .PutPiece	 RIP: 41fb4b	 Bytes: 5
  %loadMem1_41fb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fb4b = call %struct.Memory* @routine_callq_.PutPiece(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fb4b, i64 18597, i64 5, i64 5)
  store %struct.Memory* %call1_41fb4b, %struct.Memory** %MEMORY

  %loadMem2_41fb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fb4b = load i64, i64* %3
  %call2_41fb4b = call %struct.Memory* @sub_4243f0.PutPiece(%struct.State* %0, i64  %loadPC_41fb4b, %struct.Memory* %loadMem2_41fb4b)
  store %struct.Memory* %call2_41fb4b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_42040c	 RIP: 41fb50	 Bytes: 5
  %loadMem_41fb50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb50 = call %struct.Memory* @routine_jmpq_.L_42040c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb50, i64 2236, i64 5)
  store %struct.Memory* %call_41fb50, %struct.Memory** %MEMORY

  br label %block_.L_42040c

  ; Code: .L_41fb55:	 RIP: 41fb55	 Bytes: 0
block_.L_41fb55:

  ; Code: movq $0x4294e9, %rsi	 RIP: 41fb55	 Bytes: 10
  %loadMem_41fb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb55 = call %struct.Memory* @routine_movq__0x4294e9___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb55)
  store %struct.Memory* %call_41fb55, %struct.Memory** %MEMORY

  ; Code: movl $0x7, %eax	 RIP: 41fb5f	 Bytes: 5
  %loadMem_41fb5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb5f = call %struct.Memory* @routine_movl__0x7___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb5f)
  store %struct.Memory* %call_41fb5f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fb64	 Bytes: 2
  %loadMem_41fb64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb64 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb64)
  store %struct.Memory* %call_41fb64, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fb66	 Bytes: 7
  %loadMem_41fb66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb66 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb66)
  store %struct.Memory* %call_41fb66, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fb6d	 Bytes: 5
  %loadMem1_41fb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fb6d = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fb6d, i64 -126733, i64 5, i64 5)
  store %struct.Memory* %call1_41fb6d, %struct.Memory** %MEMORY

  %loadMem2_41fb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fb6d = load i64, i64* %3
  %call2_41fb6d = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fb6d, %struct.Memory* %loadMem2_41fb6d)
  store %struct.Memory* %call2_41fb6d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fb72	 Bytes: 3
  %loadMem_41fb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb72 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb72)
  store %struct.Memory* %call_41fb72, %struct.Memory** %MEMORY

  ; Code: jne .L_41fb93	 RIP: 41fb75	 Bytes: 6
  %loadMem_41fb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb75 = call %struct.Memory* @routine_jne_.L_41fb93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb75, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_41fb75, %struct.Memory** %MEMORY

  %loadBr_41fb75 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fb75 = icmp eq i8 %loadBr_41fb75, 1
  br i1 %cmpBr_41fb75, label %block_.L_41fb93, label %block_41fb7b

block_41fb7b:
  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41fb7b	 Bytes: 7
  %loadMem_41fb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb7b = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb7b)
  store %struct.Memory* %call_41fb7b, %struct.Memory** %MEMORY

  ; Code: addq $0x7, %rax	 RIP: 41fb82	 Bytes: 4
  %loadMem_41fb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb82 = call %struct.Memory* @routine_addq__0x7___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb82)
  store %struct.Memory* %call_41fb82, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41fb86	 Bytes: 3
  %loadMem_41fb86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb86 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb86)
  store %struct.Memory* %call_41fb86, %struct.Memory** %MEMORY

  ; Code: callq .HandlePartner	 RIP: 41fb89	 Bytes: 5
  %loadMem1_41fb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fb89 = call %struct.Memory* @routine_callq_.HandlePartner(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fb89, i64 -63897, i64 5, i64 5)
  store %struct.Memory* %call1_41fb89, %struct.Memory** %MEMORY

  %loadMem2_41fb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fb89 = load i64, i64* %3
  %call2_41fb89 = call %struct.Memory* @sub_4101f0.HandlePartner(%struct.State* %0, i64  %loadPC_41fb89, %struct.Memory* %loadMem2_41fb89)
  store %struct.Memory* %call2_41fb89, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420407	 RIP: 41fb8e	 Bytes: 5
  %loadMem_41fb8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb8e = call %struct.Memory* @routine_jmpq_.L_420407(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb8e, i64 2169, i64 5)
  store %struct.Memory* %call_41fb8e, %struct.Memory** %MEMORY

  br label %block_.L_420407

  ; Code: .L_41fb93:	 RIP: 41fb93	 Bytes: 0
block_.L_41fb93:

  ; Code: movq $0x4294e8, %rsi	 RIP: 41fb93	 Bytes: 10
  %loadMem_41fb93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb93 = call %struct.Memory* @routine_movq__0x4294e8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb93)
  store %struct.Memory* %call_41fb93, %struct.Memory** %MEMORY

  ; Code: movl $0x8, %eax	 RIP: 41fb9d	 Bytes: 5
  %loadMem_41fb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fb9d = call %struct.Memory* @routine_movl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fb9d)
  store %struct.Memory* %call_41fb9d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fba2	 Bytes: 2
  %loadMem_41fba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fba2 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fba2)
  store %struct.Memory* %call_41fba2, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fba4	 Bytes: 7
  %loadMem_41fba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fba4 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fba4)
  store %struct.Memory* %call_41fba4, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fbab	 Bytes: 5
  %loadMem1_41fbab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fbab = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fbab, i64 -126795, i64 5, i64 5)
  store %struct.Memory* %call1_41fbab, %struct.Memory** %MEMORY

  %loadMem2_41fbab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fbab = load i64, i64* %3
  %call2_41fbab = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fbab, %struct.Memory* %loadMem2_41fbab)
  store %struct.Memory* %call2_41fbab, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fbb0	 Bytes: 3
  %loadMem_41fbb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbb0 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbb0)
  store %struct.Memory* %call_41fbb0, %struct.Memory** %MEMORY

  ; Code: jne .L_41fbd1	 RIP: 41fbb3	 Bytes: 6
  %loadMem_41fbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbb3 = call %struct.Memory* @routine_jne_.L_41fbd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbb3, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_41fbb3, %struct.Memory** %MEMORY

  %loadBr_41fbb3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fbb3 = icmp eq i8 %loadBr_41fbb3, 1
  br i1 %cmpBr_41fbb3, label %block_.L_41fbd1, label %block_41fbb9

block_41fbb9:
  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41fbb9	 Bytes: 7
  %loadMem_41fbb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbb9 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbb9)
  store %struct.Memory* %call_41fbb9, %struct.Memory** %MEMORY

  ; Code: addq $0x8, %rax	 RIP: 41fbc0	 Bytes: 4
  %loadMem_41fbc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbc0 = call %struct.Memory* @routine_addq__0x8___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbc0)
  store %struct.Memory* %call_41fbc0, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41fbc4	 Bytes: 3
  %loadMem_41fbc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbc4 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbc4)
  store %struct.Memory* %call_41fbc4, %struct.Memory** %MEMORY

  ; Code: callq .HandlePartner	 RIP: 41fbc7	 Bytes: 5
  %loadMem1_41fbc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fbc7 = call %struct.Memory* @routine_callq_.HandlePartner(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fbc7, i64 -63959, i64 5, i64 5)
  store %struct.Memory* %call1_41fbc7, %struct.Memory** %MEMORY

  %loadMem2_41fbc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fbc7 = load i64, i64* %3
  %call2_41fbc7 = call %struct.Memory* @sub_4101f0.HandlePartner(%struct.State* %0, i64  %loadPC_41fbc7, %struct.Memory* %loadMem2_41fbc7)
  store %struct.Memory* %call2_41fbc7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_420402	 RIP: 41fbcc	 Bytes: 5
  %loadMem_41fbcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbcc = call %struct.Memory* @routine_jmpq_.L_420402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbcc, i64 2102, i64 5)
  store %struct.Memory* %call_41fbcc, %struct.Memory** %MEMORY

  br label %block_.L_420402

  ; Code: .L_41fbd1:	 RIP: 41fbd1	 Bytes: 0
block_.L_41fbd1:

  ; Code: movq $0x4294f1, %rsi	 RIP: 41fbd1	 Bytes: 10
  %loadMem_41fbd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbd1 = call %struct.Memory* @routine_movq__0x4294f1___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbd1)
  store %struct.Memory* %call_41fbd1, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41fbdb	 Bytes: 5
  %loadMem_41fbdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbdb = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbdb)
  store %struct.Memory* %call_41fbdb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fbe0	 Bytes: 2
  %loadMem_41fbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbe0 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbe0)
  store %struct.Memory* %call_41fbe0, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fbe2	 Bytes: 7
  %loadMem_41fbe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbe2 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbe2)
  store %struct.Memory* %call_41fbe2, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fbe9	 Bytes: 5
  %loadMem1_41fbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fbe9 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fbe9, i64 -126857, i64 5, i64 5)
  store %struct.Memory* %call1_41fbe9, %struct.Memory** %MEMORY

  %loadMem2_41fbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fbe9 = load i64, i64* %3
  %call2_41fbe9 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fbe9, %struct.Memory* %loadMem2_41fbe9)
  store %struct.Memory* %call2_41fbe9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fbee	 Bytes: 3
  %loadMem_41fbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbee = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbee)
  store %struct.Memory* %call_41fbee, %struct.Memory** %MEMORY

  ; Code: jne .L_41fc08	 RIP: 41fbf1	 Bytes: 6
  %loadMem_41fbf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbf1 = call %struct.Memory* @routine_jne_.L_41fc08(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbf1, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_41fbf1, %struct.Memory** %MEMORY

  %loadBr_41fbf1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fbf1 = icmp eq i8 %loadBr_41fbf1, 1
  br i1 %cmpBr_41fbf1, label %block_.L_41fc08, label %block_41fbf7

block_41fbf7:
  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fbf7	 Bytes: 7
  %loadMem_41fbf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fbf7 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fbf7)
  store %struct.Memory* %call_41fbf7, %struct.Memory** %MEMORY

  ; Code: callq .HandlePtell	 RIP: 41fbfe	 Bytes: 5
  %loadMem1_41fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fbfe = call %struct.Memory* @routine_callq_.HandlePtell(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fbfe, i64 -63790, i64 5, i64 5)
  store %struct.Memory* %call1_41fbfe, %struct.Memory** %MEMORY

  %loadMem2_41fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fbfe = load i64, i64* %3
  %call2_41fbfe = call %struct.Memory* @sub_4102d0.HandlePtell(%struct.State* %0, i64  %loadPC_41fbfe, %struct.Memory* %loadMem2_41fbfe)
  store %struct.Memory* %call2_41fbfe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203fd	 RIP: 41fc03	 Bytes: 5
  %loadMem_41fc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc03 = call %struct.Memory* @routine_jmpq_.L_4203fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc03, i64 2042, i64 5)
  store %struct.Memory* %call_41fc03, %struct.Memory** %MEMORY

  br label %block_.L_4203fd

  ; Code: .L_41fc08:	 RIP: 41fc08	 Bytes: 0
block_.L_41fc08:

  ; Code: movq $0x4294f7, %rsi	 RIP: 41fc08	 Bytes: 10
  %loadMem_41fc08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc08 = call %struct.Memory* @routine_movq__0x4294f7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc08)
  store %struct.Memory* %call_41fc08, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41fc12	 Bytes: 5
  %loadMem_41fc12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc12 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc12)
  store %struct.Memory* %call_41fc12, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fc17	 Bytes: 2
  %loadMem_41fc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc17 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc17)
  store %struct.Memory* %call_41fc17, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fc19	 Bytes: 7
  %loadMem_41fc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc19 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc19)
  store %struct.Memory* %call_41fc19, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fc20	 Bytes: 5
  %loadMem1_41fc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fc20 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fc20, i64 -126912, i64 5, i64 5)
  store %struct.Memory* %call1_41fc20, %struct.Memory** %MEMORY

  %loadMem2_41fc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fc20 = load i64, i64* %3
  %call2_41fc20 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fc20, %struct.Memory* %loadMem2_41fc20)
  store %struct.Memory* %call2_41fc20, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fc25	 Bytes: 3
  %loadMem_41fc25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc25 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc25)
  store %struct.Memory* %call_41fc25, %struct.Memory** %MEMORY

  ; Code: jne .L_41fc38	 RIP: 41fc28	 Bytes: 6
  %loadMem_41fc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc28 = call %struct.Memory* @routine_jne_.L_41fc38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc28, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_41fc28, %struct.Memory** %MEMORY

  %loadBr_41fc28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fc28 = icmp eq i8 %loadBr_41fc28, 1
  br i1 %cmpBr_41fc28, label %block_.L_41fc38, label %block_41fc2e

block_41fc2e:
  ; Code: callq .run_epd_testsuite	 RIP: 41fc2e	 Bytes: 5
  %loadMem1_41fc2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fc2e = call %struct.Memory* @routine_callq_.run_epd_testsuite(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fc2e, i64 -116638, i64 5, i64 5)
  store %struct.Memory* %call1_41fc2e, %struct.Memory** %MEMORY

  %loadMem2_41fc2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fc2e = load i64, i64* %3
  %call2_41fc2e = call %struct.Memory* @sub_403490.run_epd_testsuite(%struct.State* %0, i64  %loadPC_41fc2e, %struct.Memory* %loadMem2_41fc2e)
  store %struct.Memory* %call2_41fc2e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203f8	 RIP: 41fc33	 Bytes: 5
  %loadMem_41fc33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc33 = call %struct.Memory* @routine_jmpq_.L_4203f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc33, i64 1989, i64 5)
  store %struct.Memory* %call_41fc33, %struct.Memory** %MEMORY

  br label %block_.L_4203f8

  ; Code: .L_41fc38:	 RIP: 41fc38	 Bytes: 0
block_.L_41fc38:

  ; Code: movq $0x4288b1, %rsi	 RIP: 41fc38	 Bytes: 10
  %loadMem_41fc38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc38 = call %struct.Memory* @routine_movq__0x4288b1___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc38)
  store %struct.Memory* %call_41fc38, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %eax	 RIP: 41fc42	 Bytes: 5
  %loadMem_41fc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc42 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc42)
  store %struct.Memory* %call_41fc42, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fc47	 Bytes: 2
  %loadMem_41fc47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc47 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc47)
  store %struct.Memory* %call_41fc47, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fc49	 Bytes: 7
  %loadMem_41fc49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc49 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc49)
  store %struct.Memory* %call_41fc49, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fc50	 Bytes: 5
  %loadMem1_41fc50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fc50 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fc50, i64 -126960, i64 5, i64 5)
  store %struct.Memory* %call1_41fc50, %struct.Memory** %MEMORY

  %loadMem2_41fc50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fc50 = load i64, i64* %3
  %call2_41fc50 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fc50, %struct.Memory* %loadMem2_41fc50)
  store %struct.Memory* %call2_41fc50, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fc55	 Bytes: 3
  %loadMem_41fc55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc55 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc55)
  store %struct.Memory* %call_41fc55, %struct.Memory** %MEMORY

  ; Code: jne .L_41fca1	 RIP: 41fc58	 Bytes: 6
  %loadMem_41fc58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc58 = call %struct.Memory* @routine_jne_.L_41fca1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc58, i8* %BRANCH_TAKEN, i64 73, i64 6, i64 6)
  store %struct.Memory* %call_41fc58, %struct.Memory** %MEMORY

  %loadBr_41fc58 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fc58 = icmp eq i8 %loadBr_41fc58, 1
  br i1 %cmpBr_41fc58, label %block_.L_41fca1, label %block_41fc5e

block_41fc5e:
  ; Code: movq $0x429aea, %rsi	 RIP: 41fc5e	 Bytes: 10
  %loadMem_41fc5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc5e = call %struct.Memory* @routine_movq__0x429aea___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc5e)
  store %struct.Memory* %call_41fc5e, %struct.Memory** %MEMORY

  ; Code: movq $0x886b80, %rdx	 RIP: 41fc68	 Bytes: 10
  %loadMem_41fc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc68 = call %struct.Memory* @routine_movq__0x886b80___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc68)
  store %struct.Memory* %call_41fc68, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41fc72	 Bytes: 7
  %loadMem_41fc72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc72 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc72)
  store %struct.Memory* %call_41fc72, %struct.Memory** %MEMORY

  ; Code: addq $0x3, %rax	 RIP: 41fc79	 Bytes: 4
  %loadMem_41fc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc79 = call %struct.Memory* @routine_addq__0x3___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc79)
  store %struct.Memory* %call_41fc79, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41fc7d	 Bytes: 3
  %loadMem_41fc7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc7d = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc7d)
  store %struct.Memory* %call_41fc7d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41fc80	 Bytes: 2
  %loadMem_41fc80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc80 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc80)
  store %struct.Memory* %call_41fc80, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41fc82	 Bytes: 5
  %loadMem1_41fc82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fc82 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fc82, i64 -126722, i64 5, i64 5)
  store %struct.Memory* %call1_41fc82, %struct.Memory** %MEMORY

  %loadMem2_41fc82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fc82 = load i64, i64* %3
  %call2_41fc82 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41fc82, %struct.Memory* %loadMem2_41fc82)
  store %struct.Memory* %call2_41fc82, %struct.Memory** %MEMORY

  ; Code: imull $0x64, 0x886b80, %ecx	 RIP: 41fc87	 Bytes: 8
  %loadMem_41fc87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc87 = call %struct.Memory* @routine_imull__0x64__0x886b80___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc87)
  store %struct.Memory* %call_41fc87, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x886b80	 RIP: 41fc8f	 Bytes: 7
  %loadMem_41fc8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc8f = call %struct.Memory* @routine_movl__ecx__0x886b80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc8f)
  store %struct.Memory* %call_41fc8f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62a8(%rbp)	 RIP: 41fc96	 Bytes: 6
  %loadMem_41fc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc96 = call %struct.Memory* @routine_movl__eax__MINUS0x62a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc96)
  store %struct.Memory* %call_41fc96, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203f3	 RIP: 41fc9c	 Bytes: 5
  %loadMem_41fc9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fc9c = call %struct.Memory* @routine_jmpq_.L_4203f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fc9c, i64 1879, i64 5)
  store %struct.Memory* %call_41fc9c, %struct.Memory** %MEMORY

  br label %block_.L_4203f3

  ; Code: .L_41fca1:	 RIP: 41fca1	 Bytes: 0
block_.L_41fca1:

  ; Code: movq $0x4294fc, %rsi	 RIP: 41fca1	 Bytes: 10
  %loadMem_41fca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fca1 = call %struct.Memory* @routine_movq__0x4294fc___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fca1)
  store %struct.Memory* %call_41fca1, %struct.Memory** %MEMORY

  ; Code: movl $0x6, %eax	 RIP: 41fcab	 Bytes: 5
  %loadMem_41fcab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcab = call %struct.Memory* @routine_movl__0x6___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcab)
  store %struct.Memory* %call_41fcab, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fcb0	 Bytes: 2
  %loadMem_41fcb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcb0 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcb0)
  store %struct.Memory* %call_41fcb0, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fcb2	 Bytes: 7
  %loadMem_41fcb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcb2 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcb2)
  store %struct.Memory* %call_41fcb2, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fcb9	 Bytes: 5
  %loadMem1_41fcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fcb9 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fcb9, i64 -127065, i64 5, i64 5)
  store %struct.Memory* %call1_41fcb9, %struct.Memory** %MEMORY

  %loadMem2_41fcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fcb9 = load i64, i64* %3
  %call2_41fcb9 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fcb9, %struct.Memory* %loadMem2_41fcb9)
  store %struct.Memory* %call2_41fcb9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fcbe	 Bytes: 3
  %loadMem_41fcbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcbe = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcbe)
  store %struct.Memory* %call_41fcbe, %struct.Memory** %MEMORY

  ; Code: jne .L_41fccc	 RIP: 41fcc1	 Bytes: 6
  %loadMem_41fcc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcc1 = call %struct.Memory* @routine_jne_.L_41fccc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcc1, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41fcc1, %struct.Memory** %MEMORY

  %loadBr_41fcc1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fcc1 = icmp eq i8 %loadBr_41fcc1, 1
  br i1 %cmpBr_41fcc1, label %block_.L_41fccc, label %block_41fcc7

block_41fcc7:
  ; Code: jmpq .L_4203ee	 RIP: 41fcc7	 Bytes: 5
  %loadMem_41fcc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcc7 = call %struct.Memory* @routine_jmpq_.L_4203ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcc7, i64 1831, i64 5)
  store %struct.Memory* %call_41fcc7, %struct.Memory** %MEMORY

  br label %block_.L_4203ee

  ; Code: .L_41fccc:	 RIP: 41fccc	 Bytes: 0
block_.L_41fccc:

  ; Code: movq $0x429503, %rsi	 RIP: 41fccc	 Bytes: 10
  %loadMem_41fccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fccc = call %struct.Memory* @routine_movq__0x429503___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fccc)
  store %struct.Memory* %call_41fccc, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41fcd6	 Bytes: 5
  %loadMem_41fcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcd6 = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcd6)
  store %struct.Memory* %call_41fcd6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fcdb	 Bytes: 2
  %loadMem_41fcdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcdb = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcdb)
  store %struct.Memory* %call_41fcdb, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fcdd	 Bytes: 7
  %loadMem_41fcdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcdd = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcdd)
  store %struct.Memory* %call_41fcdd, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fce4	 Bytes: 5
  %loadMem1_41fce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fce4 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fce4, i64 -127108, i64 5, i64 5)
  store %struct.Memory* %call1_41fce4, %struct.Memory** %MEMORY

  %loadMem2_41fce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fce4 = load i64, i64* %3
  %call2_41fce4 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fce4, %struct.Memory* %loadMem2_41fce4)
  store %struct.Memory* %call2_41fce4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fce9	 Bytes: 3
  %loadMem_41fce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fce9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fce9)
  store %struct.Memory* %call_41fce9, %struct.Memory** %MEMORY

  ; Code: jne .L_41fd69	 RIP: 41fcec	 Bytes: 6
  %loadMem_41fcec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcec = call %struct.Memory* @routine_jne_.L_41fd69(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcec, i8* %BRANCH_TAKEN, i64 125, i64 6, i64 6)
  store %struct.Memory* %call_41fcec, %struct.Memory** %MEMORY

  %loadBr_41fcec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fcec = icmp eq i8 %loadBr_41fcec, 1
  br i1 %cmpBr_41fcec, label %block_.L_41fd69, label %block_41fcf2

block_41fcf2:
  ; Code: movq $0x429509, %rdi	 RIP: 41fcf2	 Bytes: 10
  %loadMem_41fcf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcf2 = call %struct.Memory* @routine_movq__0x429509___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcf2)
  store %struct.Memory* %call_41fcf2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41fcfc	 Bytes: 2
  %loadMem_41fcfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fcfc = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fcfc)
  store %struct.Memory* %call_41fcfc, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41fcfe	 Bytes: 5
  %loadMem1_41fcfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fcfe = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fcfe, i64 -127054, i64 5, i64 5)
  store %struct.Memory* %call1_41fcfe, %struct.Memory** %MEMORY

  %loadMem2_41fcfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fcfe = load i64, i64* %3
  %call2_41fcfe = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41fcfe, %struct.Memory* %loadMem2_41fcfe)
  store %struct.Memory* %call2_41fcfe, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62ac(%rbp)	 RIP: 41fd03	 Bytes: 6
  %loadMem_41fd03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd03 = call %struct.Memory* @routine_movl__eax__MINUS0x62ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd03)
  store %struct.Memory* %call_41fd03, %struct.Memory** %MEMORY

  ; Code: callq .rtime	 RIP: 41fd09	 Bytes: 5
  %loadMem1_41fd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fd09 = call %struct.Memory* @routine_callq_.rtime(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fd09, i64 14935, i64 5, i64 5)
  store %struct.Memory* %call1_41fd09, %struct.Memory** %MEMORY

  %loadMem2_41fd09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fd09 = load i64, i64* %3
  %call2_41fd09 = call %struct.Memory* @sub_423760.rtime(%struct.State* %0, i64  %loadPC_41fd09, %struct.Memory* %loadMem2_41fd09)
  store %struct.Memory* %call2_41fd09, %struct.Memory** %MEMORY

  ; Code: movl $0x100, %esi	 RIP: 41fd0e	 Bytes: 5
  %loadMem_41fd0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd0e = call %struct.Memory* @routine_movl__0x100___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd0e)
  store %struct.Memory* %call_41fd0e, %struct.Memory** %MEMORY

  ; Code: leaq -0x320(%rbp), %rdi	 RIP: 41fd13	 Bytes: 7
  %loadMem_41fd13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd13 = call %struct.Memory* @routine_leaq_MINUS0x320__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd13)
  store %struct.Memory* %call_41fd13, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x8662e8	 RIP: 41fd1a	 Bytes: 8
  %loadMem_41fd1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd1a = call %struct.Memory* @routine_movq__rax__0x8662e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd1a)
  store %struct.Memory* %call_41fd1a, %struct.Memory** %MEMORY

  ; Code: movq 0x62da90, %rdx	 RIP: 41fd22	 Bytes: 8
  %loadMem_41fd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd22 = call %struct.Memory* @routine_movq_0x62da90___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd22)
  store %struct.Memory* %call_41fd22, %struct.Memory** %MEMORY

  ; Code: callq .rinput	 RIP: 41fd2a	 Bytes: 5
  %loadMem1_41fd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fd2a = call %struct.Memory* @routine_callq_.rinput(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fd2a, i64 12550, i64 5, i64 5)
  store %struct.Memory* %call1_41fd2a, %struct.Memory** %MEMORY

  %loadMem2_41fd2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fd2a = load i64, i64* %3
  %call2_41fd2a = call %struct.Memory* @sub_422e30.rinput(%struct.State* %0, i64  %loadPC_41fd2a, %struct.Memory* %loadMem2_41fd2a)
  store %struct.Memory* %call2_41fd2a, %struct.Memory** %MEMORY

  ; Code: leaq -0x320(%rbp), %rdi	 RIP: 41fd2f	 Bytes: 7
  %loadMem_41fd2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd2f = call %struct.Memory* @routine_leaq_MINUS0x320__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd2f)
  store %struct.Memory* %call_41fd2f, %struct.Memory** %MEMORY

  ; Code: callq .atol_plt	 RIP: 41fd36	 Bytes: 5
  %loadMem1_41fd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fd36 = call %struct.Memory* @routine_callq_.atol_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fd36, i64 -126886, i64 5, i64 5)
  store %struct.Memory* %call1_41fd36, %struct.Memory** %MEMORY

  %loadMem2_41fd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fd36 = load i64, i64* %3
  %call2_41fd36 = call %struct.Memory* @ext_atol(%struct.State* %0, i64  %loadPC_41fd36, %struct.Memory* %loadMem2_41fd36)
  store %struct.Memory* %call2_41fd36, %struct.Memory** %MEMORY

  ; Code: movq $0x429bef, %rdi	 RIP: 41fd3b	 Bytes: 10
  %loadMem_41fd3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd3b = call %struct.Memory* @routine_movq__0x429bef___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd3b)
  store %struct.Memory* %call_41fd3b, %struct.Memory** %MEMORY

  ; Code: imulq $0x64, %rax, %rax	 RIP: 41fd45	 Bytes: 4
  %loadMem_41fd45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd45 = call %struct.Memory* @routine_imulq__0x64___rax___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd45)
  store %struct.Memory* %call_41fd45, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 41fd49	 Bytes: 2
  %loadMem_41fd49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd49 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd49)
  store %struct.Memory* %call_41fd49, %struct.Memory** %MEMORY

  ; Code: movl %esi, 0x85f168	 RIP: 41fd4b	 Bytes: 7
  %loadMem_41fd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd4b = call %struct.Memory* @routine_movl__esi__0x85f168(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd4b)
  store %struct.Memory* %call_41fd4b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41fd52	 Bytes: 2
  %loadMem_41fd52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd52 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd52)
  store %struct.Memory* %call_41fd52, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41fd54	 Bytes: 5
  %loadMem1_41fd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fd54 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fd54, i64 -127140, i64 5, i64 5)
  store %struct.Memory* %call1_41fd54, %struct.Memory** %MEMORY

  %loadMem2_41fd54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fd54 = load i64, i64* %3
  %call2_41fd54 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41fd54, %struct.Memory* %loadMem2_41fd54)
  store %struct.Memory* %call2_41fd54, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62b0(%rbp)	 RIP: 41fd59	 Bytes: 6
  %loadMem_41fd59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd59 = call %struct.Memory* @routine_movl__eax__MINUS0x62b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd59)
  store %struct.Memory* %call_41fd59, %struct.Memory** %MEMORY

  ; Code: callq .proofnumbersearch	 RIP: 41fd5f	 Bytes: 5
  %loadMem1_41fd5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fd5f = call %struct.Memory* @routine_callq_.proofnumbersearch(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fd5f, i64 -44399, i64 5, i64 5)
  store %struct.Memory* %call1_41fd5f, %struct.Memory** %MEMORY

  %loadMem2_41fd5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fd5f = load i64, i64* %3
  %call2_41fd5f = call %struct.Memory* @sub_414ff0.proofnumbersearch(%struct.State* %0, i64  %loadPC_41fd5f, %struct.Memory* %loadMem2_41fd5f)
  store %struct.Memory* %call2_41fd5f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203e9	 RIP: 41fd64	 Bytes: 5
  %loadMem_41fd64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd64 = call %struct.Memory* @routine_jmpq_.L_4203e9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd64, i64 1669, i64 5)
  store %struct.Memory* %call_41fd64, %struct.Memory** %MEMORY

  br label %block_.L_4203e9

  ; Code: .L_41fd69:	 RIP: 41fd69	 Bytes: 0
block_.L_41fd69:

  ; Code: movq $0x429523, %rsi	 RIP: 41fd69	 Bytes: 10
  %loadMem_41fd69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd69 = call %struct.Memory* @routine_movq__0x429523___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd69)
  store %struct.Memory* %call_41fd69, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41fd73	 Bytes: 5
  %loadMem_41fd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd73 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd73)
  store %struct.Memory* %call_41fd73, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fd78	 Bytes: 2
  %loadMem_41fd78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd78 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd78)
  store %struct.Memory* %call_41fd78, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fd7a	 Bytes: 7
  %loadMem_41fd7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd7a = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd7a)
  store %struct.Memory* %call_41fd7a, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fd81	 Bytes: 5
  %loadMem1_41fd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fd81 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fd81, i64 -127265, i64 5, i64 5)
  store %struct.Memory* %call1_41fd81, %struct.Memory** %MEMORY

  %loadMem2_41fd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fd81 = load i64, i64* %3
  %call2_41fd81 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fd81, %struct.Memory* %loadMem2_41fd81)
  store %struct.Memory* %call2_41fd81, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fd86	 Bytes: 3
  %loadMem_41fd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd86 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd86)
  store %struct.Memory* %call_41fd86, %struct.Memory** %MEMORY

  ; Code: jne .L_41fddd	 RIP: 41fd89	 Bytes: 6
  %loadMem_41fd89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd89 = call %struct.Memory* @routine_jne_.L_41fddd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd89, i8* %BRANCH_TAKEN, i64 84, i64 6, i64 6)
  store %struct.Memory* %call_41fd89, %struct.Memory** %MEMORY

  %loadBr_41fd89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fd89 = icmp eq i8 %loadBr_41fd89, 1
  br i1 %cmpBr_41fd89, label %block_.L_41fddd, label %block_41fd8f

block_41fd8f:
  ; Code: movq $0x429aea, %rsi	 RIP: 41fd8f	 Bytes: 10
  %loadMem_41fd8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd8f = call %struct.Memory* @routine_movq__0x429aea___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd8f)
  store %struct.Memory* %call_41fd8f, %struct.Memory** %MEMORY

  ; Code: leaq -0x612c(%rbp), %rdx	 RIP: 41fd99	 Bytes: 7
  %loadMem_41fd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fd99 = call %struct.Memory* @routine_leaq_MINUS0x612c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fd99)
  store %struct.Memory* %call_41fd99, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41fda0	 Bytes: 7
  %loadMem_41fda0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fda0 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fda0)
  store %struct.Memory* %call_41fda0, %struct.Memory** %MEMORY

  ; Code: addq $0x5, %rax	 RIP: 41fda7	 Bytes: 4
  %loadMem_41fda7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fda7 = call %struct.Memory* @routine_addq__0x5___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fda7)
  store %struct.Memory* %call_41fda7, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41fdab	 Bytes: 3
  %loadMem_41fdab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdab = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdab)
  store %struct.Memory* %call_41fdab, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41fdae	 Bytes: 2
  %loadMem_41fdae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdae = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdae)
  store %struct.Memory* %call_41fdae, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41fdb0	 Bytes: 5
  %loadMem1_41fdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fdb0 = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fdb0, i64 -127024, i64 5, i64 5)
  store %struct.Memory* %call1_41fdb0, %struct.Memory** %MEMORY

  %loadMem2_41fdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fdb0 = load i64, i64* %3
  %call2_41fdb0 = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41fdb0, %struct.Memory* %loadMem2_41fdb0)
  store %struct.Memory* %call2_41fdb0, %struct.Memory** %MEMORY

  ; Code: movq $0x429528, %rdi	 RIP: 41fdb5	 Bytes: 10
  %loadMem_41fdb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdb5 = call %struct.Memory* @routine_movq__0x429528___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdb5)
  store %struct.Memory* %call_41fdb5, %struct.Memory** %MEMORY

  ; Code: movl -0x612c(%rbp), %esi	 RIP: 41fdbf	 Bytes: 6
  %loadMem_41fdbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdbf = call %struct.Memory* @routine_movl_MINUS0x612c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdbf)
  store %struct.Memory* %call_41fdbf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62b4(%rbp)	 RIP: 41fdc5	 Bytes: 6
  %loadMem_41fdc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdc5 = call %struct.Memory* @routine_movl__eax__MINUS0x62b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdc5)
  store %struct.Memory* %call_41fdc5, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41fdcb	 Bytes: 2
  %loadMem_41fdcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdcb = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdcb)
  store %struct.Memory* %call_41fdcb, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41fdcd	 Bytes: 5
  %loadMem1_41fdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fdcd = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fdcd, i64 -127261, i64 5, i64 5)
  store %struct.Memory* %call1_41fdcd, %struct.Memory** %MEMORY

  %loadMem2_41fdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fdcd = load i64, i64* %3
  %call2_41fdcd = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41fdcd, %struct.Memory* %loadMem2_41fdcd)
  store %struct.Memory* %call2_41fdcd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62b8(%rbp)	 RIP: 41fdd2	 Bytes: 6
  %loadMem_41fdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdd2 = call %struct.Memory* @routine_movl__eax__MINUS0x62b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdd2)
  store %struct.Memory* %call_41fdd2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203e4	 RIP: 41fdd8	 Bytes: 5
  %loadMem_41fdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdd8 = call %struct.Memory* @routine_jmpq_.L_4203e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdd8, i64 1548, i64 5)
  store %struct.Memory* %call_41fdd8, %struct.Memory** %MEMORY

  br label %block_.L_4203e4

  ; Code: .L_41fddd:	 RIP: 41fddd	 Bytes: 0
block_.L_41fddd:

  ; Code: movq $0x429531, %rsi	 RIP: 41fddd	 Bytes: 10
  %loadMem_41fddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fddd = call %struct.Memory* @routine_movq__0x429531___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fddd)
  store %struct.Memory* %call_41fddd, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41fde7	 Bytes: 5
  %loadMem_41fde7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fde7 = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fde7)
  store %struct.Memory* %call_41fde7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fdec	 Bytes: 2
  %loadMem_41fdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdec = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdec)
  store %struct.Memory* %call_41fdec, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fdee	 Bytes: 7
  %loadMem_41fdee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdee = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdee)
  store %struct.Memory* %call_41fdee, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fdf5	 Bytes: 5
  %loadMem1_41fdf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fdf5 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fdf5, i64 -127381, i64 5, i64 5)
  store %struct.Memory* %call1_41fdf5, %struct.Memory** %MEMORY

  %loadMem2_41fdf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fdf5 = load i64, i64* %3
  %call2_41fdf5 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fdf5, %struct.Memory* %loadMem2_41fdf5)
  store %struct.Memory* %call2_41fdf5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fdfa	 Bytes: 3
  %loadMem_41fdfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdfa = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdfa)
  store %struct.Memory* %call_41fdfa, %struct.Memory** %MEMORY

  ; Code: jne .L_41fe12	 RIP: 41fdfd	 Bytes: 6
  %loadMem_41fdfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fdfd = call %struct.Memory* @routine_jne_.L_41fe12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fdfd, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_41fdfd, %struct.Memory** %MEMORY

  %loadBr_41fdfd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fdfd = icmp eq i8 %loadBr_41fdfd, 1
  br i1 %cmpBr_41fdfd, label %block_.L_41fe12, label %block_41fe03

block_41fe03:
  ; Code: movl $0x1, -0x6130(%rbp)	 RIP: 41fe03	 Bytes: 10
  %loadMem_41fe03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe03 = call %struct.Memory* @routine_movl__0x1__MINUS0x6130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe03)
  store %struct.Memory* %call_41fe03, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203df	 RIP: 41fe0d	 Bytes: 5
  %loadMem_41fe0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe0d = call %struct.Memory* @routine_jmpq_.L_4203df(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe0d, i64 1490, i64 5)
  store %struct.Memory* %call_41fe0d, %struct.Memory** %MEMORY

  br label %block_.L_4203df

  ; Code: .L_41fe12:	 RIP: 41fe12	 Bytes: 0
block_.L_41fe12:

  ; Code: movq $0x429537, %rsi	 RIP: 41fe12	 Bytes: 10
  %loadMem_41fe12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe12 = call %struct.Memory* @routine_movq__0x429537___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe12)
  store %struct.Memory* %call_41fe12, %struct.Memory** %MEMORY

  ; Code: movl $0x5, %eax	 RIP: 41fe1c	 Bytes: 5
  %loadMem_41fe1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe1c = call %struct.Memory* @routine_movl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe1c)
  store %struct.Memory* %call_41fe1c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fe21	 Bytes: 2
  %loadMem_41fe21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe21 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe21)
  store %struct.Memory* %call_41fe21, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fe23	 Bytes: 7
  %loadMem_41fe23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe23 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe23)
  store %struct.Memory* %call_41fe23, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41fe2a	 Bytes: 5
  %loadMem1_41fe2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fe2a = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fe2a, i64 -127434, i64 5, i64 5)
  store %struct.Memory* %call1_41fe2a, %struct.Memory** %MEMORY

  %loadMem2_41fe2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fe2a = load i64, i64* %3
  %call2_41fe2a = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41fe2a, %struct.Memory* %loadMem2_41fe2a)
  store %struct.Memory* %call2_41fe2a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fe2f	 Bytes: 3
  %loadMem_41fe2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe2f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe2f)
  store %struct.Memory* %call_41fe2f, %struct.Memory** %MEMORY

  ; Code: jne .L_41fed7	 RIP: 41fe32	 Bytes: 6
  %loadMem_41fe32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe32 = call %struct.Memory* @routine_jne_.L_41fed7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe32, i8* %BRANCH_TAKEN, i64 165, i64 6, i64 6)
  store %struct.Memory* %call_41fe32, %struct.Memory** %MEMORY

  %loadBr_41fe32 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fe32 = icmp eq i8 %loadBr_41fe32, 1
  br i1 %cmpBr_41fe32, label %block_.L_41fed7, label %block_41fe38

block_41fe38:
  ; Code: movq $0x62dab0, %rax	 RIP: 41fe38	 Bytes: 10
  %loadMem_41fe38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe38 = call %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe38)
  store %struct.Memory* %call_41fe38, %struct.Memory** %MEMORY

  ; Code: movq $0x62c130, %rcx	 RIP: 41fe42	 Bytes: 10
  %loadMem_41fe42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe42 = call %struct.Memory* @routine_movq__0x62c130___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe42)
  store %struct.Memory* %call_41fe42, %struct.Memory** %MEMORY

  ; Code: movl $0x38, %edx	 RIP: 41fe4c	 Bytes: 5
  %loadMem_41fe4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe4c = call %struct.Memory* @routine_movl__0x38___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe4c)
  store %struct.Memory* %call_41fe4c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41fe51	 Bytes: 3
  %loadMem_41fe51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe51 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe51)
  store %struct.Memory* %call_41fe51, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 41fe54	 Bytes: 3
  %loadMem_41fe54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe54 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe54)
  store %struct.Memory* %call_41fe54, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 41fe57	 Bytes: 5
  %loadMem1_41fe57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fe57 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fe57, i64 -127255, i64 5, i64 5)
  store %struct.Memory* %call1_41fe57, %struct.Memory** %MEMORY

  %loadMem2_41fe57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fe57 = load i64, i64* %3
  %call2_41fe57 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_41fe57, %struct.Memory* %loadMem2_41fe57)
  store %struct.Memory* %call2_41fe57, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x85f154	 RIP: 41fe5c	 Bytes: 11
  %loadMem_41fe5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe5c = call %struct.Memory* @routine_movl__0x2__0x85f154(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe5c)
  store %struct.Memory* %call_41fe5c, %struct.Memory** %MEMORY

  ; Code: callq .init_game	 RIP: 41fe67	 Bytes: 5
  %loadMem1_41fe67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fe67 = call %struct.Memory* @routine_callq_.init_game(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fe67, i64 10297, i64 5, i64 5)
  store %struct.Memory* %call1_41fe67, %struct.Memory** %MEMORY

  %loadMem2_41fe67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fe67 = load i64, i64* %3
  %call2_41fe67 = call %struct.Memory* @sub_4226a0.init_game(%struct.State* %0, i64  %loadPC_41fe67, %struct.Memory* %loadMem2_41fe67)
  store %struct.Memory* %call2_41fe67, %struct.Memory** %MEMORY

  ; Code: callq .initialize_hash	 RIP: 41fe6c	 Bytes: 5
  %loadMem1_41fe6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fe6c = call %struct.Memory* @routine_callq_.initialize_hash(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fe6c, i64 1940, i64 5, i64 5)
  store %struct.Memory* %call1_41fe6c, %struct.Memory** %MEMORY

  %loadMem2_41fe6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fe6c = load i64, i64* %3
  %call2_41fe6c = call %struct.Memory* @sub_420600.initialize_hash(%struct.State* %0, i64  %loadPC_41fe6c, %struct.Memory* %loadMem2_41fe6c)
  store %struct.Memory* %call2_41fe6c, %struct.Memory** %MEMORY

  ; Code: callq .clear_tt	 RIP: 41fe71	 Bytes: 5
  %loadMem1_41fe71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fe71 = call %struct.Memory* @routine_callq_.clear_tt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fe71, i64 1615, i64 5, i64 5)
  store %struct.Memory* %call1_41fe71, %struct.Memory** %MEMORY

  %loadMem2_41fe71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fe71 = load i64, i64* %3
  %call2_41fe71 = call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64  %loadPC_41fe71, %struct.Memory* %loadMem2_41fe71)
  store %struct.Memory* %call2_41fe71, %struct.Memory** %MEMORY

  ; Code: callq .reset_ecache	 RIP: 41fe76	 Bytes: 5
  %loadMem1_41fe76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41fe76 = call %struct.Memory* @routine_callq_.reset_ecache(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41fe76, i64 -119398, i64 5, i64 5)
  store %struct.Memory* %call1_41fe76, %struct.Memory** %MEMORY

  %loadMem2_41fe76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41fe76 = load i64, i64* %3
  %call2_41fe76 = call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* %0, i64  %loadPC_41fe76, %struct.Memory* %loadMem2_41fe76)
  store %struct.Memory* %call2_41fe76, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x358(%rbp)	 RIP: 41fe7b	 Bytes: 10
  %loadMem_41fe7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe7b = call %struct.Memory* @routine_movl__0x0__MINUS0x358__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe7b)
  store %struct.Memory* %call_41fe7b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b80	 RIP: 41fe85	 Bytes: 11
  %loadMem_41fe85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe85 = call %struct.Memory* @routine_movl__0x0__0x886b80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe85)
  store %struct.Memory* %call_41fe85, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x633b54	 RIP: 41fe90	 Bytes: 11
  %loadMem_41fe90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe90 = call %struct.Memory* @routine_movl__0x0__0x633b54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe90)
  store %struct.Memory* %call_41fe90, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886b84	 RIP: 41fe9b	 Bytes: 11
  %loadMem_41fe9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fe9b = call %struct.Memory* @routine_movl__0x0__0x886b84(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fe9b)
  store %struct.Memory* %call_41fe9b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x62ea38	 RIP: 41fea6	 Bytes: 11
  %loadMem_41fea6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fea6 = call %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fea6)
  store %struct.Memory* %call_41fea6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x886be4	 RIP: 41feb1	 Bytes: 11
  %loadMem_41feb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41feb1 = call %struct.Memory* @routine_movl__0x0__0x886be4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41feb1)
  store %struct.Memory* %call_41feb1, %struct.Memory** %MEMORY

  ; Code: movl $0x7d0, 0x886bc4	 RIP: 41febc	 Bytes: 11
  %loadMem_41febc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41febc = call %struct.Memory* @routine_movl__0x7d0__0x886bc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41febc)
  store %struct.Memory* %call_41febc, %struct.Memory** %MEMORY

  ; Code: movl $0x7d0, 0x880b14	 RIP: 41fec7	 Bytes: 11
  %loadMem_41fec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fec7 = call %struct.Memory* @routine_movl__0x7d0__0x880b14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fec7)
  store %struct.Memory* %call_41fec7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203da	 RIP: 41fed2	 Bytes: 5
  %loadMem_41fed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fed2 = call %struct.Memory* @routine_jmpq_.L_4203da(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fed2, i64 1288, i64 5)
  store %struct.Memory* %call_41fed2, %struct.Memory** %MEMORY

  br label %block_.L_4203da

  ; Code: .L_41fed7:	 RIP: 41fed7	 Bytes: 0
block_.L_41fed7:

  ; Code: movq $0x42936b, %rsi	 RIP: 41fed7	 Bytes: 10
  %loadMem_41fed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fed7 = call %struct.Memory* @routine_movq__0x42936b___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fed7)
  store %struct.Memory* %call_41fed7, %struct.Memory** %MEMORY

  ; Code: movl $0x8, %eax	 RIP: 41fee1	 Bytes: 5
  %loadMem_41fee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fee1 = call %struct.Memory* @routine_movl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fee1)
  store %struct.Memory* %call_41fee1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fee6	 Bytes: 2
  %loadMem_41fee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fee6 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fee6)
  store %struct.Memory* %call_41fee6, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fee8	 Bytes: 7
  %loadMem_41fee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fee8 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fee8)
  store %struct.Memory* %call_41fee8, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41feef	 Bytes: 5
  %loadMem1_41feef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41feef = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41feef, i64 -127631, i64 5, i64 5)
  store %struct.Memory* %call1_41feef, %struct.Memory** %MEMORY

  %loadMem2_41feef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41feef = load i64, i64* %3
  %call2_41feef = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41feef, %struct.Memory* %loadMem2_41feef)
  store %struct.Memory* %call2_41feef, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41fef4	 Bytes: 3
  %loadMem_41fef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fef4 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fef4)
  store %struct.Memory* %call_41fef4, %struct.Memory** %MEMORY

  ; Code: jne .L_41ff15	 RIP: 41fef7	 Bytes: 6
  %loadMem_41fef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fef7 = call %struct.Memory* @routine_jne_.L_41ff15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fef7, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_41fef7, %struct.Memory** %MEMORY

  %loadBr_41fef7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41fef7 = icmp eq i8 %loadBr_41fef7, 1
  br i1 %cmpBr_41fef7, label %block_.L_41ff15, label %block_41fefd

block_41fefd:
  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41fefd	 Bytes: 7
  %loadMem_41fefd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fefd = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fefd)
  store %struct.Memory* %call_41fefd, %struct.Memory** %MEMORY

  ; Code: addq $0x9, %rax	 RIP: 41ff04	 Bytes: 4
  %loadMem_41ff04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff04 = call %struct.Memory* @routine_addq__0x9___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff04)
  store %struct.Memory* %call_41ff04, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41ff08	 Bytes: 3
  %loadMem_41ff08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff08 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff08)
  store %struct.Memory* %call_41ff08, %struct.Memory** %MEMORY

  ; Code: callq .setup_epd_line	 RIP: 41ff0b	 Bytes: 5
  %loadMem1_41ff0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ff0b = call %struct.Memory* @routine_callq_.setup_epd_line(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ff0b, i64 -119371, i64 5, i64 5)
  store %struct.Memory* %call1_41ff0b, %struct.Memory** %MEMORY

  %loadMem2_41ff0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ff0b = load i64, i64* %3
  %call2_41ff0b = call %struct.Memory* @sub_402cc0.setup_epd_line(%struct.State* %0, i64  %loadPC_41ff0b, %struct.Memory* %loadMem2_41ff0b)
  store %struct.Memory* %call2_41ff0b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203d5	 RIP: 41ff10	 Bytes: 5
  %loadMem_41ff10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff10 = call %struct.Memory* @routine_jmpq_.L_4203d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff10, i64 1221, i64 5)
  store %struct.Memory* %call_41ff10, %struct.Memory** %MEMORY

  br label %block_.L_4203d5

  ; Code: .L_41ff15:	 RIP: 41ff15	 Bytes: 0
block_.L_41ff15:

  ; Code: movq $0x4294e4, %rsi	 RIP: 41ff15	 Bytes: 10
  %loadMem_41ff15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff15 = call %struct.Memory* @routine_movq__0x4294e4___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff15)
  store %struct.Memory* %call_41ff15, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 41ff1f	 Bytes: 5
  %loadMem_41ff1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff1f = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff1f)
  store %struct.Memory* %call_41ff1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41ff24	 Bytes: 2
  %loadMem_41ff24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff24 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff24)
  store %struct.Memory* %call_41ff24, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ff26	 Bytes: 7
  %loadMem_41ff26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff26 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff26)
  store %struct.Memory* %call_41ff26, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41ff2d	 Bytes: 5
  %loadMem1_41ff2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ff2d = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ff2d, i64 -127693, i64 5, i64 5)
  store %struct.Memory* %call1_41ff2d, %struct.Memory** %MEMORY

  %loadMem2_41ff2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ff2d = load i64, i64* %3
  %call2_41ff2d = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41ff2d, %struct.Memory* %loadMem2_41ff2d)
  store %struct.Memory* %call2_41ff2d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ff32	 Bytes: 3
  %loadMem_41ff32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff32 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff32)
  store %struct.Memory* %call_41ff32, %struct.Memory** %MEMORY

  ; Code: jne .L_41ff40	 RIP: 41ff35	 Bytes: 6
  %loadMem_41ff35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff35 = call %struct.Memory* @routine_jne_.L_41ff40(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff35, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_41ff35, %struct.Memory** %MEMORY

  %loadBr_41ff35 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ff35 = icmp eq i8 %loadBr_41ff35, 1
  br i1 %cmpBr_41ff35, label %block_.L_41ff40, label %block_41ff3b

block_41ff3b:
  ; Code: jmpq .L_41dec3	 RIP: 41ff3b	 Bytes: 5
  %loadMem_41ff3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff3b = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff3b, i64 -8312, i64 5)
  store %struct.Memory* %call_41ff3b, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41ff40:	 RIP: 41ff40	 Bytes: 0
block_.L_41ff40:

  ; Code: movq $0x42953d, %rsi	 RIP: 41ff40	 Bytes: 10
  %loadMem_41ff40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff40 = call %struct.Memory* @routine_movq__0x42953d___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff40)
  store %struct.Memory* %call_41ff40, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %eax	 RIP: 41ff4a	 Bytes: 5
  %loadMem_41ff4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff4a = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff4a)
  store %struct.Memory* %call_41ff4a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41ff4f	 Bytes: 2
  %loadMem_41ff4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff4f = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff4f)
  store %struct.Memory* %call_41ff4f, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ff51	 Bytes: 7
  %loadMem_41ff51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff51 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff51)
  store %struct.Memory* %call_41ff51, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41ff58	 Bytes: 5
  %loadMem1_41ff58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ff58 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ff58, i64 -127736, i64 5, i64 5)
  store %struct.Memory* %call1_41ff58, %struct.Memory** %MEMORY

  %loadMem2_41ff58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ff58 = load i64, i64* %3
  %call2_41ff58 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41ff58, %struct.Memory* %loadMem2_41ff58)
  store %struct.Memory* %call2_41ff58, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ff5d	 Bytes: 3
  %loadMem_41ff5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff5d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff5d)
  store %struct.Memory* %call_41ff5d, %struct.Memory** %MEMORY

  ; Code: jne .L_41ffb8	 RIP: 41ff60	 Bytes: 6
  %loadMem_41ff60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff60 = call %struct.Memory* @routine_jne_.L_41ffb8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff60, i8* %BRANCH_TAKEN, i64 88, i64 6, i64 6)
  store %struct.Memory* %call_41ff60, %struct.Memory** %MEMORY

  %loadBr_41ff60 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ff60 = icmp eq i8 %loadBr_41ff60, 1
  br i1 %cmpBr_41ff60, label %block_.L_41ffb8, label %block_41ff66

block_41ff66:
  ; Code: movq $0x429aea, %rsi	 RIP: 41ff66	 Bytes: 10
  %loadMem_41ff66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff66 = call %struct.Memory* @routine_movq__0x429aea___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff66)
  store %struct.Memory* %call_41ff66, %struct.Memory** %MEMORY

  ; Code: movq $0x880b18, %rdx	 RIP: 41ff70	 Bytes: 10
  %loadMem_41ff70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff70 = call %struct.Memory* @routine_movq__0x880b18___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff70)
  store %struct.Memory* %call_41ff70, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rax	 RIP: 41ff7a	 Bytes: 7
  %loadMem_41ff7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff7a = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff7a)
  store %struct.Memory* %call_41ff7a, %struct.Memory** %MEMORY

  ; Code: addq $0x3, %rax	 RIP: 41ff81	 Bytes: 4
  %loadMem_41ff81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff81 = call %struct.Memory* @routine_addq__0x3___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff81)
  store %struct.Memory* %call_41ff81, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 41ff85	 Bytes: 3
  %loadMem_41ff85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff85 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff85)
  store %struct.Memory* %call_41ff85, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ff88	 Bytes: 2
  %loadMem_41ff88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff88 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff88)
  store %struct.Memory* %call_41ff88, %struct.Memory** %MEMORY

  ; Code: callq .__isoc99_sscanf_plt	 RIP: 41ff8a	 Bytes: 5
  %loadMem1_41ff8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ff8a = call %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ff8a, i64 -127498, i64 5, i64 5)
  store %struct.Memory* %call1_41ff8a, %struct.Memory** %MEMORY

  %loadMem2_41ff8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ff8a = load i64, i64* %3
  %call2_41ff8a = call %struct.Memory* @ext___isoc99_sscanf(%struct.State* %0, i64  %loadPC_41ff8a, %struct.Memory* %loadMem2_41ff8a)
  store %struct.Memory* %call2_41ff8a, %struct.Memory** %MEMORY

  ; Code: movq $0x429540, %rdi	 RIP: 41ff8f	 Bytes: 10
  %loadMem_41ff8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff8f = call %struct.Memory* @routine_movq__0x429540___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff8f)
  store %struct.Memory* %call_41ff8f, %struct.Memory** %MEMORY

  ; Code: movl 0x880b18, %esi	 RIP: 41ff99	 Bytes: 7
  %loadMem_41ff99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ff99 = call %struct.Memory* @routine_movl_0x880b18___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ff99)
  store %struct.Memory* %call_41ff99, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62bc(%rbp)	 RIP: 41ffa0	 Bytes: 6
  %loadMem_41ffa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffa0 = call %struct.Memory* @routine_movl__eax__MINUS0x62bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffa0)
  store %struct.Memory* %call_41ffa0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 41ffa6	 Bytes: 2
  %loadMem_41ffa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffa6 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffa6)
  store %struct.Memory* %call_41ffa6, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 41ffa8	 Bytes: 5
  %loadMem1_41ffa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ffa8 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ffa8, i64 -127736, i64 5, i64 5)
  store %struct.Memory* %call1_41ffa8, %struct.Memory** %MEMORY

  %loadMem2_41ffa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ffa8 = load i64, i64* %3
  %call2_41ffa8 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_41ffa8, %struct.Memory* %loadMem2_41ffa8)
  store %struct.Memory* %call2_41ffa8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62c0(%rbp)	 RIP: 41ffad	 Bytes: 6
  %loadMem_41ffad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffad = call %struct.Memory* @routine_movl__eax__MINUS0x62c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffad)
  store %struct.Memory* %call_41ffad, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dec3	 RIP: 41ffb3	 Bytes: 5
  %loadMem_41ffb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffb3 = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffb3, i64 -8432, i64 5)
  store %struct.Memory* %call_41ffb3, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41ffb8:	 RIP: 41ffb8	 Bytes: 0
block_.L_41ffb8:

  ; Code: movq $0x42955a, %rsi	 RIP: 41ffb8	 Bytes: 10
  %loadMem_41ffb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffb8 = call %struct.Memory* @routine_movq__0x42955a___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffb8)
  store %struct.Memory* %call_41ffb8, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 41ffc2	 Bytes: 5
  %loadMem_41ffc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffc2 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffc2)
  store %struct.Memory* %call_41ffc2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41ffc7	 Bytes: 2
  %loadMem_41ffc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffc7 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffc7)
  store %struct.Memory* %call_41ffc7, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41ffc9	 Bytes: 7
  %loadMem_41ffc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffc9 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffc9)
  store %struct.Memory* %call_41ffc9, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 41ffd0	 Bytes: 5
  %loadMem1_41ffd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_41ffd0 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_41ffd0, i64 -127856, i64 5, i64 5)
  store %struct.Memory* %call1_41ffd0, %struct.Memory** %MEMORY

  %loadMem2_41ffd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ffd0 = load i64, i64* %3
  %call2_41ffd0 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_41ffd0, %struct.Memory* %loadMem2_41ffd0)
  store %struct.Memory* %call2_41ffd0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 41ffd5	 Bytes: 3
  %loadMem_41ffd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffd5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffd5)
  store %struct.Memory* %call_41ffd5, %struct.Memory** %MEMORY

  ; Code: jne .L_41ffed	 RIP: 41ffd8	 Bytes: 6
  %loadMem_41ffd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffd8 = call %struct.Memory* @routine_jne_.L_41ffed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffd8, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_41ffd8, %struct.Memory** %MEMORY

  %loadBr_41ffd8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ffd8 = icmp eq i8 %loadBr_41ffd8, 1
  br i1 %cmpBr_41ffd8, label %block_.L_41ffed, label %block_41ffde

block_41ffde:
  ; Code: movl $0x1, -0x6134(%rbp)	 RIP: 41ffde	 Bytes: 10
  %loadMem_41ffde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffde = call %struct.Memory* @routine_movl__0x1__MINUS0x6134__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffde)
  store %struct.Memory* %call_41ffde, %struct.Memory** %MEMORY

  ; Code: jmpq .L_41dec3	 RIP: 41ffe8	 Bytes: 5
  %loadMem_41ffe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffe8 = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffe8, i64 -8485, i64 5)
  store %struct.Memory* %call_41ffe8, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: .L_41ffed:	 RIP: 41ffed	 Bytes: 0
block_.L_41ffed:

  ; Code: movq $0x42955f, %rsi	 RIP: 41ffed	 Bytes: 10
  %loadMem_41ffed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41ffed = call %struct.Memory* @routine_movq__0x42955f___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41ffed)
  store %struct.Memory* %call_41ffed, %struct.Memory** %MEMORY

  ; Code: movl $0x8, %eax	 RIP: 41fff7	 Bytes: 5
  %loadMem_41fff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fff7 = call %struct.Memory* @routine_movl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fff7)
  store %struct.Memory* %call_41fff7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 41fffc	 Bytes: 2
  %loadMem_41fffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fffc = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fffc)
  store %struct.Memory* %call_41fffc, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 41fffe	 Bytes: 7
  %loadMem_41fffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_41fffe = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_41fffe)
  store %struct.Memory* %call_41fffe, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 420005	 Bytes: 5
  %loadMem1_420005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420005 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420005, i64 -127909, i64 5, i64 5)
  store %struct.Memory* %call1_420005, %struct.Memory** %MEMORY

  %loadMem2_420005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420005 = load i64, i64* %3
  %call2_420005 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_420005, %struct.Memory* %loadMem2_420005)
  store %struct.Memory* %call2_420005, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 42000a	 Bytes: 3
  %loadMem_42000a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42000a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42000a)
  store %struct.Memory* %call_42000a, %struct.Memory** %MEMORY

  ; Code: jne .L_420096	 RIP: 42000d	 Bytes: 6
  %loadMem_42000d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42000d = call %struct.Memory* @routine_jne_.L_420096(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42000d, i8* %BRANCH_TAKEN, i64 137, i64 6, i64 6)
  store %struct.Memory* %call_42000d, %struct.Memory** %MEMORY

  %loadBr_42000d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_42000d = icmp eq i8 %loadBr_42000d, 1
  br i1 %cmpBr_42000d, label %block_.L_420096, label %block_420013

block_420013:
  ; Code: movq $0x429568, %rdi	 RIP: 420013	 Bytes: 10
  %loadMem_420013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420013 = call %struct.Memory* @routine_movq__0x429568___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420013)
  store %struct.Memory* %call_420013, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42001d	 Bytes: 2
  %loadMem_42001d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42001d = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42001d)
  store %struct.Memory* %call_42001d, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42001f	 Bytes: 5
  %loadMem1_42001f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42001f = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42001f, i64 -127855, i64 5, i64 5)
  store %struct.Memory* %call1_42001f, %struct.Memory** %MEMORY

  %loadMem2_42001f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42001f = load i64, i64* %3
  %call2_42001f = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42001f, %struct.Memory* %loadMem2_42001f)
  store %struct.Memory* %call2_42001f, %struct.Memory** %MEMORY

  ; Code: movq $0x4295a7, %rdi	 RIP: 420024	 Bytes: 10
  %loadMem_420024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420024 = call %struct.Memory* @routine_movq__0x4295a7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420024)
  store %struct.Memory* %call_420024, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62c4(%rbp)	 RIP: 42002e	 Bytes: 6
  %loadMem_42002e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42002e = call %struct.Memory* @routine_movl__eax__MINUS0x62c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42002e)
  store %struct.Memory* %call_42002e, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420034	 Bytes: 2
  %loadMem_420034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420034 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420034)
  store %struct.Memory* %call_420034, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420036	 Bytes: 5
  %loadMem1_420036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420036 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420036, i64 -127878, i64 5, i64 5)
  store %struct.Memory* %call1_420036, %struct.Memory** %MEMORY

  %loadMem2_420036 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420036 = load i64, i64* %3
  %call2_420036 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420036, %struct.Memory* %loadMem2_420036)
  store %struct.Memory* %call2_420036, %struct.Memory** %MEMORY

  ; Code: movq $0x4295dc, %rdi	 RIP: 42003b	 Bytes: 10
  %loadMem_42003b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42003b = call %struct.Memory* @routine_movq__0x4295dc___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42003b)
  store %struct.Memory* %call_42003b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62c8(%rbp)	 RIP: 420045	 Bytes: 6
  %loadMem_420045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420045 = call %struct.Memory* @routine_movl__eax__MINUS0x62c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420045)
  store %struct.Memory* %call_420045, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42004b	 Bytes: 2
  %loadMem_42004b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42004b = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42004b)
  store %struct.Memory* %call_42004b, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42004d	 Bytes: 5
  %loadMem1_42004d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42004d = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42004d, i64 -127901, i64 5, i64 5)
  store %struct.Memory* %call1_42004d, %struct.Memory** %MEMORY

  %loadMem2_42004d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42004d = load i64, i64* %3
  %call2_42004d = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42004d, %struct.Memory* %loadMem2_42004d)
  store %struct.Memory* %call2_42004d, %struct.Memory** %MEMORY

  ; Code: movq $0x4295fd, %rdi	 RIP: 420052	 Bytes: 10
  %loadMem_420052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420052 = call %struct.Memory* @routine_movq__0x4295fd___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420052)
  store %struct.Memory* %call_420052, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62cc(%rbp)	 RIP: 42005c	 Bytes: 6
  %loadMem_42005c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42005c = call %struct.Memory* @routine_movl__eax__MINUS0x62cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42005c)
  store %struct.Memory* %call_42005c, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420062	 Bytes: 2
  %loadMem_420062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420062 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420062)
  store %struct.Memory* %call_420062, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420064	 Bytes: 5
  %loadMem1_420064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420064 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420064, i64 -127924, i64 5, i64 5)
  store %struct.Memory* %call1_420064, %struct.Memory** %MEMORY

  %loadMem2_420064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420064 = load i64, i64* %3
  %call2_420064 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420064, %struct.Memory* %loadMem2_420064)
  store %struct.Memory* %call2_420064, %struct.Memory** %MEMORY

  ; Code: movq $0x429644, %rdi	 RIP: 420069	 Bytes: 10
  %loadMem_420069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420069 = call %struct.Memory* @routine_movq__0x429644___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420069)
  store %struct.Memory* %call_420069, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62d0(%rbp)	 RIP: 420073	 Bytes: 6
  %loadMem_420073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420073 = call %struct.Memory* @routine_movl__eax__MINUS0x62d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420073)
  store %struct.Memory* %call_420073, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420079	 Bytes: 2
  %loadMem_420079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420079 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420079)
  store %struct.Memory* %call_420079, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42007b	 Bytes: 5
  %loadMem1_42007b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42007b = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42007b, i64 -127947, i64 5, i64 5)
  store %struct.Memory* %call1_42007b, %struct.Memory** %MEMORY

  %loadMem2_42007b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42007b = load i64, i64* %3
  %call2_42007b = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42007b, %struct.Memory* %loadMem2_42007b)
  store %struct.Memory* %call2_42007b, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x8a2a04	 RIP: 420080	 Bytes: 11
  %loadMem_420080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420080 = call %struct.Memory* @routine_movl__0x2__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420080)
  store %struct.Memory* %call_420080, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62d4(%rbp)	 RIP: 42008b	 Bytes: 6
  %loadMem_42008b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42008b = call %struct.Memory* @routine_movl__eax__MINUS0x62d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42008b)
  store %struct.Memory* %call_42008b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203c1	 RIP: 420091	 Bytes: 5
  %loadMem_420091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420091 = call %struct.Memory* @routine_jmpq_.L_4203c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420091, i64 816, i64 5)
  store %struct.Memory* %call_420091, %struct.Memory** %MEMORY

  br label %block_.L_4203c1

  ; Code: .L_420096:	 RIP: 420096	 Bytes: 0
block_.L_420096:

  ; Code: movq $0x429672, %rsi	 RIP: 420096	 Bytes: 10
  %loadMem_420096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420096 = call %struct.Memory* @routine_movq__0x429672___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420096)
  store %struct.Memory* %call_420096, %struct.Memory** %MEMORY

  ; Code: movl $0x8, %eax	 RIP: 4200a0	 Bytes: 5
  %loadMem_4200a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200a0 = call %struct.Memory* @routine_movl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200a0)
  store %struct.Memory* %call_4200a0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 4200a5	 Bytes: 2
  %loadMem_4200a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200a5 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200a5)
  store %struct.Memory* %call_4200a5, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 4200a7	 Bytes: 7
  %loadMem_4200a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200a7 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200a7)
  store %struct.Memory* %call_4200a7, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 4200ae	 Bytes: 5
  %loadMem1_4200ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4200ae = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4200ae, i64 -128078, i64 5, i64 5)
  store %struct.Memory* %call1_4200ae, %struct.Memory** %MEMORY

  %loadMem2_4200ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4200ae = load i64, i64* %3
  %call2_4200ae = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_4200ae, %struct.Memory* %loadMem2_4200ae)
  store %struct.Memory* %call2_4200ae, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4200b3	 Bytes: 3
  %loadMem_4200b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200b3 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200b3)
  store %struct.Memory* %call_4200b3, %struct.Memory** %MEMORY

  ; Code: jne .L_4200c1	 RIP: 4200b6	 Bytes: 6
  %loadMem_4200b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200b6 = call %struct.Memory* @routine_jne_.L_4200c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200b6, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4200b6, %struct.Memory** %MEMORY

  %loadBr_4200b6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4200b6 = icmp eq i8 %loadBr_4200b6, 1
  br i1 %cmpBr_4200b6, label %block_.L_4200c1, label %block_4200bc

block_4200bc:
  ; Code: jmpq .L_4203bc	 RIP: 4200bc	 Bytes: 5
  %loadMem_4200bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200bc = call %struct.Memory* @routine_jmpq_.L_4203bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200bc, i64 768, i64 5)
  store %struct.Memory* %call_4200bc, %struct.Memory** %MEMORY

  br label %block_.L_4203bc

  ; Code: .L_4200c1:	 RIP: 4200c1	 Bytes: 0
block_.L_4200c1:

  ; Code: movq $0x42967b, %rsi	 RIP: 4200c1	 Bytes: 10
  %loadMem_4200c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200c1 = call %struct.Memory* @routine_movq__0x42967b___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200c1)
  store %struct.Memory* %call_4200c1, %struct.Memory** %MEMORY

  ; Code: movl $0x8, %eax	 RIP: 4200cb	 Bytes: 5
  %loadMem_4200cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200cb = call %struct.Memory* @routine_movl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200cb)
  store %struct.Memory* %call_4200cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 4200d0	 Bytes: 2
  %loadMem_4200d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200d0 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200d0)
  store %struct.Memory* %call_4200d0, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 4200d2	 Bytes: 7
  %loadMem_4200d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200d2 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200d2)
  store %struct.Memory* %call_4200d2, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 4200d9	 Bytes: 5
  %loadMem1_4200d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4200d9 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4200d9, i64 -128121, i64 5, i64 5)
  store %struct.Memory* %call1_4200d9, %struct.Memory** %MEMORY

  %loadMem2_4200d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4200d9 = load i64, i64* %3
  %call2_4200d9 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_4200d9, %struct.Memory* %loadMem2_4200d9)
  store %struct.Memory* %call2_4200d9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4200de	 Bytes: 3
  %loadMem_4200de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200de = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200de)
  store %struct.Memory* %call_4200de, %struct.Memory** %MEMORY

  ; Code: jne .L_420103	 RIP: 4200e1	 Bytes: 6
  %loadMem_4200e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200e1 = call %struct.Memory* @routine_jne_.L_420103(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200e1, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_4200e1, %struct.Memory** %MEMORY

  %loadBr_4200e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4200e1 = icmp eq i8 %loadBr_4200e1, 1
  br i1 %cmpBr_4200e1, label %block_.L_420103, label %block_4200e7

block_4200e7:
  ; Code: movq $0x429684, %rdi	 RIP: 4200e7	 Bytes: 10
  %loadMem_4200e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200e7 = call %struct.Memory* @routine_movq__0x429684___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200e7)
  store %struct.Memory* %call_4200e7, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4200f1	 Bytes: 2
  %loadMem_4200f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200f1 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200f1)
  store %struct.Memory* %call_4200f1, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4200f3	 Bytes: 5
  %loadMem1_4200f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4200f3 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4200f3, i64 -128067, i64 5, i64 5)
  store %struct.Memory* %call1_4200f3, %struct.Memory** %MEMORY

  %loadMem2_4200f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4200f3 = load i64, i64* %3
  %call2_4200f3 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4200f3, %struct.Memory* %loadMem2_4200f3)
  store %struct.Memory* %call2_4200f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62d8(%rbp)	 RIP: 4200f8	 Bytes: 6
  %loadMem_4200f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200f8 = call %struct.Memory* @routine_movl__eax__MINUS0x62d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200f8)
  store %struct.Memory* %call_4200f8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203b7	 RIP: 4200fe	 Bytes: 5
  %loadMem_4200fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4200fe = call %struct.Memory* @routine_jmpq_.L_4203b7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4200fe, i64 697, i64 5)
  store %struct.Memory* %call_4200fe, %struct.Memory** %MEMORY

  br label %block_.L_4203b7

  ; Code: .L_420103:	 RIP: 420103	 Bytes: 0
block_.L_420103:

  ; Code: leaq -0x110(%rbp), %rdi	 RIP: 420103	 Bytes: 7
  %loadMem_420103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420103 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420103)
  store %struct.Memory* %call_420103, %struct.Memory** %MEMORY

  ; Code: movl $0x428778, %eax	 RIP: 42010a	 Bytes: 5
  %loadMem_42010a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42010a = call %struct.Memory* @routine_movl__0x428778___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42010a)
  store %struct.Memory* %call_42010a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 42010f	 Bytes: 2
  %loadMem_42010f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42010f = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42010f)
  store %struct.Memory* %call_42010f, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 420111	 Bytes: 5
  %loadMem1_420111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420111 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420111, i64 -128001, i64 5, i64 5)
  store %struct.Memory* %call1_420111, %struct.Memory** %MEMORY

  %loadMem2_420111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420111 = load i64, i64* %3
  %call2_420111 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_420111, %struct.Memory* %loadMem2_420111)
  store %struct.Memory* %call2_420111, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 420116	 Bytes: 3
  %loadMem_420116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420116 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420116)
  store %struct.Memory* %call_420116, %struct.Memory** %MEMORY

  ; Code: jne .L_420381	 RIP: 420119	 Bytes: 6
  %loadMem_420119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420119 = call %struct.Memory* @routine_jne_.L_420381(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420119, i8* %BRANCH_TAKEN, i64 616, i64 6, i64 6)
  store %struct.Memory* %call_420119, %struct.Memory** %MEMORY

  %loadBr_420119 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420119 = icmp eq i8 %loadBr_420119, 1
  br i1 %cmpBr_420119, label %block_.L_420381, label %block_42011f

block_42011f:
  ; Code: movq $0x429f1f, %rdi	 RIP: 42011f	 Bytes: 10
  %loadMem_42011f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42011f = call %struct.Memory* @routine_movq__0x429f1f___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42011f)
  store %struct.Memory* %call_42011f, %struct.Memory** %MEMORY

  ; Code: movq $0x62da40, %rsi	 RIP: 420129	 Bytes: 10
  %loadMem_420129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420129 = call %struct.Memory* @routine_movq__0x62da40___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420129)
  store %struct.Memory* %call_420129, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420133	 Bytes: 2
  %loadMem_420133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420133 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420133)
  store %struct.Memory* %call_420133, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420135	 Bytes: 5
  %loadMem1_420135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420135 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420135, i64 -128133, i64 5, i64 5)
  store %struct.Memory* %call1_420135, %struct.Memory** %MEMORY

  %loadMem2_420135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420135 = load i64, i64* %3
  %call2_420135 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420135, %struct.Memory* %loadMem2_420135)
  store %struct.Memory* %call2_420135, %struct.Memory** %MEMORY

  ; Code: movq $0x4296c5, %rdi	 RIP: 42013a	 Bytes: 10
  %loadMem_42013a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42013a = call %struct.Memory* @routine_movq__0x4296c5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42013a)
  store %struct.Memory* %call_42013a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62dc(%rbp)	 RIP: 420144	 Bytes: 6
  %loadMem_420144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420144 = call %struct.Memory* @routine_movl__eax__MINUS0x62dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420144)
  store %struct.Memory* %call_420144, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42014a	 Bytes: 2
  %loadMem_42014a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42014a = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42014a)
  store %struct.Memory* %call_42014a, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42014c	 Bytes: 5
  %loadMem1_42014c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42014c = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42014c, i64 -128156, i64 5, i64 5)
  store %struct.Memory* %call1_42014c, %struct.Memory** %MEMORY

  %loadMem2_42014c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42014c = load i64, i64* %3
  %call2_42014c = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42014c, %struct.Memory* %loadMem2_42014c)
  store %struct.Memory* %call2_42014c, %struct.Memory** %MEMORY

  ; Code: movq $0x4296ee, %rdi	 RIP: 420151	 Bytes: 10
  %loadMem_420151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420151 = call %struct.Memory* @routine_movq__0x4296ee___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420151)
  store %struct.Memory* %call_420151, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62e0(%rbp)	 RIP: 42015b	 Bytes: 6
  %loadMem_42015b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42015b = call %struct.Memory* @routine_movl__eax__MINUS0x62e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42015b)
  store %struct.Memory* %call_42015b, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420161	 Bytes: 2
  %loadMem_420161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420161 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420161)
  store %struct.Memory* %call_420161, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420163	 Bytes: 5
  %loadMem1_420163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420163 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420163, i64 -128179, i64 5, i64 5)
  store %struct.Memory* %call1_420163, %struct.Memory** %MEMORY

  %loadMem2_420163 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420163 = load i64, i64* %3
  %call2_420163 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420163, %struct.Memory* %loadMem2_420163)
  store %struct.Memory* %call2_420163, %struct.Memory** %MEMORY

  ; Code: movq $0x429710, %rdi	 RIP: 420168	 Bytes: 10
  %loadMem_420168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420168 = call %struct.Memory* @routine_movq__0x429710___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420168)
  store %struct.Memory* %call_420168, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62e4(%rbp)	 RIP: 420172	 Bytes: 6
  %loadMem_420172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420172 = call %struct.Memory* @routine_movl__eax__MINUS0x62e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420172)
  store %struct.Memory* %call_420172, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420178	 Bytes: 2
  %loadMem_420178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420178 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420178)
  store %struct.Memory* %call_420178, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42017a	 Bytes: 5
  %loadMem1_42017a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42017a = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42017a, i64 -128202, i64 5, i64 5)
  store %struct.Memory* %call1_42017a, %struct.Memory** %MEMORY

  %loadMem2_42017a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42017a = load i64, i64* %3
  %call2_42017a = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42017a, %struct.Memory* %loadMem2_42017a)
  store %struct.Memory* %call2_42017a, %struct.Memory** %MEMORY

  ; Code: movq $0x429743, %rdi	 RIP: 42017f	 Bytes: 10
  %loadMem_42017f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42017f = call %struct.Memory* @routine_movq__0x429743___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42017f)
  store %struct.Memory* %call_42017f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62e8(%rbp)	 RIP: 420189	 Bytes: 6
  %loadMem_420189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420189 = call %struct.Memory* @routine_movl__eax__MINUS0x62e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420189)
  store %struct.Memory* %call_420189, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42018f	 Bytes: 2
  %loadMem_42018f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42018f = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42018f)
  store %struct.Memory* %call_42018f, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420191	 Bytes: 5
  %loadMem1_420191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420191 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420191, i64 -128225, i64 5, i64 5)
  store %struct.Memory* %call1_420191, %struct.Memory** %MEMORY

  %loadMem2_420191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420191 = load i64, i64* %3
  %call2_420191 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420191, %struct.Memory* %loadMem2_420191)
  store %struct.Memory* %call2_420191, %struct.Memory** %MEMORY

  ; Code: movq $0x429766, %rdi	 RIP: 420196	 Bytes: 10
  %loadMem_420196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420196 = call %struct.Memory* @routine_movq__0x429766___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420196)
  store %struct.Memory* %call_420196, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62ec(%rbp)	 RIP: 4201a0	 Bytes: 6
  %loadMem_4201a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201a0 = call %struct.Memory* @routine_movl__eax__MINUS0x62ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201a0)
  store %struct.Memory* %call_4201a0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4201a6	 Bytes: 2
  %loadMem_4201a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201a6 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201a6)
  store %struct.Memory* %call_4201a6, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4201a8	 Bytes: 5
  %loadMem1_4201a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4201a8 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4201a8, i64 -128248, i64 5, i64 5)
  store %struct.Memory* %call1_4201a8, %struct.Memory** %MEMORY

  %loadMem2_4201a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4201a8 = load i64, i64* %3
  %call2_4201a8 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4201a8, %struct.Memory* %loadMem2_4201a8)
  store %struct.Memory* %call2_4201a8, %struct.Memory** %MEMORY

  ; Code: movq $0x42979d, %rdi	 RIP: 4201ad	 Bytes: 10
  %loadMem_4201ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201ad = call %struct.Memory* @routine_movq__0x42979d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201ad)
  store %struct.Memory* %call_4201ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62f0(%rbp)	 RIP: 4201b7	 Bytes: 6
  %loadMem_4201b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201b7 = call %struct.Memory* @routine_movl__eax__MINUS0x62f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201b7)
  store %struct.Memory* %call_4201b7, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4201bd	 Bytes: 2
  %loadMem_4201bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201bd = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201bd)
  store %struct.Memory* %call_4201bd, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4201bf	 Bytes: 5
  %loadMem1_4201bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4201bf = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4201bf, i64 -128271, i64 5, i64 5)
  store %struct.Memory* %call1_4201bf, %struct.Memory** %MEMORY

  %loadMem2_4201bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4201bf = load i64, i64* %3
  %call2_4201bf = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4201bf, %struct.Memory* %loadMem2_4201bf)
  store %struct.Memory* %call2_4201bf, %struct.Memory** %MEMORY

  ; Code: movq $0x4297ce, %rdi	 RIP: 4201c4	 Bytes: 10
  %loadMem_4201c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201c4 = call %struct.Memory* @routine_movq__0x4297ce___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201c4)
  store %struct.Memory* %call_4201c4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62f4(%rbp)	 RIP: 4201ce	 Bytes: 6
  %loadMem_4201ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201ce = call %struct.Memory* @routine_movl__eax__MINUS0x62f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201ce)
  store %struct.Memory* %call_4201ce, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4201d4	 Bytes: 2
  %loadMem_4201d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201d4 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201d4)
  store %struct.Memory* %call_4201d4, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4201d6	 Bytes: 5
  %loadMem1_4201d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4201d6 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4201d6, i64 -128294, i64 5, i64 5)
  store %struct.Memory* %call1_4201d6, %struct.Memory** %MEMORY

  %loadMem2_4201d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4201d6 = load i64, i64* %3
  %call2_4201d6 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4201d6, %struct.Memory* %loadMem2_4201d6)
  store %struct.Memory* %call2_4201d6, %struct.Memory** %MEMORY

  ; Code: movq $0x4297ff, %rdi	 RIP: 4201db	 Bytes: 10
  %loadMem_4201db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201db = call %struct.Memory* @routine_movq__0x4297ff___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201db)
  store %struct.Memory* %call_4201db, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62f8(%rbp)	 RIP: 4201e5	 Bytes: 6
  %loadMem_4201e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201e5 = call %struct.Memory* @routine_movl__eax__MINUS0x62f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201e5)
  store %struct.Memory* %call_4201e5, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4201eb	 Bytes: 2
  %loadMem_4201eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201eb = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201eb)
  store %struct.Memory* %call_4201eb, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4201ed	 Bytes: 5
  %loadMem1_4201ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4201ed = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4201ed, i64 -128317, i64 5, i64 5)
  store %struct.Memory* %call1_4201ed, %struct.Memory** %MEMORY

  %loadMem2_4201ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4201ed = load i64, i64* %3
  %call2_4201ed = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4201ed, %struct.Memory* %loadMem2_4201ed)
  store %struct.Memory* %call2_4201ed, %struct.Memory** %MEMORY

  ; Code: movq $0x429818, %rdi	 RIP: 4201f2	 Bytes: 10
  %loadMem_4201f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201f2 = call %struct.Memory* @routine_movq__0x429818___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201f2)
  store %struct.Memory* %call_4201f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x62fc(%rbp)	 RIP: 4201fc	 Bytes: 6
  %loadMem_4201fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4201fc = call %struct.Memory* @routine_movl__eax__MINUS0x62fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4201fc)
  store %struct.Memory* %call_4201fc, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420202	 Bytes: 2
  %loadMem_420202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420202 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420202)
  store %struct.Memory* %call_420202, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420204	 Bytes: 5
  %loadMem1_420204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420204 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420204, i64 -128340, i64 5, i64 5)
  store %struct.Memory* %call1_420204, %struct.Memory** %MEMORY

  %loadMem2_420204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420204 = load i64, i64* %3
  %call2_420204 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420204, %struct.Memory* %loadMem2_420204)
  store %struct.Memory* %call2_420204, %struct.Memory** %MEMORY

  ; Code: movq $0x429835, %rdi	 RIP: 420209	 Bytes: 10
  %loadMem_420209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420209 = call %struct.Memory* @routine_movq__0x429835___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420209)
  store %struct.Memory* %call_420209, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6300(%rbp)	 RIP: 420213	 Bytes: 6
  %loadMem_420213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420213 = call %struct.Memory* @routine_movl__eax__MINUS0x6300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420213)
  store %struct.Memory* %call_420213, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420219	 Bytes: 2
  %loadMem_420219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420219 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420219)
  store %struct.Memory* %call_420219, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42021b	 Bytes: 5
  %loadMem1_42021b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42021b = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42021b, i64 -128363, i64 5, i64 5)
  store %struct.Memory* %call1_42021b, %struct.Memory** %MEMORY

  %loadMem2_42021b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42021b = load i64, i64* %3
  %call2_42021b = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42021b, %struct.Memory* %loadMem2_42021b)
  store %struct.Memory* %call2_42021b, %struct.Memory** %MEMORY

  ; Code: movq $0x42986c, %rdi	 RIP: 420220	 Bytes: 10
  %loadMem_420220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420220 = call %struct.Memory* @routine_movq__0x42986c___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420220)
  store %struct.Memory* %call_420220, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6304(%rbp)	 RIP: 42022a	 Bytes: 6
  %loadMem_42022a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42022a = call %struct.Memory* @routine_movl__eax__MINUS0x6304__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42022a)
  store %struct.Memory* %call_42022a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420230	 Bytes: 2
  %loadMem_420230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420230 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420230)
  store %struct.Memory* %call_420230, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420232	 Bytes: 5
  %loadMem1_420232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420232 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420232, i64 -128386, i64 5, i64 5)
  store %struct.Memory* %call1_420232, %struct.Memory** %MEMORY

  %loadMem2_420232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420232 = load i64, i64* %3
  %call2_420232 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420232, %struct.Memory* %loadMem2_420232)
  store %struct.Memory* %call2_420232, %struct.Memory** %MEMORY

  ; Code: movq $0x42989b, %rdi	 RIP: 420237	 Bytes: 10
  %loadMem_420237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420237 = call %struct.Memory* @routine_movq__0x42989b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420237)
  store %struct.Memory* %call_420237, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6308(%rbp)	 RIP: 420241	 Bytes: 6
  %loadMem_420241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420241 = call %struct.Memory* @routine_movl__eax__MINUS0x6308__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420241)
  store %struct.Memory* %call_420241, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420247	 Bytes: 2
  %loadMem_420247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420247 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420247)
  store %struct.Memory* %call_420247, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420249	 Bytes: 5
  %loadMem1_420249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420249 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420249, i64 -128409, i64 5, i64 5)
  store %struct.Memory* %call1_420249, %struct.Memory** %MEMORY

  %loadMem2_420249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420249 = load i64, i64* %3
  %call2_420249 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420249, %struct.Memory* %loadMem2_420249)
  store %struct.Memory* %call2_420249, %struct.Memory** %MEMORY

  ; Code: movq $0x4298c5, %rdi	 RIP: 42024e	 Bytes: 10
  %loadMem_42024e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42024e = call %struct.Memory* @routine_movq__0x4298c5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42024e)
  store %struct.Memory* %call_42024e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x630c(%rbp)	 RIP: 420258	 Bytes: 6
  %loadMem_420258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420258 = call %struct.Memory* @routine_movl__eax__MINUS0x630c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420258)
  store %struct.Memory* %call_420258, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42025e	 Bytes: 2
  %loadMem_42025e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42025e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42025e)
  store %struct.Memory* %call_42025e, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420260	 Bytes: 5
  %loadMem1_420260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420260 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420260, i64 -128432, i64 5, i64 5)
  store %struct.Memory* %call1_420260, %struct.Memory** %MEMORY

  %loadMem2_420260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420260 = load i64, i64* %3
  %call2_420260 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420260, %struct.Memory* %loadMem2_420260)
  store %struct.Memory* %call2_420260, %struct.Memory** %MEMORY

  ; Code: movq $0x4298f2, %rdi	 RIP: 420265	 Bytes: 10
  %loadMem_420265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420265 = call %struct.Memory* @routine_movq__0x4298f2___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420265)
  store %struct.Memory* %call_420265, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6310(%rbp)	 RIP: 42026f	 Bytes: 6
  %loadMem_42026f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42026f = call %struct.Memory* @routine_movl__eax__MINUS0x6310__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42026f)
  store %struct.Memory* %call_42026f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420275	 Bytes: 2
  %loadMem_420275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420275 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420275)
  store %struct.Memory* %call_420275, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420277	 Bytes: 5
  %loadMem1_420277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420277 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420277, i64 -128455, i64 5, i64 5)
  store %struct.Memory* %call1_420277, %struct.Memory** %MEMORY

  %loadMem2_420277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420277 = load i64, i64* %3
  %call2_420277 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420277, %struct.Memory* %loadMem2_420277)
  store %struct.Memory* %call2_420277, %struct.Memory** %MEMORY

  ; Code: movq $0x429919, %rdi	 RIP: 42027c	 Bytes: 10
  %loadMem_42027c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42027c = call %struct.Memory* @routine_movq__0x429919___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42027c)
  store %struct.Memory* %call_42027c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6314(%rbp)	 RIP: 420286	 Bytes: 6
  %loadMem_420286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420286 = call %struct.Memory* @routine_movl__eax__MINUS0x6314__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420286)
  store %struct.Memory* %call_420286, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42028c	 Bytes: 2
  %loadMem_42028c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42028c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42028c)
  store %struct.Memory* %call_42028c, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42028e	 Bytes: 5
  %loadMem1_42028e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42028e = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42028e, i64 -128478, i64 5, i64 5)
  store %struct.Memory* %call1_42028e, %struct.Memory** %MEMORY

  %loadMem2_42028e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42028e = load i64, i64* %3
  %call2_42028e = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42028e, %struct.Memory* %loadMem2_42028e)
  store %struct.Memory* %call2_42028e, %struct.Memory** %MEMORY

  ; Code: movq $0x42994d, %rdi	 RIP: 420293	 Bytes: 10
  %loadMem_420293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420293 = call %struct.Memory* @routine_movq__0x42994d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420293)
  store %struct.Memory* %call_420293, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6318(%rbp)	 RIP: 42029d	 Bytes: 6
  %loadMem_42029d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42029d = call %struct.Memory* @routine_movl__eax__MINUS0x6318__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42029d)
  store %struct.Memory* %call_42029d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4202a3	 Bytes: 2
  %loadMem_4202a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202a3 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202a3)
  store %struct.Memory* %call_4202a3, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4202a5	 Bytes: 5
  %loadMem1_4202a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4202a5 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4202a5, i64 -128501, i64 5, i64 5)
  store %struct.Memory* %call1_4202a5, %struct.Memory** %MEMORY

  %loadMem2_4202a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4202a5 = load i64, i64* %3
  %call2_4202a5 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4202a5, %struct.Memory* %loadMem2_4202a5)
  store %struct.Memory* %call2_4202a5, %struct.Memory** %MEMORY

  ; Code: movq $0x429988, %rdi	 RIP: 4202aa	 Bytes: 10
  %loadMem_4202aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202aa = call %struct.Memory* @routine_movq__0x429988___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202aa)
  store %struct.Memory* %call_4202aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x631c(%rbp)	 RIP: 4202b4	 Bytes: 6
  %loadMem_4202b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202b4 = call %struct.Memory* @routine_movl__eax__MINUS0x631c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202b4)
  store %struct.Memory* %call_4202b4, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4202ba	 Bytes: 2
  %loadMem_4202ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202ba = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202ba)
  store %struct.Memory* %call_4202ba, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4202bc	 Bytes: 5
  %loadMem1_4202bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4202bc = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4202bc, i64 -128524, i64 5, i64 5)
  store %struct.Memory* %call1_4202bc, %struct.Memory** %MEMORY

  %loadMem2_4202bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4202bc = load i64, i64* %3
  %call2_4202bc = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4202bc, %struct.Memory* %loadMem2_4202bc)
  store %struct.Memory* %call2_4202bc, %struct.Memory** %MEMORY

  ; Code: movq $0x4299b4, %rdi	 RIP: 4202c1	 Bytes: 10
  %loadMem_4202c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202c1 = call %struct.Memory* @routine_movq__0x4299b4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202c1)
  store %struct.Memory* %call_4202c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6320(%rbp)	 RIP: 4202cb	 Bytes: 6
  %loadMem_4202cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202cb = call %struct.Memory* @routine_movl__eax__MINUS0x6320__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202cb)
  store %struct.Memory* %call_4202cb, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4202d1	 Bytes: 2
  %loadMem_4202d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202d1 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202d1)
  store %struct.Memory* %call_4202d1, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4202d3	 Bytes: 5
  %loadMem1_4202d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4202d3 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4202d3, i64 -128547, i64 5, i64 5)
  store %struct.Memory* %call1_4202d3, %struct.Memory** %MEMORY

  %loadMem2_4202d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4202d3 = load i64, i64* %3
  %call2_4202d3 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4202d3, %struct.Memory* %loadMem2_4202d3)
  store %struct.Memory* %call2_4202d3, %struct.Memory** %MEMORY

  ; Code: movq $0x4299e7, %rdi	 RIP: 4202d8	 Bytes: 10
  %loadMem_4202d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202d8 = call %struct.Memory* @routine_movq__0x4299e7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202d8)
  store %struct.Memory* %call_4202d8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6324(%rbp)	 RIP: 4202e2	 Bytes: 6
  %loadMem_4202e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202e2 = call %struct.Memory* @routine_movl__eax__MINUS0x6324__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202e2)
  store %struct.Memory* %call_4202e2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4202e8	 Bytes: 2
  %loadMem_4202e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202e8 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202e8)
  store %struct.Memory* %call_4202e8, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4202ea	 Bytes: 5
  %loadMem1_4202ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4202ea = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4202ea, i64 -128570, i64 5, i64 5)
  store %struct.Memory* %call1_4202ea, %struct.Memory** %MEMORY

  %loadMem2_4202ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4202ea = load i64, i64* %3
  %call2_4202ea = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4202ea, %struct.Memory* %loadMem2_4202ea)
  store %struct.Memory* %call2_4202ea, %struct.Memory** %MEMORY

  ; Code: movq $0x429a1d, %rdi	 RIP: 4202ef	 Bytes: 10
  %loadMem_4202ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202ef = call %struct.Memory* @routine_movq__0x429a1d___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202ef)
  store %struct.Memory* %call_4202ef, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6328(%rbp)	 RIP: 4202f9	 Bytes: 6
  %loadMem_4202f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202f9 = call %struct.Memory* @routine_movl__eax__MINUS0x6328__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202f9)
  store %struct.Memory* %call_4202f9, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4202ff	 Bytes: 2
  %loadMem_4202ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4202ff = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4202ff)
  store %struct.Memory* %call_4202ff, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420301	 Bytes: 5
  %loadMem1_420301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420301 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420301, i64 -128593, i64 5, i64 5)
  store %struct.Memory* %call1_420301, %struct.Memory** %MEMORY

  %loadMem2_420301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420301 = load i64, i64* %3
  %call2_420301 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420301, %struct.Memory* %loadMem2_420301)
  store %struct.Memory* %call2_420301, %struct.Memory** %MEMORY

  ; Code: movq $0x429a43, %rdi	 RIP: 420306	 Bytes: 10
  %loadMem_420306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420306 = call %struct.Memory* @routine_movq__0x429a43___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420306)
  store %struct.Memory* %call_420306, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x632c(%rbp)	 RIP: 420310	 Bytes: 6
  %loadMem_420310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420310 = call %struct.Memory* @routine_movl__eax__MINUS0x632c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420310)
  store %struct.Memory* %call_420310, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420316	 Bytes: 2
  %loadMem_420316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420316 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420316)
  store %struct.Memory* %call_420316, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420318	 Bytes: 5
  %loadMem1_420318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420318 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420318, i64 -128616, i64 5, i64 5)
  store %struct.Memory* %call1_420318, %struct.Memory** %MEMORY

  %loadMem2_420318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420318 = load i64, i64* %3
  %call2_420318 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420318, %struct.Memory* %loadMem2_420318)
  store %struct.Memory* %call2_420318, %struct.Memory** %MEMORY

  ; Code: movq $0x429a69, %rdi	 RIP: 42031d	 Bytes: 10
  %loadMem_42031d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42031d = call %struct.Memory* @routine_movq__0x429a69___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42031d)
  store %struct.Memory* %call_42031d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6330(%rbp)	 RIP: 420327	 Bytes: 6
  %loadMem_420327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420327 = call %struct.Memory* @routine_movl__eax__MINUS0x6330__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420327)
  store %struct.Memory* %call_420327, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 42032d	 Bytes: 2
  %loadMem_42032d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42032d = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42032d)
  store %struct.Memory* %call_42032d, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 42032f	 Bytes: 5
  %loadMem1_42032f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_42032f = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_42032f, i64 -128639, i64 5, i64 5)
  store %struct.Memory* %call1_42032f, %struct.Memory** %MEMORY

  %loadMem2_42032f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_42032f = load i64, i64* %3
  %call2_42032f = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_42032f, %struct.Memory* %loadMem2_42032f)
  store %struct.Memory* %call2_42032f, %struct.Memory** %MEMORY

  ; Code: movq $0x429a93, %rdi	 RIP: 420334	 Bytes: 10
  %loadMem_420334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420334 = call %struct.Memory* @routine_movq__0x429a93___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420334)
  store %struct.Memory* %call_420334, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6334(%rbp)	 RIP: 42033e	 Bytes: 6
  %loadMem_42033e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42033e = call %struct.Memory* @routine_movl__eax__MINUS0x6334__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42033e)
  store %struct.Memory* %call_42033e, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420344	 Bytes: 2
  %loadMem_420344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420344 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420344)
  store %struct.Memory* %call_420344, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420346	 Bytes: 5
  %loadMem1_420346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420346 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420346, i64 -128662, i64 5, i64 5)
  store %struct.Memory* %call1_420346, %struct.Memory** %MEMORY

  %loadMem2_420346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420346 = load i64, i64* %3
  %call2_420346 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420346, %struct.Memory* %loadMem2_420346)
  store %struct.Memory* %call2_420346, %struct.Memory** %MEMORY

  ; Code: movq $0x429f1f, %rdi	 RIP: 42034b	 Bytes: 10
  %loadMem_42034b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42034b = call %struct.Memory* @routine_movq__0x429f1f___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42034b)
  store %struct.Memory* %call_42034b, %struct.Memory** %MEMORY

  ; Code: movq $0x62da40, %rsi	 RIP: 420355	 Bytes: 10
  %loadMem_420355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420355 = call %struct.Memory* @routine_movq__0x62da40___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420355)
  store %struct.Memory* %call_420355, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6338(%rbp)	 RIP: 42035f	 Bytes: 6
  %loadMem_42035f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42035f = call %struct.Memory* @routine_movl__eax__MINUS0x6338__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42035f)
  store %struct.Memory* %call_42035f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 420365	 Bytes: 2
  %loadMem_420365 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420365 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420365)
  store %struct.Memory* %call_420365, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 420367	 Bytes: 5
  %loadMem1_420367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_420367 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_420367, i64 -128695, i64 5, i64 5)
  store %struct.Memory* %call1_420367, %struct.Memory** %MEMORY

  %loadMem2_420367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_420367 = load i64, i64* %3
  %call2_420367 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_420367, %struct.Memory* %loadMem2_420367)
  store %struct.Memory* %call2_420367, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x35c(%rbp)	 RIP: 42036c	 Bytes: 10
  %loadMem_42036c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42036c = call %struct.Memory* @routine_movl__0x0__MINUS0x35c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42036c)
  store %struct.Memory* %call_42036c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x633c(%rbp)	 RIP: 420376	 Bytes: 6
  %loadMem_420376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420376 = call %struct.Memory* @routine_movl__eax__MINUS0x633c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420376)
  store %struct.Memory* %call_420376, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4203b2	 RIP: 42037c	 Bytes: 5
  %loadMem_42037c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42037c = call %struct.Memory* @routine_jmpq_.L_4203b2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42037c, i64 54, i64 5)
  store %struct.Memory* %call_42037c, %struct.Memory** %MEMORY

  br label %block_.L_4203b2

  ; Code: .L_420381:	 RIP: 420381	 Bytes: 0
block_.L_420381:

  ; Code: cmpl $0x0, 0x8a2a04	 RIP: 420381	 Bytes: 8
  %loadMem_420381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420381 = call %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420381)
  store %struct.Memory* %call_420381, %struct.Memory** %MEMORY

  ; Code: jne .L_4203ad	 RIP: 420389	 Bytes: 6
  %loadMem_420389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420389 = call %struct.Memory* @routine_jne_.L_4203ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420389, i8* %BRANCH_TAKEN, i64 36, i64 6, i64 6)
  store %struct.Memory* %call_420389, %struct.Memory** %MEMORY

  %loadBr_420389 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_420389 = icmp eq i8 %loadBr_420389, 1
  br i1 %cmpBr_420389, label %block_.L_4203ad, label %block_42038f

block_42038f:
  ; Code: movq $0x429359, %rdi	 RIP: 42038f	 Bytes: 10
  %loadMem_42038f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42038f = call %struct.Memory* @routine_movq__0x429359___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42038f)
  store %struct.Memory* %call_42038f, %struct.Memory** %MEMORY

  ; Code: leaq -0x110(%rbp), %rsi	 RIP: 420399	 Bytes: 7
  %loadMem_420399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420399 = call %struct.Memory* @routine_leaq_MINUS0x110__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420399)
  store %struct.Memory* %call_420399, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 4203a0	 Bytes: 2
  %loadMem_4203a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203a0 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203a0)
  store %struct.Memory* %call_4203a0, %struct.Memory** %MEMORY

  ; Code: callq .printf_plt	 RIP: 4203a2	 Bytes: 5
  %loadMem1_4203a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4203a2 = call %struct.Memory* @routine_callq_.printf_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4203a2, i64 -128754, i64 5, i64 5)
  store %struct.Memory* %call1_4203a2, %struct.Memory** %MEMORY

  %loadMem2_4203a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4203a2 = load i64, i64* %3
  %call2_4203a2 = call %struct.Memory* @ext_printf(%struct.State* %0, i64  %loadPC_4203a2, %struct.Memory* %loadMem2_4203a2)
  store %struct.Memory* %call2_4203a2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6340(%rbp)	 RIP: 4203a7	 Bytes: 6
  %loadMem_4203a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203a7 = call %struct.Memory* @routine_movl__eax__MINUS0x6340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203a7)
  store %struct.Memory* %call_4203a7, %struct.Memory** %MEMORY

  ; Code: .L_4203ad:	 RIP: 4203ad	 Bytes: 0
  br label %block_.L_4203ad
block_.L_4203ad:

  ; Code: jmpq .L_4203b2	 RIP: 4203ad	 Bytes: 5
  %loadMem_4203ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203ad = call %struct.Memory* @routine_jmpq_.L_4203b2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203ad, i64 5, i64 5)
  store %struct.Memory* %call_4203ad, %struct.Memory** %MEMORY

  br label %block_.L_4203b2

  ; Code: .L_4203b2:	 RIP: 4203b2	 Bytes: 0
block_.L_4203b2:

  ; Code: jmpq .L_4203b7	 RIP: 4203b2	 Bytes: 5
  %loadMem_4203b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203b2 = call %struct.Memory* @routine_jmpq_.L_4203b7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203b2, i64 5, i64 5)
  store %struct.Memory* %call_4203b2, %struct.Memory** %MEMORY

  br label %block_.L_4203b7

  ; Code: .L_4203b7:	 RIP: 4203b7	 Bytes: 0
block_.L_4203b7:

  ; Code: jmpq .L_4203bc	 RIP: 4203b7	 Bytes: 5
  %loadMem_4203b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203b7 = call %struct.Memory* @routine_jmpq_.L_4203bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203b7, i64 5, i64 5)
  store %struct.Memory* %call_4203b7, %struct.Memory** %MEMORY

  br label %block_.L_4203bc

  ; Code: .L_4203bc:	 RIP: 4203bc	 Bytes: 0
block_.L_4203bc:

  ; Code: jmpq .L_4203c1	 RIP: 4203bc	 Bytes: 5
  %loadMem_4203bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203bc = call %struct.Memory* @routine_jmpq_.L_4203c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203bc, i64 5, i64 5)
  store %struct.Memory* %call_4203bc, %struct.Memory** %MEMORY

  br label %block_.L_4203c1

  ; Code: .L_4203c1:	 RIP: 4203c1	 Bytes: 0
block_.L_4203c1:

  ; Code: jmpq .L_4203c6	 RIP: 4203c1	 Bytes: 5
  %loadMem_4203c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203c1 = call %struct.Memory* @routine_jmpq_.L_4203c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203c1, i64 5, i64 5)
  store %struct.Memory* %call_4203c1, %struct.Memory** %MEMORY

  br label %block_.L_4203c6

  ; Code: .L_4203c6:	 RIP: 4203c6	 Bytes: 0
block_.L_4203c6:

  ; Code: jmpq .L_4203cb	 RIP: 4203c6	 Bytes: 5
  %loadMem_4203c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203c6 = call %struct.Memory* @routine_jmpq_.L_4203cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203c6, i64 5, i64 5)
  store %struct.Memory* %call_4203c6, %struct.Memory** %MEMORY

  br label %block_.L_4203cb

  ; Code: .L_4203cb:	 RIP: 4203cb	 Bytes: 0
block_.L_4203cb:

  ; Code: jmpq .L_4203d0	 RIP: 4203cb	 Bytes: 5
  %loadMem_4203cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203cb = call %struct.Memory* @routine_jmpq_.L_4203d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203cb, i64 5, i64 5)
  store %struct.Memory* %call_4203cb, %struct.Memory** %MEMORY

  br label %block_.L_4203d0

  ; Code: .L_4203d0:	 RIP: 4203d0	 Bytes: 0
block_.L_4203d0:

  ; Code: jmpq .L_4203d5	 RIP: 4203d0	 Bytes: 5
  %loadMem_4203d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203d0 = call %struct.Memory* @routine_jmpq_.L_4203d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203d0, i64 5, i64 5)
  store %struct.Memory* %call_4203d0, %struct.Memory** %MEMORY

  br label %block_.L_4203d5

  ; Code: .L_4203d5:	 RIP: 4203d5	 Bytes: 0
block_.L_4203d5:

  ; Code: jmpq .L_4203da	 RIP: 4203d5	 Bytes: 5
  %loadMem_4203d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203d5 = call %struct.Memory* @routine_jmpq_.L_4203da(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203d5, i64 5, i64 5)
  store %struct.Memory* %call_4203d5, %struct.Memory** %MEMORY

  br label %block_.L_4203da

  ; Code: .L_4203da:	 RIP: 4203da	 Bytes: 0
block_.L_4203da:

  ; Code: jmpq .L_4203df	 RIP: 4203da	 Bytes: 5
  %loadMem_4203da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203da = call %struct.Memory* @routine_jmpq_.L_4203df(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203da, i64 5, i64 5)
  store %struct.Memory* %call_4203da, %struct.Memory** %MEMORY

  br label %block_.L_4203df

  ; Code: .L_4203df:	 RIP: 4203df	 Bytes: 0
block_.L_4203df:

  ; Code: jmpq .L_4203e4	 RIP: 4203df	 Bytes: 5
  %loadMem_4203df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203df = call %struct.Memory* @routine_jmpq_.L_4203e4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203df, i64 5, i64 5)
  store %struct.Memory* %call_4203df, %struct.Memory** %MEMORY

  br label %block_.L_4203e4

  ; Code: .L_4203e4:	 RIP: 4203e4	 Bytes: 0
block_.L_4203e4:

  ; Code: jmpq .L_4203e9	 RIP: 4203e4	 Bytes: 5
  %loadMem_4203e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203e4 = call %struct.Memory* @routine_jmpq_.L_4203e9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203e4, i64 5, i64 5)
  store %struct.Memory* %call_4203e4, %struct.Memory** %MEMORY

  br label %block_.L_4203e9

  ; Code: .L_4203e9:	 RIP: 4203e9	 Bytes: 0
block_.L_4203e9:

  ; Code: jmpq .L_4203ee	 RIP: 4203e9	 Bytes: 5
  %loadMem_4203e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203e9 = call %struct.Memory* @routine_jmpq_.L_4203ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203e9, i64 5, i64 5)
  store %struct.Memory* %call_4203e9, %struct.Memory** %MEMORY

  br label %block_.L_4203ee

  ; Code: .L_4203ee:	 RIP: 4203ee	 Bytes: 0
block_.L_4203ee:

  ; Code: jmpq .L_4203f3	 RIP: 4203ee	 Bytes: 5
  %loadMem_4203ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203ee = call %struct.Memory* @routine_jmpq_.L_4203f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203ee, i64 5, i64 5)
  store %struct.Memory* %call_4203ee, %struct.Memory** %MEMORY

  br label %block_.L_4203f3

  ; Code: .L_4203f3:	 RIP: 4203f3	 Bytes: 0
block_.L_4203f3:

  ; Code: jmpq .L_4203f8	 RIP: 4203f3	 Bytes: 5
  %loadMem_4203f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203f3 = call %struct.Memory* @routine_jmpq_.L_4203f8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203f3, i64 5, i64 5)
  store %struct.Memory* %call_4203f3, %struct.Memory** %MEMORY

  br label %block_.L_4203f8

  ; Code: .L_4203f8:	 RIP: 4203f8	 Bytes: 0
block_.L_4203f8:

  ; Code: jmpq .L_4203fd	 RIP: 4203f8	 Bytes: 5
  %loadMem_4203f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203f8 = call %struct.Memory* @routine_jmpq_.L_4203fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203f8, i64 5, i64 5)
  store %struct.Memory* %call_4203f8, %struct.Memory** %MEMORY

  br label %block_.L_4203fd

  ; Code: .L_4203fd:	 RIP: 4203fd	 Bytes: 0
block_.L_4203fd:

  ; Code: jmpq .L_420402	 RIP: 4203fd	 Bytes: 5
  %loadMem_4203fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4203fd = call %struct.Memory* @routine_jmpq_.L_420402(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4203fd, i64 5, i64 5)
  store %struct.Memory* %call_4203fd, %struct.Memory** %MEMORY

  br label %block_.L_420402

  ; Code: .L_420402:	 RIP: 420402	 Bytes: 0
block_.L_420402:

  ; Code: jmpq .L_420407	 RIP: 420402	 Bytes: 5
  %loadMem_420402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420402 = call %struct.Memory* @routine_jmpq_.L_420407(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420402, i64 5, i64 5)
  store %struct.Memory* %call_420402, %struct.Memory** %MEMORY

  br label %block_.L_420407

  ; Code: .L_420407:	 RIP: 420407	 Bytes: 0
block_.L_420407:

  ; Code: jmpq .L_42040c	 RIP: 420407	 Bytes: 5
  %loadMem_420407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420407 = call %struct.Memory* @routine_jmpq_.L_42040c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420407, i64 5, i64 5)
  store %struct.Memory* %call_420407, %struct.Memory** %MEMORY

  br label %block_.L_42040c

  ; Code: .L_42040c:	 RIP: 42040c	 Bytes: 0
block_.L_42040c:

  ; Code: jmpq .L_420411	 RIP: 42040c	 Bytes: 5
  %loadMem_42040c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42040c = call %struct.Memory* @routine_jmpq_.L_420411(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42040c, i64 5, i64 5)
  store %struct.Memory* %call_42040c, %struct.Memory** %MEMORY

  br label %block_.L_420411

  ; Code: .L_420411:	 RIP: 420411	 Bytes: 0
block_.L_420411:

  ; Code: jmpq .L_420416	 RIP: 420411	 Bytes: 5
  %loadMem_420411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420411 = call %struct.Memory* @routine_jmpq_.L_420416(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420411, i64 5, i64 5)
  store %struct.Memory* %call_420411, %struct.Memory** %MEMORY

  br label %block_.L_420416

  ; Code: .L_420416:	 RIP: 420416	 Bytes: 0
block_.L_420416:

  ; Code: jmpq .L_42041b	 RIP: 420416	 Bytes: 5
  %loadMem_420416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420416 = call %struct.Memory* @routine_jmpq_.L_42041b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420416, i64 5, i64 5)
  store %struct.Memory* %call_420416, %struct.Memory** %MEMORY

  br label %block_.L_42041b

  ; Code: .L_42041b:	 RIP: 42041b	 Bytes: 0
block_.L_42041b:

  ; Code: jmpq .L_420420	 RIP: 42041b	 Bytes: 5
  %loadMem_42041b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42041b = call %struct.Memory* @routine_jmpq_.L_420420(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42041b, i64 5, i64 5)
  store %struct.Memory* %call_42041b, %struct.Memory** %MEMORY

  br label %block_.L_420420

  ; Code: .L_420420:	 RIP: 420420	 Bytes: 0
block_.L_420420:

  ; Code: jmpq .L_420425	 RIP: 420420	 Bytes: 5
  %loadMem_420420 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420420 = call %struct.Memory* @routine_jmpq_.L_420425(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420420, i64 5, i64 5)
  store %struct.Memory* %call_420420, %struct.Memory** %MEMORY

  br label %block_.L_420425

  ; Code: .L_420425:	 RIP: 420425	 Bytes: 0
block_.L_420425:

  ; Code: jmpq .L_42042a	 RIP: 420425	 Bytes: 5
  %loadMem_420425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420425 = call %struct.Memory* @routine_jmpq_.L_42042a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420425, i64 5, i64 5)
  store %struct.Memory* %call_420425, %struct.Memory** %MEMORY

  br label %block_.L_42042a

  ; Code: .L_42042a:	 RIP: 42042a	 Bytes: 0
block_.L_42042a:

  ; Code: jmpq .L_42042f	 RIP: 42042a	 Bytes: 5
  %loadMem_42042a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42042a = call %struct.Memory* @routine_jmpq_.L_42042f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42042a, i64 5, i64 5)
  store %struct.Memory* %call_42042a, %struct.Memory** %MEMORY

  br label %block_.L_42042f

  ; Code: .L_42042f:	 RIP: 42042f	 Bytes: 0
block_.L_42042f:

  ; Code: jmpq .L_420434	 RIP: 42042f	 Bytes: 5
  %loadMem_42042f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42042f = call %struct.Memory* @routine_jmpq_.L_420434(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42042f, i64 5, i64 5)
  store %struct.Memory* %call_42042f, %struct.Memory** %MEMORY

  br label %block_.L_420434

  ; Code: .L_420434:	 RIP: 420434	 Bytes: 0
block_.L_420434:

  ; Code: jmpq .L_420439	 RIP: 420434	 Bytes: 5
  %loadMem_420434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420434 = call %struct.Memory* @routine_jmpq_.L_420439(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420434, i64 5, i64 5)
  store %struct.Memory* %call_420434, %struct.Memory** %MEMORY

  br label %block_.L_420439

  ; Code: .L_420439:	 RIP: 420439	 Bytes: 0
block_.L_420439:

  ; Code: jmpq .L_42043e	 RIP: 420439	 Bytes: 5
  %loadMem_420439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420439 = call %struct.Memory* @routine_jmpq_.L_42043e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420439, i64 5, i64 5)
  store %struct.Memory* %call_420439, %struct.Memory** %MEMORY

  br label %block_.L_42043e

  ; Code: .L_42043e:	 RIP: 42043e	 Bytes: 0
block_.L_42043e:

  ; Code: jmpq .L_420443	 RIP: 42043e	 Bytes: 5
  %loadMem_42043e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42043e = call %struct.Memory* @routine_jmpq_.L_420443(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42043e, i64 5, i64 5)
  store %struct.Memory* %call_42043e, %struct.Memory** %MEMORY

  br label %block_.L_420443

  ; Code: .L_420443:	 RIP: 420443	 Bytes: 0
block_.L_420443:

  ; Code: jmpq .L_420448	 RIP: 420443	 Bytes: 5
  %loadMem_420443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420443 = call %struct.Memory* @routine_jmpq_.L_420448(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420443, i64 5, i64 5)
  store %struct.Memory* %call_420443, %struct.Memory** %MEMORY

  br label %block_.L_420448

  ; Code: .L_420448:	 RIP: 420448	 Bytes: 0
block_.L_420448:

  ; Code: jmpq .L_42044d	 RIP: 420448	 Bytes: 5
  %loadMem_420448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420448 = call %struct.Memory* @routine_jmpq_.L_42044d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420448, i64 5, i64 5)
  store %struct.Memory* %call_420448, %struct.Memory** %MEMORY

  br label %block_.L_42044d

  ; Code: .L_42044d:	 RIP: 42044d	 Bytes: 0
block_.L_42044d:

  ; Code: jmpq .L_420452	 RIP: 42044d	 Bytes: 5
  %loadMem_42044d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42044d = call %struct.Memory* @routine_jmpq_.L_420452(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42044d, i64 5, i64 5)
  store %struct.Memory* %call_42044d, %struct.Memory** %MEMORY

  br label %block_.L_420452

  ; Code: .L_420452:	 RIP: 420452	 Bytes: 0
block_.L_420452:

  ; Code: jmpq .L_420457	 RIP: 420452	 Bytes: 5
  %loadMem_420452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420452 = call %struct.Memory* @routine_jmpq_.L_420457(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420452, i64 5, i64 5)
  store %struct.Memory* %call_420452, %struct.Memory** %MEMORY

  br label %block_.L_420457

  ; Code: .L_420457:	 RIP: 420457	 Bytes: 0
block_.L_420457:

  ; Code: jmpq .L_42045c	 RIP: 420457	 Bytes: 5
  %loadMem_420457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420457 = call %struct.Memory* @routine_jmpq_.L_42045c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420457, i64 5, i64 5)
  store %struct.Memory* %call_420457, %struct.Memory** %MEMORY

  br label %block_.L_42045c

  ; Code: .L_42045c:	 RIP: 42045c	 Bytes: 0
block_.L_42045c:

  ; Code: jmpq .L_420461	 RIP: 42045c	 Bytes: 5
  %loadMem_42045c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42045c = call %struct.Memory* @routine_jmpq_.L_420461(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42045c, i64 5, i64 5)
  store %struct.Memory* %call_42045c, %struct.Memory** %MEMORY

  br label %block_.L_420461

  ; Code: .L_420461:	 RIP: 420461	 Bytes: 0
block_.L_420461:

  ; Code: jmpq .L_420466	 RIP: 420461	 Bytes: 5
  %loadMem_420461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420461 = call %struct.Memory* @routine_jmpq_.L_420466(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420461, i64 5, i64 5)
  store %struct.Memory* %call_420461, %struct.Memory** %MEMORY

  br label %block_.L_420466

  ; Code: .L_420466:	 RIP: 420466	 Bytes: 0
block_.L_420466:

  ; Code: jmpq .L_42046b	 RIP: 420466	 Bytes: 5
  %loadMem_420466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420466 = call %struct.Memory* @routine_jmpq_.L_42046b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420466, i64 5, i64 5)
  store %struct.Memory* %call_420466, %struct.Memory** %MEMORY

  br label %block_.L_42046b

  ; Code: .L_42046b:	 RIP: 42046b	 Bytes: 0
block_.L_42046b:

  ; Code: jmpq .L_420470	 RIP: 42046b	 Bytes: 5
  %loadMem_42046b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42046b = call %struct.Memory* @routine_jmpq_.L_420470(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42046b, i64 5, i64 5)
  store %struct.Memory* %call_42046b, %struct.Memory** %MEMORY

  br label %block_.L_420470

  ; Code: .L_420470:	 RIP: 420470	 Bytes: 0
block_.L_420470:

  ; Code: jmpq .L_420475	 RIP: 420470	 Bytes: 5
  %loadMem_420470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420470 = call %struct.Memory* @routine_jmpq_.L_420475(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420470, i64 5, i64 5)
  store %struct.Memory* %call_420470, %struct.Memory** %MEMORY

  br label %block_.L_420475

  ; Code: .L_420475:	 RIP: 420475	 Bytes: 0
block_.L_420475:

  ; Code: jmpq .L_42047a	 RIP: 420475	 Bytes: 5
  %loadMem_420475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420475 = call %struct.Memory* @routine_jmpq_.L_42047a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420475, i64 5, i64 5)
  store %struct.Memory* %call_420475, %struct.Memory** %MEMORY

  br label %block_.L_42047a

  ; Code: .L_42047a:	 RIP: 42047a	 Bytes: 0
block_.L_42047a:

  ; Code: jmpq .L_42047f	 RIP: 42047a	 Bytes: 5
  %loadMem_42047a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42047a = call %struct.Memory* @routine_jmpq_.L_42047f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42047a, i64 5, i64 5)
  store %struct.Memory* %call_42047a, %struct.Memory** %MEMORY

  br label %block_.L_42047f

  ; Code: .L_42047f:	 RIP: 42047f	 Bytes: 0
block_.L_42047f:

  ; Code: jmpq .L_420484	 RIP: 42047f	 Bytes: 5
  %loadMem_42047f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42047f = call %struct.Memory* @routine_jmpq_.L_420484(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42047f, i64 5, i64 5)
  store %struct.Memory* %call_42047f, %struct.Memory** %MEMORY

  br label %block_.L_420484

  ; Code: .L_420484:	 RIP: 420484	 Bytes: 0
block_.L_420484:

  ; Code: jmpq .L_420489	 RIP: 420484	 Bytes: 5
  %loadMem_420484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420484 = call %struct.Memory* @routine_jmpq_.L_420489(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420484, i64 5, i64 5)
  store %struct.Memory* %call_420484, %struct.Memory** %MEMORY

  br label %block_.L_420489

  ; Code: .L_420489:	 RIP: 420489	 Bytes: 0
block_.L_420489:

  ; Code: jmpq .L_42048e	 RIP: 420489	 Bytes: 5
  %loadMem_420489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420489 = call %struct.Memory* @routine_jmpq_.L_42048e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420489, i64 5, i64 5)
  store %struct.Memory* %call_420489, %struct.Memory** %MEMORY

  br label %block_.L_42048e

  ; Code: .L_42048e:	 RIP: 42048e	 Bytes: 0
block_.L_42048e:

  ; Code: jmpq .L_420493	 RIP: 42048e	 Bytes: 5
  %loadMem_42048e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42048e = call %struct.Memory* @routine_jmpq_.L_420493(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42048e, i64 5, i64 5)
  store %struct.Memory* %call_42048e, %struct.Memory** %MEMORY

  br label %block_.L_420493

  ; Code: .L_420493:	 RIP: 420493	 Bytes: 0
block_.L_420493:

  ; Code: jmpq .L_420498	 RIP: 420493	 Bytes: 5
  %loadMem_420493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420493 = call %struct.Memory* @routine_jmpq_.L_420498(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420493, i64 5, i64 5)
  store %struct.Memory* %call_420493, %struct.Memory** %MEMORY

  br label %block_.L_420498

  ; Code: .L_420498:	 RIP: 420498	 Bytes: 0
block_.L_420498:

  ; Code: jmpq .L_42049d	 RIP: 420498	 Bytes: 5
  %loadMem_420498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_420498 = call %struct.Memory* @routine_jmpq_.L_42049d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_420498, i64 5, i64 5)
  store %struct.Memory* %call_420498, %struct.Memory** %MEMORY

  br label %block_.L_42049d

  ; Code: .L_42049d:	 RIP: 42049d	 Bytes: 0
block_.L_42049d:

  ; Code: jmpq .L_4204a2	 RIP: 42049d	 Bytes: 5
  %loadMem_42049d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_42049d = call %struct.Memory* @routine_jmpq_.L_4204a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_42049d, i64 5, i64 5)
  store %struct.Memory* %call_42049d, %struct.Memory** %MEMORY

  br label %block_.L_4204a2

  ; Code: .L_4204a2:	 RIP: 4204a2	 Bytes: 0
block_.L_4204a2:

  ; Code: jmpq .L_4204a7	 RIP: 4204a2	 Bytes: 5
  %loadMem_4204a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204a2 = call %struct.Memory* @routine_jmpq_.L_4204a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204a2, i64 5, i64 5)
  store %struct.Memory* %call_4204a2, %struct.Memory** %MEMORY

  br label %block_.L_4204a7

  ; Code: .L_4204a7:	 RIP: 4204a7	 Bytes: 0
block_.L_4204a7:

  ; Code: jmpq .L_4204ac	 RIP: 4204a7	 Bytes: 5
  %loadMem_4204a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204a7 = call %struct.Memory* @routine_jmpq_.L_4204ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204a7, i64 5, i64 5)
  store %struct.Memory* %call_4204a7, %struct.Memory** %MEMORY

  br label %block_.L_4204ac

  ; Code: .L_4204ac:	 RIP: 4204ac	 Bytes: 0
block_.L_4204ac:

  ; Code: jmpq .L_41dec3	 RIP: 4204ac	 Bytes: 5
  %loadMem_4204ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204ac = call %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204ac, i64 -9705, i64 5)
  store %struct.Memory* %call_4204ac, %struct.Memory** %MEMORY

  br label %block_.L_41dec3

  ; Code: nop	 RIP: 4204b1	 Bytes: 1
  %loadMem_4204b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b1 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b1)
  store %struct.Memory* %call_4204b1, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b2	 Bytes: 1
  %loadMem_4204b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b2 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b2)
  store %struct.Memory* %call_4204b2, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b3	 Bytes: 1
  %loadMem_4204b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b3 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b3)
  store %struct.Memory* %call_4204b3, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b4	 Bytes: 1
  %loadMem_4204b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b4 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b4)
  store %struct.Memory* %call_4204b4, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b5	 Bytes: 1
  %loadMem_4204b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b5 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b5)
  store %struct.Memory* %call_4204b5, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b6	 Bytes: 1
  %loadMem_4204b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b6 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b6)
  store %struct.Memory* %call_4204b6, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b7	 Bytes: 1
  %loadMem_4204b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b7 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b7)
  store %struct.Memory* %call_4204b7, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b8	 Bytes: 1
  %loadMem_4204b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b8 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b8)
  store %struct.Memory* %call_4204b8, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204b9	 Bytes: 1
  %loadMem_4204b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204b9 = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204b9)
  store %struct.Memory* %call_4204b9, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204ba	 Bytes: 1
  %loadMem_4204ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204ba = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204ba)
  store %struct.Memory* %call_4204ba, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204bb	 Bytes: 1
  %loadMem_4204bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204bb = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204bb)
  store %struct.Memory* %call_4204bb, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204bc	 Bytes: 1
  %loadMem_4204bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204bc = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204bc)
  store %struct.Memory* %call_4204bc, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204bd	 Bytes: 1
  %loadMem_4204bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204bd = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204bd)
  store %struct.Memory* %call_4204bd, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204be	 Bytes: 1
  %loadMem_4204be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204be = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204be)
  store %struct.Memory* %call_4204be, %struct.Memory** %MEMORY

  ; Code: nop	 RIP: 4204bf	 Bytes: 1
  %loadMem_4204bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4204bf = call %struct.Memory* @routine_nop(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4204bf)
  store %struct.Memory* %call_4204bf, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_4204bf
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x6360___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 25440)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x4__MINUS0x354__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 852
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 4)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.read_rcfile(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.initialize_zobrist(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x62dab0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x62dab0_type* @G__0x62dab0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x62c130___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x62c130_type* @G__0x62c130 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x38___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 56)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x2__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 2)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movq__rsi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.init_game(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.initialize_hash(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.clear_tt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.reset_ecache(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x2580___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 9600)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r8d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24864
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x3840___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 14400)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r8d___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 15264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0__0x880b10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880b10_type* @G_0x880b10 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x62e4f0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e4f0_type* @G_0x62e4f0 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x62ea14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea14_type* @G_0x62ea14 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x864508(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x864508_type* @G_0x864508 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x8667a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8667a4_type* @G_0x8667a4 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x886be4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886be4_type* @G_0x886be4 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x62e510(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e510_type* @G_0x62e510 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x886bc0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886bc0_type* @G_0x886bc0 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x28__0x8661d8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8661d8_type* @G_0x8661d8 to i64), i64 40)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x5__0x86bd70(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd70_type* @G_0x86bd70 to i64), i64 5)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x7530__0x8a05b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a05b4_type* @G_0x8a05b4 to i64), i64 30000)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x7d0__0x886bc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886bc4_type* @G_0x886bc4 to i64), i64 2000)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x7d0__0x880b14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880b14_type* @G_0x880b14 to i64), i64 2000)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x28__0x880b18(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880b18_type* @G_0x880b18 to i64), i64 40)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0xc8__0x62ea18(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea18_type* @G_0x62ea18 to i64), i64 200)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x1__0x86bd60(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd60_type* @G_0x86bd60 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x1__0x62e9e4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e9e4_type* @G_0x62e9e4 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__0x8a2a04(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a2a04_type* @G_0x8a2a04 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__MINUS0x358__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 856
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__0x886b84(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24872
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x1__MINUS0x35c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 860
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__0x886bbc(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886bbc_type* @G_0x886bbc to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x1__0x62e524(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e524_type* @G_0x62e524 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x62e514(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e514_type* @G_0x62e514 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24868
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__0x886a7c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886a7c_type* @G_0x886a7c to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x86bd90(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd90_type* @G_0x86bd90 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x886a60(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886a60_type* @G_0x886a60 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x886b80(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b80_type* @G_0x886b80 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x886a78(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886a78_type* @G_0x886a78 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x633b54(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x633b54_type* @G_0x633b54 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x880654(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880654_type* @G_0x880654 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x62ea38(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movq__rdi__MINUS0x6190__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24976
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rsi__MINUS0x6198__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24984
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_MINUS0x6190__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24976
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x61a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24992
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rax__MINUS0x61a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25000
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__ecx__MINUS0x61ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25004
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.memset_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x61a8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25000
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x61ac__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25004
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x61a0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24992
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x633b40___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x633b40_type* @G_0x633b40 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_0x62ea38___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__ecx__0x84a3d0___rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8692688
  %15 = load i32, i32* %ECX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movq_0x62da80___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x62da80_type* @G_0x62da80 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x6198__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24984
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.setbuf_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq_0x62da90___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G_0x62da90_type* @G_0x62da90 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.start_up(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x2__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_41debe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x42925b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42925b_type* @G__0x42925b to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.printf_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x8__rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x61b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25008
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.run_autotest(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_41dec3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x6124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24868
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41e7b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x886b84___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_0x8661bc___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x8661bc_type* @G_0x8661bc to i64))
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_41def1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x6134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41e7b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x358__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 856
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x0__0x86bd90(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd90_type* @G_0x86bd90 to i64), i64 0)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_cmpl__0x0__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 0)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_leaq_MINUS0x6158__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24920
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.think(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x6158__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24920
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0x350__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x6150__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24912
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0x348__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 840
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x6148__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24904
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0x340__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_je_.L_41df82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x86bd60(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd60_type* @G_0x86bd60 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41e7b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x4__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 4)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41df9e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x3__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 3)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41dfba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 2)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41dfba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 3)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41e01c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 2)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41dfe4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 0)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41e6d3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__0x886b84(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41e000(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x0__0x886b84(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64), i64 0)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_je_.L_41e6d3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 1)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_cmpl__0x4__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 4)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_cmpl__0x5__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 5)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_leaq_MINUS0x350__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rax____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rcx____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x8__rax____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.comp_to_coord(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x350__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_xorl__esi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_leaq_MINUS0x3ba0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 15264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x633b40___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x633b40_type* @G_0x633b40 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_0x62ea38___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__edx__0x84a3d0___rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8692688
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 24)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x350__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x348__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 840
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x340__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rcx__0x10__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.make(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_0x62ea38___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__edx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__esi__0x62ea38(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64), i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__edx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x4___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 4)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x880b20___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x880b20_type* @G_0x880b20 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_0x880b28___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x880b28_type* @G_0x880b28 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x0__0x86bd84(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd84_type* @G_0x86bd84 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl_0x86bd60___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x86bd60_type* @G_0x86bd60 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 -1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__0x86bd60(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd60_type* @G_0x86bd60 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.is_draw(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41e141(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x5__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 5)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_41e15f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x64__0x866790(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866790_type* @G_0x866790 to i64), i64 100)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_41e15a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x4__0x866530(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x866530_type* @G_0x866530 to i64), i64 4)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_movl_0x633b54___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x633b54_type* @G_0x633b54 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0x633b54(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x633b54_type* @G_0x633b54 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.reset_piece_square(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x28__0x85f3ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f3ec_type* @G_0x85f3ec to i64), i64 40)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_41e1d2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x85f3ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f3ec_type* @G_0x85f3ec to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41e1b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x886740___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x886740_type* @G__0x886740 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.strcpy_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x61b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25016
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_41e1cd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x886740___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x886740_type* @G__0x886740 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.strcat_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x61c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25024
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_41e1d2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4285ec___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4285ec_type* @G__0x4285ec to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x44120a__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x44120a__rip__type* @G_0x44120a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3INCI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = trunc i64 %3 to i32
  %6 = add i32 %5, 1
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  %8 = and i32 %6, 255
  %9 = tail call i32 @llvm.ctpop.i32(i32 %8) #22
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  %12 = xor i8 %11, 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %12, i8* %13, align 1
  %14 = xor i32 %6, %5
  %15 = lshr i32 %14, 4
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %17, i8* %18, align 1
  %19 = icmp eq i32 %6, 0
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %20, i8* %21, align 1
  %22 = lshr i32 %6, 31
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %5, 31
  %26 = xor i32 %22, %25
  %27 = add   i32 %26, %22
  %28 = icmp eq i32 %27, 2
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %29, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_incl__eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3INCI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0x441202__rip_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x441202__rip__type* @G_0x441202__rip_ to i64)
  %11 = load i32, i32* %EAX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 6
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_0x446310__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x446310__rip__type* @G_0x446310__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory*, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = inttoptr i64 %3 to i32*
  %11 = load i32, i32* %10
  %12 = sitofp i32 %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl_0x21cc4c__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x21cc4c__rip__type* @G_0x21cc4c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = trunc i64 %3 to i32
  %11 = sitofp i32 %10 to float
  %12 = bitcast i8* %2 to float*
  store float %11, float* %12, align 1
  %13 = extractelement <2 x i32> %6, i32 1
  %14 = getelementptr inbounds i8, i8* %2, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 1
  %16 = extractelement <2 x i32> %9, i32 0
  %17 = bitcast i8* %7 to i32*
  store i32 %16, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssl__eax___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fdiv float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = fpext float %7 to double
  %9 = bitcast i8* %2 to double*
  store double %8, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtss2sd__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0xa19c__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa19c__rip__type* @G_0xa19c__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = bitcast i8* %3 to double*
  %11 = load double, double* %10, align 1
  %12 = fptrunc double %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movl__0x4284ed___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4284ed_type* @G__0x4284ed to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__0x1___sil(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %SIL, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdi__MINUS0x61c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25032
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__sil__MINUS0x61c9__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 25033
  %15 = load i8, i8* %SIL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x61c9__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 25033
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_0x4628ca__rip____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x4628ca__rip__type* @G_0x4628ca__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x2102a0__rip____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x2102a0__rip__type* @G_0x2102a0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__esi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = sitofp i64 %3 to float
  %11 = bitcast i8* %2 to float*
  store float %10, float* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = bitcast i8* %7 to i32*
  store i32 %15, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsi2ssq__rdi___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvtsi2ssq__rdx___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0xa12a__rip____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa12a__rip__type* @G_0xa12a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fadd float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addss__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movss_0xa11e__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0xa11e__rip__type* @G_0xa11e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fmul float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movl__0x42850a___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G__0x42850a_type* @G__0x42850a to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__esi__MINUS0x61d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25040
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x61d0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25040
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb_MINUS0x61c9__rbp____r9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 25033
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %R9B, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x61d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25044
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__r9b___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %R9B
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %2 to float*
  store float %7, float* %8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss__xmm1__MINUS0x61d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 25048
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss__xmm2__MINUS0x61dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 25052
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_0x446248__rip____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x446248__rip__type* @G_0x446248__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x21074e__rip____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x21074e__rip__type* @G_0x21074e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__ecx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x4484d4__rip____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x4484d4__rip__type* @G_0x4484d4__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__edx___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cvtsi2ssq__r10___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvtsi2ssq__rdi___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movss_MINUS0x61dc__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25052
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movss_MINUS0x61d8__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25048
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__0x428540___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G__0x428540_type* @G__0x428540 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__edx__MINUS0x61e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25056
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x61e0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25056
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x61e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25060
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_0x468d72__rip____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x468d72__rip__type* @G_0x468d72__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movl_0x44da30__rip____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x44da30__rip__type* @G_0x44da30__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_cvtsi2ssq__rdi___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2RnImEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movss_MINUS0x61dc__rbp____xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25052
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addss__xmm3___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM3 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_divss__xmm2___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movl_0x4686f6__rip____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x4686f6__rip__type* @G_0x4686f6__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x42857c___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G__0x42857c_type* @G__0x42857c to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__esi__MINUS0x61e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25064
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x61e8__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25064
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x61ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25068
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_0x210654__rip____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x210654__rip__type* @G_0x210654__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x44615a__rip____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x44615a__rip__type* @G_0x44615a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x468cf0__rip____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x468cf0__rip__type* @G_0x468cf0__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x4285af___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G__0x4285af_type* @G__0x4285af to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__r8b___r9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %R8B
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %R9B, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x61f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25072
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_0x447f0d__rip____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x447f0d__rip__type* @G_0x447f0d__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movl_0x482684__rip____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x482684__rip__type* @G_0x482684__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_incl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3INCI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq_MINUS0x61c8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25032
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x61f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25076
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xfff0bdc0___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 4293967296)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0xf4240___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 1000000)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x8661c0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x8661c0_type* @G_0x8661c0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x61f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25080
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx__MINUS0x61fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25084
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.eval(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x42926a___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42926a_type* @G__0x42926a to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x62ea18___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x62ea18_type* @G_0x62ea18 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x886bb8___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x886bb8_type* @G_0x886bb8 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x8667a0___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x8667a0_type* @G_0x8667a0 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x61fc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25084
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__0x4292bb___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4292bb_type* @G__0x4292bb to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x633b40___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x633b40_type* @G_0x633b40 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x881df4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x881df4_type* @G_0x881df4 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25088
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movl__eax__MINUS0x6204__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25092
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_41e556(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a2a04_type* @G_0x8a2a04 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41e508(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x350__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 848
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x62db08___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x62db08_type* @G_0x62db08 to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41e4d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x34c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 844
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x62db0c_type* @G_0x62db0c to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41e4ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4292d5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4292d5_type* @G__0x4292d5 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x6208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25096
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jne_.L_41e503(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__edi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.CheckBadFlow(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41e551(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_41e52e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_41e54c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4292de___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4292de_type* @G__0x4292de to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x620c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_41e6ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_41e5ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_41e58a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_41e5a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x6210__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e5f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jne_.L_41e5d3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_je_.L_41e5f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x6214__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_jne_.L_41e620(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4292e3___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4292e3_type* @G__0x4292e3 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x6218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e6c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e64a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4292f6___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4292f6_type* @G__0x4292f6 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x621c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e6bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e674(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429309___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429309_type* @G__0x429309 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x6220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e6ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e69e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429324___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429324_type* @G__0x429324 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x6224__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25124
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e6b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429341___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429341_type* @G__0x429341 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x6228__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25128
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jmpq_.L_41e7ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e6fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x622c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e7a1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e727(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x6230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e79c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e751(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x6234__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25140
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e797(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e77b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x6238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41e792(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movl__eax__MINUS0x623c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jmpq_.L_41e7b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41e7b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e844(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x35c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 860
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_41e802(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429bef___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429bef_type* @G__0x429bef to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 1)
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_0x886b84___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64))
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x6240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.display_board(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41e83f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429351___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429351_type* @G__0x429351 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__0x100___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 256)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x62da90___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x62da90_type* @G_0x62da90 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6244__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.rinput(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41e909(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_41e896(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0x62e524(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e524_type* @G_0x62e524 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41e888(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41e888(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x0__0x62ea38(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64), i64 0)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_cmpl__0x0__0x62e514(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e514_type* @G_0x62e514 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_41e8de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41e8de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x6170__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24944
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1__0x886bbc(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886bbc_type* @G_0x886bbc to i64), i64 1)
  ret %struct.Memory* %8
}










define %struct.Memory* @routine_jne_.L_41e904(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_41eac7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.is_move(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41eac7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x338__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 824
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.verify_coord(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41eaa4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x338__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 824
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_MINUS0x338__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 824
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x330__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 816
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x328__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 808
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl__edx__0x84a3d0___rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 8692688
  %15 = load i32, i32* %EDX
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 7
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}






























define %struct.Memory* @routine_movl_0x633b54___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x633b54_type* @G_0x633b54 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_xorl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__edx__0x633b54(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x633b54_type* @G_0x633b54 to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jge_.L_41ea4f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41ea2d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq__rax__MINUS0x6250__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25168
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_41ea4a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movq__rax__MINUS0x6258__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25176
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_41ea4f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_0x85f3ec___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x85f3ec_type* @G_0x85f3ec to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0x85f3ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f3ec_type* @G_0x85f3ec to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_je_.L_41ea9f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movl__eax__MINUS0x625c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jmpq_.L_41eac2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429359___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429359_type* @G__0x429359 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x6260__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4204ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x42936b___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42936b_type* @G__0x42936b to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.strstr_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = sub i64 %2, %3
  %6 = icmp ult i64 %2, %3
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %7, i8* %8, align 1
  %9 = trunc i64 %5 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i64 %3, %2
  %17 = xor i64 %16, %5
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %5, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %5, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %2, 63
  %29 = lshr i64 %3, 63
  %30 = xor i64 %29, %28
  %31 = xor i64 %25, %28
  %32 = add   i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jne_.L_41eb3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x110__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x118__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i8*
  %6 = load i8, i8* %5
  %7 = trunc i64 %3 to i8
  %8 = sub i8 %6, %7
  %9 = icmp ult i8 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = zext i8 %8 to i32
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i8 %6, %7
  %19 = xor i8 %18, %8
  %20 = lshr i8 %19, 4
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i8 %8, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i8 %8, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i8 %6, 7
  %29 = lshr i8 %7, 7
  %30 = xor i8 %28, %29
  %31 = xor i8 %26, %28
  %32 = add   i8 %31, %30
  %33 = icmp eq i8 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpb__0x0____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_je_.L_41eb36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = sext i8 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl___rax____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.tolower_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movb__al___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq_MINUS0x118__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__cl____rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RDX
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x1___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_41eaf5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_41eb3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x429374___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429374_type* @G__0x429374 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.strcmp_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41eb68(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.free_hash(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.free_ecache(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.exit_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x429379___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429379_type* @G__0x429379 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41ebce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41ebb8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x0__0x633b44(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x633b44_type* @G_0x633b44 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_41ebc9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_4204a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x42937e___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x42937e_type* @G__0x42937e to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41ec06(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x429aeb___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429aeb_type* @G__0x429aeb to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41ec17(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x35c__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 860
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.toggle_bool(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_42049d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429386___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429386_type* @G__0x429386 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 5)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_callq_.strncmp_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_41ecf6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429aea___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429aea_type* @G__0x429aea to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x354__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_addq__0x6___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 6)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.__isoc99_sscanf_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0x633b4c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x633b4c_type* @G_0x633b4c to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__eax__MINUS0x6264__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.rtime(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x6140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24896
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x354__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.perft(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x42938c___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42938c_type* @G__0x42938c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x354__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 852
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x633b4c___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G_0x633b4c_type* @G_0x633b4c to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x6268__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq_MINUS0x6140__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24896
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.rdifftime(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4293a8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4293a8_type* @G__0x4293a8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x96d3__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x96d3__rip__type* @G_0x96d3__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cvtss2sd__xmm1___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSS2SDI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWI8vec256_tET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fdiv double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = extractelement <2 x i32> %6, i32 0
  %11 = bitcast i8* %2 to i32*
  store i32 %10, i32* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}






define %struct.Memory* @routine_movl__eax__MINUS0x626c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_420498(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x4293b5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4293b5_type* @G__0x4293b5 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41ee89(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41ed41(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4293b9___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4293b9_type* @G__0x4293b9 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x84ad30___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x84ad30_type* @G__0x84ad30 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x6270__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jne_.L_41ee74(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x62dab0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x62dab0_type* @G__0x62dab0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x62c130___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x62c130_type* @G__0x62c130 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x38___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 56)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}










define %struct.Memory* @routine_cmpl__0x0__MINUS0x6130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41ed9f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x1___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 1)
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__0x0__0x86bd74(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd74_type* @G_0x86bd74 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x86bd78(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd78_type* @G_0x86bd78 to i64), i64 0)
  ret %struct.Memory* %8
}














define %struct.Memory* @routine_movl__0x0__0x84a3d0___rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8692688
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 0)
  ret %struct.Memory* %14
}








define %struct.Memory* @routine_movl__0x0__0x86bd60(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd60_type* @G_0x86bd60 to i64), i64 0)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_callq_.ResetHandValue(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_41ee84(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_420493(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x4293e1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4293e1_type* @G__0x4293e1 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41ef0c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x1__0x8a2a04(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a2a04_type* @G_0x8a2a04 to i64), i64 1)
  ret %struct.Memory* %8
}




define %struct.Memory* @routine_movl__0x2___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 2)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.signal_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__rax__MINUS0x6278__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25208
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movq__0x428764___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x428764_type* @G__0x428764 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x627c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x6280__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25216
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.BegForPartner(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_42048e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x4293e8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4293e8_type* @G__0x4293e8 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41ef79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4293ee___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4293ee_type* @G__0x4293ee to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x946e__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x946e__rip__type* @G_0x946e__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x864500___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x864500_type* @G_0x864500 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cvtsi2ssl_0x63ae44___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x63ae44_type* @G_0x63ae44 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cvtsi2ssl_0x864500___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSI2SSI2MnIjEEEP6MemoryS4_R5State3VnWI8vec128_tET_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x864500_type* @G_0x864500 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_divss__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvtsd2ss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}








define %struct.Memory* @routine_movl__eax__MINUS0x6284__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_420489(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x429416___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429416_type* @G__0x429416 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41efc2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x86679c___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x86679c_type* @G__0x86679c to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_je_.L_41efbd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__0x86679c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86679c_type* @G_0x86679c to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_420484(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x429414___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429414_type* @G__0x429414 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41efee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0x86679c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86679c_type* @G_0x86679c to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_42047f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x42941b___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x42941b_type* @G__0x42941b to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f00f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x429422___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429422_type* @G__0x429422 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f03b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x429427___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429427_type* @G__0x429427 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f067(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0x62e524(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e524_type* @G_0x62e524 to i64), i64 0)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_movl__0x429cf6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429cf6_type* @G__0x429cf6 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f088(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x42942c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x42942c_type* @G__0x42942c to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f0ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__0x8661bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8661bc_type* @G_0x8661bc to i64), i64 1)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_jmpq_.L_420466(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x429432___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429432_type* @G__0x429432 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f10c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0x8661bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8661bc_type* @G_0x8661bc to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x1__0x633b54(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x633b54_type* @G_0x633b54 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x1__0x886b84(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_420461(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x429438___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x429438_type* @G__0x429438 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f137(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x358__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 856
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_42045c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x42943e___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x42943e_type* @G__0x42943e to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f185(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.check_phase(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq__0x429443___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429443_type* @G__0x429443 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x6288__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_420457(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x42888d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x42888d_type* @G__0x42888d to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_41f1be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x8661bc___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x8661bc_type* @G_0x8661bc to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__0x886b84(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b84_type* @G_0x886b84 to i64), i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_420452(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4288b4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4288b4_type* @G__0x4288b4 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jne_.L_41f218(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x42946c___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42946c_type* @G__0x42946c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x8a05b4___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x8a05b4_type* @G__0x8a05b4 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addq__0x5___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 5)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0x628c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_42044d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x42944d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42944d_type* @G__0x42944d to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f272(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x86bd64___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x86bd64_type* @G__0x86bd64 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_movl__eax__MINUS0x6290__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_420448(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429452___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429452_type* @G__0x429452 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f3c3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429458___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429458_type* @G__0x429458 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_je_.L_41f341(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x42945a___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42945a_type* @G__0x42945a to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x8661d8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x8661d8_type* @G__0x8661d8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x86bd70___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x86bd70_type* @G__0x86bd70 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x62ea00___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x62ea00_type* @G__0x62ea00 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x8a0a78___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x8a0a78_type* @G__0x8a0a78 to i64))
  ret %struct.Memory* %11
}











define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = mul  i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0x1770__0x86bd70___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 12
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x86bd70_type* @G_0x86bd70 to i64), i64 6000)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_imull__0x64__0x62ea00___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R11D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x62ea00_type* @G_0x62ea00 to i64), i64 100)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__r11d___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i32, i32* %R11D
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r10d__0x8a05b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R10D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a05b4_type* @G_0x8a05b4 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x8a05b4___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R10D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x8a05b4_type* @G_0x8a05b4 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r10d__0x86bd64(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R10D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd64_type* @G_0x86bd64 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x6294__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_41f3a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429466___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429466_type* @G__0x429466 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movq__0x8a0a78___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x8a0a78_type* @G__0x8a0a78 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_imull__0x1770__0x86bd70___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 12
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x86bd70_type* @G_0x86bd70 to i64), i64 6000)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r9d__0x8a05b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a05b4_type* @G_0x8a05b4 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0x8a05b4___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 ptrtoint( %G_0x8a05b4_type* @G_0x8a05b4 to i64))
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r9d__0x86bd64(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R9D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd64_type* @G_0x86bd64 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x6298__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__0x0__0x86bd88(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd88_type* @G_0x86bd88 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jmpq_.L_420443(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x42946f___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42946f_type* @G__0x42946f to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x6___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 6)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jne_.L_41f459(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429469___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429469_type* @G__0x429469 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x880b14___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x880b14_type* @G__0x880b14 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x886bc4___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x886bc4_type* @G__0x886bc4 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addq__0x7___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 7)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl__0x0__0x880b14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880b14_type* @G_0x880b14 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__eax__MINUS0x629c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_41f43b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x886bc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886bc4_type* @G_0x886bc4 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41f454(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_42043e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429476___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429476_type* @G__0x429476 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x7___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 7)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jne_.L_41f490(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.ProcessHoldings(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_420439(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x42947e___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42947e_type* @G__0x42947e to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f6ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429486___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429486_type* @G__0x429486 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41f50a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_41f6d8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x42948d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42948d_type* @G__0x42948d to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41f55e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x62c170___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x62c170_type* @G__0x62c170 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x0__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 0)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_jmpq_.L_41f6d3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429498___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429498_type* @G__0x429498 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41f5b2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x1__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 1)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_jmpq_.L_41f6ce(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294a1___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294a1_type* @G__0x4294a1 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41f611(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x62c1b0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x62c1b0_type* @G__0x62c1b0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x3__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 3)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x886b88(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b88_type* @G_0x886b88 to i64), i64 0)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_jmpq_.L_41f6c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294a9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294a9_type* @G__0x4294a9 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41f670(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0x1__0x886b88(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b88_type* @G_0x886b88 to i64), i64 1)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_jmpq_.L_41f6c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294b2___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294b2_type* @G__0x4294b2 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_41f6bf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x62c1f0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x62c1f0_type* @G__0x62c1f0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x4__0x85f154(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f154_type* @G_0x85f154 to i64), i64 4)
  ret %struct.Memory* %8
}
























define %struct.Memory* @routine_jmpq_.L_420434(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294b9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294b9_type* @G__0x4294b9 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f744(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x6188__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24968
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1__0x62e514(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e514_type* @G_0x62e514 to i64), i64 1)
  ret %struct.Memory* %8
}








define %struct.Memory* @routine_jmpq_.L_42042f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294c1___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294c1_type* @G__0x4294c1 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f80a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4294c6___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4294c6_type* @G__0x4294c6 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x62ea38___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl__eax__MINUS0x62a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jle_.L_41f805(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x6120__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24864
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__edx__0x62ea38(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq__edx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rdi__0x880b20(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880b20_type* @G_0x880b20 to i64), i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_0x8__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rcx__0x880b28(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x880b28_type* @G_0x880b28 to i64), i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_callq_.unmake(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jmpq_.L_42042a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294d8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294d8_type* @G__0x4294d8 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f8ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__0x62ea38(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62ea38_type* @G_0x62ea38 to i64), i64 1)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jle_.L_41f8fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














































































define %struct.Memory* @routine_jmpq_.L_420425(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294df___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294df_type* @G__0x4294df to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f93e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x6124__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24868
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_420420(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294e4___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294e4_type* @G__0x4294e4 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41f9fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_41f9fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x1e__0x86bd7c(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x86bd7c_type* @G_0x86bd7c to i64), i64 30)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41f994(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0x62e4fc(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e4fc_type* @G_0x62e4fc to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_cmpl__0x72__0x8661d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8661d0_type* @G_0x8661d0 to i64), i64 114)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_41f9ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0x62e500(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x62e500_type* @G_0x62e500 to i64), i64 0)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_movl__0x100___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 256)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x32__0x85f3ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f3ec_type* @G_0x85f3ec to i64), i64 50)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0x881de4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x881de4_type* @G_0x881de4 to i64), i64 0)
  ret %struct.Memory* %8
}












define %struct.Memory* @routine_jmpq_.L_42041b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_41fa58(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429af6___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429af6_type* @G__0x429af6 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fa58(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x6128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24872
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_41fa49(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x6128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24872
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_41fa53(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_420416(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_41faa0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4294e6___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294e6_type* @G__0x4294e6 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41faa0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.reset_board(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_420411(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_41fb55(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.__ctype_b_loc_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq___rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsbl_MINUS0x110__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl___rax__rdx_2____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 2
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %18)
  ret %struct.Memory* %21
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andl__0x400___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1024)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movsbl_MINUS0x10f__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 271
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_movsbl_MINUS0x10e__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 270
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_andl__0x800___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2048)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x6128__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24872
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb_MINUS0x110__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 272
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movb_MINUS0x10f__rbp____cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 271
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsbl_MINUS0x10e__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 270
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i32
  %6 = shl i32 %5, 24
  %7 = ashr exact i32 %6, 24
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl__al___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsbl__cl___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 17
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %R8D = bitcast %union.anon* %12 to i32*
  %13 = bitcast i32* %R8D to i64*
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx__MINUS0x62a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25252
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x62a4__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.PutPiece(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_42040c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294e9___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294e9_type* @G__0x4294e9 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fb93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_callq_.HandlePartner(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_420407(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294e8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294e8_type* @G__0x4294e8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 8)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jne_.L_41fbd1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x8___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 8)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_420402(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294f1___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294f1_type* @G__0x4294f1 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fc08(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.HandlePtell(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4203fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294f7___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294f7_type* @G__0x4294f7 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fc38(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.run_epd_testsuite(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4203f8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4288b1___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4288b1_type* @G__0x4288b1 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jne_.L_41fca1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x886b80___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x886b80_type* @G__0x886b80 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addq__0x3___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_imull__0x64__0x886b80___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0x886b80_type* @G_0x886b80 to i64), i64 100)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__ecx__0x886b80(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x886b80_type* @G_0x886b80 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x62a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25256
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4203f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4294fc___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4294fc_type* @G__0x4294fc to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fccc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4203ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429503___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429503_type* @G__0x429503 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fd69(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429509___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429509_type* @G__0x429509 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x62ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_leaq_MINUS0x320__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x8662e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8662e8_type* @G_0x8662e8 to i64), i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_callq_.atol_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_imulq__0x64___rax___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 100)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__esi__0x85f168(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x85f168_type* @G_0x85f168 to i64), i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movl__eax__MINUS0x62b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25264
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.proofnumbersearch(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4203e9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429523___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429523_type* @G__0x429523 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fddd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_leaq_MINUS0x612c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq__0x429528___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429528_type* @G__0x429528 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x612c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24876
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x62b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x62b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25272
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4203e4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429531___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429531_type* @G__0x429531 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fe12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x6130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24880
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4203df(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429537___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429537_type* @G__0x429537 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41fed7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








































define %struct.Memory* @routine_jmpq_.L_4203da(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_41ff15(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_addq__0x9___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.setup_epd_line(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4203d5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_41ff40(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x42953d___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42953d_type* @G__0x42953d to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41ffb8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x880b18___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x880b18_type* @G__0x880b18 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_movq__0x429540___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429540_type* @G__0x429540 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_0x880b18___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G_0x880b18_type* @G_0x880b18 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25276
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x62c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25280
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq__0x42955a___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42955a_type* @G__0x42955a to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_41ffed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x6134__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24884
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movq__0x42955f___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42955f_type* @G__0x42955f to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_420096(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429568___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429568_type* @G__0x429568 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movq__0x4295a7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4295a7_type* @G__0x4295a7 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4295dc___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4295dc_type* @G__0x4295dc to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4295fd___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4295fd_type* @G__0x4295fd to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25292
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429644___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429644_type* @G__0x429644 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25296
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__0x2__0x8a2a04(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x8a2a04_type* @G_0x8a2a04 to i64), i64 2)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__eax__MINUS0x62d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4203c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x429672___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x429672_type* @G__0x429672 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_4200c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4203bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x42967b___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x42967b_type* @G__0x42967b to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_420103(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429684___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429684_type* @G__0x429684 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__MINUS0x62d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4203b7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x428778___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x428778_type* @G__0x428778 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_420381(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x429f1f___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429f1f_type* @G__0x429f1f to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x62da40___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x62da40_type* @G__0x62da40 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movq__0x4296c5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4296c5_type* @G__0x4296c5 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4296ee___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4296ee_type* @G__0x4296ee to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25312
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429710___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429710_type* @G__0x429710 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429743___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429743_type* @G__0x429743 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25320
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429766___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429766_type* @G__0x429766 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25324
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x42979d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42979d_type* @G__0x42979d to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25328
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4297ce___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4297ce_type* @G__0x4297ce to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4297ff___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4297ff_type* @G__0x4297ff to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25336
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429818___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429818_type* @G__0x429818 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x62fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25340
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429835___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429835_type* @G__0x429835 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25344
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x42986c___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42986c_type* @G__0x42986c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6304__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25348
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x42989b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42989b_type* @G__0x42989b to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6308__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25352
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4298c5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4298c5_type* @G__0x4298c5 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x630c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25356
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4298f2___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4298f2_type* @G__0x4298f2 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6310__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25360
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429919___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429919_type* @G__0x429919 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6314__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x42994d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x42994d_type* @G__0x42994d to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6318__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25368
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429988___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429988_type* @G__0x429988 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x631c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25372
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4299b4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4299b4_type* @G__0x4299b4 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6320__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25376
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x4299e7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4299e7_type* @G__0x4299e7 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6324__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429a1d___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429a1d_type* @G__0x429a1d to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6328__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25384
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429a43___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429a43_type* @G__0x429a43 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x632c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429a69___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429a69_type* @G__0x429a69 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6330__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25392
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movq__0x429a93___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x429a93_type* @G__0x429a93 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x6334__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl__eax__MINUS0x6338__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__0x0__MINUS0x35c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 860
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__eax__MINUS0x633c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4203b2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_4203ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__eax__MINUS0x6340__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 25408
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jmpq_.L_4203c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4203cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_4203d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






























































define %struct.Memory* @routine_jmpq_.L_42046b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_420470(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_420475(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_42047a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jmpq_.L_4204a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8NOP_IMPLIJEEEP6MemoryS2_R5StateDpT_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376)) #10 {
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_nop(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8NOP_IMPLIJEEEP6MemoryS2_R5StateDpT_(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}





























