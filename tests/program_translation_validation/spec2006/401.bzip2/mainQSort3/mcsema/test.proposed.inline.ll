; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_404f20.BZ2_bz__AssertH__fail(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_402bb0.mainSimpleSort(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_402eb0.mmed3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @mainQSort3(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_402380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_402380, %struct.Memory** %MEMORY
  %loadMem_402381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1326 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1327 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1326
  %27 = load i64, i64* %PC.i1325
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1325
  store i64 %26, i64* %RBP.i1327, align 8
  store %struct.Memory* %loadMem_402381, %struct.Memory** %MEMORY
  %loadMem_402384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1324 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1324
  %36 = load i64, i64* %PC.i1323
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1323
  %38 = sub i64 %35, 1424
  store i64 %38, i64* %RSP.i1324, align 8
  %39 = icmp ult i64 %35, 1424
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 1424, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_402384, %struct.Memory** %MEMORY
  %loadMem_40238b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i1321 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i1322 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i1322
  %77 = add i64 %76, 24
  %78 = load i64, i64* %PC.i1320
  %79 = add i64 %78, 4
  store i64 %79, i64* %PC.i1320
  %80 = inttoptr i64 %77 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %RAX.i1321, align 8
  store %struct.Memory* %loadMem_40238b, %struct.Memory** %MEMORY
  %loadMem_40238f = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 21
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %R10D.i1318 = bitcast %union.anon* %87 to i32*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 15
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RBP.i1319 = bitcast %union.anon* %90 to i64*
  %91 = bitcast i32* %R10D.i1318 to i64*
  %92 = load i64, i64* %RBP.i1319
  %93 = add i64 %92, 16
  %94 = load i64, i64* %PC.i1317
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC.i1317
  %96 = inttoptr i64 %93 to i32*
  %97 = load i32, i32* %96
  %98 = zext i32 %97 to i64
  store i64 %98, i64* %91, align 8
  store %struct.Memory* %loadMem_40238f, %struct.Memory** %MEMORY
  %loadMem_402393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 33
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %101 to i64*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %RDI.i1315 = bitcast %union.anon* %104 to i64*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 15
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %RBP.i1316 = bitcast %union.anon* %107 to i64*
  %108 = load i64, i64* %RBP.i1316
  %109 = sub i64 %108, 8
  %110 = load i64, i64* %RDI.i1315
  %111 = load i64, i64* %PC.i1314
  %112 = add i64 %111, 4
  store i64 %112, i64* %PC.i1314
  %113 = inttoptr i64 %109 to i64*
  store i64 %110, i64* %113
  store %struct.Memory* %loadMem_402393, %struct.Memory** %MEMORY
  %loadMem_402397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 33
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %116 to i64*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 9
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %RSI.i1312 = bitcast %union.anon* %119 to i64*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 15
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %RBP.i1313 = bitcast %union.anon* %122 to i64*
  %123 = load i64, i64* %RBP.i1313
  %124 = sub i64 %123, 16
  %125 = load i64, i64* %RSI.i1312
  %126 = load i64, i64* %PC.i1311
  %127 = add i64 %126, 4
  store i64 %127, i64* %PC.i1311
  %128 = inttoptr i64 %124 to i64*
  store i64 %125, i64* %128
  store %struct.Memory* %loadMem_402397, %struct.Memory** %MEMORY
  %loadMem_40239b = load %struct.Memory*, %struct.Memory** %MEMORY
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 33
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %131 to i64*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 7
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %RDX.i1309 = bitcast %union.anon* %134 to i64*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 15
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %RBP.i1310 = bitcast %union.anon* %137 to i64*
  %138 = load i64, i64* %RBP.i1310
  %139 = sub i64 %138, 24
  %140 = load i64, i64* %RDX.i1309
  %141 = load i64, i64* %PC.i1308
  %142 = add i64 %141, 4
  store i64 %142, i64* %PC.i1308
  %143 = inttoptr i64 %139 to i64*
  store i64 %140, i64* %143
  store %struct.Memory* %loadMem_40239b, %struct.Memory** %MEMORY
  %loadMem_40239f = load %struct.Memory*, %struct.Memory** %MEMORY
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 33
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %146 to i64*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 5
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %ECX.i1306 = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 15
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %RBP.i1307 = bitcast %union.anon* %152 to i64*
  %153 = load i64, i64* %RBP.i1307
  %154 = sub i64 %153, 28
  %155 = load i32, i32* %ECX.i1306
  %156 = zext i32 %155 to i64
  %157 = load i64, i64* %PC.i1305
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC.i1305
  %159 = inttoptr i64 %154 to i32*
  store i32 %155, i32* %159
  store %struct.Memory* %loadMem_40239f, %struct.Memory** %MEMORY
  %loadMem_4023a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %161 = getelementptr inbounds %struct.GPR, %struct.GPR* %160, i32 0, i32 33
  %162 = getelementptr inbounds %struct.Reg, %struct.Reg* %161, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %162 to i64*
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %164 = getelementptr inbounds %struct.GPR, %struct.GPR* %163, i32 0, i32 17
  %165 = getelementptr inbounds %struct.Reg, %struct.Reg* %164, i32 0, i32 0
  %R8D.i1303 = bitcast %union.anon* %165 to i32*
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %167 = getelementptr inbounds %struct.GPR, %struct.GPR* %166, i32 0, i32 15
  %168 = getelementptr inbounds %struct.Reg, %struct.Reg* %167, i32 0, i32 0
  %RBP.i1304 = bitcast %union.anon* %168 to i64*
  %169 = load i64, i64* %RBP.i1304
  %170 = sub i64 %169, 32
  %171 = load i32, i32* %R8D.i1303
  %172 = zext i32 %171 to i64
  %173 = load i64, i64* %PC.i1302
  %174 = add i64 %173, 4
  store i64 %174, i64* %PC.i1302
  %175 = inttoptr i64 %170 to i32*
  store i32 %171, i32* %175
  store %struct.Memory* %loadMem_4023a2, %struct.Memory** %MEMORY
  %loadMem_4023a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %177 = getelementptr inbounds %struct.GPR, %struct.GPR* %176, i32 0, i32 33
  %178 = getelementptr inbounds %struct.Reg, %struct.Reg* %177, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %178 to i64*
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %180 = getelementptr inbounds %struct.GPR, %struct.GPR* %179, i32 0, i32 19
  %181 = getelementptr inbounds %struct.Reg, %struct.Reg* %180, i32 0, i32 0
  %R9D.i1300 = bitcast %union.anon* %181 to i32*
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %183 = getelementptr inbounds %struct.GPR, %struct.GPR* %182, i32 0, i32 15
  %184 = getelementptr inbounds %struct.Reg, %struct.Reg* %183, i32 0, i32 0
  %RBP.i1301 = bitcast %union.anon* %184 to i64*
  %185 = load i64, i64* %RBP.i1301
  %186 = sub i64 %185, 36
  %187 = load i32, i32* %R9D.i1300
  %188 = zext i32 %187 to i64
  %189 = load i64, i64* %PC.i1299
  %190 = add i64 %189, 4
  store i64 %190, i64* %PC.i1299
  %191 = inttoptr i64 %186 to i32*
  store i32 %187, i32* %191
  store %struct.Memory* %loadMem_4023a6, %struct.Memory** %MEMORY
  %loadMem_4023aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 33
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 21
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %197 to i32*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 15
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RBP.i1298 = bitcast %union.anon* %200 to i64*
  %201 = load i64, i64* %RBP.i1298
  %202 = sub i64 %201, 40
  %203 = load i32, i32* %R10D.i
  %204 = zext i32 %203 to i64
  %205 = load i64, i64* %PC.i1297
  %206 = add i64 %205, 4
  store i64 %206, i64* %PC.i1297
  %207 = inttoptr i64 %202 to i32*
  store i32 %203, i32* %207
  store %struct.Memory* %loadMem_4023aa, %struct.Memory** %MEMORY
  %loadMem_4023ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %209 = getelementptr inbounds %struct.GPR, %struct.GPR* %208, i32 0, i32 33
  %210 = getelementptr inbounds %struct.Reg, %struct.Reg* %209, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %210 to i64*
  %211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %212 = getelementptr inbounds %struct.GPR, %struct.GPR* %211, i32 0, i32 1
  %213 = getelementptr inbounds %struct.Reg, %struct.Reg* %212, i32 0, i32 0
  %RAX.i1295 = bitcast %union.anon* %213 to i64*
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %215 = getelementptr inbounds %struct.GPR, %struct.GPR* %214, i32 0, i32 15
  %216 = getelementptr inbounds %struct.Reg, %struct.Reg* %215, i32 0, i32 0
  %RBP.i1296 = bitcast %union.anon* %216 to i64*
  %217 = load i64, i64* %RBP.i1296
  %218 = sub i64 %217, 48
  %219 = load i64, i64* %RAX.i1295
  %220 = load i64, i64* %PC.i1294
  %221 = add i64 %220, 4
  store i64 %221, i64* %PC.i1294
  %222 = inttoptr i64 %218 to i64*
  store i64 %219, i64* %222
  store %struct.Memory* %loadMem_4023ae, %struct.Memory** %MEMORY
  %loadMem_4023b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %224 = getelementptr inbounds %struct.GPR, %struct.GPR* %223, i32 0, i32 33
  %225 = getelementptr inbounds %struct.Reg, %struct.Reg* %224, i32 0, i32 0
  %PC.i1292 = bitcast %union.anon* %225 to i64*
  %226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %227 = getelementptr inbounds %struct.GPR, %struct.GPR* %226, i32 0, i32 15
  %228 = getelementptr inbounds %struct.Reg, %struct.Reg* %227, i32 0, i32 0
  %RBP.i1293 = bitcast %union.anon* %228 to i64*
  %229 = load i64, i64* %RBP.i1293
  %230 = sub i64 %229, 80
  %231 = load i64, i64* %PC.i1292
  %232 = add i64 %231, 7
  store i64 %232, i64* %PC.i1292
  %233 = inttoptr i64 %230 to i32*
  store i32 0, i32* %233
  store %struct.Memory* %loadMem_4023b2, %struct.Memory** %MEMORY
  %loadMem_4023b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 33
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 5
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RCX.i1290 = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %241 = getelementptr inbounds %struct.GPR, %struct.GPR* %240, i32 0, i32 15
  %242 = getelementptr inbounds %struct.Reg, %struct.Reg* %241, i32 0, i32 0
  %RBP.i1291 = bitcast %union.anon* %242 to i64*
  %243 = load i64, i64* %RBP.i1291
  %244 = sub i64 %243, 32
  %245 = load i64, i64* %PC.i1289
  %246 = add i64 %245, 3
  store i64 %246, i64* %PC.i1289
  %247 = inttoptr i64 %244 to i32*
  %248 = load i32, i32* %247
  %249 = zext i32 %248 to i64
  store i64 %249, i64* %RCX.i1290, align 8
  store %struct.Memory* %loadMem_4023b9, %struct.Memory** %MEMORY
  %loadMem_4023bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %251 = getelementptr inbounds %struct.GPR, %struct.GPR* %250, i32 0, i32 33
  %252 = getelementptr inbounds %struct.Reg, %struct.Reg* %251, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %252 to i64*
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 1
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %RAX.i1287 = bitcast %union.anon* %255 to i64*
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %257 = getelementptr inbounds %struct.GPR, %struct.GPR* %256, i32 0, i32 15
  %258 = getelementptr inbounds %struct.Reg, %struct.Reg* %257, i32 0, i32 0
  %RBP.i1288 = bitcast %union.anon* %258 to i64*
  %259 = load i64, i64* %RBP.i1288
  %260 = sub i64 %259, 80
  %261 = load i64, i64* %PC.i1286
  %262 = add i64 %261, 4
  store i64 %262, i64* %PC.i1286
  %263 = inttoptr i64 %260 to i32*
  %264 = load i32, i32* %263
  %265 = sext i32 %264 to i64
  store i64 %265, i64* %RAX.i1287, align 8
  store %struct.Memory* %loadMem_4023bc, %struct.Memory** %MEMORY
  %loadMem_4023c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 33
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %268 to i64*
  %269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %270 = getelementptr inbounds %struct.GPR, %struct.GPR* %269, i32 0, i32 5
  %271 = getelementptr inbounds %struct.Reg, %struct.Reg* %270, i32 0, i32 0
  %ECX.i1283 = bitcast %union.anon* %271 to i32*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %273 = getelementptr inbounds %struct.GPR, %struct.GPR* %272, i32 0, i32 1
  %274 = getelementptr inbounds %struct.Reg, %struct.Reg* %273, i32 0, i32 0
  %RAX.i1284 = bitcast %union.anon* %274 to i64*
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %276 = getelementptr inbounds %struct.GPR, %struct.GPR* %275, i32 0, i32 15
  %277 = getelementptr inbounds %struct.Reg, %struct.Reg* %276, i32 0, i32 0
  %RBP.i1285 = bitcast %union.anon* %277 to i64*
  %278 = load i64, i64* %RBP.i1285
  %279 = load i64, i64* %RAX.i1284
  %280 = mul i64 %279, 4
  %281 = add i64 %278, -496
  %282 = add i64 %281, %280
  %283 = load i32, i32* %ECX.i1283
  %284 = zext i32 %283 to i64
  %285 = load i64, i64* %PC.i1282
  %286 = add i64 %285, 7
  store i64 %286, i64* %PC.i1282
  %287 = inttoptr i64 %282 to i32*
  store i32 %283, i32* %287
  store %struct.Memory* %loadMem_4023c0, %struct.Memory** %MEMORY
  %loadMem_4023c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %289 = getelementptr inbounds %struct.GPR, %struct.GPR* %288, i32 0, i32 33
  %290 = getelementptr inbounds %struct.Reg, %struct.Reg* %289, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %290 to i64*
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 5
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %RCX.i1280 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 15
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %RBP.i1281 = bitcast %union.anon* %296 to i64*
  %297 = load i64, i64* %RBP.i1281
  %298 = sub i64 %297, 36
  %299 = load i64, i64* %PC.i1279
  %300 = add i64 %299, 3
  store i64 %300, i64* %PC.i1279
  %301 = inttoptr i64 %298 to i32*
  %302 = load i32, i32* %301
  %303 = zext i32 %302 to i64
  store i64 %303, i64* %RCX.i1280, align 8
  store %struct.Memory* %loadMem_4023c7, %struct.Memory** %MEMORY
  %loadMem_4023ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %305 = getelementptr inbounds %struct.GPR, %struct.GPR* %304, i32 0, i32 33
  %306 = getelementptr inbounds %struct.Reg, %struct.Reg* %305, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %306 to i64*
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %308 = getelementptr inbounds %struct.GPR, %struct.GPR* %307, i32 0, i32 1
  %309 = getelementptr inbounds %struct.Reg, %struct.Reg* %308, i32 0, i32 0
  %RAX.i1277 = bitcast %union.anon* %309 to i64*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %311 = getelementptr inbounds %struct.GPR, %struct.GPR* %310, i32 0, i32 15
  %312 = getelementptr inbounds %struct.Reg, %struct.Reg* %311, i32 0, i32 0
  %RBP.i1278 = bitcast %union.anon* %312 to i64*
  %313 = load i64, i64* %RBP.i1278
  %314 = sub i64 %313, 80
  %315 = load i64, i64* %PC.i1276
  %316 = add i64 %315, 4
  store i64 %316, i64* %PC.i1276
  %317 = inttoptr i64 %314 to i32*
  %318 = load i32, i32* %317
  %319 = sext i32 %318 to i64
  store i64 %319, i64* %RAX.i1277, align 8
  store %struct.Memory* %loadMem_4023ca, %struct.Memory** %MEMORY
  %loadMem_4023ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 33
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %322 to i64*
  %323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %324 = getelementptr inbounds %struct.GPR, %struct.GPR* %323, i32 0, i32 5
  %325 = getelementptr inbounds %struct.Reg, %struct.Reg* %324, i32 0, i32 0
  %ECX.i1273 = bitcast %union.anon* %325 to i32*
  %326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %327 = getelementptr inbounds %struct.GPR, %struct.GPR* %326, i32 0, i32 1
  %328 = getelementptr inbounds %struct.Reg, %struct.Reg* %327, i32 0, i32 0
  %RAX.i1274 = bitcast %union.anon* %328 to i64*
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %330 = getelementptr inbounds %struct.GPR, %struct.GPR* %329, i32 0, i32 15
  %331 = getelementptr inbounds %struct.Reg, %struct.Reg* %330, i32 0, i32 0
  %RBP.i1275 = bitcast %union.anon* %331 to i64*
  %332 = load i64, i64* %RBP.i1275
  %333 = load i64, i64* %RAX.i1274
  %334 = mul i64 %333, 4
  %335 = add i64 %332, -896
  %336 = add i64 %335, %334
  %337 = load i32, i32* %ECX.i1273
  %338 = zext i32 %337 to i64
  %339 = load i64, i64* %PC.i1272
  %340 = add i64 %339, 7
  store i64 %340, i64* %PC.i1272
  %341 = inttoptr i64 %336 to i32*
  store i32 %337, i32* %341
  store %struct.Memory* %loadMem_4023ce, %struct.Memory** %MEMORY
  %loadMem_4023d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %343 = getelementptr inbounds %struct.GPR, %struct.GPR* %342, i32 0, i32 33
  %344 = getelementptr inbounds %struct.Reg, %struct.Reg* %343, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %344 to i64*
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %346 = getelementptr inbounds %struct.GPR, %struct.GPR* %345, i32 0, i32 5
  %347 = getelementptr inbounds %struct.Reg, %struct.Reg* %346, i32 0, i32 0
  %RCX.i1270 = bitcast %union.anon* %347 to i64*
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 15
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %RBP.i1271 = bitcast %union.anon* %350 to i64*
  %351 = load i64, i64* %RBP.i1271
  %352 = sub i64 %351, 40
  %353 = load i64, i64* %PC.i1269
  %354 = add i64 %353, 3
  store i64 %354, i64* %PC.i1269
  %355 = inttoptr i64 %352 to i32*
  %356 = load i32, i32* %355
  %357 = zext i32 %356 to i64
  store i64 %357, i64* %RCX.i1270, align 8
  store %struct.Memory* %loadMem_4023d5, %struct.Memory** %MEMORY
  %loadMem_4023d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %359 = getelementptr inbounds %struct.GPR, %struct.GPR* %358, i32 0, i32 33
  %360 = getelementptr inbounds %struct.Reg, %struct.Reg* %359, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %360 to i64*
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 1
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %RAX.i1267 = bitcast %union.anon* %363 to i64*
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 15
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %RBP.i1268 = bitcast %union.anon* %366 to i64*
  %367 = load i64, i64* %RBP.i1268
  %368 = sub i64 %367, 80
  %369 = load i64, i64* %PC.i1266
  %370 = add i64 %369, 4
  store i64 %370, i64* %PC.i1266
  %371 = inttoptr i64 %368 to i32*
  %372 = load i32, i32* %371
  %373 = sext i32 %372 to i64
  store i64 %373, i64* %RAX.i1267, align 8
  store %struct.Memory* %loadMem_4023d8, %struct.Memory** %MEMORY
  %loadMem_4023dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %375 = getelementptr inbounds %struct.GPR, %struct.GPR* %374, i32 0, i32 33
  %376 = getelementptr inbounds %struct.Reg, %struct.Reg* %375, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %376 to i64*
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 5
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %ECX.i1263 = bitcast %union.anon* %379 to i32*
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 1
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %RAX.i1264 = bitcast %union.anon* %382 to i64*
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 15
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %RBP.i1265 = bitcast %union.anon* %385 to i64*
  %386 = load i64, i64* %RBP.i1265
  %387 = load i64, i64* %RAX.i1264
  %388 = mul i64 %387, 4
  %389 = add i64 %386, -1296
  %390 = add i64 %389, %388
  %391 = load i32, i32* %ECX.i1263
  %392 = zext i32 %391 to i64
  %393 = load i64, i64* %PC.i1262
  %394 = add i64 %393, 7
  store i64 %394, i64* %PC.i1262
  %395 = inttoptr i64 %390 to i32*
  store i32 %391, i32* %395
  store %struct.Memory* %loadMem_4023dc, %struct.Memory** %MEMORY
  %loadMem_4023e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 33
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %398 to i64*
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 5
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %RCX.i1260 = bitcast %union.anon* %401 to i64*
  %402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %403 = getelementptr inbounds %struct.GPR, %struct.GPR* %402, i32 0, i32 15
  %404 = getelementptr inbounds %struct.Reg, %struct.Reg* %403, i32 0, i32 0
  %RBP.i1261 = bitcast %union.anon* %404 to i64*
  %405 = load i64, i64* %RBP.i1261
  %406 = sub i64 %405, 80
  %407 = load i64, i64* %PC.i1259
  %408 = add i64 %407, 3
  store i64 %408, i64* %PC.i1259
  %409 = inttoptr i64 %406 to i32*
  %410 = load i32, i32* %409
  %411 = zext i32 %410 to i64
  store i64 %411, i64* %RCX.i1260, align 8
  store %struct.Memory* %loadMem_4023e3, %struct.Memory** %MEMORY
  %loadMem_4023e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 33
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %414 to i64*
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 5
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %RCX.i1258 = bitcast %union.anon* %417 to i64*
  %418 = load i64, i64* %RCX.i1258
  %419 = load i64, i64* %PC.i1257
  %420 = add i64 %419, 3
  store i64 %420, i64* %PC.i1257
  %421 = trunc i64 %418 to i32
  %422 = add i32 1, %421
  %423 = zext i32 %422 to i64
  store i64 %423, i64* %RCX.i1258, align 8
  %424 = icmp ult i32 %422, %421
  %425 = icmp ult i32 %422, 1
  %426 = or i1 %424, %425
  %427 = zext i1 %426 to i8
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %427, i8* %428, align 1
  %429 = and i32 %422, 255
  %430 = call i32 @llvm.ctpop.i32(i32 %429)
  %431 = trunc i32 %430 to i8
  %432 = and i8 %431, 1
  %433 = xor i8 %432, 1
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %433, i8* %434, align 1
  %435 = xor i64 1, %418
  %436 = trunc i64 %435 to i32
  %437 = xor i32 %436, %422
  %438 = lshr i32 %437, 4
  %439 = trunc i32 %438 to i8
  %440 = and i8 %439, 1
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %440, i8* %441, align 1
  %442 = icmp eq i32 %422, 0
  %443 = zext i1 %442 to i8
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %443, i8* %444, align 1
  %445 = lshr i32 %422, 31
  %446 = trunc i32 %445 to i8
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %446, i8* %447, align 1
  %448 = lshr i32 %421, 31
  %449 = xor i32 %445, %448
  %450 = add i32 %449, %445
  %451 = icmp eq i32 %450, 2
  %452 = zext i1 %451 to i8
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %452, i8* %453, align 1
  store %struct.Memory* %loadMem_4023e6, %struct.Memory** %MEMORY
  %loadMem_4023e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %455 = getelementptr inbounds %struct.GPR, %struct.GPR* %454, i32 0, i32 33
  %456 = getelementptr inbounds %struct.Reg, %struct.Reg* %455, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %456 to i64*
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %458 = getelementptr inbounds %struct.GPR, %struct.GPR* %457, i32 0, i32 5
  %459 = getelementptr inbounds %struct.Reg, %struct.Reg* %458, i32 0, i32 0
  %ECX.i1255 = bitcast %union.anon* %459 to i32*
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 15
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %RBP.i1256 = bitcast %union.anon* %462 to i64*
  %463 = load i64, i64* %RBP.i1256
  %464 = sub i64 %463, 80
  %465 = load i32, i32* %ECX.i1255
  %466 = zext i32 %465 to i64
  %467 = load i64, i64* %PC.i1254
  %468 = add i64 %467, 3
  store i64 %468, i64* %PC.i1254
  %469 = inttoptr i64 %464 to i32*
  store i32 %465, i32* %469
  store %struct.Memory* %loadMem_4023e9, %struct.Memory** %MEMORY
  br label %block_.L_4023ec

block_.L_4023ec:                                  ; preds = %block_.L_402ae9, %block_4026d7, %block_.L_402493, %entry
  %loadMem_4023ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %471 = getelementptr inbounds %struct.GPR, %struct.GPR* %470, i32 0, i32 33
  %472 = getelementptr inbounds %struct.Reg, %struct.Reg* %471, i32 0, i32 0
  %PC.i1252 = bitcast %union.anon* %472 to i64*
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 15
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %475 to i64*
  %476 = load i64, i64* %RBP.i1253
  %477 = sub i64 %476, 80
  %478 = load i64, i64* %PC.i1252
  %479 = add i64 %478, 4
  store i64 %479, i64* %PC.i1252
  %480 = inttoptr i64 %477 to i32*
  %481 = load i32, i32* %480
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %482, align 1
  %483 = and i32 %481, 255
  %484 = call i32 @llvm.ctpop.i32(i32 %483)
  %485 = trunc i32 %484 to i8
  %486 = and i8 %485, 1
  %487 = xor i8 %486, 1
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %487, i8* %488, align 1
  %489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %489, align 1
  %490 = icmp eq i32 %481, 0
  %491 = zext i1 %490 to i8
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %491, i8* %492, align 1
  %493 = lshr i32 %481, 31
  %494 = trunc i32 %493 to i8
  %495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %494, i8* %495, align 1
  %496 = lshr i32 %481, 31
  %497 = xor i32 %493, %496
  %498 = add i32 %497, %496
  %499 = icmp eq i32 %498, 2
  %500 = zext i1 %499 to i8
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %500, i8* %501, align 1
  store %struct.Memory* %loadMem_4023ec, %struct.Memory** %MEMORY
  %loadMem_4023f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 33
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %504 to i64*
  %505 = load i64, i64* %PC.i1251
  %506 = add i64 %505, 1970
  %507 = load i64, i64* %PC.i1251
  %508 = add i64 %507, 6
  %509 = load i64, i64* %PC.i1251
  %510 = add i64 %509, 6
  store i64 %510, i64* %PC.i1251
  %511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %512 = load i8, i8* %511, align 1
  %513 = icmp ne i8 %512, 0
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %515 = load i8, i8* %514, align 1
  %516 = icmp ne i8 %515, 0
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %518 = load i8, i8* %517, align 1
  %519 = icmp ne i8 %518, 0
  %520 = xor i1 %516, %519
  %521 = or i1 %513, %520
  %522 = zext i1 %521 to i8
  store i8 %522, i8* %BRANCH_TAKEN, align 1
  %523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %524 = select i1 %521, i64 %506, i64 %508
  store i64 %524, i64* %523, align 8
  store %struct.Memory* %loadMem_4023f0, %struct.Memory** %MEMORY
  %loadBr_4023f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4023f0 = icmp eq i8 %loadBr_4023f0, 1
  br i1 %cmpBr_4023f0, label %block_.L_402ba2, label %block_4023f6

block_4023f6:                                     ; preds = %block_.L_4023ec
  %loadMem_4023f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %526 = getelementptr inbounds %struct.GPR, %struct.GPR* %525, i32 0, i32 33
  %527 = getelementptr inbounds %struct.Reg, %struct.Reg* %526, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %527 to i64*
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %529 = getelementptr inbounds %struct.GPR, %struct.GPR* %528, i32 0, i32 15
  %530 = getelementptr inbounds %struct.Reg, %struct.Reg* %529, i32 0, i32 0
  %RBP.i1250 = bitcast %union.anon* %530 to i64*
  %531 = load i64, i64* %RBP.i1250
  %532 = sub i64 %531, 80
  %533 = load i64, i64* %PC.i1249
  %534 = add i64 %533, 4
  store i64 %534, i64* %PC.i1249
  %535 = inttoptr i64 %532 to i32*
  %536 = load i32, i32* %535
  %537 = sub i32 %536, 100
  %538 = icmp ult i32 %536, 100
  %539 = zext i1 %538 to i8
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %539, i8* %540, align 1
  %541 = and i32 %537, 255
  %542 = call i32 @llvm.ctpop.i32(i32 %541)
  %543 = trunc i32 %542 to i8
  %544 = and i8 %543, 1
  %545 = xor i8 %544, 1
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %545, i8* %546, align 1
  %547 = xor i32 %536, 100
  %548 = xor i32 %547, %537
  %549 = lshr i32 %548, 4
  %550 = trunc i32 %549 to i8
  %551 = and i8 %550, 1
  %552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %551, i8* %552, align 1
  %553 = icmp eq i32 %537, 0
  %554 = zext i1 %553 to i8
  %555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %554, i8* %555, align 1
  %556 = lshr i32 %537, 31
  %557 = trunc i32 %556 to i8
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %557, i8* %558, align 1
  %559 = lshr i32 %536, 31
  %560 = xor i32 %556, %559
  %561 = add i32 %560, %559
  %562 = icmp eq i32 %561, 2
  %563 = zext i1 %562 to i8
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %563, i8* %564, align 1
  store %struct.Memory* %loadMem_4023f6, %struct.Memory** %MEMORY
  %loadMem_4023fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %566 = getelementptr inbounds %struct.GPR, %struct.GPR* %565, i32 0, i32 33
  %567 = getelementptr inbounds %struct.Reg, %struct.Reg* %566, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %567 to i64*
  %568 = load i64, i64* %PC.i1248
  %569 = add i64 %568, 16
  %570 = load i64, i64* %PC.i1248
  %571 = add i64 %570, 6
  %572 = load i64, i64* %PC.i1248
  %573 = add i64 %572, 6
  store i64 %573, i64* %PC.i1248
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %575 = load i8, i8* %574, align 1
  %576 = icmp ne i8 %575, 0
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %578 = load i8, i8* %577, align 1
  %579 = icmp ne i8 %578, 0
  %580 = xor i1 %576, %579
  %581 = zext i1 %580 to i8
  store i8 %581, i8* %BRANCH_TAKEN, align 1
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %583 = select i1 %580, i64 %569, i64 %571
  store i64 %583, i64* %582, align 8
  store %struct.Memory* %loadMem_4023fa, %struct.Memory** %MEMORY
  %loadBr_4023fa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4023fa = icmp eq i8 %loadBr_4023fa, 1
  br i1 %cmpBr_4023fa, label %block_.L_40240a, label %block_402400

block_402400:                                     ; preds = %block_4023f6
  %loadMem_402400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 33
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %586 to i64*
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 11
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %RDI.i1247 = bitcast %union.anon* %589 to i64*
  %590 = load i64, i64* %PC.i1246
  %591 = add i64 %590, 5
  store i64 %591, i64* %PC.i1246
  store i64 1001, i64* %RDI.i1247, align 8
  store %struct.Memory* %loadMem_402400, %struct.Memory** %MEMORY
  %loadMem1_402405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %593 = getelementptr inbounds %struct.GPR, %struct.GPR* %592, i32 0, i32 33
  %594 = getelementptr inbounds %struct.Reg, %struct.Reg* %593, i32 0, i32 0
  %PC.i1245 = bitcast %union.anon* %594 to i64*
  %595 = load i64, i64* %PC.i1245
  %596 = add i64 %595, 11035
  %597 = load i64, i64* %PC.i1245
  %598 = add i64 %597, 5
  %599 = load i64, i64* %PC.i1245
  %600 = add i64 %599, 5
  store i64 %600, i64* %PC.i1245
  %601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %602 = load i64, i64* %601, align 8
  %603 = add i64 %602, -8
  %604 = inttoptr i64 %603 to i64*
  store i64 %598, i64* %604
  store i64 %603, i64* %601, align 8
  %605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %596, i64* %605, align 8
  store %struct.Memory* %loadMem1_402405, %struct.Memory** %MEMORY
  %loadMem2_402405 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402405 = load i64, i64* %3
  %call2_402405 = call %struct.Memory* @sub_404f20.BZ2_bz__AssertH__fail(%struct.State* %0, i64 %loadPC_402405, %struct.Memory* %loadMem2_402405)
  store %struct.Memory* %call2_402405, %struct.Memory** %MEMORY
  br label %block_.L_40240a

block_.L_40240a:                                  ; preds = %block_402400, %block_4023f6
  %loadMem_40240a = load %struct.Memory*, %struct.Memory** %MEMORY
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %607 = getelementptr inbounds %struct.GPR, %struct.GPR* %606, i32 0, i32 33
  %608 = getelementptr inbounds %struct.Reg, %struct.Reg* %607, i32 0, i32 0
  %PC.i1242 = bitcast %union.anon* %608 to i64*
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %610 = getelementptr inbounds %struct.GPR, %struct.GPR* %609, i32 0, i32 1
  %611 = getelementptr inbounds %struct.Reg, %struct.Reg* %610, i32 0, i32 0
  %RAX.i1243 = bitcast %union.anon* %611 to i64*
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %613 = getelementptr inbounds %struct.GPR, %struct.GPR* %612, i32 0, i32 15
  %614 = getelementptr inbounds %struct.Reg, %struct.Reg* %613, i32 0, i32 0
  %RBP.i1244 = bitcast %union.anon* %614 to i64*
  %615 = load i64, i64* %RBP.i1244
  %616 = sub i64 %615, 80
  %617 = load i64, i64* %PC.i1242
  %618 = add i64 %617, 3
  store i64 %618, i64* %PC.i1242
  %619 = inttoptr i64 %616 to i32*
  %620 = load i32, i32* %619
  %621 = zext i32 %620 to i64
  store i64 %621, i64* %RAX.i1243, align 8
  store %struct.Memory* %loadMem_40240a, %struct.Memory** %MEMORY
  %loadMem_40240d = load %struct.Memory*, %struct.Memory** %MEMORY
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 33
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %624 to i64*
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %626 = getelementptr inbounds %struct.GPR, %struct.GPR* %625, i32 0, i32 1
  %627 = getelementptr inbounds %struct.Reg, %struct.Reg* %626, i32 0, i32 0
  %RAX.i1241 = bitcast %union.anon* %627 to i64*
  %628 = load i64, i64* %RAX.i1241
  %629 = load i64, i64* %PC.i1240
  %630 = add i64 %629, 3
  store i64 %630, i64* %PC.i1240
  %631 = trunc i64 %628 to i32
  %632 = add i32 -1, %631
  %633 = zext i32 %632 to i64
  store i64 %633, i64* %RAX.i1241, align 8
  %634 = icmp ult i32 %632, %631
  %635 = icmp ult i32 %632, -1
  %636 = or i1 %634, %635
  %637 = zext i1 %636 to i8
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %637, i8* %638, align 1
  %639 = and i32 %632, 255
  %640 = call i32 @llvm.ctpop.i32(i32 %639)
  %641 = trunc i32 %640 to i8
  %642 = and i8 %641, 1
  %643 = xor i8 %642, 1
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %643, i8* %644, align 1
  %645 = xor i64 -1, %628
  %646 = trunc i64 %645 to i32
  %647 = xor i32 %646, %632
  %648 = lshr i32 %647, 4
  %649 = trunc i32 %648 to i8
  %650 = and i8 %649, 1
  %651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %650, i8* %651, align 1
  %652 = icmp eq i32 %632, 0
  %653 = zext i1 %652 to i8
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %653, i8* %654, align 1
  %655 = lshr i32 %632, 31
  %656 = trunc i32 %655 to i8
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %656, i8* %657, align 1
  %658 = lshr i32 %631, 31
  %659 = xor i32 %655, %658
  %660 = xor i32 %655, 1
  %661 = add i32 %659, %660
  %662 = icmp eq i32 %661, 2
  %663 = zext i1 %662 to i8
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %663, i8* %664, align 1
  store %struct.Memory* %loadMem_40240d, %struct.Memory** %MEMORY
  %loadMem_402410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %666 = getelementptr inbounds %struct.GPR, %struct.GPR* %665, i32 0, i32 33
  %667 = getelementptr inbounds %struct.Reg, %struct.Reg* %666, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %667 to i64*
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 1
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %EAX.i1238 = bitcast %union.anon* %670 to i32*
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %672 = getelementptr inbounds %struct.GPR, %struct.GPR* %671, i32 0, i32 15
  %673 = getelementptr inbounds %struct.Reg, %struct.Reg* %672, i32 0, i32 0
  %RBP.i1239 = bitcast %union.anon* %673 to i64*
  %674 = load i64, i64* %RBP.i1239
  %675 = sub i64 %674, 80
  %676 = load i32, i32* %EAX.i1238
  %677 = zext i32 %676 to i64
  %678 = load i64, i64* %PC.i1237
  %679 = add i64 %678, 3
  store i64 %679, i64* %PC.i1237
  %680 = inttoptr i64 %675 to i32*
  store i32 %676, i32* %680
  store %struct.Memory* %loadMem_402410, %struct.Memory** %MEMORY
  %loadMem_402413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 33
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %683 to i64*
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 5
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %RCX.i1235 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 15
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RBP.i1236 = bitcast %union.anon* %689 to i64*
  %690 = load i64, i64* %RBP.i1236
  %691 = sub i64 %690, 80
  %692 = load i64, i64* %PC.i1234
  %693 = add i64 %692, 4
  store i64 %693, i64* %PC.i1234
  %694 = inttoptr i64 %691 to i32*
  %695 = load i32, i32* %694
  %696 = sext i32 %695 to i64
  store i64 %696, i64* %RCX.i1235, align 8
  store %struct.Memory* %loadMem_402413, %struct.Memory** %MEMORY
  %loadMem_402417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %698 = getelementptr inbounds %struct.GPR, %struct.GPR* %697, i32 0, i32 33
  %699 = getelementptr inbounds %struct.Reg, %struct.Reg* %698, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %699 to i64*
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 1
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %RAX.i1231 = bitcast %union.anon* %702 to i64*
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %704 = getelementptr inbounds %struct.GPR, %struct.GPR* %703, i32 0, i32 5
  %705 = getelementptr inbounds %struct.Reg, %struct.Reg* %704, i32 0, i32 0
  %RCX.i1232 = bitcast %union.anon* %705 to i64*
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %707 = getelementptr inbounds %struct.GPR, %struct.GPR* %706, i32 0, i32 15
  %708 = getelementptr inbounds %struct.Reg, %struct.Reg* %707, i32 0, i32 0
  %RBP.i1233 = bitcast %union.anon* %708 to i64*
  %709 = load i64, i64* %RBP.i1233
  %710 = load i64, i64* %RCX.i1232
  %711 = mul i64 %710, 4
  %712 = add i64 %709, -496
  %713 = add i64 %712, %711
  %714 = load i64, i64* %PC.i1230
  %715 = add i64 %714, 7
  store i64 %715, i64* %PC.i1230
  %716 = inttoptr i64 %713 to i32*
  %717 = load i32, i32* %716
  %718 = zext i32 %717 to i64
  store i64 %718, i64* %RAX.i1231, align 8
  store %struct.Memory* %loadMem_402417, %struct.Memory** %MEMORY
  %loadMem_40241e = load %struct.Memory*, %struct.Memory** %MEMORY
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 33
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %721 to i64*
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 1
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %EAX.i1228 = bitcast %union.anon* %724 to i32*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 15
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %RBP.i1229 = bitcast %union.anon* %727 to i64*
  %728 = load i64, i64* %RBP.i1229
  %729 = sub i64 %728, 84
  %730 = load i32, i32* %EAX.i1228
  %731 = zext i32 %730 to i64
  %732 = load i64, i64* %PC.i1227
  %733 = add i64 %732, 3
  store i64 %733, i64* %PC.i1227
  %734 = inttoptr i64 %729 to i32*
  store i32 %730, i32* %734
  store %struct.Memory* %loadMem_40241e, %struct.Memory** %MEMORY
  %loadMem_402421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %736 = getelementptr inbounds %struct.GPR, %struct.GPR* %735, i32 0, i32 33
  %737 = getelementptr inbounds %struct.Reg, %struct.Reg* %736, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %737 to i64*
  %738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %739 = getelementptr inbounds %struct.GPR, %struct.GPR* %738, i32 0, i32 5
  %740 = getelementptr inbounds %struct.Reg, %struct.Reg* %739, i32 0, i32 0
  %RCX.i1225 = bitcast %union.anon* %740 to i64*
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %742 = getelementptr inbounds %struct.GPR, %struct.GPR* %741, i32 0, i32 15
  %743 = getelementptr inbounds %struct.Reg, %struct.Reg* %742, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %743 to i64*
  %744 = load i64, i64* %RBP.i1226
  %745 = sub i64 %744, 80
  %746 = load i64, i64* %PC.i1224
  %747 = add i64 %746, 4
  store i64 %747, i64* %PC.i1224
  %748 = inttoptr i64 %745 to i32*
  %749 = load i32, i32* %748
  %750 = sext i32 %749 to i64
  store i64 %750, i64* %RCX.i1225, align 8
  store %struct.Memory* %loadMem_402421, %struct.Memory** %MEMORY
  %loadMem_402425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 33
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %PC.i1220 = bitcast %union.anon* %753 to i64*
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %755 = getelementptr inbounds %struct.GPR, %struct.GPR* %754, i32 0, i32 1
  %756 = getelementptr inbounds %struct.Reg, %struct.Reg* %755, i32 0, i32 0
  %RAX.i1221 = bitcast %union.anon* %756 to i64*
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 5
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %RCX.i1222 = bitcast %union.anon* %759 to i64*
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %761 = getelementptr inbounds %struct.GPR, %struct.GPR* %760, i32 0, i32 15
  %762 = getelementptr inbounds %struct.Reg, %struct.Reg* %761, i32 0, i32 0
  %RBP.i1223 = bitcast %union.anon* %762 to i64*
  %763 = load i64, i64* %RBP.i1223
  %764 = load i64, i64* %RCX.i1222
  %765 = mul i64 %764, 4
  %766 = add i64 %763, -896
  %767 = add i64 %766, %765
  %768 = load i64, i64* %PC.i1220
  %769 = add i64 %768, 7
  store i64 %769, i64* %PC.i1220
  %770 = inttoptr i64 %767 to i32*
  %771 = load i32, i32* %770
  %772 = zext i32 %771 to i64
  store i64 %772, i64* %RAX.i1221, align 8
  store %struct.Memory* %loadMem_402425, %struct.Memory** %MEMORY
  %loadMem_40242c = load %struct.Memory*, %struct.Memory** %MEMORY
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 33
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %775 to i64*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 1
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %EAX.i1218 = bitcast %union.anon* %778 to i32*
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 15
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %RBP.i1219 = bitcast %union.anon* %781 to i64*
  %782 = load i64, i64* %RBP.i1219
  %783 = sub i64 %782, 88
  %784 = load i32, i32* %EAX.i1218
  %785 = zext i32 %784 to i64
  %786 = load i64, i64* %PC.i1217
  %787 = add i64 %786, 3
  store i64 %787, i64* %PC.i1217
  %788 = inttoptr i64 %783 to i32*
  store i32 %784, i32* %788
  store %struct.Memory* %loadMem_40242c, %struct.Memory** %MEMORY
  %loadMem_40242f = load %struct.Memory*, %struct.Memory** %MEMORY
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %790 = getelementptr inbounds %struct.GPR, %struct.GPR* %789, i32 0, i32 33
  %791 = getelementptr inbounds %struct.Reg, %struct.Reg* %790, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %791 to i64*
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %793 = getelementptr inbounds %struct.GPR, %struct.GPR* %792, i32 0, i32 5
  %794 = getelementptr inbounds %struct.Reg, %struct.Reg* %793, i32 0, i32 0
  %RCX.i1215 = bitcast %union.anon* %794 to i64*
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %796 = getelementptr inbounds %struct.GPR, %struct.GPR* %795, i32 0, i32 15
  %797 = getelementptr inbounds %struct.Reg, %struct.Reg* %796, i32 0, i32 0
  %RBP.i1216 = bitcast %union.anon* %797 to i64*
  %798 = load i64, i64* %RBP.i1216
  %799 = sub i64 %798, 80
  %800 = load i64, i64* %PC.i1214
  %801 = add i64 %800, 4
  store i64 %801, i64* %PC.i1214
  %802 = inttoptr i64 %799 to i32*
  %803 = load i32, i32* %802
  %804 = sext i32 %803 to i64
  store i64 %804, i64* %RCX.i1215, align 8
  store %struct.Memory* %loadMem_40242f, %struct.Memory** %MEMORY
  %loadMem_402433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %806 = getelementptr inbounds %struct.GPR, %struct.GPR* %805, i32 0, i32 33
  %807 = getelementptr inbounds %struct.Reg, %struct.Reg* %806, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %807 to i64*
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 1
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %RAX.i1211 = bitcast %union.anon* %810 to i64*
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 5
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %RCX.i1212 = bitcast %union.anon* %813 to i64*
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 15
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %RBP.i1213 = bitcast %union.anon* %816 to i64*
  %817 = load i64, i64* %RBP.i1213
  %818 = load i64, i64* %RCX.i1212
  %819 = mul i64 %818, 4
  %820 = add i64 %817, -1296
  %821 = add i64 %820, %819
  %822 = load i64, i64* %PC.i1210
  %823 = add i64 %822, 7
  store i64 %823, i64* %PC.i1210
  %824 = inttoptr i64 %821 to i32*
  %825 = load i32, i32* %824
  %826 = zext i32 %825 to i64
  store i64 %826, i64* %RAX.i1211, align 8
  store %struct.Memory* %loadMem_402433, %struct.Memory** %MEMORY
  %loadMem_40243a = load %struct.Memory*, %struct.Memory** %MEMORY
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 33
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %PC.i1207 = bitcast %union.anon* %829 to i64*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 1
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %EAX.i1208 = bitcast %union.anon* %832 to i32*
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %834 = getelementptr inbounds %struct.GPR, %struct.GPR* %833, i32 0, i32 15
  %835 = getelementptr inbounds %struct.Reg, %struct.Reg* %834, i32 0, i32 0
  %RBP.i1209 = bitcast %union.anon* %835 to i64*
  %836 = load i64, i64* %RBP.i1209
  %837 = sub i64 %836, 92
  %838 = load i32, i32* %EAX.i1208
  %839 = zext i32 %838 to i64
  %840 = load i64, i64* %PC.i1207
  %841 = add i64 %840, 3
  store i64 %841, i64* %PC.i1207
  %842 = inttoptr i64 %837 to i32*
  store i32 %838, i32* %842
  store %struct.Memory* %loadMem_40243a, %struct.Memory** %MEMORY
  %loadMem_40243d = load %struct.Memory*, %struct.Memory** %MEMORY
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %844 = getelementptr inbounds %struct.GPR, %struct.GPR* %843, i32 0, i32 33
  %845 = getelementptr inbounds %struct.Reg, %struct.Reg* %844, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %845 to i64*
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %847 = getelementptr inbounds %struct.GPR, %struct.GPR* %846, i32 0, i32 1
  %848 = getelementptr inbounds %struct.Reg, %struct.Reg* %847, i32 0, i32 0
  %RAX.i1205 = bitcast %union.anon* %848 to i64*
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 15
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %RBP.i1206 = bitcast %union.anon* %851 to i64*
  %852 = load i64, i64* %RBP.i1206
  %853 = sub i64 %852, 88
  %854 = load i64, i64* %PC.i1204
  %855 = add i64 %854, 3
  store i64 %855, i64* %PC.i1204
  %856 = inttoptr i64 %853 to i32*
  %857 = load i32, i32* %856
  %858 = zext i32 %857 to i64
  store i64 %858, i64* %RAX.i1205, align 8
  store %struct.Memory* %loadMem_40243d, %struct.Memory** %MEMORY
  %loadMem_402440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %860 = getelementptr inbounds %struct.GPR, %struct.GPR* %859, i32 0, i32 33
  %861 = getelementptr inbounds %struct.Reg, %struct.Reg* %860, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %861 to i64*
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %863 = getelementptr inbounds %struct.GPR, %struct.GPR* %862, i32 0, i32 1
  %864 = getelementptr inbounds %struct.Reg, %struct.Reg* %863, i32 0, i32 0
  %RAX.i1202 = bitcast %union.anon* %864 to i64*
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 15
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %RAX.i1202
  %869 = load i64, i64* %RBP.i1203
  %870 = sub i64 %869, 84
  %871 = load i64, i64* %PC.i1201
  %872 = add i64 %871, 3
  store i64 %872, i64* %PC.i1201
  %873 = trunc i64 %868 to i32
  %874 = inttoptr i64 %870 to i32*
  %875 = load i32, i32* %874
  %876 = sub i32 %873, %875
  %877 = zext i32 %876 to i64
  store i64 %877, i64* %RAX.i1202, align 8
  %878 = icmp ult i32 %873, %875
  %879 = zext i1 %878 to i8
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %879, i8* %880, align 1
  %881 = and i32 %876, 255
  %882 = call i32 @llvm.ctpop.i32(i32 %881)
  %883 = trunc i32 %882 to i8
  %884 = and i8 %883, 1
  %885 = xor i8 %884, 1
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %885, i8* %886, align 1
  %887 = xor i32 %875, %873
  %888 = xor i32 %887, %876
  %889 = lshr i32 %888, 4
  %890 = trunc i32 %889 to i8
  %891 = and i8 %890, 1
  %892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %891, i8* %892, align 1
  %893 = icmp eq i32 %876, 0
  %894 = zext i1 %893 to i8
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %894, i8* %895, align 1
  %896 = lshr i32 %876, 31
  %897 = trunc i32 %896 to i8
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %897, i8* %898, align 1
  %899 = lshr i32 %873, 31
  %900 = lshr i32 %875, 31
  %901 = xor i32 %900, %899
  %902 = xor i32 %896, %899
  %903 = add i32 %902, %901
  %904 = icmp eq i32 %903, 2
  %905 = zext i1 %904 to i8
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %905, i8* %906, align 1
  store %struct.Memory* %loadMem_402440, %struct.Memory** %MEMORY
  %loadMem_402443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %908 = getelementptr inbounds %struct.GPR, %struct.GPR* %907, i32 0, i32 33
  %909 = getelementptr inbounds %struct.Reg, %struct.Reg* %908, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %909 to i64*
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %911 = getelementptr inbounds %struct.GPR, %struct.GPR* %910, i32 0, i32 1
  %912 = getelementptr inbounds %struct.Reg, %struct.Reg* %911, i32 0, i32 0
  %EAX.i1200 = bitcast %union.anon* %912 to i32*
  %913 = load i32, i32* %EAX.i1200
  %914 = zext i32 %913 to i64
  %915 = load i64, i64* %PC.i1199
  %916 = add i64 %915, 3
  store i64 %916, i64* %PC.i1199
  %917 = sub i32 %913, 20
  %918 = icmp ult i32 %913, 20
  %919 = zext i1 %918 to i8
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %919, i8* %920, align 1
  %921 = and i32 %917, 255
  %922 = call i32 @llvm.ctpop.i32(i32 %921)
  %923 = trunc i32 %922 to i8
  %924 = and i8 %923, 1
  %925 = xor i8 %924, 1
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %925, i8* %926, align 1
  %927 = xor i64 20, %914
  %928 = trunc i64 %927 to i32
  %929 = xor i32 %928, %917
  %930 = lshr i32 %929, 4
  %931 = trunc i32 %930 to i8
  %932 = and i8 %931, 1
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %932, i8* %933, align 1
  %934 = icmp eq i32 %917, 0
  %935 = zext i1 %934 to i8
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %935, i8* %936, align 1
  %937 = lshr i32 %917, 31
  %938 = trunc i32 %937 to i8
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %938, i8* %939, align 1
  %940 = lshr i32 %913, 31
  %941 = xor i32 %937, %940
  %942 = add i32 %941, %940
  %943 = icmp eq i32 %942, 2
  %944 = zext i1 %943 to i8
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %944, i8* %945, align 1
  store %struct.Memory* %loadMem_402443, %struct.Memory** %MEMORY
  %loadMem_402446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %947 = getelementptr inbounds %struct.GPR, %struct.GPR* %946, i32 0, i32 33
  %948 = getelementptr inbounds %struct.Reg, %struct.Reg* %947, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %948 to i64*
  %949 = load i64, i64* %PC.i1198
  %950 = add i64 %949, 16
  %951 = load i64, i64* %PC.i1198
  %952 = add i64 %951, 6
  %953 = load i64, i64* %PC.i1198
  %954 = add i64 %953, 6
  store i64 %954, i64* %PC.i1198
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %956 = load i8, i8* %955, align 1
  %957 = icmp ne i8 %956, 0
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %959 = load i8, i8* %958, align 1
  %960 = icmp ne i8 %959, 0
  %961 = xor i1 %957, %960
  %962 = zext i1 %961 to i8
  store i8 %962, i8* %BRANCH_TAKEN, align 1
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %964 = select i1 %961, i64 %950, i64 %952
  store i64 %964, i64* %963, align 8
  store %struct.Memory* %loadMem_402446, %struct.Memory** %MEMORY
  %loadBr_402446 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402446 = icmp eq i8 %loadBr_402446, 1
  br i1 %cmpBr_402446, label %block_.L_402456, label %block_40244c

block_40244c:                                     ; preds = %block_.L_40240a
  %loadMem_40244c = load %struct.Memory*, %struct.Memory** %MEMORY
  %965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %966 = getelementptr inbounds %struct.GPR, %struct.GPR* %965, i32 0, i32 33
  %967 = getelementptr inbounds %struct.Reg, %struct.Reg* %966, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %967 to i64*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 15
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %RBP.i1197 = bitcast %union.anon* %970 to i64*
  %971 = load i64, i64* %RBP.i1197
  %972 = sub i64 %971, 92
  %973 = load i64, i64* %PC.i1196
  %974 = add i64 %973, 4
  store i64 %974, i64* %PC.i1196
  %975 = inttoptr i64 %972 to i32*
  %976 = load i32, i32* %975
  %977 = sub i32 %976, 14
  %978 = icmp ult i32 %976, 14
  %979 = zext i1 %978 to i8
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %979, i8* %980, align 1
  %981 = and i32 %977, 255
  %982 = call i32 @llvm.ctpop.i32(i32 %981)
  %983 = trunc i32 %982 to i8
  %984 = and i8 %983, 1
  %985 = xor i8 %984, 1
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %985, i8* %986, align 1
  %987 = xor i32 %976, 14
  %988 = xor i32 %987, %977
  %989 = lshr i32 %988, 4
  %990 = trunc i32 %989 to i8
  %991 = and i8 %990, 1
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %991, i8* %992, align 1
  %993 = icmp eq i32 %977, 0
  %994 = zext i1 %993 to i8
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %994, i8* %995, align 1
  %996 = lshr i32 %977, 31
  %997 = trunc i32 %996 to i8
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %997, i8* %998, align 1
  %999 = lshr i32 %976, 31
  %1000 = xor i32 %996, %999
  %1001 = add i32 %1000, %999
  %1002 = icmp eq i32 %1001, 2
  %1003 = zext i1 %1002 to i8
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1003, i8* %1004, align 1
  store %struct.Memory* %loadMem_40244c, %struct.Memory** %MEMORY
  %loadMem_402450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1006 = getelementptr inbounds %struct.GPR, %struct.GPR* %1005, i32 0, i32 33
  %1007 = getelementptr inbounds %struct.Reg, %struct.Reg* %1006, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %1007 to i64*
  %1008 = load i64, i64* %PC.i1195
  %1009 = add i64 %1008, 72
  %1010 = load i64, i64* %PC.i1195
  %1011 = add i64 %1010, 6
  %1012 = load i64, i64* %PC.i1195
  %1013 = add i64 %1012, 6
  store i64 %1013, i64* %PC.i1195
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1015 = load i8, i8* %1014, align 1
  %1016 = icmp ne i8 %1015, 0
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1018 = load i8, i8* %1017, align 1
  %1019 = icmp ne i8 %1018, 0
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1021 = load i8, i8* %1020, align 1
  %1022 = icmp ne i8 %1021, 0
  %1023 = xor i1 %1019, %1022
  %1024 = or i1 %1016, %1023
  %1025 = zext i1 %1024 to i8
  store i8 %1025, i8* %BRANCH_TAKEN, align 1
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1027 = select i1 %1024, i64 %1009, i64 %1011
  store i64 %1027, i64* %1026, align 8
  store %struct.Memory* %loadMem_402450, %struct.Memory** %MEMORY
  %loadBr_402450 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402450 = icmp eq i8 %loadBr_402450, 1
  br i1 %cmpBr_402450, label %block_.L_402498, label %block_.L_402456

block_.L_402456:                                  ; preds = %block_40244c, %block_.L_40240a
  %loadMem_402456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1029 = getelementptr inbounds %struct.GPR, %struct.GPR* %1028, i32 0, i32 33
  %1030 = getelementptr inbounds %struct.Reg, %struct.Reg* %1029, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %1030 to i64*
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 11
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %RDI.i1193 = bitcast %union.anon* %1033 to i64*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1035 = getelementptr inbounds %struct.GPR, %struct.GPR* %1034, i32 0, i32 15
  %1036 = getelementptr inbounds %struct.Reg, %struct.Reg* %1035, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %1036 to i64*
  %1037 = load i64, i64* %RBP.i1194
  %1038 = sub i64 %1037, 8
  %1039 = load i64, i64* %PC.i1192
  %1040 = add i64 %1039, 4
  store i64 %1040, i64* %PC.i1192
  %1041 = inttoptr i64 %1038 to i64*
  %1042 = load i64, i64* %1041
  store i64 %1042, i64* %RDI.i1193, align 8
  store %struct.Memory* %loadMem_402456, %struct.Memory** %MEMORY
  %loadMem_40245a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 33
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 9
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RSI.i1190 = bitcast %union.anon* %1048 to i64*
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 15
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %1051 to i64*
  %1052 = load i64, i64* %RBP.i1191
  %1053 = sub i64 %1052, 16
  %1054 = load i64, i64* %PC.i1189
  %1055 = add i64 %1054, 4
  store i64 %1055, i64* %PC.i1189
  %1056 = inttoptr i64 %1053 to i64*
  %1057 = load i64, i64* %1056
  store i64 %1057, i64* %RSI.i1190, align 8
  store %struct.Memory* %loadMem_40245a, %struct.Memory** %MEMORY
  %loadMem_40245e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1059 = getelementptr inbounds %struct.GPR, %struct.GPR* %1058, i32 0, i32 33
  %1060 = getelementptr inbounds %struct.Reg, %struct.Reg* %1059, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %1060 to i64*
  %1061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1062 = getelementptr inbounds %struct.GPR, %struct.GPR* %1061, i32 0, i32 7
  %1063 = getelementptr inbounds %struct.Reg, %struct.Reg* %1062, i32 0, i32 0
  %RDX.i1187 = bitcast %union.anon* %1063 to i64*
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1065 = getelementptr inbounds %struct.GPR, %struct.GPR* %1064, i32 0, i32 15
  %1066 = getelementptr inbounds %struct.Reg, %struct.Reg* %1065, i32 0, i32 0
  %RBP.i1188 = bitcast %union.anon* %1066 to i64*
  %1067 = load i64, i64* %RBP.i1188
  %1068 = sub i64 %1067, 24
  %1069 = load i64, i64* %PC.i1186
  %1070 = add i64 %1069, 4
  store i64 %1070, i64* %PC.i1186
  %1071 = inttoptr i64 %1068 to i64*
  %1072 = load i64, i64* %1071
  store i64 %1072, i64* %RDX.i1187, align 8
  store %struct.Memory* %loadMem_40245e, %struct.Memory** %MEMORY
  %loadMem_402462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 33
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %1075 to i64*
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 5
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %RCX.i1184 = bitcast %union.anon* %1078 to i64*
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 15
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %1081 to i64*
  %1082 = load i64, i64* %RBP.i1185
  %1083 = sub i64 %1082, 28
  %1084 = load i64, i64* %PC.i1183
  %1085 = add i64 %1084, 3
  store i64 %1085, i64* %PC.i1183
  %1086 = inttoptr i64 %1083 to i32*
  %1087 = load i32, i32* %1086
  %1088 = zext i32 %1087 to i64
  store i64 %1088, i64* %RCX.i1184, align 8
  store %struct.Memory* %loadMem_402462, %struct.Memory** %MEMORY
  %loadMem_402465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 33
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 17
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %1094 to i32*
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 15
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %RBP.i1182 = bitcast %union.anon* %1097 to i64*
  %1098 = bitcast i32* %R8D.i to i64*
  %1099 = load i64, i64* %RBP.i1182
  %1100 = sub i64 %1099, 84
  %1101 = load i64, i64* %PC.i1181
  %1102 = add i64 %1101, 4
  store i64 %1102, i64* %PC.i1181
  %1103 = inttoptr i64 %1100 to i32*
  %1104 = load i32, i32* %1103
  %1105 = zext i32 %1104 to i64
  store i64 %1105, i64* %1098, align 8
  store %struct.Memory* %loadMem_402465, %struct.Memory** %MEMORY
  %loadMem_402469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1107 = getelementptr inbounds %struct.GPR, %struct.GPR* %1106, i32 0, i32 33
  %1108 = getelementptr inbounds %struct.Reg, %struct.Reg* %1107, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %1108 to i64*
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1110 = getelementptr inbounds %struct.GPR, %struct.GPR* %1109, i32 0, i32 19
  %1111 = getelementptr inbounds %struct.Reg, %struct.Reg* %1110, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %1111 to i32*
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 15
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %1114 to i64*
  %1115 = bitcast i32* %R9D.i to i64*
  %1116 = load i64, i64* %RBP.i1180
  %1117 = sub i64 %1116, 88
  %1118 = load i64, i64* %PC.i1179
  %1119 = add i64 %1118, 4
  store i64 %1119, i64* %PC.i1179
  %1120 = inttoptr i64 %1117 to i32*
  %1121 = load i32, i32* %1120
  %1122 = zext i32 %1121 to i64
  store i64 %1122, i64* %1115, align 8
  store %struct.Memory* %loadMem_402469, %struct.Memory** %MEMORY
  %loadMem_40246d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1124 = getelementptr inbounds %struct.GPR, %struct.GPR* %1123, i32 0, i32 33
  %1125 = getelementptr inbounds %struct.Reg, %struct.Reg* %1124, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %1125 to i64*
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1127 = getelementptr inbounds %struct.GPR, %struct.GPR* %1126, i32 0, i32 1
  %1128 = getelementptr inbounds %struct.Reg, %struct.Reg* %1127, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %1128 to i64*
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 15
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %RBP.i1178 = bitcast %union.anon* %1131 to i64*
  %1132 = load i64, i64* %RBP.i1178
  %1133 = sub i64 %1132, 92
  %1134 = load i64, i64* %PC.i1176
  %1135 = add i64 %1134, 3
  store i64 %1135, i64* %PC.i1176
  %1136 = inttoptr i64 %1133 to i32*
  %1137 = load i32, i32* %1136
  %1138 = zext i32 %1137 to i64
  store i64 %1138, i64* %RAX.i1177, align 8
  store %struct.Memory* %loadMem_40246d, %struct.Memory** %MEMORY
  %loadMem_402470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1140 = getelementptr inbounds %struct.GPR, %struct.GPR* %1139, i32 0, i32 33
  %1141 = getelementptr inbounds %struct.Reg, %struct.Reg* %1140, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %1141 to i64*
  %1142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1143 = getelementptr inbounds %struct.GPR, %struct.GPR* %1142, i32 0, i32 15
  %1144 = getelementptr inbounds %struct.Reg, %struct.Reg* %1143, i32 0, i32 0
  %RBP.i1174 = bitcast %union.anon* %1144 to i64*
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1146 = getelementptr inbounds %struct.GPR, %struct.GPR* %1145, i32 0, i32 21
  %1147 = getelementptr inbounds %struct.Reg, %struct.Reg* %1146, i32 0, i32 0
  %R10.i1175 = bitcast %union.anon* %1147 to i64*
  %1148 = load i64, i64* %RBP.i1174
  %1149 = sub i64 %1148, 48
  %1150 = load i64, i64* %PC.i1173
  %1151 = add i64 %1150, 4
  store i64 %1151, i64* %PC.i1173
  %1152 = inttoptr i64 %1149 to i64*
  %1153 = load i64, i64* %1152
  store i64 %1153, i64* %R10.i1175, align 8
  store %struct.Memory* %loadMem_402470, %struct.Memory** %MEMORY
  %loadMem_402474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1155 = getelementptr inbounds %struct.GPR, %struct.GPR* %1154, i32 0, i32 33
  %1156 = getelementptr inbounds %struct.Reg, %struct.Reg* %1155, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %1156 to i64*
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1158 = getelementptr inbounds %struct.GPR, %struct.GPR* %1157, i32 0, i32 1
  %1159 = getelementptr inbounds %struct.Reg, %struct.Reg* %1158, i32 0, i32 0
  %EAX.i1171 = bitcast %union.anon* %1159 to i32*
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 13
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %RSP.i1172 = bitcast %union.anon* %1162 to i64*
  %1163 = load i64, i64* %RSP.i1172
  %1164 = load i32, i32* %EAX.i1171
  %1165 = zext i32 %1164 to i64
  %1166 = load i64, i64* %PC.i1170
  %1167 = add i64 %1166, 3
  store i64 %1167, i64* %PC.i1170
  %1168 = inttoptr i64 %1163 to i32*
  store i32 %1164, i32* %1168
  store %struct.Memory* %loadMem_402474, %struct.Memory** %MEMORY
  %loadMem_402477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1170 = getelementptr inbounds %struct.GPR, %struct.GPR* %1169, i32 0, i32 33
  %1171 = getelementptr inbounds %struct.Reg, %struct.Reg* %1170, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %1171 to i64*
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 13
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %RSP.i1169 = bitcast %union.anon* %1174 to i64*
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 21
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %R10.i = bitcast %union.anon* %1177 to i64*
  %1178 = load i64, i64* %RSP.i1169
  %1179 = add i64 %1178, 8
  %1180 = load i64, i64* %R10.i
  %1181 = load i64, i64* %PC.i1168
  %1182 = add i64 %1181, 5
  store i64 %1182, i64* %PC.i1168
  %1183 = inttoptr i64 %1179 to i64*
  store i64 %1180, i64* %1183
  store %struct.Memory* %loadMem_402477, %struct.Memory** %MEMORY
  %loadMem1_40247c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1185 = getelementptr inbounds %struct.GPR, %struct.GPR* %1184, i32 0, i32 33
  %1186 = getelementptr inbounds %struct.Reg, %struct.Reg* %1185, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %1186 to i64*
  %1187 = load i64, i64* %PC.i1167
  %1188 = add i64 %1187, 1844
  %1189 = load i64, i64* %PC.i1167
  %1190 = add i64 %1189, 5
  %1191 = load i64, i64* %PC.i1167
  %1192 = add i64 %1191, 5
  store i64 %1192, i64* %PC.i1167
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1194 = load i64, i64* %1193, align 8
  %1195 = add i64 %1194, -8
  %1196 = inttoptr i64 %1195 to i64*
  store i64 %1190, i64* %1196
  store i64 %1195, i64* %1193, align 8
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1188, i64* %1197, align 8
  store %struct.Memory* %loadMem1_40247c, %struct.Memory** %MEMORY
  %loadMem2_40247c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40247c = load i64, i64* %3
  %call2_40247c = call %struct.Memory* @sub_402bb0.mainSimpleSort(%struct.State* %0, i64 %loadPC_40247c, %struct.Memory* %loadMem2_40247c)
  store %struct.Memory* %call2_40247c, %struct.Memory** %MEMORY
  %loadMem_402481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 33
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %1200 to i64*
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 7
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %RDX.i1165 = bitcast %union.anon* %1203 to i64*
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 15
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %1206 to i64*
  %1207 = load i64, i64* %RBP.i1166
  %1208 = sub i64 %1207, 48
  %1209 = load i64, i64* %PC.i1164
  %1210 = add i64 %1209, 4
  store i64 %1210, i64* %PC.i1164
  %1211 = inttoptr i64 %1208 to i64*
  %1212 = load i64, i64* %1211
  store i64 %1212, i64* %RDX.i1165, align 8
  store %struct.Memory* %loadMem_402481, %struct.Memory** %MEMORY
  %loadMem_402485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 33
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %1215 to i64*
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 7
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %RDX.i1163 = bitcast %union.anon* %1218 to i64*
  %1219 = load i64, i64* %RDX.i1163
  %1220 = load i64, i64* %PC.i1162
  %1221 = add i64 %1220, 3
  store i64 %1221, i64* %PC.i1162
  %1222 = inttoptr i64 %1219 to i32*
  %1223 = load i32, i32* %1222
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1224, align 1
  %1225 = and i32 %1223, 255
  %1226 = call i32 @llvm.ctpop.i32(i32 %1225)
  %1227 = trunc i32 %1226 to i8
  %1228 = and i8 %1227, 1
  %1229 = xor i8 %1228, 1
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1229, i8* %1230, align 1
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1231, align 1
  %1232 = icmp eq i32 %1223, 0
  %1233 = zext i1 %1232 to i8
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1233, i8* %1234, align 1
  %1235 = lshr i32 %1223, 31
  %1236 = trunc i32 %1235 to i8
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1236, i8* %1237, align 1
  %1238 = lshr i32 %1223, 31
  %1239 = xor i32 %1235, %1238
  %1240 = add i32 %1239, %1238
  %1241 = icmp eq i32 %1240, 2
  %1242 = zext i1 %1241 to i8
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1242, i8* %1243, align 1
  store %struct.Memory* %loadMem_402485, %struct.Memory** %MEMORY
  %loadMem_402488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1245 = getelementptr inbounds %struct.GPR, %struct.GPR* %1244, i32 0, i32 33
  %1246 = getelementptr inbounds %struct.Reg, %struct.Reg* %1245, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %1246 to i64*
  %1247 = load i64, i64* %PC.i1161
  %1248 = add i64 %1247, 11
  %1249 = load i64, i64* %PC.i1161
  %1250 = add i64 %1249, 6
  %1251 = load i64, i64* %PC.i1161
  %1252 = add i64 %1251, 6
  store i64 %1252, i64* %PC.i1161
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1254 = load i8, i8* %1253, align 1
  %1255 = icmp ne i8 %1254, 0
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1257 = load i8, i8* %1256, align 1
  %1258 = icmp ne i8 %1257, 0
  %1259 = xor i1 %1255, %1258
  %1260 = xor i1 %1259, true
  %1261 = zext i1 %1260 to i8
  store i8 %1261, i8* %BRANCH_TAKEN, align 1
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1263 = select i1 %1259, i64 %1250, i64 %1248
  store i64 %1263, i64* %1262, align 8
  store %struct.Memory* %loadMem_402488, %struct.Memory** %MEMORY
  %loadBr_402488 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402488 = icmp eq i8 %loadBr_402488, 1
  br i1 %cmpBr_402488, label %block_.L_402493, label %block_40248e

block_40248e:                                     ; preds = %block_.L_402456
  %loadMem_40248e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 33
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %1266 to i64*
  %1267 = load i64, i64* %PC.i1160
  %1268 = add i64 %1267, 1812
  %1269 = load i64, i64* %PC.i1160
  %1270 = add i64 %1269, 5
  store i64 %1270, i64* %PC.i1160
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1268, i64* %1271, align 8
  store %struct.Memory* %loadMem_40248e, %struct.Memory** %MEMORY
  br label %block_.L_402ba2

block_.L_402493:                                  ; preds = %block_.L_402456
  %loadMem_402493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1273 = getelementptr inbounds %struct.GPR, %struct.GPR* %1272, i32 0, i32 33
  %1274 = getelementptr inbounds %struct.Reg, %struct.Reg* %1273, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %1274 to i64*
  %1275 = load i64, i64* %PC.i1159
  %1276 = add i64 %1275, -167
  %1277 = load i64, i64* %PC.i1159
  %1278 = add i64 %1277, 5
  store i64 %1278, i64* %PC.i1159
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1276, i64* %1279, align 8
  store %struct.Memory* %loadMem_402493, %struct.Memory** %MEMORY
  br label %block_.L_4023ec

block_.L_402498:                                  ; preds = %block_40244c
  %loadMem_402498 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 33
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %1282 to i64*
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1284 = getelementptr inbounds %struct.GPR, %struct.GPR* %1283, i32 0, i32 1
  %1285 = getelementptr inbounds %struct.Reg, %struct.Reg* %1284, i32 0, i32 0
  %RAX.i1157 = bitcast %union.anon* %1285 to i64*
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 15
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %1288 to i64*
  %1289 = load i64, i64* %RBP.i1158
  %1290 = sub i64 %1289, 16
  %1291 = load i64, i64* %PC.i1156
  %1292 = add i64 %1291, 4
  store i64 %1292, i64* %PC.i1156
  %1293 = inttoptr i64 %1290 to i64*
  %1294 = load i64, i64* %1293
  store i64 %1294, i64* %RAX.i1157, align 8
  store %struct.Memory* %loadMem_402498, %struct.Memory** %MEMORY
  %loadMem_40249c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1296 = getelementptr inbounds %struct.GPR, %struct.GPR* %1295, i32 0, i32 33
  %1297 = getelementptr inbounds %struct.Reg, %struct.Reg* %1296, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %1297 to i64*
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 5
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %RCX.i1154 = bitcast %union.anon* %1300 to i64*
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 15
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %1303 to i64*
  %1304 = load i64, i64* %RBP.i1155
  %1305 = sub i64 %1304, 8
  %1306 = load i64, i64* %PC.i1153
  %1307 = add i64 %1306, 4
  store i64 %1307, i64* %PC.i1153
  %1308 = inttoptr i64 %1305 to i64*
  %1309 = load i64, i64* %1308
  store i64 %1309, i64* %RCX.i1154, align 8
  store %struct.Memory* %loadMem_40249c, %struct.Memory** %MEMORY
  %loadMem_4024a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 33
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %1312 to i64*
  %1313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1314 = getelementptr inbounds %struct.GPR, %struct.GPR* %1313, i32 0, i32 7
  %1315 = getelementptr inbounds %struct.Reg, %struct.Reg* %1314, i32 0, i32 0
  %RDX.i1151 = bitcast %union.anon* %1315 to i64*
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 15
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %RBP.i1152 = bitcast %union.anon* %1318 to i64*
  %1319 = load i64, i64* %RBP.i1152
  %1320 = sub i64 %1319, 84
  %1321 = load i64, i64* %PC.i1150
  %1322 = add i64 %1321, 4
  store i64 %1322, i64* %PC.i1150
  %1323 = inttoptr i64 %1320 to i32*
  %1324 = load i32, i32* %1323
  %1325 = sext i32 %1324 to i64
  store i64 %1325, i64* %RDX.i1151, align 8
  store %struct.Memory* %loadMem_4024a0, %struct.Memory** %MEMORY
  %loadMem_4024a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 33
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %1328 to i64*
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1330 = getelementptr inbounds %struct.GPR, %struct.GPR* %1329, i32 0, i32 5
  %1331 = getelementptr inbounds %struct.Reg, %struct.Reg* %1330, i32 0, i32 0
  %RCX.i1147 = bitcast %union.anon* %1331 to i64*
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 7
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %RDX.i1148 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 9
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RSI.i1149 = bitcast %union.anon* %1337 to i64*
  %1338 = load i64, i64* %RCX.i1147
  %1339 = load i64, i64* %RDX.i1148
  %1340 = mul i64 %1339, 4
  %1341 = add i64 %1340, %1338
  %1342 = load i64, i64* %PC.i1146
  %1343 = add i64 %1342, 3
  store i64 %1343, i64* %PC.i1146
  %1344 = inttoptr i64 %1341 to i32*
  %1345 = load i32, i32* %1344
  %1346 = zext i32 %1345 to i64
  store i64 %1346, i64* %RSI.i1149, align 8
  store %struct.Memory* %loadMem_4024a4, %struct.Memory** %MEMORY
  %loadMem_4024a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 33
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %1349 to i64*
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1351 = getelementptr inbounds %struct.GPR, %struct.GPR* %1350, i32 0, i32 9
  %1352 = getelementptr inbounds %struct.Reg, %struct.Reg* %1351, i32 0, i32 0
  %RSI.i1144 = bitcast %union.anon* %1352 to i64*
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1354 = getelementptr inbounds %struct.GPR, %struct.GPR* %1353, i32 0, i32 15
  %1355 = getelementptr inbounds %struct.Reg, %struct.Reg* %1354, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %1355 to i64*
  %1356 = load i64, i64* %RSI.i1144
  %1357 = load i64, i64* %RBP.i1145
  %1358 = sub i64 %1357, 92
  %1359 = load i64, i64* %PC.i1143
  %1360 = add i64 %1359, 3
  store i64 %1360, i64* %PC.i1143
  %1361 = trunc i64 %1356 to i32
  %1362 = inttoptr i64 %1358 to i32*
  %1363 = load i32, i32* %1362
  %1364 = add i32 %1363, %1361
  %1365 = zext i32 %1364 to i64
  store i64 %1365, i64* %RSI.i1144, align 8
  %1366 = icmp ult i32 %1364, %1361
  %1367 = icmp ult i32 %1364, %1363
  %1368 = or i1 %1366, %1367
  %1369 = zext i1 %1368 to i8
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1369, i8* %1370, align 1
  %1371 = and i32 %1364, 255
  %1372 = call i32 @llvm.ctpop.i32(i32 %1371)
  %1373 = trunc i32 %1372 to i8
  %1374 = and i8 %1373, 1
  %1375 = xor i8 %1374, 1
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1375, i8* %1376, align 1
  %1377 = xor i32 %1363, %1361
  %1378 = xor i32 %1377, %1364
  %1379 = lshr i32 %1378, 4
  %1380 = trunc i32 %1379 to i8
  %1381 = and i8 %1380, 1
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1381, i8* %1382, align 1
  %1383 = icmp eq i32 %1364, 0
  %1384 = zext i1 %1383 to i8
  %1385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1384, i8* %1385, align 1
  %1386 = lshr i32 %1364, 31
  %1387 = trunc i32 %1386 to i8
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1387, i8* %1388, align 1
  %1389 = lshr i32 %1361, 31
  %1390 = lshr i32 %1363, 31
  %1391 = xor i32 %1386, %1389
  %1392 = xor i32 %1386, %1390
  %1393 = add i32 %1391, %1392
  %1394 = icmp eq i32 %1393, 2
  %1395 = zext i1 %1394 to i8
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1395, i8* %1396, align 1
  store %struct.Memory* %loadMem_4024a7, %struct.Memory** %MEMORY
  %loadMem_4024aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1398 = getelementptr inbounds %struct.GPR, %struct.GPR* %1397, i32 0, i32 33
  %1399 = getelementptr inbounds %struct.Reg, %struct.Reg* %1398, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %1399 to i64*
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1401 = getelementptr inbounds %struct.GPR, %struct.GPR* %1400, i32 0, i32 9
  %1402 = getelementptr inbounds %struct.Reg, %struct.Reg* %1401, i32 0, i32 0
  %ESI.i1141 = bitcast %union.anon* %1402 to i32*
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1404 = getelementptr inbounds %struct.GPR, %struct.GPR* %1403, i32 0, i32 9
  %1405 = getelementptr inbounds %struct.Reg, %struct.Reg* %1404, i32 0, i32 0
  %RSI.i1142 = bitcast %union.anon* %1405 to i64*
  %1406 = load i32, i32* %ESI.i1141
  %1407 = zext i32 %1406 to i64
  %1408 = load i64, i64* %PC.i1140
  %1409 = add i64 %1408, 2
  store i64 %1409, i64* %PC.i1140
  %1410 = and i64 %1407, 4294967295
  store i64 %1410, i64* %RSI.i1142, align 8
  store %struct.Memory* %loadMem_4024aa, %struct.Memory** %MEMORY
  %loadMem_4024ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 33
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %1413 to i64*
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1415 = getelementptr inbounds %struct.GPR, %struct.GPR* %1414, i32 0, i32 9
  %1416 = getelementptr inbounds %struct.Reg, %struct.Reg* %1415, i32 0, i32 0
  %ESI.i1138 = bitcast %union.anon* %1416 to i32*
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1418 = getelementptr inbounds %struct.GPR, %struct.GPR* %1417, i32 0, i32 5
  %1419 = getelementptr inbounds %struct.Reg, %struct.Reg* %1418, i32 0, i32 0
  %RCX.i1139 = bitcast %union.anon* %1419 to i64*
  %1420 = load i32, i32* %ESI.i1138
  %1421 = zext i32 %1420 to i64
  %1422 = load i64, i64* %PC.i1137
  %1423 = add i64 %1422, 2
  store i64 %1423, i64* %PC.i1137
  %1424 = and i64 %1421, 4294967295
  store i64 %1424, i64* %RCX.i1139, align 8
  store %struct.Memory* %loadMem_4024ac, %struct.Memory** %MEMORY
  %loadMem_4024ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 33
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %1427 to i64*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 11
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %1431 = bitcast %union.anon* %1430 to %struct.anon.2*
  %DIL.i1134 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1431, i32 0, i32 0
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1433 = getelementptr inbounds %struct.GPR, %struct.GPR* %1432, i32 0, i32 1
  %1434 = getelementptr inbounds %struct.Reg, %struct.Reg* %1433, i32 0, i32 0
  %RAX.i1135 = bitcast %union.anon* %1434 to i64*
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1436 = getelementptr inbounds %struct.GPR, %struct.GPR* %1435, i32 0, i32 5
  %1437 = getelementptr inbounds %struct.Reg, %struct.Reg* %1436, i32 0, i32 0
  %RCX.i1136 = bitcast %union.anon* %1437 to i64*
  %1438 = load i64, i64* %RAX.i1135
  %1439 = load i64, i64* %RCX.i1136
  %1440 = add i64 %1439, %1438
  %1441 = load i64, i64* %PC.i1133
  %1442 = add i64 %1441, 4
  store i64 %1442, i64* %PC.i1133
  %1443 = inttoptr i64 %1440 to i8*
  %1444 = load i8, i8* %1443
  store i8 %1444, i8* %DIL.i1134, align 1
  store %struct.Memory* %loadMem_4024ae, %struct.Memory** %MEMORY
  %loadMem_4024b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 33
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %1447 to i64*
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 1
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %RAX.i1131 = bitcast %union.anon* %1450 to i64*
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1452 = getelementptr inbounds %struct.GPR, %struct.GPR* %1451, i32 0, i32 15
  %1453 = getelementptr inbounds %struct.Reg, %struct.Reg* %1452, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %1453 to i64*
  %1454 = load i64, i64* %RBP.i1132
  %1455 = sub i64 %1454, 16
  %1456 = load i64, i64* %PC.i1130
  %1457 = add i64 %1456, 4
  store i64 %1457, i64* %PC.i1130
  %1458 = inttoptr i64 %1455 to i64*
  %1459 = load i64, i64* %1458
  store i64 %1459, i64* %RAX.i1131, align 8
  store %struct.Memory* %loadMem_4024b2, %struct.Memory** %MEMORY
  %loadMem_4024b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1461 = getelementptr inbounds %struct.GPR, %struct.GPR* %1460, i32 0, i32 33
  %1462 = getelementptr inbounds %struct.Reg, %struct.Reg* %1461, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %1462 to i64*
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 5
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %RCX.i1128 = bitcast %union.anon* %1465 to i64*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 15
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %RBP.i1129 = bitcast %union.anon* %1468 to i64*
  %1469 = load i64, i64* %RBP.i1129
  %1470 = sub i64 %1469, 8
  %1471 = load i64, i64* %PC.i1127
  %1472 = add i64 %1471, 4
  store i64 %1472, i64* %PC.i1127
  %1473 = inttoptr i64 %1470 to i64*
  %1474 = load i64, i64* %1473
  store i64 %1474, i64* %RCX.i1128, align 8
  store %struct.Memory* %loadMem_4024b6, %struct.Memory** %MEMORY
  %loadMem_4024ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 33
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %1477 to i64*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 7
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %RDX.i1125 = bitcast %union.anon* %1480 to i64*
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 15
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %RBP.i1126 = bitcast %union.anon* %1483 to i64*
  %1484 = load i64, i64* %RBP.i1126
  %1485 = sub i64 %1484, 88
  %1486 = load i64, i64* %PC.i1124
  %1487 = add i64 %1486, 4
  store i64 %1487, i64* %PC.i1124
  %1488 = inttoptr i64 %1485 to i32*
  %1489 = load i32, i32* %1488
  %1490 = sext i32 %1489 to i64
  store i64 %1490, i64* %RDX.i1125, align 8
  store %struct.Memory* %loadMem_4024ba, %struct.Memory** %MEMORY
  %loadMem_4024be = load %struct.Memory*, %struct.Memory** %MEMORY
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 33
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %1493 to i64*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 5
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %RCX.i1121 = bitcast %union.anon* %1496 to i64*
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 7
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %RDX.i1122 = bitcast %union.anon* %1499 to i64*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 9
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %RSI.i1123 = bitcast %union.anon* %1502 to i64*
  %1503 = load i64, i64* %RCX.i1121
  %1504 = load i64, i64* %RDX.i1122
  %1505 = mul i64 %1504, 4
  %1506 = add i64 %1505, %1503
  %1507 = load i64, i64* %PC.i1120
  %1508 = add i64 %1507, 3
  store i64 %1508, i64* %PC.i1120
  %1509 = inttoptr i64 %1506 to i32*
  %1510 = load i32, i32* %1509
  %1511 = zext i32 %1510 to i64
  store i64 %1511, i64* %RSI.i1123, align 8
  store %struct.Memory* %loadMem_4024be, %struct.Memory** %MEMORY
  %loadMem_4024c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1513 = getelementptr inbounds %struct.GPR, %struct.GPR* %1512, i32 0, i32 33
  %1514 = getelementptr inbounds %struct.Reg, %struct.Reg* %1513, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %1514 to i64*
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1516 = getelementptr inbounds %struct.GPR, %struct.GPR* %1515, i32 0, i32 9
  %1517 = getelementptr inbounds %struct.Reg, %struct.Reg* %1516, i32 0, i32 0
  %RSI.i1118 = bitcast %union.anon* %1517 to i64*
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 15
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %RBP.i1119 = bitcast %union.anon* %1520 to i64*
  %1521 = load i64, i64* %RSI.i1118
  %1522 = load i64, i64* %RBP.i1119
  %1523 = sub i64 %1522, 92
  %1524 = load i64, i64* %PC.i1117
  %1525 = add i64 %1524, 3
  store i64 %1525, i64* %PC.i1117
  %1526 = trunc i64 %1521 to i32
  %1527 = inttoptr i64 %1523 to i32*
  %1528 = load i32, i32* %1527
  %1529 = add i32 %1528, %1526
  %1530 = zext i32 %1529 to i64
  store i64 %1530, i64* %RSI.i1118, align 8
  %1531 = icmp ult i32 %1529, %1526
  %1532 = icmp ult i32 %1529, %1528
  %1533 = or i1 %1531, %1532
  %1534 = zext i1 %1533 to i8
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1534, i8* %1535, align 1
  %1536 = and i32 %1529, 255
  %1537 = call i32 @llvm.ctpop.i32(i32 %1536)
  %1538 = trunc i32 %1537 to i8
  %1539 = and i8 %1538, 1
  %1540 = xor i8 %1539, 1
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1540, i8* %1541, align 1
  %1542 = xor i32 %1528, %1526
  %1543 = xor i32 %1542, %1529
  %1544 = lshr i32 %1543, 4
  %1545 = trunc i32 %1544 to i8
  %1546 = and i8 %1545, 1
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1546, i8* %1547, align 1
  %1548 = icmp eq i32 %1529, 0
  %1549 = zext i1 %1548 to i8
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1549, i8* %1550, align 1
  %1551 = lshr i32 %1529, 31
  %1552 = trunc i32 %1551 to i8
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1552, i8* %1553, align 1
  %1554 = lshr i32 %1526, 31
  %1555 = lshr i32 %1528, 31
  %1556 = xor i32 %1551, %1554
  %1557 = xor i32 %1551, %1555
  %1558 = add i32 %1556, %1557
  %1559 = icmp eq i32 %1558, 2
  %1560 = zext i1 %1559 to i8
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1560, i8* %1561, align 1
  store %struct.Memory* %loadMem_4024c1, %struct.Memory** %MEMORY
  %loadMem_4024c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1563 = getelementptr inbounds %struct.GPR, %struct.GPR* %1562, i32 0, i32 33
  %1564 = getelementptr inbounds %struct.Reg, %struct.Reg* %1563, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %1564 to i64*
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1566 = getelementptr inbounds %struct.GPR, %struct.GPR* %1565, i32 0, i32 9
  %1567 = getelementptr inbounds %struct.Reg, %struct.Reg* %1566, i32 0, i32 0
  %ESI.i1115 = bitcast %union.anon* %1567 to i32*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1569 = getelementptr inbounds %struct.GPR, %struct.GPR* %1568, i32 0, i32 9
  %1570 = getelementptr inbounds %struct.Reg, %struct.Reg* %1569, i32 0, i32 0
  %RSI.i1116 = bitcast %union.anon* %1570 to i64*
  %1571 = load i32, i32* %ESI.i1115
  %1572 = zext i32 %1571 to i64
  %1573 = load i64, i64* %PC.i1114
  %1574 = add i64 %1573, 2
  store i64 %1574, i64* %PC.i1114
  %1575 = and i64 %1572, 4294967295
  store i64 %1575, i64* %RSI.i1116, align 8
  store %struct.Memory* %loadMem_4024c4, %struct.Memory** %MEMORY
  %loadMem_4024c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1577 = getelementptr inbounds %struct.GPR, %struct.GPR* %1576, i32 0, i32 33
  %1578 = getelementptr inbounds %struct.Reg, %struct.Reg* %1577, i32 0, i32 0
  %PC.i1111 = bitcast %union.anon* %1578 to i64*
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1580 = getelementptr inbounds %struct.GPR, %struct.GPR* %1579, i32 0, i32 9
  %1581 = getelementptr inbounds %struct.Reg, %struct.Reg* %1580, i32 0, i32 0
  %ESI.i1112 = bitcast %union.anon* %1581 to i32*
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1583 = getelementptr inbounds %struct.GPR, %struct.GPR* %1582, i32 0, i32 5
  %1584 = getelementptr inbounds %struct.Reg, %struct.Reg* %1583, i32 0, i32 0
  %RCX.i1113 = bitcast %union.anon* %1584 to i64*
  %1585 = load i32, i32* %ESI.i1112
  %1586 = zext i32 %1585 to i64
  %1587 = load i64, i64* %PC.i1111
  %1588 = add i64 %1587, 2
  store i64 %1588, i64* %PC.i1111
  %1589 = and i64 %1586, 4294967295
  store i64 %1589, i64* %RCX.i1113, align 8
  store %struct.Memory* %loadMem_4024c6, %struct.Memory** %MEMORY
  %loadMem_4024c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1591 = getelementptr inbounds %struct.GPR, %struct.GPR* %1590, i32 0, i32 33
  %1592 = getelementptr inbounds %struct.Reg, %struct.Reg* %1591, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %1592 to i64*
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 17
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %1596 = bitcast %union.anon* %1595 to %struct.anon.2*
  %R8B.i1108 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1596, i32 0, i32 0
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1598 = getelementptr inbounds %struct.GPR, %struct.GPR* %1597, i32 0, i32 1
  %1599 = getelementptr inbounds %struct.Reg, %struct.Reg* %1598, i32 0, i32 0
  %RAX.i1109 = bitcast %union.anon* %1599 to i64*
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 5
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %RCX.i1110 = bitcast %union.anon* %1602 to i64*
  %1603 = load i64, i64* %RAX.i1109
  %1604 = load i64, i64* %RCX.i1110
  %1605 = add i64 %1604, %1603
  %1606 = load i64, i64* %PC.i1107
  %1607 = add i64 %1606, 4
  store i64 %1607, i64* %PC.i1107
  %1608 = inttoptr i64 %1605 to i8*
  %1609 = load i8, i8* %1608
  store i8 %1609, i8* %R8B.i1108, align 1
  store %struct.Memory* %loadMem_4024c8, %struct.Memory** %MEMORY
  %loadMem_4024cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 33
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %1612 to i64*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 1
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %RAX.i1105 = bitcast %union.anon* %1615 to i64*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 15
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %RBP.i1106 = bitcast %union.anon* %1618 to i64*
  %1619 = load i64, i64* %RBP.i1106
  %1620 = sub i64 %1619, 16
  %1621 = load i64, i64* %PC.i1104
  %1622 = add i64 %1621, 4
  store i64 %1622, i64* %PC.i1104
  %1623 = inttoptr i64 %1620 to i64*
  %1624 = load i64, i64* %1623
  store i64 %1624, i64* %RAX.i1105, align 8
  store %struct.Memory* %loadMem_4024cc, %struct.Memory** %MEMORY
  %loadMem_4024d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1626 = getelementptr inbounds %struct.GPR, %struct.GPR* %1625, i32 0, i32 33
  %1627 = getelementptr inbounds %struct.Reg, %struct.Reg* %1626, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %1627 to i64*
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 5
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %1630 to i64*
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1632 = getelementptr inbounds %struct.GPR, %struct.GPR* %1631, i32 0, i32 15
  %1633 = getelementptr inbounds %struct.Reg, %struct.Reg* %1632, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %1633 to i64*
  %1634 = load i64, i64* %RBP.i1103
  %1635 = sub i64 %1634, 8
  %1636 = load i64, i64* %PC.i1101
  %1637 = add i64 %1636, 4
  store i64 %1637, i64* %PC.i1101
  %1638 = inttoptr i64 %1635 to i64*
  %1639 = load i64, i64* %1638
  store i64 %1639, i64* %RCX.i1102, align 8
  store %struct.Memory* %loadMem_4024d0, %struct.Memory** %MEMORY
  %loadMem_4024d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 33
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %1642 to i64*
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1644 = getelementptr inbounds %struct.GPR, %struct.GPR* %1643, i32 0, i32 9
  %1645 = getelementptr inbounds %struct.Reg, %struct.Reg* %1644, i32 0, i32 0
  %RSI.i1099 = bitcast %union.anon* %1645 to i64*
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 15
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %RBP.i1100 = bitcast %union.anon* %1648 to i64*
  %1649 = load i64, i64* %RBP.i1100
  %1650 = sub i64 %1649, 84
  %1651 = load i64, i64* %PC.i1098
  %1652 = add i64 %1651, 3
  store i64 %1652, i64* %PC.i1098
  %1653 = inttoptr i64 %1650 to i32*
  %1654 = load i32, i32* %1653
  %1655 = zext i32 %1654 to i64
  store i64 %1655, i64* %RSI.i1099, align 8
  store %struct.Memory* %loadMem_4024d4, %struct.Memory** %MEMORY
  %loadMem_4024d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 33
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %1658 to i64*
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 9
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %RSI.i1096 = bitcast %union.anon* %1661 to i64*
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 15
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %1664 to i64*
  %1665 = load i64, i64* %RSI.i1096
  %1666 = load i64, i64* %RBP.i1097
  %1667 = sub i64 %1666, 88
  %1668 = load i64, i64* %PC.i1095
  %1669 = add i64 %1668, 3
  store i64 %1669, i64* %PC.i1095
  %1670 = trunc i64 %1665 to i32
  %1671 = inttoptr i64 %1667 to i32*
  %1672 = load i32, i32* %1671
  %1673 = add i32 %1672, %1670
  %1674 = zext i32 %1673 to i64
  store i64 %1674, i64* %RSI.i1096, align 8
  %1675 = icmp ult i32 %1673, %1670
  %1676 = icmp ult i32 %1673, %1672
  %1677 = or i1 %1675, %1676
  %1678 = zext i1 %1677 to i8
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1678, i8* %1679, align 1
  %1680 = and i32 %1673, 255
  %1681 = call i32 @llvm.ctpop.i32(i32 %1680)
  %1682 = trunc i32 %1681 to i8
  %1683 = and i8 %1682, 1
  %1684 = xor i8 %1683, 1
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1684, i8* %1685, align 1
  %1686 = xor i32 %1672, %1670
  %1687 = xor i32 %1686, %1673
  %1688 = lshr i32 %1687, 4
  %1689 = trunc i32 %1688 to i8
  %1690 = and i8 %1689, 1
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1690, i8* %1691, align 1
  %1692 = icmp eq i32 %1673, 0
  %1693 = zext i1 %1692 to i8
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1693, i8* %1694, align 1
  %1695 = lshr i32 %1673, 31
  %1696 = trunc i32 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1696, i8* %1697, align 1
  %1698 = lshr i32 %1670, 31
  %1699 = lshr i32 %1672, 31
  %1700 = xor i32 %1695, %1698
  %1701 = xor i32 %1695, %1699
  %1702 = add i32 %1700, %1701
  %1703 = icmp eq i32 %1702, 2
  %1704 = zext i1 %1703 to i8
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1704, i8* %1705, align 1
  store %struct.Memory* %loadMem_4024d7, %struct.Memory** %MEMORY
  %loadMem_4024da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 33
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %1708 to i64*
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 9
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %RSI.i1094 = bitcast %union.anon* %1711 to i64*
  %1712 = load i64, i64* %RSI.i1094
  %1713 = load i64, i64* %PC.i1093
  %1714 = add i64 %1713, 2
  store i64 %1714, i64* %PC.i1093
  %1715 = shl i64 %1712, 32
  %1716 = ashr i64 %1715, 33
  %1717 = trunc i64 %1712 to i8
  %1718 = and i8 %1717, 1
  %1719 = trunc i64 %1716 to i32
  %1720 = and i64 %1716, 4294967295
  store i64 %1720, i64* %RSI.i1094, align 8
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1718, i8* %1721, align 1
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1723 = and i32 %1719, 255
  %1724 = call i32 @llvm.ctpop.i32(i32 %1723)
  %1725 = trunc i32 %1724 to i8
  %1726 = and i8 %1725, 1
  %1727 = xor i8 %1726, 1
  store i8 %1727, i8* %1722, align 1
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1728, align 1
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1730 = icmp eq i32 %1719, 0
  %1731 = zext i1 %1730 to i8
  store i8 %1731, i8* %1729, align 1
  %1732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1733 = lshr i32 %1719, 31
  %1734 = trunc i32 %1733 to i8
  store i8 %1734, i8* %1732, align 1
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1735, align 1
  store %struct.Memory* %loadMem_4024da, %struct.Memory** %MEMORY
  %loadMem_4024dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 33
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %1738 to i64*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 9
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %ESI.i1091 = bitcast %union.anon* %1741 to i32*
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 7
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %RDX.i1092 = bitcast %union.anon* %1744 to i64*
  %1745 = load i32, i32* %ESI.i1091
  %1746 = zext i32 %1745 to i64
  %1747 = load i64, i64* %PC.i1090
  %1748 = add i64 %1747, 3
  store i64 %1748, i64* %PC.i1090
  %1749 = shl i64 %1746, 32
  %1750 = ashr exact i64 %1749, 32
  store i64 %1750, i64* %RDX.i1092, align 8
  store %struct.Memory* %loadMem_4024dd, %struct.Memory** %MEMORY
  %loadMem_4024e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 33
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %1753 to i64*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 5
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %RCX.i1087 = bitcast %union.anon* %1756 to i64*
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1758 = getelementptr inbounds %struct.GPR, %struct.GPR* %1757, i32 0, i32 7
  %1759 = getelementptr inbounds %struct.Reg, %struct.Reg* %1758, i32 0, i32 0
  %RDX.i1088 = bitcast %union.anon* %1759 to i64*
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1761 = getelementptr inbounds %struct.GPR, %struct.GPR* %1760, i32 0, i32 9
  %1762 = getelementptr inbounds %struct.Reg, %struct.Reg* %1761, i32 0, i32 0
  %RSI.i1089 = bitcast %union.anon* %1762 to i64*
  %1763 = load i64, i64* %RCX.i1087
  %1764 = load i64, i64* %RDX.i1088
  %1765 = mul i64 %1764, 4
  %1766 = add i64 %1765, %1763
  %1767 = load i64, i64* %PC.i1086
  %1768 = add i64 %1767, 3
  store i64 %1768, i64* %PC.i1086
  %1769 = inttoptr i64 %1766 to i32*
  %1770 = load i32, i32* %1769
  %1771 = zext i32 %1770 to i64
  store i64 %1771, i64* %RSI.i1089, align 8
  store %struct.Memory* %loadMem_4024e0, %struct.Memory** %MEMORY
  %loadMem_4024e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1773 = getelementptr inbounds %struct.GPR, %struct.GPR* %1772, i32 0, i32 33
  %1774 = getelementptr inbounds %struct.Reg, %struct.Reg* %1773, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %1774 to i64*
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 9
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %RSI.i1084 = bitcast %union.anon* %1777 to i64*
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 15
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %1780 to i64*
  %1781 = load i64, i64* %RSI.i1084
  %1782 = load i64, i64* %RBP.i1085
  %1783 = sub i64 %1782, 92
  %1784 = load i64, i64* %PC.i1083
  %1785 = add i64 %1784, 3
  store i64 %1785, i64* %PC.i1083
  %1786 = trunc i64 %1781 to i32
  %1787 = inttoptr i64 %1783 to i32*
  %1788 = load i32, i32* %1787
  %1789 = add i32 %1788, %1786
  %1790 = zext i32 %1789 to i64
  store i64 %1790, i64* %RSI.i1084, align 8
  %1791 = icmp ult i32 %1789, %1786
  %1792 = icmp ult i32 %1789, %1788
  %1793 = or i1 %1791, %1792
  %1794 = zext i1 %1793 to i8
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1794, i8* %1795, align 1
  %1796 = and i32 %1789, 255
  %1797 = call i32 @llvm.ctpop.i32(i32 %1796)
  %1798 = trunc i32 %1797 to i8
  %1799 = and i8 %1798, 1
  %1800 = xor i8 %1799, 1
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1800, i8* %1801, align 1
  %1802 = xor i32 %1788, %1786
  %1803 = xor i32 %1802, %1789
  %1804 = lshr i32 %1803, 4
  %1805 = trunc i32 %1804 to i8
  %1806 = and i8 %1805, 1
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1806, i8* %1807, align 1
  %1808 = icmp eq i32 %1789, 0
  %1809 = zext i1 %1808 to i8
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1809, i8* %1810, align 1
  %1811 = lshr i32 %1789, 31
  %1812 = trunc i32 %1811 to i8
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1812, i8* %1813, align 1
  %1814 = lshr i32 %1786, 31
  %1815 = lshr i32 %1788, 31
  %1816 = xor i32 %1811, %1814
  %1817 = xor i32 %1811, %1815
  %1818 = add i32 %1816, %1817
  %1819 = icmp eq i32 %1818, 2
  %1820 = zext i1 %1819 to i8
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1820, i8* %1821, align 1
  store %struct.Memory* %loadMem_4024e3, %struct.Memory** %MEMORY
  %loadMem_4024e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 33
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1824 to i64*
  %1825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1826 = getelementptr inbounds %struct.GPR, %struct.GPR* %1825, i32 0, i32 9
  %1827 = getelementptr inbounds %struct.Reg, %struct.Reg* %1826, i32 0, i32 0
  %ESI.i1081 = bitcast %union.anon* %1827 to i32*
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1829 = getelementptr inbounds %struct.GPR, %struct.GPR* %1828, i32 0, i32 9
  %1830 = getelementptr inbounds %struct.Reg, %struct.Reg* %1829, i32 0, i32 0
  %RSI.i1082 = bitcast %union.anon* %1830 to i64*
  %1831 = load i32, i32* %ESI.i1081
  %1832 = zext i32 %1831 to i64
  %1833 = load i64, i64* %PC.i1080
  %1834 = add i64 %1833, 2
  store i64 %1834, i64* %PC.i1080
  %1835 = and i64 %1832, 4294967295
  store i64 %1835, i64* %RSI.i1082, align 8
  store %struct.Memory* %loadMem_4024e6, %struct.Memory** %MEMORY
  %loadMem_4024e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1837 = getelementptr inbounds %struct.GPR, %struct.GPR* %1836, i32 0, i32 33
  %1838 = getelementptr inbounds %struct.Reg, %struct.Reg* %1837, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1838 to i64*
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1840 = getelementptr inbounds %struct.GPR, %struct.GPR* %1839, i32 0, i32 9
  %1841 = getelementptr inbounds %struct.Reg, %struct.Reg* %1840, i32 0, i32 0
  %ESI.i1078 = bitcast %union.anon* %1841 to i32*
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 5
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %RCX.i1079 = bitcast %union.anon* %1844 to i64*
  %1845 = load i32, i32* %ESI.i1078
  %1846 = zext i32 %1845 to i64
  %1847 = load i64, i64* %PC.i1077
  %1848 = add i64 %1847, 2
  store i64 %1848, i64* %PC.i1077
  %1849 = and i64 %1846, 4294967295
  store i64 %1849, i64* %RCX.i1079, align 8
  store %struct.Memory* %loadMem_4024e8, %struct.Memory** %MEMORY
  %loadMem_4024ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 33
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %1852 to i64*
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 11
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %1856 = bitcast %union.anon* %1855 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1856, i32 0, i32 0
  %1857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1858 = getelementptr inbounds %struct.GPR, %struct.GPR* %1857, i32 0, i32 11
  %1859 = getelementptr inbounds %struct.Reg, %struct.Reg* %1858, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %1859 to i64*
  %1860 = load i8, i8* %DIL.i
  %1861 = zext i8 %1860 to i64
  %1862 = load i64, i64* %PC.i1076
  %1863 = add i64 %1862, 4
  store i64 %1863, i64* %PC.i1076
  %1864 = and i64 %1861, 255
  store i64 %1864, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4024ea, %struct.Memory** %MEMORY
  %loadMem_4024ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 33
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %1867 to i64*
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 17
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %1871 = bitcast %union.anon* %1870 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1871, i32 0, i32 0
  %1872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1873 = getelementptr inbounds %struct.GPR, %struct.GPR* %1872, i32 0, i32 9
  %1874 = getelementptr inbounds %struct.Reg, %struct.Reg* %1873, i32 0, i32 0
  %RSI.i1075 = bitcast %union.anon* %1874 to i64*
  %1875 = load i8, i8* %R8B.i
  %1876 = zext i8 %1875 to i64
  %1877 = load i64, i64* %PC.i1074
  %1878 = add i64 %1877, 4
  store i64 %1878, i64* %PC.i1074
  %1879 = and i64 %1876, 255
  store i64 %1879, i64* %RSI.i1075, align 8
  store %struct.Memory* %loadMem_4024ee, %struct.Memory** %MEMORY
  %loadMem_4024f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 33
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %PC.i1070 = bitcast %union.anon* %1882 to i64*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 1
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %RAX.i1071 = bitcast %union.anon* %1885 to i64*
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 5
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %RCX.i1072 = bitcast %union.anon* %1888 to i64*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 7
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %RDX.i1073 = bitcast %union.anon* %1891 to i64*
  %1892 = load i64, i64* %RAX.i1071
  %1893 = load i64, i64* %RCX.i1072
  %1894 = add i64 %1893, %1892
  %1895 = load i64, i64* %PC.i1070
  %1896 = add i64 %1895, 4
  store i64 %1896, i64* %PC.i1070
  %1897 = inttoptr i64 %1894 to i8*
  %1898 = load i8, i8* %1897
  %1899 = zext i8 %1898 to i64
  store i64 %1899, i64* %RDX.i1073, align 8
  store %struct.Memory* %loadMem_4024f2, %struct.Memory** %MEMORY
  %loadMem1_4024f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1901 = getelementptr inbounds %struct.GPR, %struct.GPR* %1900, i32 0, i32 33
  %1902 = getelementptr inbounds %struct.Reg, %struct.Reg* %1901, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1902 to i64*
  %1903 = load i64, i64* %PC.i1069
  %1904 = add i64 %1903, 2490
  %1905 = load i64, i64* %PC.i1069
  %1906 = add i64 %1905, 5
  %1907 = load i64, i64* %PC.i1069
  %1908 = add i64 %1907, 5
  store i64 %1908, i64* %PC.i1069
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1910 = load i64, i64* %1909, align 8
  %1911 = add i64 %1910, -8
  %1912 = inttoptr i64 %1911 to i64*
  store i64 %1906, i64* %1912
  store i64 %1911, i64* %1909, align 8
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1904, i64* %1913, align 8
  store %struct.Memory* %loadMem1_4024f6, %struct.Memory** %MEMORY
  %loadMem2_4024f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4024f6 = load i64, i64* %3
  %call2_4024f6 = call %struct.Memory* @sub_402eb0.mmed3(%struct.State* %0, i64 %loadPC_4024f6, %struct.Memory* %loadMem2_4024f6)
  store %struct.Memory* %call2_4024f6, %struct.Memory** %MEMORY
  %loadMem_4024fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1915 = getelementptr inbounds %struct.GPR, %struct.GPR* %1914, i32 0, i32 33
  %1916 = getelementptr inbounds %struct.Reg, %struct.Reg* %1915, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %1916 to i64*
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1918 = getelementptr inbounds %struct.GPR, %struct.GPR* %1917, i32 0, i32 1
  %1919 = getelementptr inbounds %struct.Reg, %struct.Reg* %1918, i32 0, i32 0
  %1920 = bitcast %union.anon* %1919 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1920, i32 0, i32 0
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1922 = getelementptr inbounds %struct.GPR, %struct.GPR* %1921, i32 0, i32 7
  %1923 = getelementptr inbounds %struct.Reg, %struct.Reg* %1922, i32 0, i32 0
  %RDX.i1068 = bitcast %union.anon* %1923 to i64*
  %1924 = load i8, i8* %AL.i
  %1925 = zext i8 %1924 to i64
  %1926 = load i64, i64* %PC.i1067
  %1927 = add i64 %1926, 3
  store i64 %1927, i64* %PC.i1067
  %1928 = and i64 %1925, 255
  store i64 %1928, i64* %RDX.i1068, align 8
  store %struct.Memory* %loadMem_4024fb, %struct.Memory** %MEMORY
  %loadMem_4024fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1930 = getelementptr inbounds %struct.GPR, %struct.GPR* %1929, i32 0, i32 33
  %1931 = getelementptr inbounds %struct.Reg, %struct.Reg* %1930, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %1931 to i64*
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1933 = getelementptr inbounds %struct.GPR, %struct.GPR* %1932, i32 0, i32 7
  %1934 = getelementptr inbounds %struct.Reg, %struct.Reg* %1933, i32 0, i32 0
  %EDX.i1065 = bitcast %union.anon* %1934 to i32*
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1936 = getelementptr inbounds %struct.GPR, %struct.GPR* %1935, i32 0, i32 15
  %1937 = getelementptr inbounds %struct.Reg, %struct.Reg* %1936, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %1937 to i64*
  %1938 = load i64, i64* %RBP.i1066
  %1939 = sub i64 %1938, 76
  %1940 = load i32, i32* %EDX.i1065
  %1941 = zext i32 %1940 to i64
  %1942 = load i64, i64* %PC.i1064
  %1943 = add i64 %1942, 3
  store i64 %1943, i64* %PC.i1064
  %1944 = inttoptr i64 %1939 to i32*
  store i32 %1940, i32* %1944
  store %struct.Memory* %loadMem_4024fe, %struct.Memory** %MEMORY
  %loadMem_402501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1946 = getelementptr inbounds %struct.GPR, %struct.GPR* %1945, i32 0, i32 33
  %1947 = getelementptr inbounds %struct.Reg, %struct.Reg* %1946, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %1947 to i64*
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1949 = getelementptr inbounds %struct.GPR, %struct.GPR* %1948, i32 0, i32 7
  %1950 = getelementptr inbounds %struct.Reg, %struct.Reg* %1949, i32 0, i32 0
  %RDX.i1062 = bitcast %union.anon* %1950 to i64*
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1952 = getelementptr inbounds %struct.GPR, %struct.GPR* %1951, i32 0, i32 15
  %1953 = getelementptr inbounds %struct.Reg, %struct.Reg* %1952, i32 0, i32 0
  %RBP.i1063 = bitcast %union.anon* %1953 to i64*
  %1954 = load i64, i64* %RBP.i1063
  %1955 = sub i64 %1954, 84
  %1956 = load i64, i64* %PC.i1061
  %1957 = add i64 %1956, 3
  store i64 %1957, i64* %PC.i1061
  %1958 = inttoptr i64 %1955 to i32*
  %1959 = load i32, i32* %1958
  %1960 = zext i32 %1959 to i64
  store i64 %1960, i64* %RDX.i1062, align 8
  store %struct.Memory* %loadMem_402501, %struct.Memory** %MEMORY
  %loadMem_402504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 33
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %1963 to i64*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 7
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %EDX.i1059 = bitcast %union.anon* %1966 to i32*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 15
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %1969 to i64*
  %1970 = load i64, i64* %RBP.i1060
  %1971 = sub i64 %1970, 60
  %1972 = load i32, i32* %EDX.i1059
  %1973 = zext i32 %1972 to i64
  %1974 = load i64, i64* %PC.i1058
  %1975 = add i64 %1974, 3
  store i64 %1975, i64* %PC.i1058
  %1976 = inttoptr i64 %1971 to i32*
  store i32 %1972, i32* %1976
  store %struct.Memory* %loadMem_402504, %struct.Memory** %MEMORY
  %loadMem_402507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1978 = getelementptr inbounds %struct.GPR, %struct.GPR* %1977, i32 0, i32 33
  %1979 = getelementptr inbounds %struct.Reg, %struct.Reg* %1978, i32 0, i32 0
  %PC.i1055 = bitcast %union.anon* %1979 to i64*
  %1980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1981 = getelementptr inbounds %struct.GPR, %struct.GPR* %1980, i32 0, i32 7
  %1982 = getelementptr inbounds %struct.Reg, %struct.Reg* %1981, i32 0, i32 0
  %EDX.i1056 = bitcast %union.anon* %1982 to i32*
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1984 = getelementptr inbounds %struct.GPR, %struct.GPR* %1983, i32 0, i32 15
  %1985 = getelementptr inbounds %struct.Reg, %struct.Reg* %1984, i32 0, i32 0
  %RBP.i1057 = bitcast %union.anon* %1985 to i64*
  %1986 = load i64, i64* %RBP.i1057
  %1987 = sub i64 %1986, 52
  %1988 = load i32, i32* %EDX.i1056
  %1989 = zext i32 %1988 to i64
  %1990 = load i64, i64* %PC.i1055
  %1991 = add i64 %1990, 3
  store i64 %1991, i64* %PC.i1055
  %1992 = inttoptr i64 %1987 to i32*
  store i32 %1988, i32* %1992
  store %struct.Memory* %loadMem_402507, %struct.Memory** %MEMORY
  %loadMem_40250a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1994 = getelementptr inbounds %struct.GPR, %struct.GPR* %1993, i32 0, i32 33
  %1995 = getelementptr inbounds %struct.Reg, %struct.Reg* %1994, i32 0, i32 0
  %PC.i1052 = bitcast %union.anon* %1995 to i64*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1997 = getelementptr inbounds %struct.GPR, %struct.GPR* %1996, i32 0, i32 7
  %1998 = getelementptr inbounds %struct.Reg, %struct.Reg* %1997, i32 0, i32 0
  %RDX.i1053 = bitcast %union.anon* %1998 to i64*
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2000 = getelementptr inbounds %struct.GPR, %struct.GPR* %1999, i32 0, i32 15
  %2001 = getelementptr inbounds %struct.Reg, %struct.Reg* %2000, i32 0, i32 0
  %RBP.i1054 = bitcast %union.anon* %2001 to i64*
  %2002 = load i64, i64* %RBP.i1054
  %2003 = sub i64 %2002, 88
  %2004 = load i64, i64* %PC.i1052
  %2005 = add i64 %2004, 3
  store i64 %2005, i64* %PC.i1052
  %2006 = inttoptr i64 %2003 to i32*
  %2007 = load i32, i32* %2006
  %2008 = zext i32 %2007 to i64
  store i64 %2008, i64* %RDX.i1053, align 8
  store %struct.Memory* %loadMem_40250a, %struct.Memory** %MEMORY
  %loadMem_40250d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 33
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %2011 to i64*
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2013 = getelementptr inbounds %struct.GPR, %struct.GPR* %2012, i32 0, i32 7
  %2014 = getelementptr inbounds %struct.Reg, %struct.Reg* %2013, i32 0, i32 0
  %EDX.i1050 = bitcast %union.anon* %2014 to i32*
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2016 = getelementptr inbounds %struct.GPR, %struct.GPR* %2015, i32 0, i32 15
  %2017 = getelementptr inbounds %struct.Reg, %struct.Reg* %2016, i32 0, i32 0
  %RBP.i1051 = bitcast %union.anon* %2017 to i64*
  %2018 = load i64, i64* %RBP.i1051
  %2019 = sub i64 %2018, 64
  %2020 = load i32, i32* %EDX.i1050
  %2021 = zext i32 %2020 to i64
  %2022 = load i64, i64* %PC.i1049
  %2023 = add i64 %2022, 3
  store i64 %2023, i64* %PC.i1049
  %2024 = inttoptr i64 %2019 to i32*
  store i32 %2020, i32* %2024
  store %struct.Memory* %loadMem_40250d, %struct.Memory** %MEMORY
  %loadMem_402510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 33
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %2027 to i64*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 7
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %EDX.i1047 = bitcast %union.anon* %2030 to i32*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2032 = getelementptr inbounds %struct.GPR, %struct.GPR* %2031, i32 0, i32 15
  %2033 = getelementptr inbounds %struct.Reg, %struct.Reg* %2032, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %2033 to i64*
  %2034 = load i64, i64* %RBP.i1048
  %2035 = sub i64 %2034, 56
  %2036 = load i32, i32* %EDX.i1047
  %2037 = zext i32 %2036 to i64
  %2038 = load i64, i64* %PC.i1046
  %2039 = add i64 %2038, 3
  store i64 %2039, i64* %PC.i1046
  %2040 = inttoptr i64 %2035 to i32*
  store i32 %2036, i32* %2040
  store %struct.Memory* %loadMem_402510, %struct.Memory** %MEMORY
  br label %block_.L_402513

block_.L_402513:                                  ; preds = %block_.L_40267c, %block_.L_402498
  %loadMem_402513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2042 = getelementptr inbounds %struct.GPR, %struct.GPR* %2041, i32 0, i32 33
  %2043 = getelementptr inbounds %struct.Reg, %struct.Reg* %2042, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %2043 to i64*
  %2044 = load i64, i64* %PC.i1045
  %2045 = add i64 %2044, 5
  %2046 = load i64, i64* %PC.i1045
  %2047 = add i64 %2046, 5
  store i64 %2047, i64* %PC.i1045
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2045, i64* %2048, align 8
  store %struct.Memory* %loadMem_402513, %struct.Memory** %MEMORY
  br label %block_.L_402518

block_.L_402518:                                  ; preds = %block_.L_4025b1, %block_402553, %block_.L_402513
  %loadMem_402518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 1
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %2054 to i64*
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2056 = getelementptr inbounds %struct.GPR, %struct.GPR* %2055, i32 0, i32 15
  %2057 = getelementptr inbounds %struct.Reg, %struct.Reg* %2056, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %2057 to i64*
  %2058 = load i64, i64* %RBP.i1044
  %2059 = sub i64 %2058, 52
  %2060 = load i64, i64* %PC.i1042
  %2061 = add i64 %2060, 3
  store i64 %2061, i64* %PC.i1042
  %2062 = inttoptr i64 %2059 to i32*
  %2063 = load i32, i32* %2062
  %2064 = zext i32 %2063 to i64
  store i64 %2064, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_402518, %struct.Memory** %MEMORY
  %loadMem_40251b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2066 = getelementptr inbounds %struct.GPR, %struct.GPR* %2065, i32 0, i32 33
  %2067 = getelementptr inbounds %struct.Reg, %struct.Reg* %2066, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %2067 to i64*
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2069 = getelementptr inbounds %struct.GPR, %struct.GPR* %2068, i32 0, i32 1
  %2070 = getelementptr inbounds %struct.Reg, %struct.Reg* %2069, i32 0, i32 0
  %EAX.i1040 = bitcast %union.anon* %2070 to i32*
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2072 = getelementptr inbounds %struct.GPR, %struct.GPR* %2071, i32 0, i32 15
  %2073 = getelementptr inbounds %struct.Reg, %struct.Reg* %2072, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %2073 to i64*
  %2074 = load i32, i32* %EAX.i1040
  %2075 = zext i32 %2074 to i64
  %2076 = load i64, i64* %RBP.i1041
  %2077 = sub i64 %2076, 56
  %2078 = load i64, i64* %PC.i1039
  %2079 = add i64 %2078, 3
  store i64 %2079, i64* %PC.i1039
  %2080 = inttoptr i64 %2077 to i32*
  %2081 = load i32, i32* %2080
  %2082 = sub i32 %2074, %2081
  %2083 = icmp ult i32 %2074, %2081
  %2084 = zext i1 %2083 to i8
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2084, i8* %2085, align 1
  %2086 = and i32 %2082, 255
  %2087 = call i32 @llvm.ctpop.i32(i32 %2086)
  %2088 = trunc i32 %2087 to i8
  %2089 = and i8 %2088, 1
  %2090 = xor i8 %2089, 1
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2090, i8* %2091, align 1
  %2092 = xor i32 %2081, %2074
  %2093 = xor i32 %2092, %2082
  %2094 = lshr i32 %2093, 4
  %2095 = trunc i32 %2094 to i8
  %2096 = and i8 %2095, 1
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2096, i8* %2097, align 1
  %2098 = icmp eq i32 %2082, 0
  %2099 = zext i1 %2098 to i8
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2099, i8* %2100, align 1
  %2101 = lshr i32 %2082, 31
  %2102 = trunc i32 %2101 to i8
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2102, i8* %2103, align 1
  %2104 = lshr i32 %2074, 31
  %2105 = lshr i32 %2081, 31
  %2106 = xor i32 %2105, %2104
  %2107 = xor i32 %2101, %2104
  %2108 = add i32 %2107, %2106
  %2109 = icmp eq i32 %2108, 2
  %2110 = zext i1 %2109 to i8
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2110, i8* %2111, align 1
  store %struct.Memory* %loadMem_40251b, %struct.Memory** %MEMORY
  %loadMem_40251e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2113 = getelementptr inbounds %struct.GPR, %struct.GPR* %2112, i32 0, i32 33
  %2114 = getelementptr inbounds %struct.Reg, %struct.Reg* %2113, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %2114 to i64*
  %2115 = load i64, i64* %PC.i1038
  %2116 = add i64 %2115, 11
  %2117 = load i64, i64* %PC.i1038
  %2118 = add i64 %2117, 6
  %2119 = load i64, i64* %PC.i1038
  %2120 = add i64 %2119, 6
  store i64 %2120, i64* %PC.i1038
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2122 = load i8, i8* %2121, align 1
  %2123 = icmp ne i8 %2122, 0
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2125 = load i8, i8* %2124, align 1
  %2126 = icmp ne i8 %2125, 0
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2128 = load i8, i8* %2127, align 1
  %2129 = icmp ne i8 %2128, 0
  %2130 = xor i1 %2126, %2129
  %2131 = or i1 %2123, %2130
  %2132 = zext i1 %2131 to i8
  store i8 %2132, i8* %BRANCH_TAKEN, align 1
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2134 = select i1 %2131, i64 %2116, i64 %2118
  store i64 %2134, i64* %2133, align 8
  store %struct.Memory* %loadMem_40251e, %struct.Memory** %MEMORY
  %loadBr_40251e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40251e = icmp eq i8 %loadBr_40251e, 1
  br i1 %cmpBr_40251e, label %block_.L_402529, label %block_402524

block_402524:                                     ; preds = %block_.L_402518
  %loadMem_402524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 33
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %2137 to i64*
  %2138 = load i64, i64* %PC.i1037
  %2139 = add i64 %2138, 155
  %2140 = load i64, i64* %PC.i1037
  %2141 = add i64 %2140, 5
  store i64 %2141, i64* %PC.i1037
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2139, i64* %2142, align 8
  store %struct.Memory* %loadMem_402524, %struct.Memory** %MEMORY
  br label %block_.L_4025bf

block_.L_402529:                                  ; preds = %block_.L_402518
  %loadMem_402529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2144 = getelementptr inbounds %struct.GPR, %struct.GPR* %2143, i32 0, i32 33
  %2145 = getelementptr inbounds %struct.Reg, %struct.Reg* %2144, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %2145 to i64*
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 1
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %2148 to i64*
  %2149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2150 = getelementptr inbounds %struct.GPR, %struct.GPR* %2149, i32 0, i32 15
  %2151 = getelementptr inbounds %struct.Reg, %struct.Reg* %2150, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %2151 to i64*
  %2152 = load i64, i64* %RBP.i1036
  %2153 = sub i64 %2152, 16
  %2154 = load i64, i64* %PC.i1034
  %2155 = add i64 %2154, 4
  store i64 %2155, i64* %PC.i1034
  %2156 = inttoptr i64 %2153 to i64*
  %2157 = load i64, i64* %2156
  store i64 %2157, i64* %RAX.i1035, align 8
  store %struct.Memory* %loadMem_402529, %struct.Memory** %MEMORY
  %loadMem_40252d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2159 = getelementptr inbounds %struct.GPR, %struct.GPR* %2158, i32 0, i32 33
  %2160 = getelementptr inbounds %struct.Reg, %struct.Reg* %2159, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %2160 to i64*
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2162 = getelementptr inbounds %struct.GPR, %struct.GPR* %2161, i32 0, i32 5
  %2163 = getelementptr inbounds %struct.Reg, %struct.Reg* %2162, i32 0, i32 0
  %RCX.i1032 = bitcast %union.anon* %2163 to i64*
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2165 = getelementptr inbounds %struct.GPR, %struct.GPR* %2164, i32 0, i32 15
  %2166 = getelementptr inbounds %struct.Reg, %struct.Reg* %2165, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %2166 to i64*
  %2167 = load i64, i64* %RBP.i1033
  %2168 = sub i64 %2167, 8
  %2169 = load i64, i64* %PC.i1031
  %2170 = add i64 %2169, 4
  store i64 %2170, i64* %PC.i1031
  %2171 = inttoptr i64 %2168 to i64*
  %2172 = load i64, i64* %2171
  store i64 %2172, i64* %RCX.i1032, align 8
  store %struct.Memory* %loadMem_40252d, %struct.Memory** %MEMORY
  %loadMem_402531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2174 = getelementptr inbounds %struct.GPR, %struct.GPR* %2173, i32 0, i32 33
  %2175 = getelementptr inbounds %struct.Reg, %struct.Reg* %2174, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %2175 to i64*
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2177 = getelementptr inbounds %struct.GPR, %struct.GPR* %2176, i32 0, i32 7
  %2178 = getelementptr inbounds %struct.Reg, %struct.Reg* %2177, i32 0, i32 0
  %RDX.i1029 = bitcast %union.anon* %2178 to i64*
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2180 = getelementptr inbounds %struct.GPR, %struct.GPR* %2179, i32 0, i32 15
  %2181 = getelementptr inbounds %struct.Reg, %struct.Reg* %2180, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %2181 to i64*
  %2182 = load i64, i64* %RBP.i1030
  %2183 = sub i64 %2182, 52
  %2184 = load i64, i64* %PC.i1028
  %2185 = add i64 %2184, 4
  store i64 %2185, i64* %PC.i1028
  %2186 = inttoptr i64 %2183 to i32*
  %2187 = load i32, i32* %2186
  %2188 = sext i32 %2187 to i64
  store i64 %2188, i64* %RDX.i1029, align 8
  store %struct.Memory* %loadMem_402531, %struct.Memory** %MEMORY
  %loadMem_402535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2190 = getelementptr inbounds %struct.GPR, %struct.GPR* %2189, i32 0, i32 33
  %2191 = getelementptr inbounds %struct.Reg, %struct.Reg* %2190, i32 0, i32 0
  %PC.i1024 = bitcast %union.anon* %2191 to i64*
  %2192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2193 = getelementptr inbounds %struct.GPR, %struct.GPR* %2192, i32 0, i32 5
  %2194 = getelementptr inbounds %struct.Reg, %struct.Reg* %2193, i32 0, i32 0
  %RCX.i1025 = bitcast %union.anon* %2194 to i64*
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2196 = getelementptr inbounds %struct.GPR, %struct.GPR* %2195, i32 0, i32 7
  %2197 = getelementptr inbounds %struct.Reg, %struct.Reg* %2196, i32 0, i32 0
  %RDX.i1026 = bitcast %union.anon* %2197 to i64*
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2199 = getelementptr inbounds %struct.GPR, %struct.GPR* %2198, i32 0, i32 9
  %2200 = getelementptr inbounds %struct.Reg, %struct.Reg* %2199, i32 0, i32 0
  %RSI.i1027 = bitcast %union.anon* %2200 to i64*
  %2201 = load i64, i64* %RCX.i1025
  %2202 = load i64, i64* %RDX.i1026
  %2203 = mul i64 %2202, 4
  %2204 = add i64 %2203, %2201
  %2205 = load i64, i64* %PC.i1024
  %2206 = add i64 %2205, 3
  store i64 %2206, i64* %PC.i1024
  %2207 = inttoptr i64 %2204 to i32*
  %2208 = load i32, i32* %2207
  %2209 = zext i32 %2208 to i64
  store i64 %2209, i64* %RSI.i1027, align 8
  store %struct.Memory* %loadMem_402535, %struct.Memory** %MEMORY
  %loadMem_402538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2211 = getelementptr inbounds %struct.GPR, %struct.GPR* %2210, i32 0, i32 33
  %2212 = getelementptr inbounds %struct.Reg, %struct.Reg* %2211, i32 0, i32 0
  %PC.i1021 = bitcast %union.anon* %2212 to i64*
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2214 = getelementptr inbounds %struct.GPR, %struct.GPR* %2213, i32 0, i32 9
  %2215 = getelementptr inbounds %struct.Reg, %struct.Reg* %2214, i32 0, i32 0
  %RSI.i1022 = bitcast %union.anon* %2215 to i64*
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2217 = getelementptr inbounds %struct.GPR, %struct.GPR* %2216, i32 0, i32 15
  %2218 = getelementptr inbounds %struct.Reg, %struct.Reg* %2217, i32 0, i32 0
  %RBP.i1023 = bitcast %union.anon* %2218 to i64*
  %2219 = load i64, i64* %RSI.i1022
  %2220 = load i64, i64* %RBP.i1023
  %2221 = sub i64 %2220, 92
  %2222 = load i64, i64* %PC.i1021
  %2223 = add i64 %2222, 3
  store i64 %2223, i64* %PC.i1021
  %2224 = trunc i64 %2219 to i32
  %2225 = inttoptr i64 %2221 to i32*
  %2226 = load i32, i32* %2225
  %2227 = add i32 %2226, %2224
  %2228 = zext i32 %2227 to i64
  store i64 %2228, i64* %RSI.i1022, align 8
  %2229 = icmp ult i32 %2227, %2224
  %2230 = icmp ult i32 %2227, %2226
  %2231 = or i1 %2229, %2230
  %2232 = zext i1 %2231 to i8
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2232, i8* %2233, align 1
  %2234 = and i32 %2227, 255
  %2235 = call i32 @llvm.ctpop.i32(i32 %2234)
  %2236 = trunc i32 %2235 to i8
  %2237 = and i8 %2236, 1
  %2238 = xor i8 %2237, 1
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2238, i8* %2239, align 1
  %2240 = xor i32 %2226, %2224
  %2241 = xor i32 %2240, %2227
  %2242 = lshr i32 %2241, 4
  %2243 = trunc i32 %2242 to i8
  %2244 = and i8 %2243, 1
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2244, i8* %2245, align 1
  %2246 = icmp eq i32 %2227, 0
  %2247 = zext i1 %2246 to i8
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2247, i8* %2248, align 1
  %2249 = lshr i32 %2227, 31
  %2250 = trunc i32 %2249 to i8
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2250, i8* %2251, align 1
  %2252 = lshr i32 %2224, 31
  %2253 = lshr i32 %2226, 31
  %2254 = xor i32 %2249, %2252
  %2255 = xor i32 %2249, %2253
  %2256 = add i32 %2254, %2255
  %2257 = icmp eq i32 %2256, 2
  %2258 = zext i1 %2257 to i8
  %2259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2258, i8* %2259, align 1
  store %struct.Memory* %loadMem_402538, %struct.Memory** %MEMORY
  %loadMem_40253b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 9
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %ESI.i1019 = bitcast %union.anon* %2265 to i32*
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2267 = getelementptr inbounds %struct.GPR, %struct.GPR* %2266, i32 0, i32 9
  %2268 = getelementptr inbounds %struct.Reg, %struct.Reg* %2267, i32 0, i32 0
  %RSI.i1020 = bitcast %union.anon* %2268 to i64*
  %2269 = load i32, i32* %ESI.i1019
  %2270 = zext i32 %2269 to i64
  %2271 = load i64, i64* %PC.i1018
  %2272 = add i64 %2271, 2
  store i64 %2272, i64* %PC.i1018
  %2273 = and i64 %2270, 4294967295
  store i64 %2273, i64* %RSI.i1020, align 8
  store %struct.Memory* %loadMem_40253b, %struct.Memory** %MEMORY
  %loadMem_40253d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2275 = getelementptr inbounds %struct.GPR, %struct.GPR* %2274, i32 0, i32 33
  %2276 = getelementptr inbounds %struct.Reg, %struct.Reg* %2275, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %2276 to i64*
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 9
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %ESI.i1016 = bitcast %union.anon* %2279 to i32*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 5
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %2282 to i64*
  %2283 = load i32, i32* %ESI.i1016
  %2284 = zext i32 %2283 to i64
  %2285 = load i64, i64* %PC.i1015
  %2286 = add i64 %2285, 2
  store i64 %2286, i64* %PC.i1015
  %2287 = and i64 %2284, 4294967295
  store i64 %2287, i64* %RCX.i1017, align 8
  store %struct.Memory* %loadMem_40253d, %struct.Memory** %MEMORY
  %loadMem_40253f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2289 = getelementptr inbounds %struct.GPR, %struct.GPR* %2288, i32 0, i32 33
  %2290 = getelementptr inbounds %struct.Reg, %struct.Reg* %2289, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %2290 to i64*
  %2291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2292 = getelementptr inbounds %struct.GPR, %struct.GPR* %2291, i32 0, i32 1
  %2293 = getelementptr inbounds %struct.Reg, %struct.Reg* %2292, i32 0, i32 0
  %RAX.i1012 = bitcast %union.anon* %2293 to i64*
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2295 = getelementptr inbounds %struct.GPR, %struct.GPR* %2294, i32 0, i32 5
  %2296 = getelementptr inbounds %struct.Reg, %struct.Reg* %2295, i32 0, i32 0
  %RCX.i1013 = bitcast %union.anon* %2296 to i64*
  %2297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2298 = getelementptr inbounds %struct.GPR, %struct.GPR* %2297, i32 0, i32 9
  %2299 = getelementptr inbounds %struct.Reg, %struct.Reg* %2298, i32 0, i32 0
  %RSI.i1014 = bitcast %union.anon* %2299 to i64*
  %2300 = load i64, i64* %RAX.i1012
  %2301 = load i64, i64* %RCX.i1013
  %2302 = add i64 %2301, %2300
  %2303 = load i64, i64* %PC.i1011
  %2304 = add i64 %2303, 4
  store i64 %2304, i64* %PC.i1011
  %2305 = inttoptr i64 %2302 to i8*
  %2306 = load i8, i8* %2305
  %2307 = zext i8 %2306 to i64
  store i64 %2307, i64* %RSI.i1014, align 8
  store %struct.Memory* %loadMem_40253f, %struct.Memory** %MEMORY
  %loadMem_402543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 33
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 9
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %RSI.i1009 = bitcast %union.anon* %2313 to i64*
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2315 = getelementptr inbounds %struct.GPR, %struct.GPR* %2314, i32 0, i32 15
  %2316 = getelementptr inbounds %struct.Reg, %struct.Reg* %2315, i32 0, i32 0
  %RBP.i1010 = bitcast %union.anon* %2316 to i64*
  %2317 = load i64, i64* %RSI.i1009
  %2318 = load i64, i64* %RBP.i1010
  %2319 = sub i64 %2318, 76
  %2320 = load i64, i64* %PC.i1008
  %2321 = add i64 %2320, 3
  store i64 %2321, i64* %PC.i1008
  %2322 = trunc i64 %2317 to i32
  %2323 = inttoptr i64 %2319 to i32*
  %2324 = load i32, i32* %2323
  %2325 = sub i32 %2322, %2324
  %2326 = zext i32 %2325 to i64
  store i64 %2326, i64* %RSI.i1009, align 8
  %2327 = icmp ult i32 %2322, %2324
  %2328 = zext i1 %2327 to i8
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2328, i8* %2329, align 1
  %2330 = and i32 %2325, 255
  %2331 = call i32 @llvm.ctpop.i32(i32 %2330)
  %2332 = trunc i32 %2331 to i8
  %2333 = and i8 %2332, 1
  %2334 = xor i8 %2333, 1
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2334, i8* %2335, align 1
  %2336 = xor i32 %2324, %2322
  %2337 = xor i32 %2336, %2325
  %2338 = lshr i32 %2337, 4
  %2339 = trunc i32 %2338 to i8
  %2340 = and i8 %2339, 1
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2340, i8* %2341, align 1
  %2342 = icmp eq i32 %2325, 0
  %2343 = zext i1 %2342 to i8
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2343, i8* %2344, align 1
  %2345 = lshr i32 %2325, 31
  %2346 = trunc i32 %2345 to i8
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2346, i8* %2347, align 1
  %2348 = lshr i32 %2322, 31
  %2349 = lshr i32 %2324, 31
  %2350 = xor i32 %2349, %2348
  %2351 = xor i32 %2345, %2348
  %2352 = add i32 %2351, %2350
  %2353 = icmp eq i32 %2352, 2
  %2354 = zext i1 %2353 to i8
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2354, i8* %2355, align 1
  store %struct.Memory* %loadMem_402543, %struct.Memory** %MEMORY
  %loadMem_402546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2357 = getelementptr inbounds %struct.GPR, %struct.GPR* %2356, i32 0, i32 33
  %2358 = getelementptr inbounds %struct.Reg, %struct.Reg* %2357, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %2358 to i64*
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2360 = getelementptr inbounds %struct.GPR, %struct.GPR* %2359, i32 0, i32 9
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %ESI.i1006 = bitcast %union.anon* %2361 to i32*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2363 = getelementptr inbounds %struct.GPR, %struct.GPR* %2362, i32 0, i32 15
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %2364 to i64*
  %2365 = load i64, i64* %RBP.i1007
  %2366 = sub i64 %2365, 68
  %2367 = load i32, i32* %ESI.i1006
  %2368 = zext i32 %2367 to i64
  %2369 = load i64, i64* %PC.i1005
  %2370 = add i64 %2369, 3
  store i64 %2370, i64* %PC.i1005
  %2371 = inttoptr i64 %2366 to i32*
  store i32 %2367, i32* %2371
  store %struct.Memory* %loadMem_402546, %struct.Memory** %MEMORY
  %loadMem_402549 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2373 = getelementptr inbounds %struct.GPR, %struct.GPR* %2372, i32 0, i32 33
  %2374 = getelementptr inbounds %struct.Reg, %struct.Reg* %2373, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %2374 to i64*
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2376 = getelementptr inbounds %struct.GPR, %struct.GPR* %2375, i32 0, i32 15
  %2377 = getelementptr inbounds %struct.Reg, %struct.Reg* %2376, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %2377 to i64*
  %2378 = load i64, i64* %RBP.i1004
  %2379 = sub i64 %2378, 68
  %2380 = load i64, i64* %PC.i1003
  %2381 = add i64 %2380, 4
  store i64 %2381, i64* %PC.i1003
  %2382 = inttoptr i64 %2379 to i32*
  %2383 = load i32, i32* %2382
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2384, align 1
  %2385 = and i32 %2383, 255
  %2386 = call i32 @llvm.ctpop.i32(i32 %2385)
  %2387 = trunc i32 %2386 to i8
  %2388 = and i8 %2387, 1
  %2389 = xor i8 %2388, 1
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2389, i8* %2390, align 1
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2391, align 1
  %2392 = icmp eq i32 %2383, 0
  %2393 = zext i1 %2392 to i8
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2393, i8* %2394, align 1
  %2395 = lshr i32 %2383, 31
  %2396 = trunc i32 %2395 to i8
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2396, i8* %2397, align 1
  %2398 = lshr i32 %2383, 31
  %2399 = xor i32 %2395, %2398
  %2400 = add i32 %2399, %2398
  %2401 = icmp eq i32 %2400, 2
  %2402 = zext i1 %2401 to i8
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2402, i8* %2403, align 1
  store %struct.Memory* %loadMem_402549, %struct.Memory** %MEMORY
  %loadMem_40254d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2405 = getelementptr inbounds %struct.GPR, %struct.GPR* %2404, i32 0, i32 33
  %2406 = getelementptr inbounds %struct.Reg, %struct.Reg* %2405, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %2406 to i64*
  %2407 = load i64, i64* %PC.i1002
  %2408 = add i64 %2407, 85
  %2409 = load i64, i64* %PC.i1002
  %2410 = add i64 %2409, 6
  %2411 = load i64, i64* %PC.i1002
  %2412 = add i64 %2411, 6
  store i64 %2412, i64* %PC.i1002
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2414 = load i8, i8* %2413, align 1
  %2415 = icmp eq i8 %2414, 0
  %2416 = zext i1 %2415 to i8
  store i8 %2416, i8* %BRANCH_TAKEN, align 1
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2418 = select i1 %2415, i64 %2408, i64 %2410
  store i64 %2418, i64* %2417, align 8
  store %struct.Memory* %loadMem_40254d, %struct.Memory** %MEMORY
  %loadBr_40254d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40254d = icmp eq i8 %loadBr_40254d, 1
  br i1 %cmpBr_40254d, label %block_.L_4025a2, label %block_402553

block_402553:                                     ; preds = %block_.L_402529
  %loadMem_402553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2420 = getelementptr inbounds %struct.GPR, %struct.GPR* %2419, i32 0, i32 33
  %2421 = getelementptr inbounds %struct.Reg, %struct.Reg* %2420, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %2421 to i64*
  %2422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2423 = getelementptr inbounds %struct.GPR, %struct.GPR* %2422, i32 0, i32 1
  %2424 = getelementptr inbounds %struct.Reg, %struct.Reg* %2423, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %2424 to i64*
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2426 = getelementptr inbounds %struct.GPR, %struct.GPR* %2425, i32 0, i32 15
  %2427 = getelementptr inbounds %struct.Reg, %struct.Reg* %2426, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %2427 to i64*
  %2428 = load i64, i64* %RBP.i1001
  %2429 = sub i64 %2428, 8
  %2430 = load i64, i64* %PC.i999
  %2431 = add i64 %2430, 4
  store i64 %2431, i64* %PC.i999
  %2432 = inttoptr i64 %2429 to i64*
  %2433 = load i64, i64* %2432
  store i64 %2433, i64* %RAX.i1000, align 8
  store %struct.Memory* %loadMem_402553, %struct.Memory** %MEMORY
  %loadMem_402557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2435 = getelementptr inbounds %struct.GPR, %struct.GPR* %2434, i32 0, i32 33
  %2436 = getelementptr inbounds %struct.Reg, %struct.Reg* %2435, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %2436 to i64*
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 5
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %RCX.i997 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 15
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %2442 to i64*
  %2443 = load i64, i64* %RBP.i998
  %2444 = sub i64 %2443, 52
  %2445 = load i64, i64* %PC.i996
  %2446 = add i64 %2445, 4
  store i64 %2446, i64* %PC.i996
  %2447 = inttoptr i64 %2444 to i32*
  %2448 = load i32, i32* %2447
  %2449 = sext i32 %2448 to i64
  store i64 %2449, i64* %RCX.i997, align 8
  store %struct.Memory* %loadMem_402557, %struct.Memory** %MEMORY
  %loadMem_40255b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2451 = getelementptr inbounds %struct.GPR, %struct.GPR* %2450, i32 0, i32 33
  %2452 = getelementptr inbounds %struct.Reg, %struct.Reg* %2451, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %2452 to i64*
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2454 = getelementptr inbounds %struct.GPR, %struct.GPR* %2453, i32 0, i32 1
  %2455 = getelementptr inbounds %struct.Reg, %struct.Reg* %2454, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %2455 to i64*
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 5
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %RCX.i994 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 7
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %RDX.i995 = bitcast %union.anon* %2461 to i64*
  %2462 = load i64, i64* %RAX.i993
  %2463 = load i64, i64* %RCX.i994
  %2464 = mul i64 %2463, 4
  %2465 = add i64 %2464, %2462
  %2466 = load i64, i64* %PC.i992
  %2467 = add i64 %2466, 3
  store i64 %2467, i64* %PC.i992
  %2468 = inttoptr i64 %2465 to i32*
  %2469 = load i32, i32* %2468
  %2470 = zext i32 %2469 to i64
  store i64 %2470, i64* %RDX.i995, align 8
  store %struct.Memory* %loadMem_40255b, %struct.Memory** %MEMORY
  %loadMem_40255e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 33
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %2473 to i64*
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 7
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %EDX.i990 = bitcast %union.anon* %2476 to i32*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 15
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %RBP.i991 = bitcast %union.anon* %2479 to i64*
  %2480 = load i64, i64* %RBP.i991
  %2481 = sub i64 %2480, 1336
  %2482 = load i32, i32* %EDX.i990
  %2483 = zext i32 %2482 to i64
  %2484 = load i64, i64* %PC.i989
  %2485 = add i64 %2484, 6
  store i64 %2485, i64* %PC.i989
  %2486 = inttoptr i64 %2481 to i32*
  store i32 %2482, i32* %2486
  store %struct.Memory* %loadMem_40255e, %struct.Memory** %MEMORY
  %loadMem_402564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2488 = getelementptr inbounds %struct.GPR, %struct.GPR* %2487, i32 0, i32 33
  %2489 = getelementptr inbounds %struct.Reg, %struct.Reg* %2488, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %2489 to i64*
  %2490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2491 = getelementptr inbounds %struct.GPR, %struct.GPR* %2490, i32 0, i32 1
  %2492 = getelementptr inbounds %struct.Reg, %struct.Reg* %2491, i32 0, i32 0
  %RAX.i987 = bitcast %union.anon* %2492 to i64*
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2494 = getelementptr inbounds %struct.GPR, %struct.GPR* %2493, i32 0, i32 15
  %2495 = getelementptr inbounds %struct.Reg, %struct.Reg* %2494, i32 0, i32 0
  %RBP.i988 = bitcast %union.anon* %2495 to i64*
  %2496 = load i64, i64* %RBP.i988
  %2497 = sub i64 %2496, 8
  %2498 = load i64, i64* %PC.i986
  %2499 = add i64 %2498, 4
  store i64 %2499, i64* %PC.i986
  %2500 = inttoptr i64 %2497 to i64*
  %2501 = load i64, i64* %2500
  store i64 %2501, i64* %RAX.i987, align 8
  store %struct.Memory* %loadMem_402564, %struct.Memory** %MEMORY
  %loadMem_402568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2503 = getelementptr inbounds %struct.GPR, %struct.GPR* %2502, i32 0, i32 33
  %2504 = getelementptr inbounds %struct.Reg, %struct.Reg* %2503, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %2504 to i64*
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2506 = getelementptr inbounds %struct.GPR, %struct.GPR* %2505, i32 0, i32 5
  %2507 = getelementptr inbounds %struct.Reg, %struct.Reg* %2506, i32 0, i32 0
  %RCX.i984 = bitcast %union.anon* %2507 to i64*
  %2508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2509 = getelementptr inbounds %struct.GPR, %struct.GPR* %2508, i32 0, i32 15
  %2510 = getelementptr inbounds %struct.Reg, %struct.Reg* %2509, i32 0, i32 0
  %RBP.i985 = bitcast %union.anon* %2510 to i64*
  %2511 = load i64, i64* %RBP.i985
  %2512 = sub i64 %2511, 60
  %2513 = load i64, i64* %PC.i983
  %2514 = add i64 %2513, 4
  store i64 %2514, i64* %PC.i983
  %2515 = inttoptr i64 %2512 to i32*
  %2516 = load i32, i32* %2515
  %2517 = sext i32 %2516 to i64
  store i64 %2517, i64* %RCX.i984, align 8
  store %struct.Memory* %loadMem_402568, %struct.Memory** %MEMORY
  %loadMem_40256c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2519 = getelementptr inbounds %struct.GPR, %struct.GPR* %2518, i32 0, i32 33
  %2520 = getelementptr inbounds %struct.Reg, %struct.Reg* %2519, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2520 to i64*
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 1
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %RAX.i980 = bitcast %union.anon* %2523 to i64*
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 5
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %RCX.i981 = bitcast %union.anon* %2526 to i64*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 7
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %RDX.i982 = bitcast %union.anon* %2529 to i64*
  %2530 = load i64, i64* %RAX.i980
  %2531 = load i64, i64* %RCX.i981
  %2532 = mul i64 %2531, 4
  %2533 = add i64 %2532, %2530
  %2534 = load i64, i64* %PC.i979
  %2535 = add i64 %2534, 3
  store i64 %2535, i64* %PC.i979
  %2536 = inttoptr i64 %2533 to i32*
  %2537 = load i32, i32* %2536
  %2538 = zext i32 %2537 to i64
  store i64 %2538, i64* %RDX.i982, align 8
  store %struct.Memory* %loadMem_40256c, %struct.Memory** %MEMORY
  %loadMem_40256f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 33
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %2541 to i64*
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 1
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %RAX.i977 = bitcast %union.anon* %2544 to i64*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 15
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %RBP.i978 = bitcast %union.anon* %2547 to i64*
  %2548 = load i64, i64* %RBP.i978
  %2549 = sub i64 %2548, 8
  %2550 = load i64, i64* %PC.i976
  %2551 = add i64 %2550, 4
  store i64 %2551, i64* %PC.i976
  %2552 = inttoptr i64 %2549 to i64*
  %2553 = load i64, i64* %2552
  store i64 %2553, i64* %RAX.i977, align 8
  store %struct.Memory* %loadMem_40256f, %struct.Memory** %MEMORY
  %loadMem_402573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 33
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %2556 to i64*
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 5
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %RCX.i974 = bitcast %union.anon* %2559 to i64*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 15
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %2562 to i64*
  %2563 = load i64, i64* %RBP.i975
  %2564 = sub i64 %2563, 52
  %2565 = load i64, i64* %PC.i973
  %2566 = add i64 %2565, 4
  store i64 %2566, i64* %PC.i973
  %2567 = inttoptr i64 %2564 to i32*
  %2568 = load i32, i32* %2567
  %2569 = sext i32 %2568 to i64
  store i64 %2569, i64* %RCX.i974, align 8
  store %struct.Memory* %loadMem_402573, %struct.Memory** %MEMORY
  %loadMem_402577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 33
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %2572 to i64*
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 7
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %EDX.i970 = bitcast %union.anon* %2575 to i32*
  %2576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2577 = getelementptr inbounds %struct.GPR, %struct.GPR* %2576, i32 0, i32 1
  %2578 = getelementptr inbounds %struct.Reg, %struct.Reg* %2577, i32 0, i32 0
  %RAX.i971 = bitcast %union.anon* %2578 to i64*
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2580 = getelementptr inbounds %struct.GPR, %struct.GPR* %2579, i32 0, i32 5
  %2581 = getelementptr inbounds %struct.Reg, %struct.Reg* %2580, i32 0, i32 0
  %RCX.i972 = bitcast %union.anon* %2581 to i64*
  %2582 = load i64, i64* %RAX.i971
  %2583 = load i64, i64* %RCX.i972
  %2584 = mul i64 %2583, 4
  %2585 = add i64 %2584, %2582
  %2586 = load i32, i32* %EDX.i970
  %2587 = zext i32 %2586 to i64
  %2588 = load i64, i64* %PC.i969
  %2589 = add i64 %2588, 3
  store i64 %2589, i64* %PC.i969
  %2590 = inttoptr i64 %2585 to i32*
  store i32 %2586, i32* %2590
  store %struct.Memory* %loadMem_402577, %struct.Memory** %MEMORY
  %loadMem_40257a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2592 = getelementptr inbounds %struct.GPR, %struct.GPR* %2591, i32 0, i32 33
  %2593 = getelementptr inbounds %struct.Reg, %struct.Reg* %2592, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %2593 to i64*
  %2594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2595 = getelementptr inbounds %struct.GPR, %struct.GPR* %2594, i32 0, i32 7
  %2596 = getelementptr inbounds %struct.Reg, %struct.Reg* %2595, i32 0, i32 0
  %RDX.i967 = bitcast %union.anon* %2596 to i64*
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2598 = getelementptr inbounds %struct.GPR, %struct.GPR* %2597, i32 0, i32 15
  %2599 = getelementptr inbounds %struct.Reg, %struct.Reg* %2598, i32 0, i32 0
  %RBP.i968 = bitcast %union.anon* %2599 to i64*
  %2600 = load i64, i64* %RBP.i968
  %2601 = sub i64 %2600, 1336
  %2602 = load i64, i64* %PC.i966
  %2603 = add i64 %2602, 6
  store i64 %2603, i64* %PC.i966
  %2604 = inttoptr i64 %2601 to i32*
  %2605 = load i32, i32* %2604
  %2606 = zext i32 %2605 to i64
  store i64 %2606, i64* %RDX.i967, align 8
  store %struct.Memory* %loadMem_40257a, %struct.Memory** %MEMORY
  %loadMem_402580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2608 = getelementptr inbounds %struct.GPR, %struct.GPR* %2607, i32 0, i32 33
  %2609 = getelementptr inbounds %struct.Reg, %struct.Reg* %2608, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %2609 to i64*
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2611 = getelementptr inbounds %struct.GPR, %struct.GPR* %2610, i32 0, i32 1
  %2612 = getelementptr inbounds %struct.Reg, %struct.Reg* %2611, i32 0, i32 0
  %RAX.i964 = bitcast %union.anon* %2612 to i64*
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2614 = getelementptr inbounds %struct.GPR, %struct.GPR* %2613, i32 0, i32 15
  %2615 = getelementptr inbounds %struct.Reg, %struct.Reg* %2614, i32 0, i32 0
  %RBP.i965 = bitcast %union.anon* %2615 to i64*
  %2616 = load i64, i64* %RBP.i965
  %2617 = sub i64 %2616, 8
  %2618 = load i64, i64* %PC.i963
  %2619 = add i64 %2618, 4
  store i64 %2619, i64* %PC.i963
  %2620 = inttoptr i64 %2617 to i64*
  %2621 = load i64, i64* %2620
  store i64 %2621, i64* %RAX.i964, align 8
  store %struct.Memory* %loadMem_402580, %struct.Memory** %MEMORY
  %loadMem_402584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 33
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %2624 to i64*
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2626 = getelementptr inbounds %struct.GPR, %struct.GPR* %2625, i32 0, i32 5
  %2627 = getelementptr inbounds %struct.Reg, %struct.Reg* %2626, i32 0, i32 0
  %RCX.i961 = bitcast %union.anon* %2627 to i64*
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 15
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %RBP.i962 = bitcast %union.anon* %2630 to i64*
  %2631 = load i64, i64* %RBP.i962
  %2632 = sub i64 %2631, 60
  %2633 = load i64, i64* %PC.i960
  %2634 = add i64 %2633, 4
  store i64 %2634, i64* %PC.i960
  %2635 = inttoptr i64 %2632 to i32*
  %2636 = load i32, i32* %2635
  %2637 = sext i32 %2636 to i64
  store i64 %2637, i64* %RCX.i961, align 8
  store %struct.Memory* %loadMem_402584, %struct.Memory** %MEMORY
  %loadMem_402588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2639 = getelementptr inbounds %struct.GPR, %struct.GPR* %2638, i32 0, i32 33
  %2640 = getelementptr inbounds %struct.Reg, %struct.Reg* %2639, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %2640 to i64*
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2642 = getelementptr inbounds %struct.GPR, %struct.GPR* %2641, i32 0, i32 7
  %2643 = getelementptr inbounds %struct.Reg, %struct.Reg* %2642, i32 0, i32 0
  %EDX.i957 = bitcast %union.anon* %2643 to i32*
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2645 = getelementptr inbounds %struct.GPR, %struct.GPR* %2644, i32 0, i32 1
  %2646 = getelementptr inbounds %struct.Reg, %struct.Reg* %2645, i32 0, i32 0
  %RAX.i958 = bitcast %union.anon* %2646 to i64*
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 5
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %RCX.i959 = bitcast %union.anon* %2649 to i64*
  %2650 = load i64, i64* %RAX.i958
  %2651 = load i64, i64* %RCX.i959
  %2652 = mul i64 %2651, 4
  %2653 = add i64 %2652, %2650
  %2654 = load i32, i32* %EDX.i957
  %2655 = zext i32 %2654 to i64
  %2656 = load i64, i64* %PC.i956
  %2657 = add i64 %2656, 3
  store i64 %2657, i64* %PC.i956
  %2658 = inttoptr i64 %2653 to i32*
  store i32 %2654, i32* %2658
  store %struct.Memory* %loadMem_402588, %struct.Memory** %MEMORY
  %loadMem_40258b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 33
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %2661 to i64*
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 7
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %RDX.i954 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 15
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %2667 to i64*
  %2668 = load i64, i64* %RBP.i955
  %2669 = sub i64 %2668, 60
  %2670 = load i64, i64* %PC.i953
  %2671 = add i64 %2670, 3
  store i64 %2671, i64* %PC.i953
  %2672 = inttoptr i64 %2669 to i32*
  %2673 = load i32, i32* %2672
  %2674 = zext i32 %2673 to i64
  store i64 %2674, i64* %RDX.i954, align 8
  store %struct.Memory* %loadMem_40258b, %struct.Memory** %MEMORY
  %loadMem_40258e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 33
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2677 to i64*
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 7
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %RDX.i952 = bitcast %union.anon* %2680 to i64*
  %2681 = load i64, i64* %RDX.i952
  %2682 = load i64, i64* %PC.i951
  %2683 = add i64 %2682, 3
  store i64 %2683, i64* %PC.i951
  %2684 = trunc i64 %2681 to i32
  %2685 = add i32 1, %2684
  %2686 = zext i32 %2685 to i64
  store i64 %2686, i64* %RDX.i952, align 8
  %2687 = icmp ult i32 %2685, %2684
  %2688 = icmp ult i32 %2685, 1
  %2689 = or i1 %2687, %2688
  %2690 = zext i1 %2689 to i8
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2690, i8* %2691, align 1
  %2692 = and i32 %2685, 255
  %2693 = call i32 @llvm.ctpop.i32(i32 %2692)
  %2694 = trunc i32 %2693 to i8
  %2695 = and i8 %2694, 1
  %2696 = xor i8 %2695, 1
  %2697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2696, i8* %2697, align 1
  %2698 = xor i64 1, %2681
  %2699 = trunc i64 %2698 to i32
  %2700 = xor i32 %2699, %2685
  %2701 = lshr i32 %2700, 4
  %2702 = trunc i32 %2701 to i8
  %2703 = and i8 %2702, 1
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2703, i8* %2704, align 1
  %2705 = icmp eq i32 %2685, 0
  %2706 = zext i1 %2705 to i8
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2706, i8* %2707, align 1
  %2708 = lshr i32 %2685, 31
  %2709 = trunc i32 %2708 to i8
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2709, i8* %2710, align 1
  %2711 = lshr i32 %2684, 31
  %2712 = xor i32 %2708, %2711
  %2713 = add i32 %2712, %2708
  %2714 = icmp eq i32 %2713, 2
  %2715 = zext i1 %2714 to i8
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2715, i8* %2716, align 1
  store %struct.Memory* %loadMem_40258e, %struct.Memory** %MEMORY
  %loadMem_402591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2718 = getelementptr inbounds %struct.GPR, %struct.GPR* %2717, i32 0, i32 33
  %2719 = getelementptr inbounds %struct.Reg, %struct.Reg* %2718, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %2719 to i64*
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2721 = getelementptr inbounds %struct.GPR, %struct.GPR* %2720, i32 0, i32 7
  %2722 = getelementptr inbounds %struct.Reg, %struct.Reg* %2721, i32 0, i32 0
  %EDX.i949 = bitcast %union.anon* %2722 to i32*
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 15
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %2725 to i64*
  %2726 = load i64, i64* %RBP.i950
  %2727 = sub i64 %2726, 60
  %2728 = load i32, i32* %EDX.i949
  %2729 = zext i32 %2728 to i64
  %2730 = load i64, i64* %PC.i948
  %2731 = add i64 %2730, 3
  store i64 %2731, i64* %PC.i948
  %2732 = inttoptr i64 %2727 to i32*
  store i32 %2728, i32* %2732
  store %struct.Memory* %loadMem_402591, %struct.Memory** %MEMORY
  %loadMem_402594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 33
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %2735 to i64*
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 7
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %RDX.i946 = bitcast %union.anon* %2738 to i64*
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 15
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %RBP.i947 = bitcast %union.anon* %2741 to i64*
  %2742 = load i64, i64* %RBP.i947
  %2743 = sub i64 %2742, 52
  %2744 = load i64, i64* %PC.i945
  %2745 = add i64 %2744, 3
  store i64 %2745, i64* %PC.i945
  %2746 = inttoptr i64 %2743 to i32*
  %2747 = load i32, i32* %2746
  %2748 = zext i32 %2747 to i64
  store i64 %2748, i64* %RDX.i946, align 8
  store %struct.Memory* %loadMem_402594, %struct.Memory** %MEMORY
  %loadMem_402597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2750 = getelementptr inbounds %struct.GPR, %struct.GPR* %2749, i32 0, i32 33
  %2751 = getelementptr inbounds %struct.Reg, %struct.Reg* %2750, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2751 to i64*
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2753 = getelementptr inbounds %struct.GPR, %struct.GPR* %2752, i32 0, i32 7
  %2754 = getelementptr inbounds %struct.Reg, %struct.Reg* %2753, i32 0, i32 0
  %RDX.i944 = bitcast %union.anon* %2754 to i64*
  %2755 = load i64, i64* %RDX.i944
  %2756 = load i64, i64* %PC.i943
  %2757 = add i64 %2756, 3
  store i64 %2757, i64* %PC.i943
  %2758 = trunc i64 %2755 to i32
  %2759 = add i32 1, %2758
  %2760 = zext i32 %2759 to i64
  store i64 %2760, i64* %RDX.i944, align 8
  %2761 = icmp ult i32 %2759, %2758
  %2762 = icmp ult i32 %2759, 1
  %2763 = or i1 %2761, %2762
  %2764 = zext i1 %2763 to i8
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2764, i8* %2765, align 1
  %2766 = and i32 %2759, 255
  %2767 = call i32 @llvm.ctpop.i32(i32 %2766)
  %2768 = trunc i32 %2767 to i8
  %2769 = and i8 %2768, 1
  %2770 = xor i8 %2769, 1
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2770, i8* %2771, align 1
  %2772 = xor i64 1, %2755
  %2773 = trunc i64 %2772 to i32
  %2774 = xor i32 %2773, %2759
  %2775 = lshr i32 %2774, 4
  %2776 = trunc i32 %2775 to i8
  %2777 = and i8 %2776, 1
  %2778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2777, i8* %2778, align 1
  %2779 = icmp eq i32 %2759, 0
  %2780 = zext i1 %2779 to i8
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2780, i8* %2781, align 1
  %2782 = lshr i32 %2759, 31
  %2783 = trunc i32 %2782 to i8
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2783, i8* %2784, align 1
  %2785 = lshr i32 %2758, 31
  %2786 = xor i32 %2782, %2785
  %2787 = add i32 %2786, %2782
  %2788 = icmp eq i32 %2787, 2
  %2789 = zext i1 %2788 to i8
  %2790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2789, i8* %2790, align 1
  store %struct.Memory* %loadMem_402597, %struct.Memory** %MEMORY
  %loadMem_40259a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2792 = getelementptr inbounds %struct.GPR, %struct.GPR* %2791, i32 0, i32 33
  %2793 = getelementptr inbounds %struct.Reg, %struct.Reg* %2792, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2793 to i64*
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2795 = getelementptr inbounds %struct.GPR, %struct.GPR* %2794, i32 0, i32 7
  %2796 = getelementptr inbounds %struct.Reg, %struct.Reg* %2795, i32 0, i32 0
  %EDX.i941 = bitcast %union.anon* %2796 to i32*
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 15
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %RBP.i942
  %2801 = sub i64 %2800, 52
  %2802 = load i32, i32* %EDX.i941
  %2803 = zext i32 %2802 to i64
  %2804 = load i64, i64* %PC.i940
  %2805 = add i64 %2804, 3
  store i64 %2805, i64* %PC.i940
  %2806 = inttoptr i64 %2801 to i32*
  store i32 %2802, i32* %2806
  store %struct.Memory* %loadMem_40259a, %struct.Memory** %MEMORY
  %loadMem_40259d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2808 = getelementptr inbounds %struct.GPR, %struct.GPR* %2807, i32 0, i32 33
  %2809 = getelementptr inbounds %struct.Reg, %struct.Reg* %2808, i32 0, i32 0
  %PC.i939 = bitcast %union.anon* %2809 to i64*
  %2810 = load i64, i64* %PC.i939
  %2811 = add i64 %2810, -133
  %2812 = load i64, i64* %PC.i939
  %2813 = add i64 %2812, 5
  store i64 %2813, i64* %PC.i939
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2811, i64* %2814, align 8
  store %struct.Memory* %loadMem_40259d, %struct.Memory** %MEMORY
  br label %block_.L_402518

block_.L_4025a2:                                  ; preds = %block_.L_402529
  %loadMem_4025a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2816 = getelementptr inbounds %struct.GPR, %struct.GPR* %2815, i32 0, i32 33
  %2817 = getelementptr inbounds %struct.Reg, %struct.Reg* %2816, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2817 to i64*
  %2818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2819 = getelementptr inbounds %struct.GPR, %struct.GPR* %2818, i32 0, i32 15
  %2820 = getelementptr inbounds %struct.Reg, %struct.Reg* %2819, i32 0, i32 0
  %RBP.i938 = bitcast %union.anon* %2820 to i64*
  %2821 = load i64, i64* %RBP.i938
  %2822 = sub i64 %2821, 68
  %2823 = load i64, i64* %PC.i937
  %2824 = add i64 %2823, 4
  store i64 %2824, i64* %PC.i937
  %2825 = inttoptr i64 %2822 to i32*
  %2826 = load i32, i32* %2825
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2827, align 1
  %2828 = and i32 %2826, 255
  %2829 = call i32 @llvm.ctpop.i32(i32 %2828)
  %2830 = trunc i32 %2829 to i8
  %2831 = and i8 %2830, 1
  %2832 = xor i8 %2831, 1
  %2833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2832, i8* %2833, align 1
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2834, align 1
  %2835 = icmp eq i32 %2826, 0
  %2836 = zext i1 %2835 to i8
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2836, i8* %2837, align 1
  %2838 = lshr i32 %2826, 31
  %2839 = trunc i32 %2838 to i8
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2839, i8* %2840, align 1
  %2841 = lshr i32 %2826, 31
  %2842 = xor i32 %2838, %2841
  %2843 = add i32 %2842, %2841
  %2844 = icmp eq i32 %2843, 2
  %2845 = zext i1 %2844 to i8
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2845, i8* %2846, align 1
  store %struct.Memory* %loadMem_4025a2, %struct.Memory** %MEMORY
  %loadMem_4025a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2848 = getelementptr inbounds %struct.GPR, %struct.GPR* %2847, i32 0, i32 33
  %2849 = getelementptr inbounds %struct.Reg, %struct.Reg* %2848, i32 0, i32 0
  %PC.i936 = bitcast %union.anon* %2849 to i64*
  %2850 = load i64, i64* %PC.i936
  %2851 = add i64 %2850, 11
  %2852 = load i64, i64* %PC.i936
  %2853 = add i64 %2852, 6
  %2854 = load i64, i64* %PC.i936
  %2855 = add i64 %2854, 6
  store i64 %2855, i64* %PC.i936
  %2856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2857 = load i8, i8* %2856, align 1
  %2858 = icmp ne i8 %2857, 0
  %2859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2860 = load i8, i8* %2859, align 1
  %2861 = icmp ne i8 %2860, 0
  %2862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2863 = load i8, i8* %2862, align 1
  %2864 = icmp ne i8 %2863, 0
  %2865 = xor i1 %2861, %2864
  %2866 = or i1 %2858, %2865
  %2867 = zext i1 %2866 to i8
  store i8 %2867, i8* %BRANCH_TAKEN, align 1
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2869 = select i1 %2866, i64 %2851, i64 %2853
  store i64 %2869, i64* %2868, align 8
  store %struct.Memory* %loadMem_4025a6, %struct.Memory** %MEMORY
  %loadBr_4025a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4025a6 = icmp eq i8 %loadBr_4025a6, 1
  br i1 %cmpBr_4025a6, label %block_.L_4025b1, label %block_4025ac

block_4025ac:                                     ; preds = %block_.L_4025a2
  %loadMem_4025ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 33
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %2872 to i64*
  %2873 = load i64, i64* %PC.i935
  %2874 = add i64 %2873, 19
  %2875 = load i64, i64* %PC.i935
  %2876 = add i64 %2875, 5
  store i64 %2876, i64* %PC.i935
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2874, i64* %2877, align 8
  store %struct.Memory* %loadMem_4025ac, %struct.Memory** %MEMORY
  br label %block_.L_4025bf

block_.L_4025b1:                                  ; preds = %block_.L_4025a2
  %loadMem_4025b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 33
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %2880 to i64*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 1
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %2883 to i64*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 15
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %2886 to i64*
  %2887 = load i64, i64* %RBP.i934
  %2888 = sub i64 %2887, 52
  %2889 = load i64, i64* %PC.i932
  %2890 = add i64 %2889, 3
  store i64 %2890, i64* %PC.i932
  %2891 = inttoptr i64 %2888 to i32*
  %2892 = load i32, i32* %2891
  %2893 = zext i32 %2892 to i64
  store i64 %2893, i64* %RAX.i933, align 8
  store %struct.Memory* %loadMem_4025b1, %struct.Memory** %MEMORY
  %loadMem_4025b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %2896 to i64*
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2898 = getelementptr inbounds %struct.GPR, %struct.GPR* %2897, i32 0, i32 1
  %2899 = getelementptr inbounds %struct.Reg, %struct.Reg* %2898, i32 0, i32 0
  %RAX.i931 = bitcast %union.anon* %2899 to i64*
  %2900 = load i64, i64* %RAX.i931
  %2901 = load i64, i64* %PC.i930
  %2902 = add i64 %2901, 3
  store i64 %2902, i64* %PC.i930
  %2903 = trunc i64 %2900 to i32
  %2904 = add i32 1, %2903
  %2905 = zext i32 %2904 to i64
  store i64 %2905, i64* %RAX.i931, align 8
  %2906 = icmp ult i32 %2904, %2903
  %2907 = icmp ult i32 %2904, 1
  %2908 = or i1 %2906, %2907
  %2909 = zext i1 %2908 to i8
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2909, i8* %2910, align 1
  %2911 = and i32 %2904, 255
  %2912 = call i32 @llvm.ctpop.i32(i32 %2911)
  %2913 = trunc i32 %2912 to i8
  %2914 = and i8 %2913, 1
  %2915 = xor i8 %2914, 1
  %2916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2915, i8* %2916, align 1
  %2917 = xor i64 1, %2900
  %2918 = trunc i64 %2917 to i32
  %2919 = xor i32 %2918, %2904
  %2920 = lshr i32 %2919, 4
  %2921 = trunc i32 %2920 to i8
  %2922 = and i8 %2921, 1
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2922, i8* %2923, align 1
  %2924 = icmp eq i32 %2904, 0
  %2925 = zext i1 %2924 to i8
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2925, i8* %2926, align 1
  %2927 = lshr i32 %2904, 31
  %2928 = trunc i32 %2927 to i8
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2928, i8* %2929, align 1
  %2930 = lshr i32 %2903, 31
  %2931 = xor i32 %2927, %2930
  %2932 = add i32 %2931, %2927
  %2933 = icmp eq i32 %2932, 2
  %2934 = zext i1 %2933 to i8
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2934, i8* %2935, align 1
  store %struct.Memory* %loadMem_4025b4, %struct.Memory** %MEMORY
  %loadMem_4025b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2937 = getelementptr inbounds %struct.GPR, %struct.GPR* %2936, i32 0, i32 33
  %2938 = getelementptr inbounds %struct.Reg, %struct.Reg* %2937, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %2938 to i64*
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 1
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %EAX.i928 = bitcast %union.anon* %2941 to i32*
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2943 = getelementptr inbounds %struct.GPR, %struct.GPR* %2942, i32 0, i32 15
  %2944 = getelementptr inbounds %struct.Reg, %struct.Reg* %2943, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %2944 to i64*
  %2945 = load i64, i64* %RBP.i929
  %2946 = sub i64 %2945, 52
  %2947 = load i32, i32* %EAX.i928
  %2948 = zext i32 %2947 to i64
  %2949 = load i64, i64* %PC.i927
  %2950 = add i64 %2949, 3
  store i64 %2950, i64* %PC.i927
  %2951 = inttoptr i64 %2946 to i32*
  store i32 %2947, i32* %2951
  store %struct.Memory* %loadMem_4025b7, %struct.Memory** %MEMORY
  %loadMem_4025ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2953 = getelementptr inbounds %struct.GPR, %struct.GPR* %2952, i32 0, i32 33
  %2954 = getelementptr inbounds %struct.Reg, %struct.Reg* %2953, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %2954 to i64*
  %2955 = load i64, i64* %PC.i926
  %2956 = add i64 %2955, -162
  %2957 = load i64, i64* %PC.i926
  %2958 = add i64 %2957, 5
  store i64 %2958, i64* %PC.i926
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2956, i64* %2959, align 8
  store %struct.Memory* %loadMem_4025ba, %struct.Memory** %MEMORY
  br label %block_.L_402518

block_.L_4025bf:                                  ; preds = %block_4025ac, %block_402524
  %loadMem_4025bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2961 = getelementptr inbounds %struct.GPR, %struct.GPR* %2960, i32 0, i32 33
  %2962 = getelementptr inbounds %struct.Reg, %struct.Reg* %2961, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %2962 to i64*
  %2963 = load i64, i64* %PC.i925
  %2964 = add i64 %2963, 5
  %2965 = load i64, i64* %PC.i925
  %2966 = add i64 %2965, 5
  store i64 %2966, i64* %PC.i925
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2964, i64* %2967, align 8
  store %struct.Memory* %loadMem_4025bf, %struct.Memory** %MEMORY
  br label %block_.L_4025c4

block_.L_4025c4:                                  ; preds = %block_.L_40265d, %block_4025ff, %block_.L_4025bf
  %loadMem_4025c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 33
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2970 to i64*
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 1
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %RAX.i923 = bitcast %union.anon* %2973 to i64*
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2975 = getelementptr inbounds %struct.GPR, %struct.GPR* %2974, i32 0, i32 15
  %2976 = getelementptr inbounds %struct.Reg, %struct.Reg* %2975, i32 0, i32 0
  %RBP.i924 = bitcast %union.anon* %2976 to i64*
  %2977 = load i64, i64* %RBP.i924
  %2978 = sub i64 %2977, 52
  %2979 = load i64, i64* %PC.i922
  %2980 = add i64 %2979, 3
  store i64 %2980, i64* %PC.i922
  %2981 = inttoptr i64 %2978 to i32*
  %2982 = load i32, i32* %2981
  %2983 = zext i32 %2982 to i64
  store i64 %2983, i64* %RAX.i923, align 8
  store %struct.Memory* %loadMem_4025c4, %struct.Memory** %MEMORY
  %loadMem_4025c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 33
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %2986 to i64*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 1
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %EAX.i920 = bitcast %union.anon* %2989 to i32*
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 15
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %2992 to i64*
  %2993 = load i32, i32* %EAX.i920
  %2994 = zext i32 %2993 to i64
  %2995 = load i64, i64* %RBP.i921
  %2996 = sub i64 %2995, 56
  %2997 = load i64, i64* %PC.i919
  %2998 = add i64 %2997, 3
  store i64 %2998, i64* %PC.i919
  %2999 = inttoptr i64 %2996 to i32*
  %3000 = load i32, i32* %2999
  %3001 = sub i32 %2993, %3000
  %3002 = icmp ult i32 %2993, %3000
  %3003 = zext i1 %3002 to i8
  %3004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3003, i8* %3004, align 1
  %3005 = and i32 %3001, 255
  %3006 = call i32 @llvm.ctpop.i32(i32 %3005)
  %3007 = trunc i32 %3006 to i8
  %3008 = and i8 %3007, 1
  %3009 = xor i8 %3008, 1
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3009, i8* %3010, align 1
  %3011 = xor i32 %3000, %2993
  %3012 = xor i32 %3011, %3001
  %3013 = lshr i32 %3012, 4
  %3014 = trunc i32 %3013 to i8
  %3015 = and i8 %3014, 1
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3015, i8* %3016, align 1
  %3017 = icmp eq i32 %3001, 0
  %3018 = zext i1 %3017 to i8
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3018, i8* %3019, align 1
  %3020 = lshr i32 %3001, 31
  %3021 = trunc i32 %3020 to i8
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3021, i8* %3022, align 1
  %3023 = lshr i32 %2993, 31
  %3024 = lshr i32 %3000, 31
  %3025 = xor i32 %3024, %3023
  %3026 = xor i32 %3020, %3023
  %3027 = add i32 %3026, %3025
  %3028 = icmp eq i32 %3027, 2
  %3029 = zext i1 %3028 to i8
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3029, i8* %3030, align 1
  store %struct.Memory* %loadMem_4025c7, %struct.Memory** %MEMORY
  %loadMem_4025ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3032 = getelementptr inbounds %struct.GPR, %struct.GPR* %3031, i32 0, i32 33
  %3033 = getelementptr inbounds %struct.Reg, %struct.Reg* %3032, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %3033 to i64*
  %3034 = load i64, i64* %PC.i918
  %3035 = add i64 %3034, 11
  %3036 = load i64, i64* %PC.i918
  %3037 = add i64 %3036, 6
  %3038 = load i64, i64* %PC.i918
  %3039 = add i64 %3038, 6
  store i64 %3039, i64* %PC.i918
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3041 = load i8, i8* %3040, align 1
  %3042 = icmp ne i8 %3041, 0
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3044 = load i8, i8* %3043, align 1
  %3045 = icmp ne i8 %3044, 0
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3047 = load i8, i8* %3046, align 1
  %3048 = icmp ne i8 %3047, 0
  %3049 = xor i1 %3045, %3048
  %3050 = or i1 %3042, %3049
  %3051 = zext i1 %3050 to i8
  store i8 %3051, i8* %BRANCH_TAKEN, align 1
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3053 = select i1 %3050, i64 %3035, i64 %3037
  store i64 %3053, i64* %3052, align 8
  store %struct.Memory* %loadMem_4025ca, %struct.Memory** %MEMORY
  %loadBr_4025ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4025ca = icmp eq i8 %loadBr_4025ca, 1
  br i1 %cmpBr_4025ca, label %block_.L_4025d5, label %block_4025d0

block_4025d0:                                     ; preds = %block_.L_4025c4
  %loadMem_4025d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3055 = getelementptr inbounds %struct.GPR, %struct.GPR* %3054, i32 0, i32 33
  %3056 = getelementptr inbounds %struct.Reg, %struct.Reg* %3055, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %3056 to i64*
  %3057 = load i64, i64* %PC.i917
  %3058 = add i64 %3057, 155
  %3059 = load i64, i64* %PC.i917
  %3060 = add i64 %3059, 5
  store i64 %3060, i64* %PC.i917
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3058, i64* %3061, align 8
  store %struct.Memory* %loadMem_4025d0, %struct.Memory** %MEMORY
  br label %block_.L_40266b

block_.L_4025d5:                                  ; preds = %block_.L_4025c4
  %loadMem_4025d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 33
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 1
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %3067 to i64*
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3069 = getelementptr inbounds %struct.GPR, %struct.GPR* %3068, i32 0, i32 15
  %3070 = getelementptr inbounds %struct.Reg, %struct.Reg* %3069, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %3070 to i64*
  %3071 = load i64, i64* %RBP.i916
  %3072 = sub i64 %3071, 16
  %3073 = load i64, i64* %PC.i914
  %3074 = add i64 %3073, 4
  store i64 %3074, i64* %PC.i914
  %3075 = inttoptr i64 %3072 to i64*
  %3076 = load i64, i64* %3075
  store i64 %3076, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_4025d5, %struct.Memory** %MEMORY
  %loadMem_4025d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 33
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %3079 to i64*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 5
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %RCX.i912 = bitcast %union.anon* %3082 to i64*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 15
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %3085 to i64*
  %3086 = load i64, i64* %RBP.i913
  %3087 = sub i64 %3086, 8
  %3088 = load i64, i64* %PC.i911
  %3089 = add i64 %3088, 4
  store i64 %3089, i64* %PC.i911
  %3090 = inttoptr i64 %3087 to i64*
  %3091 = load i64, i64* %3090
  store i64 %3091, i64* %RCX.i912, align 8
  store %struct.Memory* %loadMem_4025d9, %struct.Memory** %MEMORY
  %loadMem_4025dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 33
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %3094 to i64*
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3096 = getelementptr inbounds %struct.GPR, %struct.GPR* %3095, i32 0, i32 7
  %3097 = getelementptr inbounds %struct.Reg, %struct.Reg* %3096, i32 0, i32 0
  %RDX.i909 = bitcast %union.anon* %3097 to i64*
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3099 = getelementptr inbounds %struct.GPR, %struct.GPR* %3098, i32 0, i32 15
  %3100 = getelementptr inbounds %struct.Reg, %struct.Reg* %3099, i32 0, i32 0
  %RBP.i910 = bitcast %union.anon* %3100 to i64*
  %3101 = load i64, i64* %RBP.i910
  %3102 = sub i64 %3101, 56
  %3103 = load i64, i64* %PC.i908
  %3104 = add i64 %3103, 4
  store i64 %3104, i64* %PC.i908
  %3105 = inttoptr i64 %3102 to i32*
  %3106 = load i32, i32* %3105
  %3107 = sext i32 %3106 to i64
  store i64 %3107, i64* %RDX.i909, align 8
  store %struct.Memory* %loadMem_4025dd, %struct.Memory** %MEMORY
  %loadMem_4025e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3109 = getelementptr inbounds %struct.GPR, %struct.GPR* %3108, i32 0, i32 33
  %3110 = getelementptr inbounds %struct.Reg, %struct.Reg* %3109, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %3110 to i64*
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3112 = getelementptr inbounds %struct.GPR, %struct.GPR* %3111, i32 0, i32 5
  %3113 = getelementptr inbounds %struct.Reg, %struct.Reg* %3112, i32 0, i32 0
  %RCX.i905 = bitcast %union.anon* %3113 to i64*
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3115 = getelementptr inbounds %struct.GPR, %struct.GPR* %3114, i32 0, i32 7
  %3116 = getelementptr inbounds %struct.Reg, %struct.Reg* %3115, i32 0, i32 0
  %RDX.i906 = bitcast %union.anon* %3116 to i64*
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 9
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %RSI.i907 = bitcast %union.anon* %3119 to i64*
  %3120 = load i64, i64* %RCX.i905
  %3121 = load i64, i64* %RDX.i906
  %3122 = mul i64 %3121, 4
  %3123 = add i64 %3122, %3120
  %3124 = load i64, i64* %PC.i904
  %3125 = add i64 %3124, 3
  store i64 %3125, i64* %PC.i904
  %3126 = inttoptr i64 %3123 to i32*
  %3127 = load i32, i32* %3126
  %3128 = zext i32 %3127 to i64
  store i64 %3128, i64* %RSI.i907, align 8
  store %struct.Memory* %loadMem_4025e1, %struct.Memory** %MEMORY
  %loadMem_4025e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3130 = getelementptr inbounds %struct.GPR, %struct.GPR* %3129, i32 0, i32 33
  %3131 = getelementptr inbounds %struct.Reg, %struct.Reg* %3130, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %3131 to i64*
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3133 = getelementptr inbounds %struct.GPR, %struct.GPR* %3132, i32 0, i32 9
  %3134 = getelementptr inbounds %struct.Reg, %struct.Reg* %3133, i32 0, i32 0
  %RSI.i902 = bitcast %union.anon* %3134 to i64*
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 15
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %RBP.i903 = bitcast %union.anon* %3137 to i64*
  %3138 = load i64, i64* %RSI.i902
  %3139 = load i64, i64* %RBP.i903
  %3140 = sub i64 %3139, 92
  %3141 = load i64, i64* %PC.i901
  %3142 = add i64 %3141, 3
  store i64 %3142, i64* %PC.i901
  %3143 = trunc i64 %3138 to i32
  %3144 = inttoptr i64 %3140 to i32*
  %3145 = load i32, i32* %3144
  %3146 = add i32 %3145, %3143
  %3147 = zext i32 %3146 to i64
  store i64 %3147, i64* %RSI.i902, align 8
  %3148 = icmp ult i32 %3146, %3143
  %3149 = icmp ult i32 %3146, %3145
  %3150 = or i1 %3148, %3149
  %3151 = zext i1 %3150 to i8
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3151, i8* %3152, align 1
  %3153 = and i32 %3146, 255
  %3154 = call i32 @llvm.ctpop.i32(i32 %3153)
  %3155 = trunc i32 %3154 to i8
  %3156 = and i8 %3155, 1
  %3157 = xor i8 %3156, 1
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3157, i8* %3158, align 1
  %3159 = xor i32 %3145, %3143
  %3160 = xor i32 %3159, %3146
  %3161 = lshr i32 %3160, 4
  %3162 = trunc i32 %3161 to i8
  %3163 = and i8 %3162, 1
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3163, i8* %3164, align 1
  %3165 = icmp eq i32 %3146, 0
  %3166 = zext i1 %3165 to i8
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3166, i8* %3167, align 1
  %3168 = lshr i32 %3146, 31
  %3169 = trunc i32 %3168 to i8
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3169, i8* %3170, align 1
  %3171 = lshr i32 %3143, 31
  %3172 = lshr i32 %3145, 31
  %3173 = xor i32 %3168, %3171
  %3174 = xor i32 %3168, %3172
  %3175 = add i32 %3173, %3174
  %3176 = icmp eq i32 %3175, 2
  %3177 = zext i1 %3176 to i8
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3177, i8* %3178, align 1
  store %struct.Memory* %loadMem_4025e4, %struct.Memory** %MEMORY
  %loadMem_4025e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3180 = getelementptr inbounds %struct.GPR, %struct.GPR* %3179, i32 0, i32 33
  %3181 = getelementptr inbounds %struct.Reg, %struct.Reg* %3180, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %3181 to i64*
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3183 = getelementptr inbounds %struct.GPR, %struct.GPR* %3182, i32 0, i32 9
  %3184 = getelementptr inbounds %struct.Reg, %struct.Reg* %3183, i32 0, i32 0
  %ESI.i899 = bitcast %union.anon* %3184 to i32*
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 9
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %RSI.i900 = bitcast %union.anon* %3187 to i64*
  %3188 = load i32, i32* %ESI.i899
  %3189 = zext i32 %3188 to i64
  %3190 = load i64, i64* %PC.i898
  %3191 = add i64 %3190, 2
  store i64 %3191, i64* %PC.i898
  %3192 = and i64 %3189, 4294967295
  store i64 %3192, i64* %RSI.i900, align 8
  store %struct.Memory* %loadMem_4025e7, %struct.Memory** %MEMORY
  %loadMem_4025e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3194 = getelementptr inbounds %struct.GPR, %struct.GPR* %3193, i32 0, i32 33
  %3195 = getelementptr inbounds %struct.Reg, %struct.Reg* %3194, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %3195 to i64*
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3197 = getelementptr inbounds %struct.GPR, %struct.GPR* %3196, i32 0, i32 9
  %3198 = getelementptr inbounds %struct.Reg, %struct.Reg* %3197, i32 0, i32 0
  %ESI.i896 = bitcast %union.anon* %3198 to i32*
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3200 = getelementptr inbounds %struct.GPR, %struct.GPR* %3199, i32 0, i32 5
  %3201 = getelementptr inbounds %struct.Reg, %struct.Reg* %3200, i32 0, i32 0
  %RCX.i897 = bitcast %union.anon* %3201 to i64*
  %3202 = load i32, i32* %ESI.i896
  %3203 = zext i32 %3202 to i64
  %3204 = load i64, i64* %PC.i895
  %3205 = add i64 %3204, 2
  store i64 %3205, i64* %PC.i895
  %3206 = and i64 %3203, 4294967295
  store i64 %3206, i64* %RCX.i897, align 8
  store %struct.Memory* %loadMem_4025e9, %struct.Memory** %MEMORY
  %loadMem_4025eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3208 = getelementptr inbounds %struct.GPR, %struct.GPR* %3207, i32 0, i32 33
  %3209 = getelementptr inbounds %struct.Reg, %struct.Reg* %3208, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %3209 to i64*
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3211 = getelementptr inbounds %struct.GPR, %struct.GPR* %3210, i32 0, i32 1
  %3212 = getelementptr inbounds %struct.Reg, %struct.Reg* %3211, i32 0, i32 0
  %RAX.i892 = bitcast %union.anon* %3212 to i64*
  %3213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3214 = getelementptr inbounds %struct.GPR, %struct.GPR* %3213, i32 0, i32 5
  %3215 = getelementptr inbounds %struct.Reg, %struct.Reg* %3214, i32 0, i32 0
  %RCX.i893 = bitcast %union.anon* %3215 to i64*
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3217 = getelementptr inbounds %struct.GPR, %struct.GPR* %3216, i32 0, i32 9
  %3218 = getelementptr inbounds %struct.Reg, %struct.Reg* %3217, i32 0, i32 0
  %RSI.i894 = bitcast %union.anon* %3218 to i64*
  %3219 = load i64, i64* %RAX.i892
  %3220 = load i64, i64* %RCX.i893
  %3221 = add i64 %3220, %3219
  %3222 = load i64, i64* %PC.i891
  %3223 = add i64 %3222, 4
  store i64 %3223, i64* %PC.i891
  %3224 = inttoptr i64 %3221 to i8*
  %3225 = load i8, i8* %3224
  %3226 = zext i8 %3225 to i64
  store i64 %3226, i64* %RSI.i894, align 8
  store %struct.Memory* %loadMem_4025eb, %struct.Memory** %MEMORY
  %loadMem_4025ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 33
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %3229 to i64*
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 9
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %3232 to i64*
  %3233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3234 = getelementptr inbounds %struct.GPR, %struct.GPR* %3233, i32 0, i32 15
  %3235 = getelementptr inbounds %struct.Reg, %struct.Reg* %3234, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %3235 to i64*
  %3236 = load i64, i64* %RSI.i
  %3237 = load i64, i64* %RBP.i890
  %3238 = sub i64 %3237, 76
  %3239 = load i64, i64* %PC.i889
  %3240 = add i64 %3239, 3
  store i64 %3240, i64* %PC.i889
  %3241 = trunc i64 %3236 to i32
  %3242 = inttoptr i64 %3238 to i32*
  %3243 = load i32, i32* %3242
  %3244 = sub i32 %3241, %3243
  %3245 = zext i32 %3244 to i64
  store i64 %3245, i64* %RSI.i, align 8
  %3246 = icmp ult i32 %3241, %3243
  %3247 = zext i1 %3246 to i8
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3247, i8* %3248, align 1
  %3249 = and i32 %3244, 255
  %3250 = call i32 @llvm.ctpop.i32(i32 %3249)
  %3251 = trunc i32 %3250 to i8
  %3252 = and i8 %3251, 1
  %3253 = xor i8 %3252, 1
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3253, i8* %3254, align 1
  %3255 = xor i32 %3243, %3241
  %3256 = xor i32 %3255, %3244
  %3257 = lshr i32 %3256, 4
  %3258 = trunc i32 %3257 to i8
  %3259 = and i8 %3258, 1
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3259, i8* %3260, align 1
  %3261 = icmp eq i32 %3244, 0
  %3262 = zext i1 %3261 to i8
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3262, i8* %3263, align 1
  %3264 = lshr i32 %3244, 31
  %3265 = trunc i32 %3264 to i8
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3265, i8* %3266, align 1
  %3267 = lshr i32 %3241, 31
  %3268 = lshr i32 %3243, 31
  %3269 = xor i32 %3268, %3267
  %3270 = xor i32 %3264, %3267
  %3271 = add i32 %3270, %3269
  %3272 = icmp eq i32 %3271, 2
  %3273 = zext i1 %3272 to i8
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3273, i8* %3274, align 1
  store %struct.Memory* %loadMem_4025ef, %struct.Memory** %MEMORY
  %loadMem_4025f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3276 = getelementptr inbounds %struct.GPR, %struct.GPR* %3275, i32 0, i32 33
  %3277 = getelementptr inbounds %struct.Reg, %struct.Reg* %3276, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %3277 to i64*
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3279 = getelementptr inbounds %struct.GPR, %struct.GPR* %3278, i32 0, i32 9
  %3280 = getelementptr inbounds %struct.Reg, %struct.Reg* %3279, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %3280 to i32*
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3282 = getelementptr inbounds %struct.GPR, %struct.GPR* %3281, i32 0, i32 15
  %3283 = getelementptr inbounds %struct.Reg, %struct.Reg* %3282, i32 0, i32 0
  %RBP.i888 = bitcast %union.anon* %3283 to i64*
  %3284 = load i64, i64* %RBP.i888
  %3285 = sub i64 %3284, 68
  %3286 = load i32, i32* %ESI.i
  %3287 = zext i32 %3286 to i64
  %3288 = load i64, i64* %PC.i887
  %3289 = add i64 %3288, 3
  store i64 %3289, i64* %PC.i887
  %3290 = inttoptr i64 %3285 to i32*
  store i32 %3286, i32* %3290
  store %struct.Memory* %loadMem_4025f2, %struct.Memory** %MEMORY
  %loadMem_4025f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3292 = getelementptr inbounds %struct.GPR, %struct.GPR* %3291, i32 0, i32 33
  %3293 = getelementptr inbounds %struct.Reg, %struct.Reg* %3292, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %3293 to i64*
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3295 = getelementptr inbounds %struct.GPR, %struct.GPR* %3294, i32 0, i32 15
  %3296 = getelementptr inbounds %struct.Reg, %struct.Reg* %3295, i32 0, i32 0
  %RBP.i886 = bitcast %union.anon* %3296 to i64*
  %3297 = load i64, i64* %RBP.i886
  %3298 = sub i64 %3297, 68
  %3299 = load i64, i64* %PC.i885
  %3300 = add i64 %3299, 4
  store i64 %3300, i64* %PC.i885
  %3301 = inttoptr i64 %3298 to i32*
  %3302 = load i32, i32* %3301
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3303, align 1
  %3304 = and i32 %3302, 255
  %3305 = call i32 @llvm.ctpop.i32(i32 %3304)
  %3306 = trunc i32 %3305 to i8
  %3307 = and i8 %3306, 1
  %3308 = xor i8 %3307, 1
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3308, i8* %3309, align 1
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3310, align 1
  %3311 = icmp eq i32 %3302, 0
  %3312 = zext i1 %3311 to i8
  %3313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3312, i8* %3313, align 1
  %3314 = lshr i32 %3302, 31
  %3315 = trunc i32 %3314 to i8
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3315, i8* %3316, align 1
  %3317 = lshr i32 %3302, 31
  %3318 = xor i32 %3314, %3317
  %3319 = add i32 %3318, %3317
  %3320 = icmp eq i32 %3319, 2
  %3321 = zext i1 %3320 to i8
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3321, i8* %3322, align 1
  store %struct.Memory* %loadMem_4025f5, %struct.Memory** %MEMORY
  %loadMem_4025f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3324 = getelementptr inbounds %struct.GPR, %struct.GPR* %3323, i32 0, i32 33
  %3325 = getelementptr inbounds %struct.Reg, %struct.Reg* %3324, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %3325 to i64*
  %3326 = load i64, i64* %PC.i884
  %3327 = add i64 %3326, 85
  %3328 = load i64, i64* %PC.i884
  %3329 = add i64 %3328, 6
  %3330 = load i64, i64* %PC.i884
  %3331 = add i64 %3330, 6
  store i64 %3331, i64* %PC.i884
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3333 = load i8, i8* %3332, align 1
  %3334 = icmp eq i8 %3333, 0
  %3335 = zext i1 %3334 to i8
  store i8 %3335, i8* %BRANCH_TAKEN, align 1
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3337 = select i1 %3334, i64 %3327, i64 %3329
  store i64 %3337, i64* %3336, align 8
  store %struct.Memory* %loadMem_4025f9, %struct.Memory** %MEMORY
  %loadBr_4025f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4025f9 = icmp eq i8 %loadBr_4025f9, 1
  br i1 %cmpBr_4025f9, label %block_.L_40264e, label %block_4025ff

block_4025ff:                                     ; preds = %block_.L_4025d5
  %loadMem_4025ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 33
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %3340 to i64*
  %3341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3342 = getelementptr inbounds %struct.GPR, %struct.GPR* %3341, i32 0, i32 1
  %3343 = getelementptr inbounds %struct.Reg, %struct.Reg* %3342, i32 0, i32 0
  %RAX.i882 = bitcast %union.anon* %3343 to i64*
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3345 = getelementptr inbounds %struct.GPR, %struct.GPR* %3344, i32 0, i32 15
  %3346 = getelementptr inbounds %struct.Reg, %struct.Reg* %3345, i32 0, i32 0
  %RBP.i883 = bitcast %union.anon* %3346 to i64*
  %3347 = load i64, i64* %RBP.i883
  %3348 = sub i64 %3347, 8
  %3349 = load i64, i64* %PC.i881
  %3350 = add i64 %3349, 4
  store i64 %3350, i64* %PC.i881
  %3351 = inttoptr i64 %3348 to i64*
  %3352 = load i64, i64* %3351
  store i64 %3352, i64* %RAX.i882, align 8
  store %struct.Memory* %loadMem_4025ff, %struct.Memory** %MEMORY
  %loadMem_402603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 33
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %3355 to i64*
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3357 = getelementptr inbounds %struct.GPR, %struct.GPR* %3356, i32 0, i32 5
  %3358 = getelementptr inbounds %struct.Reg, %struct.Reg* %3357, i32 0, i32 0
  %RCX.i879 = bitcast %union.anon* %3358 to i64*
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3360 = getelementptr inbounds %struct.GPR, %struct.GPR* %3359, i32 0, i32 15
  %3361 = getelementptr inbounds %struct.Reg, %struct.Reg* %3360, i32 0, i32 0
  %RBP.i880 = bitcast %union.anon* %3361 to i64*
  %3362 = load i64, i64* %RBP.i880
  %3363 = sub i64 %3362, 56
  %3364 = load i64, i64* %PC.i878
  %3365 = add i64 %3364, 4
  store i64 %3365, i64* %PC.i878
  %3366 = inttoptr i64 %3363 to i32*
  %3367 = load i32, i32* %3366
  %3368 = sext i32 %3367 to i64
  store i64 %3368, i64* %RCX.i879, align 8
  store %struct.Memory* %loadMem_402603, %struct.Memory** %MEMORY
  %loadMem_402607 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3370 = getelementptr inbounds %struct.GPR, %struct.GPR* %3369, i32 0, i32 33
  %3371 = getelementptr inbounds %struct.Reg, %struct.Reg* %3370, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %3371 to i64*
  %3372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3373 = getelementptr inbounds %struct.GPR, %struct.GPR* %3372, i32 0, i32 1
  %3374 = getelementptr inbounds %struct.Reg, %struct.Reg* %3373, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %3374 to i64*
  %3375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3376 = getelementptr inbounds %struct.GPR, %struct.GPR* %3375, i32 0, i32 5
  %3377 = getelementptr inbounds %struct.Reg, %struct.Reg* %3376, i32 0, i32 0
  %RCX.i876 = bitcast %union.anon* %3377 to i64*
  %3378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3379 = getelementptr inbounds %struct.GPR, %struct.GPR* %3378, i32 0, i32 7
  %3380 = getelementptr inbounds %struct.Reg, %struct.Reg* %3379, i32 0, i32 0
  %RDX.i877 = bitcast %union.anon* %3380 to i64*
  %3381 = load i64, i64* %RAX.i875
  %3382 = load i64, i64* %RCX.i876
  %3383 = mul i64 %3382, 4
  %3384 = add i64 %3383, %3381
  %3385 = load i64, i64* %PC.i874
  %3386 = add i64 %3385, 3
  store i64 %3386, i64* %PC.i874
  %3387 = inttoptr i64 %3384 to i32*
  %3388 = load i32, i32* %3387
  %3389 = zext i32 %3388 to i64
  store i64 %3389, i64* %RDX.i877, align 8
  store %struct.Memory* %loadMem_402607, %struct.Memory** %MEMORY
  %loadMem_40260a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3391 = getelementptr inbounds %struct.GPR, %struct.GPR* %3390, i32 0, i32 33
  %3392 = getelementptr inbounds %struct.Reg, %struct.Reg* %3391, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %3392 to i64*
  %3393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3394 = getelementptr inbounds %struct.GPR, %struct.GPR* %3393, i32 0, i32 7
  %3395 = getelementptr inbounds %struct.Reg, %struct.Reg* %3394, i32 0, i32 0
  %EDX.i872 = bitcast %union.anon* %3395 to i32*
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3397 = getelementptr inbounds %struct.GPR, %struct.GPR* %3396, i32 0, i32 15
  %3398 = getelementptr inbounds %struct.Reg, %struct.Reg* %3397, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %3398 to i64*
  %3399 = load i64, i64* %RBP.i873
  %3400 = sub i64 %3399, 1340
  %3401 = load i32, i32* %EDX.i872
  %3402 = zext i32 %3401 to i64
  %3403 = load i64, i64* %PC.i871
  %3404 = add i64 %3403, 6
  store i64 %3404, i64* %PC.i871
  %3405 = inttoptr i64 %3400 to i32*
  store i32 %3401, i32* %3405
  store %struct.Memory* %loadMem_40260a, %struct.Memory** %MEMORY
  %loadMem_402610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 33
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %3408 to i64*
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 1
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %RAX.i869 = bitcast %union.anon* %3411 to i64*
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 15
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %3414 to i64*
  %3415 = load i64, i64* %RBP.i870
  %3416 = sub i64 %3415, 8
  %3417 = load i64, i64* %PC.i868
  %3418 = add i64 %3417, 4
  store i64 %3418, i64* %PC.i868
  %3419 = inttoptr i64 %3416 to i64*
  %3420 = load i64, i64* %3419
  store i64 %3420, i64* %RAX.i869, align 8
  store %struct.Memory* %loadMem_402610, %struct.Memory** %MEMORY
  %loadMem_402614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 33
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %3423 to i64*
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3425 = getelementptr inbounds %struct.GPR, %struct.GPR* %3424, i32 0, i32 5
  %3426 = getelementptr inbounds %struct.Reg, %struct.Reg* %3425, i32 0, i32 0
  %RCX.i866 = bitcast %union.anon* %3426 to i64*
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3428 = getelementptr inbounds %struct.GPR, %struct.GPR* %3427, i32 0, i32 15
  %3429 = getelementptr inbounds %struct.Reg, %struct.Reg* %3428, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %3429 to i64*
  %3430 = load i64, i64* %RBP.i867
  %3431 = sub i64 %3430, 64
  %3432 = load i64, i64* %PC.i865
  %3433 = add i64 %3432, 4
  store i64 %3433, i64* %PC.i865
  %3434 = inttoptr i64 %3431 to i32*
  %3435 = load i32, i32* %3434
  %3436 = sext i32 %3435 to i64
  store i64 %3436, i64* %RCX.i866, align 8
  store %struct.Memory* %loadMem_402614, %struct.Memory** %MEMORY
  %loadMem_402618 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 33
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %3439 to i64*
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3441 = getelementptr inbounds %struct.GPR, %struct.GPR* %3440, i32 0, i32 1
  %3442 = getelementptr inbounds %struct.Reg, %struct.Reg* %3441, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %3442 to i64*
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3444 = getelementptr inbounds %struct.GPR, %struct.GPR* %3443, i32 0, i32 5
  %3445 = getelementptr inbounds %struct.Reg, %struct.Reg* %3444, i32 0, i32 0
  %RCX.i863 = bitcast %union.anon* %3445 to i64*
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 7
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %RDX.i864 = bitcast %union.anon* %3448 to i64*
  %3449 = load i64, i64* %RAX.i862
  %3450 = load i64, i64* %RCX.i863
  %3451 = mul i64 %3450, 4
  %3452 = add i64 %3451, %3449
  %3453 = load i64, i64* %PC.i861
  %3454 = add i64 %3453, 3
  store i64 %3454, i64* %PC.i861
  %3455 = inttoptr i64 %3452 to i32*
  %3456 = load i32, i32* %3455
  %3457 = zext i32 %3456 to i64
  store i64 %3457, i64* %RDX.i864, align 8
  store %struct.Memory* %loadMem_402618, %struct.Memory** %MEMORY
  %loadMem_40261b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3459 = getelementptr inbounds %struct.GPR, %struct.GPR* %3458, i32 0, i32 33
  %3460 = getelementptr inbounds %struct.Reg, %struct.Reg* %3459, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %3460 to i64*
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3462 = getelementptr inbounds %struct.GPR, %struct.GPR* %3461, i32 0, i32 1
  %3463 = getelementptr inbounds %struct.Reg, %struct.Reg* %3462, i32 0, i32 0
  %RAX.i859 = bitcast %union.anon* %3463 to i64*
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 15
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %RBP.i860 = bitcast %union.anon* %3466 to i64*
  %3467 = load i64, i64* %RBP.i860
  %3468 = sub i64 %3467, 8
  %3469 = load i64, i64* %PC.i858
  %3470 = add i64 %3469, 4
  store i64 %3470, i64* %PC.i858
  %3471 = inttoptr i64 %3468 to i64*
  %3472 = load i64, i64* %3471
  store i64 %3472, i64* %RAX.i859, align 8
  store %struct.Memory* %loadMem_40261b, %struct.Memory** %MEMORY
  %loadMem_40261f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3474 = getelementptr inbounds %struct.GPR, %struct.GPR* %3473, i32 0, i32 33
  %3475 = getelementptr inbounds %struct.Reg, %struct.Reg* %3474, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %3475 to i64*
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3477 = getelementptr inbounds %struct.GPR, %struct.GPR* %3476, i32 0, i32 5
  %3478 = getelementptr inbounds %struct.Reg, %struct.Reg* %3477, i32 0, i32 0
  %RCX.i856 = bitcast %union.anon* %3478 to i64*
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3480 = getelementptr inbounds %struct.GPR, %struct.GPR* %3479, i32 0, i32 15
  %3481 = getelementptr inbounds %struct.Reg, %struct.Reg* %3480, i32 0, i32 0
  %RBP.i857 = bitcast %union.anon* %3481 to i64*
  %3482 = load i64, i64* %RBP.i857
  %3483 = sub i64 %3482, 56
  %3484 = load i64, i64* %PC.i855
  %3485 = add i64 %3484, 4
  store i64 %3485, i64* %PC.i855
  %3486 = inttoptr i64 %3483 to i32*
  %3487 = load i32, i32* %3486
  %3488 = sext i32 %3487 to i64
  store i64 %3488, i64* %RCX.i856, align 8
  store %struct.Memory* %loadMem_40261f, %struct.Memory** %MEMORY
  %loadMem_402623 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 33
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 7
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %EDX.i852 = bitcast %union.anon* %3494 to i32*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 1
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %RAX.i853 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 5
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RCX.i854 = bitcast %union.anon* %3500 to i64*
  %3501 = load i64, i64* %RAX.i853
  %3502 = load i64, i64* %RCX.i854
  %3503 = mul i64 %3502, 4
  %3504 = add i64 %3503, %3501
  %3505 = load i32, i32* %EDX.i852
  %3506 = zext i32 %3505 to i64
  %3507 = load i64, i64* %PC.i851
  %3508 = add i64 %3507, 3
  store i64 %3508, i64* %PC.i851
  %3509 = inttoptr i64 %3504 to i32*
  store i32 %3505, i32* %3509
  store %struct.Memory* %loadMem_402623, %struct.Memory** %MEMORY
  %loadMem_402626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3511 = getelementptr inbounds %struct.GPR, %struct.GPR* %3510, i32 0, i32 33
  %3512 = getelementptr inbounds %struct.Reg, %struct.Reg* %3511, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %3512 to i64*
  %3513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3514 = getelementptr inbounds %struct.GPR, %struct.GPR* %3513, i32 0, i32 7
  %3515 = getelementptr inbounds %struct.Reg, %struct.Reg* %3514, i32 0, i32 0
  %RDX.i849 = bitcast %union.anon* %3515 to i64*
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3517 = getelementptr inbounds %struct.GPR, %struct.GPR* %3516, i32 0, i32 15
  %3518 = getelementptr inbounds %struct.Reg, %struct.Reg* %3517, i32 0, i32 0
  %RBP.i850 = bitcast %union.anon* %3518 to i64*
  %3519 = load i64, i64* %RBP.i850
  %3520 = sub i64 %3519, 1340
  %3521 = load i64, i64* %PC.i848
  %3522 = add i64 %3521, 6
  store i64 %3522, i64* %PC.i848
  %3523 = inttoptr i64 %3520 to i32*
  %3524 = load i32, i32* %3523
  %3525 = zext i32 %3524 to i64
  store i64 %3525, i64* %RDX.i849, align 8
  store %struct.Memory* %loadMem_402626, %struct.Memory** %MEMORY
  %loadMem_40262c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3527 = getelementptr inbounds %struct.GPR, %struct.GPR* %3526, i32 0, i32 33
  %3528 = getelementptr inbounds %struct.Reg, %struct.Reg* %3527, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %3528 to i64*
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3530 = getelementptr inbounds %struct.GPR, %struct.GPR* %3529, i32 0, i32 1
  %3531 = getelementptr inbounds %struct.Reg, %struct.Reg* %3530, i32 0, i32 0
  %RAX.i846 = bitcast %union.anon* %3531 to i64*
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3533 = getelementptr inbounds %struct.GPR, %struct.GPR* %3532, i32 0, i32 15
  %3534 = getelementptr inbounds %struct.Reg, %struct.Reg* %3533, i32 0, i32 0
  %RBP.i847 = bitcast %union.anon* %3534 to i64*
  %3535 = load i64, i64* %RBP.i847
  %3536 = sub i64 %3535, 8
  %3537 = load i64, i64* %PC.i845
  %3538 = add i64 %3537, 4
  store i64 %3538, i64* %PC.i845
  %3539 = inttoptr i64 %3536 to i64*
  %3540 = load i64, i64* %3539
  store i64 %3540, i64* %RAX.i846, align 8
  store %struct.Memory* %loadMem_40262c, %struct.Memory** %MEMORY
  %loadMem_402630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3542 = getelementptr inbounds %struct.GPR, %struct.GPR* %3541, i32 0, i32 33
  %3543 = getelementptr inbounds %struct.Reg, %struct.Reg* %3542, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %3543 to i64*
  %3544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3545 = getelementptr inbounds %struct.GPR, %struct.GPR* %3544, i32 0, i32 5
  %3546 = getelementptr inbounds %struct.Reg, %struct.Reg* %3545, i32 0, i32 0
  %RCX.i843 = bitcast %union.anon* %3546 to i64*
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3548 = getelementptr inbounds %struct.GPR, %struct.GPR* %3547, i32 0, i32 15
  %3549 = getelementptr inbounds %struct.Reg, %struct.Reg* %3548, i32 0, i32 0
  %RBP.i844 = bitcast %union.anon* %3549 to i64*
  %3550 = load i64, i64* %RBP.i844
  %3551 = sub i64 %3550, 64
  %3552 = load i64, i64* %PC.i842
  %3553 = add i64 %3552, 4
  store i64 %3553, i64* %PC.i842
  %3554 = inttoptr i64 %3551 to i32*
  %3555 = load i32, i32* %3554
  %3556 = sext i32 %3555 to i64
  store i64 %3556, i64* %RCX.i843, align 8
  store %struct.Memory* %loadMem_402630, %struct.Memory** %MEMORY
  %loadMem_402634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3558 = getelementptr inbounds %struct.GPR, %struct.GPR* %3557, i32 0, i32 33
  %3559 = getelementptr inbounds %struct.Reg, %struct.Reg* %3558, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %3559 to i64*
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 7
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %EDX.i839 = bitcast %union.anon* %3562 to i32*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 1
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %RAX.i840 = bitcast %union.anon* %3565 to i64*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 5
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %RCX.i841 = bitcast %union.anon* %3568 to i64*
  %3569 = load i64, i64* %RAX.i840
  %3570 = load i64, i64* %RCX.i841
  %3571 = mul i64 %3570, 4
  %3572 = add i64 %3571, %3569
  %3573 = load i32, i32* %EDX.i839
  %3574 = zext i32 %3573 to i64
  %3575 = load i64, i64* %PC.i838
  %3576 = add i64 %3575, 3
  store i64 %3576, i64* %PC.i838
  %3577 = inttoptr i64 %3572 to i32*
  store i32 %3573, i32* %3577
  store %struct.Memory* %loadMem_402634, %struct.Memory** %MEMORY
  %loadMem_402637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 33
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %3580 to i64*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 7
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %RDX.i836 = bitcast %union.anon* %3583 to i64*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 15
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %3586 to i64*
  %3587 = load i64, i64* %RBP.i837
  %3588 = sub i64 %3587, 64
  %3589 = load i64, i64* %PC.i835
  %3590 = add i64 %3589, 3
  store i64 %3590, i64* %PC.i835
  %3591 = inttoptr i64 %3588 to i32*
  %3592 = load i32, i32* %3591
  %3593 = zext i32 %3592 to i64
  store i64 %3593, i64* %RDX.i836, align 8
  store %struct.Memory* %loadMem_402637, %struct.Memory** %MEMORY
  %loadMem_40263a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 33
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 7
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %RDX.i834 = bitcast %union.anon* %3599 to i64*
  %3600 = load i64, i64* %RDX.i834
  %3601 = load i64, i64* %PC.i833
  %3602 = add i64 %3601, 3
  store i64 %3602, i64* %PC.i833
  %3603 = trunc i64 %3600 to i32
  %3604 = add i32 -1, %3603
  %3605 = zext i32 %3604 to i64
  store i64 %3605, i64* %RDX.i834, align 8
  %3606 = icmp ult i32 %3604, %3603
  %3607 = icmp ult i32 %3604, -1
  %3608 = or i1 %3606, %3607
  %3609 = zext i1 %3608 to i8
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3609, i8* %3610, align 1
  %3611 = and i32 %3604, 255
  %3612 = call i32 @llvm.ctpop.i32(i32 %3611)
  %3613 = trunc i32 %3612 to i8
  %3614 = and i8 %3613, 1
  %3615 = xor i8 %3614, 1
  %3616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3615, i8* %3616, align 1
  %3617 = xor i64 -1, %3600
  %3618 = trunc i64 %3617 to i32
  %3619 = xor i32 %3618, %3604
  %3620 = lshr i32 %3619, 4
  %3621 = trunc i32 %3620 to i8
  %3622 = and i8 %3621, 1
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3622, i8* %3623, align 1
  %3624 = icmp eq i32 %3604, 0
  %3625 = zext i1 %3624 to i8
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3625, i8* %3626, align 1
  %3627 = lshr i32 %3604, 31
  %3628 = trunc i32 %3627 to i8
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3628, i8* %3629, align 1
  %3630 = lshr i32 %3603, 31
  %3631 = xor i32 %3627, %3630
  %3632 = xor i32 %3627, 1
  %3633 = add i32 %3631, %3632
  %3634 = icmp eq i32 %3633, 2
  %3635 = zext i1 %3634 to i8
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3635, i8* %3636, align 1
  store %struct.Memory* %loadMem_40263a, %struct.Memory** %MEMORY
  %loadMem_40263d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3638 = getelementptr inbounds %struct.GPR, %struct.GPR* %3637, i32 0, i32 33
  %3639 = getelementptr inbounds %struct.Reg, %struct.Reg* %3638, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %3639 to i64*
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 7
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %EDX.i831 = bitcast %union.anon* %3642 to i32*
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3644 = getelementptr inbounds %struct.GPR, %struct.GPR* %3643, i32 0, i32 15
  %3645 = getelementptr inbounds %struct.Reg, %struct.Reg* %3644, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %3645 to i64*
  %3646 = load i64, i64* %RBP.i832
  %3647 = sub i64 %3646, 64
  %3648 = load i32, i32* %EDX.i831
  %3649 = zext i32 %3648 to i64
  %3650 = load i64, i64* %PC.i830
  %3651 = add i64 %3650, 3
  store i64 %3651, i64* %PC.i830
  %3652 = inttoptr i64 %3647 to i32*
  store i32 %3648, i32* %3652
  store %struct.Memory* %loadMem_40263d, %struct.Memory** %MEMORY
  %loadMem_402640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 33
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3655 to i64*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 7
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %RDX.i828 = bitcast %union.anon* %3658 to i64*
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3660 = getelementptr inbounds %struct.GPR, %struct.GPR* %3659, i32 0, i32 15
  %3661 = getelementptr inbounds %struct.Reg, %struct.Reg* %3660, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %3661 to i64*
  %3662 = load i64, i64* %RBP.i829
  %3663 = sub i64 %3662, 56
  %3664 = load i64, i64* %PC.i827
  %3665 = add i64 %3664, 3
  store i64 %3665, i64* %PC.i827
  %3666 = inttoptr i64 %3663 to i32*
  %3667 = load i32, i32* %3666
  %3668 = zext i32 %3667 to i64
  store i64 %3668, i64* %RDX.i828, align 8
  store %struct.Memory* %loadMem_402640, %struct.Memory** %MEMORY
  %loadMem_402643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 33
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %3671 to i64*
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 7
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %RDX.i826 = bitcast %union.anon* %3674 to i64*
  %3675 = load i64, i64* %RDX.i826
  %3676 = load i64, i64* %PC.i825
  %3677 = add i64 %3676, 3
  store i64 %3677, i64* %PC.i825
  %3678 = trunc i64 %3675 to i32
  %3679 = add i32 -1, %3678
  %3680 = zext i32 %3679 to i64
  store i64 %3680, i64* %RDX.i826, align 8
  %3681 = icmp ult i32 %3679, %3678
  %3682 = icmp ult i32 %3679, -1
  %3683 = or i1 %3681, %3682
  %3684 = zext i1 %3683 to i8
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3684, i8* %3685, align 1
  %3686 = and i32 %3679, 255
  %3687 = call i32 @llvm.ctpop.i32(i32 %3686)
  %3688 = trunc i32 %3687 to i8
  %3689 = and i8 %3688, 1
  %3690 = xor i8 %3689, 1
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3690, i8* %3691, align 1
  %3692 = xor i64 -1, %3675
  %3693 = trunc i64 %3692 to i32
  %3694 = xor i32 %3693, %3679
  %3695 = lshr i32 %3694, 4
  %3696 = trunc i32 %3695 to i8
  %3697 = and i8 %3696, 1
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3697, i8* %3698, align 1
  %3699 = icmp eq i32 %3679, 0
  %3700 = zext i1 %3699 to i8
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3700, i8* %3701, align 1
  %3702 = lshr i32 %3679, 31
  %3703 = trunc i32 %3702 to i8
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3703, i8* %3704, align 1
  %3705 = lshr i32 %3678, 31
  %3706 = xor i32 %3702, %3705
  %3707 = xor i32 %3702, 1
  %3708 = add i32 %3706, %3707
  %3709 = icmp eq i32 %3708, 2
  %3710 = zext i1 %3709 to i8
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3710, i8* %3711, align 1
  store %struct.Memory* %loadMem_402643, %struct.Memory** %MEMORY
  %loadMem_402646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 33
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %3714 to i64*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3716 = getelementptr inbounds %struct.GPR, %struct.GPR* %3715, i32 0, i32 7
  %3717 = getelementptr inbounds %struct.Reg, %struct.Reg* %3716, i32 0, i32 0
  %EDX.i823 = bitcast %union.anon* %3717 to i32*
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 15
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %RBP.i824 = bitcast %union.anon* %3720 to i64*
  %3721 = load i64, i64* %RBP.i824
  %3722 = sub i64 %3721, 56
  %3723 = load i32, i32* %EDX.i823
  %3724 = zext i32 %3723 to i64
  %3725 = load i64, i64* %PC.i822
  %3726 = add i64 %3725, 3
  store i64 %3726, i64* %PC.i822
  %3727 = inttoptr i64 %3722 to i32*
  store i32 %3723, i32* %3727
  store %struct.Memory* %loadMem_402646, %struct.Memory** %MEMORY
  %loadMem_402649 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 33
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3730 to i64*
  %3731 = load i64, i64* %PC.i821
  %3732 = add i64 %3731, -133
  %3733 = load i64, i64* %PC.i821
  %3734 = add i64 %3733, 5
  store i64 %3734, i64* %PC.i821
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3732, i64* %3735, align 8
  store %struct.Memory* %loadMem_402649, %struct.Memory** %MEMORY
  br label %block_.L_4025c4

block_.L_40264e:                                  ; preds = %block_.L_4025d5
  %loadMem_40264e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 33
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %3738 to i64*
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3740 = getelementptr inbounds %struct.GPR, %struct.GPR* %3739, i32 0, i32 15
  %3741 = getelementptr inbounds %struct.Reg, %struct.Reg* %3740, i32 0, i32 0
  %RBP.i820 = bitcast %union.anon* %3741 to i64*
  %3742 = load i64, i64* %RBP.i820
  %3743 = sub i64 %3742, 68
  %3744 = load i64, i64* %PC.i819
  %3745 = add i64 %3744, 4
  store i64 %3745, i64* %PC.i819
  %3746 = inttoptr i64 %3743 to i32*
  %3747 = load i32, i32* %3746
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3748, align 1
  %3749 = and i32 %3747, 255
  %3750 = call i32 @llvm.ctpop.i32(i32 %3749)
  %3751 = trunc i32 %3750 to i8
  %3752 = and i8 %3751, 1
  %3753 = xor i8 %3752, 1
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3753, i8* %3754, align 1
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3755, align 1
  %3756 = icmp eq i32 %3747, 0
  %3757 = zext i1 %3756 to i8
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3757, i8* %3758, align 1
  %3759 = lshr i32 %3747, 31
  %3760 = trunc i32 %3759 to i8
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3760, i8* %3761, align 1
  %3762 = lshr i32 %3747, 31
  %3763 = xor i32 %3759, %3762
  %3764 = add i32 %3763, %3762
  %3765 = icmp eq i32 %3764, 2
  %3766 = zext i1 %3765 to i8
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3766, i8* %3767, align 1
  store %struct.Memory* %loadMem_40264e, %struct.Memory** %MEMORY
  %loadMem_402652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 33
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3770 to i64*
  %3771 = load i64, i64* %PC.i818
  %3772 = add i64 %3771, 11
  %3773 = load i64, i64* %PC.i818
  %3774 = add i64 %3773, 6
  %3775 = load i64, i64* %PC.i818
  %3776 = add i64 %3775, 6
  store i64 %3776, i64* %PC.i818
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3778 = load i8, i8* %3777, align 1
  %3779 = icmp ne i8 %3778, 0
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3781 = load i8, i8* %3780, align 1
  %3782 = icmp ne i8 %3781, 0
  %3783 = xor i1 %3779, %3782
  %3784 = xor i1 %3783, true
  %3785 = zext i1 %3784 to i8
  store i8 %3785, i8* %BRANCH_TAKEN, align 1
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3787 = select i1 %3783, i64 %3774, i64 %3772
  store i64 %3787, i64* %3786, align 8
  store %struct.Memory* %loadMem_402652, %struct.Memory** %MEMORY
  %loadBr_402652 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402652 = icmp eq i8 %loadBr_402652, 1
  br i1 %cmpBr_402652, label %block_.L_40265d, label %block_402658

block_402658:                                     ; preds = %block_.L_40264e
  %loadMem_402658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 33
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %3790 to i64*
  %3791 = load i64, i64* %PC.i817
  %3792 = add i64 %3791, 19
  %3793 = load i64, i64* %PC.i817
  %3794 = add i64 %3793, 5
  store i64 %3794, i64* %PC.i817
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3792, i64* %3795, align 8
  store %struct.Memory* %loadMem_402658, %struct.Memory** %MEMORY
  br label %block_.L_40266b

block_.L_40265d:                                  ; preds = %block_.L_40264e
  %loadMem_40265d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 33
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %3798 to i64*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 1
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %RAX.i815 = bitcast %union.anon* %3801 to i64*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 15
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %RBP.i816 = bitcast %union.anon* %3804 to i64*
  %3805 = load i64, i64* %RBP.i816
  %3806 = sub i64 %3805, 56
  %3807 = load i64, i64* %PC.i814
  %3808 = add i64 %3807, 3
  store i64 %3808, i64* %PC.i814
  %3809 = inttoptr i64 %3806 to i32*
  %3810 = load i32, i32* %3809
  %3811 = zext i32 %3810 to i64
  store i64 %3811, i64* %RAX.i815, align 8
  store %struct.Memory* %loadMem_40265d, %struct.Memory** %MEMORY
  %loadMem_402660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 33
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3816 = getelementptr inbounds %struct.GPR, %struct.GPR* %3815, i32 0, i32 1
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %3817 to i64*
  %3818 = load i64, i64* %RAX.i813
  %3819 = load i64, i64* %PC.i812
  %3820 = add i64 %3819, 3
  store i64 %3820, i64* %PC.i812
  %3821 = trunc i64 %3818 to i32
  %3822 = add i32 -1, %3821
  %3823 = zext i32 %3822 to i64
  store i64 %3823, i64* %RAX.i813, align 8
  %3824 = icmp ult i32 %3822, %3821
  %3825 = icmp ult i32 %3822, -1
  %3826 = or i1 %3824, %3825
  %3827 = zext i1 %3826 to i8
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3827, i8* %3828, align 1
  %3829 = and i32 %3822, 255
  %3830 = call i32 @llvm.ctpop.i32(i32 %3829)
  %3831 = trunc i32 %3830 to i8
  %3832 = and i8 %3831, 1
  %3833 = xor i8 %3832, 1
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3833, i8* %3834, align 1
  %3835 = xor i64 -1, %3818
  %3836 = trunc i64 %3835 to i32
  %3837 = xor i32 %3836, %3822
  %3838 = lshr i32 %3837, 4
  %3839 = trunc i32 %3838 to i8
  %3840 = and i8 %3839, 1
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3840, i8* %3841, align 1
  %3842 = icmp eq i32 %3822, 0
  %3843 = zext i1 %3842 to i8
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3843, i8* %3844, align 1
  %3845 = lshr i32 %3822, 31
  %3846 = trunc i32 %3845 to i8
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3846, i8* %3847, align 1
  %3848 = lshr i32 %3821, 31
  %3849 = xor i32 %3845, %3848
  %3850 = xor i32 %3845, 1
  %3851 = add i32 %3849, %3850
  %3852 = icmp eq i32 %3851, 2
  %3853 = zext i1 %3852 to i8
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3853, i8* %3854, align 1
  store %struct.Memory* %loadMem_402660, %struct.Memory** %MEMORY
  %loadMem_402663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3856 = getelementptr inbounds %struct.GPR, %struct.GPR* %3855, i32 0, i32 33
  %3857 = getelementptr inbounds %struct.Reg, %struct.Reg* %3856, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %3857 to i64*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3859 = getelementptr inbounds %struct.GPR, %struct.GPR* %3858, i32 0, i32 1
  %3860 = getelementptr inbounds %struct.Reg, %struct.Reg* %3859, i32 0, i32 0
  %EAX.i810 = bitcast %union.anon* %3860 to i32*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3862 = getelementptr inbounds %struct.GPR, %struct.GPR* %3861, i32 0, i32 15
  %3863 = getelementptr inbounds %struct.Reg, %struct.Reg* %3862, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %3863 to i64*
  %3864 = load i64, i64* %RBP.i811
  %3865 = sub i64 %3864, 56
  %3866 = load i32, i32* %EAX.i810
  %3867 = zext i32 %3866 to i64
  %3868 = load i64, i64* %PC.i809
  %3869 = add i64 %3868, 3
  store i64 %3869, i64* %PC.i809
  %3870 = inttoptr i64 %3865 to i32*
  store i32 %3866, i32* %3870
  store %struct.Memory* %loadMem_402663, %struct.Memory** %MEMORY
  %loadMem_402666 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3872 = getelementptr inbounds %struct.GPR, %struct.GPR* %3871, i32 0, i32 33
  %3873 = getelementptr inbounds %struct.Reg, %struct.Reg* %3872, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %3873 to i64*
  %3874 = load i64, i64* %PC.i808
  %3875 = add i64 %3874, -162
  %3876 = load i64, i64* %PC.i808
  %3877 = add i64 %3876, 5
  store i64 %3877, i64* %PC.i808
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3875, i64* %3878, align 8
  store %struct.Memory* %loadMem_402666, %struct.Memory** %MEMORY
  br label %block_.L_4025c4

block_.L_40266b:                                  ; preds = %block_402658, %block_4025d0
  %loadMem_40266b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 33
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %3881 to i64*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 1
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %3884 to i64*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 15
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %3887 to i64*
  %3888 = load i64, i64* %RBP.i807
  %3889 = sub i64 %3888, 52
  %3890 = load i64, i64* %PC.i805
  %3891 = add i64 %3890, 3
  store i64 %3891, i64* %PC.i805
  %3892 = inttoptr i64 %3889 to i32*
  %3893 = load i32, i32* %3892
  %3894 = zext i32 %3893 to i64
  store i64 %3894, i64* %RAX.i806, align 8
  store %struct.Memory* %loadMem_40266b, %struct.Memory** %MEMORY
  %loadMem_40266e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3896 = getelementptr inbounds %struct.GPR, %struct.GPR* %3895, i32 0, i32 33
  %3897 = getelementptr inbounds %struct.Reg, %struct.Reg* %3896, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %3897 to i64*
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3899 = getelementptr inbounds %struct.GPR, %struct.GPR* %3898, i32 0, i32 1
  %3900 = getelementptr inbounds %struct.Reg, %struct.Reg* %3899, i32 0, i32 0
  %EAX.i803 = bitcast %union.anon* %3900 to i32*
  %3901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3902 = getelementptr inbounds %struct.GPR, %struct.GPR* %3901, i32 0, i32 15
  %3903 = getelementptr inbounds %struct.Reg, %struct.Reg* %3902, i32 0, i32 0
  %RBP.i804 = bitcast %union.anon* %3903 to i64*
  %3904 = load i32, i32* %EAX.i803
  %3905 = zext i32 %3904 to i64
  %3906 = load i64, i64* %RBP.i804
  %3907 = sub i64 %3906, 56
  %3908 = load i64, i64* %PC.i802
  %3909 = add i64 %3908, 3
  store i64 %3909, i64* %PC.i802
  %3910 = inttoptr i64 %3907 to i32*
  %3911 = load i32, i32* %3910
  %3912 = sub i32 %3904, %3911
  %3913 = icmp ult i32 %3904, %3911
  %3914 = zext i1 %3913 to i8
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3914, i8* %3915, align 1
  %3916 = and i32 %3912, 255
  %3917 = call i32 @llvm.ctpop.i32(i32 %3916)
  %3918 = trunc i32 %3917 to i8
  %3919 = and i8 %3918, 1
  %3920 = xor i8 %3919, 1
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3920, i8* %3921, align 1
  %3922 = xor i32 %3911, %3904
  %3923 = xor i32 %3922, %3912
  %3924 = lshr i32 %3923, 4
  %3925 = trunc i32 %3924 to i8
  %3926 = and i8 %3925, 1
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3926, i8* %3927, align 1
  %3928 = icmp eq i32 %3912, 0
  %3929 = zext i1 %3928 to i8
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3929, i8* %3930, align 1
  %3931 = lshr i32 %3912, 31
  %3932 = trunc i32 %3931 to i8
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3932, i8* %3933, align 1
  %3934 = lshr i32 %3904, 31
  %3935 = lshr i32 %3911, 31
  %3936 = xor i32 %3935, %3934
  %3937 = xor i32 %3931, %3934
  %3938 = add i32 %3937, %3936
  %3939 = icmp eq i32 %3938, 2
  %3940 = zext i1 %3939 to i8
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3940, i8* %3941, align 1
  store %struct.Memory* %loadMem_40266e, %struct.Memory** %MEMORY
  %loadMem_402671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3943 = getelementptr inbounds %struct.GPR, %struct.GPR* %3942, i32 0, i32 33
  %3944 = getelementptr inbounds %struct.Reg, %struct.Reg* %3943, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %3944 to i64*
  %3945 = load i64, i64* %PC.i801
  %3946 = add i64 %3945, 11
  %3947 = load i64, i64* %PC.i801
  %3948 = add i64 %3947, 6
  %3949 = load i64, i64* %PC.i801
  %3950 = add i64 %3949, 6
  store i64 %3950, i64* %PC.i801
  %3951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3952 = load i8, i8* %3951, align 1
  %3953 = icmp ne i8 %3952, 0
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3955 = load i8, i8* %3954, align 1
  %3956 = icmp ne i8 %3955, 0
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3958 = load i8, i8* %3957, align 1
  %3959 = icmp ne i8 %3958, 0
  %3960 = xor i1 %3956, %3959
  %3961 = or i1 %3953, %3960
  %3962 = zext i1 %3961 to i8
  store i8 %3962, i8* %BRANCH_TAKEN, align 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3964 = select i1 %3961, i64 %3946, i64 %3948
  store i64 %3964, i64* %3963, align 8
  store %struct.Memory* %loadMem_402671, %struct.Memory** %MEMORY
  %loadBr_402671 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402671 = icmp eq i8 %loadBr_402671, 1
  br i1 %cmpBr_402671, label %block_.L_40267c, label %block_402677

block_402677:                                     ; preds = %block_.L_40266b
  %loadMem_402677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3966 = getelementptr inbounds %struct.GPR, %struct.GPR* %3965, i32 0, i32 33
  %3967 = getelementptr inbounds %struct.Reg, %struct.Reg* %3966, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3967 to i64*
  %3968 = load i64, i64* %PC.i800
  %3969 = add i64 %3968, 84
  %3970 = load i64, i64* %PC.i800
  %3971 = add i64 %3970, 5
  store i64 %3971, i64* %PC.i800
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3969, i64* %3972, align 8
  store %struct.Memory* %loadMem_402677, %struct.Memory** %MEMORY
  br label %block_.L_4026cb

block_.L_40267c:                                  ; preds = %block_.L_40266b
  %loadMem_40267c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3974 = getelementptr inbounds %struct.GPR, %struct.GPR* %3973, i32 0, i32 33
  %3975 = getelementptr inbounds %struct.Reg, %struct.Reg* %3974, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %3975 to i64*
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3977 = getelementptr inbounds %struct.GPR, %struct.GPR* %3976, i32 0, i32 1
  %3978 = getelementptr inbounds %struct.Reg, %struct.Reg* %3977, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %3978 to i64*
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3980 = getelementptr inbounds %struct.GPR, %struct.GPR* %3979, i32 0, i32 15
  %3981 = getelementptr inbounds %struct.Reg, %struct.Reg* %3980, i32 0, i32 0
  %RBP.i799 = bitcast %union.anon* %3981 to i64*
  %3982 = load i64, i64* %RBP.i799
  %3983 = sub i64 %3982, 8
  %3984 = load i64, i64* %PC.i797
  %3985 = add i64 %3984, 4
  store i64 %3985, i64* %PC.i797
  %3986 = inttoptr i64 %3983 to i64*
  %3987 = load i64, i64* %3986
  store i64 %3987, i64* %RAX.i798, align 8
  store %struct.Memory* %loadMem_40267c, %struct.Memory** %MEMORY
  %loadMem_402680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 33
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3990 to i64*
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3992 = getelementptr inbounds %struct.GPR, %struct.GPR* %3991, i32 0, i32 5
  %3993 = getelementptr inbounds %struct.Reg, %struct.Reg* %3992, i32 0, i32 0
  %RCX.i795 = bitcast %union.anon* %3993 to i64*
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3995 = getelementptr inbounds %struct.GPR, %struct.GPR* %3994, i32 0, i32 15
  %3996 = getelementptr inbounds %struct.Reg, %struct.Reg* %3995, i32 0, i32 0
  %RBP.i796 = bitcast %union.anon* %3996 to i64*
  %3997 = load i64, i64* %RBP.i796
  %3998 = sub i64 %3997, 52
  %3999 = load i64, i64* %PC.i794
  %4000 = add i64 %3999, 4
  store i64 %4000, i64* %PC.i794
  %4001 = inttoptr i64 %3998 to i32*
  %4002 = load i32, i32* %4001
  %4003 = sext i32 %4002 to i64
  store i64 %4003, i64* %RCX.i795, align 8
  store %struct.Memory* %loadMem_402680, %struct.Memory** %MEMORY
  %loadMem_402684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4005 = getelementptr inbounds %struct.GPR, %struct.GPR* %4004, i32 0, i32 33
  %4006 = getelementptr inbounds %struct.Reg, %struct.Reg* %4005, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %4006 to i64*
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4008 = getelementptr inbounds %struct.GPR, %struct.GPR* %4007, i32 0, i32 1
  %4009 = getelementptr inbounds %struct.Reg, %struct.Reg* %4008, i32 0, i32 0
  %RAX.i791 = bitcast %union.anon* %4009 to i64*
  %4010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4011 = getelementptr inbounds %struct.GPR, %struct.GPR* %4010, i32 0, i32 5
  %4012 = getelementptr inbounds %struct.Reg, %struct.Reg* %4011, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %4012 to i64*
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 7
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %RDX.i793 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %RAX.i791
  %4017 = load i64, i64* %RCX.i792
  %4018 = mul i64 %4017, 4
  %4019 = add i64 %4018, %4016
  %4020 = load i64, i64* %PC.i790
  %4021 = add i64 %4020, 3
  store i64 %4021, i64* %PC.i790
  %4022 = inttoptr i64 %4019 to i32*
  %4023 = load i32, i32* %4022
  %4024 = zext i32 %4023 to i64
  store i64 %4024, i64* %RDX.i793, align 8
  store %struct.Memory* %loadMem_402684, %struct.Memory** %MEMORY
  %loadMem_402687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4026 = getelementptr inbounds %struct.GPR, %struct.GPR* %4025, i32 0, i32 33
  %4027 = getelementptr inbounds %struct.Reg, %struct.Reg* %4026, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %4027 to i64*
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4029 = getelementptr inbounds %struct.GPR, %struct.GPR* %4028, i32 0, i32 7
  %4030 = getelementptr inbounds %struct.Reg, %struct.Reg* %4029, i32 0, i32 0
  %EDX.i788 = bitcast %union.anon* %4030 to i32*
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 15
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %RBP.i789 = bitcast %union.anon* %4033 to i64*
  %4034 = load i64, i64* %RBP.i789
  %4035 = sub i64 %4034, 1344
  %4036 = load i32, i32* %EDX.i788
  %4037 = zext i32 %4036 to i64
  %4038 = load i64, i64* %PC.i787
  %4039 = add i64 %4038, 6
  store i64 %4039, i64* %PC.i787
  %4040 = inttoptr i64 %4035 to i32*
  store i32 %4036, i32* %4040
  store %struct.Memory* %loadMem_402687, %struct.Memory** %MEMORY
  %loadMem_40268d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4042 = getelementptr inbounds %struct.GPR, %struct.GPR* %4041, i32 0, i32 33
  %4043 = getelementptr inbounds %struct.Reg, %struct.Reg* %4042, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %4043 to i64*
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 1
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %RAX.i785 = bitcast %union.anon* %4046 to i64*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 15
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %4049 to i64*
  %4050 = load i64, i64* %RBP.i786
  %4051 = sub i64 %4050, 8
  %4052 = load i64, i64* %PC.i784
  %4053 = add i64 %4052, 4
  store i64 %4053, i64* %PC.i784
  %4054 = inttoptr i64 %4051 to i64*
  %4055 = load i64, i64* %4054
  store i64 %4055, i64* %RAX.i785, align 8
  store %struct.Memory* %loadMem_40268d, %struct.Memory** %MEMORY
  %loadMem_402691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 33
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %4058 to i64*
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4060 = getelementptr inbounds %struct.GPR, %struct.GPR* %4059, i32 0, i32 5
  %4061 = getelementptr inbounds %struct.Reg, %struct.Reg* %4060, i32 0, i32 0
  %RCX.i782 = bitcast %union.anon* %4061 to i64*
  %4062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4063 = getelementptr inbounds %struct.GPR, %struct.GPR* %4062, i32 0, i32 15
  %4064 = getelementptr inbounds %struct.Reg, %struct.Reg* %4063, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %4064 to i64*
  %4065 = load i64, i64* %RBP.i783
  %4066 = sub i64 %4065, 56
  %4067 = load i64, i64* %PC.i781
  %4068 = add i64 %4067, 4
  store i64 %4068, i64* %PC.i781
  %4069 = inttoptr i64 %4066 to i32*
  %4070 = load i32, i32* %4069
  %4071 = sext i32 %4070 to i64
  store i64 %4071, i64* %RCX.i782, align 8
  store %struct.Memory* %loadMem_402691, %struct.Memory** %MEMORY
  %loadMem_402695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4073 = getelementptr inbounds %struct.GPR, %struct.GPR* %4072, i32 0, i32 33
  %4074 = getelementptr inbounds %struct.Reg, %struct.Reg* %4073, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %4074 to i64*
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4076 = getelementptr inbounds %struct.GPR, %struct.GPR* %4075, i32 0, i32 1
  %4077 = getelementptr inbounds %struct.Reg, %struct.Reg* %4076, i32 0, i32 0
  %RAX.i778 = bitcast %union.anon* %4077 to i64*
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 5
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %RCX.i779 = bitcast %union.anon* %4080 to i64*
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4082 = getelementptr inbounds %struct.GPR, %struct.GPR* %4081, i32 0, i32 7
  %4083 = getelementptr inbounds %struct.Reg, %struct.Reg* %4082, i32 0, i32 0
  %RDX.i780 = bitcast %union.anon* %4083 to i64*
  %4084 = load i64, i64* %RAX.i778
  %4085 = load i64, i64* %RCX.i779
  %4086 = mul i64 %4085, 4
  %4087 = add i64 %4086, %4084
  %4088 = load i64, i64* %PC.i777
  %4089 = add i64 %4088, 3
  store i64 %4089, i64* %PC.i777
  %4090 = inttoptr i64 %4087 to i32*
  %4091 = load i32, i32* %4090
  %4092 = zext i32 %4091 to i64
  store i64 %4092, i64* %RDX.i780, align 8
  store %struct.Memory* %loadMem_402695, %struct.Memory** %MEMORY
  %loadMem_402698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 33
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %4095 to i64*
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 1
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %RAX.i775 = bitcast %union.anon* %4098 to i64*
  %4099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4100 = getelementptr inbounds %struct.GPR, %struct.GPR* %4099, i32 0, i32 15
  %4101 = getelementptr inbounds %struct.Reg, %struct.Reg* %4100, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %4101 to i64*
  %4102 = load i64, i64* %RBP.i776
  %4103 = sub i64 %4102, 8
  %4104 = load i64, i64* %PC.i774
  %4105 = add i64 %4104, 4
  store i64 %4105, i64* %PC.i774
  %4106 = inttoptr i64 %4103 to i64*
  %4107 = load i64, i64* %4106
  store i64 %4107, i64* %RAX.i775, align 8
  store %struct.Memory* %loadMem_402698, %struct.Memory** %MEMORY
  %loadMem_40269c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 33
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %4110 to i64*
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4112 = getelementptr inbounds %struct.GPR, %struct.GPR* %4111, i32 0, i32 5
  %4113 = getelementptr inbounds %struct.Reg, %struct.Reg* %4112, i32 0, i32 0
  %RCX.i772 = bitcast %union.anon* %4113 to i64*
  %4114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4115 = getelementptr inbounds %struct.GPR, %struct.GPR* %4114, i32 0, i32 15
  %4116 = getelementptr inbounds %struct.Reg, %struct.Reg* %4115, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %4116 to i64*
  %4117 = load i64, i64* %RBP.i773
  %4118 = sub i64 %4117, 52
  %4119 = load i64, i64* %PC.i771
  %4120 = add i64 %4119, 4
  store i64 %4120, i64* %PC.i771
  %4121 = inttoptr i64 %4118 to i32*
  %4122 = load i32, i32* %4121
  %4123 = sext i32 %4122 to i64
  store i64 %4123, i64* %RCX.i772, align 8
  store %struct.Memory* %loadMem_40269c, %struct.Memory** %MEMORY
  %loadMem_4026a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4125 = getelementptr inbounds %struct.GPR, %struct.GPR* %4124, i32 0, i32 33
  %4126 = getelementptr inbounds %struct.Reg, %struct.Reg* %4125, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %4126 to i64*
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4128 = getelementptr inbounds %struct.GPR, %struct.GPR* %4127, i32 0, i32 7
  %4129 = getelementptr inbounds %struct.Reg, %struct.Reg* %4128, i32 0, i32 0
  %EDX.i768 = bitcast %union.anon* %4129 to i32*
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4131 = getelementptr inbounds %struct.GPR, %struct.GPR* %4130, i32 0, i32 1
  %4132 = getelementptr inbounds %struct.Reg, %struct.Reg* %4131, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %4132 to i64*
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4134 = getelementptr inbounds %struct.GPR, %struct.GPR* %4133, i32 0, i32 5
  %4135 = getelementptr inbounds %struct.Reg, %struct.Reg* %4134, i32 0, i32 0
  %RCX.i770 = bitcast %union.anon* %4135 to i64*
  %4136 = load i64, i64* %RAX.i769
  %4137 = load i64, i64* %RCX.i770
  %4138 = mul i64 %4137, 4
  %4139 = add i64 %4138, %4136
  %4140 = load i32, i32* %EDX.i768
  %4141 = zext i32 %4140 to i64
  %4142 = load i64, i64* %PC.i767
  %4143 = add i64 %4142, 3
  store i64 %4143, i64* %PC.i767
  %4144 = inttoptr i64 %4139 to i32*
  store i32 %4140, i32* %4144
  store %struct.Memory* %loadMem_4026a0, %struct.Memory** %MEMORY
  %loadMem_4026a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4146 = getelementptr inbounds %struct.GPR, %struct.GPR* %4145, i32 0, i32 33
  %4147 = getelementptr inbounds %struct.Reg, %struct.Reg* %4146, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %4147 to i64*
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 7
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %RDX.i765 = bitcast %union.anon* %4150 to i64*
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 15
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %4153 to i64*
  %4154 = load i64, i64* %RBP.i766
  %4155 = sub i64 %4154, 1344
  %4156 = load i64, i64* %PC.i764
  %4157 = add i64 %4156, 6
  store i64 %4157, i64* %PC.i764
  %4158 = inttoptr i64 %4155 to i32*
  %4159 = load i32, i32* %4158
  %4160 = zext i32 %4159 to i64
  store i64 %4160, i64* %RDX.i765, align 8
  store %struct.Memory* %loadMem_4026a3, %struct.Memory** %MEMORY
  %loadMem_4026a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4162 = getelementptr inbounds %struct.GPR, %struct.GPR* %4161, i32 0, i32 33
  %4163 = getelementptr inbounds %struct.Reg, %struct.Reg* %4162, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %4163 to i64*
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 1
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %4166 to i64*
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4168 = getelementptr inbounds %struct.GPR, %struct.GPR* %4167, i32 0, i32 15
  %4169 = getelementptr inbounds %struct.Reg, %struct.Reg* %4168, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %4169 to i64*
  %4170 = load i64, i64* %RBP.i763
  %4171 = sub i64 %4170, 8
  %4172 = load i64, i64* %PC.i761
  %4173 = add i64 %4172, 4
  store i64 %4173, i64* %PC.i761
  %4174 = inttoptr i64 %4171 to i64*
  %4175 = load i64, i64* %4174
  store i64 %4175, i64* %RAX.i762, align 8
  store %struct.Memory* %loadMem_4026a9, %struct.Memory** %MEMORY
  %loadMem_4026ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 33
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %4178 to i64*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 5
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %RCX.i759 = bitcast %union.anon* %4181 to i64*
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 15
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %4184 to i64*
  %4185 = load i64, i64* %RBP.i760
  %4186 = sub i64 %4185, 56
  %4187 = load i64, i64* %PC.i758
  %4188 = add i64 %4187, 4
  store i64 %4188, i64* %PC.i758
  %4189 = inttoptr i64 %4186 to i32*
  %4190 = load i32, i32* %4189
  %4191 = sext i32 %4190 to i64
  store i64 %4191, i64* %RCX.i759, align 8
  store %struct.Memory* %loadMem_4026ad, %struct.Memory** %MEMORY
  %loadMem_4026b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4193 = getelementptr inbounds %struct.GPR, %struct.GPR* %4192, i32 0, i32 33
  %4194 = getelementptr inbounds %struct.Reg, %struct.Reg* %4193, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %4194 to i64*
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 7
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %EDX.i755 = bitcast %union.anon* %4197 to i32*
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 1
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %4200 to i64*
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4202 = getelementptr inbounds %struct.GPR, %struct.GPR* %4201, i32 0, i32 5
  %4203 = getelementptr inbounds %struct.Reg, %struct.Reg* %4202, i32 0, i32 0
  %RCX.i757 = bitcast %union.anon* %4203 to i64*
  %4204 = load i64, i64* %RAX.i756
  %4205 = load i64, i64* %RCX.i757
  %4206 = mul i64 %4205, 4
  %4207 = add i64 %4206, %4204
  %4208 = load i32, i32* %EDX.i755
  %4209 = zext i32 %4208 to i64
  %4210 = load i64, i64* %PC.i754
  %4211 = add i64 %4210, 3
  store i64 %4211, i64* %PC.i754
  %4212 = inttoptr i64 %4207 to i32*
  store i32 %4208, i32* %4212
  store %struct.Memory* %loadMem_4026b1, %struct.Memory** %MEMORY
  %loadMem_4026b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4214 = getelementptr inbounds %struct.GPR, %struct.GPR* %4213, i32 0, i32 33
  %4215 = getelementptr inbounds %struct.Reg, %struct.Reg* %4214, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %4215 to i64*
  %4216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4217 = getelementptr inbounds %struct.GPR, %struct.GPR* %4216, i32 0, i32 7
  %4218 = getelementptr inbounds %struct.Reg, %struct.Reg* %4217, i32 0, i32 0
  %RDX.i752 = bitcast %union.anon* %4218 to i64*
  %4219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4220 = getelementptr inbounds %struct.GPR, %struct.GPR* %4219, i32 0, i32 15
  %4221 = getelementptr inbounds %struct.Reg, %struct.Reg* %4220, i32 0, i32 0
  %RBP.i753 = bitcast %union.anon* %4221 to i64*
  %4222 = load i64, i64* %RBP.i753
  %4223 = sub i64 %4222, 52
  %4224 = load i64, i64* %PC.i751
  %4225 = add i64 %4224, 3
  store i64 %4225, i64* %PC.i751
  %4226 = inttoptr i64 %4223 to i32*
  %4227 = load i32, i32* %4226
  %4228 = zext i32 %4227 to i64
  store i64 %4228, i64* %RDX.i752, align 8
  store %struct.Memory* %loadMem_4026b4, %struct.Memory** %MEMORY
  %loadMem_4026b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 33
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %4231 to i64*
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4233 = getelementptr inbounds %struct.GPR, %struct.GPR* %4232, i32 0, i32 7
  %4234 = getelementptr inbounds %struct.Reg, %struct.Reg* %4233, i32 0, i32 0
  %RDX.i750 = bitcast %union.anon* %4234 to i64*
  %4235 = load i64, i64* %RDX.i750
  %4236 = load i64, i64* %PC.i749
  %4237 = add i64 %4236, 3
  store i64 %4237, i64* %PC.i749
  %4238 = trunc i64 %4235 to i32
  %4239 = add i32 1, %4238
  %4240 = zext i32 %4239 to i64
  store i64 %4240, i64* %RDX.i750, align 8
  %4241 = icmp ult i32 %4239, %4238
  %4242 = icmp ult i32 %4239, 1
  %4243 = or i1 %4241, %4242
  %4244 = zext i1 %4243 to i8
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4244, i8* %4245, align 1
  %4246 = and i32 %4239, 255
  %4247 = call i32 @llvm.ctpop.i32(i32 %4246)
  %4248 = trunc i32 %4247 to i8
  %4249 = and i8 %4248, 1
  %4250 = xor i8 %4249, 1
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4250, i8* %4251, align 1
  %4252 = xor i64 1, %4235
  %4253 = trunc i64 %4252 to i32
  %4254 = xor i32 %4253, %4239
  %4255 = lshr i32 %4254, 4
  %4256 = trunc i32 %4255 to i8
  %4257 = and i8 %4256, 1
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4257, i8* %4258, align 1
  %4259 = icmp eq i32 %4239, 0
  %4260 = zext i1 %4259 to i8
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4260, i8* %4261, align 1
  %4262 = lshr i32 %4239, 31
  %4263 = trunc i32 %4262 to i8
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4263, i8* %4264, align 1
  %4265 = lshr i32 %4238, 31
  %4266 = xor i32 %4262, %4265
  %4267 = add i32 %4266, %4262
  %4268 = icmp eq i32 %4267, 2
  %4269 = zext i1 %4268 to i8
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4269, i8* %4270, align 1
  store %struct.Memory* %loadMem_4026b7, %struct.Memory** %MEMORY
  %loadMem_4026ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 33
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %4273 to i64*
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 7
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %EDX.i747 = bitcast %union.anon* %4276 to i32*
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 15
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %RBP.i748 = bitcast %union.anon* %4279 to i64*
  %4280 = load i64, i64* %RBP.i748
  %4281 = sub i64 %4280, 52
  %4282 = load i32, i32* %EDX.i747
  %4283 = zext i32 %4282 to i64
  %4284 = load i64, i64* %PC.i746
  %4285 = add i64 %4284, 3
  store i64 %4285, i64* %PC.i746
  %4286 = inttoptr i64 %4281 to i32*
  store i32 %4282, i32* %4286
  store %struct.Memory* %loadMem_4026ba, %struct.Memory** %MEMORY
  %loadMem_4026bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 33
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %4289 to i64*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 7
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %RDX.i744 = bitcast %union.anon* %4292 to i64*
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 15
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %4295 to i64*
  %4296 = load i64, i64* %RBP.i745
  %4297 = sub i64 %4296, 56
  %4298 = load i64, i64* %PC.i743
  %4299 = add i64 %4298, 3
  store i64 %4299, i64* %PC.i743
  %4300 = inttoptr i64 %4297 to i32*
  %4301 = load i32, i32* %4300
  %4302 = zext i32 %4301 to i64
  store i64 %4302, i64* %RDX.i744, align 8
  store %struct.Memory* %loadMem_4026bd, %struct.Memory** %MEMORY
  %loadMem_4026c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4304 = getelementptr inbounds %struct.GPR, %struct.GPR* %4303, i32 0, i32 33
  %4305 = getelementptr inbounds %struct.Reg, %struct.Reg* %4304, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %4305 to i64*
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 7
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %RDX.i742 = bitcast %union.anon* %4308 to i64*
  %4309 = load i64, i64* %RDX.i742
  %4310 = load i64, i64* %PC.i741
  %4311 = add i64 %4310, 3
  store i64 %4311, i64* %PC.i741
  %4312 = trunc i64 %4309 to i32
  %4313 = add i32 -1, %4312
  %4314 = zext i32 %4313 to i64
  store i64 %4314, i64* %RDX.i742, align 8
  %4315 = icmp ult i32 %4313, %4312
  %4316 = icmp ult i32 %4313, -1
  %4317 = or i1 %4315, %4316
  %4318 = zext i1 %4317 to i8
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4318, i8* %4319, align 1
  %4320 = and i32 %4313, 255
  %4321 = call i32 @llvm.ctpop.i32(i32 %4320)
  %4322 = trunc i32 %4321 to i8
  %4323 = and i8 %4322, 1
  %4324 = xor i8 %4323, 1
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4324, i8* %4325, align 1
  %4326 = xor i64 -1, %4309
  %4327 = trunc i64 %4326 to i32
  %4328 = xor i32 %4327, %4313
  %4329 = lshr i32 %4328, 4
  %4330 = trunc i32 %4329 to i8
  %4331 = and i8 %4330, 1
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4331, i8* %4332, align 1
  %4333 = icmp eq i32 %4313, 0
  %4334 = zext i1 %4333 to i8
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4334, i8* %4335, align 1
  %4336 = lshr i32 %4313, 31
  %4337 = trunc i32 %4336 to i8
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4337, i8* %4338, align 1
  %4339 = lshr i32 %4312, 31
  %4340 = xor i32 %4336, %4339
  %4341 = xor i32 %4336, 1
  %4342 = add i32 %4340, %4341
  %4343 = icmp eq i32 %4342, 2
  %4344 = zext i1 %4343 to i8
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4344, i8* %4345, align 1
  store %struct.Memory* %loadMem_4026c0, %struct.Memory** %MEMORY
  %loadMem_4026c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 33
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %4348 to i64*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 7
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %EDX.i739 = bitcast %union.anon* %4351 to i32*
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4353 = getelementptr inbounds %struct.GPR, %struct.GPR* %4352, i32 0, i32 15
  %4354 = getelementptr inbounds %struct.Reg, %struct.Reg* %4353, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %4354 to i64*
  %4355 = load i64, i64* %RBP.i740
  %4356 = sub i64 %4355, 56
  %4357 = load i32, i32* %EDX.i739
  %4358 = zext i32 %4357 to i64
  %4359 = load i64, i64* %PC.i738
  %4360 = add i64 %4359, 3
  store i64 %4360, i64* %PC.i738
  %4361 = inttoptr i64 %4356 to i32*
  store i32 %4357, i32* %4361
  store %struct.Memory* %loadMem_4026c3, %struct.Memory** %MEMORY
  %loadMem_4026c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4363 = getelementptr inbounds %struct.GPR, %struct.GPR* %4362, i32 0, i32 33
  %4364 = getelementptr inbounds %struct.Reg, %struct.Reg* %4363, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %4364 to i64*
  %4365 = load i64, i64* %PC.i737
  %4366 = add i64 %4365, -435
  %4367 = load i64, i64* %PC.i737
  %4368 = add i64 %4367, 5
  store i64 %4368, i64* %PC.i737
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4366, i64* %4369, align 8
  store %struct.Memory* %loadMem_4026c6, %struct.Memory** %MEMORY
  br label %block_.L_402513

block_.L_4026cb:                                  ; preds = %block_402677
  %loadMem_4026cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 33
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %4372 to i64*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4374 = getelementptr inbounds %struct.GPR, %struct.GPR* %4373, i32 0, i32 1
  %4375 = getelementptr inbounds %struct.Reg, %struct.Reg* %4374, i32 0, i32 0
  %RAX.i735 = bitcast %union.anon* %4375 to i64*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4377 = getelementptr inbounds %struct.GPR, %struct.GPR* %4376, i32 0, i32 15
  %4378 = getelementptr inbounds %struct.Reg, %struct.Reg* %4377, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %4378 to i64*
  %4379 = load i64, i64* %RBP.i736
  %4380 = sub i64 %4379, 64
  %4381 = load i64, i64* %PC.i734
  %4382 = add i64 %4381, 3
  store i64 %4382, i64* %PC.i734
  %4383 = inttoptr i64 %4380 to i32*
  %4384 = load i32, i32* %4383
  %4385 = zext i32 %4384 to i64
  store i64 %4385, i64* %RAX.i735, align 8
  store %struct.Memory* %loadMem_4026cb, %struct.Memory** %MEMORY
  %loadMem_4026ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %4386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4387 = getelementptr inbounds %struct.GPR, %struct.GPR* %4386, i32 0, i32 33
  %4388 = getelementptr inbounds %struct.Reg, %struct.Reg* %4387, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %4388 to i64*
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4390 = getelementptr inbounds %struct.GPR, %struct.GPR* %4389, i32 0, i32 1
  %4391 = getelementptr inbounds %struct.Reg, %struct.Reg* %4390, i32 0, i32 0
  %EAX.i732 = bitcast %union.anon* %4391 to i32*
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4393 = getelementptr inbounds %struct.GPR, %struct.GPR* %4392, i32 0, i32 15
  %4394 = getelementptr inbounds %struct.Reg, %struct.Reg* %4393, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %4394 to i64*
  %4395 = load i32, i32* %EAX.i732
  %4396 = zext i32 %4395 to i64
  %4397 = load i64, i64* %RBP.i733
  %4398 = sub i64 %4397, 60
  %4399 = load i64, i64* %PC.i731
  %4400 = add i64 %4399, 3
  store i64 %4400, i64* %PC.i731
  %4401 = inttoptr i64 %4398 to i32*
  %4402 = load i32, i32* %4401
  %4403 = sub i32 %4395, %4402
  %4404 = icmp ult i32 %4395, %4402
  %4405 = zext i1 %4404 to i8
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4405, i8* %4406, align 1
  %4407 = and i32 %4403, 255
  %4408 = call i32 @llvm.ctpop.i32(i32 %4407)
  %4409 = trunc i32 %4408 to i8
  %4410 = and i8 %4409, 1
  %4411 = xor i8 %4410, 1
  %4412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4411, i8* %4412, align 1
  %4413 = xor i32 %4402, %4395
  %4414 = xor i32 %4413, %4403
  %4415 = lshr i32 %4414, 4
  %4416 = trunc i32 %4415 to i8
  %4417 = and i8 %4416, 1
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4417, i8* %4418, align 1
  %4419 = icmp eq i32 %4403, 0
  %4420 = zext i1 %4419 to i8
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4420, i8* %4421, align 1
  %4422 = lshr i32 %4403, 31
  %4423 = trunc i32 %4422 to i8
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4423, i8* %4424, align 1
  %4425 = lshr i32 %4395, 31
  %4426 = lshr i32 %4402, 31
  %4427 = xor i32 %4426, %4425
  %4428 = xor i32 %4422, %4425
  %4429 = add i32 %4428, %4427
  %4430 = icmp eq i32 %4429, 2
  %4431 = zext i1 %4430 to i8
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4431, i8* %4432, align 1
  store %struct.Memory* %loadMem_4026ce, %struct.Memory** %MEMORY
  %loadMem_4026d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 33
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %4435 to i64*
  %4436 = load i64, i64* %PC.i730
  %4437 = add i64 %4436, 65
  %4438 = load i64, i64* %PC.i730
  %4439 = add i64 %4438, 6
  %4440 = load i64, i64* %PC.i730
  %4441 = add i64 %4440, 6
  store i64 %4441, i64* %PC.i730
  %4442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4443 = load i8, i8* %4442, align 1
  %4444 = icmp ne i8 %4443, 0
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4446 = load i8, i8* %4445, align 1
  %4447 = icmp ne i8 %4446, 0
  %4448 = xor i1 %4444, %4447
  %4449 = xor i1 %4448, true
  %4450 = zext i1 %4449 to i8
  store i8 %4450, i8* %BRANCH_TAKEN, align 1
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4452 = select i1 %4448, i64 %4439, i64 %4437
  store i64 %4452, i64* %4451, align 8
  store %struct.Memory* %loadMem_4026d1, %struct.Memory** %MEMORY
  %loadBr_4026d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4026d1 = icmp eq i8 %loadBr_4026d1, 1
  br i1 %cmpBr_4026d1, label %block_.L_402712, label %block_4026d7

block_4026d7:                                     ; preds = %block_.L_4026cb
  %loadMem_4026d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4454 = getelementptr inbounds %struct.GPR, %struct.GPR* %4453, i32 0, i32 33
  %4455 = getelementptr inbounds %struct.Reg, %struct.Reg* %4454, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %4455 to i64*
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4457 = getelementptr inbounds %struct.GPR, %struct.GPR* %4456, i32 0, i32 1
  %4458 = getelementptr inbounds %struct.Reg, %struct.Reg* %4457, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %4458 to i64*
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 15
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %RBP.i729 = bitcast %union.anon* %4461 to i64*
  %4462 = load i64, i64* %RBP.i729
  %4463 = sub i64 %4462, 84
  %4464 = load i64, i64* %PC.i727
  %4465 = add i64 %4464, 3
  store i64 %4465, i64* %PC.i727
  %4466 = inttoptr i64 %4463 to i32*
  %4467 = load i32, i32* %4466
  %4468 = zext i32 %4467 to i64
  store i64 %4468, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_4026d7, %struct.Memory** %MEMORY
  %loadMem_4026da = load %struct.Memory*, %struct.Memory** %MEMORY
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4470 = getelementptr inbounds %struct.GPR, %struct.GPR* %4469, i32 0, i32 33
  %4471 = getelementptr inbounds %struct.Reg, %struct.Reg* %4470, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %4471 to i64*
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4473 = getelementptr inbounds %struct.GPR, %struct.GPR* %4472, i32 0, i32 5
  %4474 = getelementptr inbounds %struct.Reg, %struct.Reg* %4473, i32 0, i32 0
  %RCX.i725 = bitcast %union.anon* %4474 to i64*
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4476 = getelementptr inbounds %struct.GPR, %struct.GPR* %4475, i32 0, i32 15
  %4477 = getelementptr inbounds %struct.Reg, %struct.Reg* %4476, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %4477 to i64*
  %4478 = load i64, i64* %RBP.i726
  %4479 = sub i64 %4478, 80
  %4480 = load i64, i64* %PC.i724
  %4481 = add i64 %4480, 4
  store i64 %4481, i64* %PC.i724
  %4482 = inttoptr i64 %4479 to i32*
  %4483 = load i32, i32* %4482
  %4484 = sext i32 %4483 to i64
  store i64 %4484, i64* %RCX.i725, align 8
  store %struct.Memory* %loadMem_4026da, %struct.Memory** %MEMORY
  %loadMem_4026de = load %struct.Memory*, %struct.Memory** %MEMORY
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 33
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 1
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %EAX.i721 = bitcast %union.anon* %4490 to i32*
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4492 = getelementptr inbounds %struct.GPR, %struct.GPR* %4491, i32 0, i32 5
  %4493 = getelementptr inbounds %struct.Reg, %struct.Reg* %4492, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %4493 to i64*
  %4494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4495 = getelementptr inbounds %struct.GPR, %struct.GPR* %4494, i32 0, i32 15
  %4496 = getelementptr inbounds %struct.Reg, %struct.Reg* %4495, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %4496 to i64*
  %4497 = load i64, i64* %RBP.i723
  %4498 = load i64, i64* %RCX.i722
  %4499 = mul i64 %4498, 4
  %4500 = add i64 %4497, -496
  %4501 = add i64 %4500, %4499
  %4502 = load i32, i32* %EAX.i721
  %4503 = zext i32 %4502 to i64
  %4504 = load i64, i64* %PC.i720
  %4505 = add i64 %4504, 7
  store i64 %4505, i64* %PC.i720
  %4506 = inttoptr i64 %4501 to i32*
  store i32 %4502, i32* %4506
  store %struct.Memory* %loadMem_4026de, %struct.Memory** %MEMORY
  %loadMem_4026e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 33
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %4509 to i64*
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 1
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %4512 to i64*
  %4513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4514 = getelementptr inbounds %struct.GPR, %struct.GPR* %4513, i32 0, i32 15
  %4515 = getelementptr inbounds %struct.Reg, %struct.Reg* %4514, i32 0, i32 0
  %RBP.i719 = bitcast %union.anon* %4515 to i64*
  %4516 = load i64, i64* %RBP.i719
  %4517 = sub i64 %4516, 88
  %4518 = load i64, i64* %PC.i717
  %4519 = add i64 %4518, 3
  store i64 %4519, i64* %PC.i717
  %4520 = inttoptr i64 %4517 to i32*
  %4521 = load i32, i32* %4520
  %4522 = zext i32 %4521 to i64
  store i64 %4522, i64* %RAX.i718, align 8
  store %struct.Memory* %loadMem_4026e5, %struct.Memory** %MEMORY
  %loadMem_4026e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4524 = getelementptr inbounds %struct.GPR, %struct.GPR* %4523, i32 0, i32 33
  %4525 = getelementptr inbounds %struct.Reg, %struct.Reg* %4524, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %4525 to i64*
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4527 = getelementptr inbounds %struct.GPR, %struct.GPR* %4526, i32 0, i32 5
  %4528 = getelementptr inbounds %struct.Reg, %struct.Reg* %4527, i32 0, i32 0
  %RCX.i715 = bitcast %union.anon* %4528 to i64*
  %4529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4530 = getelementptr inbounds %struct.GPR, %struct.GPR* %4529, i32 0, i32 15
  %4531 = getelementptr inbounds %struct.Reg, %struct.Reg* %4530, i32 0, i32 0
  %RBP.i716 = bitcast %union.anon* %4531 to i64*
  %4532 = load i64, i64* %RBP.i716
  %4533 = sub i64 %4532, 80
  %4534 = load i64, i64* %PC.i714
  %4535 = add i64 %4534, 4
  store i64 %4535, i64* %PC.i714
  %4536 = inttoptr i64 %4533 to i32*
  %4537 = load i32, i32* %4536
  %4538 = sext i32 %4537 to i64
  store i64 %4538, i64* %RCX.i715, align 8
  store %struct.Memory* %loadMem_4026e8, %struct.Memory** %MEMORY
  %loadMem_4026ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4540 = getelementptr inbounds %struct.GPR, %struct.GPR* %4539, i32 0, i32 33
  %4541 = getelementptr inbounds %struct.Reg, %struct.Reg* %4540, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4541 to i64*
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4543 = getelementptr inbounds %struct.GPR, %struct.GPR* %4542, i32 0, i32 1
  %4544 = getelementptr inbounds %struct.Reg, %struct.Reg* %4543, i32 0, i32 0
  %EAX.i711 = bitcast %union.anon* %4544 to i32*
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4546 = getelementptr inbounds %struct.GPR, %struct.GPR* %4545, i32 0, i32 5
  %4547 = getelementptr inbounds %struct.Reg, %struct.Reg* %4546, i32 0, i32 0
  %RCX.i712 = bitcast %union.anon* %4547 to i64*
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4549 = getelementptr inbounds %struct.GPR, %struct.GPR* %4548, i32 0, i32 15
  %4550 = getelementptr inbounds %struct.Reg, %struct.Reg* %4549, i32 0, i32 0
  %RBP.i713 = bitcast %union.anon* %4550 to i64*
  %4551 = load i64, i64* %RBP.i713
  %4552 = load i64, i64* %RCX.i712
  %4553 = mul i64 %4552, 4
  %4554 = add i64 %4551, -896
  %4555 = add i64 %4554, %4553
  %4556 = load i32, i32* %EAX.i711
  %4557 = zext i32 %4556 to i64
  %4558 = load i64, i64* %PC.i710
  %4559 = add i64 %4558, 7
  store i64 %4559, i64* %PC.i710
  %4560 = inttoptr i64 %4555 to i32*
  store i32 %4556, i32* %4560
  store %struct.Memory* %loadMem_4026ec, %struct.Memory** %MEMORY
  %loadMem_4026f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4562 = getelementptr inbounds %struct.GPR, %struct.GPR* %4561, i32 0, i32 33
  %4563 = getelementptr inbounds %struct.Reg, %struct.Reg* %4562, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4563 to i64*
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 1
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %RAX.i708 = bitcast %union.anon* %4566 to i64*
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 15
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %4569 to i64*
  %4570 = load i64, i64* %RBP.i709
  %4571 = sub i64 %4570, 92
  %4572 = load i64, i64* %PC.i707
  %4573 = add i64 %4572, 3
  store i64 %4573, i64* %PC.i707
  %4574 = inttoptr i64 %4571 to i32*
  %4575 = load i32, i32* %4574
  %4576 = zext i32 %4575 to i64
  store i64 %4576, i64* %RAX.i708, align 8
  store %struct.Memory* %loadMem_4026f3, %struct.Memory** %MEMORY
  %loadMem_4026f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4578 = getelementptr inbounds %struct.GPR, %struct.GPR* %4577, i32 0, i32 33
  %4579 = getelementptr inbounds %struct.Reg, %struct.Reg* %4578, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4579 to i64*
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 1
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %RAX.i706 = bitcast %union.anon* %4582 to i64*
  %4583 = load i64, i64* %RAX.i706
  %4584 = load i64, i64* %PC.i705
  %4585 = add i64 %4584, 3
  store i64 %4585, i64* %PC.i705
  %4586 = trunc i64 %4583 to i32
  %4587 = add i32 1, %4586
  %4588 = zext i32 %4587 to i64
  store i64 %4588, i64* %RAX.i706, align 8
  %4589 = icmp ult i32 %4587, %4586
  %4590 = icmp ult i32 %4587, 1
  %4591 = or i1 %4589, %4590
  %4592 = zext i1 %4591 to i8
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4592, i8* %4593, align 1
  %4594 = and i32 %4587, 255
  %4595 = call i32 @llvm.ctpop.i32(i32 %4594)
  %4596 = trunc i32 %4595 to i8
  %4597 = and i8 %4596, 1
  %4598 = xor i8 %4597, 1
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4598, i8* %4599, align 1
  %4600 = xor i64 1, %4583
  %4601 = trunc i64 %4600 to i32
  %4602 = xor i32 %4601, %4587
  %4603 = lshr i32 %4602, 4
  %4604 = trunc i32 %4603 to i8
  %4605 = and i8 %4604, 1
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4605, i8* %4606, align 1
  %4607 = icmp eq i32 %4587, 0
  %4608 = zext i1 %4607 to i8
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4608, i8* %4609, align 1
  %4610 = lshr i32 %4587, 31
  %4611 = trunc i32 %4610 to i8
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4611, i8* %4612, align 1
  %4613 = lshr i32 %4586, 31
  %4614 = xor i32 %4610, %4613
  %4615 = add i32 %4614, %4610
  %4616 = icmp eq i32 %4615, 2
  %4617 = zext i1 %4616 to i8
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4617, i8* %4618, align 1
  store %struct.Memory* %loadMem_4026f6, %struct.Memory** %MEMORY
  %loadMem_4026f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 33
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4621 to i64*
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4623 = getelementptr inbounds %struct.GPR, %struct.GPR* %4622, i32 0, i32 5
  %4624 = getelementptr inbounds %struct.Reg, %struct.Reg* %4623, i32 0, i32 0
  %RCX.i703 = bitcast %union.anon* %4624 to i64*
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 15
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %RBP.i704 = bitcast %union.anon* %4627 to i64*
  %4628 = load i64, i64* %RBP.i704
  %4629 = sub i64 %4628, 80
  %4630 = load i64, i64* %PC.i702
  %4631 = add i64 %4630, 4
  store i64 %4631, i64* %PC.i702
  %4632 = inttoptr i64 %4629 to i32*
  %4633 = load i32, i32* %4632
  %4634 = sext i32 %4633 to i64
  store i64 %4634, i64* %RCX.i703, align 8
  store %struct.Memory* %loadMem_4026f9, %struct.Memory** %MEMORY
  %loadMem_4026fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 33
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4637 to i64*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4639 = getelementptr inbounds %struct.GPR, %struct.GPR* %4638, i32 0, i32 1
  %4640 = getelementptr inbounds %struct.Reg, %struct.Reg* %4639, i32 0, i32 0
  %EAX.i699 = bitcast %union.anon* %4640 to i32*
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 5
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %RCX.i700 = bitcast %union.anon* %4643 to i64*
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4645 = getelementptr inbounds %struct.GPR, %struct.GPR* %4644, i32 0, i32 15
  %4646 = getelementptr inbounds %struct.Reg, %struct.Reg* %4645, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %4646 to i64*
  %4647 = load i64, i64* %RBP.i701
  %4648 = load i64, i64* %RCX.i700
  %4649 = mul i64 %4648, 4
  %4650 = add i64 %4647, -1296
  %4651 = add i64 %4650, %4649
  %4652 = load i32, i32* %EAX.i699
  %4653 = zext i32 %4652 to i64
  %4654 = load i64, i64* %PC.i698
  %4655 = add i64 %4654, 7
  store i64 %4655, i64* %PC.i698
  %4656 = inttoptr i64 %4651 to i32*
  store i32 %4652, i32* %4656
  store %struct.Memory* %loadMem_4026fd, %struct.Memory** %MEMORY
  %loadMem_402704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4658 = getelementptr inbounds %struct.GPR, %struct.GPR* %4657, i32 0, i32 33
  %4659 = getelementptr inbounds %struct.Reg, %struct.Reg* %4658, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %4659 to i64*
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4661 = getelementptr inbounds %struct.GPR, %struct.GPR* %4660, i32 0, i32 1
  %4662 = getelementptr inbounds %struct.Reg, %struct.Reg* %4661, i32 0, i32 0
  %RAX.i696 = bitcast %union.anon* %4662 to i64*
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 15
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %RBP.i697 = bitcast %union.anon* %4665 to i64*
  %4666 = load i64, i64* %RBP.i697
  %4667 = sub i64 %4666, 80
  %4668 = load i64, i64* %PC.i695
  %4669 = add i64 %4668, 3
  store i64 %4669, i64* %PC.i695
  %4670 = inttoptr i64 %4667 to i32*
  %4671 = load i32, i32* %4670
  %4672 = zext i32 %4671 to i64
  store i64 %4672, i64* %RAX.i696, align 8
  store %struct.Memory* %loadMem_402704, %struct.Memory** %MEMORY
  %loadMem_402707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 33
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4675 to i64*
  %4676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4677 = getelementptr inbounds %struct.GPR, %struct.GPR* %4676, i32 0, i32 1
  %4678 = getelementptr inbounds %struct.Reg, %struct.Reg* %4677, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %4678 to i64*
  %4679 = load i64, i64* %RAX.i694
  %4680 = load i64, i64* %PC.i693
  %4681 = add i64 %4680, 3
  store i64 %4681, i64* %PC.i693
  %4682 = trunc i64 %4679 to i32
  %4683 = add i32 1, %4682
  %4684 = zext i32 %4683 to i64
  store i64 %4684, i64* %RAX.i694, align 8
  %4685 = icmp ult i32 %4683, %4682
  %4686 = icmp ult i32 %4683, 1
  %4687 = or i1 %4685, %4686
  %4688 = zext i1 %4687 to i8
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4688, i8* %4689, align 1
  %4690 = and i32 %4683, 255
  %4691 = call i32 @llvm.ctpop.i32(i32 %4690)
  %4692 = trunc i32 %4691 to i8
  %4693 = and i8 %4692, 1
  %4694 = xor i8 %4693, 1
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4694, i8* %4695, align 1
  %4696 = xor i64 1, %4679
  %4697 = trunc i64 %4696 to i32
  %4698 = xor i32 %4697, %4683
  %4699 = lshr i32 %4698, 4
  %4700 = trunc i32 %4699 to i8
  %4701 = and i8 %4700, 1
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4701, i8* %4702, align 1
  %4703 = icmp eq i32 %4683, 0
  %4704 = zext i1 %4703 to i8
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4704, i8* %4705, align 1
  %4706 = lshr i32 %4683, 31
  %4707 = trunc i32 %4706 to i8
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4707, i8* %4708, align 1
  %4709 = lshr i32 %4682, 31
  %4710 = xor i32 %4706, %4709
  %4711 = add i32 %4710, %4706
  %4712 = icmp eq i32 %4711, 2
  %4713 = zext i1 %4712 to i8
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4713, i8* %4714, align 1
  store %struct.Memory* %loadMem_402707, %struct.Memory** %MEMORY
  %loadMem_40270a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4716 = getelementptr inbounds %struct.GPR, %struct.GPR* %4715, i32 0, i32 33
  %4717 = getelementptr inbounds %struct.Reg, %struct.Reg* %4716, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4717 to i64*
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4719 = getelementptr inbounds %struct.GPR, %struct.GPR* %4718, i32 0, i32 1
  %4720 = getelementptr inbounds %struct.Reg, %struct.Reg* %4719, i32 0, i32 0
  %EAX.i691 = bitcast %union.anon* %4720 to i32*
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4722 = getelementptr inbounds %struct.GPR, %struct.GPR* %4721, i32 0, i32 15
  %4723 = getelementptr inbounds %struct.Reg, %struct.Reg* %4722, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %4723 to i64*
  %4724 = load i64, i64* %RBP.i692
  %4725 = sub i64 %4724, 80
  %4726 = load i32, i32* %EAX.i691
  %4727 = zext i32 %4726 to i64
  %4728 = load i64, i64* %PC.i690
  %4729 = add i64 %4728, 3
  store i64 %4729, i64* %PC.i690
  %4730 = inttoptr i64 %4725 to i32*
  store i32 %4726, i32* %4730
  store %struct.Memory* %loadMem_40270a, %struct.Memory** %MEMORY
  %loadMem_40270d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 33
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %PC.i689 = bitcast %union.anon* %4733 to i64*
  %4734 = load i64, i64* %PC.i689
  %4735 = add i64 %4734, -801
  %4736 = load i64, i64* %PC.i689
  %4737 = add i64 %4736, 5
  store i64 %4737, i64* %PC.i689
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4735, i64* %4738, align 8
  store %struct.Memory* %loadMem_40270d, %struct.Memory** %MEMORY
  br label %block_.L_4023ec

block_.L_402712:                                  ; preds = %block_.L_4026cb
  %loadMem_402712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4740 = getelementptr inbounds %struct.GPR, %struct.GPR* %4739, i32 0, i32 33
  %4741 = getelementptr inbounds %struct.Reg, %struct.Reg* %4740, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4741 to i64*
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 1
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %RAX.i687 = bitcast %union.anon* %4744 to i64*
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4746 = getelementptr inbounds %struct.GPR, %struct.GPR* %4745, i32 0, i32 15
  %4747 = getelementptr inbounds %struct.Reg, %struct.Reg* %4746, i32 0, i32 0
  %RBP.i688 = bitcast %union.anon* %4747 to i64*
  %4748 = load i64, i64* %RBP.i688
  %4749 = sub i64 %4748, 60
  %4750 = load i64, i64* %PC.i686
  %4751 = add i64 %4750, 3
  store i64 %4751, i64* %PC.i686
  %4752 = inttoptr i64 %4749 to i32*
  %4753 = load i32, i32* %4752
  %4754 = zext i32 %4753 to i64
  store i64 %4754, i64* %RAX.i687, align 8
  store %struct.Memory* %loadMem_402712, %struct.Memory** %MEMORY
  %loadMem_402715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 33
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4757 to i64*
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 1
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %RAX.i684 = bitcast %union.anon* %4760 to i64*
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 15
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %4763 to i64*
  %4764 = load i64, i64* %RAX.i684
  %4765 = load i64, i64* %RBP.i685
  %4766 = sub i64 %4765, 84
  %4767 = load i64, i64* %PC.i683
  %4768 = add i64 %4767, 3
  store i64 %4768, i64* %PC.i683
  %4769 = trunc i64 %4764 to i32
  %4770 = inttoptr i64 %4766 to i32*
  %4771 = load i32, i32* %4770
  %4772 = sub i32 %4769, %4771
  %4773 = zext i32 %4772 to i64
  store i64 %4773, i64* %RAX.i684, align 8
  %4774 = icmp ult i32 %4769, %4771
  %4775 = zext i1 %4774 to i8
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4775, i8* %4776, align 1
  %4777 = and i32 %4772, 255
  %4778 = call i32 @llvm.ctpop.i32(i32 %4777)
  %4779 = trunc i32 %4778 to i8
  %4780 = and i8 %4779, 1
  %4781 = xor i8 %4780, 1
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4781, i8* %4782, align 1
  %4783 = xor i32 %4771, %4769
  %4784 = xor i32 %4783, %4772
  %4785 = lshr i32 %4784, 4
  %4786 = trunc i32 %4785 to i8
  %4787 = and i8 %4786, 1
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4787, i8* %4788, align 1
  %4789 = icmp eq i32 %4772, 0
  %4790 = zext i1 %4789 to i8
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4790, i8* %4791, align 1
  %4792 = lshr i32 %4772, 31
  %4793 = trunc i32 %4792 to i8
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4793, i8* %4794, align 1
  %4795 = lshr i32 %4769, 31
  %4796 = lshr i32 %4771, 31
  %4797 = xor i32 %4796, %4795
  %4798 = xor i32 %4792, %4795
  %4799 = add i32 %4798, %4797
  %4800 = icmp eq i32 %4799, 2
  %4801 = zext i1 %4800 to i8
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4801, i8* %4802, align 1
  store %struct.Memory* %loadMem_402715, %struct.Memory** %MEMORY
  %loadMem_402718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4804 = getelementptr inbounds %struct.GPR, %struct.GPR* %4803, i32 0, i32 33
  %4805 = getelementptr inbounds %struct.Reg, %struct.Reg* %4804, i32 0, i32 0
  %PC.i680 = bitcast %union.anon* %4805 to i64*
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 5
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %4808 to i64*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 15
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %RBP.i682 = bitcast %union.anon* %4811 to i64*
  %4812 = load i64, i64* %RBP.i682
  %4813 = sub i64 %4812, 52
  %4814 = load i64, i64* %PC.i680
  %4815 = add i64 %4814, 3
  store i64 %4815, i64* %PC.i680
  %4816 = inttoptr i64 %4813 to i32*
  %4817 = load i32, i32* %4816
  %4818 = zext i32 %4817 to i64
  store i64 %4818, i64* %RCX.i681, align 8
  store %struct.Memory* %loadMem_402718, %struct.Memory** %MEMORY
  %loadMem_40271b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4820 = getelementptr inbounds %struct.GPR, %struct.GPR* %4819, i32 0, i32 33
  %4821 = getelementptr inbounds %struct.Reg, %struct.Reg* %4820, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %4821 to i64*
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4823 = getelementptr inbounds %struct.GPR, %struct.GPR* %4822, i32 0, i32 5
  %4824 = getelementptr inbounds %struct.Reg, %struct.Reg* %4823, i32 0, i32 0
  %RCX.i678 = bitcast %union.anon* %4824 to i64*
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 15
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %RBP.i679 = bitcast %union.anon* %4827 to i64*
  %4828 = load i64, i64* %RCX.i678
  %4829 = load i64, i64* %RBP.i679
  %4830 = sub i64 %4829, 60
  %4831 = load i64, i64* %PC.i677
  %4832 = add i64 %4831, 3
  store i64 %4832, i64* %PC.i677
  %4833 = trunc i64 %4828 to i32
  %4834 = inttoptr i64 %4830 to i32*
  %4835 = load i32, i32* %4834
  %4836 = sub i32 %4833, %4835
  %4837 = zext i32 %4836 to i64
  store i64 %4837, i64* %RCX.i678, align 8
  %4838 = icmp ult i32 %4833, %4835
  %4839 = zext i1 %4838 to i8
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4839, i8* %4840, align 1
  %4841 = and i32 %4836, 255
  %4842 = call i32 @llvm.ctpop.i32(i32 %4841)
  %4843 = trunc i32 %4842 to i8
  %4844 = and i8 %4843, 1
  %4845 = xor i8 %4844, 1
  %4846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4845, i8* %4846, align 1
  %4847 = xor i32 %4835, %4833
  %4848 = xor i32 %4847, %4836
  %4849 = lshr i32 %4848, 4
  %4850 = trunc i32 %4849 to i8
  %4851 = and i8 %4850, 1
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4851, i8* %4852, align 1
  %4853 = icmp eq i32 %4836, 0
  %4854 = zext i1 %4853 to i8
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4854, i8* %4855, align 1
  %4856 = lshr i32 %4836, 31
  %4857 = trunc i32 %4856 to i8
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4857, i8* %4858, align 1
  %4859 = lshr i32 %4833, 31
  %4860 = lshr i32 %4835, 31
  %4861 = xor i32 %4860, %4859
  %4862 = xor i32 %4856, %4859
  %4863 = add i32 %4862, %4861
  %4864 = icmp eq i32 %4863, 2
  %4865 = zext i1 %4864 to i8
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4865, i8* %4866, align 1
  store %struct.Memory* %loadMem_40271b, %struct.Memory** %MEMORY
  %loadMem_40271e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4868 = getelementptr inbounds %struct.GPR, %struct.GPR* %4867, i32 0, i32 33
  %4869 = getelementptr inbounds %struct.Reg, %struct.Reg* %4868, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %4869 to i64*
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 1
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %EAX.i675 = bitcast %union.anon* %4872 to i32*
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 5
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %ECX.i676 = bitcast %union.anon* %4875 to i32*
  %4876 = load i32, i32* %EAX.i675
  %4877 = zext i32 %4876 to i64
  %4878 = load i32, i32* %ECX.i676
  %4879 = zext i32 %4878 to i64
  %4880 = load i64, i64* %PC.i674
  %4881 = add i64 %4880, 2
  store i64 %4881, i64* %PC.i674
  %4882 = sub i32 %4876, %4878
  %4883 = icmp ult i32 %4876, %4878
  %4884 = zext i1 %4883 to i8
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4884, i8* %4885, align 1
  %4886 = and i32 %4882, 255
  %4887 = call i32 @llvm.ctpop.i32(i32 %4886)
  %4888 = trunc i32 %4887 to i8
  %4889 = and i8 %4888, 1
  %4890 = xor i8 %4889, 1
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4890, i8* %4891, align 1
  %4892 = xor i64 %4879, %4877
  %4893 = trunc i64 %4892 to i32
  %4894 = xor i32 %4893, %4882
  %4895 = lshr i32 %4894, 4
  %4896 = trunc i32 %4895 to i8
  %4897 = and i8 %4896, 1
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4897, i8* %4898, align 1
  %4899 = icmp eq i32 %4882, 0
  %4900 = zext i1 %4899 to i8
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4900, i8* %4901, align 1
  %4902 = lshr i32 %4882, 31
  %4903 = trunc i32 %4902 to i8
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4903, i8* %4904, align 1
  %4905 = lshr i32 %4876, 31
  %4906 = lshr i32 %4878, 31
  %4907 = xor i32 %4906, %4905
  %4908 = xor i32 %4902, %4905
  %4909 = add i32 %4908, %4907
  %4910 = icmp eq i32 %4909, 2
  %4911 = zext i1 %4910 to i8
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4911, i8* %4912, align 1
  store %struct.Memory* %loadMem_40271e, %struct.Memory** %MEMORY
  %loadMem_402720 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4914 = getelementptr inbounds %struct.GPR, %struct.GPR* %4913, i32 0, i32 33
  %4915 = getelementptr inbounds %struct.Reg, %struct.Reg* %4914, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %4915 to i64*
  %4916 = load i64, i64* %PC.i673
  %4917 = add i64 %4916, 23
  %4918 = load i64, i64* %PC.i673
  %4919 = add i64 %4918, 6
  %4920 = load i64, i64* %PC.i673
  %4921 = add i64 %4920, 6
  store i64 %4921, i64* %PC.i673
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4923 = load i8, i8* %4922, align 1
  %4924 = icmp ne i8 %4923, 0
  %4925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4926 = load i8, i8* %4925, align 1
  %4927 = icmp ne i8 %4926, 0
  %4928 = xor i1 %4924, %4927
  %4929 = xor i1 %4928, true
  %4930 = zext i1 %4929 to i8
  store i8 %4930, i8* %BRANCH_TAKEN, align 1
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4932 = select i1 %4928, i64 %4919, i64 %4917
  store i64 %4932, i64* %4931, align 8
  store %struct.Memory* %loadMem_402720, %struct.Memory** %MEMORY
  %loadBr_402720 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402720 = icmp eq i8 %loadBr_402720, 1
  br i1 %cmpBr_402720, label %block_.L_402737, label %block_402726

block_402726:                                     ; preds = %block_.L_402712
  %loadMem_402726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4934 = getelementptr inbounds %struct.GPR, %struct.GPR* %4933, i32 0, i32 33
  %4935 = getelementptr inbounds %struct.Reg, %struct.Reg* %4934, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %4935 to i64*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 1
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %4938 to i64*
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 15
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %RBP.i672 = bitcast %union.anon* %4941 to i64*
  %4942 = load i64, i64* %RBP.i672
  %4943 = sub i64 %4942, 60
  %4944 = load i64, i64* %PC.i670
  %4945 = add i64 %4944, 3
  store i64 %4945, i64* %PC.i670
  %4946 = inttoptr i64 %4943 to i32*
  %4947 = load i32, i32* %4946
  %4948 = zext i32 %4947 to i64
  store i64 %4948, i64* %RAX.i671, align 8
  store %struct.Memory* %loadMem_402726, %struct.Memory** %MEMORY
  %loadMem_402729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 33
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4951 to i64*
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4953 = getelementptr inbounds %struct.GPR, %struct.GPR* %4952, i32 0, i32 1
  %4954 = getelementptr inbounds %struct.Reg, %struct.Reg* %4953, i32 0, i32 0
  %RAX.i668 = bitcast %union.anon* %4954 to i64*
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 15
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %RBP.i669 = bitcast %union.anon* %4957 to i64*
  %4958 = load i64, i64* %RAX.i668
  %4959 = load i64, i64* %RBP.i669
  %4960 = sub i64 %4959, 84
  %4961 = load i64, i64* %PC.i667
  %4962 = add i64 %4961, 3
  store i64 %4962, i64* %PC.i667
  %4963 = trunc i64 %4958 to i32
  %4964 = inttoptr i64 %4960 to i32*
  %4965 = load i32, i32* %4964
  %4966 = sub i32 %4963, %4965
  %4967 = zext i32 %4966 to i64
  store i64 %4967, i64* %RAX.i668, align 8
  %4968 = icmp ult i32 %4963, %4965
  %4969 = zext i1 %4968 to i8
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4969, i8* %4970, align 1
  %4971 = and i32 %4966, 255
  %4972 = call i32 @llvm.ctpop.i32(i32 %4971)
  %4973 = trunc i32 %4972 to i8
  %4974 = and i8 %4973, 1
  %4975 = xor i8 %4974, 1
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4975, i8* %4976, align 1
  %4977 = xor i32 %4965, %4963
  %4978 = xor i32 %4977, %4966
  %4979 = lshr i32 %4978, 4
  %4980 = trunc i32 %4979 to i8
  %4981 = and i8 %4980, 1
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4981, i8* %4982, align 1
  %4983 = icmp eq i32 %4966, 0
  %4984 = zext i1 %4983 to i8
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4984, i8* %4985, align 1
  %4986 = lshr i32 %4966, 31
  %4987 = trunc i32 %4986 to i8
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4987, i8* %4988, align 1
  %4989 = lshr i32 %4963, 31
  %4990 = lshr i32 %4965, 31
  %4991 = xor i32 %4990, %4989
  %4992 = xor i32 %4986, %4989
  %4993 = add i32 %4992, %4991
  %4994 = icmp eq i32 %4993, 2
  %4995 = zext i1 %4994 to i8
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4995, i8* %4996, align 1
  store %struct.Memory* %loadMem_402729, %struct.Memory** %MEMORY
  %loadMem_40272c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4998 = getelementptr inbounds %struct.GPR, %struct.GPR* %4997, i32 0, i32 33
  %4999 = getelementptr inbounds %struct.Reg, %struct.Reg* %4998, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4999 to i64*
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5001 = getelementptr inbounds %struct.GPR, %struct.GPR* %5000, i32 0, i32 1
  %5002 = getelementptr inbounds %struct.Reg, %struct.Reg* %5001, i32 0, i32 0
  %EAX.i665 = bitcast %union.anon* %5002 to i32*
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 15
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %RBP.i666 = bitcast %union.anon* %5005 to i64*
  %5006 = load i64, i64* %RBP.i666
  %5007 = sub i64 %5006, 1392
  %5008 = load i32, i32* %EAX.i665
  %5009 = zext i32 %5008 to i64
  %5010 = load i64, i64* %PC.i664
  %5011 = add i64 %5010, 6
  store i64 %5011, i64* %PC.i664
  %5012 = inttoptr i64 %5007 to i32*
  store i32 %5008, i32* %5012
  store %struct.Memory* %loadMem_40272c, %struct.Memory** %MEMORY
  %loadMem_402732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5014 = getelementptr inbounds %struct.GPR, %struct.GPR* %5013, i32 0, i32 33
  %5015 = getelementptr inbounds %struct.Reg, %struct.Reg* %5014, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %5015 to i64*
  %5016 = load i64, i64* %PC.i663
  %5017 = add i64 %5016, 17
  %5018 = load i64, i64* %PC.i663
  %5019 = add i64 %5018, 5
  store i64 %5019, i64* %PC.i663
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5017, i64* %5020, align 8
  store %struct.Memory* %loadMem_402732, %struct.Memory** %MEMORY
  br label %block_.L_402743

block_.L_402737:                                  ; preds = %block_.L_402712
  %loadMem_402737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5022 = getelementptr inbounds %struct.GPR, %struct.GPR* %5021, i32 0, i32 33
  %5023 = getelementptr inbounds %struct.Reg, %struct.Reg* %5022, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %5023 to i64*
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5025 = getelementptr inbounds %struct.GPR, %struct.GPR* %5024, i32 0, i32 1
  %5026 = getelementptr inbounds %struct.Reg, %struct.Reg* %5025, i32 0, i32 0
  %RAX.i661 = bitcast %union.anon* %5026 to i64*
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5028 = getelementptr inbounds %struct.GPR, %struct.GPR* %5027, i32 0, i32 15
  %5029 = getelementptr inbounds %struct.Reg, %struct.Reg* %5028, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %5029 to i64*
  %5030 = load i64, i64* %RBP.i662
  %5031 = sub i64 %5030, 52
  %5032 = load i64, i64* %PC.i660
  %5033 = add i64 %5032, 3
  store i64 %5033, i64* %PC.i660
  %5034 = inttoptr i64 %5031 to i32*
  %5035 = load i32, i32* %5034
  %5036 = zext i32 %5035 to i64
  store i64 %5036, i64* %RAX.i661, align 8
  store %struct.Memory* %loadMem_402737, %struct.Memory** %MEMORY
  %loadMem_40273a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 33
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %5039 to i64*
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5041 = getelementptr inbounds %struct.GPR, %struct.GPR* %5040, i32 0, i32 1
  %5042 = getelementptr inbounds %struct.Reg, %struct.Reg* %5041, i32 0, i32 0
  %RAX.i658 = bitcast %union.anon* %5042 to i64*
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 15
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %5045 to i64*
  %5046 = load i64, i64* %RAX.i658
  %5047 = load i64, i64* %RBP.i659
  %5048 = sub i64 %5047, 60
  %5049 = load i64, i64* %PC.i657
  %5050 = add i64 %5049, 3
  store i64 %5050, i64* %PC.i657
  %5051 = trunc i64 %5046 to i32
  %5052 = inttoptr i64 %5048 to i32*
  %5053 = load i32, i32* %5052
  %5054 = sub i32 %5051, %5053
  %5055 = zext i32 %5054 to i64
  store i64 %5055, i64* %RAX.i658, align 8
  %5056 = icmp ult i32 %5051, %5053
  %5057 = zext i1 %5056 to i8
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5057, i8* %5058, align 1
  %5059 = and i32 %5054, 255
  %5060 = call i32 @llvm.ctpop.i32(i32 %5059)
  %5061 = trunc i32 %5060 to i8
  %5062 = and i8 %5061, 1
  %5063 = xor i8 %5062, 1
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5063, i8* %5064, align 1
  %5065 = xor i32 %5053, %5051
  %5066 = xor i32 %5065, %5054
  %5067 = lshr i32 %5066, 4
  %5068 = trunc i32 %5067 to i8
  %5069 = and i8 %5068, 1
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5069, i8* %5070, align 1
  %5071 = icmp eq i32 %5054, 0
  %5072 = zext i1 %5071 to i8
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5072, i8* %5073, align 1
  %5074 = lshr i32 %5054, 31
  %5075 = trunc i32 %5074 to i8
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5075, i8* %5076, align 1
  %5077 = lshr i32 %5051, 31
  %5078 = lshr i32 %5053, 31
  %5079 = xor i32 %5078, %5077
  %5080 = xor i32 %5074, %5077
  %5081 = add i32 %5080, %5079
  %5082 = icmp eq i32 %5081, 2
  %5083 = zext i1 %5082 to i8
  %5084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5083, i8* %5084, align 1
  store %struct.Memory* %loadMem_40273a, %struct.Memory** %MEMORY
  %loadMem_40273d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 33
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %5087 to i64*
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5089 = getelementptr inbounds %struct.GPR, %struct.GPR* %5088, i32 0, i32 1
  %5090 = getelementptr inbounds %struct.Reg, %struct.Reg* %5089, i32 0, i32 0
  %EAX.i655 = bitcast %union.anon* %5090 to i32*
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5092 = getelementptr inbounds %struct.GPR, %struct.GPR* %5091, i32 0, i32 15
  %5093 = getelementptr inbounds %struct.Reg, %struct.Reg* %5092, i32 0, i32 0
  %RBP.i656 = bitcast %union.anon* %5093 to i64*
  %5094 = load i64, i64* %RBP.i656
  %5095 = sub i64 %5094, 1392
  %5096 = load i32, i32* %EAX.i655
  %5097 = zext i32 %5096 to i64
  %5098 = load i64, i64* %PC.i654
  %5099 = add i64 %5098, 6
  store i64 %5099, i64* %PC.i654
  %5100 = inttoptr i64 %5095 to i32*
  store i32 %5096, i32* %5100
  store %struct.Memory* %loadMem_40273d, %struct.Memory** %MEMORY
  br label %block_.L_402743

block_.L_402743:                                  ; preds = %block_.L_402737, %block_402726
  %loadMem_402743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 33
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %5103 to i64*
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5105 = getelementptr inbounds %struct.GPR, %struct.GPR* %5104, i32 0, i32 1
  %5106 = getelementptr inbounds %struct.Reg, %struct.Reg* %5105, i32 0, i32 0
  %RAX.i652 = bitcast %union.anon* %5106 to i64*
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 15
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %5109 to i64*
  %5110 = load i64, i64* %RBP.i653
  %5111 = sub i64 %5110, 1392
  %5112 = load i64, i64* %PC.i651
  %5113 = add i64 %5112, 6
  store i64 %5113, i64* %PC.i651
  %5114 = inttoptr i64 %5111 to i32*
  %5115 = load i32, i32* %5114
  %5116 = zext i32 %5115 to i64
  store i64 %5116, i64* %RAX.i652, align 8
  store %struct.Memory* %loadMem_402743, %struct.Memory** %MEMORY
  %loadMem_402749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 33
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %5119 to i64*
  %5120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5121 = getelementptr inbounds %struct.GPR, %struct.GPR* %5120, i32 0, i32 1
  %5122 = getelementptr inbounds %struct.Reg, %struct.Reg* %5121, i32 0, i32 0
  %EAX.i649 = bitcast %union.anon* %5122 to i32*
  %5123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5124 = getelementptr inbounds %struct.GPR, %struct.GPR* %5123, i32 0, i32 15
  %5125 = getelementptr inbounds %struct.Reg, %struct.Reg* %5124, i32 0, i32 0
  %RBP.i650 = bitcast %union.anon* %5125 to i64*
  %5126 = load i64, i64* %RBP.i650
  %5127 = sub i64 %5126, 68
  %5128 = load i32, i32* %EAX.i649
  %5129 = zext i32 %5128 to i64
  %5130 = load i64, i64* %PC.i648
  %5131 = add i64 %5130, 3
  store i64 %5131, i64* %PC.i648
  %5132 = inttoptr i64 %5127 to i32*
  store i32 %5128, i32* %5132
  store %struct.Memory* %loadMem_402749, %struct.Memory** %MEMORY
  %loadMem_40274c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5134 = getelementptr inbounds %struct.GPR, %struct.GPR* %5133, i32 0, i32 33
  %5135 = getelementptr inbounds %struct.Reg, %struct.Reg* %5134, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %5135 to i64*
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 1
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %RAX.i646 = bitcast %union.anon* %5138 to i64*
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 15
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %RBP.i647 = bitcast %union.anon* %5141 to i64*
  %5142 = load i64, i64* %RBP.i647
  %5143 = sub i64 %5142, 84
  %5144 = load i64, i64* %PC.i645
  %5145 = add i64 %5144, 3
  store i64 %5145, i64* %PC.i645
  %5146 = inttoptr i64 %5143 to i32*
  %5147 = load i32, i32* %5146
  %5148 = zext i32 %5147 to i64
  store i64 %5148, i64* %RAX.i646, align 8
  store %struct.Memory* %loadMem_40274c, %struct.Memory** %MEMORY
  %loadMem_40274f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5150 = getelementptr inbounds %struct.GPR, %struct.GPR* %5149, i32 0, i32 33
  %5151 = getelementptr inbounds %struct.Reg, %struct.Reg* %5150, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %5151 to i64*
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5153 = getelementptr inbounds %struct.GPR, %struct.GPR* %5152, i32 0, i32 1
  %5154 = getelementptr inbounds %struct.Reg, %struct.Reg* %5153, i32 0, i32 0
  %EAX.i643 = bitcast %union.anon* %5154 to i32*
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5156 = getelementptr inbounds %struct.GPR, %struct.GPR* %5155, i32 0, i32 15
  %5157 = getelementptr inbounds %struct.Reg, %struct.Reg* %5156, i32 0, i32 0
  %RBP.i644 = bitcast %union.anon* %5157 to i64*
  %5158 = load i64, i64* %RBP.i644
  %5159 = sub i64 %5158, 1348
  %5160 = load i32, i32* %EAX.i643
  %5161 = zext i32 %5160 to i64
  %5162 = load i64, i64* %PC.i642
  %5163 = add i64 %5162, 6
  store i64 %5163, i64* %PC.i642
  %5164 = inttoptr i64 %5159 to i32*
  store i32 %5160, i32* %5164
  store %struct.Memory* %loadMem_40274f, %struct.Memory** %MEMORY
  %loadMem_402755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5166 = getelementptr inbounds %struct.GPR, %struct.GPR* %5165, i32 0, i32 33
  %5167 = getelementptr inbounds %struct.Reg, %struct.Reg* %5166, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %5167 to i64*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 1
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %5170 to i64*
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 15
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %RBP.i641 = bitcast %union.anon* %5173 to i64*
  %5174 = load i64, i64* %RBP.i641
  %5175 = sub i64 %5174, 52
  %5176 = load i64, i64* %PC.i639
  %5177 = add i64 %5176, 3
  store i64 %5177, i64* %PC.i639
  %5178 = inttoptr i64 %5175 to i32*
  %5179 = load i32, i32* %5178
  %5180 = zext i32 %5179 to i64
  store i64 %5180, i64* %RAX.i640, align 8
  store %struct.Memory* %loadMem_402755, %struct.Memory** %MEMORY
  %loadMem_402758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 33
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %5183 to i64*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5185 = getelementptr inbounds %struct.GPR, %struct.GPR* %5184, i32 0, i32 1
  %5186 = getelementptr inbounds %struct.Reg, %struct.Reg* %5185, i32 0, i32 0
  %RAX.i637 = bitcast %union.anon* %5186 to i64*
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5188 = getelementptr inbounds %struct.GPR, %struct.GPR* %5187, i32 0, i32 15
  %5189 = getelementptr inbounds %struct.Reg, %struct.Reg* %5188, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %5189 to i64*
  %5190 = load i64, i64* %RAX.i637
  %5191 = load i64, i64* %RBP.i638
  %5192 = sub i64 %5191, 68
  %5193 = load i64, i64* %PC.i636
  %5194 = add i64 %5193, 3
  store i64 %5194, i64* %PC.i636
  %5195 = trunc i64 %5190 to i32
  %5196 = inttoptr i64 %5192 to i32*
  %5197 = load i32, i32* %5196
  %5198 = sub i32 %5195, %5197
  %5199 = zext i32 %5198 to i64
  store i64 %5199, i64* %RAX.i637, align 8
  %5200 = icmp ult i32 %5195, %5197
  %5201 = zext i1 %5200 to i8
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5201, i8* %5202, align 1
  %5203 = and i32 %5198, 255
  %5204 = call i32 @llvm.ctpop.i32(i32 %5203)
  %5205 = trunc i32 %5204 to i8
  %5206 = and i8 %5205, 1
  %5207 = xor i8 %5206, 1
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5207, i8* %5208, align 1
  %5209 = xor i32 %5197, %5195
  %5210 = xor i32 %5209, %5198
  %5211 = lshr i32 %5210, 4
  %5212 = trunc i32 %5211 to i8
  %5213 = and i8 %5212, 1
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5213, i8* %5214, align 1
  %5215 = icmp eq i32 %5198, 0
  %5216 = zext i1 %5215 to i8
  %5217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5216, i8* %5217, align 1
  %5218 = lshr i32 %5198, 31
  %5219 = trunc i32 %5218 to i8
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5219, i8* %5220, align 1
  %5221 = lshr i32 %5195, 31
  %5222 = lshr i32 %5197, 31
  %5223 = xor i32 %5222, %5221
  %5224 = xor i32 %5218, %5221
  %5225 = add i32 %5224, %5223
  %5226 = icmp eq i32 %5225, 2
  %5227 = zext i1 %5226 to i8
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5227, i8* %5228, align 1
  store %struct.Memory* %loadMem_402758, %struct.Memory** %MEMORY
  %loadMem_40275b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5230 = getelementptr inbounds %struct.GPR, %struct.GPR* %5229, i32 0, i32 33
  %5231 = getelementptr inbounds %struct.Reg, %struct.Reg* %5230, i32 0, i32 0
  %PC.i633 = bitcast %union.anon* %5231 to i64*
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 1
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %EAX.i634 = bitcast %union.anon* %5234 to i32*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 15
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %RBP.i635 = bitcast %union.anon* %5237 to i64*
  %5238 = load i64, i64* %RBP.i635
  %5239 = sub i64 %5238, 1352
  %5240 = load i32, i32* %EAX.i634
  %5241 = zext i32 %5240 to i64
  %5242 = load i64, i64* %PC.i633
  %5243 = add i64 %5242, 6
  store i64 %5243, i64* %PC.i633
  %5244 = inttoptr i64 %5239 to i32*
  store i32 %5240, i32* %5244
  store %struct.Memory* %loadMem_40275b, %struct.Memory** %MEMORY
  %loadMem_402761 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5246 = getelementptr inbounds %struct.GPR, %struct.GPR* %5245, i32 0, i32 33
  %5247 = getelementptr inbounds %struct.Reg, %struct.Reg* %5246, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %5247 to i64*
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5249 = getelementptr inbounds %struct.GPR, %struct.GPR* %5248, i32 0, i32 1
  %5250 = getelementptr inbounds %struct.Reg, %struct.Reg* %5249, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %5250 to i64*
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5252 = getelementptr inbounds %struct.GPR, %struct.GPR* %5251, i32 0, i32 15
  %5253 = getelementptr inbounds %struct.Reg, %struct.Reg* %5252, i32 0, i32 0
  %RBP.i632 = bitcast %union.anon* %5253 to i64*
  %5254 = load i64, i64* %RBP.i632
  %5255 = sub i64 %5254, 68
  %5256 = load i64, i64* %PC.i630
  %5257 = add i64 %5256, 3
  store i64 %5257, i64* %PC.i630
  %5258 = inttoptr i64 %5255 to i32*
  %5259 = load i32, i32* %5258
  %5260 = zext i32 %5259 to i64
  store i64 %5260, i64* %RAX.i631, align 8
  store %struct.Memory* %loadMem_402761, %struct.Memory** %MEMORY
  %loadMem_402764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 33
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %5263 to i64*
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 1
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %EAX.i628 = bitcast %union.anon* %5266 to i32*
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 15
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %RBP.i629 = bitcast %union.anon* %5269 to i64*
  %5270 = load i64, i64* %RBP.i629
  %5271 = sub i64 %5270, 1356
  %5272 = load i32, i32* %EAX.i628
  %5273 = zext i32 %5272 to i64
  %5274 = load i64, i64* %PC.i627
  %5275 = add i64 %5274, 6
  store i64 %5275, i64* %PC.i627
  %5276 = inttoptr i64 %5271 to i32*
  store i32 %5272, i32* %5276
  store %struct.Memory* %loadMem_402764, %struct.Memory** %MEMORY
  br label %block_.L_40276a

block_.L_40276a:                                  ; preds = %block_402777, %block_.L_402743
  %loadMem_40276a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5278 = getelementptr inbounds %struct.GPR, %struct.GPR* %5277, i32 0, i32 33
  %5279 = getelementptr inbounds %struct.Reg, %struct.Reg* %5278, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %5279 to i64*
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 15
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %5282 to i64*
  %5283 = load i64, i64* %RBP.i626
  %5284 = sub i64 %5283, 1356
  %5285 = load i64, i64* %PC.i625
  %5286 = add i64 %5285, 7
  store i64 %5286, i64* %PC.i625
  %5287 = inttoptr i64 %5284 to i32*
  %5288 = load i32, i32* %5287
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5289, align 1
  %5290 = and i32 %5288, 255
  %5291 = call i32 @llvm.ctpop.i32(i32 %5290)
  %5292 = trunc i32 %5291 to i8
  %5293 = and i8 %5292, 1
  %5294 = xor i8 %5293, 1
  %5295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5294, i8* %5295, align 1
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5296, align 1
  %5297 = icmp eq i32 %5288, 0
  %5298 = zext i1 %5297 to i8
  %5299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5298, i8* %5299, align 1
  %5300 = lshr i32 %5288, 31
  %5301 = trunc i32 %5300 to i8
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5301, i8* %5302, align 1
  %5303 = lshr i32 %5288, 31
  %5304 = xor i32 %5300, %5303
  %5305 = add i32 %5304, %5303
  %5306 = icmp eq i32 %5305, 2
  %5307 = zext i1 %5306 to i8
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5307, i8* %5308, align 1
  store %struct.Memory* %loadMem_40276a, %struct.Memory** %MEMORY
  %loadMem_402771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 33
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %5311 to i64*
  %5312 = load i64, i64* %PC.i624
  %5313 = add i64 %5312, 124
  %5314 = load i64, i64* %PC.i624
  %5315 = add i64 %5314, 6
  %5316 = load i64, i64* %PC.i624
  %5317 = add i64 %5316, 6
  store i64 %5317, i64* %PC.i624
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5319 = load i8, i8* %5318, align 1
  %5320 = icmp ne i8 %5319, 0
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5322 = load i8, i8* %5321, align 1
  %5323 = icmp ne i8 %5322, 0
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5325 = load i8, i8* %5324, align 1
  %5326 = icmp ne i8 %5325, 0
  %5327 = xor i1 %5323, %5326
  %5328 = or i1 %5320, %5327
  %5329 = zext i1 %5328 to i8
  store i8 %5329, i8* %BRANCH_TAKEN, align 1
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5331 = select i1 %5328, i64 %5313, i64 %5315
  store i64 %5331, i64* %5330, align 8
  store %struct.Memory* %loadMem_402771, %struct.Memory** %MEMORY
  %loadBr_402771 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402771 = icmp eq i8 %loadBr_402771, 1
  br i1 %cmpBr_402771, label %block_.L_4027ed, label %block_402777

block_402777:                                     ; preds = %block_.L_40276a
  %loadMem_402777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 33
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %5334 to i64*
  %5335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5336 = getelementptr inbounds %struct.GPR, %struct.GPR* %5335, i32 0, i32 1
  %5337 = getelementptr inbounds %struct.Reg, %struct.Reg* %5336, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %5337 to i64*
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 15
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %5340 to i64*
  %5341 = load i64, i64* %RBP.i623
  %5342 = sub i64 %5341, 8
  %5343 = load i64, i64* %PC.i621
  %5344 = add i64 %5343, 4
  store i64 %5344, i64* %PC.i621
  %5345 = inttoptr i64 %5342 to i64*
  %5346 = load i64, i64* %5345
  store i64 %5346, i64* %RAX.i622, align 8
  store %struct.Memory* %loadMem_402777, %struct.Memory** %MEMORY
  %loadMem_40277b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %5349 to i64*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 5
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %RCX.i619 = bitcast %union.anon* %5352 to i64*
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 15
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %RBP.i620 = bitcast %union.anon* %5355 to i64*
  %5356 = load i64, i64* %RBP.i620
  %5357 = sub i64 %5356, 1348
  %5358 = load i64, i64* %PC.i618
  %5359 = add i64 %5358, 7
  store i64 %5359, i64* %PC.i618
  %5360 = inttoptr i64 %5357 to i32*
  %5361 = load i32, i32* %5360
  %5362 = sext i32 %5361 to i64
  store i64 %5362, i64* %RCX.i619, align 8
  store %struct.Memory* %loadMem_40277b, %struct.Memory** %MEMORY
  %loadMem_402782 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5364 = getelementptr inbounds %struct.GPR, %struct.GPR* %5363, i32 0, i32 33
  %5365 = getelementptr inbounds %struct.Reg, %struct.Reg* %5364, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5365 to i64*
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5367 = getelementptr inbounds %struct.GPR, %struct.GPR* %5366, i32 0, i32 1
  %5368 = getelementptr inbounds %struct.Reg, %struct.Reg* %5367, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %5368 to i64*
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 5
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %5371 to i64*
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 7
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %RDX.i617 = bitcast %union.anon* %5374 to i64*
  %5375 = load i64, i64* %RAX.i615
  %5376 = load i64, i64* %RCX.i616
  %5377 = mul i64 %5376, 4
  %5378 = add i64 %5377, %5375
  %5379 = load i64, i64* %PC.i614
  %5380 = add i64 %5379, 3
  store i64 %5380, i64* %PC.i614
  %5381 = inttoptr i64 %5378 to i32*
  %5382 = load i32, i32* %5381
  %5383 = zext i32 %5382 to i64
  store i64 %5383, i64* %RDX.i617, align 8
  store %struct.Memory* %loadMem_402782, %struct.Memory** %MEMORY
  %loadMem_402785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 33
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 7
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %EDX.i612 = bitcast %union.anon* %5389 to i32*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 15
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %5392 to i64*
  %5393 = load i64, i64* %RBP.i613
  %5394 = sub i64 %5393, 1360
  %5395 = load i32, i32* %EDX.i612
  %5396 = zext i32 %5395 to i64
  %5397 = load i64, i64* %PC.i611
  %5398 = add i64 %5397, 6
  store i64 %5398, i64* %PC.i611
  %5399 = inttoptr i64 %5394 to i32*
  store i32 %5395, i32* %5399
  store %struct.Memory* %loadMem_402785, %struct.Memory** %MEMORY
  %loadMem_40278b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 33
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %5402 to i64*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 1
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %5405 to i64*
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5407 = getelementptr inbounds %struct.GPR, %struct.GPR* %5406, i32 0, i32 15
  %5408 = getelementptr inbounds %struct.Reg, %struct.Reg* %5407, i32 0, i32 0
  %RBP.i610 = bitcast %union.anon* %5408 to i64*
  %5409 = load i64, i64* %RBP.i610
  %5410 = sub i64 %5409, 8
  %5411 = load i64, i64* %PC.i608
  %5412 = add i64 %5411, 4
  store i64 %5412, i64* %PC.i608
  %5413 = inttoptr i64 %5410 to i64*
  %5414 = load i64, i64* %5413
  store i64 %5414, i64* %RAX.i609, align 8
  store %struct.Memory* %loadMem_40278b, %struct.Memory** %MEMORY
  %loadMem_40278f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5416 = getelementptr inbounds %struct.GPR, %struct.GPR* %5415, i32 0, i32 33
  %5417 = getelementptr inbounds %struct.Reg, %struct.Reg* %5416, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %5417 to i64*
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 5
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %RCX.i606 = bitcast %union.anon* %5420 to i64*
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 15
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %RBP.i607 = bitcast %union.anon* %5423 to i64*
  %5424 = load i64, i64* %RBP.i607
  %5425 = sub i64 %5424, 1352
  %5426 = load i64, i64* %PC.i605
  %5427 = add i64 %5426, 7
  store i64 %5427, i64* %PC.i605
  %5428 = inttoptr i64 %5425 to i32*
  %5429 = load i32, i32* %5428
  %5430 = sext i32 %5429 to i64
  store i64 %5430, i64* %RCX.i606, align 8
  store %struct.Memory* %loadMem_40278f, %struct.Memory** %MEMORY
  %loadMem_402796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5432 = getelementptr inbounds %struct.GPR, %struct.GPR* %5431, i32 0, i32 33
  %5433 = getelementptr inbounds %struct.Reg, %struct.Reg* %5432, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5433 to i64*
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5435 = getelementptr inbounds %struct.GPR, %struct.GPR* %5434, i32 0, i32 1
  %5436 = getelementptr inbounds %struct.Reg, %struct.Reg* %5435, i32 0, i32 0
  %RAX.i602 = bitcast %union.anon* %5436 to i64*
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 5
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %RCX.i603 = bitcast %union.anon* %5439 to i64*
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 7
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %RDX.i604 = bitcast %union.anon* %5442 to i64*
  %5443 = load i64, i64* %RAX.i602
  %5444 = load i64, i64* %RCX.i603
  %5445 = mul i64 %5444, 4
  %5446 = add i64 %5445, %5443
  %5447 = load i64, i64* %PC.i601
  %5448 = add i64 %5447, 3
  store i64 %5448, i64* %PC.i601
  %5449 = inttoptr i64 %5446 to i32*
  %5450 = load i32, i32* %5449
  %5451 = zext i32 %5450 to i64
  store i64 %5451, i64* %RDX.i604, align 8
  store %struct.Memory* %loadMem_402796, %struct.Memory** %MEMORY
  %loadMem_402799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 33
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %5454 to i64*
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 1
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %RAX.i599 = bitcast %union.anon* %5457 to i64*
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 15
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %RBP.i600 = bitcast %union.anon* %5460 to i64*
  %5461 = load i64, i64* %RBP.i600
  %5462 = sub i64 %5461, 8
  %5463 = load i64, i64* %PC.i598
  %5464 = add i64 %5463, 4
  store i64 %5464, i64* %PC.i598
  %5465 = inttoptr i64 %5462 to i64*
  %5466 = load i64, i64* %5465
  store i64 %5466, i64* %RAX.i599, align 8
  store %struct.Memory* %loadMem_402799, %struct.Memory** %MEMORY
  %loadMem_40279d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 33
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5469 to i64*
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 5
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %5472 to i64*
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 15
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %5475 to i64*
  %5476 = load i64, i64* %RBP.i597
  %5477 = sub i64 %5476, 1348
  %5478 = load i64, i64* %PC.i595
  %5479 = add i64 %5478, 7
  store i64 %5479, i64* %PC.i595
  %5480 = inttoptr i64 %5477 to i32*
  %5481 = load i32, i32* %5480
  %5482 = sext i32 %5481 to i64
  store i64 %5482, i64* %RCX.i596, align 8
  store %struct.Memory* %loadMem_40279d, %struct.Memory** %MEMORY
  %loadMem_4027a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5484 = getelementptr inbounds %struct.GPR, %struct.GPR* %5483, i32 0, i32 33
  %5485 = getelementptr inbounds %struct.Reg, %struct.Reg* %5484, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %5485 to i64*
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 7
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %EDX.i592 = bitcast %union.anon* %5488 to i32*
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5490 = getelementptr inbounds %struct.GPR, %struct.GPR* %5489, i32 0, i32 1
  %5491 = getelementptr inbounds %struct.Reg, %struct.Reg* %5490, i32 0, i32 0
  %RAX.i593 = bitcast %union.anon* %5491 to i64*
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 5
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %5494 to i64*
  %5495 = load i64, i64* %RAX.i593
  %5496 = load i64, i64* %RCX.i594
  %5497 = mul i64 %5496, 4
  %5498 = add i64 %5497, %5495
  %5499 = load i32, i32* %EDX.i592
  %5500 = zext i32 %5499 to i64
  %5501 = load i64, i64* %PC.i591
  %5502 = add i64 %5501, 3
  store i64 %5502, i64* %PC.i591
  %5503 = inttoptr i64 %5498 to i32*
  store i32 %5499, i32* %5503
  store %struct.Memory* %loadMem_4027a4, %struct.Memory** %MEMORY
  %loadMem_4027a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5505 = getelementptr inbounds %struct.GPR, %struct.GPR* %5504, i32 0, i32 33
  %5506 = getelementptr inbounds %struct.Reg, %struct.Reg* %5505, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5506 to i64*
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5508 = getelementptr inbounds %struct.GPR, %struct.GPR* %5507, i32 0, i32 7
  %5509 = getelementptr inbounds %struct.Reg, %struct.Reg* %5508, i32 0, i32 0
  %RDX.i589 = bitcast %union.anon* %5509 to i64*
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 15
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %RBP.i590 = bitcast %union.anon* %5512 to i64*
  %5513 = load i64, i64* %RBP.i590
  %5514 = sub i64 %5513, 1360
  %5515 = load i64, i64* %PC.i588
  %5516 = add i64 %5515, 6
  store i64 %5516, i64* %PC.i588
  %5517 = inttoptr i64 %5514 to i32*
  %5518 = load i32, i32* %5517
  %5519 = zext i32 %5518 to i64
  store i64 %5519, i64* %RDX.i589, align 8
  store %struct.Memory* %loadMem_4027a7, %struct.Memory** %MEMORY
  %loadMem_4027ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5521 = getelementptr inbounds %struct.GPR, %struct.GPR* %5520, i32 0, i32 33
  %5522 = getelementptr inbounds %struct.Reg, %struct.Reg* %5521, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5522 to i64*
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5524 = getelementptr inbounds %struct.GPR, %struct.GPR* %5523, i32 0, i32 1
  %5525 = getelementptr inbounds %struct.Reg, %struct.Reg* %5524, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %5525 to i64*
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 15
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %RBP.i587 = bitcast %union.anon* %5528 to i64*
  %5529 = load i64, i64* %RBP.i587
  %5530 = sub i64 %5529, 8
  %5531 = load i64, i64* %PC.i585
  %5532 = add i64 %5531, 4
  store i64 %5532, i64* %PC.i585
  %5533 = inttoptr i64 %5530 to i64*
  %5534 = load i64, i64* %5533
  store i64 %5534, i64* %RAX.i586, align 8
  store %struct.Memory* %loadMem_4027ad, %struct.Memory** %MEMORY
  %loadMem_4027b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 33
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5537 to i64*
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 5
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %RCX.i583 = bitcast %union.anon* %5540 to i64*
  %5541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5542 = getelementptr inbounds %struct.GPR, %struct.GPR* %5541, i32 0, i32 15
  %5543 = getelementptr inbounds %struct.Reg, %struct.Reg* %5542, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %5543 to i64*
  %5544 = load i64, i64* %RBP.i584
  %5545 = sub i64 %5544, 1352
  %5546 = load i64, i64* %PC.i582
  %5547 = add i64 %5546, 7
  store i64 %5547, i64* %PC.i582
  %5548 = inttoptr i64 %5545 to i32*
  %5549 = load i32, i32* %5548
  %5550 = sext i32 %5549 to i64
  store i64 %5550, i64* %RCX.i583, align 8
  store %struct.Memory* %loadMem_4027b1, %struct.Memory** %MEMORY
  %loadMem_4027b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5552 = getelementptr inbounds %struct.GPR, %struct.GPR* %5551, i32 0, i32 33
  %5553 = getelementptr inbounds %struct.Reg, %struct.Reg* %5552, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5553 to i64*
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5555 = getelementptr inbounds %struct.GPR, %struct.GPR* %5554, i32 0, i32 7
  %5556 = getelementptr inbounds %struct.Reg, %struct.Reg* %5555, i32 0, i32 0
  %EDX.i579 = bitcast %union.anon* %5556 to i32*
  %5557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5558 = getelementptr inbounds %struct.GPR, %struct.GPR* %5557, i32 0, i32 1
  %5559 = getelementptr inbounds %struct.Reg, %struct.Reg* %5558, i32 0, i32 0
  %RAX.i580 = bitcast %union.anon* %5559 to i64*
  %5560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5561 = getelementptr inbounds %struct.GPR, %struct.GPR* %5560, i32 0, i32 5
  %5562 = getelementptr inbounds %struct.Reg, %struct.Reg* %5561, i32 0, i32 0
  %RCX.i581 = bitcast %union.anon* %5562 to i64*
  %5563 = load i64, i64* %RAX.i580
  %5564 = load i64, i64* %RCX.i581
  %5565 = mul i64 %5564, 4
  %5566 = add i64 %5565, %5563
  %5567 = load i32, i32* %EDX.i579
  %5568 = zext i32 %5567 to i64
  %5569 = load i64, i64* %PC.i578
  %5570 = add i64 %5569, 3
  store i64 %5570, i64* %PC.i578
  %5571 = inttoptr i64 %5566 to i32*
  store i32 %5567, i32* %5571
  store %struct.Memory* %loadMem_4027b8, %struct.Memory** %MEMORY
  %loadMem_4027bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5573 = getelementptr inbounds %struct.GPR, %struct.GPR* %5572, i32 0, i32 33
  %5574 = getelementptr inbounds %struct.Reg, %struct.Reg* %5573, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %5574 to i64*
  %5575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5576 = getelementptr inbounds %struct.GPR, %struct.GPR* %5575, i32 0, i32 7
  %5577 = getelementptr inbounds %struct.Reg, %struct.Reg* %5576, i32 0, i32 0
  %RDX.i576 = bitcast %union.anon* %5577 to i64*
  %5578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5579 = getelementptr inbounds %struct.GPR, %struct.GPR* %5578, i32 0, i32 15
  %5580 = getelementptr inbounds %struct.Reg, %struct.Reg* %5579, i32 0, i32 0
  %RBP.i577 = bitcast %union.anon* %5580 to i64*
  %5581 = load i64, i64* %RBP.i577
  %5582 = sub i64 %5581, 1348
  %5583 = load i64, i64* %PC.i575
  %5584 = add i64 %5583, 6
  store i64 %5584, i64* %PC.i575
  %5585 = inttoptr i64 %5582 to i32*
  %5586 = load i32, i32* %5585
  %5587 = zext i32 %5586 to i64
  store i64 %5587, i64* %RDX.i576, align 8
  store %struct.Memory* %loadMem_4027bb, %struct.Memory** %MEMORY
  %loadMem_4027c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5589 = getelementptr inbounds %struct.GPR, %struct.GPR* %5588, i32 0, i32 33
  %5590 = getelementptr inbounds %struct.Reg, %struct.Reg* %5589, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5590 to i64*
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5592 = getelementptr inbounds %struct.GPR, %struct.GPR* %5591, i32 0, i32 7
  %5593 = getelementptr inbounds %struct.Reg, %struct.Reg* %5592, i32 0, i32 0
  %RDX.i574 = bitcast %union.anon* %5593 to i64*
  %5594 = load i64, i64* %RDX.i574
  %5595 = load i64, i64* %PC.i573
  %5596 = add i64 %5595, 3
  store i64 %5596, i64* %PC.i573
  %5597 = trunc i64 %5594 to i32
  %5598 = add i32 1, %5597
  %5599 = zext i32 %5598 to i64
  store i64 %5599, i64* %RDX.i574, align 8
  %5600 = icmp ult i32 %5598, %5597
  %5601 = icmp ult i32 %5598, 1
  %5602 = or i1 %5600, %5601
  %5603 = zext i1 %5602 to i8
  %5604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5603, i8* %5604, align 1
  %5605 = and i32 %5598, 255
  %5606 = call i32 @llvm.ctpop.i32(i32 %5605)
  %5607 = trunc i32 %5606 to i8
  %5608 = and i8 %5607, 1
  %5609 = xor i8 %5608, 1
  %5610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5609, i8* %5610, align 1
  %5611 = xor i64 1, %5594
  %5612 = trunc i64 %5611 to i32
  %5613 = xor i32 %5612, %5598
  %5614 = lshr i32 %5613, 4
  %5615 = trunc i32 %5614 to i8
  %5616 = and i8 %5615, 1
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5616, i8* %5617, align 1
  %5618 = icmp eq i32 %5598, 0
  %5619 = zext i1 %5618 to i8
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5619, i8* %5620, align 1
  %5621 = lshr i32 %5598, 31
  %5622 = trunc i32 %5621 to i8
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5622, i8* %5623, align 1
  %5624 = lshr i32 %5597, 31
  %5625 = xor i32 %5621, %5624
  %5626 = add i32 %5625, %5621
  %5627 = icmp eq i32 %5626, 2
  %5628 = zext i1 %5627 to i8
  %5629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5628, i8* %5629, align 1
  store %struct.Memory* %loadMem_4027c1, %struct.Memory** %MEMORY
  %loadMem_4027c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 33
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %PC.i570 = bitcast %union.anon* %5632 to i64*
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 7
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %EDX.i571 = bitcast %union.anon* %5635 to i32*
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 15
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %RBP.i572 = bitcast %union.anon* %5638 to i64*
  %5639 = load i64, i64* %RBP.i572
  %5640 = sub i64 %5639, 1348
  %5641 = load i32, i32* %EDX.i571
  %5642 = zext i32 %5641 to i64
  %5643 = load i64, i64* %PC.i570
  %5644 = add i64 %5643, 6
  store i64 %5644, i64* %PC.i570
  %5645 = inttoptr i64 %5640 to i32*
  store i32 %5641, i32* %5645
  store %struct.Memory* %loadMem_4027c4, %struct.Memory** %MEMORY
  %loadMem_4027ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5647 = getelementptr inbounds %struct.GPR, %struct.GPR* %5646, i32 0, i32 33
  %5648 = getelementptr inbounds %struct.Reg, %struct.Reg* %5647, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %5648 to i64*
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5650 = getelementptr inbounds %struct.GPR, %struct.GPR* %5649, i32 0, i32 7
  %5651 = getelementptr inbounds %struct.Reg, %struct.Reg* %5650, i32 0, i32 0
  %RDX.i568 = bitcast %union.anon* %5651 to i64*
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5653 = getelementptr inbounds %struct.GPR, %struct.GPR* %5652, i32 0, i32 15
  %5654 = getelementptr inbounds %struct.Reg, %struct.Reg* %5653, i32 0, i32 0
  %RBP.i569 = bitcast %union.anon* %5654 to i64*
  %5655 = load i64, i64* %RBP.i569
  %5656 = sub i64 %5655, 1352
  %5657 = load i64, i64* %PC.i567
  %5658 = add i64 %5657, 6
  store i64 %5658, i64* %PC.i567
  %5659 = inttoptr i64 %5656 to i32*
  %5660 = load i32, i32* %5659
  %5661 = zext i32 %5660 to i64
  store i64 %5661, i64* %RDX.i568, align 8
  store %struct.Memory* %loadMem_4027ca, %struct.Memory** %MEMORY
  %loadMem_4027d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5663 = getelementptr inbounds %struct.GPR, %struct.GPR* %5662, i32 0, i32 33
  %5664 = getelementptr inbounds %struct.Reg, %struct.Reg* %5663, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %5664 to i64*
  %5665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5666 = getelementptr inbounds %struct.GPR, %struct.GPR* %5665, i32 0, i32 7
  %5667 = getelementptr inbounds %struct.Reg, %struct.Reg* %5666, i32 0, i32 0
  %RDX.i566 = bitcast %union.anon* %5667 to i64*
  %5668 = load i64, i64* %RDX.i566
  %5669 = load i64, i64* %PC.i565
  %5670 = add i64 %5669, 3
  store i64 %5670, i64* %PC.i565
  %5671 = trunc i64 %5668 to i32
  %5672 = add i32 1, %5671
  %5673 = zext i32 %5672 to i64
  store i64 %5673, i64* %RDX.i566, align 8
  %5674 = icmp ult i32 %5672, %5671
  %5675 = icmp ult i32 %5672, 1
  %5676 = or i1 %5674, %5675
  %5677 = zext i1 %5676 to i8
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5677, i8* %5678, align 1
  %5679 = and i32 %5672, 255
  %5680 = call i32 @llvm.ctpop.i32(i32 %5679)
  %5681 = trunc i32 %5680 to i8
  %5682 = and i8 %5681, 1
  %5683 = xor i8 %5682, 1
  %5684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5683, i8* %5684, align 1
  %5685 = xor i64 1, %5668
  %5686 = trunc i64 %5685 to i32
  %5687 = xor i32 %5686, %5672
  %5688 = lshr i32 %5687, 4
  %5689 = trunc i32 %5688 to i8
  %5690 = and i8 %5689, 1
  %5691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5690, i8* %5691, align 1
  %5692 = icmp eq i32 %5672, 0
  %5693 = zext i1 %5692 to i8
  %5694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5693, i8* %5694, align 1
  %5695 = lshr i32 %5672, 31
  %5696 = trunc i32 %5695 to i8
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5696, i8* %5697, align 1
  %5698 = lshr i32 %5671, 31
  %5699 = xor i32 %5695, %5698
  %5700 = add i32 %5699, %5695
  %5701 = icmp eq i32 %5700, 2
  %5702 = zext i1 %5701 to i8
  %5703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5702, i8* %5703, align 1
  store %struct.Memory* %loadMem_4027d0, %struct.Memory** %MEMORY
  %loadMem_4027d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 33
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %5706 to i64*
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 7
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %EDX.i563 = bitcast %union.anon* %5709 to i32*
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 15
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %5712 to i64*
  %5713 = load i64, i64* %RBP.i564
  %5714 = sub i64 %5713, 1352
  %5715 = load i32, i32* %EDX.i563
  %5716 = zext i32 %5715 to i64
  %5717 = load i64, i64* %PC.i562
  %5718 = add i64 %5717, 6
  store i64 %5718, i64* %PC.i562
  %5719 = inttoptr i64 %5714 to i32*
  store i32 %5715, i32* %5719
  store %struct.Memory* %loadMem_4027d3, %struct.Memory** %MEMORY
  %loadMem_4027d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5721 = getelementptr inbounds %struct.GPR, %struct.GPR* %5720, i32 0, i32 33
  %5722 = getelementptr inbounds %struct.Reg, %struct.Reg* %5721, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %5722 to i64*
  %5723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5724 = getelementptr inbounds %struct.GPR, %struct.GPR* %5723, i32 0, i32 7
  %5725 = getelementptr inbounds %struct.Reg, %struct.Reg* %5724, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %5725 to i64*
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 15
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %5728 to i64*
  %5729 = load i64, i64* %RBP.i561
  %5730 = sub i64 %5729, 1356
  %5731 = load i64, i64* %PC.i559
  %5732 = add i64 %5731, 6
  store i64 %5732, i64* %PC.i559
  %5733 = inttoptr i64 %5730 to i32*
  %5734 = load i32, i32* %5733
  %5735 = zext i32 %5734 to i64
  store i64 %5735, i64* %RDX.i560, align 8
  store %struct.Memory* %loadMem_4027d9, %struct.Memory** %MEMORY
  %loadMem_4027df = load %struct.Memory*, %struct.Memory** %MEMORY
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5737 = getelementptr inbounds %struct.GPR, %struct.GPR* %5736, i32 0, i32 33
  %5738 = getelementptr inbounds %struct.Reg, %struct.Reg* %5737, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %5738 to i64*
  %5739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5740 = getelementptr inbounds %struct.GPR, %struct.GPR* %5739, i32 0, i32 7
  %5741 = getelementptr inbounds %struct.Reg, %struct.Reg* %5740, i32 0, i32 0
  %RDX.i558 = bitcast %union.anon* %5741 to i64*
  %5742 = load i64, i64* %RDX.i558
  %5743 = load i64, i64* %PC.i557
  %5744 = add i64 %5743, 3
  store i64 %5744, i64* %PC.i557
  %5745 = trunc i64 %5742 to i32
  %5746 = add i32 -1, %5745
  %5747 = zext i32 %5746 to i64
  store i64 %5747, i64* %RDX.i558, align 8
  %5748 = icmp ult i32 %5746, %5745
  %5749 = icmp ult i32 %5746, -1
  %5750 = or i1 %5748, %5749
  %5751 = zext i1 %5750 to i8
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5751, i8* %5752, align 1
  %5753 = and i32 %5746, 255
  %5754 = call i32 @llvm.ctpop.i32(i32 %5753)
  %5755 = trunc i32 %5754 to i8
  %5756 = and i8 %5755, 1
  %5757 = xor i8 %5756, 1
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5757, i8* %5758, align 1
  %5759 = xor i64 -1, %5742
  %5760 = trunc i64 %5759 to i32
  %5761 = xor i32 %5760, %5746
  %5762 = lshr i32 %5761, 4
  %5763 = trunc i32 %5762 to i8
  %5764 = and i8 %5763, 1
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5764, i8* %5765, align 1
  %5766 = icmp eq i32 %5746, 0
  %5767 = zext i1 %5766 to i8
  %5768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5767, i8* %5768, align 1
  %5769 = lshr i32 %5746, 31
  %5770 = trunc i32 %5769 to i8
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5770, i8* %5771, align 1
  %5772 = lshr i32 %5745, 31
  %5773 = xor i32 %5769, %5772
  %5774 = xor i32 %5769, 1
  %5775 = add i32 %5773, %5774
  %5776 = icmp eq i32 %5775, 2
  %5777 = zext i1 %5776 to i8
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5777, i8* %5778, align 1
  store %struct.Memory* %loadMem_4027df, %struct.Memory** %MEMORY
  %loadMem_4027e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5780 = getelementptr inbounds %struct.GPR, %struct.GPR* %5779, i32 0, i32 33
  %5781 = getelementptr inbounds %struct.Reg, %struct.Reg* %5780, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %5781 to i64*
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 7
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %EDX.i555 = bitcast %union.anon* %5784 to i32*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 15
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %5787 to i64*
  %5788 = load i64, i64* %RBP.i556
  %5789 = sub i64 %5788, 1356
  %5790 = load i32, i32* %EDX.i555
  %5791 = zext i32 %5790 to i64
  %5792 = load i64, i64* %PC.i554
  %5793 = add i64 %5792, 6
  store i64 %5793, i64* %PC.i554
  %5794 = inttoptr i64 %5789 to i32*
  store i32 %5790, i32* %5794
  store %struct.Memory* %loadMem_4027e2, %struct.Memory** %MEMORY
  %loadMem_4027e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 33
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %5797 to i64*
  %5798 = load i64, i64* %PC.i553
  %5799 = add i64 %5798, -126
  %5800 = load i64, i64* %PC.i553
  %5801 = add i64 %5800, 5
  store i64 %5801, i64* %PC.i553
  %5802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5799, i64* %5802, align 8
  store %struct.Memory* %loadMem_4027e8, %struct.Memory** %MEMORY
  br label %block_.L_40276a

block_.L_4027ed:                                  ; preds = %block_.L_40276a
  %loadMem_4027ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5804 = getelementptr inbounds %struct.GPR, %struct.GPR* %5803, i32 0, i32 33
  %5805 = getelementptr inbounds %struct.Reg, %struct.Reg* %5804, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %5805 to i64*
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5807 = getelementptr inbounds %struct.GPR, %struct.GPR* %5806, i32 0, i32 1
  %5808 = getelementptr inbounds %struct.Reg, %struct.Reg* %5807, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %5808 to i64*
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5810 = getelementptr inbounds %struct.GPR, %struct.GPR* %5809, i32 0, i32 15
  %5811 = getelementptr inbounds %struct.Reg, %struct.Reg* %5810, i32 0, i32 0
  %RBP.i552 = bitcast %union.anon* %5811 to i64*
  %5812 = load i64, i64* %RBP.i552
  %5813 = sub i64 %5812, 88
  %5814 = load i64, i64* %PC.i550
  %5815 = add i64 %5814, 3
  store i64 %5815, i64* %PC.i550
  %5816 = inttoptr i64 %5813 to i32*
  %5817 = load i32, i32* %5816
  %5818 = zext i32 %5817 to i64
  store i64 %5818, i64* %RAX.i551, align 8
  store %struct.Memory* %loadMem_4027ed, %struct.Memory** %MEMORY
  %loadMem_4027f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5820 = getelementptr inbounds %struct.GPR, %struct.GPR* %5819, i32 0, i32 33
  %5821 = getelementptr inbounds %struct.Reg, %struct.Reg* %5820, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %5821 to i64*
  %5822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5823 = getelementptr inbounds %struct.GPR, %struct.GPR* %5822, i32 0, i32 1
  %5824 = getelementptr inbounds %struct.Reg, %struct.Reg* %5823, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %5824 to i64*
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 15
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %RBP.i549 = bitcast %union.anon* %5827 to i64*
  %5828 = load i64, i64* %RAX.i548
  %5829 = load i64, i64* %RBP.i549
  %5830 = sub i64 %5829, 64
  %5831 = load i64, i64* %PC.i547
  %5832 = add i64 %5831, 3
  store i64 %5832, i64* %PC.i547
  %5833 = trunc i64 %5828 to i32
  %5834 = inttoptr i64 %5830 to i32*
  %5835 = load i32, i32* %5834
  %5836 = sub i32 %5833, %5835
  %5837 = zext i32 %5836 to i64
  store i64 %5837, i64* %RAX.i548, align 8
  %5838 = icmp ult i32 %5833, %5835
  %5839 = zext i1 %5838 to i8
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5839, i8* %5840, align 1
  %5841 = and i32 %5836, 255
  %5842 = call i32 @llvm.ctpop.i32(i32 %5841)
  %5843 = trunc i32 %5842 to i8
  %5844 = and i8 %5843, 1
  %5845 = xor i8 %5844, 1
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5845, i8* %5846, align 1
  %5847 = xor i32 %5835, %5833
  %5848 = xor i32 %5847, %5836
  %5849 = lshr i32 %5848, 4
  %5850 = trunc i32 %5849 to i8
  %5851 = and i8 %5850, 1
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5851, i8* %5852, align 1
  %5853 = icmp eq i32 %5836, 0
  %5854 = zext i1 %5853 to i8
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5854, i8* %5855, align 1
  %5856 = lshr i32 %5836, 31
  %5857 = trunc i32 %5856 to i8
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5857, i8* %5858, align 1
  %5859 = lshr i32 %5833, 31
  %5860 = lshr i32 %5835, 31
  %5861 = xor i32 %5860, %5859
  %5862 = xor i32 %5856, %5859
  %5863 = add i32 %5862, %5861
  %5864 = icmp eq i32 %5863, 2
  %5865 = zext i1 %5864 to i8
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5865, i8* %5866, align 1
  store %struct.Memory* %loadMem_4027f0, %struct.Memory** %MEMORY
  %loadMem_4027f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5868 = getelementptr inbounds %struct.GPR, %struct.GPR* %5867, i32 0, i32 33
  %5869 = getelementptr inbounds %struct.Reg, %struct.Reg* %5868, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %5869 to i64*
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5871 = getelementptr inbounds %struct.GPR, %struct.GPR* %5870, i32 0, i32 5
  %5872 = getelementptr inbounds %struct.Reg, %struct.Reg* %5871, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %5872 to i64*
  %5873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5874 = getelementptr inbounds %struct.GPR, %struct.GPR* %5873, i32 0, i32 15
  %5875 = getelementptr inbounds %struct.Reg, %struct.Reg* %5874, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %5875 to i64*
  %5876 = load i64, i64* %RBP.i546
  %5877 = sub i64 %5876, 64
  %5878 = load i64, i64* %PC.i544
  %5879 = add i64 %5878, 3
  store i64 %5879, i64* %PC.i544
  %5880 = inttoptr i64 %5877 to i32*
  %5881 = load i32, i32* %5880
  %5882 = zext i32 %5881 to i64
  store i64 %5882, i64* %RCX.i545, align 8
  store %struct.Memory* %loadMem_4027f3, %struct.Memory** %MEMORY
  %loadMem_4027f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5884 = getelementptr inbounds %struct.GPR, %struct.GPR* %5883, i32 0, i32 33
  %5885 = getelementptr inbounds %struct.Reg, %struct.Reg* %5884, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %5885 to i64*
  %5886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5887 = getelementptr inbounds %struct.GPR, %struct.GPR* %5886, i32 0, i32 5
  %5888 = getelementptr inbounds %struct.Reg, %struct.Reg* %5887, i32 0, i32 0
  %RCX.i542 = bitcast %union.anon* %5888 to i64*
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5890 = getelementptr inbounds %struct.GPR, %struct.GPR* %5889, i32 0, i32 15
  %5891 = getelementptr inbounds %struct.Reg, %struct.Reg* %5890, i32 0, i32 0
  %RBP.i543 = bitcast %union.anon* %5891 to i64*
  %5892 = load i64, i64* %RCX.i542
  %5893 = load i64, i64* %RBP.i543
  %5894 = sub i64 %5893, 56
  %5895 = load i64, i64* %PC.i541
  %5896 = add i64 %5895, 3
  store i64 %5896, i64* %PC.i541
  %5897 = trunc i64 %5892 to i32
  %5898 = inttoptr i64 %5894 to i32*
  %5899 = load i32, i32* %5898
  %5900 = sub i32 %5897, %5899
  %5901 = zext i32 %5900 to i64
  store i64 %5901, i64* %RCX.i542, align 8
  %5902 = icmp ult i32 %5897, %5899
  %5903 = zext i1 %5902 to i8
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5903, i8* %5904, align 1
  %5905 = and i32 %5900, 255
  %5906 = call i32 @llvm.ctpop.i32(i32 %5905)
  %5907 = trunc i32 %5906 to i8
  %5908 = and i8 %5907, 1
  %5909 = xor i8 %5908, 1
  %5910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5909, i8* %5910, align 1
  %5911 = xor i32 %5899, %5897
  %5912 = xor i32 %5911, %5900
  %5913 = lshr i32 %5912, 4
  %5914 = trunc i32 %5913 to i8
  %5915 = and i8 %5914, 1
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5915, i8* %5916, align 1
  %5917 = icmp eq i32 %5900, 0
  %5918 = zext i1 %5917 to i8
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5918, i8* %5919, align 1
  %5920 = lshr i32 %5900, 31
  %5921 = trunc i32 %5920 to i8
  %5922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5921, i8* %5922, align 1
  %5923 = lshr i32 %5897, 31
  %5924 = lshr i32 %5899, 31
  %5925 = xor i32 %5924, %5923
  %5926 = xor i32 %5920, %5923
  %5927 = add i32 %5926, %5925
  %5928 = icmp eq i32 %5927, 2
  %5929 = zext i1 %5928 to i8
  %5930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5929, i8* %5930, align 1
  store %struct.Memory* %loadMem_4027f6, %struct.Memory** %MEMORY
  %loadMem_4027f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5932 = getelementptr inbounds %struct.GPR, %struct.GPR* %5931, i32 0, i32 33
  %5933 = getelementptr inbounds %struct.Reg, %struct.Reg* %5932, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %5933 to i64*
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5935 = getelementptr inbounds %struct.GPR, %struct.GPR* %5934, i32 0, i32 1
  %5936 = getelementptr inbounds %struct.Reg, %struct.Reg* %5935, i32 0, i32 0
  %EAX.i539 = bitcast %union.anon* %5936 to i32*
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5938 = getelementptr inbounds %struct.GPR, %struct.GPR* %5937, i32 0, i32 5
  %5939 = getelementptr inbounds %struct.Reg, %struct.Reg* %5938, i32 0, i32 0
  %ECX.i540 = bitcast %union.anon* %5939 to i32*
  %5940 = load i32, i32* %EAX.i539
  %5941 = zext i32 %5940 to i64
  %5942 = load i32, i32* %ECX.i540
  %5943 = zext i32 %5942 to i64
  %5944 = load i64, i64* %PC.i538
  %5945 = add i64 %5944, 2
  store i64 %5945, i64* %PC.i538
  %5946 = sub i32 %5940, %5942
  %5947 = icmp ult i32 %5940, %5942
  %5948 = zext i1 %5947 to i8
  %5949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5948, i8* %5949, align 1
  %5950 = and i32 %5946, 255
  %5951 = call i32 @llvm.ctpop.i32(i32 %5950)
  %5952 = trunc i32 %5951 to i8
  %5953 = and i8 %5952, 1
  %5954 = xor i8 %5953, 1
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5954, i8* %5955, align 1
  %5956 = xor i64 %5943, %5941
  %5957 = trunc i64 %5956 to i32
  %5958 = xor i32 %5957, %5946
  %5959 = lshr i32 %5958, 4
  %5960 = trunc i32 %5959 to i8
  %5961 = and i8 %5960, 1
  %5962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5961, i8* %5962, align 1
  %5963 = icmp eq i32 %5946, 0
  %5964 = zext i1 %5963 to i8
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5964, i8* %5965, align 1
  %5966 = lshr i32 %5946, 31
  %5967 = trunc i32 %5966 to i8
  %5968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5967, i8* %5968, align 1
  %5969 = lshr i32 %5940, 31
  %5970 = lshr i32 %5942, 31
  %5971 = xor i32 %5970, %5969
  %5972 = xor i32 %5966, %5969
  %5973 = add i32 %5972, %5971
  %5974 = icmp eq i32 %5973, 2
  %5975 = zext i1 %5974 to i8
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5975, i8* %5976, align 1
  store %struct.Memory* %loadMem_4027f9, %struct.Memory** %MEMORY
  %loadMem_4027fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 33
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %5979 to i64*
  %5980 = load i64, i64* %PC.i537
  %5981 = add i64 %5980, 23
  %5982 = load i64, i64* %PC.i537
  %5983 = add i64 %5982, 6
  %5984 = load i64, i64* %PC.i537
  %5985 = add i64 %5984, 6
  store i64 %5985, i64* %PC.i537
  %5986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5987 = load i8, i8* %5986, align 1
  %5988 = icmp ne i8 %5987, 0
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5990 = load i8, i8* %5989, align 1
  %5991 = icmp ne i8 %5990, 0
  %5992 = xor i1 %5988, %5991
  %5993 = xor i1 %5992, true
  %5994 = zext i1 %5993 to i8
  store i8 %5994, i8* %BRANCH_TAKEN, align 1
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5996 = select i1 %5992, i64 %5983, i64 %5981
  store i64 %5996, i64* %5995, align 8
  store %struct.Memory* %loadMem_4027fb, %struct.Memory** %MEMORY
  %loadBr_4027fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4027fb = icmp eq i8 %loadBr_4027fb, 1
  br i1 %cmpBr_4027fb, label %block_.L_402812, label %block_402801

block_402801:                                     ; preds = %block_.L_4027ed
  %loadMem_402801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5998 = getelementptr inbounds %struct.GPR, %struct.GPR* %5997, i32 0, i32 33
  %5999 = getelementptr inbounds %struct.Reg, %struct.Reg* %5998, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %5999 to i64*
  %6000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6001 = getelementptr inbounds %struct.GPR, %struct.GPR* %6000, i32 0, i32 1
  %6002 = getelementptr inbounds %struct.Reg, %struct.Reg* %6001, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %6002 to i64*
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6004 = getelementptr inbounds %struct.GPR, %struct.GPR* %6003, i32 0, i32 15
  %6005 = getelementptr inbounds %struct.Reg, %struct.Reg* %6004, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %6005 to i64*
  %6006 = load i64, i64* %RBP.i536
  %6007 = sub i64 %6006, 88
  %6008 = load i64, i64* %PC.i534
  %6009 = add i64 %6008, 3
  store i64 %6009, i64* %PC.i534
  %6010 = inttoptr i64 %6007 to i32*
  %6011 = load i32, i32* %6010
  %6012 = zext i32 %6011 to i64
  store i64 %6012, i64* %RAX.i535, align 8
  store %struct.Memory* %loadMem_402801, %struct.Memory** %MEMORY
  %loadMem_402804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6014 = getelementptr inbounds %struct.GPR, %struct.GPR* %6013, i32 0, i32 33
  %6015 = getelementptr inbounds %struct.Reg, %struct.Reg* %6014, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %6015 to i64*
  %6016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6017 = getelementptr inbounds %struct.GPR, %struct.GPR* %6016, i32 0, i32 1
  %6018 = getelementptr inbounds %struct.Reg, %struct.Reg* %6017, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %6018 to i64*
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6020 = getelementptr inbounds %struct.GPR, %struct.GPR* %6019, i32 0, i32 15
  %6021 = getelementptr inbounds %struct.Reg, %struct.Reg* %6020, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %6021 to i64*
  %6022 = load i64, i64* %RAX.i532
  %6023 = load i64, i64* %RBP.i533
  %6024 = sub i64 %6023, 64
  %6025 = load i64, i64* %PC.i531
  %6026 = add i64 %6025, 3
  store i64 %6026, i64* %PC.i531
  %6027 = trunc i64 %6022 to i32
  %6028 = inttoptr i64 %6024 to i32*
  %6029 = load i32, i32* %6028
  %6030 = sub i32 %6027, %6029
  %6031 = zext i32 %6030 to i64
  store i64 %6031, i64* %RAX.i532, align 8
  %6032 = icmp ult i32 %6027, %6029
  %6033 = zext i1 %6032 to i8
  %6034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6033, i8* %6034, align 1
  %6035 = and i32 %6030, 255
  %6036 = call i32 @llvm.ctpop.i32(i32 %6035)
  %6037 = trunc i32 %6036 to i8
  %6038 = and i8 %6037, 1
  %6039 = xor i8 %6038, 1
  %6040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6039, i8* %6040, align 1
  %6041 = xor i32 %6029, %6027
  %6042 = xor i32 %6041, %6030
  %6043 = lshr i32 %6042, 4
  %6044 = trunc i32 %6043 to i8
  %6045 = and i8 %6044, 1
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6045, i8* %6046, align 1
  %6047 = icmp eq i32 %6030, 0
  %6048 = zext i1 %6047 to i8
  %6049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6048, i8* %6049, align 1
  %6050 = lshr i32 %6030, 31
  %6051 = trunc i32 %6050 to i8
  %6052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6051, i8* %6052, align 1
  %6053 = lshr i32 %6027, 31
  %6054 = lshr i32 %6029, 31
  %6055 = xor i32 %6054, %6053
  %6056 = xor i32 %6050, %6053
  %6057 = add i32 %6056, %6055
  %6058 = icmp eq i32 %6057, 2
  %6059 = zext i1 %6058 to i8
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6059, i8* %6060, align 1
  store %struct.Memory* %loadMem_402804, %struct.Memory** %MEMORY
  %loadMem_402807 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 33
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %6063 to i64*
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 1
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %EAX.i529 = bitcast %union.anon* %6066 to i32*
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6068 = getelementptr inbounds %struct.GPR, %struct.GPR* %6067, i32 0, i32 15
  %6069 = getelementptr inbounds %struct.Reg, %struct.Reg* %6068, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %6069 to i64*
  %6070 = load i64, i64* %RBP.i530
  %6071 = sub i64 %6070, 1396
  %6072 = load i32, i32* %EAX.i529
  %6073 = zext i32 %6072 to i64
  %6074 = load i64, i64* %PC.i528
  %6075 = add i64 %6074, 6
  store i64 %6075, i64* %PC.i528
  %6076 = inttoptr i64 %6071 to i32*
  store i32 %6072, i32* %6076
  store %struct.Memory* %loadMem_402807, %struct.Memory** %MEMORY
  %loadMem_40280d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6078 = getelementptr inbounds %struct.GPR, %struct.GPR* %6077, i32 0, i32 33
  %6079 = getelementptr inbounds %struct.Reg, %struct.Reg* %6078, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %6079 to i64*
  %6080 = load i64, i64* %PC.i527
  %6081 = add i64 %6080, 17
  %6082 = load i64, i64* %PC.i527
  %6083 = add i64 %6082, 5
  store i64 %6083, i64* %PC.i527
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6081, i64* %6084, align 8
  store %struct.Memory* %loadMem_40280d, %struct.Memory** %MEMORY
  br label %block_.L_40281e

block_.L_402812:                                  ; preds = %block_.L_4027ed
  %loadMem_402812 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 33
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %6087 to i64*
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 1
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 15
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %6093 to i64*
  %6094 = load i64, i64* %RBP.i526
  %6095 = sub i64 %6094, 64
  %6096 = load i64, i64* %PC.i524
  %6097 = add i64 %6096, 3
  store i64 %6097, i64* %PC.i524
  %6098 = inttoptr i64 %6095 to i32*
  %6099 = load i32, i32* %6098
  %6100 = zext i32 %6099 to i64
  store i64 %6100, i64* %RAX.i525, align 8
  store %struct.Memory* %loadMem_402812, %struct.Memory** %MEMORY
  %loadMem_402815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6102 = getelementptr inbounds %struct.GPR, %struct.GPR* %6101, i32 0, i32 33
  %6103 = getelementptr inbounds %struct.Reg, %struct.Reg* %6102, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %6103 to i64*
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6105 = getelementptr inbounds %struct.GPR, %struct.GPR* %6104, i32 0, i32 1
  %6106 = getelementptr inbounds %struct.Reg, %struct.Reg* %6105, i32 0, i32 0
  %RAX.i522 = bitcast %union.anon* %6106 to i64*
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6108 = getelementptr inbounds %struct.GPR, %struct.GPR* %6107, i32 0, i32 15
  %6109 = getelementptr inbounds %struct.Reg, %struct.Reg* %6108, i32 0, i32 0
  %RBP.i523 = bitcast %union.anon* %6109 to i64*
  %6110 = load i64, i64* %RAX.i522
  %6111 = load i64, i64* %RBP.i523
  %6112 = sub i64 %6111, 56
  %6113 = load i64, i64* %PC.i521
  %6114 = add i64 %6113, 3
  store i64 %6114, i64* %PC.i521
  %6115 = trunc i64 %6110 to i32
  %6116 = inttoptr i64 %6112 to i32*
  %6117 = load i32, i32* %6116
  %6118 = sub i32 %6115, %6117
  %6119 = zext i32 %6118 to i64
  store i64 %6119, i64* %RAX.i522, align 8
  %6120 = icmp ult i32 %6115, %6117
  %6121 = zext i1 %6120 to i8
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6121, i8* %6122, align 1
  %6123 = and i32 %6118, 255
  %6124 = call i32 @llvm.ctpop.i32(i32 %6123)
  %6125 = trunc i32 %6124 to i8
  %6126 = and i8 %6125, 1
  %6127 = xor i8 %6126, 1
  %6128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6127, i8* %6128, align 1
  %6129 = xor i32 %6117, %6115
  %6130 = xor i32 %6129, %6118
  %6131 = lshr i32 %6130, 4
  %6132 = trunc i32 %6131 to i8
  %6133 = and i8 %6132, 1
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6133, i8* %6134, align 1
  %6135 = icmp eq i32 %6118, 0
  %6136 = zext i1 %6135 to i8
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6136, i8* %6137, align 1
  %6138 = lshr i32 %6118, 31
  %6139 = trunc i32 %6138 to i8
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6139, i8* %6140, align 1
  %6141 = lshr i32 %6115, 31
  %6142 = lshr i32 %6117, 31
  %6143 = xor i32 %6142, %6141
  %6144 = xor i32 %6138, %6141
  %6145 = add i32 %6144, %6143
  %6146 = icmp eq i32 %6145, 2
  %6147 = zext i1 %6146 to i8
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6147, i8* %6148, align 1
  store %struct.Memory* %loadMem_402815, %struct.Memory** %MEMORY
  %loadMem_402818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6150 = getelementptr inbounds %struct.GPR, %struct.GPR* %6149, i32 0, i32 33
  %6151 = getelementptr inbounds %struct.Reg, %struct.Reg* %6150, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %6151 to i64*
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6153 = getelementptr inbounds %struct.GPR, %struct.GPR* %6152, i32 0, i32 1
  %6154 = getelementptr inbounds %struct.Reg, %struct.Reg* %6153, i32 0, i32 0
  %EAX.i519 = bitcast %union.anon* %6154 to i32*
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6156 = getelementptr inbounds %struct.GPR, %struct.GPR* %6155, i32 0, i32 15
  %6157 = getelementptr inbounds %struct.Reg, %struct.Reg* %6156, i32 0, i32 0
  %RBP.i520 = bitcast %union.anon* %6157 to i64*
  %6158 = load i64, i64* %RBP.i520
  %6159 = sub i64 %6158, 1396
  %6160 = load i32, i32* %EAX.i519
  %6161 = zext i32 %6160 to i64
  %6162 = load i64, i64* %PC.i518
  %6163 = add i64 %6162, 6
  store i64 %6163, i64* %PC.i518
  %6164 = inttoptr i64 %6159 to i32*
  store i32 %6160, i32* %6164
  store %struct.Memory* %loadMem_402818, %struct.Memory** %MEMORY
  br label %block_.L_40281e

block_.L_40281e:                                  ; preds = %block_.L_402812, %block_402801
  %loadMem_40281e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6166 = getelementptr inbounds %struct.GPR, %struct.GPR* %6165, i32 0, i32 33
  %6167 = getelementptr inbounds %struct.Reg, %struct.Reg* %6166, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %6167 to i64*
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 1
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %RAX.i516 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 15
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %6173 to i64*
  %6174 = load i64, i64* %RBP.i517
  %6175 = sub i64 %6174, 1396
  %6176 = load i64, i64* %PC.i515
  %6177 = add i64 %6176, 6
  store i64 %6177, i64* %PC.i515
  %6178 = inttoptr i64 %6175 to i32*
  %6179 = load i32, i32* %6178
  %6180 = zext i32 %6179 to i64
  store i64 %6180, i64* %RAX.i516, align 8
  store %struct.Memory* %loadMem_40281e, %struct.Memory** %MEMORY
  %loadMem_402824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6182 = getelementptr inbounds %struct.GPR, %struct.GPR* %6181, i32 0, i32 33
  %6183 = getelementptr inbounds %struct.Reg, %struct.Reg* %6182, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %6183 to i64*
  %6184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6185 = getelementptr inbounds %struct.GPR, %struct.GPR* %6184, i32 0, i32 1
  %6186 = getelementptr inbounds %struct.Reg, %struct.Reg* %6185, i32 0, i32 0
  %EAX.i513 = bitcast %union.anon* %6186 to i32*
  %6187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6188 = getelementptr inbounds %struct.GPR, %struct.GPR* %6187, i32 0, i32 15
  %6189 = getelementptr inbounds %struct.Reg, %struct.Reg* %6188, i32 0, i32 0
  %RBP.i514 = bitcast %union.anon* %6189 to i64*
  %6190 = load i64, i64* %RBP.i514
  %6191 = sub i64 %6190, 72
  %6192 = load i32, i32* %EAX.i513
  %6193 = zext i32 %6192 to i64
  %6194 = load i64, i64* %PC.i512
  %6195 = add i64 %6194, 3
  store i64 %6195, i64* %PC.i512
  %6196 = inttoptr i64 %6191 to i32*
  store i32 %6192, i32* %6196
  store %struct.Memory* %loadMem_402824, %struct.Memory** %MEMORY
  %loadMem_402827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6198 = getelementptr inbounds %struct.GPR, %struct.GPR* %6197, i32 0, i32 33
  %6199 = getelementptr inbounds %struct.Reg, %struct.Reg* %6198, i32 0, i32 0
  %PC.i509 = bitcast %union.anon* %6199 to i64*
  %6200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6201 = getelementptr inbounds %struct.GPR, %struct.GPR* %6200, i32 0, i32 1
  %6202 = getelementptr inbounds %struct.Reg, %struct.Reg* %6201, i32 0, i32 0
  %RAX.i510 = bitcast %union.anon* %6202 to i64*
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 15
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %RBP.i511 = bitcast %union.anon* %6205 to i64*
  %6206 = load i64, i64* %RBP.i511
  %6207 = sub i64 %6206, 52
  %6208 = load i64, i64* %PC.i509
  %6209 = add i64 %6208, 3
  store i64 %6209, i64* %PC.i509
  %6210 = inttoptr i64 %6207 to i32*
  %6211 = load i32, i32* %6210
  %6212 = zext i32 %6211 to i64
  store i64 %6212, i64* %RAX.i510, align 8
  store %struct.Memory* %loadMem_402827, %struct.Memory** %MEMORY
  %loadMem_40282a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6214 = getelementptr inbounds %struct.GPR, %struct.GPR* %6213, i32 0, i32 33
  %6215 = getelementptr inbounds %struct.Reg, %struct.Reg* %6214, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %6215 to i64*
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6217 = getelementptr inbounds %struct.GPR, %struct.GPR* %6216, i32 0, i32 1
  %6218 = getelementptr inbounds %struct.Reg, %struct.Reg* %6217, i32 0, i32 0
  %EAX.i507 = bitcast %union.anon* %6218 to i32*
  %6219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6220 = getelementptr inbounds %struct.GPR, %struct.GPR* %6219, i32 0, i32 15
  %6221 = getelementptr inbounds %struct.Reg, %struct.Reg* %6220, i32 0, i32 0
  %RBP.i508 = bitcast %union.anon* %6221 to i64*
  %6222 = load i64, i64* %RBP.i508
  %6223 = sub i64 %6222, 1364
  %6224 = load i32, i32* %EAX.i507
  %6225 = zext i32 %6224 to i64
  %6226 = load i64, i64* %PC.i506
  %6227 = add i64 %6226, 6
  store i64 %6227, i64* %PC.i506
  %6228 = inttoptr i64 %6223 to i32*
  store i32 %6224, i32* %6228
  store %struct.Memory* %loadMem_40282a, %struct.Memory** %MEMORY
  %loadMem_402830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6230 = getelementptr inbounds %struct.GPR, %struct.GPR* %6229, i32 0, i32 33
  %6231 = getelementptr inbounds %struct.Reg, %struct.Reg* %6230, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %6231 to i64*
  %6232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6233 = getelementptr inbounds %struct.GPR, %struct.GPR* %6232, i32 0, i32 1
  %6234 = getelementptr inbounds %struct.Reg, %struct.Reg* %6233, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %6234 to i64*
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6236 = getelementptr inbounds %struct.GPR, %struct.GPR* %6235, i32 0, i32 15
  %6237 = getelementptr inbounds %struct.Reg, %struct.Reg* %6236, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %6237 to i64*
  %6238 = load i64, i64* %RBP.i505
  %6239 = sub i64 %6238, 88
  %6240 = load i64, i64* %PC.i503
  %6241 = add i64 %6240, 3
  store i64 %6241, i64* %PC.i503
  %6242 = inttoptr i64 %6239 to i32*
  %6243 = load i32, i32* %6242
  %6244 = zext i32 %6243 to i64
  store i64 %6244, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_402830, %struct.Memory** %MEMORY
  %loadMem_402833 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6246 = getelementptr inbounds %struct.GPR, %struct.GPR* %6245, i32 0, i32 33
  %6247 = getelementptr inbounds %struct.Reg, %struct.Reg* %6246, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %6247 to i64*
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6249 = getelementptr inbounds %struct.GPR, %struct.GPR* %6248, i32 0, i32 1
  %6250 = getelementptr inbounds %struct.Reg, %struct.Reg* %6249, i32 0, i32 0
  %RAX.i501 = bitcast %union.anon* %6250 to i64*
  %6251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6252 = getelementptr inbounds %struct.GPR, %struct.GPR* %6251, i32 0, i32 15
  %6253 = getelementptr inbounds %struct.Reg, %struct.Reg* %6252, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %6253 to i64*
  %6254 = load i64, i64* %RAX.i501
  %6255 = load i64, i64* %RBP.i502
  %6256 = sub i64 %6255, 72
  %6257 = load i64, i64* %PC.i500
  %6258 = add i64 %6257, 3
  store i64 %6258, i64* %PC.i500
  %6259 = trunc i64 %6254 to i32
  %6260 = inttoptr i64 %6256 to i32*
  %6261 = load i32, i32* %6260
  %6262 = sub i32 %6259, %6261
  %6263 = zext i32 %6262 to i64
  store i64 %6263, i64* %RAX.i501, align 8
  %6264 = icmp ult i32 %6259, %6261
  %6265 = zext i1 %6264 to i8
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6265, i8* %6266, align 1
  %6267 = and i32 %6262, 255
  %6268 = call i32 @llvm.ctpop.i32(i32 %6267)
  %6269 = trunc i32 %6268 to i8
  %6270 = and i8 %6269, 1
  %6271 = xor i8 %6270, 1
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6271, i8* %6272, align 1
  %6273 = xor i32 %6261, %6259
  %6274 = xor i32 %6273, %6262
  %6275 = lshr i32 %6274, 4
  %6276 = trunc i32 %6275 to i8
  %6277 = and i8 %6276, 1
  %6278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6277, i8* %6278, align 1
  %6279 = icmp eq i32 %6262, 0
  %6280 = zext i1 %6279 to i8
  %6281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6280, i8* %6281, align 1
  %6282 = lshr i32 %6262, 31
  %6283 = trunc i32 %6282 to i8
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6283, i8* %6284, align 1
  %6285 = lshr i32 %6259, 31
  %6286 = lshr i32 %6261, 31
  %6287 = xor i32 %6286, %6285
  %6288 = xor i32 %6282, %6285
  %6289 = add i32 %6288, %6287
  %6290 = icmp eq i32 %6289, 2
  %6291 = zext i1 %6290 to i8
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6291, i8* %6292, align 1
  store %struct.Memory* %loadMem_402833, %struct.Memory** %MEMORY
  %loadMem_402836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6294 = getelementptr inbounds %struct.GPR, %struct.GPR* %6293, i32 0, i32 33
  %6295 = getelementptr inbounds %struct.Reg, %struct.Reg* %6294, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6295 to i64*
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 1
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %RAX.i499 = bitcast %union.anon* %6298 to i64*
  %6299 = load i64, i64* %RAX.i499
  %6300 = load i64, i64* %PC.i498
  %6301 = add i64 %6300, 3
  store i64 %6301, i64* %PC.i498
  %6302 = trunc i64 %6299 to i32
  %6303 = add i32 1, %6302
  %6304 = zext i32 %6303 to i64
  store i64 %6304, i64* %RAX.i499, align 8
  %6305 = icmp ult i32 %6303, %6302
  %6306 = icmp ult i32 %6303, 1
  %6307 = or i1 %6305, %6306
  %6308 = zext i1 %6307 to i8
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6308, i8* %6309, align 1
  %6310 = and i32 %6303, 255
  %6311 = call i32 @llvm.ctpop.i32(i32 %6310)
  %6312 = trunc i32 %6311 to i8
  %6313 = and i8 %6312, 1
  %6314 = xor i8 %6313, 1
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6314, i8* %6315, align 1
  %6316 = xor i64 1, %6299
  %6317 = trunc i64 %6316 to i32
  %6318 = xor i32 %6317, %6303
  %6319 = lshr i32 %6318, 4
  %6320 = trunc i32 %6319 to i8
  %6321 = and i8 %6320, 1
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6321, i8* %6322, align 1
  %6323 = icmp eq i32 %6303, 0
  %6324 = zext i1 %6323 to i8
  %6325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6324, i8* %6325, align 1
  %6326 = lshr i32 %6303, 31
  %6327 = trunc i32 %6326 to i8
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6327, i8* %6328, align 1
  %6329 = lshr i32 %6302, 31
  %6330 = xor i32 %6326, %6329
  %6331 = add i32 %6330, %6326
  %6332 = icmp eq i32 %6331, 2
  %6333 = zext i1 %6332 to i8
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6333, i8* %6334, align 1
  store %struct.Memory* %loadMem_402836, %struct.Memory** %MEMORY
  %loadMem_402839 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6336 = getelementptr inbounds %struct.GPR, %struct.GPR* %6335, i32 0, i32 33
  %6337 = getelementptr inbounds %struct.Reg, %struct.Reg* %6336, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6337 to i64*
  %6338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6339 = getelementptr inbounds %struct.GPR, %struct.GPR* %6338, i32 0, i32 1
  %6340 = getelementptr inbounds %struct.Reg, %struct.Reg* %6339, i32 0, i32 0
  %EAX.i496 = bitcast %union.anon* %6340 to i32*
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 15
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %6343 to i64*
  %6344 = load i64, i64* %RBP.i497
  %6345 = sub i64 %6344, 1368
  %6346 = load i32, i32* %EAX.i496
  %6347 = zext i32 %6346 to i64
  %6348 = load i64, i64* %PC.i495
  %6349 = add i64 %6348, 6
  store i64 %6349, i64* %PC.i495
  %6350 = inttoptr i64 %6345 to i32*
  store i32 %6346, i32* %6350
  store %struct.Memory* %loadMem_402839, %struct.Memory** %MEMORY
  %loadMem_40283f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6352 = getelementptr inbounds %struct.GPR, %struct.GPR* %6351, i32 0, i32 33
  %6353 = getelementptr inbounds %struct.Reg, %struct.Reg* %6352, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6353 to i64*
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 1
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6358 = getelementptr inbounds %struct.GPR, %struct.GPR* %6357, i32 0, i32 15
  %6359 = getelementptr inbounds %struct.Reg, %struct.Reg* %6358, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %6359 to i64*
  %6360 = load i64, i64* %RBP.i494
  %6361 = sub i64 %6360, 72
  %6362 = load i64, i64* %PC.i492
  %6363 = add i64 %6362, 3
  store i64 %6363, i64* %PC.i492
  %6364 = inttoptr i64 %6361 to i32*
  %6365 = load i32, i32* %6364
  %6366 = zext i32 %6365 to i64
  store i64 %6366, i64* %RAX.i493, align 8
  store %struct.Memory* %loadMem_40283f, %struct.Memory** %MEMORY
  %loadMem_402842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 33
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6369 to i64*
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6371 = getelementptr inbounds %struct.GPR, %struct.GPR* %6370, i32 0, i32 1
  %6372 = getelementptr inbounds %struct.Reg, %struct.Reg* %6371, i32 0, i32 0
  %EAX.i490 = bitcast %union.anon* %6372 to i32*
  %6373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6374 = getelementptr inbounds %struct.GPR, %struct.GPR* %6373, i32 0, i32 15
  %6375 = getelementptr inbounds %struct.Reg, %struct.Reg* %6374, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %6375 to i64*
  %6376 = load i64, i64* %RBP.i491
  %6377 = sub i64 %6376, 1372
  %6378 = load i32, i32* %EAX.i490
  %6379 = zext i32 %6378 to i64
  %6380 = load i64, i64* %PC.i489
  %6381 = add i64 %6380, 6
  store i64 %6381, i64* %PC.i489
  %6382 = inttoptr i64 %6377 to i32*
  store i32 %6378, i32* %6382
  store %struct.Memory* %loadMem_402842, %struct.Memory** %MEMORY
  br label %block_.L_402848

block_.L_402848:                                  ; preds = %block_402855, %block_.L_40281e
  %loadMem_402848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 33
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %PC.i487 = bitcast %union.anon* %6385 to i64*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 15
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %RBP.i488 = bitcast %union.anon* %6388 to i64*
  %6389 = load i64, i64* %RBP.i488
  %6390 = sub i64 %6389, 1372
  %6391 = load i64, i64* %PC.i487
  %6392 = add i64 %6391, 7
  store i64 %6392, i64* %PC.i487
  %6393 = inttoptr i64 %6390 to i32*
  %6394 = load i32, i32* %6393
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6395, align 1
  %6396 = and i32 %6394, 255
  %6397 = call i32 @llvm.ctpop.i32(i32 %6396)
  %6398 = trunc i32 %6397 to i8
  %6399 = and i8 %6398, 1
  %6400 = xor i8 %6399, 1
  %6401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6400, i8* %6401, align 1
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6402, align 1
  %6403 = icmp eq i32 %6394, 0
  %6404 = zext i1 %6403 to i8
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6404, i8* %6405, align 1
  %6406 = lshr i32 %6394, 31
  %6407 = trunc i32 %6406 to i8
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6407, i8* %6408, align 1
  %6409 = lshr i32 %6394, 31
  %6410 = xor i32 %6406, %6409
  %6411 = add i32 %6410, %6409
  %6412 = icmp eq i32 %6411, 2
  %6413 = zext i1 %6412 to i8
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6413, i8* %6414, align 1
  store %struct.Memory* %loadMem_402848, %struct.Memory** %MEMORY
  %loadMem_40284f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6416 = getelementptr inbounds %struct.GPR, %struct.GPR* %6415, i32 0, i32 33
  %6417 = getelementptr inbounds %struct.Reg, %struct.Reg* %6416, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6417 to i64*
  %6418 = load i64, i64* %PC.i486
  %6419 = add i64 %6418, 124
  %6420 = load i64, i64* %PC.i486
  %6421 = add i64 %6420, 6
  %6422 = load i64, i64* %PC.i486
  %6423 = add i64 %6422, 6
  store i64 %6423, i64* %PC.i486
  %6424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6425 = load i8, i8* %6424, align 1
  %6426 = icmp ne i8 %6425, 0
  %6427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6428 = load i8, i8* %6427, align 1
  %6429 = icmp ne i8 %6428, 0
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6431 = load i8, i8* %6430, align 1
  %6432 = icmp ne i8 %6431, 0
  %6433 = xor i1 %6429, %6432
  %6434 = or i1 %6426, %6433
  %6435 = zext i1 %6434 to i8
  store i8 %6435, i8* %BRANCH_TAKEN, align 1
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6437 = select i1 %6434, i64 %6419, i64 %6421
  store i64 %6437, i64* %6436, align 8
  store %struct.Memory* %loadMem_40284f, %struct.Memory** %MEMORY
  %loadBr_40284f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40284f = icmp eq i8 %loadBr_40284f, 1
  br i1 %cmpBr_40284f, label %block_.L_4028cb, label %block_402855

block_402855:                                     ; preds = %block_.L_402848
  %loadMem_402855 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6439 = getelementptr inbounds %struct.GPR, %struct.GPR* %6438, i32 0, i32 33
  %6440 = getelementptr inbounds %struct.Reg, %struct.Reg* %6439, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6440 to i64*
  %6441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6442 = getelementptr inbounds %struct.GPR, %struct.GPR* %6441, i32 0, i32 1
  %6443 = getelementptr inbounds %struct.Reg, %struct.Reg* %6442, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %6443 to i64*
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 15
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %6446 to i64*
  %6447 = load i64, i64* %RBP.i485
  %6448 = sub i64 %6447, 8
  %6449 = load i64, i64* %PC.i483
  %6450 = add i64 %6449, 4
  store i64 %6450, i64* %PC.i483
  %6451 = inttoptr i64 %6448 to i64*
  %6452 = load i64, i64* %6451
  store i64 %6452, i64* %RAX.i484, align 8
  store %struct.Memory* %loadMem_402855, %struct.Memory** %MEMORY
  %loadMem_402859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6454 = getelementptr inbounds %struct.GPR, %struct.GPR* %6453, i32 0, i32 33
  %6455 = getelementptr inbounds %struct.Reg, %struct.Reg* %6454, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6455 to i64*
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6457 = getelementptr inbounds %struct.GPR, %struct.GPR* %6456, i32 0, i32 5
  %6458 = getelementptr inbounds %struct.Reg, %struct.Reg* %6457, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %6458 to i64*
  %6459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6460 = getelementptr inbounds %struct.GPR, %struct.GPR* %6459, i32 0, i32 15
  %6461 = getelementptr inbounds %struct.Reg, %struct.Reg* %6460, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %6461 to i64*
  %6462 = load i64, i64* %RBP.i482
  %6463 = sub i64 %6462, 1364
  %6464 = load i64, i64* %PC.i480
  %6465 = add i64 %6464, 7
  store i64 %6465, i64* %PC.i480
  %6466 = inttoptr i64 %6463 to i32*
  %6467 = load i32, i32* %6466
  %6468 = sext i32 %6467 to i64
  store i64 %6468, i64* %RCX.i481, align 8
  store %struct.Memory* %loadMem_402859, %struct.Memory** %MEMORY
  %loadMem_402860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6470 = getelementptr inbounds %struct.GPR, %struct.GPR* %6469, i32 0, i32 33
  %6471 = getelementptr inbounds %struct.Reg, %struct.Reg* %6470, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %6471 to i64*
  %6472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6473 = getelementptr inbounds %struct.GPR, %struct.GPR* %6472, i32 0, i32 1
  %6474 = getelementptr inbounds %struct.Reg, %struct.Reg* %6473, i32 0, i32 0
  %RAX.i477 = bitcast %union.anon* %6474 to i64*
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6476 = getelementptr inbounds %struct.GPR, %struct.GPR* %6475, i32 0, i32 5
  %6477 = getelementptr inbounds %struct.Reg, %struct.Reg* %6476, i32 0, i32 0
  %RCX.i478 = bitcast %union.anon* %6477 to i64*
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6479 = getelementptr inbounds %struct.GPR, %struct.GPR* %6478, i32 0, i32 7
  %6480 = getelementptr inbounds %struct.Reg, %struct.Reg* %6479, i32 0, i32 0
  %RDX.i479 = bitcast %union.anon* %6480 to i64*
  %6481 = load i64, i64* %RAX.i477
  %6482 = load i64, i64* %RCX.i478
  %6483 = mul i64 %6482, 4
  %6484 = add i64 %6483, %6481
  %6485 = load i64, i64* %PC.i476
  %6486 = add i64 %6485, 3
  store i64 %6486, i64* %PC.i476
  %6487 = inttoptr i64 %6484 to i32*
  %6488 = load i32, i32* %6487
  %6489 = zext i32 %6488 to i64
  store i64 %6489, i64* %RDX.i479, align 8
  store %struct.Memory* %loadMem_402860, %struct.Memory** %MEMORY
  %loadMem_402863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6491 = getelementptr inbounds %struct.GPR, %struct.GPR* %6490, i32 0, i32 33
  %6492 = getelementptr inbounds %struct.Reg, %struct.Reg* %6491, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %6492 to i64*
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6494 = getelementptr inbounds %struct.GPR, %struct.GPR* %6493, i32 0, i32 7
  %6495 = getelementptr inbounds %struct.Reg, %struct.Reg* %6494, i32 0, i32 0
  %EDX.i474 = bitcast %union.anon* %6495 to i32*
  %6496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6497 = getelementptr inbounds %struct.GPR, %struct.GPR* %6496, i32 0, i32 15
  %6498 = getelementptr inbounds %struct.Reg, %struct.Reg* %6497, i32 0, i32 0
  %RBP.i475 = bitcast %union.anon* %6498 to i64*
  %6499 = load i64, i64* %RBP.i475
  %6500 = sub i64 %6499, 1376
  %6501 = load i32, i32* %EDX.i474
  %6502 = zext i32 %6501 to i64
  %6503 = load i64, i64* %PC.i473
  %6504 = add i64 %6503, 6
  store i64 %6504, i64* %PC.i473
  %6505 = inttoptr i64 %6500 to i32*
  store i32 %6501, i32* %6505
  store %struct.Memory* %loadMem_402863, %struct.Memory** %MEMORY
  %loadMem_402869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 33
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %6508 to i64*
  %6509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6510 = getelementptr inbounds %struct.GPR, %struct.GPR* %6509, i32 0, i32 1
  %6511 = getelementptr inbounds %struct.Reg, %struct.Reg* %6510, i32 0, i32 0
  %RAX.i471 = bitcast %union.anon* %6511 to i64*
  %6512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6513 = getelementptr inbounds %struct.GPR, %struct.GPR* %6512, i32 0, i32 15
  %6514 = getelementptr inbounds %struct.Reg, %struct.Reg* %6513, i32 0, i32 0
  %RBP.i472 = bitcast %union.anon* %6514 to i64*
  %6515 = load i64, i64* %RBP.i472
  %6516 = sub i64 %6515, 8
  %6517 = load i64, i64* %PC.i470
  %6518 = add i64 %6517, 4
  store i64 %6518, i64* %PC.i470
  %6519 = inttoptr i64 %6516 to i64*
  %6520 = load i64, i64* %6519
  store i64 %6520, i64* %RAX.i471, align 8
  store %struct.Memory* %loadMem_402869, %struct.Memory** %MEMORY
  %loadMem_40286d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6522 = getelementptr inbounds %struct.GPR, %struct.GPR* %6521, i32 0, i32 33
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %6523 to i64*
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6525 = getelementptr inbounds %struct.GPR, %struct.GPR* %6524, i32 0, i32 5
  %6526 = getelementptr inbounds %struct.Reg, %struct.Reg* %6525, i32 0, i32 0
  %RCX.i468 = bitcast %union.anon* %6526 to i64*
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6528 = getelementptr inbounds %struct.GPR, %struct.GPR* %6527, i32 0, i32 15
  %6529 = getelementptr inbounds %struct.Reg, %struct.Reg* %6528, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %6529 to i64*
  %6530 = load i64, i64* %RBP.i469
  %6531 = sub i64 %6530, 1368
  %6532 = load i64, i64* %PC.i467
  %6533 = add i64 %6532, 7
  store i64 %6533, i64* %PC.i467
  %6534 = inttoptr i64 %6531 to i32*
  %6535 = load i32, i32* %6534
  %6536 = sext i32 %6535 to i64
  store i64 %6536, i64* %RCX.i468, align 8
  store %struct.Memory* %loadMem_40286d, %struct.Memory** %MEMORY
  %loadMem_402874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6538 = getelementptr inbounds %struct.GPR, %struct.GPR* %6537, i32 0, i32 33
  %6539 = getelementptr inbounds %struct.Reg, %struct.Reg* %6538, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6539 to i64*
  %6540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6541 = getelementptr inbounds %struct.GPR, %struct.GPR* %6540, i32 0, i32 1
  %6542 = getelementptr inbounds %struct.Reg, %struct.Reg* %6541, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %6542 to i64*
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6544 = getelementptr inbounds %struct.GPR, %struct.GPR* %6543, i32 0, i32 5
  %6545 = getelementptr inbounds %struct.Reg, %struct.Reg* %6544, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %6545 to i64*
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 7
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %RDX.i466 = bitcast %union.anon* %6548 to i64*
  %6549 = load i64, i64* %RAX.i464
  %6550 = load i64, i64* %RCX.i465
  %6551 = mul i64 %6550, 4
  %6552 = add i64 %6551, %6549
  %6553 = load i64, i64* %PC.i463
  %6554 = add i64 %6553, 3
  store i64 %6554, i64* %PC.i463
  %6555 = inttoptr i64 %6552 to i32*
  %6556 = load i32, i32* %6555
  %6557 = zext i32 %6556 to i64
  store i64 %6557, i64* %RDX.i466, align 8
  store %struct.Memory* %loadMem_402874, %struct.Memory** %MEMORY
  %loadMem_402877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6559 = getelementptr inbounds %struct.GPR, %struct.GPR* %6558, i32 0, i32 33
  %6560 = getelementptr inbounds %struct.Reg, %struct.Reg* %6559, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6560 to i64*
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6562 = getelementptr inbounds %struct.GPR, %struct.GPR* %6561, i32 0, i32 1
  %6563 = getelementptr inbounds %struct.Reg, %struct.Reg* %6562, i32 0, i32 0
  %RAX.i461 = bitcast %union.anon* %6563 to i64*
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6565 = getelementptr inbounds %struct.GPR, %struct.GPR* %6564, i32 0, i32 15
  %6566 = getelementptr inbounds %struct.Reg, %struct.Reg* %6565, i32 0, i32 0
  %RBP.i462 = bitcast %union.anon* %6566 to i64*
  %6567 = load i64, i64* %RBP.i462
  %6568 = sub i64 %6567, 8
  %6569 = load i64, i64* %PC.i460
  %6570 = add i64 %6569, 4
  store i64 %6570, i64* %PC.i460
  %6571 = inttoptr i64 %6568 to i64*
  %6572 = load i64, i64* %6571
  store i64 %6572, i64* %RAX.i461, align 8
  store %struct.Memory* %loadMem_402877, %struct.Memory** %MEMORY
  %loadMem_40287b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6574 = getelementptr inbounds %struct.GPR, %struct.GPR* %6573, i32 0, i32 33
  %6575 = getelementptr inbounds %struct.Reg, %struct.Reg* %6574, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %6575 to i64*
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6577 = getelementptr inbounds %struct.GPR, %struct.GPR* %6576, i32 0, i32 5
  %6578 = getelementptr inbounds %struct.Reg, %struct.Reg* %6577, i32 0, i32 0
  %RCX.i458 = bitcast %union.anon* %6578 to i64*
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6580 = getelementptr inbounds %struct.GPR, %struct.GPR* %6579, i32 0, i32 15
  %6581 = getelementptr inbounds %struct.Reg, %struct.Reg* %6580, i32 0, i32 0
  %RBP.i459 = bitcast %union.anon* %6581 to i64*
  %6582 = load i64, i64* %RBP.i459
  %6583 = sub i64 %6582, 1364
  %6584 = load i64, i64* %PC.i457
  %6585 = add i64 %6584, 7
  store i64 %6585, i64* %PC.i457
  %6586 = inttoptr i64 %6583 to i32*
  %6587 = load i32, i32* %6586
  %6588 = sext i32 %6587 to i64
  store i64 %6588, i64* %RCX.i458, align 8
  store %struct.Memory* %loadMem_40287b, %struct.Memory** %MEMORY
  %loadMem_402882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6590 = getelementptr inbounds %struct.GPR, %struct.GPR* %6589, i32 0, i32 33
  %6591 = getelementptr inbounds %struct.Reg, %struct.Reg* %6590, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %6591 to i64*
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6593 = getelementptr inbounds %struct.GPR, %struct.GPR* %6592, i32 0, i32 7
  %6594 = getelementptr inbounds %struct.Reg, %struct.Reg* %6593, i32 0, i32 0
  %EDX.i454 = bitcast %union.anon* %6594 to i32*
  %6595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6596 = getelementptr inbounds %struct.GPR, %struct.GPR* %6595, i32 0, i32 1
  %6597 = getelementptr inbounds %struct.Reg, %struct.Reg* %6596, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %6597 to i64*
  %6598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6599 = getelementptr inbounds %struct.GPR, %struct.GPR* %6598, i32 0, i32 5
  %6600 = getelementptr inbounds %struct.Reg, %struct.Reg* %6599, i32 0, i32 0
  %RCX.i456 = bitcast %union.anon* %6600 to i64*
  %6601 = load i64, i64* %RAX.i455
  %6602 = load i64, i64* %RCX.i456
  %6603 = mul i64 %6602, 4
  %6604 = add i64 %6603, %6601
  %6605 = load i32, i32* %EDX.i454
  %6606 = zext i32 %6605 to i64
  %6607 = load i64, i64* %PC.i453
  %6608 = add i64 %6607, 3
  store i64 %6608, i64* %PC.i453
  %6609 = inttoptr i64 %6604 to i32*
  store i32 %6605, i32* %6609
  store %struct.Memory* %loadMem_402882, %struct.Memory** %MEMORY
  %loadMem_402885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 33
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6612 to i64*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 7
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %RDX.i451 = bitcast %union.anon* %6615 to i64*
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 15
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %6618 to i64*
  %6619 = load i64, i64* %RBP.i452
  %6620 = sub i64 %6619, 1376
  %6621 = load i64, i64* %PC.i450
  %6622 = add i64 %6621, 6
  store i64 %6622, i64* %PC.i450
  %6623 = inttoptr i64 %6620 to i32*
  %6624 = load i32, i32* %6623
  %6625 = zext i32 %6624 to i64
  store i64 %6625, i64* %RDX.i451, align 8
  store %struct.Memory* %loadMem_402885, %struct.Memory** %MEMORY
  %loadMem_40288b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6627 = getelementptr inbounds %struct.GPR, %struct.GPR* %6626, i32 0, i32 33
  %6628 = getelementptr inbounds %struct.Reg, %struct.Reg* %6627, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6628 to i64*
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6630 = getelementptr inbounds %struct.GPR, %struct.GPR* %6629, i32 0, i32 1
  %6631 = getelementptr inbounds %struct.Reg, %struct.Reg* %6630, i32 0, i32 0
  %RAX.i448 = bitcast %union.anon* %6631 to i64*
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 15
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %6634 to i64*
  %6635 = load i64, i64* %RBP.i449
  %6636 = sub i64 %6635, 8
  %6637 = load i64, i64* %PC.i447
  %6638 = add i64 %6637, 4
  store i64 %6638, i64* %PC.i447
  %6639 = inttoptr i64 %6636 to i64*
  %6640 = load i64, i64* %6639
  store i64 %6640, i64* %RAX.i448, align 8
  store %struct.Memory* %loadMem_40288b, %struct.Memory** %MEMORY
  %loadMem_40288f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6642 = getelementptr inbounds %struct.GPR, %struct.GPR* %6641, i32 0, i32 33
  %6643 = getelementptr inbounds %struct.Reg, %struct.Reg* %6642, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6643 to i64*
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 5
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %RCX.i445 = bitcast %union.anon* %6646 to i64*
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6648 = getelementptr inbounds %struct.GPR, %struct.GPR* %6647, i32 0, i32 15
  %6649 = getelementptr inbounds %struct.Reg, %struct.Reg* %6648, i32 0, i32 0
  %RBP.i446 = bitcast %union.anon* %6649 to i64*
  %6650 = load i64, i64* %RBP.i446
  %6651 = sub i64 %6650, 1368
  %6652 = load i64, i64* %PC.i444
  %6653 = add i64 %6652, 7
  store i64 %6653, i64* %PC.i444
  %6654 = inttoptr i64 %6651 to i32*
  %6655 = load i32, i32* %6654
  %6656 = sext i32 %6655 to i64
  store i64 %6656, i64* %RCX.i445, align 8
  store %struct.Memory* %loadMem_40288f, %struct.Memory** %MEMORY
  %loadMem_402896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 33
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %6659 to i64*
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 7
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %EDX.i441 = bitcast %union.anon* %6662 to i32*
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6664 = getelementptr inbounds %struct.GPR, %struct.GPR* %6663, i32 0, i32 1
  %6665 = getelementptr inbounds %struct.Reg, %struct.Reg* %6664, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %6665 to i64*
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 5
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %RCX.i443 = bitcast %union.anon* %6668 to i64*
  %6669 = load i64, i64* %RAX.i442
  %6670 = load i64, i64* %RCX.i443
  %6671 = mul i64 %6670, 4
  %6672 = add i64 %6671, %6669
  %6673 = load i32, i32* %EDX.i441
  %6674 = zext i32 %6673 to i64
  %6675 = load i64, i64* %PC.i440
  %6676 = add i64 %6675, 3
  store i64 %6676, i64* %PC.i440
  %6677 = inttoptr i64 %6672 to i32*
  store i32 %6673, i32* %6677
  store %struct.Memory* %loadMem_402896, %struct.Memory** %MEMORY
  %loadMem_402899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6679 = getelementptr inbounds %struct.GPR, %struct.GPR* %6678, i32 0, i32 33
  %6680 = getelementptr inbounds %struct.Reg, %struct.Reg* %6679, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %6680 to i64*
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6682 = getelementptr inbounds %struct.GPR, %struct.GPR* %6681, i32 0, i32 7
  %6683 = getelementptr inbounds %struct.Reg, %struct.Reg* %6682, i32 0, i32 0
  %RDX.i438 = bitcast %union.anon* %6683 to i64*
  %6684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6685 = getelementptr inbounds %struct.GPR, %struct.GPR* %6684, i32 0, i32 15
  %6686 = getelementptr inbounds %struct.Reg, %struct.Reg* %6685, i32 0, i32 0
  %RBP.i439 = bitcast %union.anon* %6686 to i64*
  %6687 = load i64, i64* %RBP.i439
  %6688 = sub i64 %6687, 1364
  %6689 = load i64, i64* %PC.i437
  %6690 = add i64 %6689, 6
  store i64 %6690, i64* %PC.i437
  %6691 = inttoptr i64 %6688 to i32*
  %6692 = load i32, i32* %6691
  %6693 = zext i32 %6692 to i64
  store i64 %6693, i64* %RDX.i438, align 8
  store %struct.Memory* %loadMem_402899, %struct.Memory** %MEMORY
  %loadMem_40289f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6695 = getelementptr inbounds %struct.GPR, %struct.GPR* %6694, i32 0, i32 33
  %6696 = getelementptr inbounds %struct.Reg, %struct.Reg* %6695, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6696 to i64*
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6698 = getelementptr inbounds %struct.GPR, %struct.GPR* %6697, i32 0, i32 7
  %6699 = getelementptr inbounds %struct.Reg, %struct.Reg* %6698, i32 0, i32 0
  %RDX.i436 = bitcast %union.anon* %6699 to i64*
  %6700 = load i64, i64* %RDX.i436
  %6701 = load i64, i64* %PC.i435
  %6702 = add i64 %6701, 3
  store i64 %6702, i64* %PC.i435
  %6703 = trunc i64 %6700 to i32
  %6704 = add i32 1, %6703
  %6705 = zext i32 %6704 to i64
  store i64 %6705, i64* %RDX.i436, align 8
  %6706 = icmp ult i32 %6704, %6703
  %6707 = icmp ult i32 %6704, 1
  %6708 = or i1 %6706, %6707
  %6709 = zext i1 %6708 to i8
  %6710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6709, i8* %6710, align 1
  %6711 = and i32 %6704, 255
  %6712 = call i32 @llvm.ctpop.i32(i32 %6711)
  %6713 = trunc i32 %6712 to i8
  %6714 = and i8 %6713, 1
  %6715 = xor i8 %6714, 1
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6715, i8* %6716, align 1
  %6717 = xor i64 1, %6700
  %6718 = trunc i64 %6717 to i32
  %6719 = xor i32 %6718, %6704
  %6720 = lshr i32 %6719, 4
  %6721 = trunc i32 %6720 to i8
  %6722 = and i8 %6721, 1
  %6723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6722, i8* %6723, align 1
  %6724 = icmp eq i32 %6704, 0
  %6725 = zext i1 %6724 to i8
  %6726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6725, i8* %6726, align 1
  %6727 = lshr i32 %6704, 31
  %6728 = trunc i32 %6727 to i8
  %6729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6728, i8* %6729, align 1
  %6730 = lshr i32 %6703, 31
  %6731 = xor i32 %6727, %6730
  %6732 = add i32 %6731, %6727
  %6733 = icmp eq i32 %6732, 2
  %6734 = zext i1 %6733 to i8
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6734, i8* %6735, align 1
  store %struct.Memory* %loadMem_40289f, %struct.Memory** %MEMORY
  %loadMem_4028a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 33
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %6738 to i64*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 7
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %EDX.i433 = bitcast %union.anon* %6741 to i32*
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6743 = getelementptr inbounds %struct.GPR, %struct.GPR* %6742, i32 0, i32 15
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %6744 to i64*
  %6745 = load i64, i64* %RBP.i434
  %6746 = sub i64 %6745, 1364
  %6747 = load i32, i32* %EDX.i433
  %6748 = zext i32 %6747 to i64
  %6749 = load i64, i64* %PC.i432
  %6750 = add i64 %6749, 6
  store i64 %6750, i64* %PC.i432
  %6751 = inttoptr i64 %6746 to i32*
  store i32 %6747, i32* %6751
  store %struct.Memory* %loadMem_4028a2, %struct.Memory** %MEMORY
  %loadMem_4028a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6753 = getelementptr inbounds %struct.GPR, %struct.GPR* %6752, i32 0, i32 33
  %6754 = getelementptr inbounds %struct.Reg, %struct.Reg* %6753, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %6754 to i64*
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6756 = getelementptr inbounds %struct.GPR, %struct.GPR* %6755, i32 0, i32 7
  %6757 = getelementptr inbounds %struct.Reg, %struct.Reg* %6756, i32 0, i32 0
  %RDX.i430 = bitcast %union.anon* %6757 to i64*
  %6758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6759 = getelementptr inbounds %struct.GPR, %struct.GPR* %6758, i32 0, i32 15
  %6760 = getelementptr inbounds %struct.Reg, %struct.Reg* %6759, i32 0, i32 0
  %RBP.i431 = bitcast %union.anon* %6760 to i64*
  %6761 = load i64, i64* %RBP.i431
  %6762 = sub i64 %6761, 1368
  %6763 = load i64, i64* %PC.i429
  %6764 = add i64 %6763, 6
  store i64 %6764, i64* %PC.i429
  %6765 = inttoptr i64 %6762 to i32*
  %6766 = load i32, i32* %6765
  %6767 = zext i32 %6766 to i64
  store i64 %6767, i64* %RDX.i430, align 8
  store %struct.Memory* %loadMem_4028a8, %struct.Memory** %MEMORY
  %loadMem_4028ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6769 = getelementptr inbounds %struct.GPR, %struct.GPR* %6768, i32 0, i32 33
  %6770 = getelementptr inbounds %struct.Reg, %struct.Reg* %6769, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %6770 to i64*
  %6771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6772 = getelementptr inbounds %struct.GPR, %struct.GPR* %6771, i32 0, i32 7
  %6773 = getelementptr inbounds %struct.Reg, %struct.Reg* %6772, i32 0, i32 0
  %RDX.i428 = bitcast %union.anon* %6773 to i64*
  %6774 = load i64, i64* %RDX.i428
  %6775 = load i64, i64* %PC.i427
  %6776 = add i64 %6775, 3
  store i64 %6776, i64* %PC.i427
  %6777 = trunc i64 %6774 to i32
  %6778 = add i32 1, %6777
  %6779 = zext i32 %6778 to i64
  store i64 %6779, i64* %RDX.i428, align 8
  %6780 = icmp ult i32 %6778, %6777
  %6781 = icmp ult i32 %6778, 1
  %6782 = or i1 %6780, %6781
  %6783 = zext i1 %6782 to i8
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6783, i8* %6784, align 1
  %6785 = and i32 %6778, 255
  %6786 = call i32 @llvm.ctpop.i32(i32 %6785)
  %6787 = trunc i32 %6786 to i8
  %6788 = and i8 %6787, 1
  %6789 = xor i8 %6788, 1
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6789, i8* %6790, align 1
  %6791 = xor i64 1, %6774
  %6792 = trunc i64 %6791 to i32
  %6793 = xor i32 %6792, %6778
  %6794 = lshr i32 %6793, 4
  %6795 = trunc i32 %6794 to i8
  %6796 = and i8 %6795, 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6796, i8* %6797, align 1
  %6798 = icmp eq i32 %6778, 0
  %6799 = zext i1 %6798 to i8
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6799, i8* %6800, align 1
  %6801 = lshr i32 %6778, 31
  %6802 = trunc i32 %6801 to i8
  %6803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6802, i8* %6803, align 1
  %6804 = lshr i32 %6777, 31
  %6805 = xor i32 %6801, %6804
  %6806 = add i32 %6805, %6801
  %6807 = icmp eq i32 %6806, 2
  %6808 = zext i1 %6807 to i8
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6808, i8* %6809, align 1
  store %struct.Memory* %loadMem_4028ae, %struct.Memory** %MEMORY
  %loadMem_4028b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6811 = getelementptr inbounds %struct.GPR, %struct.GPR* %6810, i32 0, i32 33
  %6812 = getelementptr inbounds %struct.Reg, %struct.Reg* %6811, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %6812 to i64*
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 7
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %EDX.i425 = bitcast %union.anon* %6815 to i32*
  %6816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6817 = getelementptr inbounds %struct.GPR, %struct.GPR* %6816, i32 0, i32 15
  %6818 = getelementptr inbounds %struct.Reg, %struct.Reg* %6817, i32 0, i32 0
  %RBP.i426 = bitcast %union.anon* %6818 to i64*
  %6819 = load i64, i64* %RBP.i426
  %6820 = sub i64 %6819, 1368
  %6821 = load i32, i32* %EDX.i425
  %6822 = zext i32 %6821 to i64
  %6823 = load i64, i64* %PC.i424
  %6824 = add i64 %6823, 6
  store i64 %6824, i64* %PC.i424
  %6825 = inttoptr i64 %6820 to i32*
  store i32 %6821, i32* %6825
  store %struct.Memory* %loadMem_4028b1, %struct.Memory** %MEMORY
  %loadMem_4028b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 33
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %PC.i421 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 7
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %RDX.i422 = bitcast %union.anon* %6831 to i64*
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6833 = getelementptr inbounds %struct.GPR, %struct.GPR* %6832, i32 0, i32 15
  %6834 = getelementptr inbounds %struct.Reg, %struct.Reg* %6833, i32 0, i32 0
  %RBP.i423 = bitcast %union.anon* %6834 to i64*
  %6835 = load i64, i64* %RBP.i423
  %6836 = sub i64 %6835, 1372
  %6837 = load i64, i64* %PC.i421
  %6838 = add i64 %6837, 6
  store i64 %6838, i64* %PC.i421
  %6839 = inttoptr i64 %6836 to i32*
  %6840 = load i32, i32* %6839
  %6841 = zext i32 %6840 to i64
  store i64 %6841, i64* %RDX.i422, align 8
  store %struct.Memory* %loadMem_4028b7, %struct.Memory** %MEMORY
  %loadMem_4028bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 33
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %6844 to i64*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 7
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %6847 to i64*
  %6848 = load i64, i64* %RDX.i
  %6849 = load i64, i64* %PC.i420
  %6850 = add i64 %6849, 3
  store i64 %6850, i64* %PC.i420
  %6851 = trunc i64 %6848 to i32
  %6852 = add i32 -1, %6851
  %6853 = zext i32 %6852 to i64
  store i64 %6853, i64* %RDX.i, align 8
  %6854 = icmp ult i32 %6852, %6851
  %6855 = icmp ult i32 %6852, -1
  %6856 = or i1 %6854, %6855
  %6857 = zext i1 %6856 to i8
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6857, i8* %6858, align 1
  %6859 = and i32 %6852, 255
  %6860 = call i32 @llvm.ctpop.i32(i32 %6859)
  %6861 = trunc i32 %6860 to i8
  %6862 = and i8 %6861, 1
  %6863 = xor i8 %6862, 1
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6863, i8* %6864, align 1
  %6865 = xor i64 -1, %6848
  %6866 = trunc i64 %6865 to i32
  %6867 = xor i32 %6866, %6852
  %6868 = lshr i32 %6867, 4
  %6869 = trunc i32 %6868 to i8
  %6870 = and i8 %6869, 1
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6870, i8* %6871, align 1
  %6872 = icmp eq i32 %6852, 0
  %6873 = zext i1 %6872 to i8
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6873, i8* %6874, align 1
  %6875 = lshr i32 %6852, 31
  %6876 = trunc i32 %6875 to i8
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6876, i8* %6877, align 1
  %6878 = lshr i32 %6851, 31
  %6879 = xor i32 %6875, %6878
  %6880 = xor i32 %6875, 1
  %6881 = add i32 %6879, %6880
  %6882 = icmp eq i32 %6881, 2
  %6883 = zext i1 %6882 to i8
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6883, i8* %6884, align 1
  store %struct.Memory* %loadMem_4028bd, %struct.Memory** %MEMORY
  %loadMem_4028c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6886 = getelementptr inbounds %struct.GPR, %struct.GPR* %6885, i32 0, i32 33
  %6887 = getelementptr inbounds %struct.Reg, %struct.Reg* %6886, i32 0, i32 0
  %PC.i418 = bitcast %union.anon* %6887 to i64*
  %6888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6889 = getelementptr inbounds %struct.GPR, %struct.GPR* %6888, i32 0, i32 7
  %6890 = getelementptr inbounds %struct.Reg, %struct.Reg* %6889, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %6890 to i32*
  %6891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6892 = getelementptr inbounds %struct.GPR, %struct.GPR* %6891, i32 0, i32 15
  %6893 = getelementptr inbounds %struct.Reg, %struct.Reg* %6892, i32 0, i32 0
  %RBP.i419 = bitcast %union.anon* %6893 to i64*
  %6894 = load i64, i64* %RBP.i419
  %6895 = sub i64 %6894, 1372
  %6896 = load i32, i32* %EDX.i
  %6897 = zext i32 %6896 to i64
  %6898 = load i64, i64* %PC.i418
  %6899 = add i64 %6898, 6
  store i64 %6899, i64* %PC.i418
  %6900 = inttoptr i64 %6895 to i32*
  store i32 %6896, i32* %6900
  store %struct.Memory* %loadMem_4028c0, %struct.Memory** %MEMORY
  %loadMem_4028c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6902 = getelementptr inbounds %struct.GPR, %struct.GPR* %6901, i32 0, i32 33
  %6903 = getelementptr inbounds %struct.Reg, %struct.Reg* %6902, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %6903 to i64*
  %6904 = load i64, i64* %PC.i417
  %6905 = add i64 %6904, -126
  %6906 = load i64, i64* %PC.i417
  %6907 = add i64 %6906, 5
  store i64 %6907, i64* %PC.i417
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6905, i64* %6908, align 8
  store %struct.Memory* %loadMem_4028c6, %struct.Memory** %MEMORY
  br label %block_.L_402848

block_.L_4028cb:                                  ; preds = %block_.L_402848
  %loadMem_4028cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6910 = getelementptr inbounds %struct.GPR, %struct.GPR* %6909, i32 0, i32 33
  %6911 = getelementptr inbounds %struct.Reg, %struct.Reg* %6910, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %6911 to i64*
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 1
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %RAX.i415 = bitcast %union.anon* %6914 to i64*
  %6915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6916 = getelementptr inbounds %struct.GPR, %struct.GPR* %6915, i32 0, i32 15
  %6917 = getelementptr inbounds %struct.Reg, %struct.Reg* %6916, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %6917 to i64*
  %6918 = load i64, i64* %RBP.i416
  %6919 = sub i64 %6918, 84
  %6920 = load i64, i64* %PC.i414
  %6921 = add i64 %6920, 3
  store i64 %6921, i64* %PC.i414
  %6922 = inttoptr i64 %6919 to i32*
  %6923 = load i32, i32* %6922
  %6924 = zext i32 %6923 to i64
  store i64 %6924, i64* %RAX.i415, align 8
  store %struct.Memory* %loadMem_4028cb, %struct.Memory** %MEMORY
  %loadMem_4028ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6926 = getelementptr inbounds %struct.GPR, %struct.GPR* %6925, i32 0, i32 33
  %6927 = getelementptr inbounds %struct.Reg, %struct.Reg* %6926, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %6927 to i64*
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6929 = getelementptr inbounds %struct.GPR, %struct.GPR* %6928, i32 0, i32 1
  %6930 = getelementptr inbounds %struct.Reg, %struct.Reg* %6929, i32 0, i32 0
  %RAX.i412 = bitcast %union.anon* %6930 to i64*
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6932 = getelementptr inbounds %struct.GPR, %struct.GPR* %6931, i32 0, i32 15
  %6933 = getelementptr inbounds %struct.Reg, %struct.Reg* %6932, i32 0, i32 0
  %RBP.i413 = bitcast %union.anon* %6933 to i64*
  %6934 = load i64, i64* %RAX.i412
  %6935 = load i64, i64* %RBP.i413
  %6936 = sub i64 %6935, 52
  %6937 = load i64, i64* %PC.i411
  %6938 = add i64 %6937, 3
  store i64 %6938, i64* %PC.i411
  %6939 = trunc i64 %6934 to i32
  %6940 = inttoptr i64 %6936 to i32*
  %6941 = load i32, i32* %6940
  %6942 = add i32 %6941, %6939
  %6943 = zext i32 %6942 to i64
  store i64 %6943, i64* %RAX.i412, align 8
  %6944 = icmp ult i32 %6942, %6939
  %6945 = icmp ult i32 %6942, %6941
  %6946 = or i1 %6944, %6945
  %6947 = zext i1 %6946 to i8
  %6948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6947, i8* %6948, align 1
  %6949 = and i32 %6942, 255
  %6950 = call i32 @llvm.ctpop.i32(i32 %6949)
  %6951 = trunc i32 %6950 to i8
  %6952 = and i8 %6951, 1
  %6953 = xor i8 %6952, 1
  %6954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6953, i8* %6954, align 1
  %6955 = xor i32 %6941, %6939
  %6956 = xor i32 %6955, %6942
  %6957 = lshr i32 %6956, 4
  %6958 = trunc i32 %6957 to i8
  %6959 = and i8 %6958, 1
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6959, i8* %6960, align 1
  %6961 = icmp eq i32 %6942, 0
  %6962 = zext i1 %6961 to i8
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6962, i8* %6963, align 1
  %6964 = lshr i32 %6942, 31
  %6965 = trunc i32 %6964 to i8
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6965, i8* %6966, align 1
  %6967 = lshr i32 %6939, 31
  %6968 = lshr i32 %6941, 31
  %6969 = xor i32 %6964, %6967
  %6970 = xor i32 %6964, %6968
  %6971 = add i32 %6969, %6970
  %6972 = icmp eq i32 %6971, 2
  %6973 = zext i1 %6972 to i8
  %6974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6973, i8* %6974, align 1
  store %struct.Memory* %loadMem_4028ce, %struct.Memory** %MEMORY
  %loadMem_4028d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6976 = getelementptr inbounds %struct.GPR, %struct.GPR* %6975, i32 0, i32 33
  %6977 = getelementptr inbounds %struct.Reg, %struct.Reg* %6976, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %6977 to i64*
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6979 = getelementptr inbounds %struct.GPR, %struct.GPR* %6978, i32 0, i32 1
  %6980 = getelementptr inbounds %struct.Reg, %struct.Reg* %6979, i32 0, i32 0
  %RAX.i409 = bitcast %union.anon* %6980 to i64*
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6982 = getelementptr inbounds %struct.GPR, %struct.GPR* %6981, i32 0, i32 15
  %6983 = getelementptr inbounds %struct.Reg, %struct.Reg* %6982, i32 0, i32 0
  %RBP.i410 = bitcast %union.anon* %6983 to i64*
  %6984 = load i64, i64* %RAX.i409
  %6985 = load i64, i64* %RBP.i410
  %6986 = sub i64 %6985, 60
  %6987 = load i64, i64* %PC.i408
  %6988 = add i64 %6987, 3
  store i64 %6988, i64* %PC.i408
  %6989 = trunc i64 %6984 to i32
  %6990 = inttoptr i64 %6986 to i32*
  %6991 = load i32, i32* %6990
  %6992 = sub i32 %6989, %6991
  %6993 = zext i32 %6992 to i64
  store i64 %6993, i64* %RAX.i409, align 8
  %6994 = icmp ult i32 %6989, %6991
  %6995 = zext i1 %6994 to i8
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6995, i8* %6996, align 1
  %6997 = and i32 %6992, 255
  %6998 = call i32 @llvm.ctpop.i32(i32 %6997)
  %6999 = trunc i32 %6998 to i8
  %7000 = and i8 %6999, 1
  %7001 = xor i8 %7000, 1
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7001, i8* %7002, align 1
  %7003 = xor i32 %6991, %6989
  %7004 = xor i32 %7003, %6992
  %7005 = lshr i32 %7004, 4
  %7006 = trunc i32 %7005 to i8
  %7007 = and i8 %7006, 1
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7007, i8* %7008, align 1
  %7009 = icmp eq i32 %6992, 0
  %7010 = zext i1 %7009 to i8
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7010, i8* %7011, align 1
  %7012 = lshr i32 %6992, 31
  %7013 = trunc i32 %7012 to i8
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7013, i8* %7014, align 1
  %7015 = lshr i32 %6989, 31
  %7016 = lshr i32 %6991, 31
  %7017 = xor i32 %7016, %7015
  %7018 = xor i32 %7012, %7015
  %7019 = add i32 %7018, %7017
  %7020 = icmp eq i32 %7019, 2
  %7021 = zext i1 %7020 to i8
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7021, i8* %7022, align 1
  store %struct.Memory* %loadMem_4028d1, %struct.Memory** %MEMORY
  %loadMem_4028d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7024 = getelementptr inbounds %struct.GPR, %struct.GPR* %7023, i32 0, i32 33
  %7025 = getelementptr inbounds %struct.Reg, %struct.Reg* %7024, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %7025 to i64*
  %7026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7027 = getelementptr inbounds %struct.GPR, %struct.GPR* %7026, i32 0, i32 1
  %7028 = getelementptr inbounds %struct.Reg, %struct.Reg* %7027, i32 0, i32 0
  %RAX.i407 = bitcast %union.anon* %7028 to i64*
  %7029 = load i64, i64* %RAX.i407
  %7030 = load i64, i64* %PC.i406
  %7031 = add i64 %7030, 3
  store i64 %7031, i64* %PC.i406
  %7032 = trunc i64 %7029 to i32
  %7033 = sub i32 %7032, 1
  %7034 = zext i32 %7033 to i64
  store i64 %7034, i64* %RAX.i407, align 8
  %7035 = icmp ult i32 %7032, 1
  %7036 = zext i1 %7035 to i8
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7036, i8* %7037, align 1
  %7038 = and i32 %7033, 255
  %7039 = call i32 @llvm.ctpop.i32(i32 %7038)
  %7040 = trunc i32 %7039 to i8
  %7041 = and i8 %7040, 1
  %7042 = xor i8 %7041, 1
  %7043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7042, i8* %7043, align 1
  %7044 = xor i64 1, %7029
  %7045 = trunc i64 %7044 to i32
  %7046 = xor i32 %7045, %7033
  %7047 = lshr i32 %7046, 4
  %7048 = trunc i32 %7047 to i8
  %7049 = and i8 %7048, 1
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7049, i8* %7050, align 1
  %7051 = icmp eq i32 %7033, 0
  %7052 = zext i1 %7051 to i8
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7052, i8* %7053, align 1
  %7054 = lshr i32 %7033, 31
  %7055 = trunc i32 %7054 to i8
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7055, i8* %7056, align 1
  %7057 = lshr i32 %7032, 31
  %7058 = xor i32 %7054, %7057
  %7059 = add i32 %7058, %7057
  %7060 = icmp eq i32 %7059, 2
  %7061 = zext i1 %7060 to i8
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7061, i8* %7062, align 1
  store %struct.Memory* %loadMem_4028d4, %struct.Memory** %MEMORY
  %loadMem_4028d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7064 = getelementptr inbounds %struct.GPR, %struct.GPR* %7063, i32 0, i32 33
  %7065 = getelementptr inbounds %struct.Reg, %struct.Reg* %7064, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %7065 to i64*
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7067 = getelementptr inbounds %struct.GPR, %struct.GPR* %7066, i32 0, i32 1
  %7068 = getelementptr inbounds %struct.Reg, %struct.Reg* %7067, i32 0, i32 0
  %EAX.i404 = bitcast %union.anon* %7068 to i32*
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 15
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %7071 to i64*
  %7072 = load i64, i64* %RBP.i405
  %7073 = sub i64 %7072, 68
  %7074 = load i32, i32* %EAX.i404
  %7075 = zext i32 %7074 to i64
  %7076 = load i64, i64* %PC.i403
  %7077 = add i64 %7076, 3
  store i64 %7077, i64* %PC.i403
  %7078 = inttoptr i64 %7073 to i32*
  store i32 %7074, i32* %7078
  store %struct.Memory* %loadMem_4028d7, %struct.Memory** %MEMORY
  %loadMem_4028da = load %struct.Memory*, %struct.Memory** %MEMORY
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7080 = getelementptr inbounds %struct.GPR, %struct.GPR* %7079, i32 0, i32 33
  %7081 = getelementptr inbounds %struct.Reg, %struct.Reg* %7080, i32 0, i32 0
  %PC.i400 = bitcast %union.anon* %7081 to i64*
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7083 = getelementptr inbounds %struct.GPR, %struct.GPR* %7082, i32 0, i32 1
  %7084 = getelementptr inbounds %struct.Reg, %struct.Reg* %7083, i32 0, i32 0
  %RAX.i401 = bitcast %union.anon* %7084 to i64*
  %7085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7086 = getelementptr inbounds %struct.GPR, %struct.GPR* %7085, i32 0, i32 15
  %7087 = getelementptr inbounds %struct.Reg, %struct.Reg* %7086, i32 0, i32 0
  %RBP.i402 = bitcast %union.anon* %7087 to i64*
  %7088 = load i64, i64* %RBP.i402
  %7089 = sub i64 %7088, 88
  %7090 = load i64, i64* %PC.i400
  %7091 = add i64 %7090, 3
  store i64 %7091, i64* %PC.i400
  %7092 = inttoptr i64 %7089 to i32*
  %7093 = load i32, i32* %7092
  %7094 = zext i32 %7093 to i64
  store i64 %7094, i64* %RAX.i401, align 8
  store %struct.Memory* %loadMem_4028da, %struct.Memory** %MEMORY
  %loadMem_4028dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 33
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %7097 to i64*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 5
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %7100 to i64*
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 15
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %7103 to i64*
  %7104 = load i64, i64* %RBP.i399
  %7105 = sub i64 %7104, 64
  %7106 = load i64, i64* %PC.i397
  %7107 = add i64 %7106, 3
  store i64 %7107, i64* %PC.i397
  %7108 = inttoptr i64 %7105 to i32*
  %7109 = load i32, i32* %7108
  %7110 = zext i32 %7109 to i64
  store i64 %7110, i64* %RCX.i398, align 8
  store %struct.Memory* %loadMem_4028dd, %struct.Memory** %MEMORY
  %loadMem_4028e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7112 = getelementptr inbounds %struct.GPR, %struct.GPR* %7111, i32 0, i32 33
  %7113 = getelementptr inbounds %struct.Reg, %struct.Reg* %7112, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %7113 to i64*
  %7114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7115 = getelementptr inbounds %struct.GPR, %struct.GPR* %7114, i32 0, i32 5
  %7116 = getelementptr inbounds %struct.Reg, %struct.Reg* %7115, i32 0, i32 0
  %RCX.i395 = bitcast %union.anon* %7116 to i64*
  %7117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7118 = getelementptr inbounds %struct.GPR, %struct.GPR* %7117, i32 0, i32 15
  %7119 = getelementptr inbounds %struct.Reg, %struct.Reg* %7118, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %7119 to i64*
  %7120 = load i64, i64* %RCX.i395
  %7121 = load i64, i64* %RBP.i396
  %7122 = sub i64 %7121, 56
  %7123 = load i64, i64* %PC.i394
  %7124 = add i64 %7123, 3
  store i64 %7124, i64* %PC.i394
  %7125 = trunc i64 %7120 to i32
  %7126 = inttoptr i64 %7122 to i32*
  %7127 = load i32, i32* %7126
  %7128 = sub i32 %7125, %7127
  %7129 = zext i32 %7128 to i64
  store i64 %7129, i64* %RCX.i395, align 8
  %7130 = icmp ult i32 %7125, %7127
  %7131 = zext i1 %7130 to i8
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7131, i8* %7132, align 1
  %7133 = and i32 %7128, 255
  %7134 = call i32 @llvm.ctpop.i32(i32 %7133)
  %7135 = trunc i32 %7134 to i8
  %7136 = and i8 %7135, 1
  %7137 = xor i8 %7136, 1
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7137, i8* %7138, align 1
  %7139 = xor i32 %7127, %7125
  %7140 = xor i32 %7139, %7128
  %7141 = lshr i32 %7140, 4
  %7142 = trunc i32 %7141 to i8
  %7143 = and i8 %7142, 1
  %7144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7143, i8* %7144, align 1
  %7145 = icmp eq i32 %7128, 0
  %7146 = zext i1 %7145 to i8
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7146, i8* %7147, align 1
  %7148 = lshr i32 %7128, 31
  %7149 = trunc i32 %7148 to i8
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7149, i8* %7150, align 1
  %7151 = lshr i32 %7125, 31
  %7152 = lshr i32 %7127, 31
  %7153 = xor i32 %7152, %7151
  %7154 = xor i32 %7148, %7151
  %7155 = add i32 %7154, %7153
  %7156 = icmp eq i32 %7155, 2
  %7157 = zext i1 %7156 to i8
  %7158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7157, i8* %7158, align 1
  store %struct.Memory* %loadMem_4028e0, %struct.Memory** %MEMORY
  %loadMem_4028e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7160 = getelementptr inbounds %struct.GPR, %struct.GPR* %7159, i32 0, i32 33
  %7161 = getelementptr inbounds %struct.Reg, %struct.Reg* %7160, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %7161 to i64*
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7163 = getelementptr inbounds %struct.GPR, %struct.GPR* %7162, i32 0, i32 5
  %7164 = getelementptr inbounds %struct.Reg, %struct.Reg* %7163, i32 0, i32 0
  %ECX.i392 = bitcast %union.anon* %7164 to i32*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 1
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %RAX.i393 = bitcast %union.anon* %7167 to i64*
  %7168 = load i64, i64* %RAX.i393
  %7169 = load i32, i32* %ECX.i392
  %7170 = zext i32 %7169 to i64
  %7171 = load i64, i64* %PC.i391
  %7172 = add i64 %7171, 2
  store i64 %7172, i64* %PC.i391
  %7173 = trunc i64 %7168 to i32
  %7174 = sub i32 %7173, %7169
  %7175 = zext i32 %7174 to i64
  store i64 %7175, i64* %RAX.i393, align 8
  %7176 = icmp ult i32 %7173, %7169
  %7177 = zext i1 %7176 to i8
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7177, i8* %7178, align 1
  %7179 = and i32 %7174, 255
  %7180 = call i32 @llvm.ctpop.i32(i32 %7179)
  %7181 = trunc i32 %7180 to i8
  %7182 = and i8 %7181, 1
  %7183 = xor i8 %7182, 1
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7183, i8* %7184, align 1
  %7185 = xor i64 %7170, %7168
  %7186 = trunc i64 %7185 to i32
  %7187 = xor i32 %7186, %7174
  %7188 = lshr i32 %7187, 4
  %7189 = trunc i32 %7188 to i8
  %7190 = and i8 %7189, 1
  %7191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7190, i8* %7191, align 1
  %7192 = icmp eq i32 %7174, 0
  %7193 = zext i1 %7192 to i8
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7193, i8* %7194, align 1
  %7195 = lshr i32 %7174, 31
  %7196 = trunc i32 %7195 to i8
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7196, i8* %7197, align 1
  %7198 = lshr i32 %7173, 31
  %7199 = lshr i32 %7169, 31
  %7200 = xor i32 %7199, %7198
  %7201 = xor i32 %7195, %7198
  %7202 = add i32 %7201, %7200
  %7203 = icmp eq i32 %7202, 2
  %7204 = zext i1 %7203 to i8
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7204, i8* %7205, align 1
  store %struct.Memory* %loadMem_4028e3, %struct.Memory** %MEMORY
  %loadMem_4028e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 33
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %7208 to i64*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7210 = getelementptr inbounds %struct.GPR, %struct.GPR* %7209, i32 0, i32 1
  %7211 = getelementptr inbounds %struct.Reg, %struct.Reg* %7210, i32 0, i32 0
  %RAX.i390 = bitcast %union.anon* %7211 to i64*
  %7212 = load i64, i64* %RAX.i390
  %7213 = load i64, i64* %PC.i389
  %7214 = add i64 %7213, 3
  store i64 %7214, i64* %PC.i389
  %7215 = trunc i64 %7212 to i32
  %7216 = add i32 1, %7215
  %7217 = zext i32 %7216 to i64
  store i64 %7217, i64* %RAX.i390, align 8
  %7218 = icmp ult i32 %7216, %7215
  %7219 = icmp ult i32 %7216, 1
  %7220 = or i1 %7218, %7219
  %7221 = zext i1 %7220 to i8
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7221, i8* %7222, align 1
  %7223 = and i32 %7216, 255
  %7224 = call i32 @llvm.ctpop.i32(i32 %7223)
  %7225 = trunc i32 %7224 to i8
  %7226 = and i8 %7225, 1
  %7227 = xor i8 %7226, 1
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7227, i8* %7228, align 1
  %7229 = xor i64 1, %7212
  %7230 = trunc i64 %7229 to i32
  %7231 = xor i32 %7230, %7216
  %7232 = lshr i32 %7231, 4
  %7233 = trunc i32 %7232 to i8
  %7234 = and i8 %7233, 1
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7234, i8* %7235, align 1
  %7236 = icmp eq i32 %7216, 0
  %7237 = zext i1 %7236 to i8
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7237, i8* %7238, align 1
  %7239 = lshr i32 %7216, 31
  %7240 = trunc i32 %7239 to i8
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7240, i8* %7241, align 1
  %7242 = lshr i32 %7215, 31
  %7243 = xor i32 %7239, %7242
  %7244 = add i32 %7243, %7239
  %7245 = icmp eq i32 %7244, 2
  %7246 = zext i1 %7245 to i8
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7246, i8* %7247, align 1
  store %struct.Memory* %loadMem_4028e5, %struct.Memory** %MEMORY
  %loadMem_4028e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 33
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %7250 to i64*
  %7251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7252 = getelementptr inbounds %struct.GPR, %struct.GPR* %7251, i32 0, i32 1
  %7253 = getelementptr inbounds %struct.Reg, %struct.Reg* %7252, i32 0, i32 0
  %EAX.i387 = bitcast %union.anon* %7253 to i32*
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 15
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %7256 to i64*
  %7257 = load i64, i64* %RBP.i388
  %7258 = sub i64 %7257, 72
  %7259 = load i32, i32* %EAX.i387
  %7260 = zext i32 %7259 to i64
  %7261 = load i64, i64* %PC.i386
  %7262 = add i64 %7261, 3
  store i64 %7262, i64* %PC.i386
  %7263 = inttoptr i64 %7258 to i32*
  store i32 %7259, i32* %7263
  store %struct.Memory* %loadMem_4028e8, %struct.Memory** %MEMORY
  %loadMem_4028eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7265 = getelementptr inbounds %struct.GPR, %struct.GPR* %7264, i32 0, i32 33
  %7266 = getelementptr inbounds %struct.Reg, %struct.Reg* %7265, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %7266 to i64*
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7268 = getelementptr inbounds %struct.GPR, %struct.GPR* %7267, i32 0, i32 1
  %7269 = getelementptr inbounds %struct.Reg, %struct.Reg* %7268, i32 0, i32 0
  %RAX.i384 = bitcast %union.anon* %7269 to i64*
  %7270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7271 = getelementptr inbounds %struct.GPR, %struct.GPR* %7270, i32 0, i32 15
  %7272 = getelementptr inbounds %struct.Reg, %struct.Reg* %7271, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %7272 to i64*
  %7273 = load i64, i64* %RBP.i385
  %7274 = sub i64 %7273, 84
  %7275 = load i64, i64* %PC.i383
  %7276 = add i64 %7275, 3
  store i64 %7276, i64* %PC.i383
  %7277 = inttoptr i64 %7274 to i32*
  %7278 = load i32, i32* %7277
  %7279 = zext i32 %7278 to i64
  store i64 %7279, i64* %RAX.i384, align 8
  store %struct.Memory* %loadMem_4028eb, %struct.Memory** %MEMORY
  %loadMem_4028ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7281 = getelementptr inbounds %struct.GPR, %struct.GPR* %7280, i32 0, i32 33
  %7282 = getelementptr inbounds %struct.Reg, %struct.Reg* %7281, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %7282 to i64*
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7284 = getelementptr inbounds %struct.GPR, %struct.GPR* %7283, i32 0, i32 1
  %7285 = getelementptr inbounds %struct.Reg, %struct.Reg* %7284, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %7285 to i32*
  %7286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7287 = getelementptr inbounds %struct.GPR, %struct.GPR* %7286, i32 0, i32 15
  %7288 = getelementptr inbounds %struct.Reg, %struct.Reg* %7287, i32 0, i32 0
  %RBP.i382 = bitcast %union.anon* %7288 to i64*
  %7289 = load i64, i64* %RBP.i382
  %7290 = sub i64 %7289, 1308
  %7291 = load i32, i32* %EAX.i381
  %7292 = zext i32 %7291 to i64
  %7293 = load i64, i64* %PC.i380
  %7294 = add i64 %7293, 6
  store i64 %7294, i64* %PC.i380
  %7295 = inttoptr i64 %7290 to i32*
  store i32 %7291, i32* %7295
  store %struct.Memory* %loadMem_4028ee, %struct.Memory** %MEMORY
  %loadMem_4028f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7297 = getelementptr inbounds %struct.GPR, %struct.GPR* %7296, i32 0, i32 33
  %7298 = getelementptr inbounds %struct.Reg, %struct.Reg* %7297, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %7298 to i64*
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 1
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %RAX.i378 = bitcast %union.anon* %7301 to i64*
  %7302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7303 = getelementptr inbounds %struct.GPR, %struct.GPR* %7302, i32 0, i32 15
  %7304 = getelementptr inbounds %struct.Reg, %struct.Reg* %7303, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %7304 to i64*
  %7305 = load i64, i64* %RBP.i379
  %7306 = sub i64 %7305, 68
  %7307 = load i64, i64* %PC.i377
  %7308 = add i64 %7307, 3
  store i64 %7308, i64* %PC.i377
  %7309 = inttoptr i64 %7306 to i32*
  %7310 = load i32, i32* %7309
  %7311 = zext i32 %7310 to i64
  store i64 %7311, i64* %RAX.i378, align 8
  store %struct.Memory* %loadMem_4028f4, %struct.Memory** %MEMORY
  %loadMem_4028f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7313 = getelementptr inbounds %struct.GPR, %struct.GPR* %7312, i32 0, i32 33
  %7314 = getelementptr inbounds %struct.Reg, %struct.Reg* %7313, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %7314 to i64*
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 1
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %EAX.i375 = bitcast %union.anon* %7317 to i32*
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7319 = getelementptr inbounds %struct.GPR, %struct.GPR* %7318, i32 0, i32 15
  %7320 = getelementptr inbounds %struct.Reg, %struct.Reg* %7319, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %7320 to i64*
  %7321 = load i64, i64* %RBP.i376
  %7322 = sub i64 %7321, 1320
  %7323 = load i32, i32* %EAX.i375
  %7324 = zext i32 %7323 to i64
  %7325 = load i64, i64* %PC.i374
  %7326 = add i64 %7325, 6
  store i64 %7326, i64* %PC.i374
  %7327 = inttoptr i64 %7322 to i32*
  store i32 %7323, i32* %7327
  store %struct.Memory* %loadMem_4028f7, %struct.Memory** %MEMORY
  %loadMem_4028fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7329 = getelementptr inbounds %struct.GPR, %struct.GPR* %7328, i32 0, i32 33
  %7330 = getelementptr inbounds %struct.Reg, %struct.Reg* %7329, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %7330 to i64*
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 1
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %RAX.i372 = bitcast %union.anon* %7333 to i64*
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7335 = getelementptr inbounds %struct.GPR, %struct.GPR* %7334, i32 0, i32 15
  %7336 = getelementptr inbounds %struct.Reg, %struct.Reg* %7335, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %7336 to i64*
  %7337 = load i64, i64* %RBP.i373
  %7338 = sub i64 %7337, 92
  %7339 = load i64, i64* %PC.i371
  %7340 = add i64 %7339, 3
  store i64 %7340, i64* %PC.i371
  %7341 = inttoptr i64 %7338 to i32*
  %7342 = load i32, i32* %7341
  %7343 = zext i32 %7342 to i64
  store i64 %7343, i64* %RAX.i372, align 8
  store %struct.Memory* %loadMem_4028fd, %struct.Memory** %MEMORY
  %loadMem_402900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 33
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %PC.i368 = bitcast %union.anon* %7346 to i64*
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 1
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %EAX.i369 = bitcast %union.anon* %7349 to i32*
  %7350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7351 = getelementptr inbounds %struct.GPR, %struct.GPR* %7350, i32 0, i32 15
  %7352 = getelementptr inbounds %struct.Reg, %struct.Reg* %7351, i32 0, i32 0
  %RBP.i370 = bitcast %union.anon* %7352 to i64*
  %7353 = load i64, i64* %RBP.i370
  %7354 = sub i64 %7353, 1332
  %7355 = load i32, i32* %EAX.i369
  %7356 = zext i32 %7355 to i64
  %7357 = load i64, i64* %PC.i368
  %7358 = add i64 %7357, 6
  store i64 %7358, i64* %PC.i368
  %7359 = inttoptr i64 %7354 to i32*
  store i32 %7355, i32* %7359
  store %struct.Memory* %loadMem_402900, %struct.Memory** %MEMORY
  %loadMem_402906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7361 = getelementptr inbounds %struct.GPR, %struct.GPR* %7360, i32 0, i32 33
  %7362 = getelementptr inbounds %struct.Reg, %struct.Reg* %7361, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %7362 to i64*
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7364 = getelementptr inbounds %struct.GPR, %struct.GPR* %7363, i32 0, i32 1
  %7365 = getelementptr inbounds %struct.Reg, %struct.Reg* %7364, i32 0, i32 0
  %RAX.i366 = bitcast %union.anon* %7365 to i64*
  %7366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7367 = getelementptr inbounds %struct.GPR, %struct.GPR* %7366, i32 0, i32 15
  %7368 = getelementptr inbounds %struct.Reg, %struct.Reg* %7367, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %7368 to i64*
  %7369 = load i64, i64* %RBP.i367
  %7370 = sub i64 %7369, 72
  %7371 = load i64, i64* %PC.i365
  %7372 = add i64 %7371, 3
  store i64 %7372, i64* %PC.i365
  %7373 = inttoptr i64 %7370 to i32*
  %7374 = load i32, i32* %7373
  %7375 = zext i32 %7374 to i64
  store i64 %7375, i64* %RAX.i366, align 8
  store %struct.Memory* %loadMem_402906, %struct.Memory** %MEMORY
  %loadMem_402909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7377 = getelementptr inbounds %struct.GPR, %struct.GPR* %7376, i32 0, i32 33
  %7378 = getelementptr inbounds %struct.Reg, %struct.Reg* %7377, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7378 to i64*
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 1
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %EAX.i363 = bitcast %union.anon* %7381 to i32*
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7383 = getelementptr inbounds %struct.GPR, %struct.GPR* %7382, i32 0, i32 15
  %7384 = getelementptr inbounds %struct.Reg, %struct.Reg* %7383, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %7384 to i64*
  %7385 = load i64, i64* %RBP.i364
  %7386 = sub i64 %7385, 1304
  %7387 = load i32, i32* %EAX.i363
  %7388 = zext i32 %7387 to i64
  %7389 = load i64, i64* %PC.i362
  %7390 = add i64 %7389, 6
  store i64 %7390, i64* %PC.i362
  %7391 = inttoptr i64 %7386 to i32*
  store i32 %7387, i32* %7391
  store %struct.Memory* %loadMem_402909, %struct.Memory** %MEMORY
  %loadMem_40290f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7393 = getelementptr inbounds %struct.GPR, %struct.GPR* %7392, i32 0, i32 33
  %7394 = getelementptr inbounds %struct.Reg, %struct.Reg* %7393, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %7394 to i64*
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7396 = getelementptr inbounds %struct.GPR, %struct.GPR* %7395, i32 0, i32 1
  %7397 = getelementptr inbounds %struct.Reg, %struct.Reg* %7396, i32 0, i32 0
  %RAX.i360 = bitcast %union.anon* %7397 to i64*
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7399 = getelementptr inbounds %struct.GPR, %struct.GPR* %7398, i32 0, i32 15
  %7400 = getelementptr inbounds %struct.Reg, %struct.Reg* %7399, i32 0, i32 0
  %RBP.i361 = bitcast %union.anon* %7400 to i64*
  %7401 = load i64, i64* %RBP.i361
  %7402 = sub i64 %7401, 88
  %7403 = load i64, i64* %PC.i359
  %7404 = add i64 %7403, 3
  store i64 %7404, i64* %PC.i359
  %7405 = inttoptr i64 %7402 to i32*
  %7406 = load i32, i32* %7405
  %7407 = zext i32 %7406 to i64
  store i64 %7407, i64* %RAX.i360, align 8
  store %struct.Memory* %loadMem_40290f, %struct.Memory** %MEMORY
  %loadMem_402912 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7409 = getelementptr inbounds %struct.GPR, %struct.GPR* %7408, i32 0, i32 33
  %7410 = getelementptr inbounds %struct.Reg, %struct.Reg* %7409, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %7410 to i64*
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7412 = getelementptr inbounds %struct.GPR, %struct.GPR* %7411, i32 0, i32 1
  %7413 = getelementptr inbounds %struct.Reg, %struct.Reg* %7412, i32 0, i32 0
  %EAX.i357 = bitcast %union.anon* %7413 to i32*
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7415 = getelementptr inbounds %struct.GPR, %struct.GPR* %7414, i32 0, i32 15
  %7416 = getelementptr inbounds %struct.Reg, %struct.Reg* %7415, i32 0, i32 0
  %RBP.i358 = bitcast %union.anon* %7416 to i64*
  %7417 = load i64, i64* %RBP.i358
  %7418 = sub i64 %7417, 1316
  %7419 = load i32, i32* %EAX.i357
  %7420 = zext i32 %7419 to i64
  %7421 = load i64, i64* %PC.i356
  %7422 = add i64 %7421, 6
  store i64 %7422, i64* %PC.i356
  %7423 = inttoptr i64 %7418 to i32*
  store i32 %7419, i32* %7423
  store %struct.Memory* %loadMem_402912, %struct.Memory** %MEMORY
  %loadMem_402918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7425 = getelementptr inbounds %struct.GPR, %struct.GPR* %7424, i32 0, i32 33
  %7426 = getelementptr inbounds %struct.Reg, %struct.Reg* %7425, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7426 to i64*
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 1
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %RAX.i354 = bitcast %union.anon* %7429 to i64*
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7431 = getelementptr inbounds %struct.GPR, %struct.GPR* %7430, i32 0, i32 15
  %7432 = getelementptr inbounds %struct.Reg, %struct.Reg* %7431, i32 0, i32 0
  %RBP.i355 = bitcast %union.anon* %7432 to i64*
  %7433 = load i64, i64* %RBP.i355
  %7434 = sub i64 %7433, 92
  %7435 = load i64, i64* %PC.i353
  %7436 = add i64 %7435, 3
  store i64 %7436, i64* %PC.i353
  %7437 = inttoptr i64 %7434 to i32*
  %7438 = load i32, i32* %7437
  %7439 = zext i32 %7438 to i64
  store i64 %7439, i64* %RAX.i354, align 8
  store %struct.Memory* %loadMem_402918, %struct.Memory** %MEMORY
  %loadMem_40291b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7441 = getelementptr inbounds %struct.GPR, %struct.GPR* %7440, i32 0, i32 33
  %7442 = getelementptr inbounds %struct.Reg, %struct.Reg* %7441, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7442 to i64*
  %7443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7444 = getelementptr inbounds %struct.GPR, %struct.GPR* %7443, i32 0, i32 1
  %7445 = getelementptr inbounds %struct.Reg, %struct.Reg* %7444, i32 0, i32 0
  %EAX.i351 = bitcast %union.anon* %7445 to i32*
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 15
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %RBP.i352 = bitcast %union.anon* %7448 to i64*
  %7449 = load i64, i64* %RBP.i352
  %7450 = sub i64 %7449, 1328
  %7451 = load i32, i32* %EAX.i351
  %7452 = zext i32 %7451 to i64
  %7453 = load i64, i64* %PC.i350
  %7454 = add i64 %7453, 6
  store i64 %7454, i64* %PC.i350
  %7455 = inttoptr i64 %7450 to i32*
  store i32 %7451, i32* %7455
  store %struct.Memory* %loadMem_40291b, %struct.Memory** %MEMORY
  %loadMem_402921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7457 = getelementptr inbounds %struct.GPR, %struct.GPR* %7456, i32 0, i32 33
  %7458 = getelementptr inbounds %struct.Reg, %struct.Reg* %7457, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7458 to i64*
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7460 = getelementptr inbounds %struct.GPR, %struct.GPR* %7459, i32 0, i32 1
  %7461 = getelementptr inbounds %struct.Reg, %struct.Reg* %7460, i32 0, i32 0
  %RAX.i348 = bitcast %union.anon* %7461 to i64*
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 15
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %7464 to i64*
  %7465 = load i64, i64* %RBP.i349
  %7466 = sub i64 %7465, 68
  %7467 = load i64, i64* %PC.i347
  %7468 = add i64 %7467, 3
  store i64 %7468, i64* %PC.i347
  %7469 = inttoptr i64 %7466 to i32*
  %7470 = load i32, i32* %7469
  %7471 = zext i32 %7470 to i64
  store i64 %7471, i64* %RAX.i348, align 8
  store %struct.Memory* %loadMem_402921, %struct.Memory** %MEMORY
  %loadMem_402924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7473 = getelementptr inbounds %struct.GPR, %struct.GPR* %7472, i32 0, i32 33
  %7474 = getelementptr inbounds %struct.Reg, %struct.Reg* %7473, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %7474 to i64*
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7476 = getelementptr inbounds %struct.GPR, %struct.GPR* %7475, i32 0, i32 1
  %7477 = getelementptr inbounds %struct.Reg, %struct.Reg* %7476, i32 0, i32 0
  %RAX.i346 = bitcast %union.anon* %7477 to i64*
  %7478 = load i64, i64* %RAX.i346
  %7479 = load i64, i64* %PC.i345
  %7480 = add i64 %7479, 3
  store i64 %7480, i64* %PC.i345
  %7481 = trunc i64 %7478 to i32
  %7482 = add i32 1, %7481
  %7483 = zext i32 %7482 to i64
  store i64 %7483, i64* %RAX.i346, align 8
  %7484 = icmp ult i32 %7482, %7481
  %7485 = icmp ult i32 %7482, 1
  %7486 = or i1 %7484, %7485
  %7487 = zext i1 %7486 to i8
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7487, i8* %7488, align 1
  %7489 = and i32 %7482, 255
  %7490 = call i32 @llvm.ctpop.i32(i32 %7489)
  %7491 = trunc i32 %7490 to i8
  %7492 = and i8 %7491, 1
  %7493 = xor i8 %7492, 1
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7493, i8* %7494, align 1
  %7495 = xor i64 1, %7478
  %7496 = trunc i64 %7495 to i32
  %7497 = xor i32 %7496, %7482
  %7498 = lshr i32 %7497, 4
  %7499 = trunc i32 %7498 to i8
  %7500 = and i8 %7499, 1
  %7501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7500, i8* %7501, align 1
  %7502 = icmp eq i32 %7482, 0
  %7503 = zext i1 %7502 to i8
  %7504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7503, i8* %7504, align 1
  %7505 = lshr i32 %7482, 31
  %7506 = trunc i32 %7505 to i8
  %7507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7506, i8* %7507, align 1
  %7508 = lshr i32 %7481, 31
  %7509 = xor i32 %7505, %7508
  %7510 = add i32 %7509, %7505
  %7511 = icmp eq i32 %7510, 2
  %7512 = zext i1 %7511 to i8
  %7513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7512, i8* %7513, align 1
  store %struct.Memory* %loadMem_402924, %struct.Memory** %MEMORY
  %loadMem_402927 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 33
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 1
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %EAX.i343 = bitcast %union.anon* %7519 to i32*
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 15
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %RBP.i344 = bitcast %union.anon* %7522 to i64*
  %7523 = load i64, i64* %RBP.i344
  %7524 = sub i64 %7523, 1300
  %7525 = load i32, i32* %EAX.i343
  %7526 = zext i32 %7525 to i64
  %7527 = load i64, i64* %PC.i342
  %7528 = add i64 %7527, 6
  store i64 %7528, i64* %PC.i342
  %7529 = inttoptr i64 %7524 to i32*
  store i32 %7525, i32* %7529
  store %struct.Memory* %loadMem_402927, %struct.Memory** %MEMORY
  %loadMem_40292d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7531 = getelementptr inbounds %struct.GPR, %struct.GPR* %7530, i32 0, i32 33
  %7532 = getelementptr inbounds %struct.Reg, %struct.Reg* %7531, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %7532 to i64*
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7534 = getelementptr inbounds %struct.GPR, %struct.GPR* %7533, i32 0, i32 1
  %7535 = getelementptr inbounds %struct.Reg, %struct.Reg* %7534, i32 0, i32 0
  %RAX.i340 = bitcast %union.anon* %7535 to i64*
  %7536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7537 = getelementptr inbounds %struct.GPR, %struct.GPR* %7536, i32 0, i32 15
  %7538 = getelementptr inbounds %struct.Reg, %struct.Reg* %7537, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %7538 to i64*
  %7539 = load i64, i64* %RBP.i341
  %7540 = sub i64 %7539, 72
  %7541 = load i64, i64* %PC.i339
  %7542 = add i64 %7541, 3
  store i64 %7542, i64* %PC.i339
  %7543 = inttoptr i64 %7540 to i32*
  %7544 = load i32, i32* %7543
  %7545 = zext i32 %7544 to i64
  store i64 %7545, i64* %RAX.i340, align 8
  store %struct.Memory* %loadMem_40292d, %struct.Memory** %MEMORY
  %loadMem_402930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 33
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %7548 to i64*
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7550 = getelementptr inbounds %struct.GPR, %struct.GPR* %7549, i32 0, i32 1
  %7551 = getelementptr inbounds %struct.Reg, %struct.Reg* %7550, i32 0, i32 0
  %RAX.i338 = bitcast %union.anon* %7551 to i64*
  %7552 = load i64, i64* %RAX.i338
  %7553 = load i64, i64* %PC.i337
  %7554 = add i64 %7553, 3
  store i64 %7554, i64* %PC.i337
  %7555 = trunc i64 %7552 to i32
  %7556 = sub i32 %7555, 1
  %7557 = zext i32 %7556 to i64
  store i64 %7557, i64* %RAX.i338, align 8
  %7558 = icmp ult i32 %7555, 1
  %7559 = zext i1 %7558 to i8
  %7560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7559, i8* %7560, align 1
  %7561 = and i32 %7556, 255
  %7562 = call i32 @llvm.ctpop.i32(i32 %7561)
  %7563 = trunc i32 %7562 to i8
  %7564 = and i8 %7563, 1
  %7565 = xor i8 %7564, 1
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7565, i8* %7566, align 1
  %7567 = xor i64 1, %7552
  %7568 = trunc i64 %7567 to i32
  %7569 = xor i32 %7568, %7556
  %7570 = lshr i32 %7569, 4
  %7571 = trunc i32 %7570 to i8
  %7572 = and i8 %7571, 1
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7572, i8* %7573, align 1
  %7574 = icmp eq i32 %7556, 0
  %7575 = zext i1 %7574 to i8
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7575, i8* %7576, align 1
  %7577 = lshr i32 %7556, 31
  %7578 = trunc i32 %7577 to i8
  %7579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7578, i8* %7579, align 1
  %7580 = lshr i32 %7555, 31
  %7581 = xor i32 %7577, %7580
  %7582 = add i32 %7581, %7580
  %7583 = icmp eq i32 %7582, 2
  %7584 = zext i1 %7583 to i8
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7584, i8* %7585, align 1
  store %struct.Memory* %loadMem_402930, %struct.Memory** %MEMORY
  %loadMem_402933 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7587 = getelementptr inbounds %struct.GPR, %struct.GPR* %7586, i32 0, i32 33
  %7588 = getelementptr inbounds %struct.Reg, %struct.Reg* %7587, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %7588 to i64*
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7590 = getelementptr inbounds %struct.GPR, %struct.GPR* %7589, i32 0, i32 1
  %7591 = getelementptr inbounds %struct.Reg, %struct.Reg* %7590, i32 0, i32 0
  %EAX.i335 = bitcast %union.anon* %7591 to i32*
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7593 = getelementptr inbounds %struct.GPR, %struct.GPR* %7592, i32 0, i32 15
  %7594 = getelementptr inbounds %struct.Reg, %struct.Reg* %7593, i32 0, i32 0
  %RBP.i336 = bitcast %union.anon* %7594 to i64*
  %7595 = load i64, i64* %RBP.i336
  %7596 = sub i64 %7595, 1312
  %7597 = load i32, i32* %EAX.i335
  %7598 = zext i32 %7597 to i64
  %7599 = load i64, i64* %PC.i334
  %7600 = add i64 %7599, 6
  store i64 %7600, i64* %PC.i334
  %7601 = inttoptr i64 %7596 to i32*
  store i32 %7597, i32* %7601
  store %struct.Memory* %loadMem_402933, %struct.Memory** %MEMORY
  %loadMem_402939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7603 = getelementptr inbounds %struct.GPR, %struct.GPR* %7602, i32 0, i32 33
  %7604 = getelementptr inbounds %struct.Reg, %struct.Reg* %7603, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %7604 to i64*
  %7605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7606 = getelementptr inbounds %struct.GPR, %struct.GPR* %7605, i32 0, i32 1
  %7607 = getelementptr inbounds %struct.Reg, %struct.Reg* %7606, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %7607 to i64*
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7609 = getelementptr inbounds %struct.GPR, %struct.GPR* %7608, i32 0, i32 15
  %7610 = getelementptr inbounds %struct.Reg, %struct.Reg* %7609, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %7610 to i64*
  %7611 = load i64, i64* %RBP.i333
  %7612 = sub i64 %7611, 92
  %7613 = load i64, i64* %PC.i331
  %7614 = add i64 %7613, 3
  store i64 %7614, i64* %PC.i331
  %7615 = inttoptr i64 %7612 to i32*
  %7616 = load i32, i32* %7615
  %7617 = zext i32 %7616 to i64
  store i64 %7617, i64* %RAX.i332, align 8
  store %struct.Memory* %loadMem_402939, %struct.Memory** %MEMORY
  %loadMem_40293c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7619 = getelementptr inbounds %struct.GPR, %struct.GPR* %7618, i32 0, i32 33
  %7620 = getelementptr inbounds %struct.Reg, %struct.Reg* %7619, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %7620 to i64*
  %7621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7622 = getelementptr inbounds %struct.GPR, %struct.GPR* %7621, i32 0, i32 1
  %7623 = getelementptr inbounds %struct.Reg, %struct.Reg* %7622, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %7623 to i64*
  %7624 = load i64, i64* %RAX.i330
  %7625 = load i64, i64* %PC.i329
  %7626 = add i64 %7625, 3
  store i64 %7626, i64* %PC.i329
  %7627 = trunc i64 %7624 to i32
  %7628 = add i32 1, %7627
  %7629 = zext i32 %7628 to i64
  store i64 %7629, i64* %RAX.i330, align 8
  %7630 = icmp ult i32 %7628, %7627
  %7631 = icmp ult i32 %7628, 1
  %7632 = or i1 %7630, %7631
  %7633 = zext i1 %7632 to i8
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7633, i8* %7634, align 1
  %7635 = and i32 %7628, 255
  %7636 = call i32 @llvm.ctpop.i32(i32 %7635)
  %7637 = trunc i32 %7636 to i8
  %7638 = and i8 %7637, 1
  %7639 = xor i8 %7638, 1
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7639, i8* %7640, align 1
  %7641 = xor i64 1, %7624
  %7642 = trunc i64 %7641 to i32
  %7643 = xor i32 %7642, %7628
  %7644 = lshr i32 %7643, 4
  %7645 = trunc i32 %7644 to i8
  %7646 = and i8 %7645, 1
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7646, i8* %7647, align 1
  %7648 = icmp eq i32 %7628, 0
  %7649 = zext i1 %7648 to i8
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7649, i8* %7650, align 1
  %7651 = lshr i32 %7628, 31
  %7652 = trunc i32 %7651 to i8
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7652, i8* %7653, align 1
  %7654 = lshr i32 %7627, 31
  %7655 = xor i32 %7651, %7654
  %7656 = add i32 %7655, %7651
  %7657 = icmp eq i32 %7656, 2
  %7658 = zext i1 %7657 to i8
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7658, i8* %7659, align 1
  store %struct.Memory* %loadMem_40293c, %struct.Memory** %MEMORY
  %loadMem_40293f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7661 = getelementptr inbounds %struct.GPR, %struct.GPR* %7660, i32 0, i32 33
  %7662 = getelementptr inbounds %struct.Reg, %struct.Reg* %7661, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %7662 to i64*
  %7663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7664 = getelementptr inbounds %struct.GPR, %struct.GPR* %7663, i32 0, i32 1
  %7665 = getelementptr inbounds %struct.Reg, %struct.Reg* %7664, i32 0, i32 0
  %EAX.i327 = bitcast %union.anon* %7665 to i32*
  %7666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7667 = getelementptr inbounds %struct.GPR, %struct.GPR* %7666, i32 0, i32 15
  %7668 = getelementptr inbounds %struct.Reg, %struct.Reg* %7667, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %7668 to i64*
  %7669 = load i64, i64* %RBP.i328
  %7670 = sub i64 %7669, 1324
  %7671 = load i32, i32* %EAX.i327
  %7672 = zext i32 %7671 to i64
  %7673 = load i64, i64* %PC.i326
  %7674 = add i64 %7673, 6
  store i64 %7674, i64* %PC.i326
  %7675 = inttoptr i64 %7670 to i32*
  store i32 %7671, i32* %7675
  store %struct.Memory* %loadMem_40293f, %struct.Memory** %MEMORY
  %loadMem_402945 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7677 = getelementptr inbounds %struct.GPR, %struct.GPR* %7676, i32 0, i32 33
  %7678 = getelementptr inbounds %struct.Reg, %struct.Reg* %7677, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %7678 to i64*
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7680 = getelementptr inbounds %struct.GPR, %struct.GPR* %7679, i32 0, i32 1
  %7681 = getelementptr inbounds %struct.Reg, %struct.Reg* %7680, i32 0, i32 0
  %RAX.i324 = bitcast %union.anon* %7681 to i64*
  %7682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7683 = getelementptr inbounds %struct.GPR, %struct.GPR* %7682, i32 0, i32 15
  %7684 = getelementptr inbounds %struct.Reg, %struct.Reg* %7683, i32 0, i32 0
  %RBP.i325 = bitcast %union.anon* %7684 to i64*
  %7685 = load i64, i64* %RBP.i325
  %7686 = sub i64 %7685, 1320
  %7687 = load i64, i64* %PC.i323
  %7688 = add i64 %7687, 6
  store i64 %7688, i64* %PC.i323
  %7689 = inttoptr i64 %7686 to i32*
  %7690 = load i32, i32* %7689
  %7691 = zext i32 %7690 to i64
  store i64 %7691, i64* %RAX.i324, align 8
  store %struct.Memory* %loadMem_402945, %struct.Memory** %MEMORY
  %loadMem_40294b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7693 = getelementptr inbounds %struct.GPR, %struct.GPR* %7692, i32 0, i32 33
  %7694 = getelementptr inbounds %struct.Reg, %struct.Reg* %7693, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %7694 to i64*
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7696 = getelementptr inbounds %struct.GPR, %struct.GPR* %7695, i32 0, i32 1
  %7697 = getelementptr inbounds %struct.Reg, %struct.Reg* %7696, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %7697 to i64*
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 15
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %RBP.i322 = bitcast %union.anon* %7700 to i64*
  %7701 = load i64, i64* %RAX.i321
  %7702 = load i64, i64* %RBP.i322
  %7703 = sub i64 %7702, 1308
  %7704 = load i64, i64* %PC.i320
  %7705 = add i64 %7704, 6
  store i64 %7705, i64* %PC.i320
  %7706 = trunc i64 %7701 to i32
  %7707 = inttoptr i64 %7703 to i32*
  %7708 = load i32, i32* %7707
  %7709 = sub i32 %7706, %7708
  %7710 = zext i32 %7709 to i64
  store i64 %7710, i64* %RAX.i321, align 8
  %7711 = icmp ult i32 %7706, %7708
  %7712 = zext i1 %7711 to i8
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7712, i8* %7713, align 1
  %7714 = and i32 %7709, 255
  %7715 = call i32 @llvm.ctpop.i32(i32 %7714)
  %7716 = trunc i32 %7715 to i8
  %7717 = and i8 %7716, 1
  %7718 = xor i8 %7717, 1
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7718, i8* %7719, align 1
  %7720 = xor i32 %7708, %7706
  %7721 = xor i32 %7720, %7709
  %7722 = lshr i32 %7721, 4
  %7723 = trunc i32 %7722 to i8
  %7724 = and i8 %7723, 1
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7724, i8* %7725, align 1
  %7726 = icmp eq i32 %7709, 0
  %7727 = zext i1 %7726 to i8
  %7728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7727, i8* %7728, align 1
  %7729 = lshr i32 %7709, 31
  %7730 = trunc i32 %7729 to i8
  %7731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7730, i8* %7731, align 1
  %7732 = lshr i32 %7706, 31
  %7733 = lshr i32 %7708, 31
  %7734 = xor i32 %7733, %7732
  %7735 = xor i32 %7729, %7732
  %7736 = add i32 %7735, %7734
  %7737 = icmp eq i32 %7736, 2
  %7738 = zext i1 %7737 to i8
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7738, i8* %7739, align 1
  store %struct.Memory* %loadMem_40294b, %struct.Memory** %MEMORY
  %loadMem_402951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7741 = getelementptr inbounds %struct.GPR, %struct.GPR* %7740, i32 0, i32 33
  %7742 = getelementptr inbounds %struct.Reg, %struct.Reg* %7741, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %7742 to i64*
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7744 = getelementptr inbounds %struct.GPR, %struct.GPR* %7743, i32 0, i32 5
  %7745 = getelementptr inbounds %struct.Reg, %struct.Reg* %7744, i32 0, i32 0
  %RCX.i318 = bitcast %union.anon* %7745 to i64*
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7747 = getelementptr inbounds %struct.GPR, %struct.GPR* %7746, i32 0, i32 15
  %7748 = getelementptr inbounds %struct.Reg, %struct.Reg* %7747, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %7748 to i64*
  %7749 = load i64, i64* %RBP.i319
  %7750 = sub i64 %7749, 1316
  %7751 = load i64, i64* %PC.i317
  %7752 = add i64 %7751, 6
  store i64 %7752, i64* %PC.i317
  %7753 = inttoptr i64 %7750 to i32*
  %7754 = load i32, i32* %7753
  %7755 = zext i32 %7754 to i64
  store i64 %7755, i64* %RCX.i318, align 8
  store %struct.Memory* %loadMem_402951, %struct.Memory** %MEMORY
  %loadMem_402957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 33
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %PC.i314 = bitcast %union.anon* %7758 to i64*
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7760 = getelementptr inbounds %struct.GPR, %struct.GPR* %7759, i32 0, i32 5
  %7761 = getelementptr inbounds %struct.Reg, %struct.Reg* %7760, i32 0, i32 0
  %RCX.i315 = bitcast %union.anon* %7761 to i64*
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7763 = getelementptr inbounds %struct.GPR, %struct.GPR* %7762, i32 0, i32 15
  %7764 = getelementptr inbounds %struct.Reg, %struct.Reg* %7763, i32 0, i32 0
  %RBP.i316 = bitcast %union.anon* %7764 to i64*
  %7765 = load i64, i64* %RCX.i315
  %7766 = load i64, i64* %RBP.i316
  %7767 = sub i64 %7766, 1304
  %7768 = load i64, i64* %PC.i314
  %7769 = add i64 %7768, 6
  store i64 %7769, i64* %PC.i314
  %7770 = trunc i64 %7765 to i32
  %7771 = inttoptr i64 %7767 to i32*
  %7772 = load i32, i32* %7771
  %7773 = sub i32 %7770, %7772
  %7774 = zext i32 %7773 to i64
  store i64 %7774, i64* %RCX.i315, align 8
  %7775 = icmp ult i32 %7770, %7772
  %7776 = zext i1 %7775 to i8
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7776, i8* %7777, align 1
  %7778 = and i32 %7773, 255
  %7779 = call i32 @llvm.ctpop.i32(i32 %7778)
  %7780 = trunc i32 %7779 to i8
  %7781 = and i8 %7780, 1
  %7782 = xor i8 %7781, 1
  %7783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7782, i8* %7783, align 1
  %7784 = xor i32 %7772, %7770
  %7785 = xor i32 %7784, %7773
  %7786 = lshr i32 %7785, 4
  %7787 = trunc i32 %7786 to i8
  %7788 = and i8 %7787, 1
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7788, i8* %7789, align 1
  %7790 = icmp eq i32 %7773, 0
  %7791 = zext i1 %7790 to i8
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7791, i8* %7792, align 1
  %7793 = lshr i32 %7773, 31
  %7794 = trunc i32 %7793 to i8
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7794, i8* %7795, align 1
  %7796 = lshr i32 %7770, 31
  %7797 = lshr i32 %7772, 31
  %7798 = xor i32 %7797, %7796
  %7799 = xor i32 %7793, %7796
  %7800 = add i32 %7799, %7798
  %7801 = icmp eq i32 %7800, 2
  %7802 = zext i1 %7801 to i8
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7802, i8* %7803, align 1
  store %struct.Memory* %loadMem_402957, %struct.Memory** %MEMORY
  %loadMem_40295d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7805 = getelementptr inbounds %struct.GPR, %struct.GPR* %7804, i32 0, i32 33
  %7806 = getelementptr inbounds %struct.Reg, %struct.Reg* %7805, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %7806 to i64*
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7808 = getelementptr inbounds %struct.GPR, %struct.GPR* %7807, i32 0, i32 1
  %7809 = getelementptr inbounds %struct.Reg, %struct.Reg* %7808, i32 0, i32 0
  %EAX.i312 = bitcast %union.anon* %7809 to i32*
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 5
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %ECX.i313 = bitcast %union.anon* %7812 to i32*
  %7813 = load i32, i32* %EAX.i312
  %7814 = zext i32 %7813 to i64
  %7815 = load i32, i32* %ECX.i313
  %7816 = zext i32 %7815 to i64
  %7817 = load i64, i64* %PC.i311
  %7818 = add i64 %7817, 2
  store i64 %7818, i64* %PC.i311
  %7819 = sub i32 %7813, %7815
  %7820 = icmp ult i32 %7813, %7815
  %7821 = zext i1 %7820 to i8
  %7822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7821, i8* %7822, align 1
  %7823 = and i32 %7819, 255
  %7824 = call i32 @llvm.ctpop.i32(i32 %7823)
  %7825 = trunc i32 %7824 to i8
  %7826 = and i8 %7825, 1
  %7827 = xor i8 %7826, 1
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7827, i8* %7828, align 1
  %7829 = xor i64 %7816, %7814
  %7830 = trunc i64 %7829 to i32
  %7831 = xor i32 %7830, %7819
  %7832 = lshr i32 %7831, 4
  %7833 = trunc i32 %7832 to i8
  %7834 = and i8 %7833, 1
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7834, i8* %7835, align 1
  %7836 = icmp eq i32 %7819, 0
  %7837 = zext i1 %7836 to i8
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7837, i8* %7838, align 1
  %7839 = lshr i32 %7819, 31
  %7840 = trunc i32 %7839 to i8
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7840, i8* %7841, align 1
  %7842 = lshr i32 %7813, 31
  %7843 = lshr i32 %7815, 31
  %7844 = xor i32 %7843, %7842
  %7845 = xor i32 %7839, %7842
  %7846 = add i32 %7845, %7844
  %7847 = icmp eq i32 %7846, 2
  %7848 = zext i1 %7847 to i8
  %7849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7848, i8* %7849, align 1
  store %struct.Memory* %loadMem_40295d, %struct.Memory** %MEMORY
  %loadMem_40295f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7851 = getelementptr inbounds %struct.GPR, %struct.GPR* %7850, i32 0, i32 33
  %7852 = getelementptr inbounds %struct.Reg, %struct.Reg* %7851, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %7852 to i64*
  %7853 = load i64, i64* %PC.i310
  %7854 = add i64 %7853, 114
  %7855 = load i64, i64* %PC.i310
  %7856 = add i64 %7855, 6
  %7857 = load i64, i64* %PC.i310
  %7858 = add i64 %7857, 6
  store i64 %7858, i64* %PC.i310
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7860 = load i8, i8* %7859, align 1
  %7861 = icmp ne i8 %7860, 0
  %7862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7863 = load i8, i8* %7862, align 1
  %7864 = icmp ne i8 %7863, 0
  %7865 = xor i1 %7861, %7864
  %7866 = xor i1 %7865, true
  %7867 = zext i1 %7866 to i8
  store i8 %7867, i8* %BRANCH_TAKEN, align 1
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7869 = select i1 %7865, i64 %7856, i64 %7854
  store i64 %7869, i64* %7868, align 8
  store %struct.Memory* %loadMem_40295f, %struct.Memory** %MEMORY
  %loadBr_40295f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40295f = icmp eq i8 %loadBr_40295f, 1
  br i1 %cmpBr_40295f, label %block_.L_4029d1, label %block_402965

block_402965:                                     ; preds = %block_.L_4028cb
  %loadMem_402965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 33
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %7872 to i64*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 1
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %RAX.i308 = bitcast %union.anon* %7875 to i64*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7877 = getelementptr inbounds %struct.GPR, %struct.GPR* %7876, i32 0, i32 15
  %7878 = getelementptr inbounds %struct.Reg, %struct.Reg* %7877, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %7878 to i64*
  %7879 = load i64, i64* %RBP.i309
  %7880 = sub i64 %7879, 1308
  %7881 = load i64, i64* %PC.i307
  %7882 = add i64 %7881, 6
  store i64 %7882, i64* %PC.i307
  %7883 = inttoptr i64 %7880 to i32*
  %7884 = load i32, i32* %7883
  %7885 = zext i32 %7884 to i64
  store i64 %7885, i64* %RAX.i308, align 8
  store %struct.Memory* %loadMem_402965, %struct.Memory** %MEMORY
  %loadMem_40296b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7887 = getelementptr inbounds %struct.GPR, %struct.GPR* %7886, i32 0, i32 33
  %7888 = getelementptr inbounds %struct.Reg, %struct.Reg* %7887, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %7888 to i64*
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7890 = getelementptr inbounds %struct.GPR, %struct.GPR* %7889, i32 0, i32 1
  %7891 = getelementptr inbounds %struct.Reg, %struct.Reg* %7890, i32 0, i32 0
  %EAX.i305 = bitcast %union.anon* %7891 to i32*
  %7892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7893 = getelementptr inbounds %struct.GPR, %struct.GPR* %7892, i32 0, i32 15
  %7894 = getelementptr inbounds %struct.Reg, %struct.Reg* %7893, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %7894 to i64*
  %7895 = load i64, i64* %RBP.i306
  %7896 = sub i64 %7895, 1380
  %7897 = load i32, i32* %EAX.i305
  %7898 = zext i32 %7897 to i64
  %7899 = load i64, i64* %PC.i304
  %7900 = add i64 %7899, 6
  store i64 %7900, i64* %PC.i304
  %7901 = inttoptr i64 %7896 to i32*
  store i32 %7897, i32* %7901
  store %struct.Memory* %loadMem_40296b, %struct.Memory** %MEMORY
  %loadMem_402971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 33
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %7904 to i64*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 1
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %RAX.i302 = bitcast %union.anon* %7907 to i64*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 15
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %7910 to i64*
  %7911 = load i64, i64* %RBP.i303
  %7912 = sub i64 %7911, 1304
  %7913 = load i64, i64* %PC.i301
  %7914 = add i64 %7913, 6
  store i64 %7914, i64* %PC.i301
  %7915 = inttoptr i64 %7912 to i32*
  %7916 = load i32, i32* %7915
  %7917 = zext i32 %7916 to i64
  store i64 %7917, i64* %RAX.i302, align 8
  store %struct.Memory* %loadMem_402971, %struct.Memory** %MEMORY
  %loadMem_402977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 33
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %7920 to i64*
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7922 = getelementptr inbounds %struct.GPR, %struct.GPR* %7921, i32 0, i32 1
  %7923 = getelementptr inbounds %struct.Reg, %struct.Reg* %7922, i32 0, i32 0
  %EAX.i299 = bitcast %union.anon* %7923 to i32*
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 15
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %7926 to i64*
  %7927 = load i64, i64* %RBP.i300
  %7928 = sub i64 %7927, 1308
  %7929 = load i32, i32* %EAX.i299
  %7930 = zext i32 %7929 to i64
  %7931 = load i64, i64* %PC.i298
  %7932 = add i64 %7931, 6
  store i64 %7932, i64* %PC.i298
  %7933 = inttoptr i64 %7928 to i32*
  store i32 %7929, i32* %7933
  store %struct.Memory* %loadMem_402977, %struct.Memory** %MEMORY
  %loadMem_40297d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7935 = getelementptr inbounds %struct.GPR, %struct.GPR* %7934, i32 0, i32 33
  %7936 = getelementptr inbounds %struct.Reg, %struct.Reg* %7935, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %7936 to i64*
  %7937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7938 = getelementptr inbounds %struct.GPR, %struct.GPR* %7937, i32 0, i32 1
  %7939 = getelementptr inbounds %struct.Reg, %struct.Reg* %7938, i32 0, i32 0
  %RAX.i296 = bitcast %union.anon* %7939 to i64*
  %7940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7941 = getelementptr inbounds %struct.GPR, %struct.GPR* %7940, i32 0, i32 15
  %7942 = getelementptr inbounds %struct.Reg, %struct.Reg* %7941, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %7942 to i64*
  %7943 = load i64, i64* %RBP.i297
  %7944 = sub i64 %7943, 1380
  %7945 = load i64, i64* %PC.i295
  %7946 = add i64 %7945, 6
  store i64 %7946, i64* %PC.i295
  %7947 = inttoptr i64 %7944 to i32*
  %7948 = load i32, i32* %7947
  %7949 = zext i32 %7948 to i64
  store i64 %7949, i64* %RAX.i296, align 8
  store %struct.Memory* %loadMem_40297d, %struct.Memory** %MEMORY
  %loadMem_402983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 33
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %7952 to i64*
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7954 = getelementptr inbounds %struct.GPR, %struct.GPR* %7953, i32 0, i32 1
  %7955 = getelementptr inbounds %struct.Reg, %struct.Reg* %7954, i32 0, i32 0
  %EAX.i293 = bitcast %union.anon* %7955 to i32*
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7957 = getelementptr inbounds %struct.GPR, %struct.GPR* %7956, i32 0, i32 15
  %7958 = getelementptr inbounds %struct.Reg, %struct.Reg* %7957, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %7958 to i64*
  %7959 = load i64, i64* %RBP.i294
  %7960 = sub i64 %7959, 1304
  %7961 = load i32, i32* %EAX.i293
  %7962 = zext i32 %7961 to i64
  %7963 = load i64, i64* %PC.i292
  %7964 = add i64 %7963, 6
  store i64 %7964, i64* %PC.i292
  %7965 = inttoptr i64 %7960 to i32*
  store i32 %7961, i32* %7965
  store %struct.Memory* %loadMem_402983, %struct.Memory** %MEMORY
  %loadMem_402989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7967 = getelementptr inbounds %struct.GPR, %struct.GPR* %7966, i32 0, i32 33
  %7968 = getelementptr inbounds %struct.Reg, %struct.Reg* %7967, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %7968 to i64*
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7970 = getelementptr inbounds %struct.GPR, %struct.GPR* %7969, i32 0, i32 1
  %7971 = getelementptr inbounds %struct.Reg, %struct.Reg* %7970, i32 0, i32 0
  %RAX.i290 = bitcast %union.anon* %7971 to i64*
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7973 = getelementptr inbounds %struct.GPR, %struct.GPR* %7972, i32 0, i32 15
  %7974 = getelementptr inbounds %struct.Reg, %struct.Reg* %7973, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %7974 to i64*
  %7975 = load i64, i64* %RBP.i291
  %7976 = sub i64 %7975, 1320
  %7977 = load i64, i64* %PC.i289
  %7978 = add i64 %7977, 6
  store i64 %7978, i64* %PC.i289
  %7979 = inttoptr i64 %7976 to i32*
  %7980 = load i32, i32* %7979
  %7981 = zext i32 %7980 to i64
  store i64 %7981, i64* %RAX.i290, align 8
  store %struct.Memory* %loadMem_402989, %struct.Memory** %MEMORY
  %loadMem_40298f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 33
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %7984 to i64*
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 1
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %EAX.i287 = bitcast %union.anon* %7987 to i32*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 15
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %7990 to i64*
  %7991 = load i64, i64* %RBP.i288
  %7992 = sub i64 %7991, 1380
  %7993 = load i32, i32* %EAX.i287
  %7994 = zext i32 %7993 to i64
  %7995 = load i64, i64* %PC.i286
  %7996 = add i64 %7995, 6
  store i64 %7996, i64* %PC.i286
  %7997 = inttoptr i64 %7992 to i32*
  store i32 %7993, i32* %7997
  store %struct.Memory* %loadMem_40298f, %struct.Memory** %MEMORY
  %loadMem_402995 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7999 = getelementptr inbounds %struct.GPR, %struct.GPR* %7998, i32 0, i32 33
  %8000 = getelementptr inbounds %struct.Reg, %struct.Reg* %7999, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %8000 to i64*
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 1
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %RAX.i284 = bitcast %union.anon* %8003 to i64*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 15
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %8006 to i64*
  %8007 = load i64, i64* %RBP.i285
  %8008 = sub i64 %8007, 1316
  %8009 = load i64, i64* %PC.i283
  %8010 = add i64 %8009, 6
  store i64 %8010, i64* %PC.i283
  %8011 = inttoptr i64 %8008 to i32*
  %8012 = load i32, i32* %8011
  %8013 = zext i32 %8012 to i64
  store i64 %8013, i64* %RAX.i284, align 8
  store %struct.Memory* %loadMem_402995, %struct.Memory** %MEMORY
  %loadMem_40299b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8015 = getelementptr inbounds %struct.GPR, %struct.GPR* %8014, i32 0, i32 33
  %8016 = getelementptr inbounds %struct.Reg, %struct.Reg* %8015, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %8016 to i64*
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8018 = getelementptr inbounds %struct.GPR, %struct.GPR* %8017, i32 0, i32 1
  %8019 = getelementptr inbounds %struct.Reg, %struct.Reg* %8018, i32 0, i32 0
  %EAX.i281 = bitcast %union.anon* %8019 to i32*
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8021 = getelementptr inbounds %struct.GPR, %struct.GPR* %8020, i32 0, i32 15
  %8022 = getelementptr inbounds %struct.Reg, %struct.Reg* %8021, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %8022 to i64*
  %8023 = load i64, i64* %RBP.i282
  %8024 = sub i64 %8023, 1320
  %8025 = load i32, i32* %EAX.i281
  %8026 = zext i32 %8025 to i64
  %8027 = load i64, i64* %PC.i280
  %8028 = add i64 %8027, 6
  store i64 %8028, i64* %PC.i280
  %8029 = inttoptr i64 %8024 to i32*
  store i32 %8025, i32* %8029
  store %struct.Memory* %loadMem_40299b, %struct.Memory** %MEMORY
  %loadMem_4029a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8031 = getelementptr inbounds %struct.GPR, %struct.GPR* %8030, i32 0, i32 33
  %8032 = getelementptr inbounds %struct.Reg, %struct.Reg* %8031, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %8032 to i64*
  %8033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8034 = getelementptr inbounds %struct.GPR, %struct.GPR* %8033, i32 0, i32 1
  %8035 = getelementptr inbounds %struct.Reg, %struct.Reg* %8034, i32 0, i32 0
  %RAX.i278 = bitcast %union.anon* %8035 to i64*
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 15
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %8038 to i64*
  %8039 = load i64, i64* %RBP.i279
  %8040 = sub i64 %8039, 1380
  %8041 = load i64, i64* %PC.i277
  %8042 = add i64 %8041, 6
  store i64 %8042, i64* %PC.i277
  %8043 = inttoptr i64 %8040 to i32*
  %8044 = load i32, i32* %8043
  %8045 = zext i32 %8044 to i64
  store i64 %8045, i64* %RAX.i278, align 8
  store %struct.Memory* %loadMem_4029a1, %struct.Memory** %MEMORY
  %loadMem_4029a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 33
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %8048 to i64*
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8050 = getelementptr inbounds %struct.GPR, %struct.GPR* %8049, i32 0, i32 1
  %8051 = getelementptr inbounds %struct.Reg, %struct.Reg* %8050, i32 0, i32 0
  %EAX.i275 = bitcast %union.anon* %8051 to i32*
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 15
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %RBP.i276 = bitcast %union.anon* %8054 to i64*
  %8055 = load i64, i64* %RBP.i276
  %8056 = sub i64 %8055, 1316
  %8057 = load i32, i32* %EAX.i275
  %8058 = zext i32 %8057 to i64
  %8059 = load i64, i64* %PC.i274
  %8060 = add i64 %8059, 6
  store i64 %8060, i64* %PC.i274
  %8061 = inttoptr i64 %8056 to i32*
  store i32 %8057, i32* %8061
  store %struct.Memory* %loadMem_4029a7, %struct.Memory** %MEMORY
  %loadMem_4029ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8063 = getelementptr inbounds %struct.GPR, %struct.GPR* %8062, i32 0, i32 33
  %8064 = getelementptr inbounds %struct.Reg, %struct.Reg* %8063, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %8064 to i64*
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8066 = getelementptr inbounds %struct.GPR, %struct.GPR* %8065, i32 0, i32 1
  %8067 = getelementptr inbounds %struct.Reg, %struct.Reg* %8066, i32 0, i32 0
  %RAX.i272 = bitcast %union.anon* %8067 to i64*
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8069 = getelementptr inbounds %struct.GPR, %struct.GPR* %8068, i32 0, i32 15
  %8070 = getelementptr inbounds %struct.Reg, %struct.Reg* %8069, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %8070 to i64*
  %8071 = load i64, i64* %RBP.i273
  %8072 = sub i64 %8071, 1332
  %8073 = load i64, i64* %PC.i271
  %8074 = add i64 %8073, 6
  store i64 %8074, i64* %PC.i271
  %8075 = inttoptr i64 %8072 to i32*
  %8076 = load i32, i32* %8075
  %8077 = zext i32 %8076 to i64
  store i64 %8077, i64* %RAX.i272, align 8
  store %struct.Memory* %loadMem_4029ad, %struct.Memory** %MEMORY
  %loadMem_4029b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8079 = getelementptr inbounds %struct.GPR, %struct.GPR* %8078, i32 0, i32 33
  %8080 = getelementptr inbounds %struct.Reg, %struct.Reg* %8079, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %8080 to i64*
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8082 = getelementptr inbounds %struct.GPR, %struct.GPR* %8081, i32 0, i32 1
  %8083 = getelementptr inbounds %struct.Reg, %struct.Reg* %8082, i32 0, i32 0
  %EAX.i269 = bitcast %union.anon* %8083 to i32*
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8085 = getelementptr inbounds %struct.GPR, %struct.GPR* %8084, i32 0, i32 15
  %8086 = getelementptr inbounds %struct.Reg, %struct.Reg* %8085, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %8086 to i64*
  %8087 = load i64, i64* %RBP.i270
  %8088 = sub i64 %8087, 1380
  %8089 = load i32, i32* %EAX.i269
  %8090 = zext i32 %8089 to i64
  %8091 = load i64, i64* %PC.i268
  %8092 = add i64 %8091, 6
  store i64 %8092, i64* %PC.i268
  %8093 = inttoptr i64 %8088 to i32*
  store i32 %8089, i32* %8093
  store %struct.Memory* %loadMem_4029b3, %struct.Memory** %MEMORY
  %loadMem_4029b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8095 = getelementptr inbounds %struct.GPR, %struct.GPR* %8094, i32 0, i32 33
  %8096 = getelementptr inbounds %struct.Reg, %struct.Reg* %8095, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %8096 to i64*
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8098 = getelementptr inbounds %struct.GPR, %struct.GPR* %8097, i32 0, i32 1
  %8099 = getelementptr inbounds %struct.Reg, %struct.Reg* %8098, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %8099 to i64*
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 15
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %8102 to i64*
  %8103 = load i64, i64* %RBP.i267
  %8104 = sub i64 %8103, 1328
  %8105 = load i64, i64* %PC.i265
  %8106 = add i64 %8105, 6
  store i64 %8106, i64* %PC.i265
  %8107 = inttoptr i64 %8104 to i32*
  %8108 = load i32, i32* %8107
  %8109 = zext i32 %8108 to i64
  store i64 %8109, i64* %RAX.i266, align 8
  store %struct.Memory* %loadMem_4029b9, %struct.Memory** %MEMORY
  %loadMem_4029bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 33
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %8112 to i64*
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8114 = getelementptr inbounds %struct.GPR, %struct.GPR* %8113, i32 0, i32 1
  %8115 = getelementptr inbounds %struct.Reg, %struct.Reg* %8114, i32 0, i32 0
  %EAX.i263 = bitcast %union.anon* %8115 to i32*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8117 = getelementptr inbounds %struct.GPR, %struct.GPR* %8116, i32 0, i32 15
  %8118 = getelementptr inbounds %struct.Reg, %struct.Reg* %8117, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %8118 to i64*
  %8119 = load i64, i64* %RBP.i264
  %8120 = sub i64 %8119, 1332
  %8121 = load i32, i32* %EAX.i263
  %8122 = zext i32 %8121 to i64
  %8123 = load i64, i64* %PC.i262
  %8124 = add i64 %8123, 6
  store i64 %8124, i64* %PC.i262
  %8125 = inttoptr i64 %8120 to i32*
  store i32 %8121, i32* %8125
  store %struct.Memory* %loadMem_4029bf, %struct.Memory** %MEMORY
  %loadMem_4029c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8127 = getelementptr inbounds %struct.GPR, %struct.GPR* %8126, i32 0, i32 33
  %8128 = getelementptr inbounds %struct.Reg, %struct.Reg* %8127, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %8128 to i64*
  %8129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8130 = getelementptr inbounds %struct.GPR, %struct.GPR* %8129, i32 0, i32 1
  %8131 = getelementptr inbounds %struct.Reg, %struct.Reg* %8130, i32 0, i32 0
  %RAX.i260 = bitcast %union.anon* %8131 to i64*
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8133 = getelementptr inbounds %struct.GPR, %struct.GPR* %8132, i32 0, i32 15
  %8134 = getelementptr inbounds %struct.Reg, %struct.Reg* %8133, i32 0, i32 0
  %RBP.i261 = bitcast %union.anon* %8134 to i64*
  %8135 = load i64, i64* %RBP.i261
  %8136 = sub i64 %8135, 1380
  %8137 = load i64, i64* %PC.i259
  %8138 = add i64 %8137, 6
  store i64 %8138, i64* %PC.i259
  %8139 = inttoptr i64 %8136 to i32*
  %8140 = load i32, i32* %8139
  %8141 = zext i32 %8140 to i64
  store i64 %8141, i64* %RAX.i260, align 8
  store %struct.Memory* %loadMem_4029c5, %struct.Memory** %MEMORY
  %loadMem_4029cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8143 = getelementptr inbounds %struct.GPR, %struct.GPR* %8142, i32 0, i32 33
  %8144 = getelementptr inbounds %struct.Reg, %struct.Reg* %8143, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %8144 to i64*
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8146 = getelementptr inbounds %struct.GPR, %struct.GPR* %8145, i32 0, i32 1
  %8147 = getelementptr inbounds %struct.Reg, %struct.Reg* %8146, i32 0, i32 0
  %EAX.i257 = bitcast %union.anon* %8147 to i32*
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8149 = getelementptr inbounds %struct.GPR, %struct.GPR* %8148, i32 0, i32 15
  %8150 = getelementptr inbounds %struct.Reg, %struct.Reg* %8149, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %8150 to i64*
  %8151 = load i64, i64* %RBP.i258
  %8152 = sub i64 %8151, 1328
  %8153 = load i32, i32* %EAX.i257
  %8154 = zext i32 %8153 to i64
  %8155 = load i64, i64* %PC.i256
  %8156 = add i64 %8155, 6
  store i64 %8156, i64* %PC.i256
  %8157 = inttoptr i64 %8152 to i32*
  store i32 %8153, i32* %8157
  store %struct.Memory* %loadMem_4029cb, %struct.Memory** %MEMORY
  br label %block_.L_4029d1

block_.L_4029d1:                                  ; preds = %block_402965, %block_.L_4028cb
  %loadMem_4029d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8159 = getelementptr inbounds %struct.GPR, %struct.GPR* %8158, i32 0, i32 33
  %8160 = getelementptr inbounds %struct.Reg, %struct.Reg* %8159, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %8160 to i64*
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8162 = getelementptr inbounds %struct.GPR, %struct.GPR* %8161, i32 0, i32 1
  %8163 = getelementptr inbounds %struct.Reg, %struct.Reg* %8162, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %8163 to i64*
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8165 = getelementptr inbounds %struct.GPR, %struct.GPR* %8164, i32 0, i32 15
  %8166 = getelementptr inbounds %struct.Reg, %struct.Reg* %8165, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %8166 to i64*
  %8167 = load i64, i64* %RBP.i255
  %8168 = sub i64 %8167, 1316
  %8169 = load i64, i64* %PC.i253
  %8170 = add i64 %8169, 6
  store i64 %8170, i64* %PC.i253
  %8171 = inttoptr i64 %8168 to i32*
  %8172 = load i32, i32* %8171
  %8173 = zext i32 %8172 to i64
  store i64 %8173, i64* %RAX.i254, align 8
  store %struct.Memory* %loadMem_4029d1, %struct.Memory** %MEMORY
  %loadMem_4029d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8175 = getelementptr inbounds %struct.GPR, %struct.GPR* %8174, i32 0, i32 33
  %8176 = getelementptr inbounds %struct.Reg, %struct.Reg* %8175, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %8176 to i64*
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8178 = getelementptr inbounds %struct.GPR, %struct.GPR* %8177, i32 0, i32 1
  %8179 = getelementptr inbounds %struct.Reg, %struct.Reg* %8178, i32 0, i32 0
  %RAX.i251 = bitcast %union.anon* %8179 to i64*
  %8180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8181 = getelementptr inbounds %struct.GPR, %struct.GPR* %8180, i32 0, i32 15
  %8182 = getelementptr inbounds %struct.Reg, %struct.Reg* %8181, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %8182 to i64*
  %8183 = load i64, i64* %RAX.i251
  %8184 = load i64, i64* %RBP.i252
  %8185 = sub i64 %8184, 1304
  %8186 = load i64, i64* %PC.i250
  %8187 = add i64 %8186, 6
  store i64 %8187, i64* %PC.i250
  %8188 = trunc i64 %8183 to i32
  %8189 = inttoptr i64 %8185 to i32*
  %8190 = load i32, i32* %8189
  %8191 = sub i32 %8188, %8190
  %8192 = zext i32 %8191 to i64
  store i64 %8192, i64* %RAX.i251, align 8
  %8193 = icmp ult i32 %8188, %8190
  %8194 = zext i1 %8193 to i8
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8194, i8* %8195, align 1
  %8196 = and i32 %8191, 255
  %8197 = call i32 @llvm.ctpop.i32(i32 %8196)
  %8198 = trunc i32 %8197 to i8
  %8199 = and i8 %8198, 1
  %8200 = xor i8 %8199, 1
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8200, i8* %8201, align 1
  %8202 = xor i32 %8190, %8188
  %8203 = xor i32 %8202, %8191
  %8204 = lshr i32 %8203, 4
  %8205 = trunc i32 %8204 to i8
  %8206 = and i8 %8205, 1
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8206, i8* %8207, align 1
  %8208 = icmp eq i32 %8191, 0
  %8209 = zext i1 %8208 to i8
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8209, i8* %8210, align 1
  %8211 = lshr i32 %8191, 31
  %8212 = trunc i32 %8211 to i8
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8212, i8* %8213, align 1
  %8214 = lshr i32 %8188, 31
  %8215 = lshr i32 %8190, 31
  %8216 = xor i32 %8215, %8214
  %8217 = xor i32 %8211, %8214
  %8218 = add i32 %8217, %8216
  %8219 = icmp eq i32 %8218, 2
  %8220 = zext i1 %8219 to i8
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8220, i8* %8221, align 1
  store %struct.Memory* %loadMem_4029d7, %struct.Memory** %MEMORY
  %loadMem_4029dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8223 = getelementptr inbounds %struct.GPR, %struct.GPR* %8222, i32 0, i32 33
  %8224 = getelementptr inbounds %struct.Reg, %struct.Reg* %8223, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %8224 to i64*
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8226 = getelementptr inbounds %struct.GPR, %struct.GPR* %8225, i32 0, i32 5
  %8227 = getelementptr inbounds %struct.Reg, %struct.Reg* %8226, i32 0, i32 0
  %RCX.i248 = bitcast %union.anon* %8227 to i64*
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8229 = getelementptr inbounds %struct.GPR, %struct.GPR* %8228, i32 0, i32 15
  %8230 = getelementptr inbounds %struct.Reg, %struct.Reg* %8229, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %8230 to i64*
  %8231 = load i64, i64* %RBP.i249
  %8232 = sub i64 %8231, 1312
  %8233 = load i64, i64* %PC.i247
  %8234 = add i64 %8233, 6
  store i64 %8234, i64* %PC.i247
  %8235 = inttoptr i64 %8232 to i32*
  %8236 = load i32, i32* %8235
  %8237 = zext i32 %8236 to i64
  store i64 %8237, i64* %RCX.i248, align 8
  store %struct.Memory* %loadMem_4029dd, %struct.Memory** %MEMORY
  %loadMem_4029e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8239 = getelementptr inbounds %struct.GPR, %struct.GPR* %8238, i32 0, i32 33
  %8240 = getelementptr inbounds %struct.Reg, %struct.Reg* %8239, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %8240 to i64*
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8242 = getelementptr inbounds %struct.GPR, %struct.GPR* %8241, i32 0, i32 5
  %8243 = getelementptr inbounds %struct.Reg, %struct.Reg* %8242, i32 0, i32 0
  %RCX.i245 = bitcast %union.anon* %8243 to i64*
  %8244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8245 = getelementptr inbounds %struct.GPR, %struct.GPR* %8244, i32 0, i32 15
  %8246 = getelementptr inbounds %struct.Reg, %struct.Reg* %8245, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %8246 to i64*
  %8247 = load i64, i64* %RCX.i245
  %8248 = load i64, i64* %RBP.i246
  %8249 = sub i64 %8248, 1300
  %8250 = load i64, i64* %PC.i244
  %8251 = add i64 %8250, 6
  store i64 %8251, i64* %PC.i244
  %8252 = trunc i64 %8247 to i32
  %8253 = inttoptr i64 %8249 to i32*
  %8254 = load i32, i32* %8253
  %8255 = sub i32 %8252, %8254
  %8256 = zext i32 %8255 to i64
  store i64 %8256, i64* %RCX.i245, align 8
  %8257 = icmp ult i32 %8252, %8254
  %8258 = zext i1 %8257 to i8
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8258, i8* %8259, align 1
  %8260 = and i32 %8255, 255
  %8261 = call i32 @llvm.ctpop.i32(i32 %8260)
  %8262 = trunc i32 %8261 to i8
  %8263 = and i8 %8262, 1
  %8264 = xor i8 %8263, 1
  %8265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8264, i8* %8265, align 1
  %8266 = xor i32 %8254, %8252
  %8267 = xor i32 %8266, %8255
  %8268 = lshr i32 %8267, 4
  %8269 = trunc i32 %8268 to i8
  %8270 = and i8 %8269, 1
  %8271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8270, i8* %8271, align 1
  %8272 = icmp eq i32 %8255, 0
  %8273 = zext i1 %8272 to i8
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8273, i8* %8274, align 1
  %8275 = lshr i32 %8255, 31
  %8276 = trunc i32 %8275 to i8
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8276, i8* %8277, align 1
  %8278 = lshr i32 %8252, 31
  %8279 = lshr i32 %8254, 31
  %8280 = xor i32 %8279, %8278
  %8281 = xor i32 %8275, %8278
  %8282 = add i32 %8281, %8280
  %8283 = icmp eq i32 %8282, 2
  %8284 = zext i1 %8283 to i8
  %8285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8284, i8* %8285, align 1
  store %struct.Memory* %loadMem_4029e3, %struct.Memory** %MEMORY
  %loadMem_4029e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8287 = getelementptr inbounds %struct.GPR, %struct.GPR* %8286, i32 0, i32 33
  %8288 = getelementptr inbounds %struct.Reg, %struct.Reg* %8287, i32 0, i32 0
  %PC.i241 = bitcast %union.anon* %8288 to i64*
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8290 = getelementptr inbounds %struct.GPR, %struct.GPR* %8289, i32 0, i32 1
  %8291 = getelementptr inbounds %struct.Reg, %struct.Reg* %8290, i32 0, i32 0
  %EAX.i242 = bitcast %union.anon* %8291 to i32*
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8293 = getelementptr inbounds %struct.GPR, %struct.GPR* %8292, i32 0, i32 5
  %8294 = getelementptr inbounds %struct.Reg, %struct.Reg* %8293, i32 0, i32 0
  %ECX.i243 = bitcast %union.anon* %8294 to i32*
  %8295 = load i32, i32* %EAX.i242
  %8296 = zext i32 %8295 to i64
  %8297 = load i32, i32* %ECX.i243
  %8298 = zext i32 %8297 to i64
  %8299 = load i64, i64* %PC.i241
  %8300 = add i64 %8299, 2
  store i64 %8300, i64* %PC.i241
  %8301 = sub i32 %8295, %8297
  %8302 = icmp ult i32 %8295, %8297
  %8303 = zext i1 %8302 to i8
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8303, i8* %8304, align 1
  %8305 = and i32 %8301, 255
  %8306 = call i32 @llvm.ctpop.i32(i32 %8305)
  %8307 = trunc i32 %8306 to i8
  %8308 = and i8 %8307, 1
  %8309 = xor i8 %8308, 1
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8309, i8* %8310, align 1
  %8311 = xor i64 %8298, %8296
  %8312 = trunc i64 %8311 to i32
  %8313 = xor i32 %8312, %8301
  %8314 = lshr i32 %8313, 4
  %8315 = trunc i32 %8314 to i8
  %8316 = and i8 %8315, 1
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8316, i8* %8317, align 1
  %8318 = icmp eq i32 %8301, 0
  %8319 = zext i1 %8318 to i8
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8319, i8* %8320, align 1
  %8321 = lshr i32 %8301, 31
  %8322 = trunc i32 %8321 to i8
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8322, i8* %8323, align 1
  %8324 = lshr i32 %8295, 31
  %8325 = lshr i32 %8297, 31
  %8326 = xor i32 %8325, %8324
  %8327 = xor i32 %8321, %8324
  %8328 = add i32 %8327, %8326
  %8329 = icmp eq i32 %8328, 2
  %8330 = zext i1 %8329 to i8
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8330, i8* %8331, align 1
  store %struct.Memory* %loadMem_4029e9, %struct.Memory** %MEMORY
  %loadMem_4029eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8333 = getelementptr inbounds %struct.GPR, %struct.GPR* %8332, i32 0, i32 33
  %8334 = getelementptr inbounds %struct.Reg, %struct.Reg* %8333, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %8334 to i64*
  %8335 = load i64, i64* %PC.i240
  %8336 = add i64 %8335, 114
  %8337 = load i64, i64* %PC.i240
  %8338 = add i64 %8337, 6
  %8339 = load i64, i64* %PC.i240
  %8340 = add i64 %8339, 6
  store i64 %8340, i64* %PC.i240
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8342 = load i8, i8* %8341, align 1
  %8343 = icmp ne i8 %8342, 0
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8345 = load i8, i8* %8344, align 1
  %8346 = icmp ne i8 %8345, 0
  %8347 = xor i1 %8343, %8346
  %8348 = xor i1 %8347, true
  %8349 = zext i1 %8348 to i8
  store i8 %8349, i8* %BRANCH_TAKEN, align 1
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8351 = select i1 %8347, i64 %8338, i64 %8336
  store i64 %8351, i64* %8350, align 8
  store %struct.Memory* %loadMem_4029eb, %struct.Memory** %MEMORY
  %loadBr_4029eb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4029eb = icmp eq i8 %loadBr_4029eb, 1
  br i1 %cmpBr_4029eb, label %block_.L_402a5d, label %block_4029f1

block_4029f1:                                     ; preds = %block_.L_4029d1
  %loadMem_4029f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8353 = getelementptr inbounds %struct.GPR, %struct.GPR* %8352, i32 0, i32 33
  %8354 = getelementptr inbounds %struct.Reg, %struct.Reg* %8353, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %8354 to i64*
  %8355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8356 = getelementptr inbounds %struct.GPR, %struct.GPR* %8355, i32 0, i32 1
  %8357 = getelementptr inbounds %struct.Reg, %struct.Reg* %8356, i32 0, i32 0
  %RAX.i238 = bitcast %union.anon* %8357 to i64*
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8359 = getelementptr inbounds %struct.GPR, %struct.GPR* %8358, i32 0, i32 15
  %8360 = getelementptr inbounds %struct.Reg, %struct.Reg* %8359, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %8360 to i64*
  %8361 = load i64, i64* %RBP.i239
  %8362 = sub i64 %8361, 1304
  %8363 = load i64, i64* %PC.i237
  %8364 = add i64 %8363, 6
  store i64 %8364, i64* %PC.i237
  %8365 = inttoptr i64 %8362 to i32*
  %8366 = load i32, i32* %8365
  %8367 = zext i32 %8366 to i64
  store i64 %8367, i64* %RAX.i238, align 8
  store %struct.Memory* %loadMem_4029f1, %struct.Memory** %MEMORY
  %loadMem_4029f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 33
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %8370 to i64*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 1
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %EAX.i235 = bitcast %union.anon* %8373 to i32*
  %8374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8375 = getelementptr inbounds %struct.GPR, %struct.GPR* %8374, i32 0, i32 15
  %8376 = getelementptr inbounds %struct.Reg, %struct.Reg* %8375, i32 0, i32 0
  %RBP.i236 = bitcast %union.anon* %8376 to i64*
  %8377 = load i64, i64* %RBP.i236
  %8378 = sub i64 %8377, 1384
  %8379 = load i32, i32* %EAX.i235
  %8380 = zext i32 %8379 to i64
  %8381 = load i64, i64* %PC.i234
  %8382 = add i64 %8381, 6
  store i64 %8382, i64* %PC.i234
  %8383 = inttoptr i64 %8378 to i32*
  store i32 %8379, i32* %8383
  store %struct.Memory* %loadMem_4029f7, %struct.Memory** %MEMORY
  %loadMem_4029fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 33
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8388 = getelementptr inbounds %struct.GPR, %struct.GPR* %8387, i32 0, i32 1
  %8389 = getelementptr inbounds %struct.Reg, %struct.Reg* %8388, i32 0, i32 0
  %RAX.i232 = bitcast %union.anon* %8389 to i64*
  %8390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8391 = getelementptr inbounds %struct.GPR, %struct.GPR* %8390, i32 0, i32 15
  %8392 = getelementptr inbounds %struct.Reg, %struct.Reg* %8391, i32 0, i32 0
  %RBP.i233 = bitcast %union.anon* %8392 to i64*
  %8393 = load i64, i64* %RBP.i233
  %8394 = sub i64 %8393, 1300
  %8395 = load i64, i64* %PC.i231
  %8396 = add i64 %8395, 6
  store i64 %8396, i64* %PC.i231
  %8397 = inttoptr i64 %8394 to i32*
  %8398 = load i32, i32* %8397
  %8399 = zext i32 %8398 to i64
  store i64 %8399, i64* %RAX.i232, align 8
  store %struct.Memory* %loadMem_4029fd, %struct.Memory** %MEMORY
  %loadMem_402a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 33
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 1
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %EAX.i229 = bitcast %union.anon* %8405 to i32*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 15
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %8408 to i64*
  %8409 = load i64, i64* %RBP.i230
  %8410 = sub i64 %8409, 1304
  %8411 = load i32, i32* %EAX.i229
  %8412 = zext i32 %8411 to i64
  %8413 = load i64, i64* %PC.i228
  %8414 = add i64 %8413, 6
  store i64 %8414, i64* %PC.i228
  %8415 = inttoptr i64 %8410 to i32*
  store i32 %8411, i32* %8415
  store %struct.Memory* %loadMem_402a03, %struct.Memory** %MEMORY
  %loadMem_402a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8417 = getelementptr inbounds %struct.GPR, %struct.GPR* %8416, i32 0, i32 33
  %8418 = getelementptr inbounds %struct.Reg, %struct.Reg* %8417, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %8418 to i64*
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 1
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %8421 to i64*
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 15
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %RBP.i227 = bitcast %union.anon* %8424 to i64*
  %8425 = load i64, i64* %RBP.i227
  %8426 = sub i64 %8425, 1384
  %8427 = load i64, i64* %PC.i225
  %8428 = add i64 %8427, 6
  store i64 %8428, i64* %PC.i225
  %8429 = inttoptr i64 %8426 to i32*
  %8430 = load i32, i32* %8429
  %8431 = zext i32 %8430 to i64
  store i64 %8431, i64* %RAX.i226, align 8
  store %struct.Memory* %loadMem_402a09, %struct.Memory** %MEMORY
  %loadMem_402a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 33
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 1
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %EAX.i223 = bitcast %union.anon* %8437 to i32*
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 15
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %RBP.i224 = bitcast %union.anon* %8440 to i64*
  %8441 = load i64, i64* %RBP.i224
  %8442 = sub i64 %8441, 1300
  %8443 = load i32, i32* %EAX.i223
  %8444 = zext i32 %8443 to i64
  %8445 = load i64, i64* %PC.i222
  %8446 = add i64 %8445, 6
  store i64 %8446, i64* %PC.i222
  %8447 = inttoptr i64 %8442 to i32*
  store i32 %8443, i32* %8447
  store %struct.Memory* %loadMem_402a0f, %struct.Memory** %MEMORY
  %loadMem_402a15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 33
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %8450 to i64*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 1
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %RAX.i220 = bitcast %union.anon* %8453 to i64*
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8455 = getelementptr inbounds %struct.GPR, %struct.GPR* %8454, i32 0, i32 15
  %8456 = getelementptr inbounds %struct.Reg, %struct.Reg* %8455, i32 0, i32 0
  %RBP.i221 = bitcast %union.anon* %8456 to i64*
  %8457 = load i64, i64* %RBP.i221
  %8458 = sub i64 %8457, 1316
  %8459 = load i64, i64* %PC.i219
  %8460 = add i64 %8459, 6
  store i64 %8460, i64* %PC.i219
  %8461 = inttoptr i64 %8458 to i32*
  %8462 = load i32, i32* %8461
  %8463 = zext i32 %8462 to i64
  store i64 %8463, i64* %RAX.i220, align 8
  store %struct.Memory* %loadMem_402a15, %struct.Memory** %MEMORY
  %loadMem_402a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 33
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %8466 to i64*
  %8467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8468 = getelementptr inbounds %struct.GPR, %struct.GPR* %8467, i32 0, i32 1
  %8469 = getelementptr inbounds %struct.Reg, %struct.Reg* %8468, i32 0, i32 0
  %EAX.i217 = bitcast %union.anon* %8469 to i32*
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8471 = getelementptr inbounds %struct.GPR, %struct.GPR* %8470, i32 0, i32 15
  %8472 = getelementptr inbounds %struct.Reg, %struct.Reg* %8471, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %8472 to i64*
  %8473 = load i64, i64* %RBP.i218
  %8474 = sub i64 %8473, 1384
  %8475 = load i32, i32* %EAX.i217
  %8476 = zext i32 %8475 to i64
  %8477 = load i64, i64* %PC.i216
  %8478 = add i64 %8477, 6
  store i64 %8478, i64* %PC.i216
  %8479 = inttoptr i64 %8474 to i32*
  store i32 %8475, i32* %8479
  store %struct.Memory* %loadMem_402a1b, %struct.Memory** %MEMORY
  %loadMem_402a21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8481 = getelementptr inbounds %struct.GPR, %struct.GPR* %8480, i32 0, i32 33
  %8482 = getelementptr inbounds %struct.Reg, %struct.Reg* %8481, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %8482 to i64*
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8484 = getelementptr inbounds %struct.GPR, %struct.GPR* %8483, i32 0, i32 1
  %8485 = getelementptr inbounds %struct.Reg, %struct.Reg* %8484, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %8485 to i64*
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8487 = getelementptr inbounds %struct.GPR, %struct.GPR* %8486, i32 0, i32 15
  %8488 = getelementptr inbounds %struct.Reg, %struct.Reg* %8487, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %8488 to i64*
  %8489 = load i64, i64* %RBP.i215
  %8490 = sub i64 %8489, 1312
  %8491 = load i64, i64* %PC.i213
  %8492 = add i64 %8491, 6
  store i64 %8492, i64* %PC.i213
  %8493 = inttoptr i64 %8490 to i32*
  %8494 = load i32, i32* %8493
  %8495 = zext i32 %8494 to i64
  store i64 %8495, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_402a21, %struct.Memory** %MEMORY
  %loadMem_402a27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 33
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8498 to i64*
  %8499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8500 = getelementptr inbounds %struct.GPR, %struct.GPR* %8499, i32 0, i32 1
  %8501 = getelementptr inbounds %struct.Reg, %struct.Reg* %8500, i32 0, i32 0
  %EAX.i211 = bitcast %union.anon* %8501 to i32*
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8503 = getelementptr inbounds %struct.GPR, %struct.GPR* %8502, i32 0, i32 15
  %8504 = getelementptr inbounds %struct.Reg, %struct.Reg* %8503, i32 0, i32 0
  %RBP.i212 = bitcast %union.anon* %8504 to i64*
  %8505 = load i64, i64* %RBP.i212
  %8506 = sub i64 %8505, 1316
  %8507 = load i32, i32* %EAX.i211
  %8508 = zext i32 %8507 to i64
  %8509 = load i64, i64* %PC.i210
  %8510 = add i64 %8509, 6
  store i64 %8510, i64* %PC.i210
  %8511 = inttoptr i64 %8506 to i32*
  store i32 %8507, i32* %8511
  store %struct.Memory* %loadMem_402a27, %struct.Memory** %MEMORY
  %loadMem_402a2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 33
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %8514 to i64*
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8516 = getelementptr inbounds %struct.GPR, %struct.GPR* %8515, i32 0, i32 1
  %8517 = getelementptr inbounds %struct.Reg, %struct.Reg* %8516, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %8517 to i64*
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8519 = getelementptr inbounds %struct.GPR, %struct.GPR* %8518, i32 0, i32 15
  %8520 = getelementptr inbounds %struct.Reg, %struct.Reg* %8519, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %8520 to i64*
  %8521 = load i64, i64* %RBP.i209
  %8522 = sub i64 %8521, 1384
  %8523 = load i64, i64* %PC.i207
  %8524 = add i64 %8523, 6
  store i64 %8524, i64* %PC.i207
  %8525 = inttoptr i64 %8522 to i32*
  %8526 = load i32, i32* %8525
  %8527 = zext i32 %8526 to i64
  store i64 %8527, i64* %RAX.i208, align 8
  store %struct.Memory* %loadMem_402a2d, %struct.Memory** %MEMORY
  %loadMem_402a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 1
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %EAX.i205 = bitcast %union.anon* %8533 to i32*
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 15
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %RBP.i206 = bitcast %union.anon* %8536 to i64*
  %8537 = load i64, i64* %RBP.i206
  %8538 = sub i64 %8537, 1312
  %8539 = load i32, i32* %EAX.i205
  %8540 = zext i32 %8539 to i64
  %8541 = load i64, i64* %PC.i204
  %8542 = add i64 %8541, 6
  store i64 %8542, i64* %PC.i204
  %8543 = inttoptr i64 %8538 to i32*
  store i32 %8539, i32* %8543
  store %struct.Memory* %loadMem_402a33, %struct.Memory** %MEMORY
  %loadMem_402a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8545 = getelementptr inbounds %struct.GPR, %struct.GPR* %8544, i32 0, i32 33
  %8546 = getelementptr inbounds %struct.Reg, %struct.Reg* %8545, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %8546 to i64*
  %8547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8548 = getelementptr inbounds %struct.GPR, %struct.GPR* %8547, i32 0, i32 1
  %8549 = getelementptr inbounds %struct.Reg, %struct.Reg* %8548, i32 0, i32 0
  %RAX.i202 = bitcast %union.anon* %8549 to i64*
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8551 = getelementptr inbounds %struct.GPR, %struct.GPR* %8550, i32 0, i32 15
  %8552 = getelementptr inbounds %struct.Reg, %struct.Reg* %8551, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %8552 to i64*
  %8553 = load i64, i64* %RBP.i203
  %8554 = sub i64 %8553, 1328
  %8555 = load i64, i64* %PC.i201
  %8556 = add i64 %8555, 6
  store i64 %8556, i64* %PC.i201
  %8557 = inttoptr i64 %8554 to i32*
  %8558 = load i32, i32* %8557
  %8559 = zext i32 %8558 to i64
  store i64 %8559, i64* %RAX.i202, align 8
  store %struct.Memory* %loadMem_402a39, %struct.Memory** %MEMORY
  %loadMem_402a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 33
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %8562 to i64*
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 1
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %EAX.i199 = bitcast %union.anon* %8565 to i32*
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 15
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %RBP.i200 = bitcast %union.anon* %8568 to i64*
  %8569 = load i64, i64* %RBP.i200
  %8570 = sub i64 %8569, 1384
  %8571 = load i32, i32* %EAX.i199
  %8572 = zext i32 %8571 to i64
  %8573 = load i64, i64* %PC.i198
  %8574 = add i64 %8573, 6
  store i64 %8574, i64* %PC.i198
  %8575 = inttoptr i64 %8570 to i32*
  store i32 %8571, i32* %8575
  store %struct.Memory* %loadMem_402a3f, %struct.Memory** %MEMORY
  %loadMem_402a45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8577 = getelementptr inbounds %struct.GPR, %struct.GPR* %8576, i32 0, i32 33
  %8578 = getelementptr inbounds %struct.Reg, %struct.Reg* %8577, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %8578 to i64*
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8580 = getelementptr inbounds %struct.GPR, %struct.GPR* %8579, i32 0, i32 1
  %8581 = getelementptr inbounds %struct.Reg, %struct.Reg* %8580, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %8581 to i64*
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 15
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %RBP.i197 = bitcast %union.anon* %8584 to i64*
  %8585 = load i64, i64* %RBP.i197
  %8586 = sub i64 %8585, 1324
  %8587 = load i64, i64* %PC.i195
  %8588 = add i64 %8587, 6
  store i64 %8588, i64* %PC.i195
  %8589 = inttoptr i64 %8586 to i32*
  %8590 = load i32, i32* %8589
  %8591 = zext i32 %8590 to i64
  store i64 %8591, i64* %RAX.i196, align 8
  store %struct.Memory* %loadMem_402a45, %struct.Memory** %MEMORY
  %loadMem_402a4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8593 = getelementptr inbounds %struct.GPR, %struct.GPR* %8592, i32 0, i32 33
  %8594 = getelementptr inbounds %struct.Reg, %struct.Reg* %8593, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %8594 to i64*
  %8595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8596 = getelementptr inbounds %struct.GPR, %struct.GPR* %8595, i32 0, i32 1
  %8597 = getelementptr inbounds %struct.Reg, %struct.Reg* %8596, i32 0, i32 0
  %EAX.i193 = bitcast %union.anon* %8597 to i32*
  %8598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8599 = getelementptr inbounds %struct.GPR, %struct.GPR* %8598, i32 0, i32 15
  %8600 = getelementptr inbounds %struct.Reg, %struct.Reg* %8599, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %8600 to i64*
  %8601 = load i64, i64* %RBP.i194
  %8602 = sub i64 %8601, 1328
  %8603 = load i32, i32* %EAX.i193
  %8604 = zext i32 %8603 to i64
  %8605 = load i64, i64* %PC.i192
  %8606 = add i64 %8605, 6
  store i64 %8606, i64* %PC.i192
  %8607 = inttoptr i64 %8602 to i32*
  store i32 %8603, i32* %8607
  store %struct.Memory* %loadMem_402a4b, %struct.Memory** %MEMORY
  %loadMem_402a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8609 = getelementptr inbounds %struct.GPR, %struct.GPR* %8608, i32 0, i32 33
  %8610 = getelementptr inbounds %struct.Reg, %struct.Reg* %8609, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %8610 to i64*
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 1
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %RAX.i190 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 15
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %8616 to i64*
  %8617 = load i64, i64* %RBP.i191
  %8618 = sub i64 %8617, 1384
  %8619 = load i64, i64* %PC.i189
  %8620 = add i64 %8619, 6
  store i64 %8620, i64* %PC.i189
  %8621 = inttoptr i64 %8618 to i32*
  %8622 = load i32, i32* %8621
  %8623 = zext i32 %8622 to i64
  store i64 %8623, i64* %RAX.i190, align 8
  store %struct.Memory* %loadMem_402a51, %struct.Memory** %MEMORY
  %loadMem_402a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 33
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %8626 to i64*
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8628 = getelementptr inbounds %struct.GPR, %struct.GPR* %8627, i32 0, i32 1
  %8629 = getelementptr inbounds %struct.Reg, %struct.Reg* %8628, i32 0, i32 0
  %EAX.i187 = bitcast %union.anon* %8629 to i32*
  %8630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8631 = getelementptr inbounds %struct.GPR, %struct.GPR* %8630, i32 0, i32 15
  %8632 = getelementptr inbounds %struct.Reg, %struct.Reg* %8631, i32 0, i32 0
  %RBP.i188 = bitcast %union.anon* %8632 to i64*
  %8633 = load i64, i64* %RBP.i188
  %8634 = sub i64 %8633, 1324
  %8635 = load i32, i32* %EAX.i187
  %8636 = zext i32 %8635 to i64
  %8637 = load i64, i64* %PC.i186
  %8638 = add i64 %8637, 6
  store i64 %8638, i64* %PC.i186
  %8639 = inttoptr i64 %8634 to i32*
  store i32 %8635, i32* %8639
  store %struct.Memory* %loadMem_402a57, %struct.Memory** %MEMORY
  br label %block_.L_402a5d

block_.L_402a5d:                                  ; preds = %block_4029f1, %block_.L_4029d1
  %loadMem_402a5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8641 = getelementptr inbounds %struct.GPR, %struct.GPR* %8640, i32 0, i32 33
  %8642 = getelementptr inbounds %struct.Reg, %struct.Reg* %8641, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %8642 to i64*
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8644 = getelementptr inbounds %struct.GPR, %struct.GPR* %8643, i32 0, i32 1
  %8645 = getelementptr inbounds %struct.Reg, %struct.Reg* %8644, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %8645 to i64*
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8647 = getelementptr inbounds %struct.GPR, %struct.GPR* %8646, i32 0, i32 15
  %8648 = getelementptr inbounds %struct.Reg, %struct.Reg* %8647, i32 0, i32 0
  %RBP.i185 = bitcast %union.anon* %8648 to i64*
  %8649 = load i64, i64* %RBP.i185
  %8650 = sub i64 %8649, 1320
  %8651 = load i64, i64* %PC.i183
  %8652 = add i64 %8651, 6
  store i64 %8652, i64* %PC.i183
  %8653 = inttoptr i64 %8650 to i32*
  %8654 = load i32, i32* %8653
  %8655 = zext i32 %8654 to i64
  store i64 %8655, i64* %RAX.i184, align 8
  store %struct.Memory* %loadMem_402a5d, %struct.Memory** %MEMORY
  %loadMem_402a63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8657 = getelementptr inbounds %struct.GPR, %struct.GPR* %8656, i32 0, i32 33
  %8658 = getelementptr inbounds %struct.Reg, %struct.Reg* %8657, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8658 to i64*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8660 = getelementptr inbounds %struct.GPR, %struct.GPR* %8659, i32 0, i32 1
  %8661 = getelementptr inbounds %struct.Reg, %struct.Reg* %8660, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %8661 to i64*
  %8662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8663 = getelementptr inbounds %struct.GPR, %struct.GPR* %8662, i32 0, i32 15
  %8664 = getelementptr inbounds %struct.Reg, %struct.Reg* %8663, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %8664 to i64*
  %8665 = load i64, i64* %RAX.i181
  %8666 = load i64, i64* %RBP.i182
  %8667 = sub i64 %8666, 1308
  %8668 = load i64, i64* %PC.i180
  %8669 = add i64 %8668, 6
  store i64 %8669, i64* %PC.i180
  %8670 = trunc i64 %8665 to i32
  %8671 = inttoptr i64 %8667 to i32*
  %8672 = load i32, i32* %8671
  %8673 = sub i32 %8670, %8672
  %8674 = zext i32 %8673 to i64
  store i64 %8674, i64* %RAX.i181, align 8
  %8675 = icmp ult i32 %8670, %8672
  %8676 = zext i1 %8675 to i8
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8676, i8* %8677, align 1
  %8678 = and i32 %8673, 255
  %8679 = call i32 @llvm.ctpop.i32(i32 %8678)
  %8680 = trunc i32 %8679 to i8
  %8681 = and i8 %8680, 1
  %8682 = xor i8 %8681, 1
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8682, i8* %8683, align 1
  %8684 = xor i32 %8672, %8670
  %8685 = xor i32 %8684, %8673
  %8686 = lshr i32 %8685, 4
  %8687 = trunc i32 %8686 to i8
  %8688 = and i8 %8687, 1
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8688, i8* %8689, align 1
  %8690 = icmp eq i32 %8673, 0
  %8691 = zext i1 %8690 to i8
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8691, i8* %8692, align 1
  %8693 = lshr i32 %8673, 31
  %8694 = trunc i32 %8693 to i8
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8694, i8* %8695, align 1
  %8696 = lshr i32 %8670, 31
  %8697 = lshr i32 %8672, 31
  %8698 = xor i32 %8697, %8696
  %8699 = xor i32 %8693, %8696
  %8700 = add i32 %8699, %8698
  %8701 = icmp eq i32 %8700, 2
  %8702 = zext i1 %8701 to i8
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8702, i8* %8703, align 1
  store %struct.Memory* %loadMem_402a63, %struct.Memory** %MEMORY
  %loadMem_402a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8705 = getelementptr inbounds %struct.GPR, %struct.GPR* %8704, i32 0, i32 33
  %8706 = getelementptr inbounds %struct.Reg, %struct.Reg* %8705, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8706 to i64*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 5
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %8709 to i64*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 15
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %8712 to i64*
  %8713 = load i64, i64* %RBP.i179
  %8714 = sub i64 %8713, 1316
  %8715 = load i64, i64* %PC.i177
  %8716 = add i64 %8715, 6
  store i64 %8716, i64* %PC.i177
  %8717 = inttoptr i64 %8714 to i32*
  %8718 = load i32, i32* %8717
  %8719 = zext i32 %8718 to i64
  store i64 %8719, i64* %RCX.i178, align 8
  store %struct.Memory* %loadMem_402a69, %struct.Memory** %MEMORY
  %loadMem_402a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8721 = getelementptr inbounds %struct.GPR, %struct.GPR* %8720, i32 0, i32 33
  %8722 = getelementptr inbounds %struct.Reg, %struct.Reg* %8721, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %8722 to i64*
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 5
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %RCX.i175 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 15
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RBP.i176 = bitcast %union.anon* %8728 to i64*
  %8729 = load i64, i64* %RCX.i175
  %8730 = load i64, i64* %RBP.i176
  %8731 = sub i64 %8730, 1304
  %8732 = load i64, i64* %PC.i174
  %8733 = add i64 %8732, 6
  store i64 %8733, i64* %PC.i174
  %8734 = trunc i64 %8729 to i32
  %8735 = inttoptr i64 %8731 to i32*
  %8736 = load i32, i32* %8735
  %8737 = sub i32 %8734, %8736
  %8738 = zext i32 %8737 to i64
  store i64 %8738, i64* %RCX.i175, align 8
  %8739 = icmp ult i32 %8734, %8736
  %8740 = zext i1 %8739 to i8
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8740, i8* %8741, align 1
  %8742 = and i32 %8737, 255
  %8743 = call i32 @llvm.ctpop.i32(i32 %8742)
  %8744 = trunc i32 %8743 to i8
  %8745 = and i8 %8744, 1
  %8746 = xor i8 %8745, 1
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8746, i8* %8747, align 1
  %8748 = xor i32 %8736, %8734
  %8749 = xor i32 %8748, %8737
  %8750 = lshr i32 %8749, 4
  %8751 = trunc i32 %8750 to i8
  %8752 = and i8 %8751, 1
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8752, i8* %8753, align 1
  %8754 = icmp eq i32 %8737, 0
  %8755 = zext i1 %8754 to i8
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8755, i8* %8756, align 1
  %8757 = lshr i32 %8737, 31
  %8758 = trunc i32 %8757 to i8
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8758, i8* %8759, align 1
  %8760 = lshr i32 %8734, 31
  %8761 = lshr i32 %8736, 31
  %8762 = xor i32 %8761, %8760
  %8763 = xor i32 %8757, %8760
  %8764 = add i32 %8763, %8762
  %8765 = icmp eq i32 %8764, 2
  %8766 = zext i1 %8765 to i8
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8766, i8* %8767, align 1
  store %struct.Memory* %loadMem_402a6f, %struct.Memory** %MEMORY
  %loadMem_402a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8769 = getelementptr inbounds %struct.GPR, %struct.GPR* %8768, i32 0, i32 33
  %8770 = getelementptr inbounds %struct.Reg, %struct.Reg* %8769, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %8770 to i64*
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 1
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %EAX.i173 = bitcast %union.anon* %8773 to i32*
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8775 = getelementptr inbounds %struct.GPR, %struct.GPR* %8774, i32 0, i32 5
  %8776 = getelementptr inbounds %struct.Reg, %struct.Reg* %8775, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %8776 to i32*
  %8777 = load i32, i32* %EAX.i173
  %8778 = zext i32 %8777 to i64
  %8779 = load i32, i32* %ECX.i
  %8780 = zext i32 %8779 to i64
  %8781 = load i64, i64* %PC.i172
  %8782 = add i64 %8781, 2
  store i64 %8782, i64* %PC.i172
  %8783 = sub i32 %8777, %8779
  %8784 = icmp ult i32 %8777, %8779
  %8785 = zext i1 %8784 to i8
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8785, i8* %8786, align 1
  %8787 = and i32 %8783, 255
  %8788 = call i32 @llvm.ctpop.i32(i32 %8787)
  %8789 = trunc i32 %8788 to i8
  %8790 = and i8 %8789, 1
  %8791 = xor i8 %8790, 1
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8791, i8* %8792, align 1
  %8793 = xor i64 %8780, %8778
  %8794 = trunc i64 %8793 to i32
  %8795 = xor i32 %8794, %8783
  %8796 = lshr i32 %8795, 4
  %8797 = trunc i32 %8796 to i8
  %8798 = and i8 %8797, 1
  %8799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8798, i8* %8799, align 1
  %8800 = icmp eq i32 %8783, 0
  %8801 = zext i1 %8800 to i8
  %8802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8801, i8* %8802, align 1
  %8803 = lshr i32 %8783, 31
  %8804 = trunc i32 %8803 to i8
  %8805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8804, i8* %8805, align 1
  %8806 = lshr i32 %8777, 31
  %8807 = lshr i32 %8779, 31
  %8808 = xor i32 %8807, %8806
  %8809 = xor i32 %8803, %8806
  %8810 = add i32 %8809, %8808
  %8811 = icmp eq i32 %8810, 2
  %8812 = zext i1 %8811 to i8
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8812, i8* %8813, align 1
  store %struct.Memory* %loadMem_402a75, %struct.Memory** %MEMORY
  %loadMem_402a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8815 = getelementptr inbounds %struct.GPR, %struct.GPR* %8814, i32 0, i32 33
  %8816 = getelementptr inbounds %struct.Reg, %struct.Reg* %8815, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %8816 to i64*
  %8817 = load i64, i64* %PC.i171
  %8818 = add i64 %8817, 114
  %8819 = load i64, i64* %PC.i171
  %8820 = add i64 %8819, 6
  %8821 = load i64, i64* %PC.i171
  %8822 = add i64 %8821, 6
  store i64 %8822, i64* %PC.i171
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8824 = load i8, i8* %8823, align 1
  %8825 = icmp ne i8 %8824, 0
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8827 = load i8, i8* %8826, align 1
  %8828 = icmp ne i8 %8827, 0
  %8829 = xor i1 %8825, %8828
  %8830 = xor i1 %8829, true
  %8831 = zext i1 %8830 to i8
  store i8 %8831, i8* %BRANCH_TAKEN, align 1
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8833 = select i1 %8829, i64 %8820, i64 %8818
  store i64 %8833, i64* %8832, align 8
  store %struct.Memory* %loadMem_402a77, %struct.Memory** %MEMORY
  %loadBr_402a77 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_402a77 = icmp eq i8 %loadBr_402a77, 1
  br i1 %cmpBr_402a77, label %block_.L_402ae9, label %block_402a7d

block_402a7d:                                     ; preds = %block_.L_402a5d
  %loadMem_402a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8835 = getelementptr inbounds %struct.GPR, %struct.GPR* %8834, i32 0, i32 33
  %8836 = getelementptr inbounds %struct.Reg, %struct.Reg* %8835, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %8836 to i64*
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8838 = getelementptr inbounds %struct.GPR, %struct.GPR* %8837, i32 0, i32 1
  %8839 = getelementptr inbounds %struct.Reg, %struct.Reg* %8838, i32 0, i32 0
  %RAX.i169 = bitcast %union.anon* %8839 to i64*
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8841 = getelementptr inbounds %struct.GPR, %struct.GPR* %8840, i32 0, i32 15
  %8842 = getelementptr inbounds %struct.Reg, %struct.Reg* %8841, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %8842 to i64*
  %8843 = load i64, i64* %RBP.i170
  %8844 = sub i64 %8843, 1308
  %8845 = load i64, i64* %PC.i168
  %8846 = add i64 %8845, 6
  store i64 %8846, i64* %PC.i168
  %8847 = inttoptr i64 %8844 to i32*
  %8848 = load i32, i32* %8847
  %8849 = zext i32 %8848 to i64
  store i64 %8849, i64* %RAX.i169, align 8
  store %struct.Memory* %loadMem_402a7d, %struct.Memory** %MEMORY
  %loadMem_402a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8851 = getelementptr inbounds %struct.GPR, %struct.GPR* %8850, i32 0, i32 33
  %8852 = getelementptr inbounds %struct.Reg, %struct.Reg* %8851, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %8852 to i64*
  %8853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8854 = getelementptr inbounds %struct.GPR, %struct.GPR* %8853, i32 0, i32 1
  %8855 = getelementptr inbounds %struct.Reg, %struct.Reg* %8854, i32 0, i32 0
  %EAX.i166 = bitcast %union.anon* %8855 to i32*
  %8856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8857 = getelementptr inbounds %struct.GPR, %struct.GPR* %8856, i32 0, i32 15
  %8858 = getelementptr inbounds %struct.Reg, %struct.Reg* %8857, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %8858 to i64*
  %8859 = load i64, i64* %RBP.i167
  %8860 = sub i64 %8859, 1388
  %8861 = load i32, i32* %EAX.i166
  %8862 = zext i32 %8861 to i64
  %8863 = load i64, i64* %PC.i165
  %8864 = add i64 %8863, 6
  store i64 %8864, i64* %PC.i165
  %8865 = inttoptr i64 %8860 to i32*
  store i32 %8861, i32* %8865
  store %struct.Memory* %loadMem_402a83, %struct.Memory** %MEMORY
  %loadMem_402a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8867 = getelementptr inbounds %struct.GPR, %struct.GPR* %8866, i32 0, i32 33
  %8868 = getelementptr inbounds %struct.Reg, %struct.Reg* %8867, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %8868 to i64*
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8870 = getelementptr inbounds %struct.GPR, %struct.GPR* %8869, i32 0, i32 1
  %8871 = getelementptr inbounds %struct.Reg, %struct.Reg* %8870, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %8871 to i64*
  %8872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8873 = getelementptr inbounds %struct.GPR, %struct.GPR* %8872, i32 0, i32 15
  %8874 = getelementptr inbounds %struct.Reg, %struct.Reg* %8873, i32 0, i32 0
  %RBP.i164 = bitcast %union.anon* %8874 to i64*
  %8875 = load i64, i64* %RBP.i164
  %8876 = sub i64 %8875, 1304
  %8877 = load i64, i64* %PC.i162
  %8878 = add i64 %8877, 6
  store i64 %8878, i64* %PC.i162
  %8879 = inttoptr i64 %8876 to i32*
  %8880 = load i32, i32* %8879
  %8881 = zext i32 %8880 to i64
  store i64 %8881, i64* %RAX.i163, align 8
  store %struct.Memory* %loadMem_402a89, %struct.Memory** %MEMORY
  %loadMem_402a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8883 = getelementptr inbounds %struct.GPR, %struct.GPR* %8882, i32 0, i32 33
  %8884 = getelementptr inbounds %struct.Reg, %struct.Reg* %8883, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %8884 to i64*
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8886 = getelementptr inbounds %struct.GPR, %struct.GPR* %8885, i32 0, i32 1
  %8887 = getelementptr inbounds %struct.Reg, %struct.Reg* %8886, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %8887 to i32*
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8889 = getelementptr inbounds %struct.GPR, %struct.GPR* %8888, i32 0, i32 15
  %8890 = getelementptr inbounds %struct.Reg, %struct.Reg* %8889, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %8890 to i64*
  %8891 = load i64, i64* %RBP.i161
  %8892 = sub i64 %8891, 1308
  %8893 = load i32, i32* %EAX.i160
  %8894 = zext i32 %8893 to i64
  %8895 = load i64, i64* %PC.i159
  %8896 = add i64 %8895, 6
  store i64 %8896, i64* %PC.i159
  %8897 = inttoptr i64 %8892 to i32*
  store i32 %8893, i32* %8897
  store %struct.Memory* %loadMem_402a8f, %struct.Memory** %MEMORY
  %loadMem_402a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8899 = getelementptr inbounds %struct.GPR, %struct.GPR* %8898, i32 0, i32 33
  %8900 = getelementptr inbounds %struct.Reg, %struct.Reg* %8899, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8900 to i64*
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 1
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %8903 to i64*
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8905 = getelementptr inbounds %struct.GPR, %struct.GPR* %8904, i32 0, i32 15
  %8906 = getelementptr inbounds %struct.Reg, %struct.Reg* %8905, i32 0, i32 0
  %RBP.i158 = bitcast %union.anon* %8906 to i64*
  %8907 = load i64, i64* %RBP.i158
  %8908 = sub i64 %8907, 1388
  %8909 = load i64, i64* %PC.i156
  %8910 = add i64 %8909, 6
  store i64 %8910, i64* %PC.i156
  %8911 = inttoptr i64 %8908 to i32*
  %8912 = load i32, i32* %8911
  %8913 = zext i32 %8912 to i64
  store i64 %8913, i64* %RAX.i157, align 8
  store %struct.Memory* %loadMem_402a95, %struct.Memory** %MEMORY
  %loadMem_402a9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8915 = getelementptr inbounds %struct.GPR, %struct.GPR* %8914, i32 0, i32 33
  %8916 = getelementptr inbounds %struct.Reg, %struct.Reg* %8915, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %8916 to i64*
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8918 = getelementptr inbounds %struct.GPR, %struct.GPR* %8917, i32 0, i32 1
  %8919 = getelementptr inbounds %struct.Reg, %struct.Reg* %8918, i32 0, i32 0
  %EAX.i154 = bitcast %union.anon* %8919 to i32*
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8921 = getelementptr inbounds %struct.GPR, %struct.GPR* %8920, i32 0, i32 15
  %8922 = getelementptr inbounds %struct.Reg, %struct.Reg* %8921, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %8922 to i64*
  %8923 = load i64, i64* %RBP.i155
  %8924 = sub i64 %8923, 1304
  %8925 = load i32, i32* %EAX.i154
  %8926 = zext i32 %8925 to i64
  %8927 = load i64, i64* %PC.i153
  %8928 = add i64 %8927, 6
  store i64 %8928, i64* %PC.i153
  %8929 = inttoptr i64 %8924 to i32*
  store i32 %8925, i32* %8929
  store %struct.Memory* %loadMem_402a9b, %struct.Memory** %MEMORY
  %loadMem_402aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8931 = getelementptr inbounds %struct.GPR, %struct.GPR* %8930, i32 0, i32 33
  %8932 = getelementptr inbounds %struct.Reg, %struct.Reg* %8931, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %8932 to i64*
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8934 = getelementptr inbounds %struct.GPR, %struct.GPR* %8933, i32 0, i32 1
  %8935 = getelementptr inbounds %struct.Reg, %struct.Reg* %8934, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %8935 to i64*
  %8936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8937 = getelementptr inbounds %struct.GPR, %struct.GPR* %8936, i32 0, i32 15
  %8938 = getelementptr inbounds %struct.Reg, %struct.Reg* %8937, i32 0, i32 0
  %RBP.i152 = bitcast %union.anon* %8938 to i64*
  %8939 = load i64, i64* %RBP.i152
  %8940 = sub i64 %8939, 1320
  %8941 = load i64, i64* %PC.i150
  %8942 = add i64 %8941, 6
  store i64 %8942, i64* %PC.i150
  %8943 = inttoptr i64 %8940 to i32*
  %8944 = load i32, i32* %8943
  %8945 = zext i32 %8944 to i64
  store i64 %8945, i64* %RAX.i151, align 8
  store %struct.Memory* %loadMem_402aa1, %struct.Memory** %MEMORY
  %loadMem_402aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8947 = getelementptr inbounds %struct.GPR, %struct.GPR* %8946, i32 0, i32 33
  %8948 = getelementptr inbounds %struct.Reg, %struct.Reg* %8947, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %8948 to i64*
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8950 = getelementptr inbounds %struct.GPR, %struct.GPR* %8949, i32 0, i32 1
  %8951 = getelementptr inbounds %struct.Reg, %struct.Reg* %8950, i32 0, i32 0
  %EAX.i148 = bitcast %union.anon* %8951 to i32*
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8953 = getelementptr inbounds %struct.GPR, %struct.GPR* %8952, i32 0, i32 15
  %8954 = getelementptr inbounds %struct.Reg, %struct.Reg* %8953, i32 0, i32 0
  %RBP.i149 = bitcast %union.anon* %8954 to i64*
  %8955 = load i64, i64* %RBP.i149
  %8956 = sub i64 %8955, 1388
  %8957 = load i32, i32* %EAX.i148
  %8958 = zext i32 %8957 to i64
  %8959 = load i64, i64* %PC.i147
  %8960 = add i64 %8959, 6
  store i64 %8960, i64* %PC.i147
  %8961 = inttoptr i64 %8956 to i32*
  store i32 %8957, i32* %8961
  store %struct.Memory* %loadMem_402aa7, %struct.Memory** %MEMORY
  %loadMem_402aad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8963 = getelementptr inbounds %struct.GPR, %struct.GPR* %8962, i32 0, i32 33
  %8964 = getelementptr inbounds %struct.Reg, %struct.Reg* %8963, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %8964 to i64*
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8966 = getelementptr inbounds %struct.GPR, %struct.GPR* %8965, i32 0, i32 1
  %8967 = getelementptr inbounds %struct.Reg, %struct.Reg* %8966, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %8967 to i64*
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8969 = getelementptr inbounds %struct.GPR, %struct.GPR* %8968, i32 0, i32 15
  %8970 = getelementptr inbounds %struct.Reg, %struct.Reg* %8969, i32 0, i32 0
  %RBP.i146 = bitcast %union.anon* %8970 to i64*
  %8971 = load i64, i64* %RBP.i146
  %8972 = sub i64 %8971, 1316
  %8973 = load i64, i64* %PC.i144
  %8974 = add i64 %8973, 6
  store i64 %8974, i64* %PC.i144
  %8975 = inttoptr i64 %8972 to i32*
  %8976 = load i32, i32* %8975
  %8977 = zext i32 %8976 to i64
  store i64 %8977, i64* %RAX.i145, align 8
  store %struct.Memory* %loadMem_402aad, %struct.Memory** %MEMORY
  %loadMem_402ab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8979 = getelementptr inbounds %struct.GPR, %struct.GPR* %8978, i32 0, i32 33
  %8980 = getelementptr inbounds %struct.Reg, %struct.Reg* %8979, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %8980 to i64*
  %8981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8982 = getelementptr inbounds %struct.GPR, %struct.GPR* %8981, i32 0, i32 1
  %8983 = getelementptr inbounds %struct.Reg, %struct.Reg* %8982, i32 0, i32 0
  %EAX.i142 = bitcast %union.anon* %8983 to i32*
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8985 = getelementptr inbounds %struct.GPR, %struct.GPR* %8984, i32 0, i32 15
  %8986 = getelementptr inbounds %struct.Reg, %struct.Reg* %8985, i32 0, i32 0
  %RBP.i143 = bitcast %union.anon* %8986 to i64*
  %8987 = load i64, i64* %RBP.i143
  %8988 = sub i64 %8987, 1320
  %8989 = load i32, i32* %EAX.i142
  %8990 = zext i32 %8989 to i64
  %8991 = load i64, i64* %PC.i141
  %8992 = add i64 %8991, 6
  store i64 %8992, i64* %PC.i141
  %8993 = inttoptr i64 %8988 to i32*
  store i32 %8989, i32* %8993
  store %struct.Memory* %loadMem_402ab3, %struct.Memory** %MEMORY
  %loadMem_402ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 33
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %8996 to i64*
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 1
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %RAX.i139 = bitcast %union.anon* %8999 to i64*
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9001 = getelementptr inbounds %struct.GPR, %struct.GPR* %9000, i32 0, i32 15
  %9002 = getelementptr inbounds %struct.Reg, %struct.Reg* %9001, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %9002 to i64*
  %9003 = load i64, i64* %RBP.i140
  %9004 = sub i64 %9003, 1388
  %9005 = load i64, i64* %PC.i138
  %9006 = add i64 %9005, 6
  store i64 %9006, i64* %PC.i138
  %9007 = inttoptr i64 %9004 to i32*
  %9008 = load i32, i32* %9007
  %9009 = zext i32 %9008 to i64
  store i64 %9009, i64* %RAX.i139, align 8
  store %struct.Memory* %loadMem_402ab9, %struct.Memory** %MEMORY
  %loadMem_402abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 33
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %9012 to i64*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 1
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %EAX.i136 = bitcast %union.anon* %9015 to i32*
  %9016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9017 = getelementptr inbounds %struct.GPR, %struct.GPR* %9016, i32 0, i32 15
  %9018 = getelementptr inbounds %struct.Reg, %struct.Reg* %9017, i32 0, i32 0
  %RBP.i137 = bitcast %union.anon* %9018 to i64*
  %9019 = load i64, i64* %RBP.i137
  %9020 = sub i64 %9019, 1316
  %9021 = load i32, i32* %EAX.i136
  %9022 = zext i32 %9021 to i64
  %9023 = load i64, i64* %PC.i135
  %9024 = add i64 %9023, 6
  store i64 %9024, i64* %PC.i135
  %9025 = inttoptr i64 %9020 to i32*
  store i32 %9021, i32* %9025
  store %struct.Memory* %loadMem_402abf, %struct.Memory** %MEMORY
  %loadMem_402ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %9028 to i64*
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 1
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %9031 to i64*
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 15
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %9034 to i64*
  %9035 = load i64, i64* %RBP.i134
  %9036 = sub i64 %9035, 1332
  %9037 = load i64, i64* %PC.i132
  %9038 = add i64 %9037, 6
  store i64 %9038, i64* %PC.i132
  %9039 = inttoptr i64 %9036 to i32*
  %9040 = load i32, i32* %9039
  %9041 = zext i32 %9040 to i64
  store i64 %9041, i64* %RAX.i133, align 8
  store %struct.Memory* %loadMem_402ac5, %struct.Memory** %MEMORY
  %loadMem_402acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 33
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %9044 to i64*
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 1
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %EAX.i130 = bitcast %union.anon* %9047 to i32*
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9049 = getelementptr inbounds %struct.GPR, %struct.GPR* %9048, i32 0, i32 15
  %9050 = getelementptr inbounds %struct.Reg, %struct.Reg* %9049, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %9050 to i64*
  %9051 = load i64, i64* %RBP.i131
  %9052 = sub i64 %9051, 1388
  %9053 = load i32, i32* %EAX.i130
  %9054 = zext i32 %9053 to i64
  %9055 = load i64, i64* %PC.i129
  %9056 = add i64 %9055, 6
  store i64 %9056, i64* %PC.i129
  %9057 = inttoptr i64 %9052 to i32*
  store i32 %9053, i32* %9057
  store %struct.Memory* %loadMem_402acb, %struct.Memory** %MEMORY
  %loadMem_402ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 33
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9062 = getelementptr inbounds %struct.GPR, %struct.GPR* %9061, i32 0, i32 1
  %9063 = getelementptr inbounds %struct.Reg, %struct.Reg* %9062, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %9063 to i64*
  %9064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9065 = getelementptr inbounds %struct.GPR, %struct.GPR* %9064, i32 0, i32 15
  %9066 = getelementptr inbounds %struct.Reg, %struct.Reg* %9065, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %9066 to i64*
  %9067 = load i64, i64* %RBP.i128
  %9068 = sub i64 %9067, 1328
  %9069 = load i64, i64* %PC.i126
  %9070 = add i64 %9069, 6
  store i64 %9070, i64* %PC.i126
  %9071 = inttoptr i64 %9068 to i32*
  %9072 = load i32, i32* %9071
  %9073 = zext i32 %9072 to i64
  store i64 %9073, i64* %RAX.i127, align 8
  store %struct.Memory* %loadMem_402ad1, %struct.Memory** %MEMORY
  %loadMem_402ad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9075 = getelementptr inbounds %struct.GPR, %struct.GPR* %9074, i32 0, i32 33
  %9076 = getelementptr inbounds %struct.Reg, %struct.Reg* %9075, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %9076 to i64*
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 1
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %EAX.i124 = bitcast %union.anon* %9079 to i32*
  %9080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9081 = getelementptr inbounds %struct.GPR, %struct.GPR* %9080, i32 0, i32 15
  %9082 = getelementptr inbounds %struct.Reg, %struct.Reg* %9081, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %9082 to i64*
  %9083 = load i64, i64* %RBP.i125
  %9084 = sub i64 %9083, 1332
  %9085 = load i32, i32* %EAX.i124
  %9086 = zext i32 %9085 to i64
  %9087 = load i64, i64* %PC.i123
  %9088 = add i64 %9087, 6
  store i64 %9088, i64* %PC.i123
  %9089 = inttoptr i64 %9084 to i32*
  store i32 %9085, i32* %9089
  store %struct.Memory* %loadMem_402ad7, %struct.Memory** %MEMORY
  %loadMem_402add = load %struct.Memory*, %struct.Memory** %MEMORY
  %9090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9091 = getelementptr inbounds %struct.GPR, %struct.GPR* %9090, i32 0, i32 33
  %9092 = getelementptr inbounds %struct.Reg, %struct.Reg* %9091, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %9092 to i64*
  %9093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9094 = getelementptr inbounds %struct.GPR, %struct.GPR* %9093, i32 0, i32 1
  %9095 = getelementptr inbounds %struct.Reg, %struct.Reg* %9094, i32 0, i32 0
  %RAX.i121 = bitcast %union.anon* %9095 to i64*
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 15
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %9098 to i64*
  %9099 = load i64, i64* %RBP.i122
  %9100 = sub i64 %9099, 1388
  %9101 = load i64, i64* %PC.i120
  %9102 = add i64 %9101, 6
  store i64 %9102, i64* %PC.i120
  %9103 = inttoptr i64 %9100 to i32*
  %9104 = load i32, i32* %9103
  %9105 = zext i32 %9104 to i64
  store i64 %9105, i64* %RAX.i121, align 8
  store %struct.Memory* %loadMem_402add, %struct.Memory** %MEMORY
  %loadMem_402ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9107 = getelementptr inbounds %struct.GPR, %struct.GPR* %9106, i32 0, i32 33
  %9108 = getelementptr inbounds %struct.Reg, %struct.Reg* %9107, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9108 to i64*
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 1
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %EAX.i118 = bitcast %union.anon* %9111 to i32*
  %9112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9113 = getelementptr inbounds %struct.GPR, %struct.GPR* %9112, i32 0, i32 15
  %9114 = getelementptr inbounds %struct.Reg, %struct.Reg* %9113, i32 0, i32 0
  %RBP.i119 = bitcast %union.anon* %9114 to i64*
  %9115 = load i64, i64* %RBP.i119
  %9116 = sub i64 %9115, 1328
  %9117 = load i32, i32* %EAX.i118
  %9118 = zext i32 %9117 to i64
  %9119 = load i64, i64* %PC.i117
  %9120 = add i64 %9119, 6
  store i64 %9120, i64* %PC.i117
  %9121 = inttoptr i64 %9116 to i32*
  store i32 %9117, i32* %9121
  store %struct.Memory* %loadMem_402ae3, %struct.Memory** %MEMORY
  br label %block_.L_402ae9

block_.L_402ae9:                                  ; preds = %block_402a7d, %block_.L_402a5d
  %loadMem_402ae9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 33
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9124 to i64*
  %9125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9126 = getelementptr inbounds %struct.GPR, %struct.GPR* %9125, i32 0, i32 1
  %9127 = getelementptr inbounds %struct.Reg, %struct.Reg* %9126, i32 0, i32 0
  %RAX.i115 = bitcast %union.anon* %9127 to i64*
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 15
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %RBP.i116 = bitcast %union.anon* %9130 to i64*
  %9131 = load i64, i64* %RBP.i116
  %9132 = sub i64 %9131, 1308
  %9133 = load i64, i64* %PC.i114
  %9134 = add i64 %9133, 6
  store i64 %9134, i64* %PC.i114
  %9135 = inttoptr i64 %9132 to i32*
  %9136 = load i32, i32* %9135
  %9137 = zext i32 %9136 to i64
  store i64 %9137, i64* %RAX.i115, align 8
  store %struct.Memory* %loadMem_402ae9, %struct.Memory** %MEMORY
  %loadMem_402aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9139 = getelementptr inbounds %struct.GPR, %struct.GPR* %9138, i32 0, i32 33
  %9140 = getelementptr inbounds %struct.Reg, %struct.Reg* %9139, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %9140 to i64*
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9142 = getelementptr inbounds %struct.GPR, %struct.GPR* %9141, i32 0, i32 5
  %9143 = getelementptr inbounds %struct.Reg, %struct.Reg* %9142, i32 0, i32 0
  %RCX.i112 = bitcast %union.anon* %9143 to i64*
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9145 = getelementptr inbounds %struct.GPR, %struct.GPR* %9144, i32 0, i32 15
  %9146 = getelementptr inbounds %struct.Reg, %struct.Reg* %9145, i32 0, i32 0
  %RBP.i113 = bitcast %union.anon* %9146 to i64*
  %9147 = load i64, i64* %RBP.i113
  %9148 = sub i64 %9147, 80
  %9149 = load i64, i64* %PC.i111
  %9150 = add i64 %9149, 4
  store i64 %9150, i64* %PC.i111
  %9151 = inttoptr i64 %9148 to i32*
  %9152 = load i32, i32* %9151
  %9153 = sext i32 %9152 to i64
  store i64 %9153, i64* %RCX.i112, align 8
  store %struct.Memory* %loadMem_402aef, %struct.Memory** %MEMORY
  %loadMem_402af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 33
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %PC.i107 = bitcast %union.anon* %9156 to i64*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 1
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %EAX.i108 = bitcast %union.anon* %9159 to i32*
  %9160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9161 = getelementptr inbounds %struct.GPR, %struct.GPR* %9160, i32 0, i32 5
  %9162 = getelementptr inbounds %struct.Reg, %struct.Reg* %9161, i32 0, i32 0
  %RCX.i109 = bitcast %union.anon* %9162 to i64*
  %9163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9164 = getelementptr inbounds %struct.GPR, %struct.GPR* %9163, i32 0, i32 15
  %9165 = getelementptr inbounds %struct.Reg, %struct.Reg* %9164, i32 0, i32 0
  %RBP.i110 = bitcast %union.anon* %9165 to i64*
  %9166 = load i64, i64* %RBP.i110
  %9167 = load i64, i64* %RCX.i109
  %9168 = mul i64 %9167, 4
  %9169 = add i64 %9166, -496
  %9170 = add i64 %9169, %9168
  %9171 = load i32, i32* %EAX.i108
  %9172 = zext i32 %9171 to i64
  %9173 = load i64, i64* %PC.i107
  %9174 = add i64 %9173, 7
  store i64 %9174, i64* %PC.i107
  %9175 = inttoptr i64 %9170 to i32*
  store i32 %9171, i32* %9175
  store %struct.Memory* %loadMem_402af3, %struct.Memory** %MEMORY
  %loadMem_402afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 33
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9178 to i64*
  %9179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9180 = getelementptr inbounds %struct.GPR, %struct.GPR* %9179, i32 0, i32 1
  %9181 = getelementptr inbounds %struct.Reg, %struct.Reg* %9180, i32 0, i32 0
  %RAX.i105 = bitcast %union.anon* %9181 to i64*
  %9182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9183 = getelementptr inbounds %struct.GPR, %struct.GPR* %9182, i32 0, i32 15
  %9184 = getelementptr inbounds %struct.Reg, %struct.Reg* %9183, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %9184 to i64*
  %9185 = load i64, i64* %RBP.i106
  %9186 = sub i64 %9185, 1320
  %9187 = load i64, i64* %PC.i104
  %9188 = add i64 %9187, 6
  store i64 %9188, i64* %PC.i104
  %9189 = inttoptr i64 %9186 to i32*
  %9190 = load i32, i32* %9189
  %9191 = zext i32 %9190 to i64
  store i64 %9191, i64* %RAX.i105, align 8
  store %struct.Memory* %loadMem_402afa, %struct.Memory** %MEMORY
  %loadMem_402b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 33
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %9194 to i64*
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9196 = getelementptr inbounds %struct.GPR, %struct.GPR* %9195, i32 0, i32 5
  %9197 = getelementptr inbounds %struct.Reg, %struct.Reg* %9196, i32 0, i32 0
  %RCX.i102 = bitcast %union.anon* %9197 to i64*
  %9198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9199 = getelementptr inbounds %struct.GPR, %struct.GPR* %9198, i32 0, i32 15
  %9200 = getelementptr inbounds %struct.Reg, %struct.Reg* %9199, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %9200 to i64*
  %9201 = load i64, i64* %RBP.i103
  %9202 = sub i64 %9201, 80
  %9203 = load i64, i64* %PC.i101
  %9204 = add i64 %9203, 4
  store i64 %9204, i64* %PC.i101
  %9205 = inttoptr i64 %9202 to i32*
  %9206 = load i32, i32* %9205
  %9207 = sext i32 %9206 to i64
  store i64 %9207, i64* %RCX.i102, align 8
  store %struct.Memory* %loadMem_402b00, %struct.Memory** %MEMORY
  %loadMem_402b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 33
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %9210 to i64*
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9212 = getelementptr inbounds %struct.GPR, %struct.GPR* %9211, i32 0, i32 1
  %9213 = getelementptr inbounds %struct.Reg, %struct.Reg* %9212, i32 0, i32 0
  %EAX.i98 = bitcast %union.anon* %9213 to i32*
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9215 = getelementptr inbounds %struct.GPR, %struct.GPR* %9214, i32 0, i32 5
  %9216 = getelementptr inbounds %struct.Reg, %struct.Reg* %9215, i32 0, i32 0
  %RCX.i99 = bitcast %union.anon* %9216 to i64*
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9218 = getelementptr inbounds %struct.GPR, %struct.GPR* %9217, i32 0, i32 15
  %9219 = getelementptr inbounds %struct.Reg, %struct.Reg* %9218, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %9219 to i64*
  %9220 = load i64, i64* %RBP.i100
  %9221 = load i64, i64* %RCX.i99
  %9222 = mul i64 %9221, 4
  %9223 = add i64 %9220, -896
  %9224 = add i64 %9223, %9222
  %9225 = load i32, i32* %EAX.i98
  %9226 = zext i32 %9225 to i64
  %9227 = load i64, i64* %PC.i97
  %9228 = add i64 %9227, 7
  store i64 %9228, i64* %PC.i97
  %9229 = inttoptr i64 %9224 to i32*
  store i32 %9225, i32* %9229
  store %struct.Memory* %loadMem_402b04, %struct.Memory** %MEMORY
  %loadMem_402b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9231 = getelementptr inbounds %struct.GPR, %struct.GPR* %9230, i32 0, i32 33
  %9232 = getelementptr inbounds %struct.Reg, %struct.Reg* %9231, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %9232 to i64*
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9234 = getelementptr inbounds %struct.GPR, %struct.GPR* %9233, i32 0, i32 1
  %9235 = getelementptr inbounds %struct.Reg, %struct.Reg* %9234, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %9235 to i64*
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9237 = getelementptr inbounds %struct.GPR, %struct.GPR* %9236, i32 0, i32 15
  %9238 = getelementptr inbounds %struct.Reg, %struct.Reg* %9237, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %9238 to i64*
  %9239 = load i64, i64* %RBP.i96
  %9240 = sub i64 %9239, 1332
  %9241 = load i64, i64* %PC.i94
  %9242 = add i64 %9241, 6
  store i64 %9242, i64* %PC.i94
  %9243 = inttoptr i64 %9240 to i32*
  %9244 = load i32, i32* %9243
  %9245 = zext i32 %9244 to i64
  store i64 %9245, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_402b0b, %struct.Memory** %MEMORY
  %loadMem_402b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9247 = getelementptr inbounds %struct.GPR, %struct.GPR* %9246, i32 0, i32 33
  %9248 = getelementptr inbounds %struct.Reg, %struct.Reg* %9247, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %9248 to i64*
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9250 = getelementptr inbounds %struct.GPR, %struct.GPR* %9249, i32 0, i32 5
  %9251 = getelementptr inbounds %struct.Reg, %struct.Reg* %9250, i32 0, i32 0
  %RCX.i92 = bitcast %union.anon* %9251 to i64*
  %9252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9253 = getelementptr inbounds %struct.GPR, %struct.GPR* %9252, i32 0, i32 15
  %9254 = getelementptr inbounds %struct.Reg, %struct.Reg* %9253, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %9254 to i64*
  %9255 = load i64, i64* %RBP.i93
  %9256 = sub i64 %9255, 80
  %9257 = load i64, i64* %PC.i91
  %9258 = add i64 %9257, 4
  store i64 %9258, i64* %PC.i91
  %9259 = inttoptr i64 %9256 to i32*
  %9260 = load i32, i32* %9259
  %9261 = sext i32 %9260 to i64
  store i64 %9261, i64* %RCX.i92, align 8
  store %struct.Memory* %loadMem_402b11, %struct.Memory** %MEMORY
  %loadMem_402b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9263 = getelementptr inbounds %struct.GPR, %struct.GPR* %9262, i32 0, i32 33
  %9264 = getelementptr inbounds %struct.Reg, %struct.Reg* %9263, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9264 to i64*
  %9265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9266 = getelementptr inbounds %struct.GPR, %struct.GPR* %9265, i32 0, i32 1
  %9267 = getelementptr inbounds %struct.Reg, %struct.Reg* %9266, i32 0, i32 0
  %EAX.i88 = bitcast %union.anon* %9267 to i32*
  %9268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9269 = getelementptr inbounds %struct.GPR, %struct.GPR* %9268, i32 0, i32 5
  %9270 = getelementptr inbounds %struct.Reg, %struct.Reg* %9269, i32 0, i32 0
  %RCX.i89 = bitcast %union.anon* %9270 to i64*
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 15
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %RBP.i90 = bitcast %union.anon* %9273 to i64*
  %9274 = load i64, i64* %RBP.i90
  %9275 = load i64, i64* %RCX.i89
  %9276 = mul i64 %9275, 4
  %9277 = add i64 %9274, -1296
  %9278 = add i64 %9277, %9276
  %9279 = load i32, i32* %EAX.i88
  %9280 = zext i32 %9279 to i64
  %9281 = load i64, i64* %PC.i87
  %9282 = add i64 %9281, 7
  store i64 %9282, i64* %PC.i87
  %9283 = inttoptr i64 %9278 to i32*
  store i32 %9279, i32* %9283
  store %struct.Memory* %loadMem_402b15, %struct.Memory** %MEMORY
  %loadMem_402b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9285 = getelementptr inbounds %struct.GPR, %struct.GPR* %9284, i32 0, i32 33
  %9286 = getelementptr inbounds %struct.Reg, %struct.Reg* %9285, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %9286 to i64*
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9288 = getelementptr inbounds %struct.GPR, %struct.GPR* %9287, i32 0, i32 1
  %9289 = getelementptr inbounds %struct.Reg, %struct.Reg* %9288, i32 0, i32 0
  %RAX.i85 = bitcast %union.anon* %9289 to i64*
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9291 = getelementptr inbounds %struct.GPR, %struct.GPR* %9290, i32 0, i32 15
  %9292 = getelementptr inbounds %struct.Reg, %struct.Reg* %9291, i32 0, i32 0
  %RBP.i86 = bitcast %union.anon* %9292 to i64*
  %9293 = load i64, i64* %RBP.i86
  %9294 = sub i64 %9293, 80
  %9295 = load i64, i64* %PC.i84
  %9296 = add i64 %9295, 3
  store i64 %9296, i64* %PC.i84
  %9297 = inttoptr i64 %9294 to i32*
  %9298 = load i32, i32* %9297
  %9299 = zext i32 %9298 to i64
  store i64 %9299, i64* %RAX.i85, align 8
  store %struct.Memory* %loadMem_402b1c, %struct.Memory** %MEMORY
  %loadMem_402b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9301 = getelementptr inbounds %struct.GPR, %struct.GPR* %9300, i32 0, i32 33
  %9302 = getelementptr inbounds %struct.Reg, %struct.Reg* %9301, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9302 to i64*
  %9303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9304 = getelementptr inbounds %struct.GPR, %struct.GPR* %9303, i32 0, i32 1
  %9305 = getelementptr inbounds %struct.Reg, %struct.Reg* %9304, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %9305 to i64*
  %9306 = load i64, i64* %RAX.i83
  %9307 = load i64, i64* %PC.i82
  %9308 = add i64 %9307, 3
  store i64 %9308, i64* %PC.i82
  %9309 = trunc i64 %9306 to i32
  %9310 = add i32 1, %9309
  %9311 = zext i32 %9310 to i64
  store i64 %9311, i64* %RAX.i83, align 8
  %9312 = icmp ult i32 %9310, %9309
  %9313 = icmp ult i32 %9310, 1
  %9314 = or i1 %9312, %9313
  %9315 = zext i1 %9314 to i8
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9315, i8* %9316, align 1
  %9317 = and i32 %9310, 255
  %9318 = call i32 @llvm.ctpop.i32(i32 %9317)
  %9319 = trunc i32 %9318 to i8
  %9320 = and i8 %9319, 1
  %9321 = xor i8 %9320, 1
  %9322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9321, i8* %9322, align 1
  %9323 = xor i64 1, %9306
  %9324 = trunc i64 %9323 to i32
  %9325 = xor i32 %9324, %9310
  %9326 = lshr i32 %9325, 4
  %9327 = trunc i32 %9326 to i8
  %9328 = and i8 %9327, 1
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9328, i8* %9329, align 1
  %9330 = icmp eq i32 %9310, 0
  %9331 = zext i1 %9330 to i8
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9331, i8* %9332, align 1
  %9333 = lshr i32 %9310, 31
  %9334 = trunc i32 %9333 to i8
  %9335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9334, i8* %9335, align 1
  %9336 = lshr i32 %9309, 31
  %9337 = xor i32 %9333, %9336
  %9338 = add i32 %9337, %9333
  %9339 = icmp eq i32 %9338, 2
  %9340 = zext i1 %9339 to i8
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9340, i8* %9341, align 1
  store %struct.Memory* %loadMem_402b1f, %struct.Memory** %MEMORY
  %loadMem_402b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9343 = getelementptr inbounds %struct.GPR, %struct.GPR* %9342, i32 0, i32 33
  %9344 = getelementptr inbounds %struct.Reg, %struct.Reg* %9343, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %9344 to i64*
  %9345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9346 = getelementptr inbounds %struct.GPR, %struct.GPR* %9345, i32 0, i32 1
  %9347 = getelementptr inbounds %struct.Reg, %struct.Reg* %9346, i32 0, i32 0
  %EAX.i80 = bitcast %union.anon* %9347 to i32*
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9349 = getelementptr inbounds %struct.GPR, %struct.GPR* %9348, i32 0, i32 15
  %9350 = getelementptr inbounds %struct.Reg, %struct.Reg* %9349, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %9350 to i64*
  %9351 = load i64, i64* %RBP.i81
  %9352 = sub i64 %9351, 80
  %9353 = load i32, i32* %EAX.i80
  %9354 = zext i32 %9353 to i64
  %9355 = load i64, i64* %PC.i79
  %9356 = add i64 %9355, 3
  store i64 %9356, i64* %PC.i79
  %9357 = inttoptr i64 %9352 to i32*
  store i32 %9353, i32* %9357
  store %struct.Memory* %loadMem_402b22, %struct.Memory** %MEMORY
  %loadMem_402b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9359 = getelementptr inbounds %struct.GPR, %struct.GPR* %9358, i32 0, i32 33
  %9360 = getelementptr inbounds %struct.Reg, %struct.Reg* %9359, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %9360 to i64*
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9362 = getelementptr inbounds %struct.GPR, %struct.GPR* %9361, i32 0, i32 1
  %9363 = getelementptr inbounds %struct.Reg, %struct.Reg* %9362, i32 0, i32 0
  %RAX.i77 = bitcast %union.anon* %9363 to i64*
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 15
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %9366 to i64*
  %9367 = load i64, i64* %RBP.i78
  %9368 = sub i64 %9367, 1304
  %9369 = load i64, i64* %PC.i76
  %9370 = add i64 %9369, 6
  store i64 %9370, i64* %PC.i76
  %9371 = inttoptr i64 %9368 to i32*
  %9372 = load i32, i32* %9371
  %9373 = zext i32 %9372 to i64
  store i64 %9373, i64* %RAX.i77, align 8
  store %struct.Memory* %loadMem_402b25, %struct.Memory** %MEMORY
  %loadMem_402b2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9375 = getelementptr inbounds %struct.GPR, %struct.GPR* %9374, i32 0, i32 33
  %9376 = getelementptr inbounds %struct.Reg, %struct.Reg* %9375, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9376 to i64*
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9378 = getelementptr inbounds %struct.GPR, %struct.GPR* %9377, i32 0, i32 5
  %9379 = getelementptr inbounds %struct.Reg, %struct.Reg* %9378, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %9379 to i64*
  %9380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9381 = getelementptr inbounds %struct.GPR, %struct.GPR* %9380, i32 0, i32 15
  %9382 = getelementptr inbounds %struct.Reg, %struct.Reg* %9381, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %9382 to i64*
  %9383 = load i64, i64* %RBP.i75
  %9384 = sub i64 %9383, 80
  %9385 = load i64, i64* %PC.i73
  %9386 = add i64 %9385, 4
  store i64 %9386, i64* %PC.i73
  %9387 = inttoptr i64 %9384 to i32*
  %9388 = load i32, i32* %9387
  %9389 = sext i32 %9388 to i64
  store i64 %9389, i64* %RCX.i74, align 8
  store %struct.Memory* %loadMem_402b2b, %struct.Memory** %MEMORY
  %loadMem_402b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 33
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %9392 to i64*
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 1
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %EAX.i70 = bitcast %union.anon* %9395 to i32*
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9397 = getelementptr inbounds %struct.GPR, %struct.GPR* %9396, i32 0, i32 5
  %9398 = getelementptr inbounds %struct.Reg, %struct.Reg* %9397, i32 0, i32 0
  %RCX.i71 = bitcast %union.anon* %9398 to i64*
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9400 = getelementptr inbounds %struct.GPR, %struct.GPR* %9399, i32 0, i32 15
  %9401 = getelementptr inbounds %struct.Reg, %struct.Reg* %9400, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %9401 to i64*
  %9402 = load i64, i64* %RBP.i72
  %9403 = load i64, i64* %RCX.i71
  %9404 = mul i64 %9403, 4
  %9405 = add i64 %9402, -496
  %9406 = add i64 %9405, %9404
  %9407 = load i32, i32* %EAX.i70
  %9408 = zext i32 %9407 to i64
  %9409 = load i64, i64* %PC.i69
  %9410 = add i64 %9409, 7
  store i64 %9410, i64* %PC.i69
  %9411 = inttoptr i64 %9406 to i32*
  store i32 %9407, i32* %9411
  store %struct.Memory* %loadMem_402b2f, %struct.Memory** %MEMORY
  %loadMem_402b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9413 = getelementptr inbounds %struct.GPR, %struct.GPR* %9412, i32 0, i32 33
  %9414 = getelementptr inbounds %struct.Reg, %struct.Reg* %9413, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %9414 to i64*
  %9415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9416 = getelementptr inbounds %struct.GPR, %struct.GPR* %9415, i32 0, i32 1
  %9417 = getelementptr inbounds %struct.Reg, %struct.Reg* %9416, i32 0, i32 0
  %RAX.i67 = bitcast %union.anon* %9417 to i64*
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 15
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %9420 to i64*
  %9421 = load i64, i64* %RBP.i68
  %9422 = sub i64 %9421, 1316
  %9423 = load i64, i64* %PC.i66
  %9424 = add i64 %9423, 6
  store i64 %9424, i64* %PC.i66
  %9425 = inttoptr i64 %9422 to i32*
  %9426 = load i32, i32* %9425
  %9427 = zext i32 %9426 to i64
  store i64 %9427, i64* %RAX.i67, align 8
  store %struct.Memory* %loadMem_402b36, %struct.Memory** %MEMORY
  %loadMem_402b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 33
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %9430 to i64*
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9432 = getelementptr inbounds %struct.GPR, %struct.GPR* %9431, i32 0, i32 5
  %9433 = getelementptr inbounds %struct.Reg, %struct.Reg* %9432, i32 0, i32 0
  %RCX.i64 = bitcast %union.anon* %9433 to i64*
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9435 = getelementptr inbounds %struct.GPR, %struct.GPR* %9434, i32 0, i32 15
  %9436 = getelementptr inbounds %struct.Reg, %struct.Reg* %9435, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %9436 to i64*
  %9437 = load i64, i64* %RBP.i65
  %9438 = sub i64 %9437, 80
  %9439 = load i64, i64* %PC.i63
  %9440 = add i64 %9439, 4
  store i64 %9440, i64* %PC.i63
  %9441 = inttoptr i64 %9438 to i32*
  %9442 = load i32, i32* %9441
  %9443 = sext i32 %9442 to i64
  store i64 %9443, i64* %RCX.i64, align 8
  store %struct.Memory* %loadMem_402b3c, %struct.Memory** %MEMORY
  %loadMem_402b40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9445 = getelementptr inbounds %struct.GPR, %struct.GPR* %9444, i32 0, i32 33
  %9446 = getelementptr inbounds %struct.Reg, %struct.Reg* %9445, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %9446 to i64*
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9448 = getelementptr inbounds %struct.GPR, %struct.GPR* %9447, i32 0, i32 1
  %9449 = getelementptr inbounds %struct.Reg, %struct.Reg* %9448, i32 0, i32 0
  %EAX.i60 = bitcast %union.anon* %9449 to i32*
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9451 = getelementptr inbounds %struct.GPR, %struct.GPR* %9450, i32 0, i32 5
  %9452 = getelementptr inbounds %struct.Reg, %struct.Reg* %9451, i32 0, i32 0
  %RCX.i61 = bitcast %union.anon* %9452 to i64*
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 15
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %RBP.i62 = bitcast %union.anon* %9455 to i64*
  %9456 = load i64, i64* %RBP.i62
  %9457 = load i64, i64* %RCX.i61
  %9458 = mul i64 %9457, 4
  %9459 = add i64 %9456, -896
  %9460 = add i64 %9459, %9458
  %9461 = load i32, i32* %EAX.i60
  %9462 = zext i32 %9461 to i64
  %9463 = load i64, i64* %PC.i59
  %9464 = add i64 %9463, 7
  store i64 %9464, i64* %PC.i59
  %9465 = inttoptr i64 %9460 to i32*
  store i32 %9461, i32* %9465
  store %struct.Memory* %loadMem_402b40, %struct.Memory** %MEMORY
  %loadMem_402b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9467 = getelementptr inbounds %struct.GPR, %struct.GPR* %9466, i32 0, i32 33
  %9468 = getelementptr inbounds %struct.Reg, %struct.Reg* %9467, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9468 to i64*
  %9469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9470 = getelementptr inbounds %struct.GPR, %struct.GPR* %9469, i32 0, i32 1
  %9471 = getelementptr inbounds %struct.Reg, %struct.Reg* %9470, i32 0, i32 0
  %RAX.i57 = bitcast %union.anon* %9471 to i64*
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9473 = getelementptr inbounds %struct.GPR, %struct.GPR* %9472, i32 0, i32 15
  %9474 = getelementptr inbounds %struct.Reg, %struct.Reg* %9473, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %9474 to i64*
  %9475 = load i64, i64* %RBP.i58
  %9476 = sub i64 %9475, 1328
  %9477 = load i64, i64* %PC.i56
  %9478 = add i64 %9477, 6
  store i64 %9478, i64* %PC.i56
  %9479 = inttoptr i64 %9476 to i32*
  %9480 = load i32, i32* %9479
  %9481 = zext i32 %9480 to i64
  store i64 %9481, i64* %RAX.i57, align 8
  store %struct.Memory* %loadMem_402b47, %struct.Memory** %MEMORY
  %loadMem_402b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 33
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %9484 to i64*
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9486 = getelementptr inbounds %struct.GPR, %struct.GPR* %9485, i32 0, i32 5
  %9487 = getelementptr inbounds %struct.Reg, %struct.Reg* %9486, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %9487 to i64*
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9489 = getelementptr inbounds %struct.GPR, %struct.GPR* %9488, i32 0, i32 15
  %9490 = getelementptr inbounds %struct.Reg, %struct.Reg* %9489, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %9490 to i64*
  %9491 = load i64, i64* %RBP.i55
  %9492 = sub i64 %9491, 80
  %9493 = load i64, i64* %PC.i53
  %9494 = add i64 %9493, 4
  store i64 %9494, i64* %PC.i53
  %9495 = inttoptr i64 %9492 to i32*
  %9496 = load i32, i32* %9495
  %9497 = sext i32 %9496 to i64
  store i64 %9497, i64* %RCX.i54, align 8
  store %struct.Memory* %loadMem_402b4d, %struct.Memory** %MEMORY
  %loadMem_402b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9499 = getelementptr inbounds %struct.GPR, %struct.GPR* %9498, i32 0, i32 33
  %9500 = getelementptr inbounds %struct.Reg, %struct.Reg* %9499, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9500 to i64*
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9502 = getelementptr inbounds %struct.GPR, %struct.GPR* %9501, i32 0, i32 1
  %9503 = getelementptr inbounds %struct.Reg, %struct.Reg* %9502, i32 0, i32 0
  %EAX.i50 = bitcast %union.anon* %9503 to i32*
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 5
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %RCX.i51 = bitcast %union.anon* %9506 to i64*
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 15
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %9509 to i64*
  %9510 = load i64, i64* %RBP.i52
  %9511 = load i64, i64* %RCX.i51
  %9512 = mul i64 %9511, 4
  %9513 = add i64 %9510, -1296
  %9514 = add i64 %9513, %9512
  %9515 = load i32, i32* %EAX.i50
  %9516 = zext i32 %9515 to i64
  %9517 = load i64, i64* %PC.i49
  %9518 = add i64 %9517, 7
  store i64 %9518, i64* %PC.i49
  %9519 = inttoptr i64 %9514 to i32*
  store i32 %9515, i32* %9519
  store %struct.Memory* %loadMem_402b51, %struct.Memory** %MEMORY
  %loadMem_402b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9521 = getelementptr inbounds %struct.GPR, %struct.GPR* %9520, i32 0, i32 33
  %9522 = getelementptr inbounds %struct.Reg, %struct.Reg* %9521, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9522 to i64*
  %9523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9524 = getelementptr inbounds %struct.GPR, %struct.GPR* %9523, i32 0, i32 1
  %9525 = getelementptr inbounds %struct.Reg, %struct.Reg* %9524, i32 0, i32 0
  %RAX.i47 = bitcast %union.anon* %9525 to i64*
  %9526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9527 = getelementptr inbounds %struct.GPR, %struct.GPR* %9526, i32 0, i32 15
  %9528 = getelementptr inbounds %struct.Reg, %struct.Reg* %9527, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %9528 to i64*
  %9529 = load i64, i64* %RBP.i48
  %9530 = sub i64 %9529, 80
  %9531 = load i64, i64* %PC.i46
  %9532 = add i64 %9531, 3
  store i64 %9532, i64* %PC.i46
  %9533 = inttoptr i64 %9530 to i32*
  %9534 = load i32, i32* %9533
  %9535 = zext i32 %9534 to i64
  store i64 %9535, i64* %RAX.i47, align 8
  store %struct.Memory* %loadMem_402b58, %struct.Memory** %MEMORY
  %loadMem_402b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9537 = getelementptr inbounds %struct.GPR, %struct.GPR* %9536, i32 0, i32 33
  %9538 = getelementptr inbounds %struct.Reg, %struct.Reg* %9537, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %9538 to i64*
  %9539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9540 = getelementptr inbounds %struct.GPR, %struct.GPR* %9539, i32 0, i32 1
  %9541 = getelementptr inbounds %struct.Reg, %struct.Reg* %9540, i32 0, i32 0
  %RAX.i45 = bitcast %union.anon* %9541 to i64*
  %9542 = load i64, i64* %RAX.i45
  %9543 = load i64, i64* %PC.i44
  %9544 = add i64 %9543, 3
  store i64 %9544, i64* %PC.i44
  %9545 = trunc i64 %9542 to i32
  %9546 = add i32 1, %9545
  %9547 = zext i32 %9546 to i64
  store i64 %9547, i64* %RAX.i45, align 8
  %9548 = icmp ult i32 %9546, %9545
  %9549 = icmp ult i32 %9546, 1
  %9550 = or i1 %9548, %9549
  %9551 = zext i1 %9550 to i8
  %9552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9551, i8* %9552, align 1
  %9553 = and i32 %9546, 255
  %9554 = call i32 @llvm.ctpop.i32(i32 %9553)
  %9555 = trunc i32 %9554 to i8
  %9556 = and i8 %9555, 1
  %9557 = xor i8 %9556, 1
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9557, i8* %9558, align 1
  %9559 = xor i64 1, %9542
  %9560 = trunc i64 %9559 to i32
  %9561 = xor i32 %9560, %9546
  %9562 = lshr i32 %9561, 4
  %9563 = trunc i32 %9562 to i8
  %9564 = and i8 %9563, 1
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9564, i8* %9565, align 1
  %9566 = icmp eq i32 %9546, 0
  %9567 = zext i1 %9566 to i8
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9567, i8* %9568, align 1
  %9569 = lshr i32 %9546, 31
  %9570 = trunc i32 %9569 to i8
  %9571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9570, i8* %9571, align 1
  %9572 = lshr i32 %9545, 31
  %9573 = xor i32 %9569, %9572
  %9574 = add i32 %9573, %9569
  %9575 = icmp eq i32 %9574, 2
  %9576 = zext i1 %9575 to i8
  %9577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9576, i8* %9577, align 1
  store %struct.Memory* %loadMem_402b5b, %struct.Memory** %MEMORY
  %loadMem_402b5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9579 = getelementptr inbounds %struct.GPR, %struct.GPR* %9578, i32 0, i32 33
  %9580 = getelementptr inbounds %struct.Reg, %struct.Reg* %9579, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9580 to i64*
  %9581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9582 = getelementptr inbounds %struct.GPR, %struct.GPR* %9581, i32 0, i32 1
  %9583 = getelementptr inbounds %struct.Reg, %struct.Reg* %9582, i32 0, i32 0
  %EAX.i42 = bitcast %union.anon* %9583 to i32*
  %9584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9585 = getelementptr inbounds %struct.GPR, %struct.GPR* %9584, i32 0, i32 15
  %9586 = getelementptr inbounds %struct.Reg, %struct.Reg* %9585, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %9586 to i64*
  %9587 = load i64, i64* %RBP.i43
  %9588 = sub i64 %9587, 80
  %9589 = load i32, i32* %EAX.i42
  %9590 = zext i32 %9589 to i64
  %9591 = load i64, i64* %PC.i41
  %9592 = add i64 %9591, 3
  store i64 %9592, i64* %PC.i41
  %9593 = inttoptr i64 %9588 to i32*
  store i32 %9589, i32* %9593
  store %struct.Memory* %loadMem_402b5e, %struct.Memory** %MEMORY
  %loadMem_402b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9595 = getelementptr inbounds %struct.GPR, %struct.GPR* %9594, i32 0, i32 33
  %9596 = getelementptr inbounds %struct.Reg, %struct.Reg* %9595, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9596 to i64*
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9598 = getelementptr inbounds %struct.GPR, %struct.GPR* %9597, i32 0, i32 1
  %9599 = getelementptr inbounds %struct.Reg, %struct.Reg* %9598, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %9599 to i64*
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9601 = getelementptr inbounds %struct.GPR, %struct.GPR* %9600, i32 0, i32 15
  %9602 = getelementptr inbounds %struct.Reg, %struct.Reg* %9601, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %9602 to i64*
  %9603 = load i64, i64* %RBP.i40
  %9604 = sub i64 %9603, 1300
  %9605 = load i64, i64* %PC.i38
  %9606 = add i64 %9605, 6
  store i64 %9606, i64* %PC.i38
  %9607 = inttoptr i64 %9604 to i32*
  %9608 = load i32, i32* %9607
  %9609 = zext i32 %9608 to i64
  store i64 %9609, i64* %RAX.i39, align 8
  store %struct.Memory* %loadMem_402b61, %struct.Memory** %MEMORY
  %loadMem_402b67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9611 = getelementptr inbounds %struct.GPR, %struct.GPR* %9610, i32 0, i32 33
  %9612 = getelementptr inbounds %struct.Reg, %struct.Reg* %9611, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %9612 to i64*
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9614 = getelementptr inbounds %struct.GPR, %struct.GPR* %9613, i32 0, i32 5
  %9615 = getelementptr inbounds %struct.Reg, %struct.Reg* %9614, i32 0, i32 0
  %RCX.i36 = bitcast %union.anon* %9615 to i64*
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9617 = getelementptr inbounds %struct.GPR, %struct.GPR* %9616, i32 0, i32 15
  %9618 = getelementptr inbounds %struct.Reg, %struct.Reg* %9617, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %9618 to i64*
  %9619 = load i64, i64* %RBP.i37
  %9620 = sub i64 %9619, 80
  %9621 = load i64, i64* %PC.i35
  %9622 = add i64 %9621, 4
  store i64 %9622, i64* %PC.i35
  %9623 = inttoptr i64 %9620 to i32*
  %9624 = load i32, i32* %9623
  %9625 = sext i32 %9624 to i64
  store i64 %9625, i64* %RCX.i36, align 8
  store %struct.Memory* %loadMem_402b67, %struct.Memory** %MEMORY
  %loadMem_402b6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9627 = getelementptr inbounds %struct.GPR, %struct.GPR* %9626, i32 0, i32 33
  %9628 = getelementptr inbounds %struct.Reg, %struct.Reg* %9627, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %9628 to i64*
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9630 = getelementptr inbounds %struct.GPR, %struct.GPR* %9629, i32 0, i32 1
  %9631 = getelementptr inbounds %struct.Reg, %struct.Reg* %9630, i32 0, i32 0
  %EAX.i32 = bitcast %union.anon* %9631 to i32*
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9633 = getelementptr inbounds %struct.GPR, %struct.GPR* %9632, i32 0, i32 5
  %9634 = getelementptr inbounds %struct.Reg, %struct.Reg* %9633, i32 0, i32 0
  %RCX.i33 = bitcast %union.anon* %9634 to i64*
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9636 = getelementptr inbounds %struct.GPR, %struct.GPR* %9635, i32 0, i32 15
  %9637 = getelementptr inbounds %struct.Reg, %struct.Reg* %9636, i32 0, i32 0
  %RBP.i34 = bitcast %union.anon* %9637 to i64*
  %9638 = load i64, i64* %RBP.i34
  %9639 = load i64, i64* %RCX.i33
  %9640 = mul i64 %9639, 4
  %9641 = add i64 %9638, -496
  %9642 = add i64 %9641, %9640
  %9643 = load i32, i32* %EAX.i32
  %9644 = zext i32 %9643 to i64
  %9645 = load i64, i64* %PC.i31
  %9646 = add i64 %9645, 7
  store i64 %9646, i64* %PC.i31
  %9647 = inttoptr i64 %9642 to i32*
  store i32 %9643, i32* %9647
  store %struct.Memory* %loadMem_402b6b, %struct.Memory** %MEMORY
  %loadMem_402b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9649 = getelementptr inbounds %struct.GPR, %struct.GPR* %9648, i32 0, i32 33
  %9650 = getelementptr inbounds %struct.Reg, %struct.Reg* %9649, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %9650 to i64*
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9652 = getelementptr inbounds %struct.GPR, %struct.GPR* %9651, i32 0, i32 1
  %9653 = getelementptr inbounds %struct.Reg, %struct.Reg* %9652, i32 0, i32 0
  %RAX.i29 = bitcast %union.anon* %9653 to i64*
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9655 = getelementptr inbounds %struct.GPR, %struct.GPR* %9654, i32 0, i32 15
  %9656 = getelementptr inbounds %struct.Reg, %struct.Reg* %9655, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %9656 to i64*
  %9657 = load i64, i64* %RBP.i30
  %9658 = sub i64 %9657, 1312
  %9659 = load i64, i64* %PC.i28
  %9660 = add i64 %9659, 6
  store i64 %9660, i64* %PC.i28
  %9661 = inttoptr i64 %9658 to i32*
  %9662 = load i32, i32* %9661
  %9663 = zext i32 %9662 to i64
  store i64 %9663, i64* %RAX.i29, align 8
  store %struct.Memory* %loadMem_402b72, %struct.Memory** %MEMORY
  %loadMem_402b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9665 = getelementptr inbounds %struct.GPR, %struct.GPR* %9664, i32 0, i32 33
  %9666 = getelementptr inbounds %struct.Reg, %struct.Reg* %9665, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %9666 to i64*
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9668 = getelementptr inbounds %struct.GPR, %struct.GPR* %9667, i32 0, i32 5
  %9669 = getelementptr inbounds %struct.Reg, %struct.Reg* %9668, i32 0, i32 0
  %RCX.i26 = bitcast %union.anon* %9669 to i64*
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9671 = getelementptr inbounds %struct.GPR, %struct.GPR* %9670, i32 0, i32 15
  %9672 = getelementptr inbounds %struct.Reg, %struct.Reg* %9671, i32 0, i32 0
  %RBP.i27 = bitcast %union.anon* %9672 to i64*
  %9673 = load i64, i64* %RBP.i27
  %9674 = sub i64 %9673, 80
  %9675 = load i64, i64* %PC.i25
  %9676 = add i64 %9675, 4
  store i64 %9676, i64* %PC.i25
  %9677 = inttoptr i64 %9674 to i32*
  %9678 = load i32, i32* %9677
  %9679 = sext i32 %9678 to i64
  store i64 %9679, i64* %RCX.i26, align 8
  store %struct.Memory* %loadMem_402b78, %struct.Memory** %MEMORY
  %loadMem_402b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9681 = getelementptr inbounds %struct.GPR, %struct.GPR* %9680, i32 0, i32 33
  %9682 = getelementptr inbounds %struct.Reg, %struct.Reg* %9681, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %9682 to i64*
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9684 = getelementptr inbounds %struct.GPR, %struct.GPR* %9683, i32 0, i32 1
  %9685 = getelementptr inbounds %struct.Reg, %struct.Reg* %9684, i32 0, i32 0
  %EAX.i22 = bitcast %union.anon* %9685 to i32*
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9687 = getelementptr inbounds %struct.GPR, %struct.GPR* %9686, i32 0, i32 5
  %9688 = getelementptr inbounds %struct.Reg, %struct.Reg* %9687, i32 0, i32 0
  %RCX.i23 = bitcast %union.anon* %9688 to i64*
  %9689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9690 = getelementptr inbounds %struct.GPR, %struct.GPR* %9689, i32 0, i32 15
  %9691 = getelementptr inbounds %struct.Reg, %struct.Reg* %9690, i32 0, i32 0
  %RBP.i24 = bitcast %union.anon* %9691 to i64*
  %9692 = load i64, i64* %RBP.i24
  %9693 = load i64, i64* %RCX.i23
  %9694 = mul i64 %9693, 4
  %9695 = add i64 %9692, -896
  %9696 = add i64 %9695, %9694
  %9697 = load i32, i32* %EAX.i22
  %9698 = zext i32 %9697 to i64
  %9699 = load i64, i64* %PC.i21
  %9700 = add i64 %9699, 7
  store i64 %9700, i64* %PC.i21
  %9701 = inttoptr i64 %9696 to i32*
  store i32 %9697, i32* %9701
  store %struct.Memory* %loadMem_402b7c, %struct.Memory** %MEMORY
  %loadMem_402b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9703 = getelementptr inbounds %struct.GPR, %struct.GPR* %9702, i32 0, i32 33
  %9704 = getelementptr inbounds %struct.Reg, %struct.Reg* %9703, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %9704 to i64*
  %9705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9706 = getelementptr inbounds %struct.GPR, %struct.GPR* %9705, i32 0, i32 1
  %9707 = getelementptr inbounds %struct.Reg, %struct.Reg* %9706, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %9707 to i64*
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9709 = getelementptr inbounds %struct.GPR, %struct.GPR* %9708, i32 0, i32 15
  %9710 = getelementptr inbounds %struct.Reg, %struct.Reg* %9709, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %9710 to i64*
  %9711 = load i64, i64* %RBP.i20
  %9712 = sub i64 %9711, 1324
  %9713 = load i64, i64* %PC.i18
  %9714 = add i64 %9713, 6
  store i64 %9714, i64* %PC.i18
  %9715 = inttoptr i64 %9712 to i32*
  %9716 = load i32, i32* %9715
  %9717 = zext i32 %9716 to i64
  store i64 %9717, i64* %RAX.i19, align 8
  store %struct.Memory* %loadMem_402b83, %struct.Memory** %MEMORY
  %loadMem_402b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9719 = getelementptr inbounds %struct.GPR, %struct.GPR* %9718, i32 0, i32 33
  %9720 = getelementptr inbounds %struct.Reg, %struct.Reg* %9719, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %9720 to i64*
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 5
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %RCX.i16 = bitcast %union.anon* %9723 to i64*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 15
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %9726 to i64*
  %9727 = load i64, i64* %RBP.i17
  %9728 = sub i64 %9727, 80
  %9729 = load i64, i64* %PC.i15
  %9730 = add i64 %9729, 4
  store i64 %9730, i64* %PC.i15
  %9731 = inttoptr i64 %9728 to i32*
  %9732 = load i32, i32* %9731
  %9733 = sext i32 %9732 to i64
  store i64 %9733, i64* %RCX.i16, align 8
  store %struct.Memory* %loadMem_402b89, %struct.Memory** %MEMORY
  %loadMem_402b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 33
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %9736 to i64*
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9738 = getelementptr inbounds %struct.GPR, %struct.GPR* %9737, i32 0, i32 1
  %9739 = getelementptr inbounds %struct.Reg, %struct.Reg* %9738, i32 0, i32 0
  %EAX.i13 = bitcast %union.anon* %9739 to i32*
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9741 = getelementptr inbounds %struct.GPR, %struct.GPR* %9740, i32 0, i32 5
  %9742 = getelementptr inbounds %struct.Reg, %struct.Reg* %9741, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9742 to i64*
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9744 = getelementptr inbounds %struct.GPR, %struct.GPR* %9743, i32 0, i32 15
  %9745 = getelementptr inbounds %struct.Reg, %struct.Reg* %9744, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9745 to i64*
  %9746 = load i64, i64* %RBP.i14
  %9747 = load i64, i64* %RCX.i
  %9748 = mul i64 %9747, 4
  %9749 = add i64 %9746, -1296
  %9750 = add i64 %9749, %9748
  %9751 = load i32, i32* %EAX.i13
  %9752 = zext i32 %9751 to i64
  %9753 = load i64, i64* %PC.i12
  %9754 = add i64 %9753, 7
  store i64 %9754, i64* %PC.i12
  %9755 = inttoptr i64 %9750 to i32*
  store i32 %9751, i32* %9755
  store %struct.Memory* %loadMem_402b8d, %struct.Memory** %MEMORY
  %loadMem_402b94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 33
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9758 to i64*
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 1
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %9761 to i64*
  %9762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9763 = getelementptr inbounds %struct.GPR, %struct.GPR* %9762, i32 0, i32 15
  %9764 = getelementptr inbounds %struct.Reg, %struct.Reg* %9763, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %9764 to i64*
  %9765 = load i64, i64* %RBP.i11
  %9766 = sub i64 %9765, 80
  %9767 = load i64, i64* %PC.i9
  %9768 = add i64 %9767, 3
  store i64 %9768, i64* %PC.i9
  %9769 = inttoptr i64 %9766 to i32*
  %9770 = load i32, i32* %9769
  %9771 = zext i32 %9770 to i64
  store i64 %9771, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_402b94, %struct.Memory** %MEMORY
  %loadMem_402b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9773 = getelementptr inbounds %struct.GPR, %struct.GPR* %9772, i32 0, i32 33
  %9774 = getelementptr inbounds %struct.Reg, %struct.Reg* %9773, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %9774 to i64*
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 1
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9777 to i64*
  %9778 = load i64, i64* %RAX.i
  %9779 = load i64, i64* %PC.i8
  %9780 = add i64 %9779, 3
  store i64 %9780, i64* %PC.i8
  %9781 = trunc i64 %9778 to i32
  %9782 = add i32 1, %9781
  %9783 = zext i32 %9782 to i64
  store i64 %9783, i64* %RAX.i, align 8
  %9784 = icmp ult i32 %9782, %9781
  %9785 = icmp ult i32 %9782, 1
  %9786 = or i1 %9784, %9785
  %9787 = zext i1 %9786 to i8
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9787, i8* %9788, align 1
  %9789 = and i32 %9782, 255
  %9790 = call i32 @llvm.ctpop.i32(i32 %9789)
  %9791 = trunc i32 %9790 to i8
  %9792 = and i8 %9791, 1
  %9793 = xor i8 %9792, 1
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9793, i8* %9794, align 1
  %9795 = xor i64 1, %9778
  %9796 = trunc i64 %9795 to i32
  %9797 = xor i32 %9796, %9782
  %9798 = lshr i32 %9797, 4
  %9799 = trunc i32 %9798 to i8
  %9800 = and i8 %9799, 1
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9800, i8* %9801, align 1
  %9802 = icmp eq i32 %9782, 0
  %9803 = zext i1 %9802 to i8
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9803, i8* %9804, align 1
  %9805 = lshr i32 %9782, 31
  %9806 = trunc i32 %9805 to i8
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9806, i8* %9807, align 1
  %9808 = lshr i32 %9781, 31
  %9809 = xor i32 %9805, %9808
  %9810 = add i32 %9809, %9805
  %9811 = icmp eq i32 %9810, 2
  %9812 = zext i1 %9811 to i8
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9812, i8* %9813, align 1
  store %struct.Memory* %loadMem_402b97, %struct.Memory** %MEMORY
  %loadMem_402b9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 33
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %9816 to i64*
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9818 = getelementptr inbounds %struct.GPR, %struct.GPR* %9817, i32 0, i32 1
  %9819 = getelementptr inbounds %struct.Reg, %struct.Reg* %9818, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9819 to i32*
  %9820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9821 = getelementptr inbounds %struct.GPR, %struct.GPR* %9820, i32 0, i32 15
  %9822 = getelementptr inbounds %struct.Reg, %struct.Reg* %9821, i32 0, i32 0
  %RBP.i7 = bitcast %union.anon* %9822 to i64*
  %9823 = load i64, i64* %RBP.i7
  %9824 = sub i64 %9823, 80
  %9825 = load i32, i32* %EAX.i
  %9826 = zext i32 %9825 to i64
  %9827 = load i64, i64* %PC.i6
  %9828 = add i64 %9827, 3
  store i64 %9828, i64* %PC.i6
  %9829 = inttoptr i64 %9824 to i32*
  store i32 %9825, i32* %9829
  store %struct.Memory* %loadMem_402b9a, %struct.Memory** %MEMORY
  %loadMem_402b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9831 = getelementptr inbounds %struct.GPR, %struct.GPR* %9830, i32 0, i32 33
  %9832 = getelementptr inbounds %struct.Reg, %struct.Reg* %9831, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9832 to i64*
  %9833 = load i64, i64* %PC.i5
  %9834 = add i64 %9833, -1969
  %9835 = load i64, i64* %PC.i5
  %9836 = add i64 %9835, 5
  store i64 %9836, i64* %PC.i5
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9834, i64* %9837, align 8
  store %struct.Memory* %loadMem_402b9d, %struct.Memory** %MEMORY
  br label %block_.L_4023ec

block_.L_402ba2:                                  ; preds = %block_40248e, %block_.L_4023ec
  %loadMem_402ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 33
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9840 to i64*
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9842 = getelementptr inbounds %struct.GPR, %struct.GPR* %9841, i32 0, i32 13
  %9843 = getelementptr inbounds %struct.Reg, %struct.Reg* %9842, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9843 to i64*
  %9844 = load i64, i64* %RSP.i
  %9845 = load i64, i64* %PC.i4
  %9846 = add i64 %9845, 7
  store i64 %9846, i64* %PC.i4
  %9847 = add i64 1424, %9844
  store i64 %9847, i64* %RSP.i, align 8
  %9848 = icmp ult i64 %9847, %9844
  %9849 = icmp ult i64 %9847, 1424
  %9850 = or i1 %9848, %9849
  %9851 = zext i1 %9850 to i8
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9851, i8* %9852, align 1
  %9853 = trunc i64 %9847 to i32
  %9854 = and i32 %9853, 255
  %9855 = call i32 @llvm.ctpop.i32(i32 %9854)
  %9856 = trunc i32 %9855 to i8
  %9857 = and i8 %9856, 1
  %9858 = xor i8 %9857, 1
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9858, i8* %9859, align 1
  %9860 = xor i64 1424, %9844
  %9861 = xor i64 %9860, %9847
  %9862 = lshr i64 %9861, 4
  %9863 = trunc i64 %9862 to i8
  %9864 = and i8 %9863, 1
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9864, i8* %9865, align 1
  %9866 = icmp eq i64 %9847, 0
  %9867 = zext i1 %9866 to i8
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9867, i8* %9868, align 1
  %9869 = lshr i64 %9847, 63
  %9870 = trunc i64 %9869 to i8
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9870, i8* %9871, align 1
  %9872 = lshr i64 %9844, 63
  %9873 = xor i64 %9869, %9872
  %9874 = add i64 %9873, %9869
  %9875 = icmp eq i64 %9874, 2
  %9876 = zext i1 %9875 to i8
  %9877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9876, i8* %9877, align 1
  store %struct.Memory* %loadMem_402ba2, %struct.Memory** %MEMORY
  %loadMem_402ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9879 = getelementptr inbounds %struct.GPR, %struct.GPR* %9878, i32 0, i32 33
  %9880 = getelementptr inbounds %struct.Reg, %struct.Reg* %9879, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9880 to i64*
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9882 = getelementptr inbounds %struct.GPR, %struct.GPR* %9881, i32 0, i32 15
  %9883 = getelementptr inbounds %struct.Reg, %struct.Reg* %9882, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9883 to i64*
  %9884 = load i64, i64* %PC.i2
  %9885 = add i64 %9884, 1
  store i64 %9885, i64* %PC.i2
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9887 = load i64, i64* %9886, align 8
  %9888 = add i64 %9887, 8
  %9889 = inttoptr i64 %9887 to i64*
  %9890 = load i64, i64* %9889
  store i64 %9890, i64* %RBP.i3, align 8
  store i64 %9888, i64* %9886, align 8
  store %struct.Memory* %loadMem_402ba9, %struct.Memory** %MEMORY
  %loadMem_402baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9892 = getelementptr inbounds %struct.GPR, %struct.GPR* %9891, i32 0, i32 33
  %9893 = getelementptr inbounds %struct.Reg, %struct.Reg* %9892, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9893 to i64*
  %9894 = load i64, i64* %PC.i1
  %9895 = add i64 %9894, 1
  store i64 %9895, i64* %PC.i1
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9898 = load i64, i64* %9897, align 8
  %9899 = inttoptr i64 %9898 to i64*
  %9900 = load i64, i64* %9899
  store i64 %9900, i64* %9896, align 8
  %9901 = add i64 %9898, 8
  store i64 %9901, i64* %9897, align 8
  store %struct.Memory* %loadMem_402baa, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_402baa
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x590___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 1424
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 1424
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 1424, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rbp____r10d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r8d__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r10d__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x1f0__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -496
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x24__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x380__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -896
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x28__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x510__rbp__rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RAX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1296
  %19 = add i64 %18, %17
  %20 = load i32, i32* %ECX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_402ba2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x64__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 100
  %16 = icmp ult i32 %14, 100
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 100
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_40240a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3e9___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1001, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.BZ2_bz__AssertH__fail(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1f0__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -496
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x380__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -896
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x510__rbp__rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1296
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 7
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to i32*
  %23 = load i32, i32* %22
  %24 = zext i32 %23 to i64
  store i64 %24, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 20
  %14 = icmp ult i32 %9, 20
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 20, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_402456(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xe__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 14
  %16 = icmp ult i32 %14, 14
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 14
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_402498(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 84
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.mainSimpleSort(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  %13 = load i32, i32* %12
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14, align 1
  %15 = and i32 %13, 255
  %16 = call i32 @llvm.ctpop.i32(i32 %15)
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  %22 = icmp eq i32 %13, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %13, 31
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %13, 31
  %29 = xor i32 %25, %28
  %30 = add i32 %29, %28
  %31 = icmp eq i32 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_402493(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_402ba2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4023ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x54__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx__rdx_4____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x5c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb___rax__rcx_1____dil(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RCX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  store i8 %22, i8* %DIL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x58__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb___rax__rcx_1____r8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RCX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i8*
  %22 = load i8, i8* %21
  store i8 %22, i8* %R8B, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x58__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_sarl__0x1___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 32
  %13 = ashr i64 %12, 33
  %14 = trunc i64 %9 to i8
  %15 = and i8 %14, 1
  %16 = trunc i64 %13 to i32
  %17 = and i64 %13, 4294967295
  store i64 %17, i64* %RSI, align 8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %18, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %20 = and i32 %16, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  store i8 %24, i8* %19, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %27 = icmp eq i32 %16, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %30 = lshr i32 %16, 31
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %29, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__esi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__dil___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDI = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %DIL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__r8b___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 9
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RSI = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %R8B
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rax__rcx_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.mmed3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl__al___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %AL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = and i64 %14, 255
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x3c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_402518(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 56
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_402529(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4025bf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl___rax__rcx_1____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = inttoptr i64 %17 to i8*
  %21 = load i8, i8* %20
  %22 = zext i8 %21 to i64
  store i64 %22, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x4c__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RSI, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 68
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4025a2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x34__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x538__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1336
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = inttoptr i64 %18 to i32*
  store i32 %19, i32* %23
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x538__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1336
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4025b1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x34__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4025c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4025d5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40266b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40264e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x38__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x53c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1340
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x40__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x53c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1340
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_40265d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40267c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4026cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x540__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1344
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x540__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_402513(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 60
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_402712(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1f0__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -496
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x380__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -896
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x510__rbp__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RBP
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %15, -1296
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EAX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 7
  store i64 %23, i64* %PC
  %24 = inttoptr i64 %19 to i32*
  store i32 %20, i32* %24
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x34__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_402737(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x570__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1392
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_402743(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x3c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 60
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x570__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x544__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1348
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 68
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x548__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1352
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1356
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x54c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1356
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4027ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x544__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x550__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1360
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x548__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x550__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x544__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1348
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x544__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1348
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x548__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x548__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1352
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1356
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x54c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1356
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40276a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x40__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x40__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x38__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_402812(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x574__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40281e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x38__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x574__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1396
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x554__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1364
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x558__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1368
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x48__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x55c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1372
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x55c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1372
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4028cb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x554__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x560__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1376
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x558__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x560__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x554__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1364
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x554__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1364
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x558__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x558__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1368
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x55c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1372
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x55c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1372
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_402848(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x34__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x51c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x528__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1320
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x534__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x518__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1304
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x524__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x530__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1328
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x514__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x520__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1312
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x52c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1324
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x528__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x51c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1308
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x524__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x518__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1304
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4029d1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x51c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x564__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x518__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x564__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x524__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x534__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x530__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x518__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1304
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x520__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x514__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1300
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_402a5d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x568__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1384
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x514__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x568__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x520__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x52c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1324
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_402ae9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x56c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x56c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x590___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 1424, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1424
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1424, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
